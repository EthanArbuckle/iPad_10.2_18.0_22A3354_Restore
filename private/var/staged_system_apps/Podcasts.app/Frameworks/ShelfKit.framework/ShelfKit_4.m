uint64_t type metadata accessor for ShelfError(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C1758, (uint64_t)&nominal type descriptor for ShelfError);
}

_OWORD *initializeWithTake for ShelfError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unsigned int (**v17)(_OWORD *, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  int *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  int *v63;
  uint64_t v64;
  _OWORD *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  char *v75;
  uint64_t v76;
  _OWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _OWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD *v88;
  __int128 v89;
  uint64_t v90;
  _OWORD *v91;
  char *v92;
  int *v93;
  _OWORD *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  _OWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  _OWORD *v107;
  uint64_t v108;
  _OWORD *v109;
  _OWORD *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD *v121;
  _OWORD *v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _OWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  unsigned int (*v163)(char *, uint64_t, uint64_t);
  uint64_t v164;
  int *v165;
  unsigned int (*v166)(char *, uint64_t, uint64_t);
  void *__dst;
  _OWORD *__dsta;
  void (**__dstb)(void *, const void *, _QWORD);
  unsigned int (*v170)(char *, uint64_t, uint64_t);
  char *v171;
  _OWORD *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for ModernShelf(0);
    v7 = v6[5];
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for Header(0);
    v158 = *(_QWORD *)(v10 - 8);
    v177 = a3;
    v178 = v10;
    v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48);
    if (v170((char *)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v12 = v9[1];
      *v8 = *v9;
      v8[1] = v12;
      v8[2] = v9[2];
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      v13 = *(int *)(v10 + 36);
      v14 = (_OWORD *)((char *)v8 + v13);
      v15 = (_OWORD *)((char *)v9 + v13);
      v16 = type metadata accessor for ActionMenu(0);
      v17 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v16 - 8);
      if (v17[6](v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        __dst = v17;
        v19 = v15[1];
        *v14 = *v15;
        v14[1] = v19;
        v14[2] = v15[2];
        v174 = v16;
        v20 = *(int *)(v16 + 28);
        v21 = (_OWORD *)((char *)v14 + v20);
        v22 = (_OWORD *)((char *)v15 + v20);
        v23 = (int *)type metadata accessor for ArtworkModel(0);
        v164 = *((_QWORD *)v23 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v164 + 48))(v22, 1, v23))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v25 = v22[1];
          *v21 = *v22;
          v21[1] = v25;
          *((_BYTE *)v21 + 32) = *((_BYTE *)v22 + 32);
          *(_OWORD *)((char *)v21 + 40) = *(_OWORD *)((char *)v22 + 40);
          *((_QWORD *)v21 + 7) = *((_QWORD *)v22 + 7);
          *((_BYTE *)v21 + 64) = *((_BYTE *)v22 + 64);
          *(_OWORD *)((char *)v21 + 113) = *(_OWORD *)((char *)v22 + 113);
          *(_OWORD *)((char *)v21 + 104) = *(_OWORD *)((char *)v22 + 104);
          *(_OWORD *)((char *)v21 + 88) = *(_OWORD *)((char *)v22 + 88);
          *(_OWORD *)((char *)v21 + 72) = *(_OWORD *)((char *)v22 + 72);
          *((_BYTE *)v21 + 129) = *((_BYTE *)v22 + 129);
          v26 = v23[11];
          v159 = (char *)v22 + v26;
          v161 = (char *)v21 + v26;
          v27 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v161, v159, v27);
          *(_OWORD *)((char *)v21 + v23[12]) = *(_OWORD *)((char *)v22 + v23[12]);
          *((_BYTE *)v21 + v23[13]) = *((_BYTE *)v22 + v23[13]);
          *((_BYTE *)v21 + v23[14]) = *((_BYTE *)v22 + v23[14]);
          *((_BYTE *)v21 + v23[15]) = *((_BYTE *)v22 + v23[15]);
          *(_OWORD *)((char *)v21 + v23[16]) = *(_OWORD *)((char *)v22 + v23[16]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v164 + 56))(v21, 0, 1, v23);
        }
        v10 = v178;
        v16 = v174;
        *(_QWORD *)((char *)v14 + *(int *)(v174 + 32)) = *(_QWORD *)((char *)v15 + *(int *)(v174 + 32));
        (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dst + 7))(v14, 0, 1, v174);
      }
      v28 = *(int *)(v10 + 40);
      v29 = (_OWORD *)((char *)v8 + v28);
      v30 = (_OWORD *)((char *)v9 + v28);
      v31 = type metadata accessor for Header.PrimaryAction(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
        {
          v34 = v30[1];
          *v29 = *v30;
          v29[1] = v34;
          v29[2] = v30[2];
          v175 = v16;
          v35 = *(int *)(v16 + 28);
          __dsta = (_OWORD *)((char *)v29 + v35);
          v36 = (_OWORD *)((char *)v30 + v35);
          v37 = type metadata accessor for ArtworkModel(0);
          v162 = *(_QWORD *)(v37 - 8);
          v165 = (int *)v37;
          if ((*(unsigned int (**)(_OWORD *, uint64_t))(v162 + 48))(v36, 1))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(__dsta, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            v39 = v36[1];
            *__dsta = *v36;
            __dsta[1] = v39;
            *((_BYTE *)__dsta + 32) = *((_BYTE *)v36 + 32);
            *(_OWORD *)((char *)__dsta + 40) = *(_OWORD *)((char *)v36 + 40);
            *((_QWORD *)__dsta + 7) = *((_QWORD *)v36 + 7);
            *((_BYTE *)__dsta + 64) = *((_BYTE *)v36 + 64);
            *(_OWORD *)((char *)__dsta + 113) = *(_OWORD *)((char *)v36 + 113);
            *(_OWORD *)((char *)__dsta + 104) = *(_OWORD *)((char *)v36 + 104);
            *(_OWORD *)((char *)__dsta + 88) = *(_OWORD *)((char *)v36 + 88);
            *(_OWORD *)((char *)__dsta + 72) = *(_OWORD *)((char *)v36 + 72);
            *((_BYTE *)__dsta + 129) = *((_BYTE *)v36 + 129);
            v40 = v165[11];
            v153 = (char *)v36 + v40;
            v156 = (char *)__dsta + v40;
            v41 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v156, v153, v41);
            *(_OWORD *)((char *)__dsta + v165[12]) = *(_OWORD *)((char *)v36 + v165[12]);
            *((_BYTE *)__dsta + v165[13]) = *((_BYTE *)v36 + v165[13]);
            *((_BYTE *)__dsta + v165[14]) = *((_BYTE *)v36 + v165[14]);
            *((_BYTE *)__dsta + v165[15]) = *((_BYTE *)v36 + v165[15]);
            *(_OWORD *)((char *)__dsta + v165[16]) = *(_OWORD *)((char *)v36 + v165[16]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t))(v162 + 56))(__dsta, 0, 1);
          }
          *(_QWORD *)((char *)v29 + *(int *)(v175 + 32)) = *(_QWORD *)((char *)v30 + *(int *)(v175 + 32));
          swift_storeEnumTagMultiPayload(v29, v31, 1);
        }
        else
        {
          memcpy(v29, v30, *(_QWORD *)(v32 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(_QWORD *)((char *)v8 + *(int *)(v178 + 44)) = *(_QWORD *)((char *)v9 + *(int *)(v178 + 44));
      v42 = *(int *)(v178 + 48);
      v43 = (_OWORD *)((char *)v8 + v42);
      v44 = (_OWORD *)((char *)v9 + v42);
      v45 = (int *)type metadata accessor for ArtworkModel(0);
      v46 = *((_QWORD *)v45 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v46 + 48))(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v48 = v44[1];
        *v43 = *v44;
        v43[1] = v48;
        *((_BYTE *)v43 + 32) = *((_BYTE *)v44 + 32);
        *(_OWORD *)((char *)v43 + 40) = *(_OWORD *)((char *)v44 + 40);
        *((_QWORD *)v43 + 7) = *((_QWORD *)v44 + 7);
        *((_BYTE *)v43 + 64) = *((_BYTE *)v44 + 64);
        *(_OWORD *)((char *)v43 + 113) = *(_OWORD *)((char *)v44 + 113);
        *(_OWORD *)((char *)v43 + 104) = *(_OWORD *)((char *)v44 + 104);
        *(_OWORD *)((char *)v43 + 88) = *(_OWORD *)((char *)v44 + 88);
        *(_OWORD *)((char *)v43 + 72) = *(_OWORD *)((char *)v44 + 72);
        *((_BYTE *)v43 + 129) = *((_BYTE *)v44 + 129);
        v49 = v45[11];
        v50 = (char *)v43 + v49;
        v51 = (char *)v44 + v49;
        v52 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        *(_OWORD *)((char *)v43 + v45[12]) = *(_OWORD *)((char *)v44 + v45[12]);
        *((_BYTE *)v43 + v45[13]) = *((_BYTE *)v44 + v45[13]);
        *((_BYTE *)v43 + v45[14]) = *((_BYTE *)v44 + v45[14]);
        *((_BYTE *)v43 + v45[15]) = *((_BYTE *)v44 + v45[15]);
        *(_OWORD *)((char *)v43 + v45[16]) = *(_OWORD *)((char *)v44 + v45[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v46 + 56))(v43, 0, 1, v45);
      }
      v10 = v178;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v8, 0, 1, v178);
    }
    *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    v53 = v6[9];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for URL(0);
    v57 = *(_QWORD *)(v56 - 8);
    v166 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    if (v166(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    v59 = v6[12];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    *((_QWORD *)v60 + 4) = *((_QWORD *)v61 + 4);
    v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    v63 = v6;
    v64 = v6[13];
    v65 = a1;
    v66 = (char *)a1 + v64;
    v67 = (char *)a2 + v64;
    v68 = type metadata accessor for ImpressionMetrics(0);
    v69 = *(_QWORD *)(v68 - 8);
    v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
    v160 = v56;
    v157 = v57;
    v176 = v68;
    __dstb = (void (**)(void *, const void *, _QWORD))v69;
    if (v163(v67, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    a1 = v65;
    v71 = v63;
    v72 = v177;
    v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
    v74 = (_OWORD *)((char *)a1 + v73);
    v75 = (char *)a2 + v73;
    *v74 = *(_OWORD *)((char *)a2 + v73);
    v76 = v71[5];
    v77 = (_OWORD *)((char *)v74 + v76);
    v78 = &v75[v76];
    if (v170(&v75[v76], 1, v10))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      v80 = v160;
    }
    else
    {
      v81 = *((_OWORD *)v78 + 1);
      *v77 = *(_OWORD *)v78;
      v77[1] = v81;
      v77[2] = *((_OWORD *)v78 + 2);
      *((_WORD *)v77 + 24) = *((_WORD *)v78 + 24);
      v82 = *(int *)(v10 + 36);
      v83 = (_OWORD *)((char *)v77 + v82);
      v171 = v78;
      v84 = &v78[v82];
      v85 = type metadata accessor for ActionMenu(0);
      v86 = *(_QWORD *)(v85 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        v88 = v171;
      }
      else
      {
        v151 = v86;
        v154 = v85;
        v89 = *((_OWORD *)v84 + 1);
        *v83 = *(_OWORD *)v84;
        v83[1] = v89;
        v83[2] = *((_OWORD *)v84 + 2);
        v90 = *(int *)(v85 + 28);
        v91 = (_OWORD *)((char *)v83 + v90);
        v149 = v84;
        v92 = &v84[v90];
        v93 = (int *)type metadata accessor for ArtworkModel(0);
        v147 = *((_QWORD *)v93 - 1);
        v94 = v83;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v147 + 48))(v92, 1, v93))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          v96 = *((_OWORD *)v92 + 1);
          *v91 = *(_OWORD *)v92;
          v91[1] = v96;
          *((_BYTE *)v91 + 32) = v92[32];
          *(_OWORD *)((char *)v91 + 40) = *(_OWORD *)(v92 + 40);
          *((_QWORD *)v91 + 7) = *((_QWORD *)v92 + 7);
          *((_BYTE *)v91 + 64) = v92[64];
          *(_OWORD *)((char *)v91 + 113) = *(_OWORD *)(v92 + 113);
          *(_OWORD *)((char *)v91 + 104) = *(_OWORD *)(v92 + 104);
          *(_OWORD *)((char *)v91 + 88) = *(_OWORD *)(v92 + 88);
          *(_OWORD *)((char *)v91 + 72) = *(_OWORD *)(v92 + 72);
          *((_BYTE *)v91 + 129) = v92[129];
          v97 = v93[11];
          v98 = (char *)v91 + v97;
          v145 = &v92[v97];
          v99 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v98, v145, v99);
          *(_OWORD *)((char *)v91 + v93[12]) = *(_OWORD *)&v92[v93[12]];
          *((_BYTE *)v91 + v93[13]) = v92[v93[13]];
          *((_BYTE *)v91 + v93[14]) = v92[v93[14]];
          *((_BYTE *)v91 + v93[15]) = v92[v93[15]];
          *(_OWORD *)((char *)v91 + v93[16]) = *(_OWORD *)&v92[v93[16]];
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v147 + 56))(v91, 0, 1, v93);
        }
        v10 = v178;
        v85 = v154;
        v88 = v171;
        *(_QWORD *)((char *)v94 + *(int *)(v154 + 32)) = *(_QWORD *)((char *)v149 + *(int *)(v154 + 32));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v94, 0, 1, v154);
      }
      v100 = *(int *)(v10 + 40);
      v172 = v77;
      v101 = (_OWORD *)((char *)v77 + v100);
      v102 = (_OWORD *)((char *)v88 + v100);
      v103 = type metadata accessor for Header.PrimaryAction(0);
      v104 = *(_QWORD *)(v103 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        v150 = v103;
        v152 = v104;
        if (swift_getEnumCaseMultiPayload(v102, v103) == 1)
        {
          v106 = v102[1];
          v107 = v101;
          *v101 = *v102;
          v101[1] = v106;
          v101[2] = v102[2];
          v155 = v85;
          v108 = *(int *)(v85 + 28);
          v109 = (_OWORD *)((char *)v101 + v108);
          v110 = (_OWORD *)((char *)v102 + v108);
          v111 = (int *)type metadata accessor for ArtworkModel(0);
          v148 = *((_QWORD *)v111 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v148 + 48))(v110, 1, v111))
          {
            v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
          }
          else
          {
            v115 = v110[1];
            *v109 = *v110;
            v109[1] = v115;
            *((_BYTE *)v109 + 32) = *((_BYTE *)v110 + 32);
            *(_OWORD *)((char *)v109 + 40) = *(_OWORD *)((char *)v110 + 40);
            *((_QWORD *)v109 + 7) = *((_QWORD *)v110 + 7);
            *((_BYTE *)v109 + 64) = *((_BYTE *)v110 + 64);
            *(_OWORD *)((char *)v109 + 113) = *(_OWORD *)((char *)v110 + 113);
            *(_OWORD *)((char *)v109 + 104) = *(_OWORD *)((char *)v110 + 104);
            *(_OWORD *)((char *)v109 + 88) = *(_OWORD *)((char *)v110 + 88);
            *(_OWORD *)((char *)v109 + 72) = *(_OWORD *)((char *)v110 + 72);
            *((_BYTE *)v109 + 129) = *((_BYTE *)v110 + 129);
            v116 = v111[11];
            v144 = (char *)v110 + v116;
            v146 = (char *)v109 + v116;
            v117 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v146, v144, v117);
            *(_OWORD *)((char *)v109 + v111[12]) = *(_OWORD *)((char *)v110 + v111[12]);
            *((_BYTE *)v109 + v111[13]) = *((_BYTE *)v110 + v111[13]);
            *((_BYTE *)v109 + v111[14]) = *((_BYTE *)v110 + v111[14]);
            *((_BYTE *)v109 + v111[15]) = *((_BYTE *)v110 + v111[15]);
            *(_OWORD *)((char *)v109 + v111[16]) = *(_OWORD *)((char *)v110 + v111[16]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v148 + 56))(v109, 0, 1, v111);
          }
          v114 = v150;
          *(_QWORD *)((char *)v107 + *(int *)(v155 + 32)) = *(_QWORD *)((char *)v102 + *(int *)(v155 + 32));
          swift_storeEnumTagMultiPayload(v107, v150, 1);
          v113 = v152;
        }
        else
        {
          v113 = v104;
          v107 = v101;
          memcpy(v101, v102, *(_QWORD *)(v152 + 64));
          v114 = v103;
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v107, 0, 1, v114);
      }
      v118 = v172;
      v119 = v178;
      *(_QWORD *)((char *)v172 + *(int *)(v178 + 44)) = *(_QWORD *)((char *)v88 + *(int *)(v178 + 44));
      v120 = *(int *)(v178 + 48);
      v121 = (_OWORD *)((char *)v172 + v120);
      v122 = (_OWORD *)((char *)v88 + v120);
      v123 = (int *)type metadata accessor for ArtworkModel(0);
      v124 = *((_QWORD *)v123 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v124 + 48))(v122, 1, v123))
      {
        v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      }
      else
      {
        v126 = v122[1];
        *v121 = *v122;
        v121[1] = v126;
        *((_BYTE *)v121 + 32) = *((_BYTE *)v122 + 32);
        *(_OWORD *)((char *)v121 + 40) = *(_OWORD *)((char *)v122 + 40);
        *((_QWORD *)v121 + 7) = *((_QWORD *)v122 + 7);
        *((_BYTE *)v121 + 64) = *((_BYTE *)v122 + 64);
        *(_OWORD *)((char *)v121 + 113) = *(_OWORD *)((char *)v122 + 113);
        *(_OWORD *)((char *)v121 + 104) = *(_OWORD *)((char *)v122 + 104);
        *(_OWORD *)((char *)v121 + 88) = *(_OWORD *)((char *)v122 + 88);
        *(_OWORD *)((char *)v121 + 72) = *(_OWORD *)((char *)v122 + 72);
        *((_BYTE *)v121 + 129) = *((_BYTE *)v122 + 129);
        v127 = v123[11];
        v173 = (char *)v121 + v127;
        v128 = (char *)v122 + v127;
        v129 = type metadata accessor for ArtworkCrop(0);
        v130 = v128;
        v119 = v178;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v173, v130, v129);
        *(_OWORD *)((char *)v121 + v123[12]) = *(_OWORD *)((char *)v122 + v123[12]);
        *((_BYTE *)v121 + v123[13]) = *((_BYTE *)v122 + v123[13]);
        *((_BYTE *)v121 + v123[14]) = *((_BYTE *)v122 + v123[14]);
        *((_BYTE *)v121 + v123[15]) = *((_BYTE *)v122 + v123[15]);
        *(_OWORD *)((char *)v121 + v123[16]) = *(_OWORD *)((char *)v122 + v123[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v124 + 56))(v121, 0, 1, v123);
      }
      v72 = v177;
      v80 = v160;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v118, 0, 1, v119);
    }
    *(_OWORD *)((char *)v74 + v71[6]) = *(_OWORD *)&v75[v71[6]];
    *(_QWORD *)((char *)v74 + v71[7]) = *(_QWORD *)&v75[v71[7]];
    *((_BYTE *)v74 + v71[8]) = v75[v71[8]];
    v131 = v71[9];
    v132 = (char *)v74 + v131;
    v133 = &v75[v131];
    if (v166(&v75[v131], 1, v80))
    {
      v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v132, v133, v80);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v132, 0, 1, v80);
    }
    *((_BYTE *)v74 + v71[10]) = v75[v71[10]];
    *((_BYTE *)v74 + v71[11]) = v75[v71[11]];
    v135 = v71[12];
    v136 = (char *)v74 + v135;
    v137 = &v75[v135];
    *((_QWORD *)v136 + 4) = *((_QWORD *)v137 + 4);
    v138 = *((_OWORD *)v137 + 1);
    *(_OWORD *)v136 = *(_OWORD *)v137;
    *((_OWORD *)v136 + 1) = v138;
    v139 = v71[13];
    v140 = (char *)v74 + v139;
    v141 = &v75[v139];
    if (v163(&v75[v139], 1, v176))
    {
      v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    }
    else
    {
      __dstb[4](v140, v141, v176);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v140, 0, 1, v176);
    }
    swift_storeEnumTagMultiPayload(a1, v72, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for ShelfError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  int *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _OWORD *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  char *v77;
  uint64_t v78;
  _OWORD *v79;
  char *v80;
  uint64_t v81;
  void *v82;
  __int128 v83;
  uint64_t v84;
  _OWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  __int128 v91;
  uint64_t v92;
  _OWORD *v93;
  char *v94;
  int *v95;
  _OWORD *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  _OWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  _OWORD *v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD *v122;
  _OWORD *v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  __int128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _OWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  unsigned int (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(char *, uint64_t, uint64_t);
  uint64_t v165;
  int *v166;
  uint64_t v167;
  unsigned int (*v168)(char *, uint64_t, uint64_t);
  char *v169;
  _OWORD *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *__dst;
  char *__dsta;
  void *__dstb;
  uint64_t v177;
  uint64_t v178;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for ShelfError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for ModernShelf(0);
      v7 = v6[5];
      v8 = (_OWORD *)((char *)a1 + v7);
      v9 = (_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for Header(0);
      v159 = *(_QWORD *)(v10 - 8);
      v177 = a3;
      v178 = v10;
      v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
      if (v168((char *)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v12 = v9[1];
        *v8 = *v9;
        v8[1] = v12;
        v8[2] = v9[2];
        *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
        v13 = *(int *)(v10 + 36);
        __dst = (char *)v8;
        v14 = (_OWORD *)((char *)v8 + v13);
        v15 = (_OWORD *)((char *)v9 + v13);
        v16 = type metadata accessor for ActionMenu(0);
        v17 = *(_QWORD *)(v16 - 8);
        v172 = v16;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          v19 = __dst;
        }
        else
        {
          v165 = v17;
          v20 = v15[1];
          *v14 = *v15;
          v14[1] = v20;
          v14[2] = v15[2];
          v21 = *(int *)(v16 + 28);
          v22 = (_OWORD *)((char *)v14 + v21);
          v23 = (_OWORD *)((char *)v15 + v21);
          v24 = (int *)type metadata accessor for ArtworkModel(0);
          v162 = *((_QWORD *)v24 - 1);
          v25 = v14;
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v162 + 48))(v23, 1, v24))
          {
            v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          }
          else
          {
            v27 = v23[1];
            *v22 = *v23;
            v22[1] = v27;
            *((_BYTE *)v22 + 32) = *((_BYTE *)v23 + 32);
            *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
            *((_QWORD *)v22 + 7) = *((_QWORD *)v23 + 7);
            *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
            *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
            *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
            *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
            *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
            *((_BYTE *)v22 + 129) = *((_BYTE *)v23 + 129);
            v28 = v24[11];
            v29 = (char *)v22 + v28;
            v160 = (char *)v23 + v28;
            v30 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, v160, v30);
            *(_OWORD *)((char *)v22 + v24[12]) = *(_OWORD *)((char *)v23 + v24[12]);
            *((_BYTE *)v22 + v24[13]) = *((_BYTE *)v23 + v24[13]);
            *((_BYTE *)v22 + v24[14]) = *((_BYTE *)v23 + v24[14]);
            *((_BYTE *)v22 + v24[15]) = *((_BYTE *)v23 + v24[15]);
            *(_OWORD *)((char *)v22 + v24[16]) = *(_OWORD *)((char *)v23 + v24[16]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v162 + 56))(v22, 0, 1, v24);
          }
          v10 = v178;
          v19 = __dst;
          *(_QWORD *)((char *)v25 + *(int *)(v172 + 32)) = *(_QWORD *)((char *)v15 + *(int *)(v172 + 32));
          (*(void (**)(_OWORD *, _QWORD, uint64_t))(v165 + 56))(v25, 0, 1);
        }
        v31 = *(int *)(v10 + 40);
        v32 = &v19[v31];
        v33 = (_OWORD *)((char *)v9 + v31);
        v34 = type metadata accessor for Header.PrimaryAction(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
          {
            v37 = v33[1];
            *(_OWORD *)v32 = *v33;
            *((_OWORD *)v32 + 1) = v37;
            *((_OWORD *)v32 + 2) = v33[2];
            v38 = *(int *)(v172 + 28);
            __dsta = &v32[v38];
            v39 = (_OWORD *)((char *)v33 + v38);
            v40 = type metadata accessor for ArtworkModel(0);
            v163 = *(_QWORD *)(v40 - 8);
            v166 = (int *)v40;
            if ((*(unsigned int (**)(_OWORD *, uint64_t))(v163 + 48))(v39, 1))
            {
              v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(__dsta, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
            }
            else
            {
              v42 = v39[1];
              *(_OWORD *)__dsta = *v39;
              *((_OWORD *)__dsta + 1) = v42;
              __dsta[32] = *((_BYTE *)v39 + 32);
              *(_OWORD *)(__dsta + 40) = *(_OWORD *)((char *)v39 + 40);
              *((_QWORD *)__dsta + 7) = *((_QWORD *)v39 + 7);
              __dsta[64] = *((_BYTE *)v39 + 64);
              *(_OWORD *)(__dsta + 113) = *(_OWORD *)((char *)v39 + 113);
              *(_OWORD *)(__dsta + 104) = *(_OWORD *)((char *)v39 + 104);
              *(_OWORD *)(__dsta + 88) = *(_OWORD *)((char *)v39 + 88);
              *(_OWORD *)(__dsta + 72) = *(_OWORD *)((char *)v39 + 72);
              __dsta[129] = *((_BYTE *)v39 + 129);
              v43 = v166[11];
              v154 = (char *)v39 + v43;
              v157 = &__dsta[v43];
              v44 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v157, v154, v44);
              *(_OWORD *)&__dsta[v166[12]] = *(_OWORD *)((char *)v39 + v166[12]);
              __dsta[v166[13]] = *((_BYTE *)v39 + v166[13]);
              __dsta[v166[14]] = *((_BYTE *)v39 + v166[14]);
              __dsta[v166[15]] = *((_BYTE *)v39 + v166[15]);
              *(_OWORD *)&__dsta[v166[16]] = *(_OWORD *)((char *)v39 + v166[16]);
              (*(void (**)(char *, _QWORD, uint64_t))(v163 + 56))(__dsta, 0, 1);
            }
            *(_QWORD *)&v32[*(int *)(v172 + 32)] = *(_QWORD *)((char *)v33 + *(int *)(v172 + 32));
            swift_storeEnumTagMultiPayload(v32, v34, 1);
          }
          else
          {
            memcpy(v32, v33, *(_QWORD *)(v35 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        *(_QWORD *)&v19[*(int *)(v178 + 44)] = *(_QWORD *)((char *)v9 + *(int *)(v178 + 44));
        v45 = *(int *)(v178 + 48);
        v46 = &v19[v45];
        v47 = (_OWORD *)((char *)v9 + v45);
        v48 = (int *)type metadata accessor for ArtworkModel(0);
        v49 = *((_QWORD *)v48 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
        {
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v51 = v47[1];
          *(_OWORD *)v46 = *v47;
          *((_OWORD *)v46 + 1) = v51;
          v46[32] = *((_BYTE *)v47 + 32);
          *(_OWORD *)(v46 + 40) = *(_OWORD *)((char *)v47 + 40);
          *((_QWORD *)v46 + 7) = *((_QWORD *)v47 + 7);
          v46[64] = *((_BYTE *)v47 + 64);
          *(_OWORD *)(v46 + 113) = *(_OWORD *)((char *)v47 + 113);
          *(_OWORD *)(v46 + 104) = *(_OWORD *)((char *)v47 + 104);
          *(_OWORD *)(v46 + 88) = *(_OWORD *)((char *)v47 + 88);
          *(_OWORD *)(v46 + 72) = *(_OWORD *)((char *)v47 + 72);
          v46[129] = *((_BYTE *)v47 + 129);
          v52 = v48[11];
          v53 = &v46[v52];
          v54 = (char *)v47 + v52;
          v55 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          *(_OWORD *)&v46[v48[12]] = *(_OWORD *)((char *)v47 + v48[12]);
          v46[v48[13]] = *((_BYTE *)v47 + v48[13]);
          v46[v48[14]] = *((_BYTE *)v47 + v48[14]);
          v46[v48[15]] = *((_BYTE *)v47 + v48[15]);
          *(_OWORD *)&v46[v48[16]] = *(_OWORD *)((char *)v47 + v48[16]);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
        }
        v10 = v178;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v19, 0, 1, v178);
      }
      *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      v56 = v6[9];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = type metadata accessor for URL(0);
      v60 = *(_QWORD *)(v59 - 8);
      v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
      if (v164(v58, 1, v59))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
      *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
      v62 = v6[12];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
      v65 = *((_OWORD *)v64 + 1);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v65;
      v66 = v6;
      v67 = v6[13];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      v70 = type metadata accessor for ImpressionMetrics(0);
      v71 = *(_QWORD *)(v70 - 8);
      v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      v173 = v70;
      __dstb = (void *)v59;
      v158 = v60;
      v167 = v71;
      if (v161(v69, 1, v70))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v73 = v66;
      v74 = v177;
      v75 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1258) + 48);
      v76 = (_OWORD *)((char *)a1 + v75);
      v77 = (char *)a2 + v75;
      *v76 = *(_OWORD *)((char *)a2 + v75);
      v78 = v73[5];
      v79 = (_OWORD *)((char *)v76 + v78);
      v80 = &v77[v78];
      if (v168(&v77[v78], 1, v10))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        v82 = __dstb;
      }
      else
      {
        v83 = *((_OWORD *)v80 + 1);
        *v79 = *(_OWORD *)v80;
        v79[1] = v83;
        v79[2] = *((_OWORD *)v80 + 2);
        *((_WORD *)v79 + 24) = *((_WORD *)v80 + 24);
        v84 = *(int *)(v10 + 36);
        v85 = (_OWORD *)((char *)v79 + v84);
        v169 = v80;
        v86 = &v80[v84];
        v87 = type metadata accessor for ActionMenu(0);
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7E0);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          v90 = v169;
        }
        else
        {
          v152 = v88;
          v155 = v87;
          v91 = *((_OWORD *)v86 + 1);
          *v85 = *(_OWORD *)v86;
          v85[1] = v91;
          v85[2] = *((_OWORD *)v86 + 2);
          v92 = *(int *)(v87 + 28);
          v93 = (_OWORD *)((char *)v85 + v92);
          v150 = v86;
          v94 = &v86[v92];
          v95 = (int *)type metadata accessor for ArtworkModel(0);
          v148 = *((_QWORD *)v95 - 1);
          v96 = v85;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v148 + 48))(v94, 1, v95))
          {
            v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
            memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            v98 = *((_OWORD *)v94 + 1);
            *v93 = *(_OWORD *)v94;
            v93[1] = v98;
            *((_BYTE *)v93 + 32) = v94[32];
            *(_OWORD *)((char *)v93 + 40) = *(_OWORD *)(v94 + 40);
            *((_QWORD *)v93 + 7) = *((_QWORD *)v94 + 7);
            *((_BYTE *)v93 + 64) = v94[64];
            *(_OWORD *)((char *)v93 + 113) = *(_OWORD *)(v94 + 113);
            *(_OWORD *)((char *)v93 + 104) = *(_OWORD *)(v94 + 104);
            *(_OWORD *)((char *)v93 + 88) = *(_OWORD *)(v94 + 88);
            *(_OWORD *)((char *)v93 + 72) = *(_OWORD *)(v94 + 72);
            *((_BYTE *)v93 + 129) = v94[129];
            v99 = v95[11];
            v100 = (char *)v93 + v99;
            v146 = &v94[v99];
            v101 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v100, v146, v101);
            *(_OWORD *)((char *)v93 + v95[12]) = *(_OWORD *)&v94[v95[12]];
            *((_BYTE *)v93 + v95[13]) = v94[v95[13]];
            *((_BYTE *)v93 + v95[14]) = v94[v95[14]];
            *((_BYTE *)v93 + v95[15]) = v94[v95[15]];
            *(_OWORD *)((char *)v93 + v95[16]) = *(_OWORD *)&v94[v95[16]];
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v148 + 56))(v93, 0, 1, v95);
          }
          v10 = v178;
          v87 = v155;
          v90 = v169;
          *(_QWORD *)((char *)v96 + *(int *)(v155 + 32)) = *(_QWORD *)((char *)v150 + *(int *)(v155 + 32));
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v96, 0, 1, v155);
        }
        v102 = *(int *)(v10 + 40);
        v170 = v79;
        v103 = (_OWORD *)((char *)v79 + v102);
        v104 = (_OWORD *)((char *)v90 + v102);
        v105 = type metadata accessor for Header.PrimaryAction(0);
        v106 = *(_QWORD *)(v105 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
        {
          v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3740);
          memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          v151 = v105;
          v153 = v106;
          if (swift_getEnumCaseMultiPayload(v104, v105) == 1)
          {
            v108 = v104[1];
            v109 = v103;
            *v103 = *v104;
            v103[1] = v108;
            v103[2] = v104[2];
            v156 = v87;
            v110 = *(int *)(v87 + 28);
            v111 = (_OWORD *)((char *)v103 + v110);
            v112 = (_OWORD *)((char *)v104 + v110);
            v113 = (int *)type metadata accessor for ArtworkModel(0);
            v149 = *((_QWORD *)v113 - 1);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v149 + 48))(v112, 1, v113))
            {
              v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
              memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
            }
            else
            {
              v116 = v112[1];
              *v111 = *v112;
              v111[1] = v116;
              *((_BYTE *)v111 + 32) = *((_BYTE *)v112 + 32);
              *(_OWORD *)((char *)v111 + 40) = *(_OWORD *)((char *)v112 + 40);
              *((_QWORD *)v111 + 7) = *((_QWORD *)v112 + 7);
              *((_BYTE *)v111 + 64) = *((_BYTE *)v112 + 64);
              *(_OWORD *)((char *)v111 + 113) = *(_OWORD *)((char *)v112 + 113);
              *(_OWORD *)((char *)v111 + 104) = *(_OWORD *)((char *)v112 + 104);
              *(_OWORD *)((char *)v111 + 88) = *(_OWORD *)((char *)v112 + 88);
              *(_OWORD *)((char *)v111 + 72) = *(_OWORD *)((char *)v112 + 72);
              *((_BYTE *)v111 + 129) = *((_BYTE *)v112 + 129);
              v117 = v113[11];
              v145 = (char *)v112 + v117;
              v147 = (char *)v111 + v117;
              v118 = type metadata accessor for ArtworkCrop(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v147, v145, v118);
              *(_OWORD *)((char *)v111 + v113[12]) = *(_OWORD *)((char *)v112 + v113[12]);
              *((_BYTE *)v111 + v113[13]) = *((_BYTE *)v112 + v113[13]);
              *((_BYTE *)v111 + v113[14]) = *((_BYTE *)v112 + v113[14]);
              *((_BYTE *)v111 + v113[15]) = *((_BYTE *)v112 + v113[15]);
              *(_OWORD *)((char *)v111 + v113[16]) = *(_OWORD *)((char *)v112 + v113[16]);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v149 + 56))(v111, 0, 1, v113);
            }
            *(_QWORD *)((char *)v109 + *(int *)(v156 + 32)) = *(_QWORD *)((char *)v104 + *(int *)(v156 + 32));
            v105 = v151;
            swift_storeEnumTagMultiPayload(v109, v151, 1);
            v115 = v153;
          }
          else
          {
            v115 = v106;
            v109 = v103;
            memcpy(v103, v104, *(_QWORD *)(v153 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v109, 0, 1, v105);
        }
        v119 = v170;
        v120 = v178;
        *(_QWORD *)((char *)v170 + *(int *)(v178 + 44)) = *(_QWORD *)((char *)v90 + *(int *)(v178 + 44));
        v121 = *(int *)(v178 + 48);
        v122 = (_OWORD *)((char *)v170 + v121);
        v123 = (_OWORD *)((char *)v90 + v121);
        v124 = (int *)type metadata accessor for ArtworkModel(0);
        v125 = *((_QWORD *)v124 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v125 + 48))(v123, 1, v124))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v127 = v123[1];
          *v122 = *v123;
          v122[1] = v127;
          *((_BYTE *)v122 + 32) = *((_BYTE *)v123 + 32);
          *(_OWORD *)((char *)v122 + 40) = *(_OWORD *)((char *)v123 + 40);
          *((_QWORD *)v122 + 7) = *((_QWORD *)v123 + 7);
          *((_BYTE *)v122 + 64) = *((_BYTE *)v123 + 64);
          *(_OWORD *)((char *)v122 + 113) = *(_OWORD *)((char *)v123 + 113);
          *(_OWORD *)((char *)v122 + 104) = *(_OWORD *)((char *)v123 + 104);
          *(_OWORD *)((char *)v122 + 88) = *(_OWORD *)((char *)v123 + 88);
          *(_OWORD *)((char *)v122 + 72) = *(_OWORD *)((char *)v123 + 72);
          *((_BYTE *)v122 + 129) = *((_BYTE *)v123 + 129);
          v128 = v124[11];
          v171 = (char *)v122 + v128;
          v129 = (char *)v123 + v128;
          v130 = type metadata accessor for ArtworkCrop(0);
          v131 = v129;
          v120 = v178;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(v171, v131, v130);
          *(_OWORD *)((char *)v122 + v124[12]) = *(_OWORD *)((char *)v123 + v124[12]);
          *((_BYTE *)v122 + v124[13]) = *((_BYTE *)v123 + v124[13]);
          *((_BYTE *)v122 + v124[14]) = *((_BYTE *)v123 + v124[14]);
          *((_BYTE *)v122 + v124[15]) = *((_BYTE *)v123 + v124[15]);
          *(_OWORD *)((char *)v122 + v124[16]) = *(_OWORD *)((char *)v123 + v124[16]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v125 + 56))(v122, 0, 1, v124);
        }
        v74 = v177;
        v82 = __dstb;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v119, 0, 1, v120);
      }
      *(_OWORD *)((char *)v76 + v73[6]) = *(_OWORD *)&v77[v73[6]];
      *(_QWORD *)((char *)v76 + v73[7]) = *(_QWORD *)&v77[v73[7]];
      *((_BYTE *)v76 + v73[8]) = v77[v73[8]];
      v132 = v73[9];
      v133 = (char *)v76 + v132;
      v134 = &v77[v132];
      if (v164(&v77[v132], 1, (uint64_t)v82))
      {
        v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v158 + 32))(v133, v134, v82);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v158 + 56))(v133, 0, 1, v82);
      }
      *((_BYTE *)v76 + v73[10]) = v77[v73[10]];
      *((_BYTE *)v76 + v73[11]) = v77[v73[11]];
      v136 = v73[12];
      v137 = (char *)v76 + v136;
      v138 = &v77[v136];
      *((_QWORD *)v137 + 4) = *((_QWORD *)v138 + 4);
      v139 = *((_OWORD *)v138 + 1);
      *(_OWORD *)v137 = *(_OWORD *)v138;
      *((_OWORD *)v137 + 1) = v139;
      v140 = v73[13];
      v141 = (char *)v76 + v140;
      v142 = &v77[v140];
      if (v161(&v77[v140], 1, v173))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v141, v142, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v141, 0, 1, v173);
      }
      swift_storeEnumTagMultiPayload(a1, v74, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_205A30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  v5[0] = &unk_2FF9B0;
  result = type metadata accessor for ModernShelf(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, *(_QWORD *)(result - 8) + 64);
    v5[1] = v4;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfContentType()
{
  return &type metadata for ShelfContentType;
}

uint64_t method lookup function for ShelfContentTypeSet(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShelfContentTypeSet);
}

uint64_t sub_205AD8()
{
  return type metadata accessor for Shelf(0);
}

uint64_t type metadata accessor for Shelf(uint64_t a1)
{
  return sub_1F9D4(a1, (uint64_t *)&unk_3C17E0, (uint64_t)&nominal type descriptor for Shelf);
}

void sub_205AF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[19];

  v10[0] = &unk_2FFA40;
  v10[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v10[2] = &unk_2FFA40;
  v10[3] = &unk_2FFA40;
  v10[4] = &unk_2FFA58;
  v10[5] = &unk_2FFA40;
  sub_3EE70(319, &qword_3BEC00, type metadata accessor for ActionMenu);
  if (v3 <= 0x3F)
  {
    v10[6] = *(_QWORD *)(v2 - 8) + 64;
    v10[7] = &unk_2FFA70;
    v10[8] = &unk_2FFA70;
    v10[9] = &unk_2FFA58;
    v10[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_3EE70(319, (unint64_t *)&qword_3B1C30, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v10[11] = *(_QWORD *)(v4 - 8) + 64;
      v10[12] = &unk_2FFA88;
      v10[13] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[14] = &unk_2FFAA0;
      sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
      if (v7 <= 0x3F)
      {
        v10[15] = *(_QWORD *)(v6 - 8) + 64;
        v10[16] = &unk_2FFA58;
        v10[17] = &unk_2FFA58;
        sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
        if (v9 <= 0x3F)
        {
          v10[18] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 19, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t method lookup function for Shelf(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Shelf);
}

uint64_t dispatch thunk of Shelf.__allocating_init(id:contentType:title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:titleContextMenu:seeAllAction:headerButtonItems:isHorizontal:items:url:backgroundColor:rowsPerColumn:mergeWhenFetched:hideFromCarPlay:headerArtwork:shelvesIntent:impressionMetrics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of Shelf.__allocating_init(merging:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_205CE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1FB750(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_205CFC()
{
  unint64_t result;

  result = qword_3C1810;
  if (!qword_3C1810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1808);
    sub_F1C0(&qword_3B5C78, (void (*)(uint64_t))type metadata accessor for SearchHint, (uint64_t)&protocol conformance descriptor for SearchHint);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?);
    atomic_store(result, (unint64_t *)&qword_3C1810);
  }
  return result;
}

unint64_t sub_205D78()
{
  unint64_t result;

  result = qword_3C1860;
  if (!qword_3C1860)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ComponentKinds);
    atomic_store(result, (unint64_t *)&qword_3C1860);
  }
  return result;
}

unint64_t sub_205DBC()
{
  unint64_t result;

  result = qword_3C1868;
  if (!qword_3C1868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ComponentKinds);
    atomic_store(result, (unint64_t *)&qword_3C1868);
  }
  return result;
}

_OWORD *sub_205E00(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_205E18()
{
  unint64_t result;

  result = qword_3C1888;
  if (!qword_3C1888)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ComponentKinds);
    atomic_store(result, (unint64_t *)&qword_3C1888);
  }
  return result;
}

double HSpacer.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  double result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v4 = *v2;
  v5 = static Alignment.center.getter(a1);
  _FrameLayout.init(width:height:alignment:)(&v12, v4, 0, 0, 1, v5, v6);
  v7 = v12;
  v8 = v13;
  v9 = v14;
  v10 = v15;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  result = *(double *)&v16;
  *(_OWORD *)(a2 + 48) = v16;
  return result;
}

uint64_t sub_205EE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of HSpacer.body>>, 1);
}

ValueMetadata *type metadata accessor for HSpacer()
{
  return &type metadata for HSpacer;
}

uint64_t sub_205F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD **v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];

  v5 = swift_allocObject(&unk_389B28, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD **)(v2 + OBJC_IVAR____TtC8ShelfKit18ChannelOfferAction_completionHandlers);
  swift_beginAccess(v6, v13, 33, 0);
  v7 = *v6;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
  *v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_11354(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_11354((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_20635C;
  v11[5] = v5;
  return swift_endAccess(v13);
}

uint64_t CompletableAction.addCompletionHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v10)(_BYTE *, _QWORD);
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _BYTE v19[32];

  v8 = swift_allocObject(&unk_389B00, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 24);
  swift_retain();
  v10 = (uint64_t (*)(_BYTE *, _QWORD))v9(v19, a3, a4);
  v12 = v11;
  v13 = (_QWORD *)*v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  *v12 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_11354(0, v13[2] + 1, 1, v13);
    *v12 = v13;
  }
  v16 = v13[2];
  v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    v13 = sub_11354((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
    *v12 = v13;
  }
  v13[2] = v16 + 1;
  v17 = &v13[2 * v16];
  v17[4] = sub_206338;
  v17[5] = v8;
  return v10(v19, 0);
}

uint64_t sub_206124()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit18ChannelOfferAction_completionHandlers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit18ChannelOfferAction_completionHandlers, v4, 1, 0);
  v2 = *v1;
  *v1 = (uint64_t)&_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v2);
}

Swift::Void __swiftcall CompletableAction.removeAllCompletionHandlers()()
{
  uint64_t v0;
  void (*v1)(_BYTE *, _QWORD);
  uint64_t *v2;
  uint64_t v3;
  _BYTE v4[32];

  v1 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(v0 + 24))(v4);
  v3 = *v2;
  *v2 = (uint64_t)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  v1(v4, 0);
}

uint64_t sub_2061D8(char a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(char *);
  char v11;
  _BYTE v12[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit18ChannelOfferAction_completionHandlers);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit18ChannelOfferAction_completionHandlers, v12, 0, 0);
  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = a1 & 1;
    swift_bridgeObjectRetain(v5);
    v8 = (uint64_t *)(v5 + 40);
    do
    {
      v10 = (void (*)(char *))*(v8 - 1);
      v9 = *v8;
      v11 = v7;
      swift_retain(v9);
      v10(&v11);
      swift_release(v9);
      v8 += 2;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease(v5);
  }
  return result;
}

Swift::Void __swiftcall CompletableAction.performCompletionHandlers(success:)(Swift::Bool success)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Bool v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(Swift::Bool *);
  Swift::Bool v10;

  v3 = (*(uint64_t (**)())(v1 + 8))();
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = success;
    v7 = (uint64_t *)(v3 + 40);
    do
    {
      v9 = (void (*)(Swift::Bool *))*(v7 - 1);
      v8 = *v7;
      v10 = v6;
      swift_retain(v8);
      v9(&v10);
      swift_release(v8);
      v7 += 2;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease(v4);
}

uint64_t sub_206314()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_206338(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_206364()
{
  _QWORD *v0;
  unint64_t v1;
  int64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t result;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v2;
  if (!v1)
  {
    v8 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_26;
    v9 = (unint64_t)(v0[2] + 64) >> 6;
    if (v8 < v9)
    {
      v10 = v0[1];
      v11 = *(_QWORD *)(v10 + 8 * v8);
      if (v11)
      {
LABEL_8:
        v4 = (v11 - 1) & v11;
        v5 = __clz(__rbit64(v11)) + (v8 << 6);
        v3 = v8;
        goto LABEL_3;
      }
      v12 = v2 + 2;
      v3 = v2 + 1;
      if (v2 + 2 < v9)
      {
        v11 = *(_QWORD *)(v10 + 8 * v12);
        if (v11)
        {
LABEL_11:
          v8 = v12;
          goto LABEL_8;
        }
        v3 = v2 + 2;
        if (v2 + 3 < v9)
        {
          v11 = *(_QWORD *)(v10 + 8 * (v2 + 3));
          if (v11)
          {
            v8 = v2 + 3;
            goto LABEL_8;
          }
          v12 = v2 + 4;
          v3 = v2 + 3;
          if (v2 + 4 < v9)
          {
            v11 = *(_QWORD *)(v10 + 8 * v12);
            if (v11)
              goto LABEL_11;
            v8 = v2 + 5;
            v3 = v2 + 4;
            if (v2 + 5 < v9)
            {
              v11 = *(_QWORD *)(v10 + 8 * v8);
              if (v11)
                goto LABEL_8;
              v3 = v9 - 1;
              v13 = v2 + 6;
              while (v9 != v13)
              {
                v11 = *(_QWORD *)(v10 + 8 * v13++);
                if (v11)
                {
                  v8 = v13 - 1;
                  goto LABEL_8;
                }
              }
            }
          }
        }
      }
    }
    v7 = 0;
    v0[3] = v3;
    v0[4] = 0;
    return v7;
  }
  v4 = (v1 - 1) & v1;
  v5 = __clz(__rbit64(v1)) | (v2 << 6);
LABEL_3:
  v6 = *(_QWORD *)(*(_QWORD *)(*v0 + 48) + 16 * v5 + 8);
  v0[3] = v3;
  v0[4] = v4;
  v7 = v0[5];
  if (!__OFADD__(v7, 1))
  {
    v0[5] = v7 + 1;
    swift_bridgeObjectRetain(v6);
    return v7;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

_QWORD *EpisodeDeletionActionProvider.__allocating_init(asPartOf:episodeDownloadStateController:libraryActionController:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v7;

  swift_allocObject(v3, 120, 7);
  v7 = sub_209040(a1, a2, a3);
  swift_release(a1);
  swift_release(a2);
  return v7;
}

_QWORD *EpisodeDeletionActionProvider.init(asPartOf:episodeDownloadStateController:libraryActionController:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;

  v5 = sub_209040(a1, a2, a3);
  swift_release(a1);
  swift_release(a2);
  return v5;
}

uint64_t sub_20657C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v12;

  v4 = type metadata accessor for EpisodeDownloadState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = EpisodeStateController.stateMachine(for:)(a1, a2);
  v9 = dispatch thunk of EpisodeStateMachine.currentState.getter(v7);
  v10 = EpisodeDownloadState.isDownloadedEpisode.getter(v9);
  swift_release(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  return v10 & 1;
}

uint64_t sub_206630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[14];

  v8 = *a5;
  v9 = a5[1];
  v11 = a5[2];
  v10 = a5[3];
  v12 = a5[4];
  v25 = a5[6];
  v26 = a5[5];
  v23 = a5[8];
  v24 = a5[7];
  v21 = a5[10];
  v22 = a5[9];
  v19 = a5[12];
  v20 = a5[11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8730);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  if (a4)
  {
    v15 = (_QWORD *)swift_allocObject(v13, 48, 7);
    *((_OWORD *)v15 + 1) = xmmword_2EA0D0;
    v15[4] = a3;
    v15[5] = a4;
  }
  else
  {
    v15 = _swiftEmptyArrayStorage;
  }
  v27[0] = v8;
  v27[1] = v9;
  v27[2] = v11;
  v27[3] = v10;
  v27[4] = v12;
  v27[5] = v26;
  v27[6] = v25;
  v27[7] = v24;
  v27[8] = v23;
  v27[9] = v22;
  v27[10] = v21;
  v27[11] = v20;
  v27[12] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_2068F8(v14, (uint64_t)v15, v27, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *sub_2067B0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v15 = result;
  v2 = result[2];
  if (v2)
  {
    v3 = a2;
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = result[5];
      v16 = result[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = 0;
      v17 = v4 - 1;
      for (i = v2 - 1; ; --i)
      {
        swift_bridgeObjectRetain();
        v8 = v3;
        v9 = *(_QWORD *)(v3 + v6 * 8 + 32);
        v10 = *(_QWORD *)(v3 + v6 * 8 + 40);
        v11 = v14[7];
        v12 = v14[8];
        __swift_project_boxed_opaque_existential_1(v14 + 4, v11);
        v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 288);
        swift_bridgeObjectRetain();
        v13(v16, v5, v9, v10, v11, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!i || !v17)
          break;
        v5 = v15[v6 + 7];
        v16 = v15[v6 + 6];
        --v17;
        v6 += 2;
        v3 = v8;
      }
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2068F8(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  _QWORD *v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  void *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void **v123;
  id v124;
  Swift::String v125;
  Swift::String v126;
  Swift::String v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  Swift::String v138;
  Swift::String v139;
  Swift::String v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  int v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t);
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;
  void **v211;
  void **aBlock;
  uint64_t v213;
  uint64_t (*v214)(uint64_t);
  void *v215;
  uint64_t (*v216)();
  _QWORD *v217;
  _QWORD *v218;
  void *v219;
  _QWORD *v220;
  uint64_t v221;
  Swift::String v222;
  Swift::String v223;
  Swift::String v224;

  v5 = v4;
  v168 = a4;
  v186 = a2;
  v165 = type metadata accessor for Logger(0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v166 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v9);
  v167 = (char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v11);
  v169 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for DispatchWorkItemFlags(0);
  v203 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v204 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for DispatchQoS(0);
  v201 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v205 = (char *)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EpisodeDownloadState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v164 - v20);
  v195 = *a3;
  v194 = a3[1];
  v193 = a3[2];
  v192 = a3[3];
  v184 = a3[4];
  v182 = a3[5];
  v181 = a3[6];
  v22 = a3[8];
  v183 = a3[7];
  v179 = a3[9];
  v178 = a3[10];
  v177 = a3[11];
  v180 = a3[12];
  v23 = &_swiftEmptySetSingleton;
  v219 = &_swiftEmptySetSingleton;
  v220 = &_swiftEmptySetSingleton;
  v218 = &_swiftEmptySetSingleton;
  v24 = *(_QWORD *)(a1 + 16);
  v208 = v5;
  v191 = v24;
  v202 = a1;
  v185 = v22;
  if (v24)
  {
    LODWORD(v209) = enum case for EpisodeDownloadState.downloading(_:);
    swift_bridgeObjectRetain();
    v25 = (uint64_t *)(a1 + 40);
    do
    {
      v27 = *(v25 - 1);
      v26 = *v25;
      swift_bridgeObjectRetain();
      v28 = EpisodeStateController.stateMachine(for:)(v27, v26);
      dispatch thunk of EpisodeStateMachine.currentState.getter(v21);
      v29 = swift_release(v28);
      if ((EpisodeDownloadState.isDownloadedEpisode.getter(v29) & 1) != 0
        || ((*(void (**)(char *, _QWORD *, uint64_t))(v16 + 16))(v18, v21, v15),
            v30 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15),
            v30 == (_DWORD)v209))
      {
        swift_bridgeObjectRetain();
        sub_9BFD0((uint64_t *)&aBlock, v27, v26);
        v31 = swift_bridgeObjectRelease();
      }
      else
      {
        v31 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      if ((EpisodeDownloadState.isEpisodeFromiTunesSync.getter(v31) & 1) != 0)
      {
        sub_9BFD0((uint64_t *)&aBlock, v27, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v21, v15);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v21, v15);
        swift_bridgeObjectRelease();
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    v23 = v219;
    v5 = v208;
    v22 = v185;
  }
  v32 = v5[2];
  v33 = swift_allocObject(&unk_389B50, 32, 7);
  *(_QWORD *)(v33 + 16) = v23;
  *(_QWORD *)(v33 + 24) = v5;
  v216 = sub_209178;
  v217 = (_QWORD *)v33;
  aBlock = _NSConcreteStackBlock;
  v213 = 1107296256;
  v214 = sub_2C9F4;
  v215 = &block_descriptor_21;
  v34 = _Block_copy(&aBlock);
  v35 = swift_retain();
  v36 = v205;
  static DispatchQoS.unspecified.getter(v35);
  v211 = (void **)_swiftEmptyArrayStorage;
  v37 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v39 = sub_724B4();
  v40 = v204;
  v173 = v38;
  v172 = v39;
  v41 = v206;
  v174 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v211, v38, v39, v206, v37);
  v175 = v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v36, v40, v34);
  _Block_release(v34);
  v42 = *(void (**)(char *, uint64_t))(v203 + 8);
  v42(v40, v41);
  v176 = *(void (**)(char *, uint64_t))(v201 + 8);
  v176(v36, v207);
  swift_release(v217);
  v43 = swift_allocObject(&unk_389BA0, 32, 7);
  *(_QWORD *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + 24) = 0;
  v187 = v43;
  v171 = v42;
  v190 = v22 >> 62;
  if (v22 >> 62)
  {
    if (v22 >> 62 != 1)
    {
      v196 = 0;
      v199 = 0;
      v200 = 0;
      v209 = 0;
      v201 = 0;
      v197 = 0;
      v198 = 0;
      v45 = 0;
      v188 = 0;
      v189 = 0;
      LODWORD(v203) = 255;
      goto LABEL_18;
    }
    v196 = 0;
    v199 = 0;
    v200 = 0;
    v209 = 0;
    v201 = 0;
    v44 = 0;
    v198 = 0;
    v45 = 0;
    v46 = v192;
    *(_QWORD *)(v43 + 16) = v193;
    *(_QWORD *)(v43 + 24) = v46;
    LODWORD(v203) = 255;
    v47 = v195;
    v48 = &v221;
  }
  else
  {
    v49 = v180;
    *(_QWORD *)(v43 + 16) = v177;
    *(_QWORD *)(v43 + 24) = v49;
    v163 = v22;
    v50 = v195;
    v51 = v194;
    v52 = v193;
    v53 = v192;
    v54 = v184;
    v55 = v182;
    v56 = v181;
    v45 = v183;
    sub_898F4(v195, v194, v193, v192, v184, v182, v181, v183, v163);
    v196 = v50;
    v199 = v51;
    v200 = v52;
    v209 = v53;
    v22 = v185;
    v201 = v54;
    v44 = v55;
    v198 = v56;
    LODWORD(v203) = v185;
    v47 = v179;
    v48 = (uint64_t *)&v210;
  }
  v57 = *(v48 - 32);
  v197 = v44;
  v188 = (void (*)(uint64_t))v47;
  v189 = v57;
  swift_retain();
  swift_retain();
LABEL_18:
  v211 = (void **)_swiftEmptyArrayStorage;
  v58 = (void *)objc_opt_self(NSBundle);
  v59 = objc_msgSend(v58, "mainBundle");
  v222._object = (void *)0xE000000000000000;
  v60._object = (void *)0x80000000003136F0;
  v60._countAndFlagsBits = 0xD000000000000018;
  v61._countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  v222._countAndFlagsBits = 0;
  v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v222);

  v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v64 = swift_allocObject(v63, 72, 7);
  *(_OWORD *)(v64 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v64 + 56) = &type metadata for Int;
  *(_QWORD *)(v64 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v64 + 32) = v191;
  v65 = static String.localizedStringWithFormat(_:_:)(v62._countAndFlagsBits, v62._object, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((_DWORD)v190 != 2
    || v22 != 0x8000000000000000
    || v194 | v195 | v193 | v192 | v184 | v182 | v181 | v183 | v179 | v178 | v177 | v180)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v83 = v189;
    v84 = v188;
    v85 = v208;
    v86 = v198;
    v87 = v197;
    if (v203 == 9)
    {
      v88 = v201 | v197 | v198;
      if (!(v200 | v199 | v196 | v209 | v88 | v45))
      {
        v170 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v112 = v202;
        if (v84)
        {
          swift_retain();
          v84(v112);
          sub_327A0((uint64_t)v84, v83);
        }
        v113 = (_QWORD *)swift_allocObject(&unk_389CE0, 40, 7);
        v113[2] = v112;
        v113[3] = v85;
        v107 = v187;
        v113[4] = v187;
        v216 = sub_2093A4;
        v217 = v113;
        aBlock = _NSConcreteStackBlock;
        v213 = 1107296256;
        v214 = sub_2C9F4;
        v215 = &block_descriptor_31_1;
        v94 = v83;
        v114 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        v115 = swift_retain();
        v116 = v205;
        static DispatchQoS.unspecified.getter(v115);
        v210 = _swiftEmptyArrayStorage;
        v117 = v204;
        v118 = v206;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v210, v173, v172, v206, v174);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v116, v117, v114);
        _Block_release(v114);
        sub_87180(0, v199, v200, v209, v201, v87, v86, v170, 9u);
LABEL_66:
        v171(v117, v118);
        v176(v116, v207);
        v154 = v217;
        swift_release(v107);
        swift_release(v154);
        v81 = (uint64_t)v84;
LABEL_67:
        v82 = v94;
LABEL_68:
        sub_327A0(v81, v82);
        return 0;
      }
      if (v196 == 4 && !(v200 | v199 | v209 | v88 | v45))
      {
        swift_bridgeObjectRelease();
        v89 = swift_bridgeObjectRelease();
        v90 = v202;
        if (v84)
        {
          swift_retain();
          v84(v90);
          v89 = sub_327A0((uint64_t)v84, v83);
        }
        v91 = (uint64_t)v167;
        static TaskPriority.userInitiated.getter(v89);
        v92 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v91, 0, 1, v92);
        v93 = v187;
        v94 = v83;
        v95 = v84;
        v96 = *(_QWORD *)(v187 + 16);
        v97 = *(_QWORD *)(v187 + 24);
        v98 = (_QWORD *)swift_allocObject(&unk_389CB8, 64, 7);
        v98[2] = 0;
        v98[3] = 0;
        v98[4] = v90;
        v98[5] = v85;
        v98[6] = v96;
        v98[7] = v97;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_76C34(v96, v97);
        v99 = sub_92090(v91, (uint64_t)&unk_3C18A0, (uint64_t)v98);
        swift_release(v99);
        sub_87180(4, v199, v200, v209, v201, v197, v198, v45, 9u);
        swift_release(v93);
        v81 = (uint64_t)v95;
        goto LABEL_67;
      }
    }
    v100 = v188;
    v101 = v189;
    v102 = *(_QWORD *)(v186 + 16);
    v103 = v218;
    v170 = v45;
    if (v102)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v104 = v202;
      v94 = v83;
      if (v84)
      {
        swift_retain();
        v100(v104);
        sub_327A0((uint64_t)v100, v101);
      }
      v105 = (_QWORD *)swift_allocObject(&unk_389C68, 48, 7);
      v106 = v186;
      v105[2] = v104;
      v105[3] = v106;
      v107 = v187;
      v105[4] = v85;
      v105[5] = v107;
      v216 = sub_2092BC;
      v217 = v105;
      aBlock = _NSConcreteStackBlock;
      v213 = 1107296256;
      v214 = sub_2C9F4;
      v215 = &block_descriptor_21_0;
      v108 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v218[2])
      {
        swift_bridgeObjectRelease();
        v109 = v202;
        v94 = v83;
        if (v84)
        {
          swift_retain();
          v100(v109);
          sub_327A0((uint64_t)v100, v101);
        }
        v110 = (_QWORD *)swift_allocObject(&unk_389C18, 48, 7);
        v110[2] = v103;
        v110[3] = v85;
        v107 = v187;
        v110[4] = v187;
        v110[5] = v109;
        v216 = sub_209220;
        v217 = v110;
        aBlock = _NSConcreteStackBlock;
        v213 = 1107296256;
        v111 = &block_descriptor_15_4;
      }
      else
      {
        swift_bridgeObjectRelease();
        v150 = v220;
        if (!v220[2])
        {
          v156 = swift_bridgeObjectRelease();
          v157 = v166;
          v158 = static Logger.database.getter(v156);
          v159 = Logger.logObject.getter(v158);
          v160 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v159, v160))
          {
            v161 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v161 = 0;
            _os_log_impl(&dword_0, v159, v160, "Impossible to delete episode or provide delete action", v161, 2u);
            swift_slowDealloc(v161, -1, -1);

            sub_87180(v196, v199, v200, v209, v201, v87, v86, v45, v203);
          }
          else
          {
            sub_87180(v196, v199, v200, v209, v201, v87, v86, v45, v203);

          }
          v162 = v187;
          (*(void (**)(char *, uint64_t))(v164 + 8))(v157, v165);
          swift_release(v162);
          v81 = (uint64_t)v100;
          v82 = v101;
          goto LABEL_68;
        }
        v151 = v202;
        v94 = v83;
        if (v84)
        {
          swift_retain();
          v100(v151);
          sub_327A0((uint64_t)v100, v101);
        }
        v152 = (_QWORD *)swift_allocObject(&unk_389BC8, 48, 7);
        v152[2] = v150;
        v152[3] = v85;
        v107 = v187;
        v152[4] = v187;
        v152[5] = v151;
        v216 = sub_2091D8;
        v217 = v152;
        aBlock = _NSConcreteStackBlock;
        v213 = 1107296256;
        v111 = &block_descriptor_9_2;
      }
      v214 = sub_2C9F4;
      v215 = v111;
      v108 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    v153 = swift_retain();
    v116 = v205;
    static DispatchQoS.unspecified.getter(v153);
    v210 = _swiftEmptyArrayStorage;
    v117 = v204;
    v118 = v206;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v210, v173, v172, v206, v174);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v116, v117, v108);
    _Block_release(v108);
    sub_87180(v196, v199, v200, v209, v201, v87, v86, v170, v203);
    goto LABEL_66;
  }
  swift_bridgeObjectRelease();
  v66 = (void **)v220;
  if (v220[2])
  {
    swift_bridgeObjectRelease();
    if ((v168 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v67 = -1 << *((_BYTE *)v66 + 32);
      v68 = (unint64_t)v66[7];
      v69 = ~v67;
      v70 = -v67;
      aBlock = v66;
      v213 = (uint64_t)(v66 + 7);
      if (v70 < 64)
        v71 = ~(-1 << v70);
      else
        v71 = -1;
      v214 = (uint64_t (*)(uint64_t))v69;
      v215 = 0;
      v216 = (uint64_t (*)())(v71 & v68);
      v217 = 0;
      sub_206364();
      v74 = v208;
      if (v73)
      {
        v75 = v72;
        v76 = v73;
        do
        {
          v77 = v74[7];
          v78 = v74[8];
          __swift_project_boxed_opaque_existential_1(v74 + 4, v77);
          (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 392))(v75, v76, 0, v77, v78);
          swift_bridgeObjectRelease();
          sub_206364();
          v75 = v79;
          v76 = v80;
        }
        while (v80);
      }
      sub_15498((uint64_t)aBlock);
      sub_87180(v196, v199, v200, v209, v201, v197, v198, v45, v203);
      swift_release(v187);
      v81 = (uint64_t)v188;
      v82 = v189;
      goto LABEL_68;
    }
    v119 = (unint64_t)v66[2];
    if (v119 <= 1)
      v120 = 0xD000000000000021;
    else
      v120 = 0xD00000000000001FLL;
    if (v119 <= 1)
      v121 = (void *)0x8000000000313710;
    else
      v121 = (void *)0x8000000000313760;
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
    v123 = (void **)swift_allocObject(v122, 40, 7);
    *((_OWORD *)v123 + 1) = xmmword_2EF430;
    v124 = objc_msgSend(v58, "mainBundle");
    v223._object = (void *)0xE000000000000000;
    v125._countAndFlagsBits = v120;
    v125._object = v121;
    v126._countAndFlagsBits = 0;
    v126._object = (void *)0xE000000000000000;
    v223._countAndFlagsBits = 0;
    v127 = NSLocalizedString(_:tableName:bundle:value:comment:)(v125, (Swift::String_optional)0, (NSBundle)v124, v126, v223);

    swift_bridgeObjectRelease();
    v128 = swift_allocObject(&unk_389D30, 32, 7);
    *(_QWORD *)(v128 + 16) = v66;
    *(_QWORD *)(v128 + 24) = v208;
    v129 = swift_retain();
    v130 = (uint64_t)v169;
    static ActionMetrics.notInstrumented.getter(v129);
    v131 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v131, *(unsigned int *)(v131 + 48), *(unsigned __int16 *)(v131 + 52));
    v132 = sub_213C1C(v127._countAndFlagsBits, (uint64_t)v127._object, 1, v130, (uint64_t)sub_2093C4, v128);
    v133 = swift_release(v128);
    v123[4] = (void *)v132;
    aBlock = v123;
    specialized Array._endMutation()(v133);
    v211 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v134 = v45;
  v135 = v186;
  v136 = v198;
  if (*(_QWORD *)(v186 + 16))
  {
    v137 = objc_msgSend(v58, "mainBundle");
    v138._countAndFlagsBits = 0xD00000000000001CLL;
    v224._object = (void *)0xE000000000000000;
    v138._object = (void *)0x8000000000313740;
    v139._countAndFlagsBits = 0;
    v139._object = (void *)0xE000000000000000;
    v224._countAndFlagsBits = 0;
    v140 = NSLocalizedString(_:tableName:bundle:value:comment:)(v138, (Swift::String_optional)0, (NSBundle)v137, v139, v224);

    v141 = (_QWORD *)swift_allocObject(&unk_389D58, 40, 7);
    v141[2] = v202;
    v141[3] = v135;
    v141[4] = v208;
    swift_bridgeObjectRetain();
    swift_retain();
    v142 = swift_bridgeObjectRetain();
    v143 = (uint64_t)v169;
    static ActionMetrics.notInstrumented.getter(v142);
    v144 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v144, *(unsigned int *)(v144 + 48), *(unsigned __int16 *)(v144 + 52));
    v145 = sub_213C1C(v140._countAndFlagsBits, (uint64_t)v140._object, 1, v143, (uint64_t)sub_209418, (uint64_t)v141);
    swift_release(v141);
    v146 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
    v148 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)v211 & 0xFFFFFFFFFFFFFF8));
    v147 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)v211 & 0xFFFFFFFFFFFFFF8));
    if (v148 >= v147 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
    v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v145);
    specialized Array._endMutation()(v149);
    sub_87180(v196, v199, v200, v209, v201, v197, v136, v134, v203);
    swift_release(v145);
  }
  else
  {
    sub_87180(v196, v199, v200, v209, v201, v197, v198, v134, v203);
  }
  swift_release(v187);
  sub_327A0((uint64_t)v188, v189);
  return v65;
}

uint64_t sub_207E64(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;

  v20 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v3 + 63) >> 6;
  v22 = a2 + 4;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v17 >= v21)
      return swift_release(a1);
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v21)
        return swift_release(a1);
      v18 = *(_QWORD *)(v20 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v21)
          return swift_release(a1);
        v18 = *(_QWORD *)(v20 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v5 = (v18 - 1) & v18;
    v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = a2[7];
    v15 = a2[8];
    __swift_project_boxed_opaque_existential_1(v22, v14);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 368);
    swift_bridgeObjectRetain();
    v16(v12, v13, v14, v15);
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 3;
  if (v19 >= v21)
    return swift_release(a1);
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v21)
      return swift_release(a1);
    v18 = *(_QWORD *)(v20 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_208020(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRetain();
  sub_206364();
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    do
    {
      v7 = a2[7];
      v8 = a2[8];
      __swift_project_boxed_opaque_existential_1(a2 + 4, v7);
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 392))(v5, v6, 0, v7, v8);
      swift_bridgeObjectRelease();
      sub_206364();
      v5 = v9;
      v6 = v10;
    }
    while (v10);
  }
  return sub_15498(a1);
}

uint64_t sub_208104(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = a3;
    v5 = a2;
    v6 = result;
    v7 = *(_QWORD *)(a2 + 16);
    v19 = (_QWORD *)(a3 + 32);
    v8 = 0;
    v9 = 0;
    v23 = swift_bridgeObjectRetain();
    v24 = v4;
    v21 = v3;
    v22 = v5;
    v20 = v7;
    do
    {
      if (v9 < v7)
      {
        v10 = v6 + v8;
        v11 = *(_QWORD *)(v6 + v8 + 32);
        v12 = *(_QWORD *)(v10 + 40);
        v13 = *(_QWORD *)(v4 + 56);
        v14 = *(_QWORD *)(v4 + 64);
        __swift_project_boxed_opaque_existential_1(v19, v13);
        v16 = *(_QWORD *)(v5 + v8 + 32);
        v15 = *(_QWORD *)(v5 + v8 + 40);
        v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 288);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = v13;
        v7 = v20;
        v17(v11, v12, v16, v15, v18, v14);
        v6 = v23;
        v4 = v24;
        v5 = v22;
        swift_bridgeObjectRelease();
        v3 = v21;
        swift_bridgeObjectRelease();
      }
      ++v9;
      v8 += 16;
    }
    while (v3 != v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_208238(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v36 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v31 = v10;
    v32 = v9;
    v33 = v8;
    v34 = v6;
    v35 = v5;
    swift_bridgeObjectRetain();
    v30 = a1;
    v13 = (uint64_t *)(a1 + 40);
    do
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      v16 = a2[7];
      v17 = a2[8];
      __swift_project_boxed_opaque_existential_1(a2 + 4, v16);
      v18 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 392);
      swift_bridgeObjectRetain();
      v18(v14, v15, 0, v16, v17);
      swift_bridgeObjectRelease();
      v13 += 2;
      --v12;
    }
    while (v12);
    a1 = v30;
    swift_bridgeObjectRelease();
    v6 = v34;
    v5 = v35;
    v9 = v32;
    v8 = v33;
    v10 = v31;
  }
  v19 = sub_676C8();
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  v21 = swift_allocObject(&unk_389E10, 32, 7);
  *(_QWORD *)(v21 + 16) = v36;
  *(_QWORD *)(v21 + 24) = a1;
  aBlock[4] = sub_20997C;
  v39 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_44;
  v22 = _Block_copy(aBlock);
  v23 = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = swift_release(v23);
  v25 = v37;
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v28 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v5, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v25, v8, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v25, v9);
}

uint64_t sub_2084C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v7[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[14] = v9;
  v7[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v7[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[17] = v11;
  v7[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UnbookmarkEpisodeIntent(0);
  v7[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[20] = v13;
  v7[21] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_20857C, 0, 0);
}

uint64_t sub_20857C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v18;
  _QWORD *v19;

  v1 = v0[9];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1808DC(0, *(_QWORD *)(v1 + 16), 0);
    v3 = v19;
    v4 = v19[2];
    v5 = 24 * v4 + 48;
    v6 = (uint64_t *)(v1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = v19[3];
      swift_bridgeObjectRetain();
      if (v4 >= v9 >> 1)
        sub_1808DC(v9 > 1, v4 + 1, 1);
      v19[2] = v4 + 1;
      v10 = (char *)v19 + v5;
      *((_QWORD *)v10 - 2) = v8;
      *((_QWORD *)v10 - 1) = v7;
      *v10 = 1;
      v5 += 24;
      v6 += 2;
      ++v4;
      --v2;
    }
    while (v2);
    v0 = v18;
  }
  v11 = (_QWORD *)v0[10];
  UnbookmarkEpisodeIntent.init(episodeIdentifiers:)(v3);
  v12 = v11[13];
  v13 = v11[14];
  __swift_project_boxed_opaque_existential_1(v11 + 10, v12);
  v14 = v11[9];
  v15 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[22] = v15;
  v16 = sub_F1C0(qword_3B7068, (void (*)(uint64_t))&type metadata accessor for UnbookmarkEpisodeIntent, (uint64_t)&protocol conformance descriptor for UnbookmarkEpisodeIntent);
  *v15 = v0;
  v15[1] = sub_2086F8;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v16, v0[21], v14, v0[19], v16, v12, v13);
}

uint64_t sub_2086F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_208944;
  else
    v3 = sub_20875C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_20875C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[18];
  v20 = v0[19];
  v21 = v0[21];
  v2 = v0[15];
  v18 = v0[16];
  v19 = v0[20];
  v3 = v0[13];
  v16 = v0[14];
  v17 = v0[17];
  v4 = v0[11];
  v5 = v0[12];
  v6 = v0[9];
  v7 = sub_676C8();
  v8 = (void *)static OS_dispatch_queue.main.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_389E60, 40, 7);
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v6;
  v0[6] = sub_2099C8;
  v0[7] = v9;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_2C9F4;
  v0[5] = &block_descriptor_51;
  v10 = _Block_copy(v0 + 2);
  sub_76C34(v4, v5);
  v11 = swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter(v11);
  v0[8] = _swiftEmptyArrayStorage;
  v12 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v14 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v13, v14, v3, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v1, v2, v10);
  _Block_release(v10);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  swift_release(v0[7]);
  swift_task_dealloc(v21);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_208944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(v1, *(_QWORD *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2089A8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v42 = a4;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(_QWORD *)(a1 + 16);
  if (v48)
  {
    v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v37 = v12;
    v38 = v11;
    v39 = v10;
    v40 = v8;
    v41 = v7;
    v45 = a2;
    v15 = *(_QWORD *)(a2 + 16);
    v43 = a3 + 4;
    swift_bridgeObjectRetain();
    v16 = 0;
    v17 = 0;
    v46 = a3;
    v44 = v15;
    do
    {
      if (v17 < v15)
      {
        v18 = *(_QWORD *)(a1 + v16 + 40);
        v47 = *(_QWORD *)(a1 + v16 + 32);
        v20 = a3[7];
        v19 = a3[8];
        __swift_project_boxed_opaque_existential_1(v43, v20);
        v21 = *(_QWORD *)(v45 + v16 + 32);
        v22 = *(_QWORD *)(v45 + v16 + 40);
        v23 = a1;
        v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 288);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = v19;
        v15 = v44;
        v24(v47, v18, v21, v22, v20, v25);
        a3 = v46;
        a1 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v17;
      v16 += 16;
    }
    while (v48 != v17);
    swift_bridgeObjectRelease();
    v8 = v40;
    v7 = v41;
    v11 = v38;
    v10 = v39;
    v14 = v36;
    v12 = v37;
  }
  v26 = sub_676C8();
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(&unk_389EB0, 32, 7);
  *(_QWORD *)(v28 + 16) = v42;
  *(_QWORD *)(v28 + 24) = a1;
  aBlock[4] = sub_209A68;
  v50 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_58;
  v29 = _Block_copy(aBlock);
  v30 = v50;
  swift_bridgeObjectRetain();
  swift_retain();
  v31 = swift_release(v30);
  static DispatchQoS.unspecified.getter(v31);
  aBlock[0] = _swiftEmptyArrayStorage;
  v32 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v34 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v7, v32);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_208C9C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v42 = a6;
  v43 = a7;
  v41 = a5;
  v44 = a4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *((_BYTE *)a1 + 32);
  v17 = (unint64_t)a1[7];
  v18 = ~v16;
  v19 = -v16;
  aBlock = a1;
  v49 = (uint64_t)(a1 + 7);
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v50 = (uint64_t (*)(uint64_t))v18;
  v51 = 0;
  v52 = v20 & v17;
  v53 = 0;
  swift_bridgeObjectRetain();
  sub_206364();
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    do
    {
      v25 = a2[7];
      v26 = a2[8];
      __swift_project_boxed_opaque_existential_1(a2 + 4, v25);
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 392))(v23, v24, 0, v25, v26);
      swift_bridgeObjectRelease();
      sub_206364();
      v23 = v27;
      v24 = v28;
    }
    while (v28);
  }
  sub_15498((uint64_t)aBlock);
  v29 = sub_676C8();
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  v31 = swift_allocObject(v41, 32, 7);
  v32 = v44;
  *(_QWORD *)(v31 + 16) = a3;
  *(_QWORD *)(v31 + 24) = v32;
  v52 = v42;
  v53 = v31;
  aBlock = _NSConcreteStackBlock;
  v49 = 1107296256;
  v50 = sub_2C9F4;
  v51 = v43;
  v33 = _Block_copy(&aBlock);
  v34 = v53;
  swift_retain();
  swift_bridgeObjectRetain();
  v35 = swift_release(v34);
  static DispatchQoS.unspecified.getter(v35);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v36 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v38 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v37, v38, v10, v36);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v15, v46);
}

void sub_208F54(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  _BYTE v6[24];

  swift_beginAccess(a1 + 16, v6, 0, 0);
  v4 = *(void (**)(uint64_t))(a1 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 24);
    swift_retain();
    v4(a2);
    sub_327A0((uint64_t)v4, v5);
  }
}

uint64_t EpisodeDeletionActionProvider.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  return v0;
}

uint64_t EpisodeDeletionActionProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 120, 7);
}

_QWORD *sub_209040(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16[2];

  v4 = v3;
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_676C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v8);
  v12 = static OS_dispatch_queue.global(qos:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v4[9] = a1;
  v4[2] = v12;
  v4[3] = a2;
  sub_150C8((uint64_t)a3, (uint64_t)(v4 + 4));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  swift_retain();
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(v16, v13, v13);
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_F4D8(v16, (uint64_t)(v4 + 10));
  return v4;
}

uint64_t sub_209164()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_209178()
{
  uint64_t v0;

  return sub_207E64(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_21(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_209198()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2091C4()
{
  return objectdestroy_5Tm_0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_2091D8()
{
  uint64_t v0;

  return sub_208C9C(*(void ***)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&unk_389F50, (uint64_t)sub_209A68, (uint64_t)&block_descriptor_70);
}

uint64_t sub_20920C()
{
  return objectdestroy_5Tm_0((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_209220()
{
  uint64_t v0;

  return sub_208C9C(*(void ***)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&unk_389F00, (uint64_t)sub_209A68, (uint64_t)&block_descriptor_64);
}

uint64_t sub_209254()
{
  return objectdestroy_5Tm_0((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t objectdestroy_5Tm_0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_bridgeObjectRelease(v2[2]);
  a1(v2[3]);
  swift_release(v2[4]);
  a2(v2[5]);
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_2092BC()
{
  uint64_t v0;

  return sub_2089A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_2092C8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  if (v0[6])
    swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_20930C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_3C189C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_43684;
  return sub_2084C8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_209398()
{
  return objectdestroy_27Tm((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_2093A4()
{
  uint64_t v0;

  return sub_208238(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2093B0()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_2093C4()
{
  uint64_t v0;

  return sub_208020(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_2093CC()
{
  return objectdestroy_27Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t objectdestroy_27Tm(void (*a1)(_QWORD))
{
  _QWORD *v1;

  swift_bridgeObjectRelease(v1[2]);
  a1(v1[3]);
  swift_release(v1[4]);
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_209418()
{
  uint64_t *v0;

  return sub_208104(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for EpisodeDeletionActionProvider()
{
  return objc_opt_self(_TtC8ShelfKit29EpisodeDeletionActionProvider);
}

uint64_t method lookup function for EpisodeDeletionActionProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodeDeletionActionProvider);
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.__allocating_init(asPartOf:episodeDownloadStateController:libraryActionController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.canDeleteEpisode(uuid:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t (*v5)(uint64_t, uint64_t, _OWORD *);
  __int128 v6;
  __int128 v7;
  _OWORD v9[4];
  char v10;

  v4 = *(_BYTE *)(a3 + 64);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *))(*(_QWORD *)v3 + 128);
  v6 = *(_OWORD *)(a3 + 16);
  v9[0] = *(_OWORD *)a3;
  v9[1] = v6;
  v7 = *(_OWORD *)(a3 + 48);
  v9[2] = *(_OWORD *)(a3 + 32);
  v9[3] = v7;
  v10 = v4;
  return v5(a1, a2, v9) & 1;
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodeOrProvideDeleteActions(episodeUuid:stationUuid:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesFromStations(episodeUuids:stationUuids:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of EpisodeDeletionActionProvider.deleteEpisodesOrProvideDeleteActions(episodeUuids:stationUuids:context:noConfirmation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_2094C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  if (a9 >> 62 != 1)
  {
    if (a9 >> 62)
      return result;
    sub_898F4(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  swift_retain();
  return swift_retain();
}

uint64_t destroy for EpisodeDeletionActionProvider.Context(uint64_t a1)
{
  return sub_20957C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
}

uint64_t sub_20957C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  v13 = a4;
  if (a9 >> 62 != 1)
  {
    if (a9 >> 62)
      return result;
    sub_87198(result, a2, a3, a4, a5, a6, a7, a8, a9);
    a2 = a13;
    v13 = a11;
  }
  swift_release(a2);
  return swift_release(v13);
}

uint64_t *initializeWithCopy for EpisodeDeletionActionProvider.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  sub_2094C0(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  return a1;
}

uint64_t assignWithCopy for EpisodeDeletionActionProvider.Context(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = a2[12];
  sub_2094C0(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  sub_20957C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22);
  return a1;
}

uint64_t assignWithTake for EpisodeDeletionActionProvider.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 96) = v3;
  sub_20957C(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeDeletionActionProvider.Context(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64) >> 4;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for EpisodeDeletionActionProvider.Context(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 64) = 16 * -a2;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2098E8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 64) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_209904(uint64_t result)
{
  *(_QWORD *)(result + 64) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_209914(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 64) = *(_QWORD *)(result + 64) & 0xFLL | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = 0x8000000000000000;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDeletionActionProvider.Context()
{
  return &type metadata for EpisodeDeletionActionProvider.Context;
}

uint64_t sub_209968()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_20997C()
{
  uint64_t v0;

  sub_208F54(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_209994()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_2099C8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

uint64_t sub_2099F0()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_209A04()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_209A18()
{
  return objectdestroyTm_7((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t objectdestroyTm_7(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject(v2, 32, 7);
}

uint64_t ThinClientMarkAsUnplayedEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a2;
  v4 = type metadata accessor for EpisodePlayState(0);
  v2[3] = v4;
  v5 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v2[4] = v5;
  v2[5] = v6;
  return swift_task_switch(sub_209B18, 0, 0);
}

uint64_t sub_209B18()
{
  uint64_t *v0;
  uint64_t **v1;

  swift_storeEnumTagMultiPayload(v0[4], v0[3], 4);
  v1 = (uint64_t **)swift_task_alloc(dword_3B7D4C);
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_165350;
  return ThinClientTogglePlayedEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(v0[4], v0[5], v0[2]);
}

uint64_t sub_209B7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[2] = a1;
  v3[3] = a3;
  v5 = type metadata accessor for EpisodePlayState(0);
  v3[4] = v5;
  v6 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v3[5] = v6;
  v3[6] = v7;
  return swift_task_switch(sub_209BE0, 0, 0);
}

uint64_t sub_209BE0()
{
  uint64_t *v0;
  uint64_t **v1;

  swift_storeEnumTagMultiPayload(v0[5], v0[4], 4);
  v1 = (uint64_t **)swift_task_alloc(dword_3B7D4C);
  v0[7] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_209C40;
  return ThinClientTogglePlayedEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(v0[5], v0[6], v0[3]);
}

uint64_t sub_209C40(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE *v8;

  v4 = *(_QWORD *)(*v2 + 56);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    sub_36668(*(_QWORD *)(v5 + 40));
    return swift_task_switch(sub_209CE8, 0, 0);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 40);
    v8 = *(_BYTE **)(v5 + 16);
    sub_36668(v7);
    *v8 = a1 & 1;
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_209CE8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for ThinClientMarkAsUnplayedEpisodeIntentImplementation()
{
  return &type metadata for ThinClientMarkAsUnplayedEpisodeIntentImplementation;
}

uint64_t DismissAction.animationBehavior.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior, v3, 0, 0);
  return *v1;
}

uint64_t DismissAction.animationBehavior.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DismissAction.animationBehavior.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t DismissAction.__allocating_init(title:animationBehavior:presentationStyle:)(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  DismissAction.init(title:animationBehavior:presentationStyle:)(a1, a2, a3, a4);
  return v9;
}

uint64_t DismissAction.init(title:animationBehavior:presentationStyle:)(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v5 = v4;
  v29 = a4;
  v27 = a1;
  v28 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior) = a3;
  v18 = type metadata accessor for ImpressionMetrics(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v20 = static ActionMetrics.notInstrumented.getter(v19);
  UUID.init()(v20);
  v21 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v5 + 16) = v21;
  *(_QWORD *)(v5 + 24) = v23;
  v24 = v28;
  *(_QWORD *)(v5 + 32) = v27;
  *(_QWORD *)(v5 + 40) = v24;
  *(_BYTE *)(v5 + 48) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v14, v11);
  sub_23AB8((uint64_t)v17, v5 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v5;
}

uint64_t DismissAction.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for JSONContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONObject(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52))
           + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior) = 0;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17 = a1;
  v13(v12, a1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v14 = Action.init(deserializing:using:)(v12, (uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v9);
  return v14;
}

uint64_t DismissAction.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v5 = type metadata accessor for JSONContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONObject(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8ShelfKit13DismissAction_animationBehavior) = 0;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v18 = a1;
  v14(v13, a1, v9, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v15 = Action.init(deserializing:using:)(v13, (uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
  return v15;
}

void DismissAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.DismissAction", 22, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_20A2B4()
{
  return type metadata accessor for DismissAction(0);
}

uint64_t type metadata accessor for DismissAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C19C0;
  if (!qword_3C19C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DismissAction);
  return result;
}

uint64_t sub_20A2F8(uint64_t a1)
{
  void *v2;

  v2 = &unk_2FFD30;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 160);
}

uint64_t method lookup function for DismissAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DismissAction);
}

_QWORD *sub_20A344(unint64_t a1)
{
  return sub_20A35C(a1, MTPodcast_ptr);
}

_QWORD *sub_20A350(unint64_t a1)
{
  return sub_20A35C(a1, MTEpisode_ptr);
}

_QWORD *sub_20A35C(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)));
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        v7 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v8 = v6;
        v9 = objc_opt_self(*a2);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (!v10)
        {
          swift_unknownObjectRelease(v8);
          goto LABEL_15;
        }
        v11 = v10;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized ContiguousArray._endMutation()(v13);
        if (v7 == v4)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v14 = 0;
      v15 = v3 + 32;
      while (1)
      {
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        v17 = *(void **)(v15 + 8 * v14);
        v18 = objc_opt_self(*a2);
        v19 = swift_dynamicCastObjCClass(v17, v18);
        if (!v19)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v3 = v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v3);
        specialized ContiguousArray._endMutation()(v21);
        ++v14;
        if (v16 == v4)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
    specialized ContiguousArray.reserveCapacity(_:)(v24);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_20A53C(uint64_t a1)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  _BYTE v11[32];
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  sub_1808C0(0, v2, 0);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1FB98(i, (uint64_t)v11);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A78);
      if (!swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v5, 6))
        break;
      v6 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_1808C0(0, v3[2] + 1, 1);
        v3 = v12;
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_1808C0(v7 > 1, v8 + 1, 1);
        v3 = v12;
      }
      v3[2] = v8 + 1;
      v3[v8 + 4] = v6;
      if (!--v2)
        return v3;
    }
    v10 = 0;
    swift_release(v3);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

_QWORD *sub_20A680(uint64_t a1)
{
  return sub_20A698(a1, type metadata accessor for HighlightItem);
}

_QWORD *sub_20A68C(uint64_t a1)
{
  return sub_20A698(a1, type metadata accessor for LibraryEpisodeLockup);
}

_QWORD *sub_20A698(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[40];
  _QWORD *v15;

  v15 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v4);
  if (!v4)
    return v15;
  for (i = a1 + 32; ; i += 40)
  {
    sub_150C8(i, (uint64_t)v14);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A50);
    v7 = a2(0);
    v8 = swift_dynamicCast(&v13, v14, v6, v7, 6);
    if (!(_DWORD)v8)
      break;
    v9 = v13;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = v15[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
    v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
    specialized ContiguousArray._endMutation()(v11);
    if (!--v4)
      return v15;
  }
  v13 = 0;
  swift_release(v15);
  swift_release(v13);
  return 0;
}

uint64_t TabMenuProvider.__allocating_init(asPartOf:userDefaults:interfaceMode:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;

  v4 = sub_20E104(a1, a2, a3 & 1);
  swift_release(a1);
  return v4;
}

uint64_t sub_20A7D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA858);
  v3 = sub_32914(&qword_3C1C78, &qword_3BA858, (uint64_t)&protocol conformance descriptor for [A]);
  result = Collection.isNotEmpty.getter(v2, v3);
  *a1 = result & 1;
  return result;
}

uint64_t TabMenuProvider.__allocating_init(userDefaults:libraryDataProvider:libraryObserverProvider:categoryObserverProvider:storageTipPublisher:interfaceMode:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v14;
  uint64_t v15;

  v14 = a7 & 1;
  v15 = swift_allocObject(v7, 136, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  sub_F4D8(a4, v15 + 32);
  sub_F4D8(a5, v15 + 72);
  *(_QWORD *)(v15 + 112) = a1;
  *(_BYTE *)(v15 + 120) = v14;
  *(_QWORD *)(v15 + 128) = a6;
  return v15;
}

uint64_t TabMenuProvider.init(userDefaults:libraryDataProvider:libraryObserverProvider:categoryObserverProvider:storageTipPublisher:interfaceMode:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  char v11;

  v11 = a7 & 1;
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  sub_F4D8(a4, v7 + 32);
  sub_F4D8(a5, v7 + 72);
  *(_QWORD *)(v7 + 112) = a1;
  *(_BYTE *)(v7 + 120) = v11;
  *(_QWORD *)(v7 + 128) = a6;
  return v7;
}

uint64_t sub_20A940()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1A98);
  v36 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AA0);
  v37 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AA8);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v32 = TabMenu.Group.items(for:)(*(_BYTE *)(v0 + 120), 0);
  v10 = sub_20C3A0();
  v38 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA8F8);
  v12 = sub_32914(&qword_3BC420, &qword_3BA8F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v13 = Publisher.makeOptional.getter(v11, v12);
  swift_release(v10);
  v38 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AB0);
  v15 = sub_32914(&qword_3C1AB8, &qword_3C1AB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.prepend(_:)(&off_3758F8, v14, v15);
  swift_release(v13);
  v38 = sub_20AD78();
  v17 = v30;
  v16 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v6, v9, v31);
  v18 = sub_32914(&qword_3C1AC0, &qword_3C1AA8, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  Publishers.CombineLatest.init(_:_:)(&v38, v6, v11, v16, v12, v18);
  v19 = swift_allocObject(&unk_38A010, 32, 7);
  *(_BYTE *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = v32;
  v20 = swift_allocObject(&unk_38A038, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_20E3C0;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AC8);
  v22 = sub_32914(&qword_3C1AD0, &qword_3C1A98, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v24 = v33;
  v23 = v34;
  Publisher.map<A>(_:)(sub_20E3F0, v20, v34, v21, v22);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v2, v23);
  v25 = sub_32914(&qword_3C1AD8, &qword_3C1AA0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v26 = v35;
  v27 = Publisher.eraseToAnyPublisher()(v35, v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v26);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
  return v27;
}

uint64_t sub_20AC94(char *a1, uint64_t *a2, char a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  v7 = *((_QWORD *)a1 + 1);
  v8 = a2[1];
  if (v8)
  {
    v9 = *a2;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1C60);
    v11 = swift_allocObject(v10, 80, 7);
    *(_OWORD *)(v11 + 16) = xmmword_2EFAE0;
    *(_BYTE *)(v11 + 32) = a3;
    *(_QWORD *)(v11 + 40) = a4;
    *(_BYTE *)(v11 + 48) = v6;
    *(_QWORD *)(v11 + 56) = v7;
    *(_BYTE *)(v11 + 64) = v9;
    *(_QWORD *)(v11 + 72) = v8;
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1C60);
    v11 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_2EA080;
    *(_BYTE *)(v11 + 32) = a3;
    *(_QWORD *)(v11 + 40) = a4;
    *(_BYTE *)(v11 + 48) = v6;
    *(_QWORD *)(v11 + 56) = v7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v11;
}

uint64_t sub_20AD78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v2);
  v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AE0);
  v48 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AE8);
  v51 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AF0);
  v52 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v47 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1AF8);
  v8 = sub_20E424();
  v9 = (void *)NSUserDefaults.queryPublisher<A>(_:)(sub_20E41C, v0, v7, v8);
  v42 = v9;
  swift_release(v1);
  v55 = v1[16];
  v10 = v55;
  v56 = v9;
  v11 = v1[7];
  v12 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v11);
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  v41 = v13(v11, v12);
  v54 = v41;
  v15 = v1[12];
  v14 = v1[13];
  __swift_project_boxed_opaque_existential_1(v1 + 9, v15);
  v16 = dispatch thunk of CategoryObserverProviderProtocol.categoriesCountForCategoriesInLibraryPublisher.getter(v15, v14);
  v53 = v16;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1B10);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2120);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3628);
  v19 = sub_32914(&qword_3C1B18, &qword_3C1B10, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v20 = sub_32914(&qword_3B2128, &qword_3B2120, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v21 = sub_32914(&qword_3B3638, &qword_3B3628, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v38 = v20;
  v22 = v43;
  Publisher.combineLatest<A, B, C>(_:_:_:)(&v55, &v54, &v53, v40, v17, v18, v18, v19, v38, v21, v21);
  swift_release(v42);
  swift_release(v10);
  swift_release(v41);
  swift_release(v16);
  v23 = sub_676C8();
  v56 = (id)static OS_dispatch_queue.main.getter(v23);
  v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v25 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v45, 1, 1, v24);
  v26 = sub_32914(&qword_3C1B20, &qword_3C1AE0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v27 = sub_F1C0((unint64_t *)&qword_3B2B60, (void (*)(uint64_t))sub_676C8, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v28 = v44;
  v29 = v46;
  Publisher.receive<A>(on:options:)(&v56, v25, v46, v23, v26, v27);
  sub_1459C(v25, &qword_3B2B18);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v29);
  v30 = swift_allocObject(&unk_38A060, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_20E4A0;
  *(_QWORD *)(v30 + 24) = v1;
  v31 = sub_32914(&qword_3C1B28, &qword_3C1AE8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain();
  v32 = v47;
  v33 = v49;
  Publisher.map<A>(_:)(sub_20E4A8, v30, v49, &type metadata for TabMenu.Section, v31);
  swift_release(v30);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v33);
  v34 = sub_32914(&qword_3C1B30, &qword_3C1AF0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v35 = v50;
  v36 = Publisher.eraseToAnyPublisher()(v50, v34);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v35);
  return v36;
}

void sub_20B214(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  NSString v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = *(void **)(a1 + 112);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "arrayForKey:", v5);

  if (v6
    && (v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, (char *)&type metadata for Any + 8),
        v6,
        v8 = sub_20A53C(v7),
        swift_bridgeObjectRelease(),
        v8))
  {
    swift_retain();
    v9 = sub_20DB40((uint64_t)v8, a1);
    swift_bridgeObjectRelease();
    swift_release(a1);
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  *a2 = v9;
}

uint64_t sub_20B308@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(uint64_t);
  int64_t v33;
  uint64_t (*v34)(uint64_t);
  unint64_t v35;
  uint64_t v36;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t *v38;
  char v39;
  _QWORD *v40;
  char v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  _QWORD *v49;
  char v50;
  uint64_t result;
  id v52;
  char *v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t *v85;
  uint64_t v86;
  _BYTE *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);

  v84 = a2;
  v87 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  __chkstk_darwin(v11);
  v83 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TabMenu.Item(0);
  v86 = *((_QWORD *)v13 - 1);
  __chkstk_darwin(v13);
  v81 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v90 = (uint64_t)&v79 - v16;
  __chkstk_darwin(v17);
  v89 = (uint64_t)&v79 - v18;
  __chkstk_darwin(v19);
  v88 = (unint64_t)&v79 - v20;
  __chkstk_darwin(v21);
  v85 = (uint64_t *)((char *)&v79 - v22);
  __chkstk_darwin(v23);
  v25 = (char *)&v79 - v24;
  v26 = (uint64_t (*)(uint64_t))TabMenu.Group.items(for:)(*(_BYTE *)(a5 + 120), 1);
  if (*(_QWORD *)(a1 + 16))
  {
    v27 = sub_20E538();
    swift_bridgeObjectRelease();
    v26 = (uint64_t (*)(uint64_t))v27;
  }
  v94 = v26;
  if (a3 <= 0)
  {
    v28 = *((_QWORD *)v26 + 2);
    if (v28)
    {
      v80 = a4;
      v29 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      v30 = *(_QWORD *)(v86 + 72);
      swift_bridgeObjectRetain();
      v31 = 0;
      v32 = type metadata accessor for TabMenu.Item;
      v82 = v29;
      while (1)
      {
        sub_963D4((uint64_t)v26 + v29, (uint64_t)v25);
        a4 = *(_QWORD *)&v25[v13[7]];
        sub_145D8((uint64_t)v25, type metadata accessor for TabMenu.Item);
        if (a4 == 2)
          break;
        ++v31;
        v29 += v30;
        if (v28 == v31)
        {
          swift_bridgeObjectRelease();
          v33 = *((_QWORD *)v94 + 2);
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      v33 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_98;
      v34 = v94;
      v35 = *((_QWORD *)v94 + 2);
      if (v33 != v35)
      {
        v64 = v30 + v29;
        v32 = (uint64_t (*)(uint64_t))(v31 + 1);
        v6 = (uint64_t)type metadata accessor for TabMenu.Item;
        while ((unint64_t)v32 < v35)
        {
          sub_963D4((uint64_t)v34 + v64, (uint64_t)v25);
          v65 = *(_QWORD *)&v25[v13[7]];
          sub_145D8((uint64_t)v25, type metadata accessor for TabMenu.Item);
          if (v65 != 2)
          {
            if (v32 != (uint64_t (*)(uint64_t))v31)
            {
              if ((v31 & 0x8000000000000000) != 0)
                goto LABEL_91;
              v66 = (unint64_t)v94;
              a4 = *((_QWORD *)v94 + 2);
              if (v31 >= a4)
                goto LABEL_92;
              sub_963D4((uint64_t)v94 + v82 + v31 * v30, (uint64_t)v85);
              if ((unint64_t)v32 >= a4)
                goto LABEL_93;
              sub_963D4(v66 + v64, v88);
              if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
              {
                v66 = sub_1E5B0(v66);
                v94 = (uint64_t (*)(uint64_t))v66;
              }
              if (v31 >= *(_QWORD *)(v66 + 16))
                goto LABEL_94;
              sub_20EB08(v88, v66 + v82 + v31 * v30);
              if ((unint64_t)v32 >= *((_QWORD *)v94 + 2))
                goto LABEL_95;
              sub_20EB08((uint64_t)v85, (uint64_t)v94 + v64);
            }
            v61 = __OFADD__(v31++, 1);
            if (v61)
              goto LABEL_84;
          }
          v33 = (int64_t)v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_82;
          v34 = v94;
          v35 = *((_QWORD *)v94 + 2);
          v32 = (uint64_t (*)(uint64_t))((char *)v32 + 1);
          v64 += v30;
          if (v33 == v35)
            goto LABEL_12;
        }
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
LABEL_12:
      v28 = v31;
LABEL_13:
      a4 = v80;
      if (v33 >= v28)
        goto LABEL_14;
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    v33 = 0;
LABEL_14:
    sub_6B88C(v28, v33);
  }
  v6 = type metadata accessor for Podcasts(0);
  v92 = v6;
  v36 = sub_F1C0((unint64_t *)&qword_3B33B8, (void (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v93 = v36;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v91);
  v38 = *(uint64_t **)(*(_QWORD *)(v6 - 8) + 104);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v38)(boxed_opaque_existential_2Tm, enum case for Podcasts.ponderosa(_:), v6);
  v39 = isFeatureEnabled(_:)(v91);
  __swift_destroy_boxed_opaque_existential_1(v91);
  if ((v39 & 1) == 0
    || (v92 = v6,
        v93 = v36,
        v40 = __swift_allocate_boxed_opaque_existential_2Tm(v91),
        ((void (*)(_QWORD *, _QWORD, uint64_t))v38)(v40, enum case for Podcasts.categoriesInLibrary(_:), v6),
        v41 = isFeatureEnabled(_:)(v91),
        __swift_destroy_boxed_opaque_existential_1(v91),
        (v41 & 1) == 0)
    || (uint64_t)a4 <= 0)
  {
    v42 = v94;
    v43 = *((_QWORD *)v94 + 2);
    if (v43)
    {
      v80 = v6;
      v82 = v36;
      v85 = v38;
      a4 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      v44 = *(_QWORD *)(v86 + 72);
      swift_bridgeObjectRetain();
      v45 = 0;
      v32 = type metadata accessor for TabMenu.Item;
      v88 = a4;
      while (1)
      {
        sub_963D4((uint64_t)v42 + a4, (uint64_t)v25);
        v46 = *(_QWORD *)&v25[v13[7]];
        sub_145D8((uint64_t)v25, type metadata accessor for TabMenu.Item);
        if (v46 == 3)
          break;
        ++v45;
        a4 += v44;
        if (v43 == v45)
        {
          swift_bridgeObjectRelease();
          v47 = *((_QWORD *)v42 + 2);
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      v47 = v45 + 1;
      if (__OFADD__(v45, 1))
        goto LABEL_97;
      v48 = *((_QWORD *)v42 + 2);
      if (v47 != v48)
      {
        a4 += v44;
        v32 = (uint64_t (*)(uint64_t))(v45 + 1);
        v6 = (uint64_t)type metadata accessor for TabMenu.Item;
        while ((unint64_t)v32 < v48)
        {
          sub_963D4((uint64_t)v42 + a4, (uint64_t)v25);
          v58 = *(_QWORD *)&v25[v13[7]];
          sub_145D8((uint64_t)v25, type metadata accessor for TabMenu.Item);
          if (v58 != 3)
          {
            if (v32 != (uint64_t (*)(uint64_t))v45)
            {
              if ((v45 & 0x8000000000000000) != 0)
                goto LABEL_85;
              v59 = (unint64_t)v94;
              v60 = *((_QWORD *)v94 + 2);
              if (v45 >= v60)
                goto LABEL_86;
              sub_963D4((uint64_t)v94 + v88 + v45 * v44, v89);
              if ((unint64_t)v32 >= v60)
                goto LABEL_87;
              sub_963D4(v59 + a4, v90);
              if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
              {
                v59 = sub_1E5B0(v59);
                v94 = (uint64_t (*)(uint64_t))v59;
              }
              if (v45 >= *(_QWORD *)(v59 + 16))
                goto LABEL_88;
              sub_20EB08(v90, v59 + v88 + v45 * v44);
              if ((unint64_t)v32 >= *((_QWORD *)v94 + 2))
                goto LABEL_89;
              sub_20EB08(v89, (uint64_t)v94 + a4);
            }
            v61 = __OFADD__(v45++, 1);
            if (v61)
              goto LABEL_83;
          }
          v47 = (int64_t)v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_80;
          v42 = v94;
          v48 = *((_QWORD *)v94 + 2);
          v32 = (uint64_t (*)(uint64_t))((char *)v32 + 1);
          a4 += v44;
          if (v47 == v48)
            goto LABEL_26;
        }
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
LABEL_26:
      v43 = v45;
LABEL_27:
      v6 = v80;
      v38 = v85;
      v36 = v82;
      if (v47 < v43)
        goto LABEL_90;
    }
    else
    {
      v47 = 0;
    }
    sub_6B88C(v43, v47);
  }
  v32 = v94;
  v92 = v6;
  v93 = v36;
  v49 = __swift_allocate_boxed_opaque_existential_2Tm(v91);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v38)(v49, enum case for Podcasts.storageThresholdTip(_:), v6);
  v50 = isFeatureEnabled(_:)(v91);
  result = __swift_destroy_boxed_opaque_existential_1(v91);
  if ((v50 & 1) != 0)
  {
    v52 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v53 = (char *)objc_msgSend(v52, "horizontalSizeClass");

    if (v53 == (_BYTE *)&dword_0 + 2)
    {
      v54 = _stringCompareWithSmolCheck(_:_:expecting:)(0x72616265646973, 0xE700000000000000, 0x726142626174, 0xE600000000000000, 0);
      result = swift_bridgeObjectRelease();
      if ((v54 & 1) == 0)
        goto LABEL_32;
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
LABEL_39:
    v57 = v87;
    *v87 = 1;
    *((_QWORD *)v57 + 1) = v32;
    return result;
  }
LABEL_32:
  if ((v84 & 1) == 0)
    goto LABEL_39;
  v55 = *((_QWORD *)v32 + 2);
  if (!v55)
    goto LABEL_39;
  a4 = 0;
  v6 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v56 = v83;
  while (*(_QWORD *)((char *)v32 + v13[7] + v6) != 4)
  {
    ++a4;
    v6 += *(_QWORD *)(v86 + 72);
    if (v55 == a4)
      goto LABEL_39;
  }
  if (a4 >= v55)
    goto LABEL_99;
  sub_267BC((uint64_t)v32 + v6 + v13[5], v83, (uint64_t *)&unk_3BC5B0);
  v62 = type metadata accessor for Glyph(0);
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62) == 1)
  {
    result = sub_1459C(v56, (uint64_t *)&unk_3BC5B0);
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  sub_1459C(v56, (uint64_t *)&unk_3BC5B0);
  if (a4 < *((_QWORD *)v32 + 2))
  {
    sub_963D4((uint64_t)v32 + v6, (uint64_t)v25);
    v67 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 16);
    v68 = v81;
    v67(v81, v25, v62);
    v69 = v13[5];
    v70 = &v25[v13[6]];
    v71 = *(_QWORD *)&v25[v13[7]];
    LODWORD(v90) = v25[v13[8]];
    v73 = *(_QWORD *)v70;
    v72 = *((_QWORD *)v70 + 1);
    v74 = v25[v13[9]];
    sub_267BC((uint64_t)&v25[v69], v68 + v69, (uint64_t *)&unk_3BC5B0);
    v75 = v25[v13[11]];
    v76 = v25[v13[12]];
    v77 = (_QWORD *)(v68 + v13[6]);
    *v77 = v73;
    v77[1] = v72;
    *(_QWORD *)(v68 + v13[7]) = v71;
    *(_BYTE *)(v68 + v13[8]) = v90;
    *(_BYTE *)(v68 + v13[9]) = v74;
    *(_BYTE *)(v68 + v13[10]) = 1;
    *(_BYTE *)(v68 + v13[11]) = v75;
    *(_BYTE *)(v68 + v13[12]) = v76;
    swift_bridgeObjectRetain();
    sub_26794(v71);
    sub_145D8((uint64_t)v25, type metadata accessor for TabMenu.Item);
    result = swift_isUniquelyReferenced_nonNull_native(v32);
    v78 = (uint64_t)v32;
    if ((result & 1) != 0)
      goto LABEL_77;
    goto LABEL_101;
  }
LABEL_100:
  __break(1u);
LABEL_101:
  result = sub_1E5B0((unint64_t)v32);
  v78 = result;
LABEL_77:
  if (a4 < *(_QWORD *)(v78 + 16))
  {
    sub_20EB08(v81, v78 + v6);
    result = swift_bridgeObjectRelease();
    v32 = (uint64_t (*)(uint64_t))v78;
    goto LABEL_39;
  }
  __break(1u);
  return result;
}

uint64_t sub_20BC38@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, uint64_t, uint64_t, int *);
  unsigned int (*v33)(char *, uint64_t, int *);
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  char *v53;
  _QWORD v54[2];
  __int128 v55;
  __int128 v56;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC390);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - v10;
  v12 = (int *)type metadata accessor for TabMenu.Item(0);
  v13 = *((_QWORD *)v12 - 1);
  __chkstk_darwin(v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v16 = sub_29724(1701869940, 0xE400000000000000);
  if ((v17 & 1) == 0)
    goto LABEL_7;
  sub_1FB98(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v55);
  if ((swift_dynamicCast(v54, &v55, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_7;
  v53 = v11;
  v19 = v54[0];
  v18 = v54[1];
  if (*(_QWORD *)(a1 + 16) && (v20 = sub_29724(0x64656C62616E65, 0xE700000000000000), (v21 & 1) != 0))
  {
    sub_1FB98(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v56 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1459C((uint64_t)&v55, (uint64_t *)&unk_3BC540);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v13 + 56))(a3, 1, 1, v12);
  }
  if ((swift_dynamicCast(v54, &v55, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v13 + 56))(a3, 1, 1, v12);
  }
  v51 = LOBYTE(v54[0]);
  if (v19 == 0x73776F6873 && v18 == 0xE500000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x73776F6873, 0xE500000000000000, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = &dword_0 + 1;
  }
  else if (v19 == 0x736C656E6E616863 && v18 == 0xE800000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x736C656E6E616863, 0xE800000000000000, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = &dword_0 + 2;
  }
  else if (v19 == 0x6B72616D6B6F6F62 && v18 == 0xE900000000000073
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B72616D6B6F6F62, 0xE900000000000073, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = &dword_C + 3;
  }
  else if (v19 == 0x64616F6C6E776F64 && v18 == 0xEA00000000006465
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x64616F6C6E776F64, 0xEA00000000006465, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = &dword_4;
  }
  else if (v19 == 0x796C746E65636572 && v18 == 0xED00006465646441
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x796C746E65636572, 0xED00006465646441, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = &dword_10;
  }
  else
  {
    if (v19 == 0x796C746E65636572 && v18 == 0xEF64657461647055)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = _stringCompareWithSmolCheck(_:_:expecting:)(0x796C746E65636572, 0xEF64657461647055, v19, v18, 0);
      swift_bridgeObjectRelease();
      if ((v48 & 1) == 0)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v13 + 56))(a3, 1, 1, v12);
    }
    v23 = &dword_10 + 1;
  }
  *(_QWORD *)&v55 = &off_3729C8;
  sub_20E528((uint64_t)v23);
  sub_24A6D8((uint64_t *)&v55, a2 & 1);
  v24 = v55;
  v50 = v15;
  v52 = a3;
  v25 = *(_QWORD *)(v55 + 16);
  if (v25)
  {
    v26 = 0;
    while (1)
    {
      v27 = *(_BYTE *)(v24 + v26 + 32);
      v28 = TabMenu.Group.items(for:)(v27, 0);
      v29 = TabMenu.Group.items(for:)(v27, 1);
      *(_QWORD *)&v55 = v28;
      sub_1E406C((uint64_t)v29);
      v30 = v55;
      sub_26794((uint64_t)v23);
      v31 = sub_12AE98(v30, v23);
      sub_14CD28((uint64_t)v23);
      swift_bridgeObjectRelease();
      if (v31[2])
      {
        sub_963D4((uint64_t)v31 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v8);
        v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56);
        v32(v8, 0, 1, v12);
      }
      else
      {
        v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56);
        v32(v8, 1, 1, v12);
      }
      swift_bridgeObjectRelease();
      v33 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
      if (v33(v8, 1, v12) != 1)
        break;
      ++v26;
      sub_1459C((uint64_t)v8, &qword_3BC390);
      if (v25 == v26)
      {
        swift_release(v24);
        goto LABEL_28;
      }
    }
    swift_release(v24);
    v34 = (uint64_t)v53;
    sub_12B1D0((uint64_t)v8, (uint64_t)v53);
    v32((char *)v34, 0, 1, v12);
    sub_14CD28((uint64_t)v23);
    sub_14CD28((uint64_t)v23);
    v35 = v33((char *)v34, 1, v12);
  }
  else
  {
    swift_release(v55);
    v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56);
LABEL_28:
    v34 = (uint64_t)v53;
    v32(v53, 1, 1, v12);
    sub_14CD28((uint64_t)v23);
    sub_14CD28((uint64_t)v23);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48))(v34, 1, v12);
  }
  if (v35 == 1)
  {
    sub_1459C(v34, &qword_3BC390);
    a3 = v52;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v13 + 56))(a3, 1, 1, v12);
  }
  v36 = type metadata accessor for Glyph(0);
  v37 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v50, v34, v36);
  v38 = (uint64_t *)(v34 + v12[6]);
  v39 = *v38;
  v40 = v38[1];
  v41 = *(_QWORD *)(v34 + v12[7]);
  v42 = *(_BYTE *)(v34 + v12[8]);
  sub_267BC(v34 + v12[5], v37 + v12[5], (uint64_t *)&unk_3BC5B0);
  v43 = *(_BYTE *)(v34 + v12[10]);
  v44 = *(_BYTE *)(v34 + v12[11]);
  v45 = *(_BYTE *)(v34 + v12[12]);
  v46 = (_QWORD *)(v37 + v12[6]);
  *v46 = v39;
  v46[1] = v40;
  *(_QWORD *)(v37 + v12[7]) = v41;
  *(_BYTE *)(v37 + v12[8]) = v42;
  *(_BYTE *)(v37 + v12[9]) = v51;
  *(_BYTE *)(v37 + v12[10]) = v43;
  *(_BYTE *)(v37 + v12[11]) = v44;
  *(_BYTE *)(v37 + v12[12]) = v45;
  swift_bridgeObjectRetain();
  sub_26794(v41);
  sub_145D8(v34, type metadata accessor for TabMenu.Item);
  v47 = v52;
  sub_12B1D0(v37, v52);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, int *))v32)(v47, 0, 1, v12);
}

uint64_t sub_20C3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for ObserverQueue(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1B38);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  if (qword_3B00A0 != -1)
    swift_once(&qword_3B00A0, sub_88A50);
  v18 = qword_3B5018;
  v10 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 200))(&v18, ObjectType, v8);
  swift_storeEnumTagMultiPayload(v3, v1, 2);
  v11 = sub_836F4((uint64_t)v3);
  swift_release(v10);
  sub_145D8((uint64_t)v3, type metadata accessor for ObserverQueue);
  v18 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4D78);
  v13 = sub_32914(&qword_3B4D88, &qword_3B4D78, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_20C58C, 0, v12, &type metadata for TabMenu.Section, v13);
  swift_release(v11);
  v14 = sub_32914(&qword_3C1B40, &qword_3C1B38, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v15 = Publisher.eraseToAnyPublisher()(v4, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

void sub_20C58C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v4 = (int *)type metadata accessor for TabMenu.Item(0);
  v36 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  v10 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    if (v10 < 0)
      v33 = *a1;
    else
      v33 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
  }
  v12 = _swiftEmptyArrayStorage;
  if (!v11)
  {
LABEL_16:
    *(_BYTE *)a2 = 2;
    *(_QWORD *)(a2 + 8) = v12;
    return;
  }
  v37 = _swiftEmptyArrayStorage;
  sub_180924(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    v35 = a2;
    v12 = v37;
    if ((v10 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      do
      {
        v14 = v10;
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13);
        static Glyph.Sidebar.station.getter(v15);
        v17 = *(_QWORD *)(v15 + 32);
        v16 = *(_QWORD *)(v15 + 40);
        v18 = &v9[v4[5]];
        v19 = type metadata accessor for Glyph(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
        v20 = &v9[v4[6]];
        *(_QWORD *)v20 = v17;
        *((_QWORD *)v20 + 1) = v16;
        *(_QWORD *)&v9[v4[7]] = v15;
        v9[v4[8]] = 1;
        v9[v4[9]] = 1;
        v9[v4[10]] = 0;
        v9[v4[11]] = 1;
        v9[v4[12]] = 1;
        v37 = v12;
        v22 = v12[2];
        v21 = v12[3];
        swift_bridgeObjectRetain();
        if (v22 >= v21 >> 1)
        {
          sub_180924(v21 > 1, v22 + 1, 1);
          v12 = v37;
        }
        ++v13;
        v12[2] = v22 + 1;
        sub_12B1D0((uint64_t)v9, (uint64_t)v12+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v22);
        v10 = v14;
      }
      while (v11 != v13);
    }
    else
    {
      v23 = (uint64_t *)(v10 + 32);
      do
      {
        v24 = *v23;
        v25 = swift_retain();
        static Glyph.Sidebar.station.getter(v25);
        v27 = *(_QWORD *)(v24 + 32);
        v26 = *(_QWORD *)(v24 + 40);
        v28 = &v6[v4[5]];
        v29 = type metadata accessor for Glyph(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
        v30 = &v6[v4[6]];
        *(_QWORD *)v30 = v27;
        *((_QWORD *)v30 + 1) = v26;
        *(_QWORD *)&v6[v4[7]] = v24;
        v6[v4[8]] = 1;
        v6[v4[9]] = 1;
        v6[v4[10]] = 0;
        v6[v4[11]] = 1;
        v6[v4[12]] = 1;
        v37 = v12;
        v32 = v12[2];
        v31 = v12[3];
        swift_bridgeObjectRetain();
        if (v32 >= v31 >> 1)
        {
          sub_180924(v31 > 1, v32 + 1, 1);
          v12 = v37;
        }
        v12[2] = v32 + 1;
        sub_12B1D0((uint64_t)v6, (uint64_t)v12+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v32);
        ++v23;
        --v11;
      }
      while (v11);
    }
    a2 = v35;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_20C8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for TabMenu.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD **)(a1 + *(int *)(v5 + 28));
  v9 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v10 = &OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount;
  while (2)
  {
    v11 = *(int **)(v7 + *(int *)(v5 + 28));
    switch((unint64_t)v8)
    {
      case 1uLL:
        if (v11 != (int *)((char *)&dword_0 + 1))
          goto LABEL_4;
        goto LABEL_58;
      case 2uLL:
        if (v11 == (int *)((char *)&dword_0 + 2))
          goto LABEL_58;
        goto LABEL_4;
      case 3uLL:
        if (v11 == (int *)((char *)&dword_0 + 3))
          goto LABEL_58;
        goto LABEL_4;
      case 4uLL:
        if (v11 == &dword_4)
          goto LABEL_58;
        goto LABEL_4;
      case 5uLL:
        if (v11 == (int *)((char *)&dword_4 + 1))
          goto LABEL_58;
        goto LABEL_4;
      case 6uLL:
        if (v11 == (int *)((char *)&dword_4 + 2))
          goto LABEL_58;
        goto LABEL_4;
      case 7uLL:
        if (v11 == (int *)((char *)&dword_4 + 3))
          goto LABEL_58;
        goto LABEL_4;
      case 8uLL:
        if (v11 == &dword_8)
          goto LABEL_58;
        goto LABEL_4;
      case 9uLL:
        if (v11 == (int *)((char *)&dword_8 + 1))
          goto LABEL_58;
        goto LABEL_4;
      case 0xAuLL:
        if (v11 == (int *)((char *)&dword_8 + 2))
          goto LABEL_58;
        goto LABEL_4;
      case 0xBuLL:
        if (v11 == (int *)((char *)&dword_8 + 3))
          goto LABEL_58;
        goto LABEL_4;
      case 0xCuLL:
        if (v11 == &dword_C)
          goto LABEL_58;
        goto LABEL_4;
      case 0xDuLL:
        if (v11 == (int *)((char *)&dword_C + 1))
          goto LABEL_58;
        goto LABEL_4;
      case 0xEuLL:
        if (v11 == (int *)((char *)&dword_C + 2))
          goto LABEL_58;
        goto LABEL_4;
      case 0xFuLL:
        if (v11 == (int *)((char *)&dword_C + 3))
          goto LABEL_58;
        goto LABEL_4;
      case 0x10uLL:
        if (v11 == &dword_10)
          goto LABEL_58;
        goto LABEL_4;
      case 0x11uLL:
        if (v11 != (int *)((char *)&dword_10 + 1))
          goto LABEL_4;
        goto LABEL_58;
      default:
        if ((unint64_t)v11 - 1 < 0x11)
          goto LABEL_4;
        if (!v8)
        {
          if (!v11)
            goto LABEL_58;
          v24 = v10;
          sub_267A8(0);
          v10 = v24;
          goto LABEL_4;
        }
        if (!v11)
          goto LABEL_4;
        v12 = v8[2];
        v13 = v8[3];
        v14 = *((_QWORD *)v11 + 2);
        v15 = *((_QWORD *)v11 + 3);
        if (v12 != v14 || v13 != v15)
        {
          v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v15, 0);
          v10 = &OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount;
          if ((v17 & 1) == 0)
            goto LABEL_4;
        }
        v18 = v8[4];
        v19 = v8[5];
        v20 = *((_QWORD *)v11 + 4);
        v21 = *((_QWORD *)v11 + 5);
        v22 = v18 == v20 && v19 == v21;
        if (!v22
          && (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v20, v21, 0),
              v10 = &OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount,
              (v23 & 1) == 0)
          || *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount) != *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount)
          || *(_QWORD *)((char *)v8 + *v10) != *(_QWORD *)((char *)v11 + *v10))
        {
LABEL_4:
          v7 += v9;
          if (!--v2)
          {
            v25 = 0;
            goto LABEL_59;
          }
          continue;
        }
LABEL_58:
        v25 = 1;
LABEL_59:
        swift_bridgeObjectRelease();
        return v25;
    }
  }
}

_QWORD *sub_20CB3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;

  result = TabMenu.Group.items(for:)(*(_BYTE *)(v1 + 120), 0);
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20CB6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t inited;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  unint64_t v76;
  void *v77;
  Class isa;
  NSString v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  const char *v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t *v87;
  __int128 v88;
  uint64_t v89;
  int64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[96];
  _QWORD *v96;
  uint64_t *v97;

  v82 = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C38);
  __chkstk_darwin(v3);
  v86 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TabMenu.Item(0);
  v90 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v80 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - v12;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1B48);
  __chkstk_darwin(v89);
  *(_QWORD *)&v88 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = a1;
  v15 = *(void **)(v1 + 112);
  swift_bridgeObjectRetain();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "arrayForKey:", v16);

  v84 = v15;
  v83 = "_TtC8ShelfKit13DismissAction";
  if (v17
    && (v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, (char *)&type metadata for Any + 8),
        v17,
        v19 = sub_20A53C(v18),
        swift_bridgeObjectRelease(),
        v19))
  {
    swift_retain();
    v20 = v82;
    v21 = sub_20DB40((uint64_t)v19, v1);
    v82 = v20;
    swift_bridgeObjectRelease();
    swift_release(v1);
  }
  else
  {
    v21 = _swiftEmptyArrayStorage;
  }
  v87 = (uint64_t *)v21[2];
  if (v87)
  {
    v81 = v7;
    v22 = 0;
    v85 = v21;
    while (1)
    {
      if (v22 >= v21[2])
        goto LABEL_95;
      v24 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v25 = *(_QWORD *)(v90 + 72);
      v26 = *(int *)(v89 + 48);
      v27 = v88;
      sub_963D4((uint64_t)v21 + v24 + v25 * v22, v88);
      *(_QWORD *)(v27 + v26) = v22;
      sub_12B1D0(v27, (uint64_t)v13);
      v28 = v97[2];
      if (v28)
        break;
      if (v22)
        goto LABEL_96;
LABEL_8:
      v23 = v86;
      sub_963D4((uint64_t)v13, v86);
      sub_6B344(v22, v22, v23);
LABEL_9:
      ++v22;
      sub_145D8((uint64_t)v13, type metadata accessor for TabMenu.Item);
      if ((uint64_t *)v22 == v87)
      {
        a1 = v97;
        v7 = v81;
        goto LABEL_72;
      }
    }
    v29 = *(int *)(v5 + 28);
    v30 = (uint64_t)v97 + v24;
    v91 = v97;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_963D4(v30, (uint64_t)v10);
      v31 = *(_QWORD **)&v10[*(int *)(v5 + 28)];
      v32 = *(int **)&v13[v29];
      switch((unint64_t)v31)
      {
        case 1uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_0 + 1))
            goto LABEL_67;
          goto LABEL_16;
        case 2uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_0 + 2))
            goto LABEL_67;
          goto LABEL_16;
        case 3uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_0 + 3))
            goto LABEL_67;
          goto LABEL_16;
        case 4uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == &dword_4)
            goto LABEL_67;
          goto LABEL_16;
        case 5uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_4 + 1))
            goto LABEL_67;
          goto LABEL_16;
        case 6uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_4 + 2))
            goto LABEL_67;
          goto LABEL_16;
        case 7uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_4 + 3))
            goto LABEL_67;
          goto LABEL_16;
        case 8uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == &dword_8)
            goto LABEL_67;
          goto LABEL_16;
        case 9uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_8 + 1))
            goto LABEL_67;
          goto LABEL_16;
        case 0xAuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_8 + 2))
            goto LABEL_67;
          goto LABEL_16;
        case 0xBuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_8 + 3))
            goto LABEL_67;
          goto LABEL_16;
        case 0xCuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == &dword_C)
            goto LABEL_67;
          goto LABEL_16;
        case 0xDuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_C + 1))
            goto LABEL_67;
          goto LABEL_16;
        case 0xEuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_C + 2))
            goto LABEL_67;
          goto LABEL_16;
        case 0xFuLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_C + 3))
            goto LABEL_67;
          goto LABEL_16;
        case 0x10uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == &dword_10)
            goto LABEL_67;
          goto LABEL_16;
        case 0x11uLL:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
          if (v32 == (int *)((char *)&dword_10 + 1))
            goto LABEL_67;
          goto LABEL_16;
        default:
          if ((unint64_t)v32 - 1 < 0x11)
            goto LABEL_15;
          if (v31)
          {
            if (v32)
            {
              v33 = v31[2];
              v34 = v31[3];
              v35 = *((_QWORD *)v32 + 2);
              v36 = *((_QWORD *)v32 + 3);
              v37 = v33 == v35 && v34 == v36;
              if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v35, v36, 0) & 1) != 0)
              {
                v38 = v31[4];
                v39 = v31[5];
                v40 = *((_QWORD *)v32 + 4);
                v41 = *((_QWORD *)v32 + 5);
                v42 = v38 == v40 && v39 == v41;
                if ((v42 || (_stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, v40, v41, 0) & 1) != 0)
                  && *(_QWORD *)((char *)v31 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount) == *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount))
                {
                  v43 = *(_QWORD *)((char *)v31 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                  v44 = *(_QWORD *)((char *)v32 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                  sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
                  if (v43 == v44)
                    goto LABEL_67;
                  goto LABEL_16;
                }
              }
            }
          }
          else
          {
            if (!v32)
            {
              sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
LABEL_67:
              swift_bridgeObjectRelease();
              v21 = v85;
              goto LABEL_9;
            }
            sub_267A8(0);
          }
LABEL_15:
          sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
LABEL_16:
          v30 += v25;
          if (!--v28)
          {
            v45 = v91;
            swift_bridgeObjectRelease();
            v21 = v85;
            if (v45[2] < v22)
              goto LABEL_96;
            goto LABEL_8;
          }
          break;
      }
    }
  }
LABEL_72:
  swift_bridgeObjectRelease();
  v46 = a1[2];
  if (v46)
  {
    v96 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_180950(0, v46, 0);
    v47 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    v87 = a1;
    v48 = (uint64_t)a1 + v47;
    v89 = *(_QWORD *)(v90 + 72);
    v91 = &v94;
    v88 = xmmword_2EA080;
    while (1)
    {
      sub_963D4(v48, (uint64_t)v7);
      v49 = 0;
      v50 = 0xE500000000000000;
      v51 = 0x73776F6873;
      switch(*(_QWORD *)&v7[*(int *)(v5 + 28)])
      {
        case 1:
          goto LABEL_81;
        case 2:
          v50 = 0xE800000000000000;
          v51 = 0x736C656E6E616863;
          goto LABEL_81;
        case 4:
          v50 = 0xEA00000000006465;
          v51 = 0x64616F6C6E776F64;
          goto LABEL_81;
        case 0xFLL:
          v50 = 0xE900000000000073;
          v51 = 0x6B72616D6B6F6F62;
          goto LABEL_81;
        case 0x10:
          v50 = 0xED00006465646441;
          goto LABEL_80;
        case 0x11:
          v50 = 0xEF64657461647055;
LABEL_80:
          v51 = 0x796C746E65636572;
LABEL_81:
          v90 = v46;
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5020);
          inited = swift_initStackObject(v52, v95);
          *(_OWORD *)(inited + 16) = v88;
          *(_QWORD *)(inited + 32) = 1701869940;
          v54 = inited + 32;
          *(_QWORD *)(inited + 72) = &type metadata for String;
          *(_QWORD *)(inited + 40) = 0xE400000000000000;
          *(_QWORD *)(inited + 48) = v51;
          *(_QWORD *)(inited + 56) = v50;
          *(_QWORD *)(inited + 80) = 0x64656C62616E65;
          v55 = inited + 80;
          *(_QWORD *)(inited + 88) = 0xE700000000000000;
          v56 = v5;
          v57 = *(int *)(v5 + 36);
          v58 = v7;
          LOBYTE(v57) = v7[v57];
          *(_QWORD *)(inited + 120) = &type metadata for Bool;
          *(_BYTE *)(inited + 96) = v57;
          __swift_instantiateConcreteTypeFromMangledName(&qword_3B1810);
          v49 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(2);
          swift_retain();
          sub_267BC(v54, (uint64_t)&v92, &qword_3B6B78);
          v59 = v92;
          v60 = v93;
          v61 = sub_29724(v92, v93);
          if ((v62 & 1) != 0)
            goto LABEL_93;
          *(_QWORD *)((char *)v49 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v61;
          v63 = (uint64_t *)(v49[6] + 16 * v61);
          *v63 = v59;
          v63[1] = v60;
          sub_1F460(v91, (_OWORD *)(v49[7] + 32 * v61));
          v64 = v49[2];
          v65 = __OFADD__(v64, 1);
          v66 = v64 + 1;
          if (v65)
            goto LABEL_94;
          v49[2] = v66;
          sub_267BC(v55, (uint64_t)&v92, &qword_3B6B78);
          v67 = v92;
          v68 = v93;
          v69 = sub_29724(v92, v93);
          if ((v70 & 1) != 0)
          {
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
            JUMPOUT(0x20D624);
          }
          *(_QWORD *)((char *)v49 + ((v69 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v69;
          v71 = (uint64_t *)(v49[6] + 16 * v69);
          *v71 = v67;
          v71[1] = v68;
          sub_1F460(v91, (_OWORD *)(v49[7] + 32 * v69));
          v72 = v49[2];
          v65 = __OFADD__(v72, 1);
          v73 = v72 + 1;
          if (v65)
            goto LABEL_94;
          v49[2] = v73;
          swift_release(v49);
          swift_bridgeObjectRelease();
          v7 = v58;
          v5 = v56;
          v46 = v90;
LABEL_86:
          sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
          v74 = v96;
          if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
          {
            sub_180950(0, v74[2] + 1, 1);
            v74 = v96;
          }
          v76 = v74[2];
          v75 = v74[3];
          if (v76 >= v75 >> 1)
          {
            sub_180950(v75 > 1, v76 + 1, 1);
            v74 = v96;
          }
          v74[2] = v76 + 1;
          v74[v76 + 4] = v49;
          v48 += v89;
          if (!--v46)
          {
            swift_bridgeObjectRelease();
            goto LABEL_92;
          }
          break;
        default:
          goto LABEL_86;
      }
    }
  }
LABEL_92:
  v77 = v84;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_3BE930);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v79 = String._bridgeToObjectiveC()();
  objc_msgSend(v77, "setObject:forKey:", isa, v79);

}

uint64_t sub_20D6AC(int *a1)
{
  uint64_t v1;
  void *v3;
  NSString v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;

  v3 = *(void **)(v1 + 112);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "arrayForKey:", v4);

  if (v5
    && (v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8),
        v5,
        v7 = sub_20A53C(v6),
        swift_bridgeObjectRelease(),
        v7))
  {
    swift_retain();
    v8 = sub_20DB40((uint64_t)v7, v1);
    swift_bridgeObjectRelease();
    swift_release(v1);
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  sub_26794((uint64_t)a1);
  v9 = sub_20DD58((uint64_t)v8, a1);
  sub_267A8((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_20CB6C(v9);
  return swift_bridgeObjectRelease();
}

uint64_t TabMenuProvider.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 128));
  return v0;
}

uint64_t TabMenuProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 128));
  return swift_deallocClassInstance(v0, 136, 7);
}

uint64_t TabMenu.Item.libraryTypeKey.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = type metadata accessor for TabMenu.Item(0);
  result = 0;
  switch(*(_QWORD *)(v0 + *(int *)(v1 + 28)))
  {
    case 1:
      result = 0x73776F6873;
      break;
    case 2:
      result = 0x736C656E6E616863;
      break;
    case 4:
      result = 0x64616F6C6E776F64;
      break;
    case 0xFLL:
      result = 0x6B72616D6B6F6F62;
      break;
    case 0x10:
    case 0x11:
      result = 0x796C746E65636572;
      break;
    default:
      return result;
  }
  return result;
}

void sub_20D958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v5 = type metadata accessor for TabMenu.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v21 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - v9;
  v11 = _swiftEmptyArrayStorage;
  v22 = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v12 = 0;
    v18 = a2;
    v19 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v14 = *(_QWORD *)(v6 + 72);
      sub_963D4(a1 + v13 + v14 * v12, (uint64_t)v10);
      v15 = sub_20C8BC((uint64_t)v10, a2);
      if (v2)
      {
        sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
        swift_release(v11);
        swift_bridgeObjectRelease();
        return;
      }
      if ((v15 & 1) != 0)
      {
        sub_12B1D0((uint64_t)v10, v21);
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          sub_180924(0, v11[2] + 1, 1);
        v11 = v22;
        v17 = v22[2];
        v16 = v22[3];
        if (v17 >= v16 >> 1)
        {
          sub_180924(v16 > 1, v17 + 1, 1);
          v11 = v22;
        }
        v11[2] = v17 + 1;
        sub_12B1D0(v21, (uint64_t)v11 + v13 + v17 * v14);
        a2 = v18;
        a1 = v19;
      }
      else
      {
        sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
      }
      if (v20 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_20DB40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC390);
  __chkstk_darwin(v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TabMenu.Item(0);
  v8 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v22 = (uint64_t)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return _swiftEmptyArrayStorage;
  v21[1] = v2;
  v14 = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = _swiftEmptyArrayStorage;
  v21[2] = a1;
  do
  {
    v17 = swift_bridgeObjectRetain();
    sub_20BC38(v17, v14, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v23) == 1)
    {
      sub_1459C((uint64_t)v7, &qword_3BC390);
    }
    else
    {
      sub_12B1D0((uint64_t)v7, (uint64_t)v12);
      sub_12B1D0((uint64_t)v12, v22);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (_QWORD *)sub_111EC(0, v16[2] + 1, 1, (unint64_t)v16);
      v19 = v16[2];
      v18 = v16[3];
      if (v19 >= v18 >> 1)
        v16 = (_QWORD *)sub_111EC(v18 > 1, v19 + 1, 1, (unint64_t)v16);
      v16[2] = v19 + 1;
      sub_12B1D0(v22, (uint64_t)v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v19);
    }
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *sub_20DD58(uint64_t a1, int *a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;

  v5 = (int *)type metadata accessor for TabMenu.Item(0);
  v6 = *((_QWORD *)v5 - 1);
  __chkstk_darwin(v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v37[1] = v2;
    v42 = _swiftEmptyArrayStorage;
    sub_180924(0, v9, 0);
    v10 = v42;
    v41 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v41;
    v40 = *(_QWORD *)(v6 + 72);
    v38 = (unint64_t)a2 - 1;
    while (2)
    {
      v12 = *(_QWORD **)(v11 + v5[7]);
      switch((unint64_t)v12)
      {
        case 1uLL:
          if (a2 == (int *)((char *)&dword_0 + 1))
            goto LABEL_53;
          goto LABEL_54;
        case 2uLL:
          if (a2 != (int *)((char *)&dword_0 + 2))
            goto LABEL_54;
          goto LABEL_53;
        case 3uLL:
          if (a2 != (int *)((char *)&dword_0 + 3))
            goto LABEL_54;
          goto LABEL_53;
        case 4uLL:
          if (a2 != &dword_4)
            goto LABEL_54;
          goto LABEL_53;
        case 5uLL:
          if (a2 != (int *)((char *)&dword_4 + 1))
            goto LABEL_54;
          goto LABEL_53;
        case 6uLL:
          if (a2 != (int *)((char *)&dword_4 + 2))
            goto LABEL_54;
          goto LABEL_53;
        case 7uLL:
          if (a2 != (int *)((char *)&dword_4 + 3))
            goto LABEL_54;
          goto LABEL_53;
        case 8uLL:
          if (a2 != &dword_8)
            goto LABEL_54;
          goto LABEL_53;
        case 9uLL:
          if (a2 != (int *)((char *)&dword_8 + 1))
            goto LABEL_54;
          goto LABEL_53;
        case 0xAuLL:
          if (a2 != (int *)((char *)&dword_8 + 2))
            goto LABEL_54;
          goto LABEL_53;
        case 0xBuLL:
          if (a2 != (int *)((char *)&dword_8 + 3))
            goto LABEL_54;
          goto LABEL_53;
        case 0xCuLL:
          if (a2 != &dword_C)
            goto LABEL_54;
          goto LABEL_53;
        case 0xDuLL:
          if (a2 != (int *)((char *)&dword_C + 1))
            goto LABEL_54;
          goto LABEL_53;
        case 0xEuLL:
          if (a2 != (int *)((char *)&dword_C + 2))
            goto LABEL_54;
          goto LABEL_53;
        case 0xFuLL:
          if (a2 != (int *)((char *)&dword_C + 3))
            goto LABEL_54;
          goto LABEL_53;
        case 0x10uLL:
          if (a2 != &dword_10)
            goto LABEL_54;
          goto LABEL_53;
        case 0x11uLL:
          if (a2 == (int *)((char *)&dword_10 + 1))
            goto LABEL_53;
          goto LABEL_54;
        default:
          if (v38 < 0x11)
            goto LABEL_54;
          if (v12)
          {
            if (!a2)
              goto LABEL_54;
            v13 = v12[2];
            v14 = v12[3];
            v15 = *((_QWORD *)a2 + 2);
            v16 = *((_QWORD *)a2 + 3);
            v17 = v13 == v15 && v14 == v16;
            if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0) & 1) == 0)
              goto LABEL_54;
            v18 = v12[4];
            v19 = v12[5];
            v20 = *((_QWORD *)a2 + 4);
            v21 = *((_QWORD *)a2 + 5);
            v22 = v18 == v20 && v19 == v21;
            if (!v22 && (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v20, v21, 0) & 1) == 0
              || *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount) != *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount)
              || *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount) != *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount))
            {
              goto LABEL_54;
            }
          }
          else if (a2)
          {
            sub_267A8(0);
LABEL_54:
            sub_963D4(v11, (uint64_t)v8);
            goto LABEL_56;
          }
LABEL_53:
          if ((*(_BYTE *)(v11 + v5[9]) & 1) != 0)
            goto LABEL_54;
          v23 = type metadata accessor for Glyph(0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v11, v23);
          v24 = v5[5];
          v25 = (uint64_t *)(v11 + v5[6]);
          v26 = a2;
          v28 = *v25;
          v27 = v25[1];
          v39 = *(unsigned __int8 *)(v11 + v5[8]);
          sub_267BC(v11 + v24, (uint64_t)&v8[v24], (uint64_t *)&unk_3BC5B0);
          v29 = *(_BYTE *)(v11 + v5[10]);
          v30 = *(_BYTE *)(v11 + v5[11]);
          v31 = *(_BYTE *)(v11 + v5[12]);
          v32 = &v8[v5[6]];
          *(_QWORD *)v32 = v28;
          *((_QWORD *)v32 + 1) = v27;
          a2 = v26;
          *(_QWORD *)&v8[v5[7]] = v12;
          v8[v5[8]] = v39;
          v8[v5[9]] = 1;
          v8[v5[10]] = v29;
          v8[v5[11]] = v30;
          v8[v5[12]] = v31;
          swift_bridgeObjectRetain();
          sub_26794((uint64_t)v12);
LABEL_56:
          v42 = v10;
          v34 = v10[2];
          v33 = v10[3];
          if (v34 >= v33 >> 1)
          {
            sub_180924(v33 > 1, v34 + 1, 1);
            v10 = v42;
          }
          v10[2] = v34 + 1;
          v35 = v40;
          sub_12B1D0((uint64_t)v8, (uint64_t)v10 + v41 + v34 * v40);
          v11 += v35;
          if (!--v9)
            return v10;
          continue;
      }
    }
  }
  return v10;
}

uint64_t sub_20E104(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  int v26;
  uint64_t v27;
  __int128 v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a2;
  v26 = a3 & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA838);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1C68);
  *(_QWORD *)&v25 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8E00);
  BaseObjectGraph.inject<A>(_:)(&v30, v10, v10);
  v11 = v31;
  v12 = v32;
  __swift_project_boxed_opaque_existential_1(&v30, v31);
  v13 = dispatch thunk of TipProvider.tips.getter(v11, v12);
  *(_QWORD *)&v28[0] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA850);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA858);
  v16 = sub_32914(&qword_3BA860, &qword_3BA850, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_115E50, 0, v14, v15, v16);
  swift_release(v13);
  __swift_destroy_boxed_opaque_existential_1(&v30);
  Publishers.Map.map<A>(_:)(sub_20A7D8, 0, v3, &type metadata for Bool);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17 = sub_32914(&qword_3C1C70, &qword_3C1C68, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v18 = Publisher.eraseToAnyPublisher()(v7, v17);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  BaseObjectGraph.inject<A>(_:)(&v29, v19, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F28);
  v25 = v29;
  BaseObjectGraph.inject<A>(_:)(&v30, v20, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB110);
  BaseObjectGraph.inject<A>(_:)(v28, v21, v21);
  v22 = type metadata accessor for TabMenuProvider();
  v23 = swift_allocObject(v22, 136, 7);
  *(_OWORD *)(v23 + 16) = v25;
  sub_F4D8(&v30, v23 + 32);
  sub_F4D8(v28, v23 + 72);
  *(_QWORD *)(v23 + 112) = v27;
  *(_BYTE *)(v23 + 120) = v26;
  *(_QWORD *)(v23 + 128) = v18;
  return v23;
}

uint64_t sub_20E39C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_20E3C0(char *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_20AC94(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_20E3CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_20E3F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(a1, a1 + 16);
  *a2 = result;
  return result;
}

void sub_20E41C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_20B214(v1, a1);
}

unint64_t sub_20E424()
{
  unint64_t result;

  result = qword_3C1B00;
  if (!qword_3C1B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1AF8);
    sub_F1C0(&qword_3C1B08, (void (*)(uint64_t))type metadata accessor for TabMenu.Item, (uint64_t)&protocol conformance descriptor for TabMenu.Item);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A]);
    atomic_store(result, (unint64_t *)&qword_3C1B00);
  }
  return result;
}

uint64_t sub_20E4A0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;

  return sub_20B308(a1, a2, a3, a4, v5, a5);
}

uint64_t sub_20E4A8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t type metadata accessor for TabMenuProvider()
{
  return objc_opt_self(_TtC8ShelfKit15TabMenuProvider);
}

uint64_t method lookup function for TabMenuProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabMenuProvider);
}

uint64_t dispatch thunk of TabMenuProvider.__allocating_init(userDefaults:libraryDataProvider:libraryObserverProvider:categoryObserverProvider:storageTipPublisher:interfaceMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 128))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of DownloadButtonPresenter.view.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of TabMenuProvider.rootGroup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_20E528(uint64_t result)
{
  if (result != 18)
    return sub_26794(result);
  return result;
}

uint64_t sub_20E538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C38);
  __chkstk_darwin(v1);
  v45 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TabMenu.Item(0);
  v49 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v44 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1C58);
  __chkstk_darwin(v48);
  v47 = (uint64_t *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = TabMenu.Group.items(for:)(*(_BYTE *)(v0 + 120), 1);
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  sub_20D958(v13, (uint64_t)v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  v51 = v15;
  v46 = v12[2];
  if (!v46)
  {
    swift_bridgeObjectRelease();
    return v15;
  }
  v16 = 0;
  v43 = v12;
LABEL_9:
  if ((unint64_t)v16 >= v12[2])
  {
    __break(1u);
    JUMPOUT(0x20EAC4);
  }
  v22 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v23 = *(_QWORD *)(v49 + 72);
  v24 = (uint64_t)v47 + *(int *)(v48 + 48);
  *v47 = v16;
  sub_963D4((uint64_t)v12 + v22 + v23 * v16, v24);
  sub_12B1D0(v24, (uint64_t)v10);
  v17 = v51;
  v25 = *(_QWORD *)(v51 + 16);
  if (!v25)
    goto LABEL_4;
  v26 = *(int *)(v3 + 28);
  v27 = v51 + v22;
  v50 = v51;
  swift_bridgeObjectRetain();
  while (2)
  {
    sub_963D4(v27, (uint64_t)v7);
    v28 = *(_QWORD **)&v7[*(int *)(v3 + 28)];
    v29 = *(int **)&v10[v26];
    switch((unint64_t)v28)
    {
      case 1uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 != (int *)((char *)&dword_0 + 1))
          goto LABEL_13;
        goto LABEL_68;
      case 2uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_0 + 2))
          goto LABEL_68;
        goto LABEL_13;
      case 3uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_0 + 3))
          goto LABEL_68;
        goto LABEL_13;
      case 4uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == &dword_4)
          goto LABEL_68;
        goto LABEL_13;
      case 5uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_4 + 1))
          goto LABEL_68;
        goto LABEL_13;
      case 6uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_4 + 2))
          goto LABEL_68;
        goto LABEL_13;
      case 7uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_4 + 3))
          goto LABEL_68;
        goto LABEL_13;
      case 8uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == &dword_8)
          goto LABEL_68;
        goto LABEL_13;
      case 9uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_8 + 1))
          goto LABEL_68;
        goto LABEL_13;
      case 0xAuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_8 + 2))
          goto LABEL_68;
        goto LABEL_13;
      case 0xBuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_8 + 3))
          goto LABEL_68;
        goto LABEL_13;
      case 0xCuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == &dword_C)
          goto LABEL_68;
        goto LABEL_13;
      case 0xDuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_C + 1))
          goto LABEL_68;
        goto LABEL_13;
      case 0xEuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_C + 2))
          goto LABEL_68;
        goto LABEL_13;
      case 0xFuLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_C + 3))
          goto LABEL_68;
        goto LABEL_13;
      case 0x10uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == &dword_10)
          goto LABEL_68;
        goto LABEL_13;
      case 0x11uLL:
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
        if (v29 == (int *)((char *)&dword_10 + 1))
          goto LABEL_68;
        goto LABEL_13;
      default:
        if ((unint64_t)v29 - 1 < 0x11)
          goto LABEL_12;
        if (v28)
        {
          if (v29)
          {
            v30 = v28[2];
            v31 = v28[3];
            v32 = *((_QWORD *)v29 + 2);
            v33 = *((_QWORD *)v29 + 3);
            v34 = v30 == v32 && v31 == v33;
            if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v32, v33, 0) & 1) != 0)
            {
              v35 = v28[4];
              v36 = v28[5];
              v37 = *((_QWORD *)v29 + 4);
              v38 = *((_QWORD *)v29 + 5);
              v39 = v35 == v37 && v36 == v38;
              if ((v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v37, v38, 0) & 1) != 0)
                && *(_QWORD *)((char *)v28 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount) == *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount))
              {
                v40 = *(_QWORD *)((char *)v28 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                v41 = *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
                if (v40 == v41)
                  goto LABEL_68;
                goto LABEL_13;
              }
            }
          }
LABEL_12:
          sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
LABEL_13:
          v27 += v23;
          if (!--v25)
          {
            v17 = v50;
            swift_bridgeObjectRelease();
            v12 = v43;
LABEL_4:
            v18 = v44;
            sub_963D4((uint64_t)v10, v44);
            if (*(_QWORD *)(v17 + 16) >= v16)
              v19 = v16;
            else
              v19 = *(_QWORD *)(v17 + 16);
            v20 = v18;
            v21 = v45;
            sub_12B1D0(v20, v45);
            sub_6B344(v19, v19, v21);
            goto LABEL_8;
          }
          continue;
        }
        if (v29)
        {
          sub_267A8(0);
          goto LABEL_12;
        }
        sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
LABEL_68:
        swift_bridgeObjectRelease();
        v12 = v43;
LABEL_8:
        ++v16;
        sub_145D8((uint64_t)v10, type metadata accessor for TabMenu.Item);
        if (v16 != v46)
          goto LABEL_9;
        swift_bridgeObjectRelease();
        return v51;
    }
  }
}

uint64_t sub_20EB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TabMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t JSONDecoder.init(jsonContext:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for JSONContext(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = dispatch thunk of JSONDecoder.__allocating_init()(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  swift_retain(v7);
  v8 = Dictionary<>.init(jsonContext:)(v6);
  dispatch thunk of JSONDecoder.userInfo.setter(v8);
  swift_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v7;
}

uint64_t PopoverAction.flowAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13PopoverAction_flowAction));
}

uint64_t PopoverAction.__allocating_init(title:presentationStyle:flowAction:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v9 = sub_20EE4C(a1, a2, a3, a4);
  swift_release(a4);
  return v9;
}

uint64_t PopoverAction.init(title:presentationStyle:flowAction:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;

  v5 = sub_20EE4C(a1, a2, a3, a4);
  swift_release(a4);
  return v5;
}

void PopoverAction.init(deserializing:using:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x800000000030A500, "ShelfKit/PopoverAction.swift", 28, 2, 24, 0);
  __break(1u);
}

void PopoverAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.PopoverAction", 22, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_20ED38()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13PopoverAction_flowAction));
}

uint64_t PopoverAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13PopoverAction_flowAction));
  return v0;
}

uint64_t PopoverAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13PopoverAction_flowAction));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_20EE4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v5 = v4;
  v29 = a3;
  v27 = a1;
  v28 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8ShelfKit13PopoverAction_flowAction) = a4;
  v18 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = swift_retain();
  v20 = static ActionMetrics.notInstrumented.getter(v19);
  UUID.init()(v20);
  v21 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v5 + 16) = v21;
  *(_QWORD *)(v5 + 24) = v23;
  v24 = v28;
  *(_QWORD *)(v5 + 32) = v27;
  *(_QWORD *)(v5 + 40) = v24;
  *(_BYTE *)(v5 + 48) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v14, v11);
  sub_23AB8((uint64_t)v17, v5 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v5;
}

uint64_t sub_20EFFC()
{
  return type metadata accessor for PopoverAction(0);
}

uint64_t type metadata accessor for PopoverAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1CA8;
  if (!qword_3C1CA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PopoverAction);
  return result;
}

uint64_t sub_20F040(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 160);
}

uint64_t method lookup function for PopoverAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PopoverAction);
}

BOOL sub_20F090(uint64_t a1, uint64_t a2)
{
  return static SearchTermValidating.isValid(searchString:)(a1, a2);
}

BOOL static SearchTermValidating.isValid(searchString:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  unint64_t v15;
  char v16;
  _BOOL8 v17;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  if (!a2)
    return 0;
  v19 = a1;
  v20 = a2;
  v11 = sub_B5B74();
  v12 = Collection.isNotEmpty.getter(&type metadata for String, v11);
  if ((v12 & 1) == 0)
    return 0;
  v19 = a1;
  v20 = a2;
  v13 = static CharacterSet.whitespacesAndNewlines.getter(v12);
  CharacterSet.inverted.getter(v13);
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  v15 = sub_65CC4();
  StringProtocol.rangeOfCharacter(from:options:range:)(v8, 0, 0, 0, 1, &type metadata for String, v15);
  v17 = (v16 & 1) == 0;
  v14(v8, v4);
  return v17;
}

uint64_t HttpAction.loadOperation(bindingTo:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  void *v28;
  uint64_t v29;
  Swift::String_optional v30;
  Swift::String v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  id v47;
  Class isa;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD aBlock[5];
  uint64_t v59;
  char v60[24];
  char v61[24];
  char v62[24];
  char v63[32];

  v2 = v1;
  v54 = a1;
  v53 = type metadata accessor for String.Encoding(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v51 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLRequest(0);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v2 + OBJC_IVAR____TtC8ShelfKit10HttpAction_url, v4, v9);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v7, 0, 60.0);
  v55 = v2;
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit10HttpAction_headers, v63, 0, 0);
  v13 = *v12;
  v14 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v13 + 64);
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v20 << 6);
      goto LABEL_5;
    }
    v32 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    if (v32 >= v18)
      goto LABEL_21;
    v33 = *(_QWORD *)(v14 + 8 * v32);
    ++v20;
    if (!v33)
    {
      v20 = v32 + 1;
      if (v32 + 1 >= v18)
        goto LABEL_21;
      v33 = *(_QWORD *)(v14 + 8 * v20);
      if (!v33)
      {
        v20 = v32 + 2;
        if (v32 + 2 >= v18)
          goto LABEL_21;
        v33 = *(_QWORD *)(v14 + 8 * v20);
        if (!v33)
          break;
      }
    }
LABEL_20:
    v17 = (v33 - 1) & v33;
    v22 = __clz(__rbit64(v33)) + (v20 << 6);
LABEL_5:
    v23 = 16 * v22;
    v24 = (uint64_t *)(*(_QWORD *)(v13 + 48) + v23);
    v25 = *v24;
    v26 = (void *)v24[1];
    v27 = (uint64_t *)(*(_QWORD *)(v13 + 56) + v23);
    v29 = *v27;
    v28 = (void *)v27[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30.value._countAndFlagsBits = v29;
    v30.value._object = v28;
    v31._countAndFlagsBits = v25;
    v31._object = v26;
    URLRequest.setValue(_:forHTTPHeaderField:)(v30, v31);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v34 = v32 + 3;
  if (v34 < v18)
  {
    v33 = *(_QWORD *)(v14 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        v20 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_26;
        if (v20 >= v18)
          goto LABEL_21;
        v33 = *(_QWORD *)(v14 + 8 * v20);
        ++v34;
        if (v33)
          goto LABEL_20;
      }
    }
    v20 = v34;
    goto LABEL_20;
  }
LABEL_21:
  swift_release(v13);
  v35 = v55;
  v36 = (char *)(v55 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method);
  swift_beginAccess(v55 + OBJC_IVAR____TtC8ShelfKit10HttpAction_method, v62, 0, 0);
  URLRequest.httpMethod.setter(qword_2FFE38[*v36], qword_2FFE78[*v36]);
  v37 = (uint64_t *)(v35 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body);
  swift_beginAccess(v35 + OBJC_IVAR____TtC8ShelfKit10HttpAction_body, v61, 0, 0);
  v38 = v37[1];
  if (v38)
  {
    v39 = *v37;
    v40 = swift_bridgeObjectRetain();
    v41 = v51;
    static String.Encoding.utf8.getter(v40);
    v42 = String.data(using:allowLossyConversion:)(v41, 0, v39, v38);
    v44 = v43;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
  }
  else
  {
    v42 = 0;
    v44 = 0xF000000000000000;
  }
  v45 = v54;
  URLRequest.httpBody.setter(v42, v44);
  v46 = (unsigned __int8 *)(v35 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache);
  swift_beginAccess(v35 + OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache, v60, 0, 0);
  URLRequest.cachePolicy.setter(*v46);
  v47 = objc_msgSend(objc_allocWithZone((Class)IMURLRequestEncoder), "initWithBag:", 0);
  objc_msgSend(v47, "setPersonalizeRequests:", 1);
  objc_msgSend(v47, "setUrlKnownToBeTrusted:", 1);
  isa = URLRequest._bridgeToObjectiveC()().super.isa;
  aBlock[4] = sub_20F860;
  v59 = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_E60F4;
  aBlock[3] = &block_descriptor_22;
  v49 = _Block_copy(aBlock);
  v50 = v59;
  swift_retain();
  swift_release(v50);
  objc_msgSend(v47, "prepareRequest:completion:", isa, v49);
  _Block_release(v49);

  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v11, v57);
}

void sub_20F688(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v13;
  NSString v14;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;

  if (a1)
  {
    v5 = (void *)objc_opt_self(AMSURLSession);
    v6 = a1;
    v7 = objc_msgSend(v5, "defaultSession");
    aBlock[4] = sub_20F9B8;
    v17 = a3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20F904;
    aBlock[3] = &block_descriptor_3;
    v8 = _Block_copy(aBlock);
    v9 = v17;
    v10 = v6;
    swift_retain();
    swift_release(v9);
    v11 = objc_msgSend(v7, "dataTaskWithRequest:completionHandler:", v10, v8);
    _Block_release(v8);

    objc_msgSend(v11, "resume");
  }
  else if (a2)
  {
    swift_errorRetain(a2);
    Promise.reject(_:)(a2);
    swift_errorRelease(a2);
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(AMSErrorDomain);
    v13 = objc_allocWithZone((Class)NSError);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, "initWithDomain:code:userInfo:", v14, 0, 0);

    Promise.reject(_:)(v15);
  }
}

void sub_20F860(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_20F688(a1, a2, v2);
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_22(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_20F880(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  _OWORD v6[2];
  _OWORD v7[2];

  v3 = objc_msgSend(a1, "object");
  if (!v3)
    return Promise.reject(_:)(a2);
  v4 = v3;
  _bridgeAnyObjectToAny(_:)(v6);
  swift_unknownObjectRelease(v4);
  sub_1F460(v6, v7);
  Promise.resolve(_:)(v7);
  return __swift_destroy_boxed_opaque_existential_1(v7);
}

void sub_20F904(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, id);
  id v7;
  id v8;

  v6 = *(void (**)(id, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(v8, v7);
  swift_release(v5);

}

uint64_t HttpAction.start()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1D80);
  v1 = Promise.__allocating_init()(v0);
  HttpAction.loadOperation(bindingTo:)(v1);
  return v1;
}

uint64_t sub_20F9B8(void *a1, uint64_t a2)
{
  return sub_20F880(a1, a2);
}

uint64_t destroy for DownloadProgressViewStyle(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  return sub_A0A6C(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for DownloadProgressViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_A0A18(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for DownloadProgressViewStyle(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_retain();
  swift_release(v5);
  v6 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_A0A18(v6, (char)v2);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_A0A6C(v7, v8);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DownloadProgressViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v6;
  sub_A0A6C(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadProgressViewStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadProgressViewStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadProgressViewStyle()
{
  return &type metadata for DownloadProgressViewStyle;
}

uint64_t sub_20FC44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_343B74, 1);
}

uint64_t sub_20FC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  double v39;
  char v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t@<X8>);
  void (*v63)(uint64_t@<X8>);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (**v70)(uint64_t@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t (**v73)(double *);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  double v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  _OWORD v94[2];

  v3 = v2;
  v87 = a2;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1D88);
  __chkstk_darwin(v82);
  v86 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CoordinateSpace(0);
  v84 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  __chkstk_darwin(v6);
  v81 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v7;
  __chkstk_darwin(v8);
  v83 = (char *)&v75 - v9;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1D90);
  __chkstk_darwin(v76);
  v11 = (uint64_t *)((char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1D98);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DA0);
  __chkstk_darwin(v77);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DA8);
  v17 = __chkstk_darwin(v16);
  v88 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ProgressViewStyleConfiguration(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProgressViewStyleConfiguration.fractionCompleted.getter(v23);
  v25 = v24;
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
  if ((v25 & 1) != 0)
  {
    v30 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v31 = 1;
  }
  else
  {
    v27 = ProgressViewStyleConfiguration.fractionCompleted.getter(v26);
    v29 = v28;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v31 = (v29 & 1) == 0 && (v27 & 0x7FFFFFFFFFFFFFFFLL) == 0;
  }
  *v11 = static Alignment.center.getter(v30);
  v11[1] = v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DB0);
  sub_2102C8(v31, (__int128 *)v3, (_QWORD *)((char *)v11 + *(int *)(v33 + 44)));
  LOBYTE(v89) = v31;
  v34 = *(_OWORD *)v3;
  v93 = *(_OWORD *)(v3 + 16);
  v94[0] = v34;
  v91 = *(_QWORD *)(v3 + 32);
  v92 = *(_BYTE *)(v3 + 40);
  v35 = (_OWORD *)swift_allocObject(&unk_38A180, 57, 7);
  v36 = *(_OWORD *)(v3 + 16);
  v35[1] = *(_OWORD *)v3;
  v35[2] = v36;
  *(_OWORD *)((char *)v35 + 41) = *(_OWORD *)(v3 + 25);
  sub_210A50((uint64_t)v94);
  sub_210A50((uint64_t)&v93);
  sub_210A78((uint64_t)&v91);
  v37 = sub_32914(&qword_3C1DB8, &qword_3C1D90, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.onChange<A>(of:initial:_:)(&v89, 1, sub_210A04, v35, v76, &type metadata for Bool, v37, &protocol witness table for Bool);
  swift_release(v35);
  sub_1459C((uint64_t)v11, &qword_3C1D90);
  v89 = v94[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B5450);
  v38 = State.wrappedValue.getter(&v90);
  v39 = v90 * 0.5;
  v40 = static Edge.Set.all.getter(v38);
  v41 = EdgeInsets.init(_all:)(v39);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v48 = v78;
  v49 = v79;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v15, v13, v79);
  v50 = &v15[*(int *)(v77 + 36)];
  *v50 = v40;
  *((double *)v50 + 1) = v41;
  *((_QWORD *)v50 + 2) = v43;
  *((_QWORD *)v50 + 3) = v45;
  *((_QWORD *)v50 + 4) = v47;
  v50[40] = 0;
  v51 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v13, v49);
  v52 = static Alignment.center.getter(v51);
  sub_278CA4(0.0, 1, 20.0, 0, 0.0, 1, 0.0, 1, v88, 20.0, 0, 0.0, 1, v52, v53);
  sub_1459C((uint64_t)v15, &qword_3C1DA0);
  v54 = (_OWORD *)swift_allocObject(&unk_38A1A8, 57, 7);
  v55 = *(_OWORD *)(v3 + 16);
  v54[1] = *(_OWORD *)v3;
  v54[2] = v55;
  *(_OWORD *)((char *)v54 + 41) = *(_OWORD *)(v3 + 25);
  v57 = v83;
  v56 = v84;
  v58 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, enum case for CoordinateSpace.local(_:), v85);
  v59 = swift_allocObject(&unk_38A1D0, 32, 7);
  *(_QWORD *)(v59 + 16) = sub_210AE0;
  *(_QWORD *)(v59 + 24) = v54;
  sub_210A50((uint64_t)v94);
  sub_210A50((uint64_t)&v93);
  sub_210A78((uint64_t)&v91);
  v60 = swift_retain();
  v61 = static Alignment.center.getter(v60);
  v63 = v62;
  v64 = v81;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v81, v57, v58);
  v65 = *(unsigned __int8 *)(v56 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = swift_allocObject(&unk_38A1F8, v66 + v80, v65 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v67 + v66, v64, v58);
  v68 = v88;
  v69 = v86;
  sub_267BC(v88, v86, &qword_3C1DA8);
  v70 = (void (**)(uint64_t@<X8>))(v69 + *(int *)(v82 + 36));
  *v70 = sub_8D74C;
  v70[1] = (void (*)(uint64_t@<X8>))v67;
  v70[2] = (void (*)(uint64_t@<X8>))v61;
  v70[3] = v63;
  v71 = swift_allocObject(&unk_38A220, 32, 7);
  *(_QWORD *)(v71 + 16) = sub_8D6E4;
  *(_QWORD *)(v71 + 24) = v59;
  v72 = v87;
  sub_267BC(v69, v87, &qword_3C1D88);
  v73 = (uint64_t (**)(double *))(v72
                                          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1DC0) + 36));
  *v73 = sub_8D798;
  v73[1] = (uint64_t (*)(double *))v71;
  sub_1459C(v69, &qword_3C1D88);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  swift_release(v54);
  return sub_1459C(v68, &qword_3C1DA8);
}

uint64_t sub_2102C8@<X0>(char a1@<W0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  __n128 v23;
  _QWORD *v24;
  double v25;
  char v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  double *v45;
  __int128 *v46;
  _QWORD *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  char v78;
  _QWORD v79[5];
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v67 = type metadata accessor for TintShapeStyle(0);
  v6 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DD0);
  __chkstk_darwin(v9);
  v11 = (double *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DD8);
  __chkstk_darwin(v65);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DE0);
  __chkstk_darwin(v68);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DE8);
  __chkstk_darwin(v74);
  v76 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v66 = (uint64_t)&v65 - v18;
  v20 = __chkstk_darwin(v19);
  v75 = (uint64_t)&v65 - v21;
  if ((a1 & 1) != 0)
  {
    v72 = 0;
    v71 = 0;
    v70 = 0;
    v73 = 0;
    v69 = 0;
    v22 = 0.85;
  }
  else
  {
    v80 = *a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B5450);
    State.wrappedValue.getter(v79);
    v23.n128_u64[0] = v79[0];
    v22 = 0.0;
    v24 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v79, 0, 0, _swiftEmptyArrayStorage, v23, 10.0, 0.0);
    v72 = v79[0];
    v71 = v79[1];
    v70 = v79[2];
    v73 = v79[3];
    v69 = v79[4];
    v25 = COERCE_DOUBLE(ProgressViewStyleConfiguration.fractionCompleted.getter(v24));
    v20.n128_f64[0] = v25;
    if ((v26 & 1) == 0)
      v22 = v25;
  }
  TintShapeStyle.init()(v20);
  v80 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B5450);
  State.wrappedValue.getter(&v77);
  v27.n128_u64[0] = v77;
  v28 = 0.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v80, 1, 0, _swiftEmptyArrayStorage, v27, 10.0, 0.0);
  v29 = v80;
  v30 = v81;
  v31 = v82;
  v32 = v83;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DF0);
  v34 = *((_QWORD *)&v80 + 1);
  v35 = v67;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))((char *)v11 + *(int *)(v33 + 52), v8, v67);
  *v11 = 0.0;
  v11[1] = v22;
  *((_QWORD *)v11 + 2) = v29;
  *((_QWORD *)v11 + 3) = v34;
  *((_QWORD *)v11 + 4) = v30;
  *((_QWORD *)v11 + 5) = v31;
  *((_QWORD *)v11 + 6) = v32;
  *(_WORD *)((char *)v11 + *(int *)(v33 + 56)) = 256;
  v37 = static Alignment.center.getter(v36);
  v39 = v38;
  v40 = (uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C1DF8) + 36));
  *v40 = v37;
  v40[1] = v39;
  v41 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v35);
  v42 = static UnitPoint.center.getter(v41);
  v44 = v43;
  sub_267BC((uint64_t)v11, (uint64_t)v13, &qword_3C1DD0);
  v45 = (double *)&v13[*(int *)(v65 + 36)];
  *v45 = -1.57079633;
  v45[1] = v42;
  *((_QWORD *)v45 + 2) = v44;
  sub_1459C((uint64_t)v11, &qword_3C1DD0);
  v46 = a2 + 1;
  v77 = a2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DC8);
  v47 = State.wrappedValue.getter(&v78);
  if (v78)
    v28 = 6.28318531;
  v48 = static UnitPoint.center.getter(v47);
  v50 = v49;
  sub_267BC((uint64_t)v13, (uint64_t)v15, &qword_3C1DD8);
  v51 = &v15[*(int *)(v68 + 36)];
  *(double *)v51 = v28;
  *((double *)v51 + 1) = v48;
  *((_QWORD *)v51 + 2) = v50;
  sub_1459C((uint64_t)v13, &qword_3C1DD8);
  v77 = a2[1];
  v52 = State.wrappedValue.getter(&v78);
  if (v78 == 1)
  {
    v53 = static Animation.linear(duration:)(v52, 1.5);
    v54 = Animation.repeatForever(autoreverses:)(0, v53);
    swift_release(v53);
  }
  else
  {
    v54 = static Animation.default.getter(v52);
  }
  v77 = *v46;
  State.wrappedValue.getter(&v78);
  v55 = v78;
  v56 = v66;
  sub_267BC((uint64_t)v15, v66, &qword_3C1DE0);
  v57 = v56 + *(int *)(v74 + 36);
  *(_QWORD *)v57 = v54;
  *(_BYTE *)(v57 + 8) = v55;
  sub_1459C((uint64_t)v15, &qword_3C1DE0);
  v58 = v56;
  v59 = v75;
  sub_210B88(v58, v75);
  v60 = v76;
  sub_267BC(v59, v76, &qword_3C1DE8);
  v61 = v71;
  *a3 = v72;
  a3[1] = v61;
  v62 = v73;
  a3[2] = v70;
  a3[3] = v62;
  a3[4] = v69;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1E00);
  sub_267BC(v60, (uint64_t)a3 + *(int *)(v63 + 48), &qword_3C1DE8);
  swift_bridgeObjectRetain();
  sub_1459C(v59, &qword_3C1DE8);
  sub_1459C(v60, &qword_3C1DE8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2108A4(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  _QWORD v8[6];

  v6 = Transaction.init(animation:)(0);
  v8[2] = a1;
  *(double *)&v8[3] = a2;
  *(double *)&v8[4] = a3;
  withTransaction<A>(_:_:)(v6, sub_210B6C, v8, (char *)&type metadata for () + 8);
  return swift_release(v6);
}

uint64_t sub_21091C(__int128 *a1, double a2)
{
  double v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  double v12;
  __int128 v13;

  v3 = a2 * 0.18;
  v4 = *((_QWORD *)a1 + 4);
  v5 = *((_BYTE *)a1 + 40);
  sub_A0A18(v4, v5);
  v6 = sub_269FB8(v4, v5);
  v7 = sub_A0A6C(v4, v5);
  v8 = CGFloat.roundValue(scale:)(v7, v6, v3);
  v13 = *a1;
  v12 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5450);
  return State.wrappedValue.setter(&v12, v9, v10);
}

uint64_t sub_2109C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20FC54(a1, a2);
}

uint64_t sub_210A04(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  double v5;
  char v7;
  __int128 v8;

  v3 = *a2;
  v8 = *(_OWORD *)(v2 + 32);
  v7 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DC8);
  return State.wrappedValue.setter(&v7, v4, v5);
}

uint64_t sub_210A50(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_210A78(uint64_t a1)
{
  sub_A0A18(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  sub_A0A6C(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_210AE0(double a1, double a2)
{
  uint64_t v2;

  return sub_2108A4(v2 + 16, a1, a2);
}

uint64_t sub_210AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CoordinateSpace(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_210B48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_210B6C()
{
  uint64_t v0;

  return sub_21091C(*(__int128 **)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_210B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_210BD4()
{
  unint64_t result;

  result = qword_3C1E08;
  if (!qword_3C1E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1DC0);
    sub_210C58();
    sub_32914(&qword_3B5488, &qword_3B5490, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C1E08);
  }
  return result;
}

unint64_t sub_210C58()
{
  unint64_t result;

  result = qword_3C1E10;
  if (!qword_3C1E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1D88);
    sub_210CDC();
    sub_32914(&qword_3B5478, &qword_3B5480, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C1E10);
  }
  return result;
}

unint64_t sub_210CDC()
{
  unint64_t result;

  result = qword_3C1E18;
  if (!qword_3C1E18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1DA8);
    sub_210D48();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C1E18);
  }
  return result;
}

unint64_t sub_210D48()
{
  unint64_t result;
  _QWORD v1[4];

  result = qword_3C1E20;
  if (!qword_3C1E20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1DA0);
    v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C1D90);
    v1[1] = &type metadata for Bool;
    v1[2] = sub_32914(&qword_3C1DB8, &qword_3C1D90, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v1[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C1E20);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyActionKinds()
{
  return &type metadata for EmptyActionKinds;
}

_QWORD *sub_210E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_210E40(a1, a2, (uint64_t (*)(uint64_t))sub_212CC4, a3);
}

_QWORD *sub_210E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(char *, char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::String v96;
  Swift::String v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  __int128 v125;
  _QWORD v126[5];
  uint64_t v127;
  unint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;

  v116 = a3;
  *(_QWORD *)&v125 = a2;
  v115 = a4;
  v5 = type metadata accessor for JSONObject(0);
  __chkstk_darwin(v5);
  v114 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for AnyActionTypes(0);
  v113 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v110 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1E38);
  __chkstk_darwin(v8);
  v118 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C1E40);
  v10 = *(_QWORD *)(v112 - 8);
  v11 = __chkstk_darwin(v112);
  v13 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v107 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0C68);
  v120 = *(_QWORD *)(v16 - 8);
  v121 = (char *)v16;
  v17 = __chkstk_darwin(v16);
  v111 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v107 - v19;
  v131 = type metadata accessor for JSONContext(0);
  v123 = *(_QWORD *)(v131 - 8);
  v21 = __chkstk_darwin(v131);
  v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v107 - v25;
  v27 = __chkstk_darwin(v24);
  v124 = (char *)&v107 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v107 - v29;
  v31 = dynamic_cast_existential_2_conditional(a1, a1, (uint64_t)&protocol descriptor for ActionModel, (uint64_t)&protocol descriptor for Decodable);
  if (v31)
  {
    v114 = v32;
    v118 = (char *)v31;
    v119 = v33;
    v34 = (_QWORD *)v125;
    v35 = *(_QWORD *)(v125 + 24);
    v36 = *(_QWORD *)(v125 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v125, v35);
    v37 = dispatch thunk of Decoder.userInfo.getter(v35, v36);
    v38 = JSONContext.init(userInfo:)(v37);
    static JSONContext.Property<A>.actionKindTable.getter(v38);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C0D00);
    JSONContext.subscript.getter(&v127, v20, v39);
    v40 = v121;
    v41 = *(uint64_t (**)(char *, char *))(v120 + 8);
    v42 = v41(v20, v121);
    v43 = v131;
    v44 = v123;
    if (!v127)
    {
      v45 = v116(v42);
      v127 = v117;
      v128 = v45;
      v46 = v111;
      static JSONContext.Property<A>.actionKindTable.getter(v45);
      v47 = v124;
      JSONContext.addingValue<A>(_:forProperty:)(&v127, v46, v39);
      v48 = v46;
      v43 = v131;
      v41(v48, v40);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v43);
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v30, v47, v43);
    }
    __swift_project_boxed_opaque_existential_1(v34, v34[3]);
    v49 = v124;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v124, v30, v43);
    Dictionary<>.init(jsonContext:)(v49);
    Decoder.withUserInfo(_:)(v126);
    swift_bridgeObjectRelease();
    v51 = v118;
    v50 = v119;
    *(_QWORD *)&v129 = v118;
    *((_QWORD *)&v129 + 1) = v114;
    v130 = v119;
    __swift_allocate_boxed_opaque_existential_2Tm(&v127);
    v52 = v122;
    dispatch thunk of Decodable.init(from:)(v126, v51, v50);
    if (v52)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v43);
      return __swift_deallocate_boxed_opaque_existential_2(&v127);
    }
    v125 = v129;
    v86 = v129;
    v87 = __swift_project_boxed_opaque_existential_1(&v127, v129);
    v88 = (_QWORD *)v115;
    *(_OWORD *)(v115 + 24) = v125;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v88);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(boxed_opaque_existential_2Tm, v87, v86);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v43);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(&v127);
  }
  v120 = v10;
  v54 = v118;
  v111 = v13;
  v109 = v23;
  v55 = v119;
  v121 = v26;
  v56 = dynamic_cast_existential_2_conditional(a1, a1, (uint64_t)&protocol descriptor for ActionModel, (uint64_t)&protocol descriptor for ExpressibleByJSON);
  if (v56)
  {
    v59 = v56;
    v60 = v58;
    v108 = v57;
    v61 = *(_QWORD *)(v125 + 24);
    v62 = *(_QWORD *)(v125 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v125, v61);
    v63 = dispatch thunk of Decoder.userInfo.getter(v61, v62);
    v64 = JSONContext.init(userInfo:)(v63);
    v65 = v15;
    static JSONContext.Property<A>.actionTypes.getter(v64);
    v66 = (uint64_t)v54;
    JSONContext.subscript.getter(v54, v65, v55);
    v67 = *(void (**)(char *, uint64_t))(v120 + 8);
    v68 = v112;
    v67(v65, v112);
    v69 = v113;
    LODWORD(v61) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v66, 1, v55);
    v70 = sub_1459C(v66, &qword_3C1E38);
    v71 = v131;
    v72 = v123;
    if ((_DWORD)v61 == 1)
    {
      v73 = v116(v70);
      v74 = v110;
      v75 = AnyActionTypes.init(_:)(v117, v73);
      v76 = v111;
      static JSONContext.Property<A>.actionTypes.getter(v75);
      v77 = v59;
      v78 = v60;
      v79 = v68;
      v80 = v121;
      JSONContext.addingValue<A>(_:forProperty:)(v74, v76, v55);
      v81 = v76;
      v72 = v123;
      v82 = v79;
      v60 = v78;
      v59 = v77;
      v67(v81, v82);
      v83 = v74;
      v71 = v131;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v83, v55);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v80, v71);
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v80, v124, v71);
    }
    sub_150C8(v125, (uint64_t)v126);
    v84 = v114;
    v85 = v122;
    JSONObject.init(from:)(v126);
    if (v85)
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v121, v71);
    v99 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v100 = v109;
    v101 = v72;
    v102 = v121;
    v99(v109, v121, v71);
    *(_QWORD *)&v129 = v59;
    *((_QWORD *)&v129 + 1) = v108;
    v130 = v60;
    __swift_allocate_boxed_opaque_existential_2Tm(&v127);
    dispatch thunk of ExpressibleByJSON.init(deserializing:using:)(v84, v100, v59, v60);
    v125 = v129;
    v103 = v129;
    v104 = __swift_project_boxed_opaque_existential_1(&v127, v129);
    v105 = (_QWORD *)v115;
    *(_OWORD *)(v115 + 24) = v125;
    v106 = __swift_allocate_boxed_opaque_existential_2Tm(v105);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v106, v104, v103);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v71);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(&v127);
  }
  v90 = type metadata accessor for DecodingError(0);
  swift_allocError(v90, &protocol witness table for DecodingError, 0, 0);
  v92 = v91;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B38);
  *v92 = a1;
  v93 = *(_QWORD *)(v125 + 24);
  v94 = *(_QWORD *)(v125 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v125, v93);
  v95 = dispatch thunk of Decoder.codingPath.getter(v93, v94);
  v127 = 0;
  v128 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v127 = 60;
  v128 = 0xE100000000000000;
  v96._countAndFlagsBits = _typeName(_:qualified:)(a1, 0);
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  v97._object = (void *)0x800000000030A3B0;
  v97._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v97);
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v95, v127, v128, 0);
  v98 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v90 - 8) + 104))(v92, enum case for DecodingError.typeMismatch(_:), v90);
  return (_QWORD *)swift_willThrow(v98);
}

double sub_211688@<D0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t WitnessTable;
  double result;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;

  v10 = type metadata accessor for CodeByKind(0, a2, *(_QWORD *)(a4 + 8));
  v12 = type metadata accessor for KeyedDecodingContainer(0, a3, a5, v11);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CodeByKind<A>);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v10, a1, v12, v10, WitnessTable);
  if (v17)
  {
    sub_150C8((uint64_t)v16, a6);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v16, v10);
  }
  else
  {
    v15 = type metadata accessor for Optional(0, v10);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
    *(_QWORD *)(a6 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

uint64_t sub_211838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[5];

  sub_267BC(a1, (uint64_t)&v16, &qword_3B0C50);
  if (!v17)
    return sub_1459C((uint64_t)&v16, &qword_3B0C50);
  sub_F4D8(&v16, (uint64_t)v18);
  sub_211A5C((uint64_t)v18, a2, a3, v14, a5, a6, a7, a8);
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t sub_2118F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t MetatypeMetadata;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];

  v12 = type metadata accessor for CodeByKind(0, a2, *(_QWORD *)(a4 + 8));
  type metadata accessor for KeyedDecodingContainer(0, a3, a5, v13);
  swift_getWitnessTable(&protocol conformance descriptor for CodeByKind<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v22, v12);
  if (!v6)
    return sub_F4D8(v22, a6);
  sub_211C94(a1, a3, a5);
  sub_267BC((uint64_t)v22, (uint64_t)v19, &qword_3BBEF8);
  v14 = v20;
  if (v20)
  {
    v15 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    MetatypeMetadata = swift_getMetatypeMetadata(a2);
    dispatch thunk of JSONInitFailureObserver.tryingToInitialize(_:didFailWith:)(MetatypeMetadata, v6, v14, v15);
    v17 = __swift_destroy_boxed_opaque_existential_1(v19);
  }
  else
  {
    v17 = sub_1459C((uint64_t)v19, &qword_3BBEF8);
  }
  swift_willThrow(v17);
  return sub_1459C((uint64_t)v22, &qword_3BBEF8);
}

uint64_t sub_211A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[40];
  _QWORD v16[5];

  sub_150C8(a1, (uint64_t)v15);
  v12 = *(_QWORD *)(a7 + 8);
  CodeByKind.init(wrappedValue:)(v16, v15, a5, v12);
  type metadata accessor for KeyedEncodingContainer(0, a6, a8);
  v13 = type metadata accessor for CodeByKind(0, a5, v12);
  swift_getWitnessTable(&protocol conformance descriptor for CodeByKind<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v16);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v16, v13);
}

unint64_t sub_211B44()
{
  unint64_t result;

  result = sub_2886A8((uint64_t)_swiftEmptyArrayStorage);
  qword_3C1E28 = result;
  return result;
}

uint64_t sub_211B68()
{
  if (qword_3B01C8 != -1)
    swift_once(&qword_3B01C8, sub_211B44);
  return swift_bridgeObjectRetain();
}

unint64_t sub_211BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if (qword_3B01C8 != -1)
    swift_once(&qword_3B01C8, sub_211B44);
  v0 = qword_3C1E28;
  v1 = swift_bridgeObjectRetain();
  v2 = _defaultActionKindLookup.getter(v1);
  v3 = sub_211F68(v2, v0);
  v4 = sub_211FE4(v3);
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_211C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_210E40(a1, a2, (uint64_t (*)(uint64_t))sub_1D044C, a3);
}

unint64_t sub_211C50()
{
  unint64_t result;

  result = qword_3C1E30;
  if (!qword_3C1E30)
  {
    result = swift_getWitnessTable(&unk_2FFF64);
    atomic_store(result, (unint64_t *)&qword_3C1E30);
  }
  return result;
}

uint64_t sub_211C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEE8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for KeyedDecodingContainer(0, a2, a3, v7);
  KeyedDecodingContainer.superDecoder()(v17, v10);
  v11 = v18;
  v12 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v13 = dispatch thunk of Decoder.userInfo.getter(v11, v12);
  static JSONContext.Property<A>.initFailureObserver.getter();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBEF0);
  Dictionary<>.subscript.getter(v9, v13, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

unint64_t sub_211DC0(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_211E24(a1, a2, v4);
}

unint64_t sub_211E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_211F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_212320(a1, (uint64_t)sub_212300, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_211FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t i;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B40);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v36 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v9 = (uint64_t *)&unk_3C1E48;
  v10 = (uint64_t *)&unk_3B0B50;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v18 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_36;
  if (v18 >= v35)
    goto LABEL_33;
  v19 = *(_QWORD *)(v36 + 8 * v18);
  v20 = i + 1;
  if (!v19)
  {
    v20 = i + 2;
    if (i + 2 >= v35)
      goto LABEL_33;
    v19 = *(_QWORD *)(v36 + 8 * v20);
    if (!v19)
    {
      v20 = i + 3;
      if (i + 3 >= v35)
        goto LABEL_33;
      v19 = *(_QWORD *)(v36 + 8 * v20);
      if (!v19)
      {
        v20 = i + 4;
        if (i + 4 >= v35)
          goto LABEL_33;
        v19 = *(_QWORD *)(v36 + 8 * v20);
        if (!v19)
        {
          v20 = i + 5;
          if (i + 5 >= v35)
            goto LABEL_33;
          v19 = *(_QWORD *)(v36 + 8 * v20);
          if (!v19)
          {
            v20 = i + 6;
            if (i + 6 >= v35)
              goto LABEL_33;
            v19 = *(_QWORD *)(v36 + 8 * v20);
            v21 = i + 6;
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_37;
                if (v20 >= v35)
                  break;
                v19 = *(_QWORD *)(v36 + 8 * v20);
                ++v21;
                if (v19)
                  goto LABEL_27;
              }
LABEL_33:
              sub_15498(v1);
              return (unint64_t)v3;
            }
          }
        }
      }
    }
  }
LABEL_27:
  v6 = (v19 - 1) & v19;
  v17 = __clz(__rbit64(v19)) + (v20 << 6);
  for (i = v20; ; v17 = v16 | (i << 6))
  {
    v22 = 16 * v17;
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v17);
    v25 = *v23;
    v24 = v23[1];
    v38 = *(_OWORD *)(*(_QWORD *)(v1 + 56) + v22);
    swift_bridgeObjectRetain(v24);
    v26 = __swift_instantiateConcreteTypeFromMangledName(v9);
    v27 = __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast(&v39, &v38, v26, v27, 7);
    v28 = v39;
    result = sub_211DC0(v25, v24);
    v29 = result;
    if ((v30 & 1) != 0)
    {
      v37 = v6;
      v11 = v1;
      v12 = i;
      v13 = v10;
      v14 = v9;
      v15 = (uint64_t *)(v3[6] + 16 * result);
      result = swift_bridgeObjectRelease();
      *v15 = v25;
      v15[1] = v24;
      v9 = v14;
      v10 = v13;
      i = v12;
      v1 = v11;
      v6 = v37;
      *(_QWORD *)(v3[7] + 8 * v29) = v28;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v31 = (uint64_t *)(v3[6] + 16 * result);
    *v31 = v25;
    v31[1] = v24;
    *(_QWORD *)(v3[7] + 8 * result) = v28;
    v32 = v3[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_35;
    v3[2] = v34;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v16 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_212300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  return swift_bridgeObjectRetain(v3);
}

uint64_t sub_212320(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  char v49;
  _QWORD *v50;
  uint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  __int128 v57;
  __int128 v58;

  swift_bridgeObjectRetain(a1);
  swift_retain();
  v8 = sub_212638();
  if (!v9)
    goto LABEL_23;
  v12 = v8;
  v13 = v9;
  v14 = v11;
  v56 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_211DC0(v8, v9);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_2127E8();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v25 = (uint64_t *)(v24[6] + 16 * v17);
    *v25 = v12;
    v25[1] = v13;
    v26 = (_QWORD *)(v24[7] + 16 * v17);
    *v26 = v56;
    v26[1] = v14;
    v27 = v24[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v24[2] = v29;
LABEL_13:
    v30 = sub_212638();
    if (v31)
    {
      v34 = v30;
      v35 = v31;
      v36 = v32;
      v37 = v33;
      do
      {
        v42 = (_QWORD *)*a5;
        v43 = sub_211DC0(v34, v35);
        v45 = v42[2];
        v46 = (v44 & 1) == 0;
        v28 = __OFADD__(v45, v46);
        v47 = v45 + v46;
        if (v28)
          goto LABEL_24;
        v48 = v44;
        if (v42[3] < v47)
        {
          sub_2129A0(v47, 1);
          v43 = sub_211DC0(v34, v35);
          if ((v48 & 1) != (v49 & 1))
            goto LABEL_26;
        }
        v50 = (_QWORD *)*a5;
        if ((v48 & 1) != 0)
        {
          v38 = 16 * v43;
          v58 = *(_OWORD *)(v50[7] + 16 * v43);
          swift_bridgeObjectRelease();
          *(_OWORD *)(v50[7] + v38) = v58;
        }
        else
        {
          v50[(v43 >> 6) + 8] |= 1 << v43;
          v51 = (uint64_t *)(v50[6] + 16 * v43);
          *v51 = v34;
          v51[1] = v35;
          v52 = (_QWORD *)(v50[7] + 16 * v43);
          *v52 = v36;
          v52[1] = v37;
          v53 = v50[2];
          v28 = __OFADD__(v53, 1);
          v54 = v53 + 1;
          if (v28)
            goto LABEL_25;
          v50[2] = v54;
        }
        v34 = sub_212638();
        v35 = v39;
        v36 = v40;
        v37 = v41;
      }
      while (v39);
    }
LABEL_23:
    swift_release(a3);
    swift_bridgeObjectRelease();
    sub_15498(a1);
    return swift_release(a3);
  }
  sub_2129A0(v20, a4 & 1);
  v22 = sub_211DC0(v12, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v57 = *(_OWORD *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v24[7] + 16 * v17) = v57;
    goto LABEL_13;
  }
LABEL_26:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_212638()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, _QWORD *);
  __int128 v14;
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  __int128 v25;

  v2 = *v1;
  v4 = v1[3];
  v3 = v1[4];
  v5 = v4;
  if (v3)
  {
    v6 = (v3 - 1) & v3;
    v7 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_3:
    v8 = 16 * v7;
    v10 = *(_QWORD *)(v2 + 48);
    v9 = *(_QWORD *)(v2 + 56);
    v11 = (_QWORD *)(v10 + v8);
    v12 = v11[1];
    v13 = (void (*)(uint64_t *__return_ptr, _QWORD *))v1[5];
    v24[0] = *v11;
    v24[1] = v12;
    v14 = *(_OWORD *)(v9 + v8);
    v1[3] = v5;
    v1[4] = v6;
    v25 = v14;
    swift_bridgeObjectRetain(v12);
    v13(&v23, v24);
    swift_bridgeObjectRelease(v12);
    return v23;
  }
  v16 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_25:
    v1 = v0;
    goto LABEL_26;
  }
  v17 = (unint64_t)(v1[2] + 64) >> 6;
  if (v16 < v17)
  {
    v18 = v1[1];
    v19 = *(_QWORD *)(v18 + 8 * v16);
    if (v19)
    {
LABEL_7:
      v6 = (v19 - 1) & v19;
      v7 = __clz(__rbit64(v19)) + (v16 << 6);
      v5 = v16;
      goto LABEL_3;
    }
    v20 = v4 + 2;
    v5 = v4 + 1;
    if (v4 + 2 < v17)
    {
      v19 = *(_QWORD *)(v18 + 8 * v20);
      if (v19)
      {
LABEL_10:
        v16 = v20;
        goto LABEL_7;
      }
      v21 = v4 + 3;
      v5 = v4 + 2;
      if (v4 + 3 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v21);
        if (v19)
        {
LABEL_13:
          v16 = v21;
          goto LABEL_7;
        }
        v20 = v4 + 4;
        v5 = v4 + 3;
        if (v4 + 4 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * v20);
          if (v19)
            goto LABEL_10;
          v21 = v4 + 5;
          v5 = v4 + 4;
          if (v4 + 5 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v21);
            if (v19)
              goto LABEL_13;
            v16 = v4 + 6;
            v5 = v4 + 5;
            if (v4 + 6 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v0 = v1;
              v5 = v17 - 1;
              v22 = v4 + 7;
              while (v17 != v22)
              {
                v19 = *(_QWORD *)(v18 + 8 * v22++);
                if (v19)
                {
                  v16 = v22 - 1;
                  goto LABEL_7;
                }
              }
              goto LABEL_25;
            }
          }
        }
      }
    }
  }
LABEL_26:
  result = 0;
  v1[3] = v5;
  v1[4] = 0;
  return result;
}

void *sub_2127E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C1E50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v22 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_27;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_27;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
        {
          v9 = v22 + 3;
          if (v22 + 3 >= v13)
            goto LABEL_27;
          v23 = *(_QWORD *)(v6 + 8 * v9);
          v24 = v22 + 3;
          if (!v23)
            break;
        }
      }
    }
LABEL_26:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain(v18);
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2129A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t i;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  int64_t v37;
  __int128 v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C1E50);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = v3;
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v23 >= v37)
          goto LABEL_37;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_37;
          v24 = v36[v14];
          if (!v24)
          {
            v14 = v23 + 2;
            if (v23 + 2 >= v37)
              goto LABEL_37;
            v24 = v36[v14];
            if (!v24)
            {
              v14 = v23 + 3;
              if (v23 + 3 >= v37)
              {
LABEL_37:
                swift_release(v5);
                v3 = v35;
                if ((a2 & 1) != 0)
                {
                  v34 = 1 << *(_BYTE *)(v5 + 32);
                  if (v34 >= 64)
                    bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                  else
                    *v36 = -1 << v34;
                  *(_QWORD *)(v5 + 16) = 0;
                }
                break;
              }
              v24 = v36[v14];
              for (i = v23 + 3; !v24; ++i)
              {
                v14 = i + 1;
                if (__OFADD__(i, 1))
                  goto LABEL_44;
                if (v14 >= v37)
                  goto LABEL_37;
                v24 = v36[v14];
              }
            }
          }
        }
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v26 = 16 * v22;
      v27 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v26);
      v29 = *v27;
      v28 = v27[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v26);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(v28);
      Hasher.init(_seed:)(v39);
      String.hash(into:)(v39, v29, v28);
      result = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v32 = v17 == v31;
          if (v17 == v31)
            v17 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v33 == -1);
        v18 = __clz(__rbit64(~v33)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v29;
      v20[1] = v28;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v38;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

unint64_t sub_212CC4()
{
  unint64_t result;

  result = qword_3C1E58;
  if (!qword_3C1E58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionKinds);
    atomic_store(result, (unint64_t *)&qword_3C1E58);
  }
  return result;
}

uint64_t OAuthAction.authorizationURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_282CC(v1 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_authorizationURL, a1);
}

uint64_t OAuthAction.oAuthAdamId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_oAuthAdamId);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_oAuthAdamId + 8));
  return v1;
}

uint64_t OAuthAction.showAdamId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_showAdamId);
}

uint64_t OAuthAction.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return OAuthAction.init(deserializing:using:)(a1, a2);
}

uint64_t OAuthAction.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;

  v3 = v2;
  v79 = a2;
  v74 = *v3;
  v5 = type metadata accessor for JSONContext(0);
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  __chkstk_darwin(v5);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONObject(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v72 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v75 = (char *)&v69 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v69 - v19;
  v80 = v3;
  swift_retain();
  v81 = a1;
  v21 = JSONObject.subscript.getter(0xD000000000000010, 0x8000000000313920);
  v22 = JSONObject.string.getter(v21);
  v24 = v23;
  v71 = v11;
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v20, v10);
  if (!v24)
  {
    v41 = type metadata accessor for JSONError(0);
    v42 = sub_1E468();
    swift_allocError(v41, v42, 0, 0);
    v44 = v43;
    v45 = v80;
    v46 = *v80;
    swift_release(v80);
    *v44 = 0xD000000000000010;
    v44[1] = 0x8000000000313920;
    v44[2] = v46;
    v47 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v44, enum case for JSONError.missingProperty(_:), v41);
    v48 = v81;
    v50 = v78;
    v49 = v79;
    v51 = v77;
LABEL_8:
    v57 = v74;
    swift_willThrow(v47);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
    v25((char *)v48, v10);
    swift_deallocPartialClassInstance(v45, v57, *(unsigned int *)(*v45 + 48), *(unsigned __int16 *)(*v45 + 52));
    return v48;
  }
  v26 = v80;
  v27 = JSONObject.subscript.getter(0x616441687475416FLL, 0xEB0000000064496DLL);
  v28 = JSONObject.string.getter(v27);
  v30 = v29;
  v69 = v25;
  v70 = v10;
  v25(v17, v10);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    v52 = type metadata accessor for JSONError(0);
    v53 = sub_1E468();
    swift_allocError(v52, v53, 0, 0);
    v55 = v54;
    v45 = v26;
    v56 = *v26;
    swift_release(v26);
    *v55 = 0x616441687475416FLL;
    v55[1] = 0xEB0000000064496DLL;
    v55[2] = v56;
    v47 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v55, enum case for JSONError.missingProperty(_:), v52);
    v48 = v81;
    v50 = v78;
    v49 = v79;
    v51 = v77;
    v25 = v69;
    v10 = v70;
    goto LABEL_8;
  }
  URL.init(string:)(v22, v24);
  swift_bridgeObjectRelease();
  v31 = v26;
  sub_B683C((uint64_t)v9, (uint64_t)v26 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_authorizationURL);
  v32 = (_QWORD *)((char *)v26 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_oAuthAdamId);
  *v32 = v28;
  v32[1] = v30;
  v33 = JSONObject.subscript.getter(0x6D616441776F6873, 0xEA00000000006449);
  v34 = JSONObject.string.getter(v33);
  v36 = v35;
  if (v35)
  {
    v37 = v76;
    v38 = static AdamID.parse(_:)(v34, v35);
    if (!v37)
    {
      v40 = v38;
      swift_bridgeObjectRelease();
      v59 = v78;
      v58 = v79;
      v60 = v77;
      v61 = v70;
      v76 = 0;
      goto LABEL_12;
    }
    v39 = swift_bridgeObjectRelease();
    v40 = static AdamID.empty.getter(v39);
    swift_errorRelease(v37);
    v76 = 0;
  }
  else
  {
    v40 = 0;
  }
  v59 = v78;
  v58 = v79;
  v60 = v77;
  v61 = v70;
LABEL_12:
  v62 = (void (*)(uint64_t, uint64_t))v69;
  v69(v75, v61);
  v63 = (char *)v31 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_showAdamId;
  *(_QWORD *)v63 = v40;
  v63[8] = v36 == 0;
  swift_release(v31);
  v64 = v72;
  v65 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v72, v81, v61);
  v48 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v73, v58, v59);
  v66 = v76;
  v67 = Action.init(deserializing:using:)(v64, v48);
  if (!v66)
    v48 = v67;
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  v62(v65, v61);
  return v48;
}

void OAuthAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.OAuthAction", 20, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_2132F4()
{
  uint64_t v0;

  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_authorizationURL, &qword_3B4370);
  return swift_bridgeObjectRelease();
}

uint64_t OAuthAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_authorizationURL, &qword_3B4370);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OAuthAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit11OAuthAction_authorizationURL, &qword_3B4370);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_213478()
{
  return type metadata accessor for OAuthAction(0);
}

uint64_t type metadata accessor for OAuthAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1E88;
  if (!qword_3C1E88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OAuthAction);
  return result;
}

void sub_2134BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_28C74(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_300008;
    v4[2] = &unk_300020;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 160);
  }
}

uint64_t DismissInlineModuleAction.init(actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t initializeBufferWithCopyOfBuffer for DismissInlineModuleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t initializeWithCopy for DismissInlineModuleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DismissInlineModuleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DismissInlineModuleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DismissInlineModuleAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DismissInlineModuleAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2136D0);
}

uint64_t sub_2136D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DismissInlineModuleAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_213718);
}

uint64_t sub_213718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DismissInlineModuleAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1FC0;
  if (!qword_3C1FC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DismissInlineModuleAction);
  return result;
}

uint64_t sub_213794(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ActionMetrics(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t ClosureAction.__allocating_init(title:presentationStyle:actionMetrics:closure:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v13 = sub_213C1C(a1, a2, a3, a4, a5, a6);
  swift_release(a6);
  return v13;
}

uint64_t ClosureAction.closure.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure);
  swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure + 8));
  return v1;
}

uint64_t ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  v7 = sub_213C1C(a1, a2, a3, a4, a5, a6);
  swift_release(a6);
  return v7;
}

void ClosureAction.init(deserializing:using:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x800000000030E480, "ShelfKit/ClosureAction.swift", 28, 2, 32, 0);
  __break(1u);
}

void ClosureAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.ClosureAction", 22, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_213970()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure + 8));
}

uint64_t ClosureAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure + 8));
  return v0;
}

uint64_t ClosureAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t ClosureAction.copy(with:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[4];
  v10 = v0[5];
  v11 = *((unsigned __int8 *)v0 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0930);
  v13 = type metadata accessor for MetricsData(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_2EA0D0;
  swift_bridgeObjectRetain();
  v15 = sub_B1A70();
  ScalarDictionary.init()(v15);
  ActionMetrics.init(data:custom:)(v14, v5);
  v16 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure);
  v17 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure + 8);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  swift_retain();
  v18 = sub_213C1C(v9, v10, v11, (uint64_t)v8, v16, v17);
  swift_release(v17);
  return v18;
}

uint64_t sub_213C1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;

  v7 = v6;
  v30 = a5;
  v31 = a4;
  v34 = a3;
  v32 = a1;
  v33 = a2;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ActionMetrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)(v7 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure);
  *v21 = v30;
  v21[1] = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a4, v17);
  v22 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
  v23 = swift_retain(a6);
  UUID.init()(v23);
  v24 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)(v7 + 16) = v24;
  *(_QWORD *)(v7 + 24) = v26;
  v27 = v33;
  *(_QWORD *)(v7 + 32) = v32;
  *(_QWORD *)(v7 + 40) = v27;
  *(_BYTE *)(v7 + 48) = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v7 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v20, v17);
  sub_23AB8((uint64_t)v16, v7 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v31, v17);
  return v7;
}

uint64_t sub_213DFC()
{
  return type metadata accessor for ClosureAction(0);
}

uint64_t type metadata accessor for ClosureAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2020;
  if (!qword_3C2020)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClosureAction);
  return result;
}

uint64_t sub_213E40(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for () + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 160);
}

uint64_t method lookup function for ClosureAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ClosureAction);
}

uint64_t dispatch thunk of ClosureAction.__allocating_init(title:presentationStyle:actionMetrics:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void sub_213E98(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;

  v1 = *(id *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(id *)a1;
  sub_215DF4((uint64_t)v1, v2);

}

uint64_t sub_213EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = v0;
  v2 = v0 + 16;
  swift_beginAccess(v2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong);
    swift_beginAccess(v1 + 48, v13, 0, 0);
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v5 + 8))(*(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), ObjectType, v5);

  }
  swift_beginAccess(v1 + 32, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v1 + 40);
    v10 = swift_getObjectType(result);
    swift_beginAccess(v1 + 48, &v11, 0, 0);
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 16))(v1, *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v10, v9);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_213FDC(void *a1, uint64_t a2)
{
  sub_215DF4((uint64_t)a1, a2);

}

void (*sub_214000(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_21406C;
}

void sub_21406C(id **a1, char a2)
{
  id *v3;
  id v4;
  _QWORD *v5;

  v3 = *a1;
  v4 = (*a1)[3];
  v5 = (*a1)[5];
  v5[3] = (*a1)[4];
  swift_unknownObjectWeakAssign(v5 + 2, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

    sub_213EE0();
  }
  free(v3);
}

uint64_t sub_2140E0()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_214114(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = v2;
  v5 = a2 & 1;
  swift_beginAccess(v3 + 48, v16, 1, 0);
  *(_QWORD *)(v3 + 48) = a1;
  *(_BYTE *)(v3 + 56) = v5;
  swift_beginAccess(v3 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, v5, ObjectType, v8);

  }
  swift_beginAccess(v3 + 32, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (result)
  {
    v11 = result;
    v12 = *(_QWORD *)(v3 + 40);
    v13 = swift_getObjectType(result);
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 8))(v3, *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), v13, v12);
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

void (*sub_214210(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  swift_beginAccess(v1 + 48, v3, 33, 0);
  return sub_214260;
}

void sub_214260(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[6] + 16;
    swift_beginAccess(v4, v3, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = v3[6];
      v8 = *(_QWORD *)(v7 + 24);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v8 + 8))(*(_QWORD *)(v7 + 48), *(unsigned __int8 *)(v7 + 56), ObjectType, v8);

    }
    v10 = v3[6] + 32;
    swift_beginAccess(v10, v3 + 3, 0, 0);
    v11 = swift_unknownObjectWeakLoadStrong(v10);
    if (v11)
    {
      v12 = v11;
      v13 = v3[6];
      v14 = *(_QWORD *)(v13 + 40);
      v15 = swift_getObjectType(v11);
      (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 8))(v13, *(_QWORD *)(v13 + 48), *(unsigned __int8 *)(v13 + 56), v15, v14);
      swift_unknownObjectRelease(v12);
    }
  }
  free(v3);
}

uint64_t DownloadButtonPresenter.__allocating_init(data:graph:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  DownloadButtonPresenter.init(data:graph:)(a1, a2);
  return v5;
}

uint64_t DownloadButtonPresenter.init(data:graph:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  __int128 v37[2];

  v3 = v2;
  v6 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  *(_QWORD *)(v2 + 40) = 0;
  swift_unknownObjectWeakInit(v2 + 32, 0);
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 56) = 1;
  *(_QWORD *)(v2 + 64) = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8F88);
  v13 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v37, v12, a2, v12, v13);
  v14 = *(_QWORD *)&v37[0];
  *(_QWORD *)(v3 + 72) = *(_QWORD *)&v37[0];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  inject<A, B>(_:from:)(v37, v15, a2, v15, v13);
  sub_F4D8(v37, v3 + 80);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BE9F0);
  inject<A, B>(_:from:)(v37, v16, a2, v16, v13);
  sub_F4D8(v37, v3 + 120);
  v17 = type metadata accessor for MetricsController(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = swift_retain();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController) = MetricsController.init(asPartOf:)(v18);
  sub_14510(a1, v3 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_data, type metadata accessor for DownloadButtonPresenter.Data);
  sub_14510(a1, (uint64_t)v11, type metadata accessor for DownloadButtonPresenter.Data);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_3C56C((uint64_t)v11, (uint64_t)v8, type metadata accessor for EpisodeOffer);
      v20 = EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)(*v8);
      v21 = sub_145D8((uint64_t)v8, type metadata accessor for EpisodeOffer);
    }
    else
    {
      v24 = *v11;
      v25 = type metadata accessor for LibraryEpisodeLockup(0);
      v26 = swift_dynamicCastClass(v24, v25);
      if (v26)
      {
        v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_uuid);
        v28 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_uuid + 8);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v20 = EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)(v27, v28);
        swift_release(v14);
        swift_bridgeObjectRelease();
        v21 = swift_release_n(v24, 2);
      }
      else
      {
        v29 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
        swift_retain();
        v20 = EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)(v29);
        swift_release(v14);
        v21 = swift_release(v24);
      }
    }
  }
  else
  {
    v22 = *v11;
    v23 = v11[1];
    swift_retain();
    v20 = EpisodeStateController<>.modernEpisodeDownloadStateMachine(for:)(v22, v23);
    swift_release(v14);
    v21 = swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_stateMachine) = v20;
  *(_QWORD *)&v37[0] = ModernEpisodeDownloadStateMachine.currentState.getter(v21);
  v30 = swift_allocObject(&unk_38A330, 24, 7);
  swift_weakInit(v30 + 16);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2110);
  v32 = sub_215F44();
  v33 = Publisher<>.sink(receiveValue:)(sub_215F3C, v30, v31, v32);
  swift_release(a2);
  swift_release(v30);
  sub_145D8(a1, type metadata accessor for DownloadButtonPresenter.Data);
  swift_release(*(_QWORD *)&v37[0]);
  v34 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v33;
  swift_release(v34);
  return v3;
}

uint64_t sub_214760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    if ((v3 & 1) != 0)
      v7 = 1;
    else
      v7 = v2;
    v8 = 2;
    if (v4 != 1)
      v8 = 0;
    v9 = v4 == 0;
    if (v4)
      v10 = v8;
    else
      v10 = v7;
    if (v9)
      v11 = v3 & 1;
    else
      v11 = 1;
    v12 = result;
    swift_beginAccess(result + 48, v24, 1, 0);
    *(_QWORD *)(v12 + 48) = v10;
    v13 = v11 & 1;
    *(_BYTE *)(v12 + 56) = v13;
    swift_beginAccess(v12 + 16, v23, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v12 + 16);
    if (Strong)
    {
      v15 = (void *)Strong;
      v16 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v10, v13, ObjectType, v16);

    }
    swift_beginAccess(v12 + 32, &v22, 0, 0);
    v18 = swift_unknownObjectWeakLoadStrong(v12 + 32);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)(v12 + 40);
      v21 = swift_getObjectType(v18);
      (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v20 + 8))(v12, *(_QWORD *)(v12 + 48), *(unsigned __int8 *)(v12 + 56), v21, v20);
      swift_release(v12);
      return swift_unknownObjectRelease(v19);
    }
    else
    {
      return swift_release(v12);
    }
  }
  return result;
}

uint64_t sub_2148C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  _QWORD *v5;
  _BYTE v8[24];

  v1 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_14510(v0 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_data, (uint64_t)v3, v4);
  v5 = (_QWORD *)(v0 + 48);
  swift_beginAccess(v0 + 48, v8, 0, 0);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    if (!*v5)
    {
      sub_214A40((uint64_t)v3);
      return sub_145D8((uint64_t)v3, type metadata accessor for DownloadButtonPresenter.Data);
    }
    if (*v5 != 1)
    {
      sub_214D24((uint64_t)v3);
      return sub_145D8((uint64_t)v3, type metadata accessor for DownloadButtonPresenter.Data);
    }
  }
  sub_21503C((uint64_t)v3);
  return sub_145D8((uint64_t)v3, type metadata accessor for DownloadButtonPresenter.Data);
}

_QWORD *DownloadButtonPresenter.deinit()
{
  _QWORD *v0;

  sub_6FC38((uint64_t)(v0 + 2));
  sub_6FC38((uint64_t)(v0 + 4));
  swift_release(v0[8]);
  swift_release(v0[9]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 15);
  sub_145D8((uint64_t)v0 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_data, type metadata accessor for DownloadButtonPresenter.Data);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_stateMachine));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController));
  return v0;
}

uint64_t DownloadButtonPresenter.__deallocating_deinit()
{
  uint64_t v0;

  DownloadButtonPresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_214A40(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[7];
  char v33;
  _QWORD v34[5];

  v2 = v1;
  v4 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)&v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)&v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_14510(a1, (uint64_t)v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_3C56C((uint64_t)v9, (uint64_t)v6, type metadata accessor for EpisodeOffer);
      sub_2153C8(v6);
      return sub_145D8((uint64_t)v6, type metadata accessor for EpisodeOffer);
    }
    else
    {
      v24 = *v9;
      v25 = v2[19];
      __swift_project_boxed_opaque_existential_1(v2 + 15, v2[18]);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A68);
      v27 = swift_allocObject(v26, 40, 7);
      *(_OWORD *)(v27 + 16) = xmmword_2EA0D0;
      *(_QWORD *)(v27 + 32) = *(_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
      v28 = (*(uint64_t (**)(void))(v25 + 56))();
      swift_bridgeObjectRelease();
      v29 = swift_allocObject(&unk_38A330, 24, 7);
      swift_weakInit(v29 + 16);
      v30 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
      v31 = static OS_dispatch_queue.main.getter(v30);
      v34[3] = v30;
      v34[4] = &protocol witness table for OS_dispatch_queue;
      v34[0] = v31;
      Promise.then(perform:orCatchError:on:)(sub_218F14, v29, FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init(), 0, v34);
      swift_release(v24);
      swift_release(v28);
      swift_release(v29);
      return __swift_destroy_boxed_opaque_existential_1(v34);
    }
  }
  else
  {
    v14 = *v9;
    v13 = (void *)v9[1];
    v15 = v2 + 10;
    v16 = v2[13];
    v17 = v2[14];
    __swift_project_boxed_opaque_existential_1(v2 + 10, v16);
    v18 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 320);
    v20 = swift_retain();
    v19(v20, v16, v17);
    swift_release(v18);
    __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
    LOBYTE(v34[0]) = 20;
    v33 = 1;
    v21._countAndFlagsBits = v14;
    v21._object = v13;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(episodeUuid:actionType:pageType:)(v21, (ShelfKit::MetricsLabel)v34, (ShelfKit::MetricsPageType)&v33);
    v23 = v2[13];
    v22 = v2[14];
    __swift_project_boxed_opaque_existential_1(v15, v23);
    (*(void (**)(uint64_t, void *, _QWORD, uint64_t, uint64_t))(v22 + 336))(v14, v13, 0, v23, v22);
    return swift_bridgeObjectRelease();
  }
}

void sub_214D24(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  Swift::String v36;
  _BYTE v37[7];
  char v38;
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)&v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)&v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_14510(a1, (uint64_t)v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v7);
  if (!EnumCaseMultiPayload)
  {
    v20 = *v9;
    v21 = (void *)v9[1];
    v22 = v2[13];
    v23 = v2[14];
    __swift_project_boxed_opaque_existential_1(v2 + 10, v22);
    v24 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 320);
    v26 = swift_retain();
    v25(v26, v22, v23);
    swift_release(v24);
    __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
    LOBYTE(v39) = 21;
    v38 = 1;
    v27._countAndFlagsBits = v20;
    v27._object = v21;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(episodeUuid:actionType:pageType:)(v27, (ShelfKit::MetricsLabel)&v39, (ShelfKit::MetricsPageType)&v38);
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v28 = *v9;
    v29 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
    v30 = v2[13];
    v31 = v2[14];
    __swift_project_boxed_opaque_existential_1(v2 + 10, v30);
    v32 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 320);
    v34 = swift_retain();
    v33(v34, v30, v31);
    swift_release(v32);
    __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
    v39 = v29;
    v35 = sub_144B4();
    v36._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v35);
    LOBYTE(v39) = 21;
    v38 = 1;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v36, (ShelfKit::MetricsLabel)&v39, (ShelfKit::MetricsPageType)&v38);
    swift_release(v28);
    goto LABEL_6;
  }
  sub_3C56C((uint64_t)v9, (uint64_t)v6, type metadata accessor for EpisodeOffer);
  v12 = *v6;
  v13 = v2[13];
  v14 = v2[14];
  __swift_project_boxed_opaque_existential_1(v2 + 10, v13);
  v15 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 320);
  v17 = swift_retain();
  v16(v17, v13, v14);
  swift_release(v15);
  __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
  v39 = v12;
  v18 = sub_144B4();
  v19._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v18);
  LOBYTE(v39) = 21;
  v38 = 1;
  LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v19, (ShelfKit::MetricsLabel)&v39, (ShelfKit::MetricsPageType)&v38);
  swift_bridgeObjectRelease();
  sub_145D8((uint64_t)v6, type metadata accessor for EpisodeOffer);
LABEL_7:
  sub_215634(a1);
}

uint64_t sub_21503C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[7];
  char v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)&v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)&v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_14510(a1, (uint64_t)v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_3C56C((uint64_t)v9, (uint64_t)v6, type metadata accessor for EpisodeOffer);
      v12 = *v6;
      v13 = v2 + 10;
      v14 = v2[13];
      v15 = v2[14];
      __swift_project_boxed_opaque_existential_1(v2 + 10, v14);
      v16 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 320);
      v18 = swift_retain();
      v17(v18, v14, v15);
      swift_release(v16);
      __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
      v50 = v12;
      v19 = sub_144B4();
      v20._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v19);
      LOBYTE(v50) = 22;
      v49 = 1;
      LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v20, (ShelfKit::MetricsLabel)&v50, (ShelfKit::MetricsPageType)&v49);
      swift_bridgeObjectRelease();
      v22 = v2[13];
      v21 = v2[14];
      __swift_project_boxed_opaque_existential_1(v13, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 376))(v12, v22, v21);
      return sub_145D8((uint64_t)v6, type metadata accessor for EpisodeOffer);
    }
    else
    {
      v35 = *v9;
      v36 = OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId;
      v37 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
      v38 = v2 + 10;
      v39 = v2[13];
      v40 = v2[14];
      __swift_project_boxed_opaque_existential_1(v2 + 10, v39);
      v41 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 320);
      v43 = swift_retain();
      v42(v43, v39, v40);
      swift_release(v41);
      __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
      v50 = v37;
      v44 = sub_144B4();
      v45._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v44);
      LOBYTE(v50) = 22;
      v49 = 1;
      LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v45, (ShelfKit::MetricsLabel)&v50, (ShelfKit::MetricsPageType)&v49);
      swift_bridgeObjectRelease();
      v47 = v2[13];
      v46 = v2[14];
      __swift_project_boxed_opaque_existential_1(v38, v47);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v46 + 376))(*(_QWORD *)(v35 + v36), v47, v46);
      return swift_release(v35);
    }
  }
  else
  {
    v25 = *v9;
    v24 = (void *)v9[1];
    v26 = v2 + 10;
    v27 = v2[13];
    v28 = v2[14];
    __swift_project_boxed_opaque_existential_1(v2 + 10, v27);
    v29 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 320);
    v31 = swift_retain();
    v30(v31, v27, v28);
    swift_release(v29);
    __swift_project_boxed_opaque_existential_1(v2 + 10, v2[13]);
    LOBYTE(v50) = 22;
    v49 = 1;
    v32._countAndFlagsBits = v25;
    v32._object = v24;
    LibraryActionControllerProtocol.makeAndSendMetricsEvent(episodeUuid:actionType:pageType:)(v32, (ShelfKit::MetricsLabel)&v50, (ShelfKit::MetricsPageType)&v49);
    v34 = v2[13];
    v33 = v2[14];
    __swift_project_boxed_opaque_existential_1(v26, v34);
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v33 + 368))(v25, v24, v34, v33);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2153C8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  char v21;
  uint64_t v22;

  v3 = *a1;
  v4 = v1[13];
  v5 = v1[14];
  __swift_project_boxed_opaque_existential_1(v1 + 10, v4);
  v6 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23DownloadButtonPresenter_metricsController);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 320);
  v8 = swift_retain();
  v7(v8, v4, v5);
  swift_release(v6);
  __swift_project_boxed_opaque_existential_1(v1 + 10, v1[13]);
  v22 = v3;
  v9 = sub_144B4();
  v10._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v9);
  v21 = 20;
  v20 = 1;
  LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(v10, (ShelfKit::MetricsLabel)&v21, (ShelfKit::MetricsPageType)&v20);
  swift_bridgeObjectRelease();
  v12 = v1[13];
  v11 = v1[14];
  __swift_project_boxed_opaque_existential_1(v1 + 10, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5BA8);
  v14 = *(_QWORD *)(type metadata accessor for EpisodeOffer(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v13, v17 + v15, v16 | 7);
  *(_OWORD *)(v18 + 16) = xmmword_2EA0D0;
  sub_14510((uint64_t)a1, v18 + v17, type metadata accessor for EpisodeOffer);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 352))(v18, v12, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_215550(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v12[24];

  v4 = type metadata accessor for EpisodeOffer(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)&v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v10 = result;
    if (*(_QWORD *)(v8 + 16))
    {
      sub_14510(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, type metadata accessor for EpisodeOffer);
      sub_2153C8(v7);
      swift_release(v10);
      return sub_145D8((uint64_t)v7, type metadata accessor for EpisodeOffer);
    }
    else
    {
      return swift_release(result);
    }
  }
  return result;
}

void sub_215634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  NSString v12;
  id v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t Strong;
  void *v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;

  v2 = v1;
  v47 = a1;
  v3 = type metadata accessor for PresentationSource(0);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  __chkstk_darwin(v3);
  v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v50._countAndFlagsBits = 0xD000000000000031;
  v50._object = (void *)0x8000000000313A70;
  v10._object = (void *)0x8000000000313A50;
  v10._countAndFlagsBits = 0xD000000000000017;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v50);

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, 0, 0);

  v45 = v8;
  v14 = objc_msgSend(v8, "mainBundle");
  v51._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0x442065766F6D6552;
  v15._object = (void *)0xEF64616F6C6E776FLL;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v51);

  v17 = swift_allocObject(&unk_38A330, 24, 7);
  v46 = v2;
  swift_weakInit(v17 + 16);
  sub_14510(v47, (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DownloadButtonPresenter.Data);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_38A418, v20 + 8, v18 | 7);
  sub_3C56C((uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v19, type metadata accessor for DownloadButtonPresenter.Data);
  *(_QWORD *)(v21 + v20) = v17;
  swift_retain();
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2193A8;
  v49 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_148954;
  aBlock[3] = &block_descriptor_23;
  v23 = _Block_copy(aBlock);
  swift_release(v49);
  v24 = (void *)objc_opt_self(UIAlertAction);
  v25 = objc_msgSend(v24, "actionWithTitle:style:handler:", v22, 2, v23);
  _Block_release(v23);
  swift_release(v17);

  objc_msgSend(v13, "addAction:", v25);
  v26 = objc_msgSend(v13, "actions");
  v27 = sub_327F8(0, &qword_3C2358, UIAlertAction_ptr);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v41 = v28;
    else
      v41 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v29 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = *(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_7;
  v30 = objc_msgSend(v45, "mainBundle");
  v52._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0x6C65636E6143;
  v31._object = (void *)0xE600000000000000;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v52._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v52);

  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v24, "actionWithTitle:style:handler:", v33, 1, 0);

  objc_msgSend(v13, "addAction:", v34);
  v35 = v46 + 16;
  swift_beginAccess(v46 + 16, aBlock, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v35);
  if (!Strong)
    goto LABEL_7;
  v37 = (void *)Strong;
  v38 = (void *)UIView.mt_viewController.getter();

  if (v38)
  {
    swift_unknownObjectWeakLoadStrong(v35);
    v39 = v38;
    v40 = v42;
    PresentationSource.init(viewController:view:location:)();
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v13, 1, 15, 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v44);
  }
  else
  {
LABEL_7:

  }
}

uint64_t sub_215B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v5 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for DownloadButtonPresenter.Data(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a3 + 16;
  sub_14510(a2, (uint64_t)v10, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_3C56C((uint64_t)v10, (uint64_t)v7, type metadata accessor for EpisodeOffer);
      swift_beginAccess(v11, v33, 0, 0);
      Strong = swift_weakLoadStrong(v11);
      if (!Strong)
        return sub_145D8((uint64_t)v7, type metadata accessor for EpisodeOffer);
      v15 = Strong;
      sub_150C8(Strong + 80, (uint64_t)v30);
      swift_release(v15);
      v16 = v31;
      v17 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 400))(*v7, v16, v17);
      sub_145D8((uint64_t)v7, type metadata accessor for EpisodeOffer);
    }
    else
    {
      v24 = *v10;
      swift_beginAccess(v11, v33, 0, 0);
      v25 = swift_weakLoadStrong(v11);
      if (!v25)
        return swift_release(v24);
      v26 = v25;
      sub_150C8(v25 + 80, (uint64_t)v30);
      swift_release(v26);
      v27 = v31;
      v28 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v28 + 400))(*(_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId), v27, v28);
      swift_release(v24);
    }
  }
  else
  {
    v19 = *v10;
    v18 = v10[1];
    swift_beginAccess(v11, v33, 0, 0);
    v20 = swift_weakLoadStrong(v11);
    if (!v20)
      return swift_bridgeObjectRelease();
    v21 = v20;
    sub_150C8(v20 + 80, (uint64_t)v30);
    swift_release(v21);
    v22 = v31;
    v23 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 392))(v19, v18, 0, v22, v23);
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_215DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = v2;
  swift_beginAccess(v3 + 16, v18, 1, 0);
  *(_QWORD *)(v3 + 24) = a2;
  v6 = swift_unknownObjectWeakAssign(v3 + 16, a1);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType(Strong);
    swift_beginAccess(v3 + 48, v17, 0, 0);
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v9 + 8))(*(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), ObjectType, v9);

  }
  swift_beginAccess(v3 + 32, v16, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (result)
  {
    v12 = result;
    v13 = *(_QWORD *)(v3 + 40);
    v14 = swift_getObjectType(result);
    swift_beginAccess(v3 + 48, &v15, 0, 0);
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v13 + 16))(v3, *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), v14, v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t type metadata accessor for DownloadButtonPresenter.Data(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C2320, (uint64_t)&nominal type descriptor for DownloadButtonPresenter.Data);
}

uint64_t sub_215F18()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_215F3C(uint64_t a1)
{
  uint64_t v1;

  return sub_214760(a1, v1);
}

unint64_t sub_215F44()
{
  unint64_t result;

  result = qword_3C2118;
  if (!qword_3C2118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C2110);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C2118);
  }
  return result;
}

uint64_t sub_215F90@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7[24];

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess(v4, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_215FEC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7[24];

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess(v4, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_216044(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = *a2 + 32;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v4 + 40) = v3;
  return swift_unknownObjectWeakAssign(v5, v2);
}

uint64_t sub_21609C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;
  _BYTE v6[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 48, v6, 0, 0);
  v5 = *(_BYTE *)(v3 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 48);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2160E8(uint64_t a1)
{
  return sub_214114(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t dispatch thunk of DownloadButtonPresenterDelegate.downloadButtonPresenter(_:stateDidChange:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 8))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of DownloadButtonPresenterDelegate.downloadButtonPresenter(_:didWireViewWithInitialState:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 16))(a1, a2, a3 & 1);
}

uint64_t sub_216130()
{
  return type metadata accessor for DownloadButtonPresenter(0);
}

uint64_t type metadata accessor for DownloadButtonPresenter(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C2148, (uint64_t)&nominal type descriptor for DownloadButtonPresenter);
}

uint64_t sub_21614C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_300188;
  v4[1] = &unk_300188;
  v4[2] = &unk_3001A0;
  v4[3] = &unk_3001B8;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_3001D0;
  v4[6] = &unk_3001D0;
  result = type metadata accessor for DownloadButtonPresenter.Data(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DownloadButtonPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DownloadButtonPresenter);
}

uint64_t dispatch thunk of DownloadButtonPresenter.view.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.view.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.currentState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.currentState.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of DownloadButtonPresenter.__allocating_init(data:graph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of DownloadButtonPresenter.performPrimaryAction()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

_QWORD *initializeBufferWithCopyOfBuffer for DownloadButtonPresenter.Data(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, int *);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, int *);
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  id *v129;
  int v130;
  id v131;
  id *v132;
  int v133;
  id v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  void (*v147)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int (*v163)(char *, uint64_t, uint64_t);
  uint64_t v164;
  uint64_t v166;
  char *__dst;
  unsigned int (*v168)(_QWORD *, uint64_t, int *);
  int *v169;
  uint64_t v170;
  int *v171;
  char *v172;
  int *v173;
  char *v174;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_retain();
      v20 = a1;
      v21 = a3;
      v22 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v8 = type metadata accessor for EpisodeOffer(0);
      v9 = *(int *)(v8 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *(_OWORD *)v10 = *(_OWORD *)((char *)a2 + v9);
      *((_QWORD *)v10 + 2) = *(_QWORD *)((char *)a2 + v9 + 16);
      v10[24] = *((_BYTE *)a2 + v9 + 24);
      v172 = (char *)a1 + v9;
      v173 = (int *)type metadata accessor for ShowOffer(0);
      v12 = v173[7];
      v13 = &v10[v12];
      v174 = v11;
      v14 = &v11[v12];
      v15 = type metadata accessor for ArtworkModel(0);
      v166 = *(_QWORD *)(v15 - 8);
      v16 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v166 + 48);
      swift_bridgeObjectRetain();
      v171 = (int *)v15;
      swift_bridgeObjectRetain();
      v168 = v16;
      v169 = (int *)v8;
      v170 = a3;
      if (v16(v14, 1, (int *)v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        v18 = v172;
      }
      else
      {
        v24 = *((_QWORD *)v14 + 1);
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *((_QWORD *)v13 + 1) = v24;
        v25 = v14[32];
        swift_bridgeObjectRetain();
        if (v25 == 255)
        {
          *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
          v13[32] = v14[32];
        }
        else
        {
          v27 = *((_QWORD *)v14 + 2);
          v26 = *((_QWORD *)v14 + 3);
          sub_3D464(v27, v26, v25);
          *((_QWORD *)v13 + 2) = v27;
          *((_QWORD *)v13 + 3) = v26;
          v13[32] = v25;
        }
        v18 = v172;
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        v28 = (id *)(v14 + 56);
        v29 = v14[64];
        if (v29 == 255)
        {
          *((_QWORD *)v13 + 7) = *v28;
          v13[64] = v14[64];
        }
        else
        {
          v30 = *v28;
          sub_3D47C(*v28, v14[64]);
          *((_QWORD *)v13 + 7) = v30;
          v13[64] = v29;
        }
        v31 = (id *)(v14 + 72);
        v32 = v14[80];
        if (v32 == 255)
        {
          *((_QWORD *)v13 + 9) = *v31;
          v13[80] = v14[80];
        }
        else
        {
          v33 = *v31;
          sub_3D47C(*v31, v14[80]);
          *((_QWORD *)v13 + 9) = v33;
          v13[80] = v32;
        }
        v34 = (id *)(v14 + 88);
        v35 = v14[96];
        if (v35 == 255)
        {
          *((_QWORD *)v13 + 11) = *v34;
          v13[96] = v14[96];
        }
        else
        {
          v36 = *v34;
          sub_3D47C(*v34, v14[96]);
          *((_QWORD *)v13 + 11) = v36;
          v13[96] = v35;
        }
        v37 = (id *)(v14 + 104);
        v38 = v14[112];
        if (v38 == 255)
        {
          *((_QWORD *)v13 + 13) = *v37;
          v13[112] = v14[112];
        }
        else
        {
          v39 = *v37;
          sub_3D47C(*v37, v14[112]);
          *((_QWORD *)v13 + 13) = v39;
          v13[112] = v38;
        }
        v40 = (id *)(v14 + 120);
        v41 = v14[128];
        if (v41 == 255)
        {
          *((_QWORD *)v13 + 15) = *v40;
          v13[128] = v14[128];
        }
        else
        {
          v42 = *v40;
          sub_3D47C(*v40, v14[128]);
          *((_QWORD *)v13 + 15) = v42;
          v13[128] = v41;
        }
        v13[129] = v14[129];
        v43 = v171[11];
        v44 = &v13[v43];
        v45 = &v14[v43];
        v46 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        v47 = v171[12];
        v48 = &v13[v47];
        v49 = &v14[v47];
        v50 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v50;
        v13[v171[13]] = v14[v171[13]];
        v13[v171[14]] = v14[v171[14]];
        v13[v171[15]] = v14[v171[15]];
        v51 = v171[16];
        v52 = &v13[v51];
        v53 = &v14[v51];
        v54 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v54;
        v55 = *(void (**)(char *, _QWORD, uint64_t, int *))(v166 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v13, 0, 1, v171);
      }
      v56 = v173[8];
      v57 = &v18[v56];
      v58 = &v174[v56];
      v59 = v18;
      v60 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v60;
      v61 = v173[9];
      v62 = &v59[v61];
      v63 = &v174[v61];
      v64 = *((_QWORD *)v63 + 1);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = v64;
      v59[v173[10]] = v174[v173[10]];
      v65 = v173[11];
      v66 = &v59[v65];
      v67 = &v174[v65];
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      v69 = v173[12];
      v70 = &v59[v69];
      v71 = &v174[v69];
      v72 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      v73 = v173[13];
      __dst = &v59[v73];
      v74 = &v174[v73];
      v75 = type metadata accessor for URL(0);
      v76 = *(_QWORD *)(v75 - 8);
      v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v77(v74, 1, v75))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, v74, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v75);
      }
      v79 = v76;
      v80 = v173[14];
      v81 = &v172[v80];
      v82 = &v174[v80];
      v83 = *((_QWORD *)v82 + 1);
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *((_QWORD *)v81 + 1) = v83;
      v84 = v173[15];
      v85 = &v172[v84];
      v86 = &v174[v84];
      v87 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = *(_QWORD *)v86;
      *((_QWORD *)v85 + 1) = v87;
      v88 = v173[16];
      v89 = &v172[v88];
      v90 = &v174[v88];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v77(v90, 1, v75))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v89, v90, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v89, 0, 1, v75);
      }
      v92 = v173[17];
      v93 = &v172[v92];
      v94 = &v174[v92];
      if (v77(&v174[v92], 1, v75))
      {
        v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v93, v94, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v93, 0, 1, v75);
      }
      v172[v173[18]] = v174[v173[18]];
      v96 = v169[7];
      v97 = (char *)a1 + v96;
      v98 = (char *)a2 + v96;
      if (v77((char *)a2 + v96, 1, v75))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)a1 + v169[8], (char *)a2 + v169[8], v75);
      }
      else
      {
        v100 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
        v100(v97, v98, v75);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v97, 0, 1, v75);
        v100((char *)a1 + v169[8], (char *)a2 + v169[8], v75);
      }
      *(_QWORD *)((char *)a1 + v169[9]) = *(_QWORD *)((char *)a2 + v169[9]);
      v101 = v169[10];
      v102 = (_QWORD *)((char *)a1 + v101);
      v103 = (_QWORD *)((char *)a2 + v101);
      v104 = v103[1];
      *v102 = *v103;
      v102[1] = v104;
      v105 = v169[11];
      v106 = (_QWORD *)((char *)a1 + v105);
      v107 = (_QWORD *)((char *)a2 + v105);
      v108 = v107[1];
      *v106 = *v107;
      v106[1] = v108;
      *(_QWORD *)((char *)a1 + v169[12]) = *(_QWORD *)((char *)a2 + v169[12]);
      *((_BYTE *)a1 + v169[13]) = *((_BYTE *)a2 + v169[13]);
      *((_BYTE *)a1 + v169[14]) = *((_BYTE *)a2 + v169[14]);
      v109 = v169[15];
      v110 = (char *)a1 + v109;
      v111 = (char *)a2 + v109;
      *(_QWORD *)v110 = *(_QWORD *)v111;
      v110[8] = v111[8];
      v112 = v169[16];
      v113 = (_QWORD *)((char *)a1 + v112);
      v114 = (_QWORD *)((char *)a2 + v112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v168(v114, 1, v171))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        v116 = v114[1];
        *v113 = *v114;
        v113[1] = v116;
        v117 = *((unsigned __int8 *)v114 + 32);
        swift_bridgeObjectRetain();
        if (v117 == 255)
        {
          *((_OWORD *)v113 + 1) = *((_OWORD *)v114 + 1);
          *((_BYTE *)v113 + 32) = *((_BYTE *)v114 + 32);
        }
        else
        {
          v118 = v114[2];
          v119 = v114[3];
          sub_3D464(v118, v119, v117);
          v113[2] = v118;
          v113[3] = v119;
          *((_BYTE *)v113 + 32) = v117;
        }
        *(_OWORD *)(v113 + 5) = *(_OWORD *)(v114 + 5);
        v120 = (id *)(v114 + 7);
        v121 = *((unsigned __int8 *)v114 + 64);
        if (v121 == 255)
        {
          v113[7] = *v120;
          *((_BYTE *)v113 + 64) = *((_BYTE *)v114 + 64);
        }
        else
        {
          v122 = *v120;
          sub_3D47C(*v120, *((_BYTE *)v114 + 64));
          v113[7] = v122;
          *((_BYTE *)v113 + 64) = v121;
        }
        v123 = (id *)(v114 + 9);
        v124 = *((unsigned __int8 *)v114 + 80);
        if (v124 == 255)
        {
          v113[9] = *v123;
          *((_BYTE *)v113 + 80) = *((_BYTE *)v114 + 80);
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)v114 + 80));
          v113[9] = v125;
          *((_BYTE *)v113 + 80) = v124;
        }
        v126 = (id *)(v114 + 11);
        v127 = *((unsigned __int8 *)v114 + 96);
        if (v127 == 255)
        {
          v113[11] = *v126;
          *((_BYTE *)v113 + 96) = *((_BYTE *)v114 + 96);
        }
        else
        {
          v128 = *v126;
          sub_3D47C(*v126, *((_BYTE *)v114 + 96));
          v113[11] = v128;
          *((_BYTE *)v113 + 96) = v127;
        }
        v129 = (id *)(v114 + 13);
        v130 = *((unsigned __int8 *)v114 + 112);
        if (v130 == 255)
        {
          v113[13] = *v129;
          *((_BYTE *)v113 + 112) = *((_BYTE *)v114 + 112);
        }
        else
        {
          v131 = *v129;
          sub_3D47C(*v129, *((_BYTE *)v114 + 112));
          v113[13] = v131;
          *((_BYTE *)v113 + 112) = v130;
        }
        v132 = (id *)(v114 + 15);
        v133 = *((unsigned __int8 *)v114 + 128);
        if (v133 == 255)
        {
          v113[15] = *v132;
          *((_BYTE *)v113 + 128) = *((_BYTE *)v114 + 128);
        }
        else
        {
          v134 = *v132;
          sub_3D47C(*v132, *((_BYTE *)v114 + 128));
          v113[15] = v134;
          *((_BYTE *)v113 + 128) = v133;
        }
        *((_BYTE *)v113 + 129) = *((_BYTE *)v114 + 129);
        v135 = v171[11];
        v136 = (char *)v113 + v135;
        v137 = (char *)v114 + v135;
        v138 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v136, v137, v138);
        v139 = v171[12];
        v140 = (_QWORD *)((char *)v113 + v139);
        v141 = (_QWORD *)((char *)v114 + v139);
        v142 = v141[1];
        *v140 = *v141;
        v140[1] = v142;
        *((_BYTE *)v113 + v171[13]) = *((_BYTE *)v114 + v171[13]);
        *((_BYTE *)v113 + v171[14]) = *((_BYTE *)v114 + v171[14]);
        *((_BYTE *)v113 + v171[15]) = *((_BYTE *)v114 + v171[15]);
        v143 = v171[16];
        v144 = (_QWORD *)((char *)v113 + v143);
        v145 = (_QWORD *)((char *)v114 + v143);
        v146 = v145[1];
        *v144 = *v145;
        v144[1] = v146;
        v147 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v166 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v147(v113, 0, 1, v171);
      }
      v148 = v169[17];
      v149 = (_QWORD *)((char *)a1 + v148);
      v150 = (_QWORD *)((char *)a2 + v148);
      v151 = v150[1];
      *v149 = *v150;
      v149[1] = v151;
      v152 = v169[18];
      v153 = (char *)a1 + v152;
      v154 = (char *)a2 + v152;
      v153[8] = v154[8];
      *(_QWORD *)v153 = *(_QWORD *)v154;
      v155 = v169[19];
      v156 = (char *)a1 + v155;
      v157 = (char *)a2 + v155;
      *(_QWORD *)v156 = *(_QWORD *)v157;
      v156[8] = v157[8];
      *((_BYTE *)a1 + v169[20]) = *((_BYTE *)a2 + v169[20]);
      *((_BYTE *)a1 + v169[21]) = *((_BYTE *)a2 + v169[21]);
      v158 = v169[22];
      v159 = (char *)a1 + v158;
      v160 = (char *)a2 + v158;
      v161 = type metadata accessor for TranscriptRequestInformation(0);
      v162 = *(_QWORD *)(v161 - 8);
      v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
      swift_bridgeObjectRetain();
      if (v163(v160, 1, v161))
      {
        v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v159, v160, v161);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
      }
      v21 = v170;
      v20 = a1;
      v22 = 1;
    }
    else
    {
      v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      swift_bridgeObjectRetain();
      v20 = a1;
      v21 = a3;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for DownloadButtonPresenter.Data(char *a1, uint64_t a2)
{
  uint64_t result;
  int *v4;
  char *v5;
  int *v6;
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  unsigned int v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((_DWORD)result)
  {
    case 2:
      return swift_release(*(_QWORD *)a1);
    case 1:
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for EpisodeOffer(0);
      v5 = &a1[v4[6]];
      swift_bridgeObjectRelease();
      v6 = (int *)type metadata accessor for ShowOffer(0);
      v7 = &v5[v6[7]];
      v8 = type metadata accessor for ArtworkModel(0);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
      if (!v9(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        v10 = v7[32];
        if (v10 != 255)
          sub_3B5BC(*((_QWORD *)v7 + 2), *((_QWORD *)v7 + 3), v10);
        v11 = v7[64];
        if (v11 != 255)
          sub_3D624(*((id *)v7 + 7), v11);
        v12 = v7[80];
        if (v12 != 255)
          sub_3D624(*((id *)v7 + 9), v12);
        v13 = v7[96];
        if (v13 != 255)
          sub_3D624(*((id *)v7 + 11), v13);
        v14 = v7[112];
        if (v14 != 255)
          sub_3D624(*((id *)v7 + 13), v14);
        v15 = v7[128];
        if (v15 != 255)
          sub_3D624(*((id *)v7 + 15), v15);
        v16 = &v7[*(int *)(v8 + 44)];
        v17 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = &v5[v6[13]];
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (!v21(v18, 1, v19))
        (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = &v5[v6[16]];
      if (!v21(v22, 1, v19))
        (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      v23 = &v5[v6[17]];
      if (!v21(v23, 1, v19))
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      v24 = &a1[v4[7]];
      v25 = v21(v24, 1, v19);
      v26 = *(void (**)(char *, uint64_t))(v20 + 8);
      if (!v25)
        v26(v24, v19);
      v26(&a1[v4[8]], v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release(*(_QWORD *)&a1[v4[12]]);
      v27 = &a1[v4[16]];
      if (!v9(v27, 1, v8))
      {
        swift_bridgeObjectRelease();
        v28 = v27[32];
        if (v28 != 255)
          sub_3B5BC(*((_QWORD *)v27 + 2), *((_QWORD *)v27 + 3), v28);
        v29 = v27[64];
        if (v29 != 255)
          sub_3D624(*((id *)v27 + 7), v29);
        v30 = v27[80];
        if (v30 != 255)
          sub_3D624(*((id *)v27 + 9), v30);
        v31 = v27[96];
        if (v31 != 255)
          sub_3D624(*((id *)v27 + 11), v31);
        v32 = v27[112];
        if (v32 != 255)
          sub_3D624(*((id *)v27 + 13), v32);
        v33 = v27[128];
        if (v33 != 255)
          sub_3D624(*((id *)v27 + 15), v33);
        v34 = &v27[*(int *)(v8 + 44)];
        v35 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v36 = &a1[v4[22]];
      v37 = type metadata accessor for TranscriptRequestInformation(0);
      v38 = *(_QWORD *)(v37 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v36, v37);
      break;
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for DownloadButtonPresenter.Data(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, int *);
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  id *v115;
  int v116;
  id v117;
  id *v118;
  int v119;
  id v120;
  id *v121;
  int v122;
  id v123;
  id *v124;
  int v125;
  id v126;
  id *v127;
  int v128;
  id v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, _QWORD, uint64_t, int *);
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v161;
  _BYTE *__dst;
  char *__dsta;
  unsigned int (*v164)(char *, uint64_t, int *);
  int *v165;
  char *v166;
  uint64_t v167;
  int *v168;
  int *v169;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *a2;
    swift_retain();
  }
  else if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_QWORD *)a1 + 2) = a2[2];
    v165 = (int *)type metadata accessor for EpisodeOffer(0);
    v8 = v165[6];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    *((_QWORD *)v9 + 2) = *(_QWORD *)((char *)a2 + v8 + 16);
    v9[24] = *((_BYTE *)a2 + v8 + 24);
    v169 = (int *)type metadata accessor for ShowOffer(0);
    v11 = v169[7];
    __dst = v9;
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = (int *)type metadata accessor for ArtworkModel(0);
    v161 = *((_QWORD *)v14 - 1);
    v15 = *(unsigned int (**)(char *, uint64_t, int *))(v161 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v168 = v14;
    v164 = v15;
    v167 = v3;
    v166 = (char *)a2;
    if (v15(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = __dst;
    }
    else
    {
      v19 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v19;
      v20 = v13[32];
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
        v12[32] = v13[32];
      }
      else
      {
        v21 = *((_QWORD *)v13 + 2);
        v22 = *((_QWORD *)v13 + 3);
        sub_3D464(v21, v22, v20);
        *((_QWORD *)v12 + 2) = v21;
        *((_QWORD *)v12 + 3) = v22;
        v12[32] = v20;
      }
      v17 = __dst;
      *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
      v23 = (id *)(v13 + 56);
      v24 = v13[64];
      if (v24 == 255)
      {
        *((_QWORD *)v12 + 7) = *v23;
        v12[64] = v13[64];
      }
      else
      {
        v25 = *v23;
        sub_3D47C(*v23, v13[64]);
        *((_QWORD *)v12 + 7) = v25;
        v12[64] = v24;
      }
      v26 = (id *)(v13 + 72);
      v27 = v13[80];
      if (v27 == 255)
      {
        *((_QWORD *)v12 + 9) = *v26;
        v12[80] = v13[80];
      }
      else
      {
        v28 = *v26;
        sub_3D47C(*v26, v13[80]);
        *((_QWORD *)v12 + 9) = v28;
        v12[80] = v27;
      }
      v29 = (id *)(v13 + 88);
      v30 = v13[96];
      if (v30 == 255)
      {
        *((_QWORD *)v12 + 11) = *v29;
        v12[96] = v13[96];
      }
      else
      {
        v31 = *v29;
        sub_3D47C(*v29, v13[96]);
        *((_QWORD *)v12 + 11) = v31;
        v12[96] = v30;
      }
      v32 = (id *)(v13 + 104);
      v33 = v13[112];
      if (v33 == 255)
      {
        *((_QWORD *)v12 + 13) = *v32;
        v12[112] = v13[112];
      }
      else
      {
        v34 = *v32;
        sub_3D47C(*v32, v13[112]);
        *((_QWORD *)v12 + 13) = v34;
        v12[112] = v33;
      }
      v35 = (id *)(v13 + 120);
      v36 = v13[128];
      if (v36 == 255)
      {
        *((_QWORD *)v12 + 15) = *v35;
        v12[128] = v13[128];
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v13[128]);
        *((_QWORD *)v12 + 15) = v37;
        v12[128] = v36;
      }
      v12[129] = v13[129];
      v38 = v14[11];
      v39 = &v12[v38];
      v40 = &v13[v38];
      v41 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      v42 = v14[12];
      v43 = &v12[v42];
      v44 = &v13[v42];
      v45 = *((_QWORD *)v44 + 1);
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = v45;
      v12[v14[13]] = v13[v14[13]];
      v12[v14[14]] = v13[v14[14]];
      v12[v14[15]] = v13[v14[15]];
      v46 = v14[16];
      v47 = &v12[v46];
      v48 = &v13[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v12, 0, 1, v14);
    }
    v51 = v169[8];
    v52 = &v17[v51];
    v53 = &v10[v51];
    v54 = *((_QWORD *)v53 + 1);
    *v52 = *(_QWORD *)v53;
    v52[1] = v54;
    v55 = v169[9];
    v56 = &v17[v55];
    v57 = &v10[v55];
    v58 = *((_QWORD *)v57 + 1);
    *v56 = *(_QWORD *)v57;
    v56[1] = v58;
    v17[v169[10]] = v10[v169[10]];
    v59 = v169[11];
    v60 = &v17[v59];
    v61 = &v10[v59];
    v62 = *((_QWORD *)v61 + 1);
    *v60 = *(_QWORD *)v61;
    v60[1] = v62;
    v63 = v169[12];
    v64 = &v17[v63];
    v65 = &v10[v63];
    v66 = *((_QWORD *)v65 + 1);
    *v64 = *(_QWORD *)v65;
    v64[1] = v66;
    v67 = v169[13];
    __dsta = &v17[v67];
    v68 = &v10[v67];
    v69 = type metadata accessor for URL(0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v71;
    if (v71(v68, 1, v69))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(__dsta, v68, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dsta, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(__dsta, 0, 1, v69);
    }
    v74 = v70;
    v75 = v169[14];
    v76 = &v17[v75];
    v77 = &v10[v75];
    v78 = *((_QWORD *)v77 + 1);
    *v76 = *(_QWORD *)v77;
    v76[1] = v78;
    v79 = v169[15];
    v80 = &v17[v79];
    v81 = &v10[v79];
    v82 = *((_QWORD *)v81 + 1);
    *v80 = *(_QWORD *)v81;
    v80[1] = v82;
    v83 = v169[16];
    v84 = &v17[v83];
    v85 = &v10[v83];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72(v85, 1, v69))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v84, v85, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v84, 0, 1, v69);
    }
    v87 = v169[17];
    v88 = &v17[v87];
    v89 = &v10[v87];
    if (v72(&v10[v87], 1, v69))
    {
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v88, v89, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v88, 0, 1, v69);
    }
    v17[v169[18]] = v10[v169[18]];
    v91 = v165[7];
    v92 = &a1[v91];
    v93 = &v166[v91];
    if (v72(&v166[v91], 1, v69))
    {
      v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(&a1[v165[8]], &v166[v165[8]], v69);
    }
    else
    {
      v95 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      v95(v92, v93, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v92, 0, 1, v69);
      v95(&a1[v165[8]], &v166[v165[8]], v69);
    }
    *(_QWORD *)&a1[v165[9]] = *(_QWORD *)&v166[v165[9]];
    v96 = v165[10];
    v97 = &a1[v96];
    v98 = &v166[v96];
    v99 = *((_QWORD *)v98 + 1);
    *(_QWORD *)v97 = *(_QWORD *)v98;
    *((_QWORD *)v97 + 1) = v99;
    v100 = v165[11];
    v101 = &a1[v100];
    v102 = &v166[v100];
    v103 = *((_QWORD *)v102 + 1);
    *(_QWORD *)v101 = *(_QWORD *)v102;
    *((_QWORD *)v101 + 1) = v103;
    *(_QWORD *)&a1[v165[12]] = *(_QWORD *)&v166[v165[12]];
    a1[v165[13]] = v166[v165[13]];
    a1[v165[14]] = v166[v165[14]];
    v104 = v165[15];
    v105 = &a1[v104];
    v106 = &v166[v104];
    *(_QWORD *)v105 = *(_QWORD *)v106;
    v105[8] = v106[8];
    v107 = v165[16];
    v108 = &a1[v107];
    v109 = &v166[v107];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v164(v109, 1, v168))
    {
      v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    }
    else
    {
      v111 = *((_QWORD *)v109 + 1);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v111;
      v112 = v109[32];
      swift_bridgeObjectRetain();
      if (v112 == 255)
      {
        *((_OWORD *)v108 + 1) = *((_OWORD *)v109 + 1);
        v108[32] = v109[32];
      }
      else
      {
        v113 = *((_QWORD *)v109 + 2);
        v114 = *((_QWORD *)v109 + 3);
        sub_3D464(v113, v114, v112);
        *((_QWORD *)v108 + 2) = v113;
        *((_QWORD *)v108 + 3) = v114;
        v108[32] = v112;
      }
      *(_OWORD *)(v108 + 40) = *(_OWORD *)(v109 + 40);
      v115 = (id *)(v109 + 56);
      v116 = v109[64];
      if (v116 == 255)
      {
        *((_QWORD *)v108 + 7) = *v115;
        v108[64] = v109[64];
      }
      else
      {
        v117 = *v115;
        sub_3D47C(*v115, v109[64]);
        *((_QWORD *)v108 + 7) = v117;
        v108[64] = v116;
      }
      v118 = (id *)(v109 + 72);
      v119 = v109[80];
      if (v119 == 255)
      {
        *((_QWORD *)v108 + 9) = *v118;
        v108[80] = v109[80];
      }
      else
      {
        v120 = *v118;
        sub_3D47C(*v118, v109[80]);
        *((_QWORD *)v108 + 9) = v120;
        v108[80] = v119;
      }
      v121 = (id *)(v109 + 88);
      v122 = v109[96];
      if (v122 == 255)
      {
        *((_QWORD *)v108 + 11) = *v121;
        v108[96] = v109[96];
      }
      else
      {
        v123 = *v121;
        sub_3D47C(*v121, v109[96]);
        *((_QWORD *)v108 + 11) = v123;
        v108[96] = v122;
      }
      v124 = (id *)(v109 + 104);
      v125 = v109[112];
      if (v125 == 255)
      {
        *((_QWORD *)v108 + 13) = *v124;
        v108[112] = v109[112];
      }
      else
      {
        v126 = *v124;
        sub_3D47C(*v124, v109[112]);
        *((_QWORD *)v108 + 13) = v126;
        v108[112] = v125;
      }
      v127 = (id *)(v109 + 120);
      v128 = v109[128];
      if (v128 == 255)
      {
        *((_QWORD *)v108 + 15) = *v127;
        v108[128] = v109[128];
      }
      else
      {
        v129 = *v127;
        sub_3D47C(*v127, v109[128]);
        *((_QWORD *)v108 + 15) = v129;
        v108[128] = v128;
      }
      v108[129] = v109[129];
      v130 = v168[11];
      v131 = &v108[v130];
      v132 = &v109[v130];
      v133 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v131, v132, v133);
      v134 = v168[12];
      v135 = &v108[v134];
      v136 = &v109[v134];
      v137 = *((_QWORD *)v136 + 1);
      *(_QWORD *)v135 = *(_QWORD *)v136;
      *((_QWORD *)v135 + 1) = v137;
      v108[v168[13]] = v109[v168[13]];
      v108[v168[14]] = v109[v168[14]];
      v108[v168[15]] = v109[v168[15]];
      v138 = v168[16];
      v139 = &v108[v138];
      v140 = &v109[v138];
      v141 = *((_QWORD *)v140 + 1);
      *(_QWORD *)v139 = *(_QWORD *)v140;
      *((_QWORD *)v139 + 1) = v141;
      v142 = *(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142(v108, 0, 1, v168);
    }
    v143 = v165[17];
    v144 = &a1[v143];
    v145 = &v166[v143];
    v146 = *((_QWORD *)v145 + 1);
    *(_QWORD *)v144 = *(_QWORD *)v145;
    *((_QWORD *)v144 + 1) = v146;
    v147 = v165[18];
    v148 = &a1[v147];
    v149 = &v166[v147];
    v148[8] = v149[8];
    *(_QWORD *)v148 = *(_QWORD *)v149;
    v150 = v165[19];
    v151 = &a1[v150];
    v152 = &v166[v150];
    *(_QWORD *)v151 = *(_QWORD *)v152;
    v151[8] = v152[8];
    a1[v165[20]] = v166[v165[20]];
    a1[v165[21]] = v166[v165[21]];
    v153 = v165[22];
    v154 = &a1[v153];
    v155 = &v166[v153];
    v156 = type metadata accessor for TranscriptRequestInformation(0);
    v157 = *(_QWORD *)(v156 - 8);
    v158 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
    swift_bridgeObjectRetain();
    if (v158(v155, 1, v156))
    {
      v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v154, v155, v156);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
    }
    v3 = v167;
    v7 = 1;
  }
  else
  {
    v18 = a2[1];
    *(_QWORD *)a1 = *a2;
    *((_QWORD *)a1 + 1) = v18;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload(a1, v3, v7);
  return a1;
}

_QWORD *assignWithCopy for DownloadButtonPresenter.Data(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(_QWORD *, uint64_t, int *);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id *v24;
  int v25;
  id v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, _QWORD, uint64_t, int *);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  id *v111;
  int v112;
  id v113;
  id v114;
  id *v115;
  int v116;
  id v117;
  id v118;
  id *v119;
  int v120;
  id v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id v126;
  id *v127;
  int v128;
  id v129;
  id v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  void (*v141)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v161;
  unsigned int (*v162)(_QWORD *, uint64_t, int *);
  char *__dst;
  uint64_t v164;
  int *v165;
  char *v166;
  int *v167;
  char *v168;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for DownloadButtonPresenter.Data);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_retain();
      v17 = a1;
      v18 = a3;
      v19 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v7 = (int *)type metadata accessor for EpisodeOffer(0);
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      *(_QWORD *)v9 = *(_QWORD *)((char *)a2 + v8);
      *((_QWORD *)v9 + 1) = *(_QWORD *)((char *)a2 + v8 + 8);
      *((_QWORD *)v9 + 2) = *(_QWORD *)((char *)a2 + v8 + 16);
      v9[24] = *((_BYTE *)a2 + v8 + 24);
      v167 = (int *)type metadata accessor for ShowOffer(0);
      v168 = v9;
      v11 = v167[7];
      v12 = &v9[v11];
      v166 = v10;
      v13 = &v10[v11];
      v14 = (int *)type metadata accessor for ArtworkModel(0);
      v161 = *((_QWORD *)v14 - 1);
      v15 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v161 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v162 = v15;
      v164 = a3;
      v165 = v14;
      if (v15(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
        v20 = v13[32];
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          v23 = *((_OWORD *)v13 + 1);
          v12[32] = v13[32];
          *((_OWORD *)v12 + 1) = v23;
        }
        else
        {
          v22 = *((_QWORD *)v13 + 2);
          v21 = *((_QWORD *)v13 + 3);
          sub_3D464(v22, v21, v20);
          *((_QWORD *)v12 + 2) = v22;
          *((_QWORD *)v12 + 3) = v21;
          v12[32] = v20;
        }
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
        v24 = (id *)(v13 + 56);
        v25 = v13[64];
        if (v25 == 255)
        {
          v27 = *v24;
          v12[64] = v13[64];
          *((_QWORD *)v12 + 7) = v27;
        }
        else
        {
          v26 = *v24;
          sub_3D47C(*v24, v13[64]);
          *((_QWORD *)v12 + 7) = v26;
          v12[64] = v25;
        }
        v28 = (id *)(v13 + 72);
        v29 = v13[80];
        if (v29 == 255)
        {
          v31 = *v28;
          v12[80] = v13[80];
          *((_QWORD *)v12 + 9) = v31;
        }
        else
        {
          v30 = *v28;
          sub_3D47C(*v28, v13[80]);
          *((_QWORD *)v12 + 9) = v30;
          v12[80] = v29;
        }
        v32 = (id *)(v13 + 88);
        v33 = v13[96];
        if (v33 == 255)
        {
          v35 = *v32;
          v12[96] = v13[96];
          *((_QWORD *)v12 + 11) = v35;
        }
        else
        {
          v34 = *v32;
          sub_3D47C(*v32, v13[96]);
          *((_QWORD *)v12 + 11) = v34;
          v12[96] = v33;
        }
        v36 = (id *)(v13 + 104);
        v37 = v13[112];
        if (v37 == 255)
        {
          v39 = *v36;
          v12[112] = v13[112];
          *((_QWORD *)v12 + 13) = v39;
        }
        else
        {
          v38 = *v36;
          sub_3D47C(*v36, v13[112]);
          *((_QWORD *)v12 + 13) = v38;
          v12[112] = v37;
        }
        v40 = (id *)(v13 + 120);
        v41 = v13[128];
        if (v41 == 255)
        {
          v43 = *v40;
          v12[128] = v13[128];
          *((_QWORD *)v12 + 15) = v43;
        }
        else
        {
          v42 = *v40;
          sub_3D47C(*v40, v13[128]);
          *((_QWORD *)v12 + 15) = v42;
          v12[128] = v41;
        }
        v12[129] = v13[129];
        v44 = v14[11];
        v45 = &v12[v44];
        v46 = &v13[v44];
        v47 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
        v48 = v14[12];
        v49 = &v12[v48];
        v50 = &v13[v48];
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        v12[v14[13]] = v13[v14[13]];
        v12[v14[14]] = v13[v14[14]];
        v12[v14[15]] = v13[v14[15]];
        v51 = v14[16];
        v52 = &v12[v51];
        v53 = &v13[v51];
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
        v54 = *(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v12, 0, 1, v14);
      }
      v55 = v167[8];
      v56 = &v168[v55];
      v57 = &v166[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
      v58 = v167[9];
      v59 = &v168[v58];
      v60 = &v166[v58];
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
      v168[v167[10]] = v166[v167[10]];
      v61 = v167[11];
      v62 = &v168[v61];
      v63 = &v166[v61];
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
      v64 = v167[12];
      v65 = &v168[v64];
      v66 = &v166[v64];
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      v67 = v167[13];
      __dst = &v168[v67];
      v68 = &v166[v67];
      v69 = type metadata accessor for URL(0);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71(v68, 1, v69))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(__dst, v68, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 1, v69);
      }
      v73 = v70;
      v74 = v167[14];
      v75 = &v168[v74];
      v76 = &v166[v74];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
      v77 = v167[15];
      v78 = &v168[v77];
      v79 = &v166[v77];
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
      v80 = v167[16];
      v81 = &v168[v80];
      v82 = &v166[v80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71(v82, 1, v69))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v81, v82, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v81, 0, 1, v69);
      }
      v84 = v167[17];
      v85 = &v168[v84];
      v86 = &v166[v84];
      if (v71(&v166[v84], 1, v69))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v85, v86, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v85, 0, 1, v69);
      }
      v168[v167[18]] = v166[v167[18]];
      v88 = v7[7];
      v89 = (char *)a1 + v88;
      v90 = (char *)a2 + v88;
      if (v71((char *)a2 + v88, 1, v69))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))((char *)a1 + v7[8], (char *)a2 + v7[8], v69);
      }
      else
      {
        v92 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
        v92(v89, v90, v69);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v89, 0, 1, v69);
        v92((char *)a1 + v7[8], (char *)a2 + v7[8], v69);
      }
      *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
      v93 = v7[10];
      v94 = (_QWORD *)((char *)a1 + v93);
      v95 = (_QWORD *)((char *)a2 + v93);
      *v94 = *v95;
      v94[1] = v95[1];
      v96 = v7[11];
      v97 = (_QWORD *)((char *)a1 + v96);
      v98 = (_QWORD *)((char *)a2 + v96);
      *v97 = *v98;
      v97[1] = v98[1];
      *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)((char *)a2 + v7[12]);
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      v99 = v7[15];
      v100 = (char *)a1 + v99;
      v101 = (char *)a2 + v99;
      v102 = v101[8];
      *(_QWORD *)v100 = *(_QWORD *)v101;
      v100[8] = v102;
      v103 = v7[16];
      v104 = (_QWORD *)((char *)a1 + v103);
      v105 = (_QWORD *)((char *)a2 + v103);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v162(v105, 1, v165))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        *v104 = *v105;
        v104[1] = v105[1];
        v107 = *((unsigned __int8 *)v105 + 32);
        swift_bridgeObjectRetain();
        if (v107 == 255)
        {
          v110 = *((_OWORD *)v105 + 1);
          *((_BYTE *)v104 + 32) = *((_BYTE *)v105 + 32);
          *((_OWORD *)v104 + 1) = v110;
        }
        else
        {
          v108 = v105[2];
          v109 = v105[3];
          sub_3D464(v108, v109, v107);
          v104[2] = v108;
          v104[3] = v109;
          *((_BYTE *)v104 + 32) = v107;
        }
        v104[5] = v105[5];
        v104[6] = v105[6];
        v111 = (id *)(v105 + 7);
        v112 = *((unsigned __int8 *)v105 + 64);
        if (v112 == 255)
        {
          v114 = *v111;
          *((_BYTE *)v104 + 64) = *((_BYTE *)v105 + 64);
          v104[7] = v114;
        }
        else
        {
          v113 = *v111;
          sub_3D47C(*v111, *((_BYTE *)v105 + 64));
          v104[7] = v113;
          *((_BYTE *)v104 + 64) = v112;
        }
        v115 = (id *)(v105 + 9);
        v116 = *((unsigned __int8 *)v105 + 80);
        if (v116 == 255)
        {
          v118 = *v115;
          *((_BYTE *)v104 + 80) = *((_BYTE *)v105 + 80);
          v104[9] = v118;
        }
        else
        {
          v117 = *v115;
          sub_3D47C(*v115, *((_BYTE *)v105 + 80));
          v104[9] = v117;
          *((_BYTE *)v104 + 80) = v116;
        }
        v119 = (id *)(v105 + 11);
        v120 = *((unsigned __int8 *)v105 + 96);
        if (v120 == 255)
        {
          v122 = *v119;
          *((_BYTE *)v104 + 96) = *((_BYTE *)v105 + 96);
          v104[11] = v122;
        }
        else
        {
          v121 = *v119;
          sub_3D47C(*v119, *((_BYTE *)v105 + 96));
          v104[11] = v121;
          *((_BYTE *)v104 + 96) = v120;
        }
        v123 = (id *)(v105 + 13);
        v124 = *((unsigned __int8 *)v105 + 112);
        if (v124 == 255)
        {
          v126 = *v123;
          *((_BYTE *)v104 + 112) = *((_BYTE *)v105 + 112);
          v104[13] = v126;
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)v105 + 112));
          v104[13] = v125;
          *((_BYTE *)v104 + 112) = v124;
        }
        v127 = (id *)(v105 + 15);
        v128 = *((unsigned __int8 *)v105 + 128);
        if (v128 == 255)
        {
          v130 = *v127;
          *((_BYTE *)v104 + 128) = *((_BYTE *)v105 + 128);
          v104[15] = v130;
        }
        else
        {
          v129 = *v127;
          sub_3D47C(*v127, *((_BYTE *)v105 + 128));
          v104[15] = v129;
          *((_BYTE *)v104 + 128) = v128;
        }
        *((_BYTE *)v104 + 129) = *((_BYTE *)v105 + 129);
        v131 = v165[11];
        v132 = (char *)v104 + v131;
        v133 = (char *)v105 + v131;
        v134 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
        v135 = v165[12];
        v136 = (_QWORD *)((char *)v104 + v135);
        v137 = (_QWORD *)((char *)v105 + v135);
        *v136 = *v137;
        v136[1] = v137[1];
        *((_BYTE *)v104 + v165[13]) = *((_BYTE *)v105 + v165[13]);
        *((_BYTE *)v104 + v165[14]) = *((_BYTE *)v105 + v165[14]);
        *((_BYTE *)v104 + v165[15]) = *((_BYTE *)v105 + v165[15]);
        v138 = v165[16];
        v139 = (_QWORD *)((char *)v104 + v138);
        v140 = (_QWORD *)((char *)v105 + v138);
        *v139 = *v140;
        v139[1] = v140[1];
        v141 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v161 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v141(v104, 0, 1, v165);
      }
      v142 = v7[17];
      v143 = (_QWORD *)((char *)a1 + v142);
      v144 = (_QWORD *)((char *)a2 + v142);
      *v143 = *v144;
      v143[1] = v144[1];
      v145 = v7[18];
      v146 = (char *)a1 + v145;
      v147 = (char *)a2 + v145;
      v148 = *(_QWORD *)v147;
      v146[8] = v147[8];
      *(_QWORD *)v146 = v148;
      v149 = v7[19];
      v150 = (char *)a1 + v149;
      v151 = (char *)a2 + v149;
      v152 = *(_QWORD *)v151;
      v150[8] = v151[8];
      *(_QWORD *)v150 = v152;
      *((_BYTE *)a1 + v7[20]) = *((_BYTE *)a2 + v7[20]);
      *((_BYTE *)a1 + v7[21]) = *((_BYTE *)a2 + v7[21]);
      v153 = v7[22];
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      v156 = type metadata accessor for TranscriptRequestInformation(0);
      v157 = *(_QWORD *)(v156 - 8);
      v158 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
      swift_bridgeObjectRetain();
      if (v158(v155, 1, v156))
      {
        v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v154, v155, v156);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
      }
      v18 = v164;
      v17 = a1;
      v19 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v17 = a1;
      v18 = a3;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

char *assignWithTake for DownloadButtonPresenter.Data(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v67)(char *, uint64_t, int *);
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for DownloadButtonPresenter.Data);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v70 = a3;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v6 = (int *)type metadata accessor for EpisodeOffer(0);
      v7 = v6[6];
      v8 = &a1[v7];
      v9 = &a2[v7];
      *(_QWORD *)v8 = *(_QWORD *)&a2[v7];
      *(_OWORD *)(v8 + 8) = *(_OWORD *)&a2[v7 + 8];
      v8[24] = a2[v7 + 24];
      v10 = (int *)type metadata accessor for ShowOffer(0);
      v11 = v10[7];
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = (int *)type metadata accessor for ArtworkModel(0);
      v15 = *((_QWORD *)v14 - 1);
      v67 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
      v68 = v15;
      v69 = v14;
      if (v67(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v17 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v17;
        v12[32] = v13[32];
        *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
        *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
        v12[64] = v13[64];
        *(_OWORD *)(v12 + 113) = *(_OWORD *)(v13 + 113);
        *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
        *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
        *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
        v12[129] = v13[129];
        v18 = v14[11];
        v71 = &v13[v18];
        v73 = &v12[v18];
        v19 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v73, v71, v19);
        *(_OWORD *)&v12[v14[12]] = *(_OWORD *)&v13[v14[12]];
        v12[v14[13]] = v13[v14[13]];
        v12[v14[14]] = v13[v14[14]];
        v12[v14[15]] = v13[v14[15]];
        *(_OWORD *)&v12[v14[16]] = *(_OWORD *)&v13[v14[16]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      }
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
      *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
      v8[v10[10]] = v9[v10[10]];
      *(_OWORD *)&v8[v10[11]] = *(_OWORD *)&v9[v10[11]];
      *(_OWORD *)&v8[v10[12]] = *(_OWORD *)&v9[v10[12]];
      v20 = v10[13];
      v21 = &v8[v20];
      v22 = &v9[v20];
      v23 = type metadata accessor for URL(0);
      v24 = *(_QWORD *)(v23 - 8);
      v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      v74 = v24;
      if (v72(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      *(_OWORD *)&v8[v10[14]] = *(_OWORD *)&v9[v10[14]];
      *(_OWORD *)&v8[v10[15]] = *(_OWORD *)&v9[v10[15]];
      v26 = v10[16];
      v27 = &v8[v26];
      v28 = &v9[v26];
      v29 = v72;
      if (v72(&v9[v26], 1, v23))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v27, v28, v23);
        v29 = v72;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v27, 0, 1, v23);
      }
      v31 = v10[17];
      v32 = &v8[v31];
      v33 = &v9[v31];
      if (v29(&v9[v31], 1, v23))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v35 = v74;
      }
      else
      {
        v36 = v33;
        v35 = v74;
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v32, v36, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v32, 0, 1, v23);
      }
      v8[v10[18]] = v9[v10[18]];
      v37 = v6[7];
      v38 = &a1[v37];
      v39 = &a2[v37];
      if (v29(&a2[v37], 1, v23))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v41 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      }
      else
      {
        v41 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v41(v38, v39, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v23);
      }
      v41(&a1[v6[8]], &a2[v6[8]], v23);
      *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
      *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
      *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
      *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
      a1[v6[13]] = a2[v6[13]];
      a1[v6[14]] = a2[v6[14]];
      v42 = v6[15];
      v43 = &a1[v42];
      v44 = &a2[v42];
      *(_QWORD *)v43 = *(_QWORD *)v44;
      v43[8] = v44[8];
      v45 = v6[16];
      v46 = &a1[v45];
      v47 = &a2[v45];
      if (v67(&a2[v45], 1, v69))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = *((_OWORD *)v47 + 1);
        *(_OWORD *)v46 = *(_OWORD *)v47;
        *((_OWORD *)v46 + 1) = v49;
        v46[32] = v47[32];
        *(_OWORD *)(v46 + 40) = *(_OWORD *)(v47 + 40);
        *((_QWORD *)v46 + 7) = *((_QWORD *)v47 + 7);
        v46[64] = v47[64];
        *(_OWORD *)(v46 + 113) = *(_OWORD *)(v47 + 113);
        *(_OWORD *)(v46 + 104) = *(_OWORD *)(v47 + 104);
        *(_OWORD *)(v46 + 88) = *(_OWORD *)(v47 + 88);
        *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
        v46[129] = v47[129];
        v50 = v69[11];
        v51 = &v46[v50];
        v52 = &v47[v50];
        v53 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_OWORD *)&v46[v69[12]] = *(_OWORD *)&v47[v69[12]];
        v46[v69[13]] = v47[v69[13]];
        v46[v69[14]] = v47[v69[14]];
        v46[v69[15]] = v47[v69[15]];
        *(_OWORD *)&v46[v69[16]] = *(_OWORD *)&v47[v69[16]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(v46, 0, 1, v69);
      }
      *(_OWORD *)&a1[v6[17]] = *(_OWORD *)&a2[v6[17]];
      v54 = v6[18];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v55[8] = v56[8];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      v57 = v6[19];
      v58 = &a1[v57];
      v59 = &a2[v57];
      *(_QWORD *)v58 = *(_QWORD *)v59;
      v58[8] = v59[8];
      a1[v6[20]] = a2[v6[20]];
      a1[v6[21]] = a2[v6[21]];
      v60 = v6[22];
      v61 = &a1[v60];
      v62 = &a2[v60];
      v63 = type metadata accessor for TranscriptRequestInformation(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C40);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      swift_storeEnumTagMultiPayload(a1, v70, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_218E88(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_3001F0;
  result = type metadata accessor for EpisodeOffer(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadButtonPresenter.State()
{
  return &type metadata for DownloadButtonPresenter.State;
}

uint64_t sub_218F14(uint64_t *a1)
{
  uint64_t v1;

  return sub_215550(a1, v1);
}

uint64_t sub_218F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  char *v25;
  char *v26;
  unsigned int v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  int *v46;
  uint64_t v47;

  v1 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (char *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_release(*(_QWORD *)v6);
      break;
    case 1:
      v47 = v5;
      swift_bridgeObjectRelease();
      v46 = (int *)type metadata accessor for EpisodeOffer(0);
      v8 = &v6[v46[6]];
      swift_bridgeObjectRelease();
      v9 = (int *)type metadata accessor for ShowOffer(0);
      v10 = &v8[v9[7]];
      v11 = type metadata accessor for ArtworkModel(0);
      v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
      if (!v44(v10, 1, v11))
      {
        swift_bridgeObjectRelease();
        v12 = v10[32];
        if (v12 != 255)
          sub_3B5BC(*((_QWORD *)v10 + 2), *((_QWORD *)v10 + 3), v12);
        v13 = v10[64];
        if (v13 != 255)
          sub_3D624(*((id *)v10 + 7), v13);
        v14 = v10[80];
        if (v14 != 255)
          sub_3D624(*((id *)v10 + 9), v14);
        v15 = v10[96];
        if (v15 != 255)
          sub_3D624(*((id *)v10 + 11), v15);
        v16 = v10[112];
        if (v16 != 255)
          sub_3D624(*((id *)v10 + 13), v16);
        v17 = v10[128];
        if (v17 != 255)
          sub_3D624(*((id *)v10 + 15), v17);
        v18 = &v10[*(int *)(v11 + 44)];
        v19 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v45 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = &v8[v9[13]];
      v21 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      if (!v23(v20, 1, v21))
        (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = &v8[v9[16]];
      if (!v23(v24, 1, v21))
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      v25 = &v8[v9[17]];
      if (!v23(v25, 1, v21))
        (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
      v26 = &v6[v46[7]];
      v27 = v23(v26, 1, v21);
      v28 = *(void (**)(char *, uint64_t))(v22 + 8);
      if (!v27)
        v28(v26, v21);
      v28(&v6[v46[8]], v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release(*(_QWORD *)&v6[v46[12]]);
      v29 = &v6[v46[16]];
      if (!v44(v29, 1, v45))
      {
        swift_bridgeObjectRelease();
        v30 = v29[32];
        if (v30 != 255)
          sub_3B5BC(*((_QWORD *)v29 + 2), *((_QWORD *)v29 + 3), v30);
        v31 = v29[64];
        if (v31 != 255)
          sub_3D624(*((id *)v29 + 7), v31);
        v32 = v29[80];
        if (v32 != 255)
          sub_3D624(*((id *)v29 + 9), v32);
        v33 = v29[96];
        if (v33 != 255)
          sub_3D624(*((id *)v29 + 11), v33);
        v34 = v29[112];
        if (v34 != 255)
          sub_3D624(*((id *)v29 + 13), v34);
        v35 = v29[128];
        if (v35 != 255)
          sub_3D624(*((id *)v29 + 15), v35);
        v36 = &v29[*(int *)(v45 + 44)];
        v37 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v38 = &v6[v46[22]];
      v39 = type metadata accessor for TranscriptRequestInformation(0);
      v40 = *(_QWORD *)(v39 - 8);
      v5 = v47;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  v41 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = v41 + 8;
  swift_release(*(_QWORD *)(v0 + v41));
  return swift_deallocObject(v0, v42, v3 | 7);
}

uint64_t sub_2193A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for DownloadButtonPresenter.Data(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_215B74(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_23(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t PodcastsTabBarPresenter.view.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 16, v6, 1, 0);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  return swift_unknownObjectRelease(a1);
}

void (*PodcastsTabBarPresenter.view.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_2194DC;
}

void sub_2194DC(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t PodcastsTabBarPresenter.isLoading.setter(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a1 & 1;
  result = swift_beginAccess(v1 + 32, v13, 1, 0);
  v5 = *(unsigned __int8 *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = a1;
  if (v5 != v3)
  {
    v6 = v1 + 16;
    if ((a1 & 1) != 0)
    {
      swift_beginAccess(v6, v12, 0, 0);
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (!result)
        return result;
      v7 = result;
      v8 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(ObjectType);
    }
    else
    {
      swift_beginAccess(v6, v12, 0, 0);
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (!result)
        return result;
      v7 = result;
      v10 = *(_QWORD *)(v1 + 24);
      v11 = swift_getObjectType(result);
      (*(void (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 16))(v11);
    }
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

void (*PodcastsTabBarPresenter.isLoading.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  swift_beginAccess(v1 + 32, v3, 1, 0);
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v1 + 32);
  return sub_219674;
}

void sub_219674(uint64_t a1, char a2)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v2 = *(_QWORD **)a1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 80);
  v4 = v2[9];
  if ((a2 & 1) != 0)
  {
    PodcastsTabBarPresenter.isLoading.setter(v3);
  }
  else
  {
    v5 = *(unsigned __int8 *)(v4 + 32);
    *(_BYTE *)(v4 + 32) = v3;
    if (v3 != v5)
    {
      v6 = v2[9];
      v7 = v6 + 16;
      if ((v3 & 1) != 0)
      {
        swift_beginAccess(v6 + 16, v2 + 6, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v7);
        if (!Strong)
          goto LABEL_10;
        v9 = Strong;
        v10 = 1;
      }
      else
      {
        swift_beginAccess(v6 + 16, v2 + 3, 0, 0);
        v11 = swift_unknownObjectWeakLoadStrong(v7);
        if (!v11)
          goto LABEL_10;
        v9 = v11;
        v10 = 2;
      }
      v12 = *(_QWORD *)(v2[9] + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8 * v10))(ObjectType);
      swift_unknownObjectRelease(v9);
    }
  }
LABEL_10:
  free(v2);
}

uint64_t PodcastsTabBarPresenter.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 49, 7);
  PodcastsTabBarPresenter.init(asPartOf:)(a1);
  return v3;
}

uint64_t PodcastsTabBarPresenter.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit(v1 + 16, 0);
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 2;
  *(_WORD *)(v1 + 32) = 257;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  BaseObjectGraph.inject<A>(_:)(v14, v4, v4);
  v6 = v14[0];
  v5 = v14[1];
  ObjectType = swift_getObjectType();
  v8 = LibraryDataProviderProtocol.fetchShowCountObserver()(ObjectType, v5);
  v9 = swift_allocObject(&unk_38A468, 24, 7);
  swift_weakInit(v9 + 16);
  v10 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v11 = swift_retain();
  v12 = static OS_dispatch_queue.main.getter(v11);
  v14[3] = v10;
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = v12;
  Promise.then(perform:orCatchError:on:)(sub_219AF8, v9, sub_219FB4, v2, v14);
  swift_unknownObjectRelease(v6);
  swift_release(a1);
  swift_release(v8);
  swift_release(v9);
  swift_release(v2);
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v2;
}

uint64_t sub_2198C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2198EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_38A4E8, 32, 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v11;
  aBlock[4] = sub_21AEE8;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_12_0;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_retain();
  swift_retain();
  v17 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_E65F4();
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v20 = sub_32914((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_219AF8(uint64_t *a1)
{
  uint64_t v1;

  return sub_2198EC(a1, v1);
}

uint64_t sub_219B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 32, v16, 1, 0);
    v6 = *(_BYTE *)(v5 + 32);
    *(_BYTE *)(v5 + 32) = 0;
    if ((v6 & 1) != 0
      && (swift_beginAccess(v5 + 16, &v14, 0, 0), (v7 = swift_unknownObjectWeakLoadStrong(v5 + 16)) != 0))
    {
      v8 = v7;
      v9 = *(_QWORD *)(v5 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 16))(ObjectType);
      swift_release(v5);
      swift_unknownObjectRelease(v8);
    }
    else
    {
      swift_release(v5);
    }
  }
  swift_beginAccess(v3, v15, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v12 = result;
    v13 = swift_retain();
    sub_21AEF0(v13);
    swift_release(v12);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_219C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void **aBlock;
  _QWORD v46[4];
  uint64_t v47;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v44 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.ui.getter(v11);
  swift_errorRetain(a1);
  v14 = swift_errorRetain(a1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.fault.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v39 = a2;
    v17 = swift_slowAlloc(12, -1);
    v38 = v9;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(8, -1);
    v37 = v10;
    v20 = (_QWORD *)v19;
    v40 = v5;
    *(_DWORD *)v18 = 138412290;
    swift_errorRetain(a1);
    v21 = v4;
    v22 = _swift_stdlib_bridgeErrorToNSError(a1);
    aBlock = (void **)v22;
    v5 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v46);
    *v20 = v22;
    v4 = v21;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v15, v16, "could not fetch library show count observer, %@", v18, 0xCu);
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    swift_arrayDestroy(v20, 1, v23);
    v24 = v20;
    v10 = v37;
    swift_slowDealloc(v24, -1, -1);
    v25 = v18;
    v9 = v38;
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v26 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(&unk_38A468, 24, 7);
  swift_weakInit(v28 + 16);
  v46[3] = sub_21AE9C;
  v47 = v28;
  aBlock = _NSConcreteStackBlock;
  v46[0] = 1107296256;
  v46[1] = sub_2C9F4;
  v46[2] = &block_descriptor_24;
  v29 = _Block_copy(&aBlock);
  v30 = swift_release(v47);
  v31 = v41;
  static DispatchQoS.unspecified.getter(v30);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v32 = sub_E65F4();
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v34 = sub_32914((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720, (uint64_t)&protocol conformance descriptor for [A]);
  v35 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v33, v34, v4, v32);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v35, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v31, v43);
}

uint64_t sub_219FB4(uint64_t a1)
{
  uint64_t v1;

  return sub_219C14(a1, v1);
}

uint64_t sub_219FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    swift_beginAccess(result + 32, v10, 1, 0);
    v4 = *(_BYTE *)(v3 + 32);
    *(_BYTE *)(v3 + 32) = 0;
    if ((v4 & 1) != 0
      && (swift_beginAccess(v3 + 16, v9, 0, 0), (Strong = swift_unknownObjectWeakLoadStrong(v3 + 16)) != 0))
    {
      v6 = Strong;
      v7 = *(_QWORD *)(v3 + 24);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 16))(ObjectType);
      swift_release(v3);
      return swift_unknownObjectRelease(v6);
    }
    else
    {
      return swift_release(v3);
    }
  }
  return result;
}

Swift::Void __swiftcall PodcastsTabBarPresenter.viewDidLoad()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  _BYTE v6[24];

  swift_beginAccess(v0 + 32, v6, 0, 0);
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    swift_beginAccess(v0 + 16, &v5, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (Strong)
    {
      v2 = Strong;
      v3 = *(_QWORD *)(v0 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(ObjectType);
      swift_unknownObjectRelease(v2);
    }
  }
  else
  {
    sub_21A110();
  }
}

void sub_21A110()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  _QWORD v28[3];
  uint64_t v29;
  void *v30;
  _BYTE v31[24];

  v1 = v0;
  v2 = swift_beginAccess(v0 + 48, v31, 0, 0);
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v3 = static os_log_type_t.debug.getter(v2);
    sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
    v4 = (void *)static OS_os_log.default.getter();
    v5 = "Not switching to Browse tab. Reason: library not empty";
    v6 = v3;
    v7 = v4;
    v8 = 54;
LABEL_7:
    os_log(_:dso:log:_:_:)(v6, &dword_0, v7, v5, v8, 2, _swiftEmptyArrayStorage);

    return;
  }
  if (*(_BYTE *)(v0 + 33) != 1)
  {
    v21 = static os_log_type_t.debug.getter(v2);
    sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
    v4 = (void *)static OS_os_log.default.getter();
    v5 = "Not switching to Browse tab. Reason: not first load";
    v6 = v21;
    v7 = v4;
    v8 = 51;
    goto LABEL_7;
  }
  type metadata accessor for AccountsUtil(0);
  if ((static AccountsUtil.userAllowsPersonalization.getter() & 1) != 0)
  {
    v10 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4228);
    v12 = objc_msgSend(v10, "storefrontSupportsColdStart");
    v13 = objc_msgSend(v12, "asyncValuePromise");

    v14 = Promise<A>.init(_:)(v13);
    v15 = objc_msgSend(v10, "coldStartLandOnListenNow");
    v16 = objc_msgSend(v15, "asyncValuePromise");

    v17 = Promise<A>.init(_:)(v16);
    v18 = sub_32914(&qword_3C2420, &qword_3B4228, (uint64_t)&protocol conformance descriptor for Promise<A>);
    v19 = Promise.join<A>(with:)(v17, v11, v18);
    v20 = swift_allocObject(&unk_38A468, 24, 7);
    swift_weakInit(v20 + 16);
    v29 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
    v30 = &protocol witness table for OS_dispatch_queue;
    v28[0] = static OS_dispatch_queue.main.getter(v29);
    Promise.then(perform:orCatchError:on:)(sub_21AE94, v20, sub_21AC1C, 0, v28);

    swift_release(v14);
    swift_release(v17);
    swift_release(v19);
    swift_release(v20);
    __swift_destroy_boxed_opaque_existential_1(v28);
  }
  else
  {
    v22 = static os_log_type_t.debug.getter(v9);
    sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
    v23 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v22, &dword_0, v23, "Switching to Browse tab", 23, 2, _swiftEmptyArrayStorage);

    swift_beginAccess(v1 + 16, v28, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (Strong)
    {
      v25 = Strong;
      v26 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v26 + 16))(ObjectType, v26);
      swift_unknownObjectRelease(v25);
    }
  }
}

void sub_21A470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = v0;
    v3 = swift_allocObject(&unk_38A468, 24, 7);
    swift_weakInit(v3 + 16);
    swift_beginAccess(v1 + 16, v11, 33, 0);
    v4 = *(_QWORD *)(v1 + 40);
    v5 = *(_QWORD *)(v1 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v1 + 16, v4);
    v6 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v5 + 40);
    swift_retain();
    swift_retain();
    v6(sub_21AFBC, v3, v4, v5);
    swift_endAccess(v11);
    swift_release(v3);
    sub_150C8(v1 + 16, (uint64_t)v11);
    v7 = v12;
    v8 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 24))(&v14, v7, v8);
    __swift_destroy_boxed_opaque_existential_1(v11);
    v9 = v14;
    LOBYTE(v7) = v14 == 0;
    swift_beginAccess(v2 + 48, v11, 1, 0);
    v10 = *(unsigned __int8 *)(v2 + 48);
    *(_BYTE *)(v2 + 48) = v7;
    if (v10 == 2 || ((v10 & 1) == 0) == (v9 == 0))
      sub_21A110();
    swift_release(v1);
    *(_BYTE *)(v2 + 33) = 0;
  }
}

uint64_t sub_21A5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  aBlock[4] = sub_21AFC4;
  v22 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_16;
  v12 = _Block_copy(aBlock);
  v13 = v22;
  swift_retain();
  v14 = swift_release(v13);
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = sub_E65F4();
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v17 = sub_32914((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v3, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_21A7BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _BYTE v11[24];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 40);
    swift_retain();
    result = swift_release(v3);
    if (v4)
    {
      swift_beginAccess(v1, v16, 0, 0);
      Strong = swift_weakLoadStrong(v1);
      if (Strong)
      {
        v6 = Strong;
        swift_beginAccess(v4 + 16, v11, 0, 0);
        sub_150C8(v4 + 16, (uint64_t)v12);
        v7 = v13;
        v8 = v14;
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 24))(&v15, v7, v8);
        __swift_destroy_boxed_opaque_existential_1(v12);
        v9 = v15;
        LOBYTE(v7) = v15 == 0;
        swift_beginAccess(v6 + 48, v12, 1, 0);
        v10 = *(unsigned __int8 *)(v6 + 48);
        *(_BYTE *)(v6 + 48) = v7;
        if (v10 == 2 || ((v10 & 1) == 0) == (v9 == 0))
          sub_21A110();
        swift_release(v6);
      }
      return swift_release(v4);
    }
  }
  return result;
}

void PodcastsTabBarPresenter.isLibraryEmpty.setter(unsigned __int8 a1)
{
  uint64_t v1;
  int v3;
  int v4;
  _BYTE v5[24];

  v3 = a1;
  swift_beginAccess(v1 + 48, v5, 1, 0);
  v4 = *(unsigned __int8 *)(v1 + 48);
  *(_BYTE *)(v1 + 48) = a1;
  if (v3 == 2)
  {
    if (v4 == 2)
      return;
LABEL_6:
    sub_21A110();
    return;
  }
  if (v4 == 2 || ((((v4 & 1) == 0) ^ v3) & 1) == 0)
    goto LABEL_6;
}

uint64_t PodcastsTabBarPresenter.isLibraryEmpty.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 48);
}

void (*PodcastsTabBarPresenter.isLibraryEmpty.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess(v1 + 48, v3, 1, 0);
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 48);
  return sub_21AA10;
}

void sub_21AA10(uint64_t a1)
{
  void *v1;
  int v2;
  uint64_t v3;
  int v4;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(unsigned __int8 *)(v3 + 48);
  *(_BYTE *)(v3 + 48) = v2;
  if (v2 == 2)
  {
    if (v4 == 2)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (v4 == 2 || ((v2 ^ ((v4 & 1) == 0)) & 1) == 0)
LABEL_6:
    sub_21A110();
LABEL_7:
  free(v1);
}

void sub_21AA78(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = *(void **)(a1 + 8);
  if (objc_msgSend(*(id *)a1, "BOOLValue") && objc_msgSend(v3, "BOOLValue"))
  {
    v4 = static os_log_type_t.debug.getter();
    sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
    v15 = (id)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v4, &dword_0, v15, "Storefront supports cold start and we should not switch to browse", 65, 2, _swiftEmptyArrayStorage);

  }
  else
  {
    v5 = a2 + 16;
    v6 = static os_log_type_t.debug.getter();
    sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
    v7 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v6, &dword_0, v7, "Switching to Browse", 19, 2, _swiftEmptyArrayStorage);

    swift_beginAccess(v5, v17, 0, 0);
    Strong = swift_weakLoadStrong(v5);
    if (Strong)
    {
      v9 = Strong;
      v10 = Strong + 16;
      swift_beginAccess(Strong + 16, v16, 0, 0);
      v11 = swift_unknownObjectWeakLoadStrong(v10);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)(v9 + 24);
        swift_release(v9);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v9);
      }
    }
  }
}

void sub_21AC1C()
{
  uint64_t v0;
  id v1;

  v0 = static os_log_type_t.error.getter();
  sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
  v1 = (id)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v0, &dword_0, v1, "Error loading cold front bag keys", 33, 2, _swiftEmptyArrayStorage);

}

uint64_t PodcastsTabBarPresenter.deinit()
{
  uint64_t v0;

  sub_6FC38(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t PodcastsTabBarPresenter.__deallocating_deinit()
{
  uint64_t v0;

  sub_6FC38(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t sub_21ACE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7[24];

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess(v4, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_21AD40(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = *a2 + 16;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v4 + 24) = v3;
  return swift_unknownObjectWeakAssign(v5, v2);
}

uint64_t sub_21AD98@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 32, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_21ADDC(char *a1)
{
  return PodcastsTabBarPresenter.isLoading.setter(*a1);
}

uint64_t sub_21AE00@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 48, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 48);
  return result;
}

void sub_21AE44(unsigned __int8 *a1)
{
  PodcastsTabBarPresenter.isLibraryEmpty.setter(*a1);
}

uint64_t type metadata accessor for PodcastsTabBarPresenter()
{
  return objc_opt_self(_TtC8ShelfKit23PodcastsTabBarPresenter);
}

uint64_t method lookup function for PodcastsTabBarPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PodcastsTabBarPresenter);
}

void sub_21AE94(uint64_t a1)
{
  uint64_t v1;

  sub_21AA78(a1, v1);
}

uint64_t sub_21AE9C()
{
  uint64_t v0;

  return sub_219FBC(v0);
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_21AEBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_21AEE8()
{
  uint64_t v0;

  return sub_219B00(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_21AEF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE v9[24];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 40);
  if (v4)
  {
    swift_beginAccess(v4 + 16, v9, 33, 0);
    v5 = *(_QWORD *)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v4 + 16, v5);
    v7 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v6 + 40);
    swift_retain();
    v7(0, 0, v5, v6);
    swift_endAccess(v9);
    swift_release(v4);
    v8 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v2 + 40) = a1;
  swift_retain();
  swift_release(v8);
  sub_21A470();
}

uint64_t sub_21AFBC(uint64_t a1)
{
  uint64_t v1;

  return sub_21A5D8(a1, v1);
}

uint64_t sub_21AFC4()
{
  uint64_t v0;

  return sub_21A7BC(v0);
}

uint64_t Episode.init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,char a37,uint64_t a38,uint64_t a39,char a40,char a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  uint64_t v50;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;

  v52 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_title);
  *v52 = a1;
  v52[1] = a2;
  v53 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle);
  *v53 = a3;
  v53[1] = a4;
  *(_QWORD *)(v50 + 16) = a12;
  *(_BYTE *)(v50 + 24) = a13 & 1;
  *(_QWORD *)(v50 + 32) = a14;
  *(_BYTE *)(v50 + 40) = a15 & 1;
  *(_QWORD *)(v50 + 48) = a16;
  *(_QWORD *)(v50 + 56) = a17;
  sub_15BD4(a18, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_artwork, &qword_3BEB70);
  sub_15BD4(a19, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_showUberArtwork, &qword_3BEB70);
  sub_15BD4(a20, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeArtwork, &qword_3BEB70);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_summary) = a23;
  v54 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_author);
  *v54 = a21;
  v54[1] = a22;
  sub_15BD4(a24, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, &qword_3B3D88);
  sub_15BD4(a25, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_streamUrl, &qword_3B4370);
  sub_15BD4(a26, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_assetUrl, &qword_3B4370);
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_mediaType) = a27;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_isExplicit) = a28;
  v55 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_guid);
  *v55 = a29;
  v55[1] = a30;
  v56 = v50 + OBJC_IVAR____TtC8ShelfKit7Episode_duration;
  *(_QWORD *)v56 = a31;
  *(_BYTE *)(v56 + 8) = a32 & 1;
  v57 = v50 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber;
  *(_QWORD *)v57 = a33;
  *(_BYTE *)(v57 + 8) = a34 & 1;
  v58 = v50 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber;
  *(_QWORD *)v58 = a35;
  *(_BYTE *)(v58 + 8) = a36 & 1;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeType) = a37;
  v59 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_showTitle);
  *v59 = a38;
  v59[1] = a39;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_showDisplayType) = a40;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial) = a41;
  v60 = v50 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeSetting;
  *(_QWORD *)v60 = a42;
  *(_BYTE *)(v60 + 8) = a43 & 1;
  *(_QWORD *)(v50 + 64) = a5;
  *(_QWORD *)(v50 + 72) = a6;
  *(_QWORD *)(v50 + 80) = a7;
  *(_QWORD *)(v50 + 88) = a8;
  *(_QWORD *)(v50 + 96) = a10;
  *(_BYTE *)(v50 + 104) = a11 & 1;
  sub_15BD4(a44, v50 + OBJC_IVAR____TtC8ShelfKit7Episode_listenNowReason, &qword_3B81E8);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState) = a45;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_hasFreeVersion) = a46;
  v61 = (_QWORD *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName);
  *v61 = a47;
  v61[1] = a48;
  v62 = v50 + OBJC_IVAR____TtC8ShelfKit7Episode_storeTrackId;
  *(_QWORD *)v62 = a49;
  *(_BYTE *)(v62 + 8) = a50 & 1;
  *(double *)(v50 + OBJC_IVAR____TtC8ShelfKit7Episode_upNextScore) = a9;
  return v50;
}

uint64_t sub_21B3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  unsigned __int8 v16;
  char v17[40];
  _QWORD v18[9];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C0FC(1, a1, a2, 0, 0);
  v8 = v7;
  sub_267BC(a1, (uint64_t)v6, &qword_3B0CC8);
  v9 = type metadata accessor for EpisodeListSettings(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9);
  if ((_DWORD)v11 == 1)
  {
    sub_1459C((uint64_t)v6, &qword_3B0CC8);
LABEL_4:
    v12 = 1;
    goto LABEL_5;
  }
  EpisodeListSettings.listType.getter(v18, v11);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  EpisodeListType.desiredClickActionType.getter(v17);
  sub_F3548((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
  v12 = v17[0];
  if (v17[0] == 4)
    goto LABEL_4;
LABEL_5:
  sub_107EEC(v12);
  v16 = 2;
  v13 = sub_108198((uint64_t)v17, &v16);
  sub_1459C((uint64_t)v17, &qword_3B0C50);
  swift_release(v8);
  return v13;
}

uint64_t Episode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_artwork, &qword_3BEB70);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_showUberArtwork, &qword_3BEB70);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeArtwork, &qword_3BEB70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, &qword_3B3D88);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_streamUrl, &qword_3B4370);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_assetUrl, &qword_3B4370);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_listenNowReason, &qword_3B81E8);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21B6A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v78 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B81E8);
  __chkstk_darwin(v2);
  v4 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v5);
  v7 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = v7;
  __chkstk_darwin(v8);
  v10 = &v45[-v9];
  v62 = &v45[-v9];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3D88);
  __chkstk_darwin(v11);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v14);
  v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = v16;
  __chkstk_darwin(v17);
  v19 = &v45[-v18];
  v68 = &v45[-v18];
  __chkstk_darwin(v20);
  v69 = &v45[-v21];
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_title);
  v85 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_title + 8);
  v86 = v22;
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle);
  v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle + 8);
  v84 = v23;
  v24 = *(_QWORD *)(v1 + 64);
  v81 = *(_QWORD *)(v1 + 72);
  v82 = v24;
  v25 = *(_QWORD *)(v1 + 80);
  v79 = *(_QWORD *)(v1 + 88);
  v80 = v25;
  v77 = *(_QWORD *)(v1 + 96);
  v76 = *(unsigned __int8 *)(v1 + 104);
  v75 = *(_QWORD *)(v1 + 16);
  v74 = *(unsigned __int8 *)(v1 + 24);
  v73 = *(_QWORD *)(v1 + 32);
  v72 = *(unsigned __int8 *)(v1 + 40);
  v26 = *(_QWORD *)(v1 + 48);
  v70 = *(_QWORD *)(v1 + 56);
  v71 = v26;
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_artwork, (uint64_t)&v45[-v21], &qword_3BEB70);
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showUberArtwork, (uint64_t)v19, &qword_3BEB70);
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeArtwork, (uint64_t)v16, &qword_3BEB70);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_author + 8);
  v66 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_author);
  v65 = v27;
  v64 = *(void **)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_summary);
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, (uint64_t)v13, &qword_3B3D88);
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_streamUrl, (uint64_t)v10, &qword_3B4370);
  sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_assetUrl, (uint64_t)v7, &qword_3B4370);
  v60 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_mediaType);
  v59 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_isExplicit);
  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_guid + 8);
  v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_guid);
  v54 = v28;
  v57 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_duration);
  v56 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_duration + 8);
  v55 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber);
  v53 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber + 8);
  v51 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber);
  v50 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber + 8);
  v49 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeType);
  v48 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showDisplayType);
  v46 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showTitle + 8);
  v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showTitle);
  v52 = v29;
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeSetting);
  LOBYTE(v10) = *(_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeSetting + 8);
  sub_267BC(v78, (uint64_t)v4, &qword_3B81E8);
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState);
  LOBYTE(v19) = *(_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_hasFreeVersion);
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName);
  v78 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName + 8);
  v32 = v78;
  v34 = v1 + OBJC_IVAR____TtC8ShelfKit7Episode_storeTrackId;
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_storeTrackId);
  v36 = *(_BYTE *)(v34 + 8);
  v37 = type metadata accessor for Episode(0);
  v38 = swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  v44 = v32;
  v43 = v29;
  v39 = v64;
  v40 = v38;
  Episode.init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(v86, v85, v84, v83, v82, v81, v80, v79, 0.0, v77, v76, v75, v74, v73, v72, v71, v70, (uint64_t)v69, (uint64_t)v68,
    (uint64_t)v67,
    v66,
    v65,
    (uint64_t)v64,
    (uint64_t)v63,
    (uint64_t)v62,
    (uint64_t)v61,
    v60,
    v59,
    v58,
    v54,
    v57,
    v56,
    v55,
    v53,
    v51,
    v50,
    v49,
    v47,
    v43,
    v48,
    v46,
    v30,
    (char)v10,
    (uint64_t)v4,
    v31,
    (char)v19,
    v33,
    v44,
    v35,
    v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v40;
}

uint64_t sub_21BD04()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState) == 2)
    return *(_QWORD *)(v0 + 32);
  else
    return 0;
}

uint64_t sub_21BD30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F3548(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_898F4);
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(a1, 17, 3, 0, 0, 0);
  v8 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v9 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)v2 + 376))(v7, a2);
  sub_1459C((uint64_t)v7, &qword_3B0CC8);
  return v9;
}

uint64_t sub_21BE1C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[15];
  unsigned __int8 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BD250);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = type metadata accessor for SectionContext(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_21C0FC(1, (uint64_t)v5, (uint64_t)v2, 0, 0);
  v9 = v8;
  sub_1459C((uint64_t)v2, &qword_3BD250);
  sub_1459C((uint64_t)v5, &qword_3B0CC8);
  v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_presentDetailsAction);
  if (v10)
  {
    *((_QWORD *)&v16 + 1) = type metadata accessor for Action(0);
    v17 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v15 = v10;
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  v14 = 2;
  swift_retain();
  v11 = sub_108198((uint64_t)&v15, &v14);
  sub_1459C((uint64_t)&v15, &qword_3B0C50);
  swift_release(v9);
  return v11;
}

uint64_t sub_21BFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char Attributed;
  _QWORD v16[2];

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_summary))
  {
    v16[0] = LanguageAwareString.string.getter(v3);
    v16[1] = v6;
    static CharacterSet.newlines.getter(v16[0], v6);
    v7 = sub_65CC4();
    v8 = StringProtocol.components(separatedBy:)(v5, &type metadata for String, v7);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    swift_bridgeObjectRelease();
    v16[0] = v8;
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
    v10 = sub_707E4();
    v11 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  type metadata accessor for LanguageAwareString(0);
  Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter();
  return LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:)(v11, v13, 0, Attributed & 1);
}

void sub_21C0FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[72];
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  int v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[45];
  _BYTE v87[72];
  _QWORD v88[2];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  char v92;

  v84 = a5;
  v85 = a2;
  v74 = a4;
  v62 = a3;
  v53 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B24F8);
  __chkstk_darwin(v6);
  v56 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3D88);
  __chkstk_darwin(v8);
  v55 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v10);
  v65 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v12);
  v66 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v64 = &v49[-v15];
  __chkstk_darwin(v16);
  v63 = &v49[-v17];
  v83 = type metadata accessor for ImpressionMetrics(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v80 = &v49[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B81E8);
  __chkstk_darwin(v19);
  v54 = &v49[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v67 = &v49[-v22];
  v50 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v50);
  v51 = &v49[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = type metadata accessor for UUID(0);
  v61 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v59 = &v49[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = type metadata accessor for ActionMetrics(0);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = &v49[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v68 = &v49[-v27];
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v28);
  v82 = &v49[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = type metadata accessor for EyebrowBuilder.Style(0);
  v72 = *(_QWORD *)(v30 - 8);
  v73 = v30;
  __chkstk_darwin(v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B24D8);
  __chkstk_darwin(v31);
  v32 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v78 = *(_QWORD *)(v32 - 8);
  v79 = v32;
  __chkstk_darwin(v32);
  __chkstk_darwin(v33);
  v77 = &v49[-v34];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  __chkstk_darwin(v35);
  v69 = &v49[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v37);
  v39 = &v49[-v38];
  v40 = type metadata accessor for EpisodeListSettings(0);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v52 = &v49[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v43);
  v45 = &v49[-v44];
  sub_267BC(v85, (uint64_t)v39, &qword_3B0CC8);
  v46 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
  v75 = v41;
  v76 = v40;
  v70 = v5;
  if (v46 == 1)
  {
    v47 = *(_QWORD *)(v5 + 88);
    v88[0] = *(_QWORD *)(v5 + 80);
    v88[1] = v47;
    v89 = 0u;
    v90 = 0u;
    v91 = 0u;
    v92 = 2;
    swift_bridgeObjectRetain();
    EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(v88, 17, 3, 0, 0, 0);
    v48 = sub_1459C((uint64_t)v39, &qword_3B0CC8);
  }
  else
  {
    v48 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 32))(v45, v39, v40);
  }
  EpisodeListSettings.listType.getter(v86, v48);
  sub_1A0A14((uint64_t)v86, (uint64_t)v87);
  __asm { BR              X12 }
}

uint64_t sub_21C67C()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int32 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  int8x16_t *v125;
  void *v126;
  id v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  int8x16_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int32 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v178;
  uint64_t v179;
  BOOL v180;
  __int16 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  Swift::String v185;

  sub_267BC(v0[16].i64[0], v5, &qword_3BD250);
  v0[27].i64[1] = v1;
  v8 = v0[24].i64[0];
  v7 = v0[24].i64[1];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v5, enum case for EyebrowBuilder.ListContext.show(_:), v7);
  sub_F3548((uint64_t)v0[31].i64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
  v4[21] = type metadata accessor for Episode(0);
  v4[22] = sub_F1C0(&qword_3C2638, (void (*)(uint64_t))type metadata accessor for Episode, (uint64_t)&protocol conformance descriptor for Episode);
  v9 = v0[20].i64[0];
  v4[18] = v9;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v0[8].i64[0] = (uint64_t)v10;
  v10(v3, v5, v7);
  v11 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[21].i64[0] + 104))(v6, enum case for EyebrowBuilder.Style.default(_:), v0[21].i64[1]);
  v12 = type metadata accessor for EyebrowBuilder(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = v0[27].i64[0];
  swift_bridgeObjectRetain();
  swift_retain();
  v0[16].i64[0] = EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(&v0[49], v3, v6, 1, v0[22].i64[0], v13, v2, 1, 0);
  v0[11].i64[0] = ((uint64_t (*)(void))EyebrowBuilder.caption.getter)();
  v0[15].i64[0] = v14;
  v16 = *(_QWORD *)(v9 + 64);
  v15 = *(_QWORD *)(v9 + 72);
  v17 = *(_QWORD *)(v9 + 16);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + 24);
  v18 = type metadata accessor for LibraryEpisodeOfferAction(0);
  v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v20 = (uint64_t *)(v19 + OBJC_IVAR____TtC8ShelfKit25LibraryEpisodeOfferAction_episodeUuid);
  v0[22].i64[0] = v16;
  *v20 = v16;
  v20[1] = v15;
  v0[27].i64[0] = v15;
  swift_bridgeObjectRetain();
  v21 = swift_retain();
  v0[15].i64[1] = v17;
  v0[21].i32[2] = v9;
  if ((v9 & 1) != 0 || v17 == static AdamID.empty.getter(v21))
  {
    v22 = 0;
    v23 = 1;
  }
  else
  {
    v23 = 0;
    v22 = v17;
  }
  v24 = v19 + OBJC_IVAR____TtC8ShelfKit25LibraryEpisodeOfferAction_contentId;
  *(_QWORD *)v24 = v22;
  *(_BYTE *)(v24 + 8) = v23;
  swift_release(v19);
  v25 = v0[26].i64[0];
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[25].i64[1] + 56);
  v27 = 1;
  v28 = v0[26].i64[1];
  v0[21].i64[0] = (uint64_t)v26;
  v29 = v26(v25, 1, 1, v28);
  v30 = v0[19].i64[0];
  v31 = static ActionMetrics.notInstrumented.getter(v29);
  v32 = v0[13].i64[1];
  UUID.init()(v31);
  v33 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v35 = v34;
  v36 = *(void (**)(uint64_t, uint64_t))(v0[14].i64[1] + 8);
  v37 = v0[20].i64[1];
  v0[12].i64[0] = (uint64_t)v36;
  v36(v32, v37);
  *(_QWORD *)(v19 + 16) = v33;
  *(_QWORD *)(v19 + 24) = v35;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 40) = 0;
  *(_BYTE *)(v19 + 48) = 32;
  v38 = v19 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[13].i64[0] + 32);
  v40 = v0[14].i64[0];
  v0[11].i64[1] = (uint64_t)v39;
  v39(v38, v30, v40);
  sub_15BD4(v25, v19 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  v41 = v0[20].i64[0];
  v42 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState);
  v0[14].i64[1] = v42;
  if (v42 == 2)
  {
    v43 = *(_QWORD *)(v41 + 32);
    v27 = *(_BYTE *)(v41 + 40);
  }
  else
  {
    v43 = 0;
  }
  v44 = v0[22].i64[1];
  v45 = v0[23].i64[0];
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  v47 = v0[19].i64[1];
  v48 = v0[27].i64[1];
  v0[6].i64[1] = (uint64_t)v46;
  v46(v47, v48, v45);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v47, 0, 1, v45);
  v49 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain();
  swift_retain();
  v50 = objc_msgSend(v49, "mainBundle");
  v185._object = (void *)0x8000000000313D70;
  v51._countAndFlagsBits = 2036427856;
  v51._object = (void *)0xE400000000000000;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  v185._countAndFlagsBits = 0xD000000000000019;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v185);
  v0[5].i64[1] = (uint64_t)v53._object;
  v0[6].i64[0] = v53._countAndFlagsBits;

  v56 = static MetricsTargetType.button.getter(v54, v55);
  v58 = v0[15].i64[1];
  v59 = v0[21].i32[2];
  v0[8].i64[1] = v19;
  v60 = v0[12].i64[1];
  if ((v59 & 1) != 0)
    static ActionMetrics.notInstrumented.getter(v56);
  else
    static ActionMetrics.play(adamID:targetType:fields:)(v58, v56, v57, &_swiftEmptyDictionarySingleton);
  swift_bridgeObjectRelease();
  v61 = type metadata accessor for LibraryPlayAction(0);
  v62 = *(unsigned int *)(v61 + 48);
  v63 = *(unsigned __int16 *)(v61 + 52);
  v0[7].i64[0] = v61;
  v64 = swift_allocObject(v61, v62, v63);
  *(_BYTE *)(v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_sharedContent) = 0;
  v65 = (_QWORD *)(v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_episodeUuid);
  v66 = v0[27].i64[0];
  *v65 = v0[22].i64[0];
  v65[1] = v66;
  v67 = v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_episodeAdamId;
  *(_QWORD *)v67 = v58;
  *(_BYTE *)(v67 + 8) = v0[21].i32[2];
  v68 = v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_channelAdamId;
  *(_QWORD *)v68 = v43;
  *(_BYTE *)(v68 + 8) = v27;
  sub_267BC(v0[19].i64[1], v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_settings, &qword_3B0CC8);
  *(_BYTE *)(v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_showPlayerIfPlaying) = 2;
  *(_BYTE *)(v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_forcePlay) = 2;
  v69 = v64 + OBJC_IVAR____TtC8ShelfKit17LibraryPlayAction_timestamp;
  *(_QWORD *)v69 = 0;
  *(_BYTE *)(v69 + 8) = 1;
  v70 = v0[13].i64[0];
  v71 = v0[19].i64[0];
  v72 = v0[14].i64[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v71, v60, v72);
  v73 = v0[26].i64[0];
  v74 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[21].i64[0])(v73, 1, 1, v0[26].i64[1]);
  v75 = v0[13].i64[1];
  UUID.init()(v74);
  v76 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v78 = v77;
  ((void (*)(uint64_t, uint64_t))v0[12].i64[0])(v75, v0[20].i64[1]);
  *(_QWORD *)(v64 + 16) = v76;
  *(_QWORD *)(v64 + 24) = v78;
  v79 = v0[5].i64[1];
  *(_QWORD *)(v64 + 32) = v0[6].i64[0];
  *(_QWORD *)(v64 + 40) = v79;
  *(_BYTE *)(v64 + 48) = 32;
  ((void (*)(uint64_t, uint64_t, uint64_t))v0[11].i64[1])(v64 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v71, v72);
  sub_15BD4(v73, v64 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v0[12].i64[1], v72);
  sub_1459C(v0[19].i64[1], &qword_3B0CC8);
  v0[13].i64[0] = v64;
  swift_retain();
  v80 = v0[20].i64[0];
  v81 = sub_21D7D0();
  swift_retain_n(v81, 4);
  v82 = v0[27].i64[0];
  v83 = swift_bridgeObjectRetain();
  v84 = EpisodeListSettings.listType.getter(&v0[35].i64[1], v83);
  v85 = ((uint64_t (*)(_QWORD *))EpisodeListType.stationUUID.getter)(v84);
  v87 = v86;
  sub_F3548((uint64_t)&v0[35].i64[1], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
  v88 = type metadata accessor for LibraryEpisodeContextAction(0);
  v89 = swift_allocObject(v88, *(unsigned int *)(v88 + 48), *(unsigned __int16 *)(v88 + 52));
  v90 = (_QWORD *)(v89 + OBJC_IVAR____TtC8ShelfKit27LibraryEpisodeContextAction_episodeUuid);
  *v90 = v0[22].i64[0];
  v90[1] = v82;
  v91 = (uint64_t *)(v89 + OBJC_IVAR____TtC8ShelfKit27LibraryEpisodeContextAction_stationUuid);
  *v91 = v85;
  v91[1] = v87;
  v92 = v0[26].i64[0];
  v93 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[21].i64[0])(v92, 1, 1, v0[26].i64[1]);
  v94 = static ActionMetrics.notInstrumented.getter(v93);
  UUID.init()(v94);
  v95 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v97 = v96;
  ((void (*)(uint64_t, uint64_t))v0[12].i64[0])(v75, v0[20].i64[1]);
  *(_QWORD *)(v89 + 16) = v95;
  *(_QWORD *)(v89 + 24) = v97;
  *(_QWORD *)(v89 + 32) = 0;
  *(_QWORD *)(v89 + 40) = 0;
  *(_BYTE *)(v89 + 48) = 32;
  ((void (*)(uint64_t, uint64_t, uint64_t))v0[11].i64[1])(v89 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v71, v72);
  v98 = OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics;
  v0[14].i64[0] = v89;
  sub_15BD4(v92, v89 + v98, (uint64_t *)&unk_3B8790);
  v99 = v0[15].i64[0];
  if (v99)
  {
    v0[49].i64[0] = v0[11].i64[0];
    v0[49].i64[1] = v99;
    v100 = sub_65CC4();
    swift_retain();
    v101 = v81;
    v102 = ((uint64_t (*)(void *, unint64_t))StringProtocol.localizedUppercase.getter)(&type metadata for String, v100);
    v104 = v103;
    swift_bridgeObjectRetain();
    v105 = sub_10644(0, 1, 1, _swiftEmptyArrayStorage);
    v107 = v105[2];
    v106 = v105[3];
    v108 = v0[7].i64[1];
    if (v107 >= v106 >> 1)
      v105 = sub_10644((_QWORD *)(v106 > 1), v107 + 1, 1, v105);
    v105[2] = v107 + 1;
    v109 = &v105[2 * v107];
    v109[4] = v102;
    v109[5] = v104;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    v105 = _swiftEmptyArrayStorage;
    v108 = v0[7].i64[1];
    v101 = v81;
  }
  v110 = (uint64_t *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_author);
  v111 = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_author + 8);
  v112 = v0[27].i64[1];
  v0[12].i64[1] = v101;
  if (v111)
  {
    v113 = *v110;
    swift_bridgeObjectRetain_n(v111, 3);
    if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
      v105 = sub_10644(0, v105[2] + 1, 1, v105);
    v115 = v105[2];
    v114 = v105[3];
    if (v115 >= v114 >> 1)
      v105 = sub_10644((_QWORD *)(v114 > 1), v115 + 1, 1, v105);
    v105[2] = v115 + 1;
    v116 = &v105[2 * v115];
    v116[4] = v113;
    v116[5] = v111;
    swift_bridgeObjectRelease();
    v117 = *(_QWORD *)(v80 + 88);
    v118 = v0[4].i64[1];
    v119 = (_QWORD *)v0[5].i64[0];
    *v119 = *(_QWORD *)(v80 + 80);
    v119[1] = v117;
    swift_storeEnumTagMultiPayload(v119, v118, 17);
    v0[49].i8[0] = 0;
    v0[44].i8[8] = 0;
    v120 = swift_bridgeObjectRetain();
    v121 = v0[19].i64[0];
    static ActionMetrics.notInstrumented.getter(v120);
    v122 = type metadata accessor for FlowAction(0);
    swift_allocObject(v122, *(unsigned int *)(v122 + 48), *(unsigned __int16 *)(v122 + 52));
    v0[12].i64[0] = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v119, 0, 0, v113, v111, v0[49].i8, 0, 48, &v0[44].i8[8], v121);
    v112 = v0[27].i64[1];
  }
  else
  {
    v0[12].i64[0] = 0;
  }
  v123 = *(void **)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_summary);
  v124 = v123;
  v125 = v0 + 40;
  if ((v0[9].i32[0] & 1) != 0)
  {
    v126 = v124;
    v124 = (id)sub_21BFD0();
    if (v124)
    {
      v127 = v124;

      v123 = v127;
    }
  }
  v128 = ((uint64_t (*)(id))EyebrowBuilder.showsEpisodeNumber.getter)(v124);
  v129 = v0[23].i64[0];
  v130 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[6].i64[1])(v108, v112, v129);
  v0[19].i64[1] = (uint64_t)v105;
  v0[13].i64[1] = (uint64_t)v123;
  if ((v128 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[22].i64[1] + 8))(v108, v129);
    v131 = 0;
    v132 = (_QWORD *)v0[18].i64[1];
  }
  else
  {
    EpisodeListSettings.listType.getter((int8x16_t *)v0[40].i64, v130);
    v133 = v125->i64[0];
    v134 = v0[40].i64[1];
    v0[11].i64[1] = v133;
    v135 = v0[41].i64[0];
    v0[20].i64[1] = v0[41].i64[1];
    v137 = v0[42].i64[0];
    v136 = v0[42].i64[1];
    v138 = v0[43].i64[0];
    v0[19].i64[0] = v0[43].i64[1];
    v139 = v129;
    v140 = v0[44].u8[0];
    (*(void (**)(uint64_t, uint64_t))(v0[22].i64[1] + 8))(v108, v139);
    if (*(_BYTE *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial) == 1)
    {
      sub_F3548((uint64_t)v0[40].i64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
      v131 = 1;
    }
    else
    {
      v131 = 0;
      if ((v140 - 1) >= 6 && v140 != 8)
      {
        v131 = 1;
        if (v140 == 9)
        {
          v178 = v0[11].i64[1];
          v179 = v137 | v136 | v138;
          if (!(v135 | v134 | v178 | v0[20].i64[1] | v179 | v0[19].i64[0])
            || ((v178 & 0xFFFFFFFFFFFFFFFELL) != 4 ? (v180 = (v178 & 0xFFFFFFFFFFFFFFFDLL) == 1) : (v180 = 1),
                v180 && !(v135 | v134 | v0[20].i64[1] | v179 | v0[19].i64[0])))
          {
            v131 = 0;
          }
        }
      }
      sub_F3548((uint64_t)v0[40].i64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
    }
    v132 = (_QWORD *)v0[18].i64[1];
    v125 = v0 + 40;
    v105 = (_QWORD *)v0[19].i64[1];
  }
  v141 = sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_listenNowReason, (uint64_t)v132, &qword_3B81E8);
  EpisodeListSettings.listType.getter(&v0[44].i64[1], v141);
  v142 = sub_1A0A14((uint64_t)&v0[44].i64[1], (uint64_t)v0[49].i64);
  if (v0[53].i8[0] == 9
    && v125[9].i64[0] == 2
    && (v143 = vorrq_s8(v125[11], v125[12]),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v143.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v143, v143, 8uLL)) | v125[10].i64[1] | v125[10].i64[0] | v125[9].i64[1])))
  {
    if (os_feature_enabled_prototype_up_next(v142))
    {
      sub_1459C((uint64_t)v132, &qword_3B81E8);
      *v132 = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_upNextScore);
      v144 = enum case for EpisodeListenNowReason.prototypedUpNextScore(_:);
      v145 = type metadata accessor for EpisodeListenNowReason(0);
      v146 = *(_QWORD *)(v145 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v146 + 104))(v132, v144, v145);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v132, 0, 1, v145);
    }
  }
  else
  {
    sub_F3548((uint64_t)&v0[44].i64[1], (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
  }
  v147 = &OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle;
  if (!v131)
    v147 = &OBJC_IVAR____TtC8ShelfKit7Episode_title;
  v148 = (uint64_t *)(v80 + *v147);
  v150 = *v148;
  v149 = v148[1];
  swift_bridgeObjectRetain();
  v0[9].i64[0] = v150;
  v0[11].i64[1] = v149;
  sub_21DBDC(v150, v149, v151);
  v0[19].i64[0] = *(_QWORD *)(v80 + 80);
  v0[20].i64[1] = *(_QWORD *)(v80 + 88);
  if ((*(_BYTE *)(v80 + 104) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v152 = swift_bridgeObjectRetain();
    v0[7].i64[1] = static AdamID.empty.getter(v152);
  }
  else
  {
    v0[7].i64[1] = *(_QWORD *)(v80 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (v0[14].i64[1] == 2)
  {
    v0[6].i64[1] = *(_QWORD *)(v80 + 32);
    v153 = *(unsigned __int8 *)(v80 + 40);
  }
  else
  {
    v0[6].i64[1] = 0;
    v153 = 1;
  }
  v0[6].i32[0] = v153;
  v0[5].i32[2] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeType);
  v154 = v80 + OBJC_IVAR____TtC8ShelfKit7Episode_duration;
  v0[5].i64[0] = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_duration);
  v0[4].i32[2] = *(unsigned __int8 *)(v154 + 8);
  v155 = v80 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber;
  v0[4].i64[0] = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber);
  v0[3].i32[3] = *(unsigned __int8 *)(v155 + 8);
  v156 = v80 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber;
  v0[3].i64[0] = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber);
  v157 = *(unsigned __int8 *)(v156 + 8);
  v0[2].i32[2] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_mediaType);
  v0[2].i32[3] = v157;
  sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_artwork, v0[16].i64[1], &qword_3BEB70);
  sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showUberArtwork, v0[17].i64[0], &qword_3BEB70);
  sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeArtwork, v0[18].i64[0], &qword_3BEB70);
  if (!v105[2])
  {
    swift_bridgeObjectRelease();
    v0[19].i64[1] = 0;
  }
  v0[30].i64[0] = v0[7].i64[0];
  v0[30].i64[1] = sub_F1C0(&qword_3C2640, (void (*)(uint64_t))type metadata accessor for LibraryPlayAction, (uint64_t)&protocol conformance descriptor for Action);
  v158 = v0[13].i64[0];
  v0[28].i64[1] = v158;
  v0[7].i32[0] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_isExplicit);
  v0[2].i32[1] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial);
  sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_assetUrl, v0[17].i64[1], &qword_3B4370);
  v159 = v0[10].i64[0];
  sub_267BC(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, v159, &qword_3B3D88);
  v0[2].i32[0] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_hasFreeVersion);
  v160 = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName);
  v161 = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName + 8);
  v162 = *(_QWORD *)(v80 + 48);
  v163 = *(_QWORD *)(v80 + 56);
  if (!v163)
    v162 = 0;
  v0[1].i64[0] = v162;
  v0[1].i64[1] = v160;
  if (v163)
    v164 = v163;
  else
    v164 = 0xE000000000000000;
  v165 = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showTitle + 8);
  v0->i64[0] = *(_QWORD *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showTitle);
  v0->i64[1] = v164;
  v0[20].i32[0] = *(unsigned __int8 *)(v80 + OBJC_IVAR____TtC8ShelfKit7Episode_showDisplayType);
  v166 = v0[9].i64[1];
  sub_267BC((uint64_t)v132, v166, &qword_3B81E8);
  v167 = v0[10].i64[1];
  v168 = v0[24].i64[1];
  ((void (*)(uint64_t, uint64_t, uint64_t))v0[8].i64[0])(v167, v0[23].i64[1], v168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0[24].i64[0] + 56))(v167, 0, 1, v168);
  v169 = v0[26].i64[0];
  v170 = v0[26].i64[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[25].i64[1] + 16))(v169, v0[25].i64[0], v170);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[21].i64[0])(v169, 0, 1, v170);
  v0[28].i8[7] = 0;
  v171 = type metadata accessor for LibraryEpisodeLockup(0);
  v0[21].i64[0] = swift_allocObject(v171, *(unsigned int *)(v171 + 48), *(unsigned __int16 *)(v171 + 52));
  swift_retain_n(v158, 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v172 = v0[14].i64[0];
  swift_retain();
  v0[28].i8[4] = 1;
  v184 = v169;
  v183 = v166;
  v182 = v159;
  v181 = v0[2].i32[1];
  v173 = (void *)v0[13].i64[1];
  v174 = v0[12].i64[1];
  v175 = v0[8].i64[1];
  v176 = sub_109128(v0[22].i64[0], v0[27].i64[0], v0[19].i64[0], v0[20].i64[1], v0[7].i64[1], v0[6].i64[1], v0[6].i32[0], (_QWORD *)v0[15].i64[1], v0[21].i32[2], v0[5].i32[2], v0[5].i64[0], v0[4].i32[2], v0[4].i64[0], v0[3].i32[3], v0[3].i64[0], v0[2].i32[3], v0[2].i32[2], v0[16].i64[1], v0[17].i64[0],
           v0[18].i64[0],
           v0[9].i64[0],
           v0[11].i64[1],
           v0[19].i64[1],
           0,
           0,
           0x100000000uLL,
           v175,
           (uint64_t)&v0[28].i64[1],
           v174,
           v174,
           v158,
           v172,
           v174,
           v174,
           v0[12].i64[0],
           v0[11].i64[0],
           v0[15].i64[0],
           v173,
           v0[7].i32[0],
           v181,
           HIBYTE(v181),
           &v0[28].u8[7],
           v0[17].i64[1],
           v182,
           v0[14].i64[1],
           v0[2].i32[0],
           v0[1].i64[1],
           v161,
           v0[1].i64[0],
           v0->i64[1],
           v0->i64[0],
           v165,
           v0[20].i32[0],
           v183,
           v167,
           0,
           1,
           0,
           1,
           v184);
  swift_release_n(v158, 2);
  swift_release(v172);
  swift_release(v0[16].i64[0]);
  swift_release(v175);
  swift_release_n(v174, 5);

  (*(void (**)(uint64_t, uint64_t))(v0[25].i64[1] + 8))(v0[25].i64[0], v170);
  sub_1459C(v0[18].i64[1], &qword_3B81E8);
  (*(void (**)(uint64_t, uint64_t))(v0[24].i64[0] + 8))(v0[23].i64[1], v0[24].i64[1]);
  (*(void (**)(uint64_t, uint64_t))(v0[22].i64[1] + 8))(v0[27].i64[1], v0[23].i64[0]);
  return v176;
}

uint64_t sub_21D7D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  Swift::String v57;

  v52 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v52);
  v2 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v3);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsData.Configuration(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v53 = *(_QWORD *)(v11 - 8);
  v54 = v11;
  __chkstk_darwin(v11);
  v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - v15;
  v17 = *(_BYTE *)(v0 + 24);
  v47 = v0;
  if ((v17 & 1) != 0)
  {
    v18 = static MetricsTargetID.rssEpisode.getter(v14);
  }
  else
  {
    v55 = *(_QWORD *)(v0 + 16);
    v20 = sub_144B4();
    v18 = BinaryInteger.description.getter(&type metadata for UInt64, v20);
  }
  v46 = v18;
  v21 = v19;
  v45 = static MetricsTargetType.lockup.getter(v18, v19);
  v23 = v22;
  v24 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0930);
  v26 = type metadata accessor for MetricsData(0);
  v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) | 7);
  *(_OWORD *)(v27 + 16) = xmmword_2EA0D0;
  v28 = static MetricsActionType.navigate.getter();
  v30 = v29;
  static MetricsData.Configuration.podcasts.getter(v28);
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v46, v21, v45, v23, v28, v30, 0, 0, 0, 0, v10, &_swiftEmptyDictionarySingleton, v7);
  swift_bridgeObjectRelease();
  v31 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v7, v49);
  v32 = v50;
  ScalarDictionary.init()(v31);
  ActionMetrics.init(data:custom:)(v27, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v10, &qword_3B4370);
  v33 = *(_QWORD *)(v47 + 72);
  *(_QWORD *)v2 = *(_QWORD *)(v47 + 64);
  *((_QWORD *)v2 + 1) = v33;
  *((_QWORD *)v2 + 3) = 0;
  *((_QWORD *)v2 + 4) = 0;
  *((_QWORD *)v2 + 2) = 0;
  v2[40] = 1;
  *((_QWORD *)v2 + 6) = 0;
  v2[56] = 1;
  swift_storeEnumTagMultiPayload(v2, v52, 9);
  v34 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain();
  v35 = objc_msgSend(v34, "mainBundle");
  v57._object = (void *)0xE000000000000000;
  v36._object = (void *)0x8000000000312170;
  v36._countAndFlagsBits = 0xD00000000000001BLL;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v57._countAndFlagsBits = 0;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v57);

  v40 = v53;
  v39 = v54;
  v41 = (uint64_t)v51;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v16, v54);
  v56 = 0;
  v42 = type metadata accessor for FlowAction(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v43 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v2, 0, 0, v38._countAndFlagsBits, (uint64_t)v38._object, (char *)&v56 + 1, 0, 48, (char *)&v56, v41);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v39);
  return v43;
}

uint64_t sub_21DBDC(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  if ((*(_BYTE *)(v3 + 24) & 1) != 0)
  {
    v7 = static MetricsTargetID.rssEpisode.getter(a3);
    v9 = v8;
    v11 = *(_QWORD *)(v4 + 64);
    v10 = *(_QWORD *)(v4 + 72);
    v12 = static MetricsTargetType.lockup.getter(v7, v8);
    v14 = v13;
    v15 = static MetricsContentKind.episode.getter();
    static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)(v7, v9, 0, 0, v11, v10, v12, v14, v15, v16, a1, a2);
  }
  else
  {
    v18 = sub_144B4();
    v31 = BinaryInteger.description.getter(&type metadata for UInt64, v18);
    v20 = v19;
    v21 = static MetricsIDType.itsContentID.getter();
    v23 = v22;
    v24 = *(_QWORD *)(v3 + 64);
    v30 = *(_QWORD *)(v3 + 72);
    v25 = static MetricsTargetType.lockup.getter(v21, v22);
    v27 = v26;
    v28 = static MetricsContentKind.episode.getter();
    static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)(v31, v20, v21, v23, v24, v30, v25, v27, v28, v29, a1, a2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t Episode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,char a37,uint64_t a38,uint64_t a39,char a40,char a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  uint64_t v50;
  uint64_t v52;

  v52 = swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  Episode.init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1, a12, a13 & 1, a14, a15 & 1, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32 & 1,
    a33,
    a34 & 1,
    a35,
    a36 & 1,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43 & 1,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50 & 1);
  return v52;
}

uint64_t Episode.podcastAdamId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t Episode.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_artwork, a1, &qword_3BEB70);
}

uint64_t Episode.showUberArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_showUberArtwork, a1, &qword_3BEB70);
}

uint64_t Episode.episodeArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeArtwork, a1, &qword_3BEB70);
}

uint64_t Episode.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_title + 8));
  return v1;
}

uint64_t Episode.numberedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_numberedTitle + 8));
  return v1;
}

void *Episode.summary.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_summary);
  v2 = v1;
  return v1;
}

uint64_t Episode.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, a1, &qword_3B3D88);
}

uint64_t Episode.streamUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_streamUrl, a1, &qword_3B4370);
}

uint64_t Episode.assetUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_assetUrl, a1, &qword_3B4370);
}

uint64_t Episode.mediaType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_mediaType);
}

uint64_t Episode.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_isExplicit);
}

uint64_t Episode.guid.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit7Episode_guid);
}

uint64_t Episode.author.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit7Episode_author);
}

uint64_t Episode.seasonNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber);
}

uint64_t Episode.episodeNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber);
}

uint64_t Episode.episodeType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeType);
}

uint64_t Episode.showTitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit7Episode_showTitle);
}

uint64_t Episode.showDisplayType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_showDisplayType);
}

uint64_t Episode.showTypeIsSerial.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial);
}

uint64_t Episode.showTypeSetting.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeSetting);
}

uint64_t Episode.listenNowReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit7Episode_listenNowReason, a1, &qword_3B81E8);
}

uint64_t Episode.hasFreeVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_hasFreeVersion);
}

uint64_t Episode.subscriptionName.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName);
}

uint64_t Episode.storeTrackId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_storeTrackId);
}

double Episode.upNextScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_upNextScore);
}

uint64_t type metadata accessor for Episode(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2458;
  if (!qword_3C2458)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Episode);
  return result;
}

uint64_t sub_21E2E4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[7];
  unsigned __int8 v18;
  _BYTE v19[24];
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v0);
  v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BD250);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = type metadata accessor for SectionContext(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  sub_21C0FC(0, (uint64_t)v8, (uint64_t)v5, 0, 0);
  v12 = v11;
  sub_1459C((uint64_t)v5, &qword_3BD250);
  sub_1459C((uint64_t)v8, &qword_3B0CC8);
  v13 = v12 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, v19, 0, 0);
  sub_267BC(v13, (uint64_t)v2, &qword_3B3C88);
  Lazy.wrappedValue.getter(&v20, v0);
  sub_1459C((uint64_t)v2, &qword_3B3C88);
  v14 = v20;
  if ((_QWORD)v20)
  {
    *((_QWORD *)&v21 + 1) = type metadata accessor for Action(0);
    v22 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v20 = v14;
  }
  else
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
  }
  v18 = 2;
  v15 = sub_108198((uint64_t)&v20, &v18);
  sub_1459C((uint64_t)&v20, &qword_3B0C50);
  swift_release(v12);
  return v15;
}

uint64_t Episode.__deallocating_deinit()
{
  uint64_t v0;

  Episode.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t Episode.entitlementState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState);
}

uint64_t Episode.durationOpt.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit7Episode_duration);
}

uint64_t Episode.seasonNumberOpt.getter()
{
  return sub_21E588(&OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber);
}

uint64_t Episode.episodeNumberOpt.getter()
{
  return sub_21E588(&OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber);
}

uint64_t sub_21E588(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = v1 + *a1;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
    return 0;
  result = *(_QWORD *)v2;
  if (*(uint64_t *)v2 <= 0)
    return 0;
  return result;
}

uint64_t sub_21E5B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return v1;
}

uint64_t sub_21E5E8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_subscriptionName);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_21E624()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeEntitlementState);
}

uint64_t sub_21E638()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_hasFreeVersion);
}

uint64_t sub_21E64C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit7Episode_listenNowReason, a1, &qword_3B81E8);
}

uint64_t sub_21E67C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_episodeType);
}

uint64_t sub_21E690()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_mediaType);
}

uint64_t sub_21E6A4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_isExplicit);
}

uint64_t sub_21E6B8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_showTypeIsSerial);
}

uint64_t sub_21E6CC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8ShelfKit7Episode_duration);
}

uint64_t sub_21E6E8(uint64_t a1, uint64_t a2)
{
  return sub_21E700(a1, a2, &OBJC_IVAR____TtC8ShelfKit7Episode_seasonNumber);
}

uint64_t sub_21E6F4(uint64_t a1, uint64_t a2)
{
  return sub_21E700(a1, a2, &OBJC_IVAR____TtC8ShelfKit7Episode_episodeNumber);
}

uint64_t sub_21E700(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v4 = *v3 + *a3;
  if ((*(_BYTE *)(v4 + 8) & 1) != 0)
    return 0;
  result = *(_QWORD *)v4;
  if (*(uint64_t *)v4 < 1)
    return 0;
  return result;
}

uint64_t sub_21E734@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit7Episode_releaseDate, a1, &qword_3B3D88);
}

unint64_t sub_21E768()
{
  unint64_t result;

  result = qword_3C2428;
  if (!qword_3C2428)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeActionType);
    atomic_store(result, (unint64_t *)&qword_3C2428);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EpisodeActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21E7F8 + 4 * byte_3002C7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21E82C + 4 * byte_3002C2[v4]))();
}

uint64_t sub_21E82C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21E834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21E83CLL);
  return result;
}

uint64_t sub_21E848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21E850);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21E854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21E85C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeActionType()
{
  return &type metadata for EpisodeActionType;
}

uint64_t sub_21E878()
{
  return type metadata accessor for Episode(0);
}

void sub_21E880(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  void *v36;
  char *v37;

  v10[0] = &unk_300460;
  v10[1] = &unk_300460;
  v10[2] = &unk_300478;
  v10[3] = &unk_300490;
  v10[4] = &unk_300490;
  v10[5] = &unk_300460;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v11 = *(_QWORD *)(v2 - 8) + 64;
    v12 = v11;
    v13 = v11;
    v14 = &unk_300490;
    v15 = &unk_300490;
    v16 = &unk_3004A8;
    sub_3EE70(319, (unint64_t *)&unk_3C2468, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v17 = *(_QWORD *)(v4 - 8) + 64;
      sub_3EE70(319, (unint64_t *)&qword_3B1C30, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
      if (v7 <= 0x3F)
      {
        v18 = *(_QWORD *)(v6 - 8) + 64;
        v19 = v18;
        v20 = &unk_3004C0;
        v21 = &unk_3004D8;
        v22 = &unk_300478;
        v23 = &unk_300460;
        v24 = &unk_300478;
        v25 = &unk_300460;
        v26 = &unk_300460;
        v27 = &unk_3004C0;
        v28 = &unk_300478;
        v29 = &unk_3004F0;
        v30 = &unk_3004D8;
        v31 = &unk_300460;
        sub_3EE70(319, &qword_3BD2C0, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeListenNowReason);
        if (v9 <= 0x3F)
        {
          v32 = *(_QWORD *)(v8 - 8) + 64;
          v33 = (char *)&value witness table for Builtin.Int64 + 64;
          v34 = &unk_3004D8;
          v35 = &unk_300478;
          v36 = &unk_300460;
          v37 = (char *)&value witness table for Builtin.Int64 + 64;
          swift_updateClassMetadata2(a1, 256, 33, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t method lookup function for Episode(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Episode);
}

uint64_t dispatch thunk of Episode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:adamId:channelAdamId:channelName:artwork:showUberArtwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showDisplayType:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;

  LOBYTE(a39) = a39 & 1;
  LOBYTE(a34) = a34 & 1;
  LOBYTE(a32) = a32 & 1;
  LOBYTE(a30) = a30 & 1;
  LOBYTE(a10) = a10 & 1;
  LOBYTE(a12) = a12 & 1;
  LOBYTE(a14) = a14 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 344))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t dispatch thunk of Episode.with(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of Episode.metricsChannelAdamId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of Episode.defaultLockup(for:sectionContext:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 368);
  v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v5;
  v8 = v2;
  return v3(v7);
}

uint64_t dispatch thunk of Episode.defaultLockup(for:sectionContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Episode.playableLockupForEpisodeDetails.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of Episode.presentDetailsLockup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t EpisodeUpsellBannerModel.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  return sub_22005C(a1, a2);
}

uint64_t EpisodeUpsellBannerModel.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_267BC(v3, a1, (uint64_t *)&unk_3B8790);
}

uint64_t EpisodeUpsellBannerModel.impressionMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics;
  swift_beginAccess(v3, v5, 33, 0);
  sub_66870(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*EpisodeUpsellBannerModel.impressionMetrics.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EpisodeUpsellBannerModel.shelfUniqueId.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t EpisodeUpsellBannerModel.shelfUniqueId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*EpisodeUpsellBannerModel.shelfUniqueId.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EpisodeUpsellBannerModel.subscriptionTitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle);
}

uint64_t EpisodeUpsellBannerModel.showSpecificUpsellCopy.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_showSpecificUpsellCopy);
}

uint64_t EpisodeUpsellBannerModel.genericUpsellCopy.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_genericUpsellCopy);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_genericUpsellCopy + 8));
  return v1;
}

uint64_t EpisodeUpsellBannerModel.macUpsellSubtitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_macUpsellSubtitle);
}

uint64_t EpisodeUpsellBannerModel.channelAdamId.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_channelAdamId);
}

uint64_t EpisodeUpsellBannerModel.eligibilityType.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_eligibilityType);
}

uint64_t EpisodeUpsellBannerModel.artworkURL.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_artworkURL);
}

uint64_t EpisodeUpsellBannerModel.primaryAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_primaryAction));
}

uint64_t EpisodeUpsellBannerModel.dismissBannerAction.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t EpisodeUpsellBannerModel.dismissBannerAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*EpisodeUpsellBannerModel.dismissBannerAction.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t EpisodeUpsellBannerModel.__allocating_init(subscriptionTitle:showSpecificUpsellCopy:genericUpsellCopy:macUpsellSubtitle:channelAdamId:eligibilityType:artworkURL:primaryAction:dismissBannerAction:impressionMetrics:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v22;

  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v22 = sub_21FCA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  swift_release(a16);
  swift_release(a15);
  return v22;
}

uint64_t EpisodeUpsellBannerModel.init(subscriptionTitle:showSpecificUpsellCopy:genericUpsellCopy:macUpsellSubtitle:channelAdamId:eligibilityType:artworkURL:primaryAction:dismissBannerAction:impressionMetrics:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  v17 = sub_21FCA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  swift_release(a16);
  swift_release(a15);
  return v17;
}

uint64_t EpisodeUpsellBannerModel.deinit()
{
  uint64_t v0;

  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_primaryAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction));
  return v0;
}

uint64_t EpisodeUpsellBannerModel.__deallocating_deinit()
{
  uint64_t v0;

  EpisodeUpsellBannerModel.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_21F244@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_22005C(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_21F26C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_267BC(v3, a1, (uint64_t *)&unk_3B8790);
}

uint64_t sub_21F2C8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId);
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t EpisodeUpsellBannerView.apply(model:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  if (isMac())
  {
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle);
    v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle + 8);
    v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_macUpsellSubtitle);
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_macUpsellSubtitle + 8);
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_showSpecificUpsellCopy);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_showSpecificUpsellCopy + 8);
  if (!v4)
  {
LABEL_7:
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle);
    v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle + 8);
    v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_genericUpsellCopy);
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_genericUpsellCopy + 8);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  v5 = *v8;
  v15 = *v8;
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_showSpecificUpsellCopy + 8);
  v9 = sub_B5B74();
  swift_bridgeObjectRetain();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v6 = 0;
  v7 = 0;
LABEL_9:
  v10 = swift_allocObject(&unk_38A780, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v2);
  v11 = swift_allocObject(&unk_38A7A8, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  v12 = swift_allocObject(&unk_38A780, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  v13 = swift_allocObject(&unk_38A7D0, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  swift_retain_n(a1, 2);
  swift_retain();
  swift_retain();
  dispatch thunk of EpisodeUpsellBannerView.apply(primaryText:secondaryText:tapBannerBlock:tapCloseButtonBlock:)(v5, v4, v6, v7, sub_2204E8, v11, sub_2204F4, v13, v15, v16);
  swift_bridgeObjectRelease();
  swift_release(v10);
  swift_release(v11);
  swift_release(v12);
  swift_release(v13);
  return swift_bridgeObjectRelease();
}

void sub_21F524(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_primaryAction);
    if (v6)
    {
      v16 = type metadata accessor for EpisodeUpsellBannerView(0);
      v15[0] = v5;
      v7 = v5;
      v8 = swift_retain();
      v9 = sub_21F948(v8, (uint64_t)v15, v5, (uint64_t)v7, (void (*)(uint64_t))type metadata accessor for Action, (unint64_t *)&qword_3B28E8);

      swift_release(v9);
      sub_1459C((uint64_t)v15, (uint64_t *)&unk_3BC540);
      swift_release(v6);
    }
    v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction);
    swift_beginAccess(v10, v17, 0, 0);
    v11 = *v10;
    if (v11)
    {
      v16 = type metadata accessor for EpisodeUpsellBannerView(0);
      v15[0] = v5;
      v12 = v5;
      v13 = swift_retain();
      v14 = sub_21F948(v13, (uint64_t)v15, v5, (uint64_t)v12, (void (*)(uint64_t))type metadata accessor for ClosureAction, &qword_3B2768);

      swift_release(v14);
      sub_1459C((uint64_t)v15, (uint64_t *)&unk_3BC540);
      swift_release(v11);
    }
    else
    {

    }
  }
}

void sub_21F694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD);
  unint64_t *v17;
  unint64_t *v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _BYTE v27[24];
  char v28[24];
  char v29[24];

  v4 = type metadata accessor for MetricsData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction);
    swift_beginAccess(a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction, v28, 0, 0);
    v11 = *v10;
    if (v11)
    {
      v12 = a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_channelAdamId;
      v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_channelAdamId);
      v14 = *(_QWORD *)(v12 + 8);
      swift_retain();
      v15 = _s8ShelfKit17ClickMetricsEventC019upsellBannerDismisscE08targetId011channelAdamJ08pageTypeACSSSg_AHSStFZ_0(0x61426C6C65737075, 0xEC00000072656E6ELL, v13, v14, 0x4574736163646F50, 0xEE0065646F736970);
      swift_retain();
      v25 = v15;
      sub_B1A70();
      swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v27, 33, 0);
      v16 = (void (*)(_QWORD *, _QWORD))ActionMetrics.data.modify(v26);
      v18 = v17;
      v19 = *v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
      *v18 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v19 = sub_10874(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
        *v18 = v19;
      }
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        v19 = sub_10874(v21 > 1, v22 + 1, 1, v19);
        *v18 = v19;
      }
      *(_QWORD *)(v19 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v22, v7, v4);
      v16(v26, 0);
      swift_endAccess(v27);
      swift_release(v11);
      v26[3] = type metadata accessor for EpisodeUpsellBannerView(0);
      v26[0] = v9;
      swift_retain();
      v23 = v9;
      v24 = sub_21F948(v11, (uint64_t)v26, v9, (uint64_t)v23, (void (*)(uint64_t))type metadata accessor for ClosureAction, &qword_3B2768);

      swift_release(v25);
      swift_release(v24);
      swift_release(v11);
      sub_1459C((uint64_t)v26, (uint64_t *)&unk_3BC540);
      swift_release(v11);
    }
    else
    {

    }
  }
}

uint64_t sub_21F948(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v36;
  char *v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v11 = type metadata accessor for ActionOutcome(0);
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  __chkstk_darwin(v11);
  v39 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OSLogger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = ((uint64_t (*)(_QWORD, __n128))a5)(0, v18);
  v45 = sub_F1C0(a6, a5, (uint64_t)&protocol conformance descriptor for Action);
  v43[0] = a1;
  v21 = type metadata accessor for EpisodeUpsellBannerView(0);
  swift_retain();
  v22 = dispatch thunk of DependencyBindableView.objectGraph.getter(v21, &protocol witness table for EpisodeUpsellBannerView);
  if (v22)
  {
    v23 = v22;
    type metadata accessor for ActionRunnerOptions(0);
    v24 = swift_retain();
    v25 = BaseObjectGraph.__allocating_init(_:)(v24);
    sub_267BC(a2, (uint64_t)v42, (uint64_t *)&unk_3BC540);
    v42[4] = a3;
    v26 = a3;
    v27 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v42);
    sub_1459C((uint64_t)v42, &qword_3B18E8);
    swift_release(v25);
    sub_150C8((uint64_t)v43, (uint64_t)v42);
    v42[5] = v27;
    v28 = ActionPerformer.callAsFunction()();
    swift_release(v23);
    sub_23740(v42);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
    v30 = type metadata accessor for LogMessage(0);
    v31 = swift_allocObject(v29, ((*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v30 - 8) + 80) | 7);
    *(_OWORD *)(v31 + 16) = xmmword_2EA0D0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 1);
    v32._object = (void *)0x8000000000313E70;
    v32._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v33 = v44;
    v34 = __swift_project_boxed_opaque_existential_1(v43, v44);
    v42[3] = v33;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v42);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_2Tm, v34, v33);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v42);
    sub_1459C((uint64_t)v42, (uint64_t *)&unk_3BC540);
    v36._countAndFlagsBits = 0xD000000000000019;
    v36._object = (void *)0x8000000000313E90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)(v15);
    Logger.error(_:)(v31, v16, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3BC108);
    v37 = v39;
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, enum case for ActionOutcome.unsupported(_:), v41);
    v28 = Promise.__allocating_init(value:)(v37);
  }
  __swift_destroy_boxed_opaque_existential_1(v43);
  return v28;
}

uint64_t sub_21FCA4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t countAndFlagsBits;
  void *object;
  void *v33;
  uint64_t v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Swift::String v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  Swift::String v59;
  Swift::String v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _BYTE v70[32];
  Swift::String v71;

  v18 = v17;
  v27 = v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics;
  v28 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction) = 0;
  v29 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_subscriptionTitle);
  v66 = a3;
  *v29 = a1;
  v29[1] = a2;
  v30 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_showSpecificUpsellCopy);
  *v30 = a3;
  v30[1] = a4;
  if (a6)
  {
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a2);
    v65 = a6;
    v67 = a5;
    countAndFlagsBits = a5;
    object = a6;
  }
  else
  {
    v33 = (void *)objc_opt_self(NSBundle);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a2);
    v34 = a7;
    v35 = objc_msgSend(v33, "mainBundle");
    v65 = (void *)0xE000000000000000;
    v71._object = (void *)0xE000000000000000;
    v36._object = (void *)0x8000000000313EB0;
    v36._countAndFlagsBits = 0xD000000000000019;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v71._countAndFlagsBits = 0;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)(unint64_t)a5, (NSBundle)v35, v37, v71);
    countAndFlagsBits = v38._countAndFlagsBits;
    object = v38._object;

    a7 = v34;
    v67 = 0;
  }
  v39 = (uint64_t *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_genericUpsellCopy);
  *v39 = countAndFlagsBits;
  v39[1] = (uint64_t)object;
  v40 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_macUpsellSubtitle);
  *v40 = a7;
  v40[1] = a8;
  v41 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_channelAdamId);
  *v41 = a9;
  v41[1] = a10;
  v42 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_eligibilityType);
  *v42 = a11;
  v42[1] = a12;
  v43 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_artworkURL);
  *v43 = a13;
  v43[1] = a14;
  *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_primaryAction) = a15;
  v44 = (uint64_t *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction);
  swift_beginAccess(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_dismissBannerAction, v70, 1, 0);
  v45 = a7;
  v46 = *v44;
  *v44 = a16;
  swift_bridgeObjectRetain(a8);
  swift_retain(a15);
  swift_retain(a16);
  swift_bridgeObjectRetain(a6);
  swift_release(v46);
  v47 = v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_impressionMetrics, &v68, 33, 0);
  sub_220658(a17, v47);
  swift_endAccess(&v68);
  v68 = 0;
  v69 = 0xE000000000000000;
  if (a2)
    v48 = a1;
  else
    v48 = 0;
  if (a2)
    v49 = a2;
  else
    v49 = 0xE000000000000000;
  v50 = v49;
  String.append(_:)(*(Swift::String *)&v48);
  swift_bridgeObjectRelease();
  v51._countAndFlagsBits = 45;
  v51._object = (void *)0xE100000000000000;
  String.append(_:)(v51);
  if (a4)
    v52 = v66;
  else
    v52 = 0;
  if (a4)
    v53 = a4;
  else
    v53 = 0xE000000000000000;
  v54 = v53;
  String.append(_:)(*(Swift::String *)&v52);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 45;
  v55._object = (void *)0xE100000000000000;
  String.append(_:)(v55);
  if (a8)
    v56 = v45;
  else
    v56 = 0;
  if (a8)
    v57 = a8;
  else
    v57 = 0xE000000000000000;
  v58 = v57;
  String.append(_:)(*(Swift::String *)&v56);
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = 45;
  v59._object = (void *)0xE100000000000000;
  String.append(_:)(v59);
  v60._countAndFlagsBits = v67;
  v60._object = v65;
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v61 = v68;
  v62 = v69;
  sub_1459C(a17, (uint64_t *)&unk_3B8790);
  v63 = (_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit24EpisodeUpsellBannerModel_shelfUniqueId);
  *v63 = v61;
  v63[1] = v62;
  return v18;
}

uint64_t sub_22005C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = type metadata accessor for JSONContext(0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v66 = (char *)&Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0
      - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v7 = __chkstk_darwin(v6);
  v67 = (uint64_t)&Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0
      - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (char *)&Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 - v9;
  v10 = type metadata accessor for JSONObject(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0
      - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = JSONObject.subscript.getter(0xD000000000000011, 0x8000000000311960);
  v15 = JSONObject.string.getter(v14);
  v64 = v16;
  v65 = v15;
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  v18 = JSONObject.subscript.getter(0xD000000000000016, 0x8000000000313DC0);
  v19 = JSONObject.string.getter(v18);
  v61 = v20;
  v62 = v19;
  v17(v13, v10);
  v21 = JSONObject.subscript.getter(0xD000000000000011, 0x8000000000313E00);
  v22 = JSONObject.string.getter(v21);
  v59 = v23;
  v60 = v22;
  v17(v13, v10);
  v24 = JSONObject.subscript.getter(0xD000000000000011, 0x8000000000313DE0);
  v25 = JSONObject.string.getter(v24);
  v57 = v26;
  v58 = v25;
  v17(v13, v10);
  v27 = JSONObject.subscript.getter(0x416C656E6E616863, 0xED000064496D6164);
  v28 = JSONObject.string.getter(v27);
  v55 = v29;
  v56 = v28;
  v17(v13, v10);
  v30 = JSONObject.subscript.getter(0x6C69626967696C65, 0xEF65707954797469);
  v31 = JSONObject.string.getter(v30);
  v53 = v32;
  v54 = v31;
  v17(v13, v10);
  v33 = JSONObject.subscript.getter(0x556B726F77747261, 0xEA00000000004C52);
  v34 = JSONObject.string.getter(v33);
  v51 = v35;
  v52 = v34;
  v17(v13, v10);
  JSONObject.subscript.getter(0x417972616D697270, 0xED00006E6F697463);
  v36 = a2;
  v50 = a2;
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v13, a2);
  v17(v13, v10);
  v37 = type metadata accessor for ImpressionMetrics(0);
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v38 = v68;
  v39 = v66;
  v40 = v36;
  v41 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v40, v69);
  v42 = (uint64_t)v63;
  ExpressibleByJSON.init(tryDeserializing:using:)(v13, v39, v37);
  v43 = v42;
  v44 = v67;
  sub_267BC(v42, v67, (uint64_t *)&unk_3B8790);
  v45 = type metadata accessor for EpisodeUpsellBannerModel(0);
  swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v46 = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  v47 = sub_21FCA4(v65, v64, v62, v61, v58, v57, v60, v59, v56, v55, v54, v53, v52, v51, Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0, 0, v44);
  swift_release(v46);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v50, v41);
  v17(a1, v10);
  sub_1459C(v43, (uint64_t *)&unk_3B8790);
  return v47;
}

uint64_t sub_2204C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_2204E8()
{
  uint64_t v0;

  sub_21F524(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_2204F4()
{
  uint64_t v0;

  sub_21F694(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2204FC(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C2648, (void (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerModel, (uint64_t)&protocol conformance descriptor for EpisodeUpsellBannerModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for EpisodeUpsellBannerModel(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2678;
  if (!qword_3C2678)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeUpsellBannerModel);
  return result;
}

uint64_t sub_220574()
{
  return type metadata accessor for EpisodeUpsellBannerModel(0);
}

void sub_22057C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  sub_34090(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_3005C0;
    v4[2] = &unk_3005D8;
    v4[3] = &unk_3005D8;
    v4[4] = &unk_3005C0;
    v4[5] = &unk_3005D8;
    v4[6] = &unk_3005D8;
    v4[7] = &unk_3005D8;
    v4[8] = &unk_3005D8;
    v4[9] = &unk_3005F0;
    v4[10] = &unk_3005F0;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

uint64_t method lookup function for EpisodeUpsellBannerModel(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EpisodeUpsellBannerModel);
}

uint64_t dispatch thunk of EpisodeUpsellBannerModel.__allocating_init(subscriptionTitle:showSpecificUpsellCopy:genericUpsellCopy:macUpsellSubtitle:channelAdamId:eligibilityType:artworkURL:primaryAction:dismissBannerAction:impressionMetrics:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_220658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t LibraryRemovalController.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = swift_allocObject(v1, 56, 7);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)((_QWORD *)(v3 + 16), v4, v4);
  swift_release(a1);
  return v3;
}

uint64_t LibraryRemovalController.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v6[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)(v6, v4, v4);
  swift_release(a1);
  sub_F4D8(v6, v2 + 16);
  return v2;
}

UIAlertController_optional __swiftcall LibraryRemovalController.removalOptionsAfterUnfollow(uuid:)(Swift::String uuid)
{
  _QWORD *v1;
  _QWORD *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  _QWORD *v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  NSString v33;
  id v34;
  objc_class *v35;
  _QWORD aBlock[5];
  _QWORD *v37;
  UIAlertController_optional result;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;

  v2 = v1;
  object = uuid._object;
  countAndFlagsBits = uuid._countAndFlagsBits;
  v5 = v1[5];
  v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  if (((*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v6 + 592))(countAndFlagsBits, object, v5, v6) & 1) != 0)
  {
    v8 = v1[5];
    v9 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v8);
    v10 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v9 + 632))(countAndFlagsBits, object, v8, v9);
    v12 = v11;
    v13 = (void *)objc_opt_self(NSBundle);
    v14 = objc_msgSend(v13, "mainBundle");
    v15._countAndFlagsBits = 0xD00000000000001ELL;
    v39._object = (void *)0xE000000000000000;
    v15._object = (void *)0x8000000000313ED0;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v39._countAndFlagsBits = 0;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v39);

    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_22F20();
    *(_QWORD *)(v19 + 32) = v10;
    *(_QWORD *)(v19 + 40) = v12;
    String.init(format:_:)(v17._countAndFlagsBits, v17._object, v19);
    swift_bridgeObjectRelease();
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, 0, 0);

    v22 = objc_msgSend(v13, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000013;
    v40._object = (void *)0x8000000000313F10;
    v23._object = (void *)0x8000000000313EF0;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0xD000000000000013;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v40);

    v25 = (_QWORD *)swift_allocObject(&unk_38A8A0, 40, 7);
    v25[2] = countAndFlagsBits;
    v25[3] = object;
    v25[4] = v2;
    swift_bridgeObjectRetain();
    swift_retain();
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_220D5C;
    v37 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_148954;
    aBlock[3] = &block_descriptor_25;
    v27 = _Block_copy(aBlock);
    swift_release(v37);
    v28 = (void *)objc_opt_self(UIAlertAction);
    v29 = objc_msgSend(v28, "actionWithTitle:style:handler:", v26, 2, v27);
    _Block_release(v27);

    objc_msgSend(v21, "addAction:", v29);
    v30 = objc_msgSend(v13, "mainBundle");
    v41._object = (void *)0x8000000000313F50;
    v31._object = (void *)0x8000000000313F30;
    v31._countAndFlagsBits = 0xD000000000000011;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0xD000000000000011;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v41);

    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v28, "actionWithTitle:style:handler:", v33, 1, 0);

    objc_msgSend(v21, "addAction:", v34);
  }
  else
  {
    v21 = 0;
  }
  v35 = (objc_class *)v21;
  result.value.super.super.super.isa = v35;
  result.is_nil = v7;
  return result;
}

uint64_t sub_220B54(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v11);
  v12 = swift_bridgeObjectRetain_n(a3, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v23 = v7;
    v15 = swift_slowAlloc(12, -1);
    v24 = a2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v26 = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v25 = sub_69298(v24, a3, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl(&dword_0, v13, v14, "removalOptionsAfterUnfollow for podcasts %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v18 = v16;
    a2 = v24;
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v19 = a4 + 2;
  v20 = a4[5];
  v21 = a4[6];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 624))(a2, a3, 1, 1, v20, v21);
}

uint64_t sub_220D5C(uint64_t a1)
{
  uint64_t v1;

  return sub_220B54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_25(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

UIAlertController_optional __swiftcall LibraryRemovalController.removeShowFromLibraryAlertController(uuid:)(Swift::String uuid)
{
  _QWORD *v1;
  _QWORD *v2;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  _QWORD *v26;
  NSString v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  _QWORD *v35;
  NSString v36;
  char **v37;
  void *v38;
  id v39;
  Swift::String v40;
  Swift::String v41;
  _QWORD *v42;
  id v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  NSString v47;
  id v48;
  Swift::Bool v49;
  objc_class *v50;
  void **aBlock;
  uint64_t v52;
  void (*v53)(uint64_t, void *);
  void *v54;
  uint64_t (*v55)(uint64_t);
  _QWORD *v56;
  UIAlertController_optional result;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;

  v2 = v1;
  object = uuid._object;
  countAndFlagsBits = uuid._countAndFlagsBits;
  v5 = v1 + 2;
  v6 = v1[5];
  v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v6);
  v8 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 632))(countAndFlagsBits, object, v6, v7);
  v10 = v9;
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13._countAndFlagsBits = 0xD00000000000001ELL;
  v58._object = (void *)0xE000000000000000;
  v13._object = (void *)0x8000000000313ED0;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v58._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v58);

  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  *(_QWORD *)(v17 + 64) = sub_22F20();
  *(_QWORD *)(v17 + 32) = v8;
  *(_QWORD *)(v17 + 40) = v10;
  String.init(format:_:)(v15._countAndFlagsBits, v15._object, v17);
  swift_bridgeObjectRelease();
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v18, 0, 0);

  v20 = v2[5];
  v21 = v2[6];
  __swift_project_boxed_opaque_existential_1(v5, v20);
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v21 + 576))(countAndFlagsBits, object, v20, v21);
  v22 = objc_msgSend(v11, "mainBundle");
  if ((v5 & 1) != 0)
  {
    v59._object = (void *)0x8000000000313F90;
    v23._object = (void *)0x8000000000313F70;
    v23._countAndFlagsBits = 0xD000000000000013;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v59._countAndFlagsBits = 0xD000000000000013;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v59);

    v25 = swift_allocObject(&unk_38A8F0, 24, 7);
    swift_weakInit(v25 + 16);
    v26 = (_QWORD *)swift_allocObject(&unk_38A968, 40, 7);
    v26[2] = countAndFlagsBits;
    v26[3] = object;
    v26[4] = v25;
    swift_bridgeObjectRetain();
    swift_retain();
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v55 = sub_2216F0;
    v56 = v26;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_148954;
    v54 = &block_descriptor_16_0;
    v28 = _Block_copy(&aBlock);
    swift_release(v56);
    v29 = (void *)objc_opt_self(UIAlertAction);
    v30 = objc_msgSend(v29, "actionWithTitle:style:handler:", v27, 0, v28);
    _Block_release(v28);
    swift_release(v25);

    objc_msgSend(v19, "addAction:", v30);
    v31 = objc_msgSend(v11, "mainBundle");
    v60._object = (void *)0x8000000000313FD0;
    v32._object = (void *)0x8000000000313FB0;
    v32._countAndFlagsBits = 0xD000000000000013;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v60._countAndFlagsBits = 0xD000000000000013;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v60);

    v34 = swift_allocObject(&unk_38A8F0, 24, 7);
    swift_weakInit(v34 + 16);
    v35 = (_QWORD *)swift_allocObject(&unk_38A9B8, 40, 7);
    v35[2] = countAndFlagsBits;
    v35[3] = object;
    v35[4] = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v55 = sub_22171C;
    v56 = v35;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_148954;
    v54 = &block_descriptor_23_1;
    v37 = &selRef__tabBarController_sidebar_visibilityDidChangeForTabs_;
    v38 = _Block_copy(&aBlock);
    swift_release(v56);
    v39 = objc_msgSend(v29, "actionWithTitle:style:handler:", v36, 2, v38);
  }
  else
  {
    v61._object = (void *)0x8000000000313F10;
    v40._object = (void *)0x8000000000313EF0;
    v40._countAndFlagsBits = 0xD000000000000013;
    v41._countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    v61._countAndFlagsBits = 0xD000000000000013;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v22, v41, v61);

    v34 = swift_allocObject(&unk_38A8F0, 24, 7);
    swift_weakInit(v34 + 16);
    v42 = (_QWORD *)swift_allocObject(&unk_38A918, 40, 7);
    v42[2] = countAndFlagsBits;
    v42[3] = object;
    v42[4] = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v55 = sub_2216C4;
    v56 = v42;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_148954;
    v54 = &block_descriptor_9_3;
    v37 = &selRef__tabBarController_sidebar_visibilityDidChangeForTabs_;
    v38 = _Block_copy(&aBlock);
    swift_release(v56);
    v39 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v36, 2, v38);
  }
  v43 = v39;
  _Block_release(v38);
  swift_release(v34);

  objc_msgSend(v19, v37[359], v43);
  v44 = objc_msgSend(v11, "mainBundle");
  v62._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0x6C65636E6143;
  v45._object = (void *)0xE600000000000000;
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v62);

  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v47, 1, 0);

  objc_msgSend(v19, v37[359], v48);
  v50 = (objc_class *)v19;
  result.value.super.super.super.isa = v50;
  result.is_nil = v49;
  return result;
}

uint64_t sub_221444()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_221468(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a5;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4 + 16;
  static Logger.podcastsStatesCoordination.getter(v15);
  v16 = swift_bridgeObjectRetain_n(a3, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = os_log_type_enabled(v17, v18);
  v33 = a2;
  if (v19)
  {
    v31 = a6;
    v20 = swift_slowAlloc(12, -1);
    v30 = a4 + 16;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v34[0] = v22;
    v29 = v10;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    v37 = sub_69298(a2, a3, v34);
    LOBYTE(a6) = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl(&dword_0, v17, v18, v32, v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v21;
    v14 = v30;
    swift_slowDealloc(v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  swift_beginAccess(v14, &v37, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v25 = result;
    sub_150C8(result + 16, (uint64_t)v34);
    swift_release(v25);
    v26 = v35;
    v27 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    (*(void (**)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v27 + 624))(v33, a3, a6 & 1, 0, v26, v27);
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  return result;
}

uint64_t sub_2216C4(uint64_t a1)
{
  uint64_t v1;

  return sub_221468(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "removeShowFromLibraryAlertController with saved episodes and downloads for podcasts %s", 1);
}

uint64_t sub_2216F0(uint64_t a1)
{
  uint64_t v1;

  return sub_221468(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "removeShowFromLibraryAlertController without saved episodes for podcasts %s", 0);
}

uint64_t sub_22171C(uint64_t a1)
{
  uint64_t v1;

  return sub_221468(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "removeShowFromLibraryAlertController with saved episodes for podcasts %s", 1);
}

uint64_t LibraryRemovalController.removeAndUnfollowOptionsSheetAction(show:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  Swift::String v69;

  v67 = type metadata accessor for UUID(0);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v5);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionMetrics(0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed) & 1;
  v11 = v1[5];
  v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v11);
  v13 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v12 + 576))(*(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid), *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8), v11, v12);
  v14 = sub_221CBC(a1, v10);
  v61 = v15;
  v62 = v14;
  v17 = sub_221E94(v10, v13 & 1);
  v18 = v16;
  v68 = (uint64_t)_swiftEmptyArrayStorage;
  if ((v13 & 1) != 0)
  {
    v60 = v16;
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v69._object = (void *)0xE000000000000000;
    v20._object = (void *)0x8000000000313F70;
    v20._countAndFlagsBits = 0xD000000000000013;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v69._countAndFlagsBits = 0;
    v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v69);

    v23 = swift_allocObject(&unk_38A8F0, 24, 7);
    swift_weakInit(v23 + 16);
    v24 = swift_allocObject(&unk_38AA30, 40, 7);
    *(_QWORD *)(v24 + 16) = a1;
    *(_BYTE *)(v24 + 24) = v10;
    *(_QWORD *)(v24 + 32) = v23;
    swift_retain();
    v25 = swift_retain();
    static ActionMetrics.notInstrumented.getter(v25);
    v26 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v27 = sub_213C1C(v22._countAndFlagsBits, (uint64_t)v22._object, 0, (uint64_t)v9, (uint64_t)sub_22419C, v24);
    swift_release(v23);
    swift_release(v24);
    v28 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
    v30 = *(_QWORD *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFFF8));
    v29 = *(_QWORD *)((char *)&dword_18 + (v68 & 0xFFFFFFFFFFFFFF8));
    if (v30 >= v29 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
    v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
    specialized Array._endMutation()(v31);
    swift_release(v27);
    v18 = v60;
  }
  v32 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v32 + 16);
  v33 = swift_allocObject(&unk_38AA08, 40, 7);
  *(_QWORD *)(v33 + 16) = a1;
  *(_BYTE *)(v33 + 24) = v10;
  *(_QWORD *)(v33 + 32) = v32;
  swift_retain();
  v34 = swift_retain();
  static ActionMetrics.notInstrumented.getter(v34);
  v35 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v36 = sub_213C1C(v17, v18, 1, (uint64_t)v9, (uint64_t)sub_224158, v33);
  swift_release(v32);
  swift_release(v33);
  v37 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFFF8));
  v38 = *(_QWORD *)((char *)&dword_18 + (v68 & 0xFFFFFFFFFFFFFF8));
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v36);
  specialized Array._endMutation()(v40);
  v41 = v68;
  if ((unint64_t)v68 >> 62)
  {
    if (v68 < 0)
      v57 = v68;
    else
      v57 = v68 & 0xFFFFFFFFFFFFFF8;
    v58 = type metadata accessor for Action(0);
    swift_bridgeObjectRetain();
    v43 = _bridgeCocoaArray<A>(_:)(v57, v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v42);
    type metadata accessor for Action(0);
    v43 = v41;
  }
  swift_bridgeObjectRelease();
  v44 = type metadata accessor for SheetAction(0);
  v45 = swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  *(_QWORD *)(v45 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v43;
  v46 = (uint64_t *)(v45 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v47 = v61;
  *v46 = v62;
  v46[1] = v47;
  v48 = (_QWORD *)(v45 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v48 = 0;
  v48[1] = 0;
  *(_BYTE *)(v45 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = 1;
  v49 = type metadata accessor for ImpressionMetrics(0);
  v50 = (uint64_t)v66;
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v66, 1, 1, v49);
  v52 = static ActionMetrics.notInstrumented.getter(v51);
  UUID.init()(v52);
  v53 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v55 = v54;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v4, v67);
  *(_QWORD *)(v45 + 16) = v53;
  *(_QWORD *)(v45 + 24) = v55;
  *(_QWORD *)(v45 + 32) = 0;
  *(_QWORD *)(v45 + 40) = 0;
  *(_BYTE *)(v45 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v45 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v9, v64);
  sub_23AB8(v50, v45 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  swift_release(v36);
  return v45;
}

uint64_t sub_221CBC(uint64_t a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t countAndFlagsBits;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  Swift::String v21;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8);
  if (v3)
  {
    v5 = (void *)objc_opt_self(NSBundle);
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v5, "mainBundle");
    if ((a2 & 1) != 0)
    {
      v20 = 0xE000000000000000;
      v7 = 0x8000000000314270;
      v8 = 0xD00000000000001CLL;
    }
    else
    {
      v8 = 0xD00000000000001DLL;
      v20 = 0xE000000000000000;
      v7 = 0x8000000000314250;
    }
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v15 = 0;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, (NSBundle)v6, v14, *(Swift::String *)(&v20 - 1));

    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
    v18 = swift_allocObject(v17, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = sub_22F20();
    *(_QWORD *)(v18 + 32) = v2;
    *(_QWORD *)(v18 + 40) = v3;
    v19 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10._countAndFlagsBits = 0xD00000000000001ELL;
    v21._object = (void *)0xE000000000000000;
    v10._object = (void *)0x8000000000314230;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)v2, (NSBundle)v9, v11, v21)._countAndFlagsBits;

    return countAndFlagsBits;
  }
}

uint64_t sub_221E94(char a1, char a2)
{
  objc_class *v4;
  unint64_t v5;
  unint64_t v6;
  NSBundle v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t countAndFlagsBits;
  unint64_t v14;

  v4 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      v5 = 0xD000000000000017;
      v14 = 0xE000000000000000;
      v6 = 0x8000000000314210;
LABEL_9:
      v7.super.isa = v4;
      v8 = 0;
      v9 = 0xE000000000000000;
      v10 = 0;
      goto LABEL_10;
    }
    v14 = 0xE000000000000000;
    v11 = "UNFOLLOW_AND_REMOVE";
LABEL_8:
    v6 = (unint64_t)(v11 - 32) | 0x8000000000000000;
    v5 = 0xD000000000000013;
    goto LABEL_9;
  }
  if ((a2 & 1) == 0)
  {
    v14 = 0xE000000000000000;
    v11 = "REMOVE_FROM_LIBRARY";
    goto LABEL_8;
  }
  v14 = 0x8000000000313FD0;
  v6 = 0x8000000000313FB0;
  v5 = 0xD000000000000013;
  v7.super.isa = v4;
  v8 = 0;
  v9 = 0xE000000000000000;
  v10 = 0xD000000000000013;
LABEL_10:
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, v7, *(Swift::String *)&v8, *(Swift::String *)(&v14 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_221FCC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v39 = a7;
  v38 = a6;
  v12 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3 + 16;
  v17 = static os_log_type_t.default.getter(v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_2EA0D0;
  v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_22F20();
  v42 = v20;
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v21;
  sub_1F470();
  v22 = swift_bridgeObjectRetain();
  v23 = (void *)static OS_os_log.default.getter(v22);
  os_log(_:dso:log:_:_:)(v17, &dword_0, v23, a4, a5, 2, v19);
  swift_bridgeObjectRelease();

  if ((a2 & 1) != 0)
  {
    swift_beginAccess(v15, v43, 0, 0);
    Strong = swift_weakLoadStrong(v15);
    if (Strong)
    {
      v25 = Strong;
      sub_150C8(Strong + 16, (uint64_t)v44);
      swift_release(v25);
      v26 = v45;
      v27 = v46;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      v28 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v27 + 48))(v42, v21, v26, v27);
      swift_release(v28);
      Strong = __swift_destroy_boxed_opaque_existential_1(v44);
    }
  }
  static Logger.podcastsStatesCoordination.getter(Strong);
  v29 = swift_retain();
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v44[0] = v33;
    *(_DWORD *)v32 = 136315138;
    swift_bridgeObjectRetain();
    v47 = sub_69298(v42, v21, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_release(a1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v30, v31, v38, v32, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_release(a1);
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
  swift_beginAccess(v15, &v47, 0, 0);
  result = swift_weakLoadStrong(v15);
  if (result)
  {
    v35 = result;
    sub_150C8(result + 16, (uint64_t)v44);
    swift_release(v35);
    v36 = v45;
    v37 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    (*(void (**)(uint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v37 + 624))(v42, v21, v39 & 1, 0, v36, v37);
    return __swift_destroy_boxed_opaque_existential_1(v44);
  }
  return result;
}

uint64_t LibraryRemovalController.deleteAllRecentlyUnfollowedShowsSheetAction()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *object;
  uint64_t countAndFlagsBits;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;

  v0 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v0 - 8);
  v47 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&object - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v3);
  v43 = (char *)&object - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActionMetrics(0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&object - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10._countAndFlagsBits = 0xD000000000000024;
  v49._object = (void *)0xE000000000000000;
  v10._object = (void *)0x8000000000313FF0;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v49);
  object = v12._object;
  countAndFlagsBits = v12._countAndFlagsBits;

  v13 = objc_msgSend(v8, "mainBundle");
  v50._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0xD000000000000010;
  v14._object = (void *)0x800000000030B090;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v50._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v50);

  v17 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v17 + 16);
  v18 = swift_retain();
  static ActionMetrics.notInstrumented.getter(v18);
  v19 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_213C1C(v16._countAndFlagsBits, (uint64_t)v16._object, 1, (uint64_t)v7, (uint64_t)sub_2241D4, v17);
  swift_release_n(v17, 2);
  v21 = objc_msgSend(v8, "mainBundle");
  v51._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000010;
  v22._object = (void *)0x800000000030B090;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v51);

  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_2EF430;
  *(_QWORD *)(v26 + 32) = v20;
  v48 = v26;
  specialized Array._endMutation()(v26);
  v27 = v48;
  v28 = type metadata accessor for SheetAction(0);
  v29 = swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  *(_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v27;
  v30 = (uint64_t *)(v29 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v31 = (uint64_t)object;
  *v30 = countAndFlagsBits;
  v30[1] = v31;
  v32 = (_QWORD *)(v29 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v32 = 0;
  v32[1] = 0;
  *(_BYTE *)(v29 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = 1;
  v33 = type metadata accessor for ImpressionMetrics(0);
  v34 = (uint64_t)v43;
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v43, 1, 1, v33);
  v36 = static ActionMetrics.notInstrumented.getter(v35);
  UUID.init()(v36);
  v37 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v2, v47);
  *(_QWORD *)(v29 + 16) = v37;
  *(_QWORD *)(v29 + 24) = v39;
  *(Swift::String *)(v29 + 32) = v24;
  *(_BYTE *)(v29 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v29 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v7, v45);
  sub_23AB8(v34, v29 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v29;
}

uint64_t sub_222708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  v8 = static Logger.podcastsStatesCoordination.getter(v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "Deleting all recently unfollowed shows from library", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess(v6, v19, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v13 = result;
    sub_150C8(result + 16, (uint64_t)v16);
    swift_release(v13);
    v14 = v17;
    v15 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v15 + 176))(v14, v15);
    return __swift_destroy_boxed_opaque_existential_1(v16);
  }
  return result;
}

uint64_t LibraryRemovalController.unsaveAllConfirmationSheet(uuid:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;

  v54 = a1;
  v5 = type metadata accessor for UUID(0);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  __chkstk_darwin(v5);
  v57 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v7);
  v55 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ActionMetrics(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[5];
  v12 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 584))(a1, a2, v11, v12);
  v14 = v2[5];
  v15 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 632))(a1, a2, v14, v15);
  v18 = v17;
  v19 = (void *)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v19, "mainBundle");
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v62._object = (void *)0xE000000000000000;
  v21._object = (void *)0x8000000000314020;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v62);

  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v25 = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_2EA080;
  *(_QWORD *)(v25 + 56) = &type metadata for Int;
  *(_QWORD *)(v25 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v25 + 32) = v13;
  *(_QWORD *)(v25 + 96) = &type metadata for String;
  *(_QWORD *)(v25 + 104) = sub_22F20();
  *(_QWORD *)(v25 + 72) = v16;
  *(_QWORD *)(v25 + 80) = v18;
  v26 = static String.localizedStringWithFormat(_:_:)(v23._countAndFlagsBits, v23._object, v25);
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v19, "mainBundle");
  v63._object = (void *)0x8000000000314060;
  v30._object = (void *)0x8000000000314040;
  v30._countAndFlagsBits = 0xD000000000000013;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD000000000000013;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v63);

  v33 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v33 + 16);
  v34 = (_QWORD *)swift_allocObject(&unk_38AA58, 40, 7);
  v34[2] = v54;
  v34[3] = a2;
  v34[4] = v33;
  swift_bridgeObjectRetain();
  v35 = swift_retain();
  static ActionMetrics.notInstrumented.getter(v35);
  v36 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  v37 = sub_213C1C(v32._countAndFlagsBits, (uint64_t)v32._object, 1, (uint64_t)v10, (uint64_t)sub_22420C, (uint64_t)v34);
  swift_release(v33);
  swift_release(v34);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v39 = swift_allocObject(v38, 40, 7);
  *(_OWORD *)(v39 + 16) = xmmword_2EF430;
  *(_QWORD *)(v39 + 32) = v37;
  v61 = v39;
  specialized Array._endMutation()(v39);
  v40 = v61;
  v41 = type metadata accessor for SheetAction(0);
  v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  *(_QWORD *)(v42 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v40;
  v43 = (uint64_t *)(v42 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  *v43 = v26;
  v43[1] = v28;
  v44 = (_QWORD *)(v42 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v44 = 0;
  v44[1] = 0;
  *(_BYTE *)(v42 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = 1;
  v45 = type metadata accessor for ImpressionMetrics(0);
  v46 = (uint64_t)v55;
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v55, 1, 1, v45);
  v48 = static ActionMetrics.notInstrumented.getter(v47);
  v49 = v57;
  UUID.init()(v48);
  v50 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v60);
  *(_QWORD *)(v42 + 16) = v50;
  *(_QWORD *)(v42 + 24) = v52;
  *(_QWORD *)(v42 + 32) = 0;
  *(_QWORD *)(v42 + 40) = 0;
  *(_BYTE *)(v42 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v42 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v10, v58);
  sub_23AB8(v46, v42 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v42;
}

uint64_t sub_222D3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  static Logger.podcastsStatesCoordination.getter(v11);
  v12 = swift_bridgeObjectRetain_n(a2, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v15 = os_log_type_enabled(v13, v14);
  v29 = a1;
  if (v15)
  {
    v28 = v10;
    v16 = swift_slowAlloc(12, -1);
    v27 = v6;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc(32, -1);
    v30[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v33 = sub_69298(a1, a2, v30);
    v10 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v13, v14, "LibraryRemovalController.unsaveAllConfirmationSheet() - Confirming to unbookmark all episodes for podcast UUID %s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess(v10, &v33, 0, 0);
  result = swift_weakLoadStrong(v10);
  if (result)
  {
    v20 = result;
    sub_150C8(result + 16, (uint64_t)v30);
    swift_release(v20);
    v21 = v31;
    v22 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    v23 = swift_allocObject(&unk_38AB40, 32, 7);
    v24 = v29;
    *(_QWORD *)(v23 + 16) = v29;
    *(_QWORD *)(v23 + 24) = a2;
    v25 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v22 + 464);
    swift_bridgeObjectRetain();
    v25(v24, a2, sub_2242E0, v23, v21, v22);
    swift_release(v23);
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  return result;
}

uint64_t sub_222FBC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v9);
  v10 = swift_bridgeObjectRetain_n(a3, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v19 = v5;
    v14 = a2;
    v15 = (uint8_t *)v13;
    v16 = swift_slowAlloc(32, -1);
    v21 = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v20 = sub_69298(v14, a3, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl(&dword_0, v11, v12, "LibraryRemovalController.unsaveAllConfirmationSheet() - Confirmed to unbookmark all episodes for podcast UUID %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t LibraryRemovalController.removeAllDownloadsFromShowSheetAction(uuid:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;

  v53 = a1;
  v5 = type metadata accessor for UUID(0);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  __chkstk_darwin(v5);
  v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v7);
  v55 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ActionMetrics(0);
  v56 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[5];
  v12 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 632))(a1, a2, v11, v12);
  v15 = v14;
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v16, "mainBundle");
  v18._countAndFlagsBits = 0xD00000000000001ALL;
  v62._object = (void *)0xE000000000000000;
  v18._object = (void *)0x8000000000314080;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v62);

  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_22F20();
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v15;
  v23 = String.init(format:_:)(v20._countAndFlagsBits, v20._object, v22);
  v54 = v24;
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v16, "mainBundle");
  v26._countAndFlagsBits = 0xD00000000000001FLL;
  v63._object = (void *)0x80000000003140A0;
  v26._object = (void *)0x8000000000313760;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD000000000000010;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v63);

  v29 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v29 + 16);
  v30 = (_QWORD *)swift_allocObject(&unk_38AA80, 40, 7);
  v31 = v53;
  v30[2] = v29;
  v30[3] = v31;
  v30[4] = a2;
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  static ActionMetrics.notInstrumented.getter(v32);
  v33 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = sub_213C1C(v28._countAndFlagsBits, (uint64_t)v28._object, 1, (uint64_t)v10, (uint64_t)sub_224224, (uint64_t)v30);
  swift_release(v29);
  swift_release(v30);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v36 = swift_allocObject(v35, 40, 7);
  *(_OWORD *)(v36 + 16) = xmmword_2EF430;
  *(_QWORD *)(v36 + 32) = v34;
  v61 = v36;
  specialized Array._endMutation()(v36);
  v37 = v61;
  v38 = type metadata accessor for SheetAction(0);
  v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  *(_QWORD *)(v39 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v37;
  v40 = (uint64_t *)(v39 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v41 = v54;
  *v40 = v23;
  v40[1] = v41;
  v42 = (_QWORD *)(v39 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v42 = 0;
  v42[1] = 0;
  *(_BYTE *)(v39 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = 1;
  v43 = type metadata accessor for ImpressionMetrics(0);
  v44 = (uint64_t)v55;
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v55, 1, 1, v43);
  v46 = static ActionMetrics.notInstrumented.getter(v45);
  v47 = v57;
  UUID.init()(v46);
  v48 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v50 = v49;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v60);
  *(_QWORD *)(v39 + 16) = v48;
  *(_QWORD *)(v39 + 24) = v50;
  *(_QWORD *)(v39 + 32) = 0;
  *(_QWORD *)(v39 + 40) = 0;
  *(_BYTE *)(v39 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v39 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v10, v58);
  sub_23AB8(v44, v39 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v39;
}

uint64_t sub_223608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_150C8(result + 16, (uint64_t)v10);
    swift_release(v7);
    v8 = v11;
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 544))(a2, a3, 0, v8, v9);
    return __swift_destroy_boxed_opaque_existential_1(v10);
  }
  return result;
}

uint64_t LibraryRemovalController.removeAllDownloadsFromAllShowsSheetAction()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  Swift::String v58;

  v1 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v52 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v3);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for ActionMetrics(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[5];
  v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 568))(v7, v8);
  v10 = (void *)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v10, "mainBundle");
  v12._countAndFlagsBits = 0xD00000000000002ALL;
  v57._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000000003140C0;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v57._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v57);

  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v16 = swift_allocObject(v15, 72, 7);
  v48 = xmmword_2EA0D0;
  *(_OWORD *)(v16 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v16 + 56) = &type metadata for Int;
  *(_QWORD *)(v16 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v16 + 32) = v9;
  v17 = static String.localizedStringWithFormat(_:_:)(v14._countAndFlagsBits, v14._object, v16);
  v49 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v10, "mainBundle");
  v58._object = (void *)0xE000000000000000;
  v20._object = (void *)0x80000000003140F0;
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v58._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v58);

  v23 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v23 + 16) = v48;
  *(_QWORD *)(v23 + 56) = &type metadata for Int;
  *(_QWORD *)(v23 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v23 + 32) = v9;
  v24 = static String.localizedStringWithFormat(_:_:)(v22._countAndFlagsBits, v22._object, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v27 + 16);
  v28 = swift_retain();
  static ActionMetrics.notInstrumented.getter(v28);
  v29 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = sub_213C1C(v24, v26, 1, (uint64_t)v6, (uint64_t)sub_224230, v27);
  swift_release_n(v27, 2);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC590);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2EF430;
  *(_QWORD *)(v32 + 32) = v30;
  v56 = v32;
  specialized Array._endMutation()(v32);
  v33 = v56;
  v34 = type metadata accessor for SheetAction(0);
  v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  *(_QWORD *)(v35 + OBJC_IVAR____TtC8ShelfKit11SheetAction_actions) = v33;
  v36 = (uint64_t *)(v35 + OBJC_IVAR____TtC8ShelfKit11SheetAction_sheetTitle);
  v37 = v49;
  *v36 = v17;
  v36[1] = v37;
  v38 = (_QWORD *)(v35 + OBJC_IVAR____TtC8ShelfKit11SheetAction_message);
  *v38 = 0;
  v38[1] = 0;
  *(_BYTE *)(v35 + OBJC_IVAR____TtC8ShelfKit11SheetAction_isCancelable) = 1;
  v39 = type metadata accessor for ImpressionMetrics(0);
  v40 = (uint64_t)v50;
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v50, 1, 1, v39);
  v42 = static ActionMetrics.notInstrumented.getter(v41);
  v43 = v52;
  UUID.init()(v42);
  v44 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v46 = v45;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v55);
  *(_QWORD *)(v35 + 16) = v44;
  *(_QWORD *)(v35 + 24) = v46;
  *(_QWORD *)(v35 + 32) = 0;
  *(_QWORD *)(v35 + 40) = 0;
  *(_BYTE *)(v35 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v35 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v6, v53);
  sub_23AB8(v40, v35 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v35;
}

uint64_t sub_223B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_150C8(result + 16, (uint64_t)v6);
    swift_release(v3);
    v4 = v7;
    v5 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v5 + 552))(v4, v5);
    return __swift_destroy_boxed_opaque_existential_1(v6);
  }
  return result;
}

UIAlertController __swiftcall LibraryRemovalController.removeAllDownloadsAlertController(uuid:)(Swift::String uuid)
{
  _QWORD *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  _QWORD *v22;
  NSString v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  NSString v30;
  id v31;
  _QWORD aBlock[5];
  _QWORD *v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;

  object = uuid._object;
  countAndFlagsBits = uuid._countAndFlagsBits;
  v4 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v6 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 632))(countAndFlagsBits, object, v4, v5);
  v8 = v7;
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v11._countAndFlagsBits = 0xD00000000000001ALL;
  v35._object = (void *)0xE000000000000000;
  v11._object = (void *)0x8000000000314080;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v35);

  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_22F20();
  *(_QWORD *)(v15 + 32) = v6;
  *(_QWORD *)(v15 + 40) = v8;
  String.init(format:_:)(v13._countAndFlagsBits, v13._object, v15);
  swift_bridgeObjectRelease();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, 0, 0);

  v18 = objc_msgSend(v9, "mainBundle");
  v36._object = (void *)0x80000000003140A0;
  v19._object = (void *)0x8000000000314110;
  v19._countAndFlagsBits = 0xD000000000000010;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0xD000000000000010;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v36);

  v21 = swift_allocObject(&unk_38A8F0, 24, 7);
  swift_weakInit(v21 + 16);
  v22 = (_QWORD *)swift_allocObject(&unk_38AAA8, 40, 7);
  v22[2] = v21;
  v22[3] = countAndFlagsBits;
  v22[4] = object;
  swift_retain();
  swift_bridgeObjectRetain();
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_22427C;
  v34 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_148954;
  aBlock[3] = &block_descriptor_48;
  v24 = _Block_copy(aBlock);
  swift_release(v34);
  v25 = (void *)objc_opt_self(UIAlertAction);
  v26 = objc_msgSend(v25, "actionWithTitle:style:handler:", v23, 2, v24);
  _Block_release(v24);
  swift_release(v21);

  objc_msgSend(v17, "addAction:", v26);
  v27 = objc_msgSend(v9, "mainBundle");
  v37._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0x6C65636E6143;
  v28._object = (void *)0xE600000000000000;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v37);

  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v25, "actionWithTitle:style:handler:", v30, 1, 0);

  objc_msgSend(v17, "addAction:", v31);
  return (UIAlertController)v17;
}

uint64_t sub_223FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    sub_150C8(result + 16, (uint64_t)v11);
    swift_release(v8);
    v9 = v12;
    v10 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 544))(a3, a4, 0, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1(v11);
  }
  return result;
}

unint64_t sub_22404C(uint64_t a1, uint64_t a2)
{
  return (unint64_t)LibraryRemovalController.removalOptionsAfterUnfollow(uuid:)(*(Swift::String *)&a1);
}

unint64_t sub_22406C(uint64_t a1, uint64_t a2)
{
  return (unint64_t)LibraryRemovalController.removeShowFromLibraryAlertController(uuid:)(*(Swift::String *)&a1);
}

uint64_t sub_22408C(uint64_t a1)
{
  return LibraryRemovalController.removeAndUnfollowOptionsSheetAction(show:)(a1);
}

uint64_t sub_2240AC(uint64_t a1, uint64_t a2)
{
  return LibraryRemovalController.unsaveAllConfirmationSheet(uuid:)(a1, a2);
}

uint64_t sub_2240CC(uint64_t a1, uint64_t a2)
{
  return LibraryRemovalController.removeAllDownloadsFromShowSheetAction(uuid:)(a1, a2);
}

uint64_t sub_2240EC()
{
  return LibraryRemovalController.removeAllDownloadsFromAllShowsSheetAction()();
}

UIAlertController sub_22410C(uint64_t a1, uint64_t a2)
{
  return LibraryRemovalController.removeAllDownloadsAlertController(uuid:)(*(Swift::String *)&a1);
}

uint64_t sub_22412C()
{
  return LibraryRemovalController.deleteAllRecentlyUnfollowedShowsSheetAction()();
}

uint64_t sub_22414C()
{
  return objectdestroy_26Tm((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_224158()
{
  uint64_t v0;

  return sub_221FCC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)"Unfollowing and removing episodes from podcast %{public}s due to user action", 76, "removeAndUnfollowOptionsSheetAction with saved episodes for podcasts %s", 1);
}

uint64_t sub_224190()
{
  return objectdestroy_26Tm((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_22419C()
{
  uint64_t v0;

  return sub_221FCC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t)"Unfollowing podcast %{public}s due to user action", 49, "removeAndUnfollowOptionsSheetAction without saved episodes for podcasts %s", 0);
}

uint64_t sub_2241D4()
{
  uint64_t v0;

  return sub_222708(v0);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_22420C()
{
  uint64_t v0;

  return sub_222D3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_224218()
{
  return objectdestroy_26Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_224224()
{
  uint64_t *v0;

  return sub_223608(v0[2], v0[3], v0[4]);
}

uint64_t sub_224230()
{
  uint64_t v0;

  return sub_223B38(v0);
}

uint64_t sub_224238()
{
  return objectdestroy_26Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t objectdestroy_26Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_22427C(uint64_t a1)
{
  uint64_t *v1;

  return sub_223FA4(a1, v1[2], v1[3], v1[4]);
}

uint64_t dispatch thunk of LibraryRemovalControllerProtocol.removeAllDownloadsAlertController(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t type metadata accessor for LibraryRemovalController()
{
  return objc_opt_self(_TtC8ShelfKit24LibraryRemovalController);
}

uint64_t method lookup function for LibraryRemovalController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LibraryRemovalController);
}

uint64_t sub_2242BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2242E0(uint64_t a1)
{
  uint64_t v1;

  return sub_222FBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t static HighlightsPageIntent.kind.getter()
{
  return 0xD000000000000014;
}

void sub_224324(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x8000000000300680;
}

uint64_t sub_224344(char *a1, char *a2)
{
  return sub_1E1314(*a1, *a2);
}

Swift::Int sub_224350()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x656372756F736572;
  else
    v2 = 7562345;
  if (v1)
    v3 = 0xEC000000736C7255;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_2243D0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x656372756F736572;
  else
    v2 = 7562345;
  if (*v1)
    v3 = 0xEC000000736C7255;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_22442C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x656372756F736572;
  else
    v2 = 7562345;
  if (v1)
    v3 = 0xEC000000736C7255;
  else
    v3 = 0xE300000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_2244A8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375928, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_224504(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7562345;
  if (*v1)
    v2 = 0x656372756F736572;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xEC000000736C7255;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_224544()
{
  _BYTE *v0;

  if (*v0)
    return 0x656372756F736572;
  else
    return 7562345;
}

uint64_t sub_224580@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  uint64_t result;
  char v7;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375928, v3);
  result = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_2245E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_2247CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_224608(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_2247CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HighlightsPageIntent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C27F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v13 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_2247CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HighlightsPageIntent.CodingKeys, &type metadata for HighlightsPageIntent.CodingKeys, v11, v9, v10);
  v15 = v8;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
  sub_8B71C(&qword_3B52B0, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v15);
  if (!v2)
  {
    v15 = v13;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B52B8);
    sub_8B77C(&qword_3B52C0, &qword_3B52C8, (uint64_t)&protocol conformance descriptor for URL, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2247CC()
{
  unint64_t result;

  result = qword_3C2800;
  if (!qword_3C2800)
  {
    result = swift_getWitnessTable(&unk_30092C);
    atomic_store(result, (unint64_t *)&qword_3C2800);
  }
  return result;
}

uint64_t HighlightsPageIntent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2808);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_2247CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for HighlightsPageIntent.CodingKeys, &type metadata for HighlightsPageIntent.CodingKeys, v11, v9, v10);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
  v18 = 0;
  sub_8B71C(&qword_3B52D8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v19, v12);
  v13 = v19;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B52B8);
  v18 = 1;
  sub_8B77C(&qword_3B52E0, &qword_3B52E8, (uint64_t)&protocol conformance descriptor for URL, (uint64_t)&protocol conformance descriptor for <A> [A]);
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v19, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v19;
  *a2 = v13;
  a2[1] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_224A20()
{
  unint64_t result;

  result = qword_3C2810;
  if (!qword_3C2810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HighlightsPageIntent);
    atomic_store(result, (unint64_t *)&qword_3C2810);
  }
  return result;
}

uint64_t sub_224A68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return HighlightsPageIntent.init(from:)(a1, a2);
}

uint64_t sub_224A7C(_QWORD *a1)
{
  return HighlightsPageIntent.encode(to:)(a1);
}

uint64_t sub_224A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_224CB4();
  return CustomJSValueConvertible<>.jsRepresentation(in:)(a1, a2, a3, v6);
}

uint64_t sub_224AEC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_461C8(a1, a2, a3);
}

ValueMetadata *type metadata accessor for HighlightsPageIntent()
{
  return &type metadata for HighlightsPageIntent;
}

uint64_t storeEnumTagSinglePayload for HighlightsPageIntent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_224B5C + 4 * byte_300695[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_224B90 + 4 * byte_300690[v4]))();
}

uint64_t sub_224B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_224B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x224BA0);
  return result;
}

uint64_t sub_224BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x224BB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_224BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_224BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HighlightsPageIntent.CodingKeys()
{
  return &type metadata for HighlightsPageIntent.CodingKeys;
}

unint64_t sub_224BE0()
{
  unint64_t result;

  result = qword_3C2818;
  if (!qword_3C2818)
  {
    result = swift_getWitnessTable(&unk_300904);
    atomic_store(result, (unint64_t *)&qword_3C2818);
  }
  return result;
}

unint64_t sub_224C28()
{
  unint64_t result;

  result = qword_3C2820;
  if (!qword_3C2820)
  {
    result = swift_getWitnessTable(&unk_30083C);
    atomic_store(result, (unint64_t *)&qword_3C2820);
  }
  return result;
}

unint64_t sub_224C70()
{
  unint64_t result;

  result = qword_3C2828;
  if (!qword_3C2828)
  {
    result = swift_getWitnessTable(&unk_300864);
    atomic_store(result, (unint64_t *)&qword_3C2828);
  }
  return result;
}

unint64_t sub_224CB4()
{
  unint64_t result;

  result = qword_3C2830;
  if (!qword_3C2830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HighlightsPageIntent);
    atomic_store(result, (unint64_t *)&qword_3C2830);
  }
  return result;
}

uint64_t LibraryShowLockup.__allocating_init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,unsigned __int8 a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;

  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = sub_2267B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1, a11, a12, a13, a14 | ((HIDWORD(a14) & 1) << 32), a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24);
  swift_release(a19);
  swift_release(a18);
  swift_release(a17);
  swift_release(a15);
  return v25;
}

uint64_t LibraryShowLockup.groupedEpisodesVariant(episodeCount:clickAction:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v23;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000000310D20;
  v7._countAndFlagsBits = 0xD000000000000015;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v23);

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = a1;
  v12 = static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
  v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v19 = v18;
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21 = sub_2260C4(v16, v15, v12, v14, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t LibraryShowLockup.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8));
  return v1;
}

uint64_t LibraryShowLockup.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8));
  return v1;
}

uint64_t LibraryShowLockup.addedDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate);
}

uint64_t LibraryShowLockup.providerAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction));
}

uint64_t LibraryShowLockup.isSubscribed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed);
}

uint64_t LibraryShowLockup.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return LibraryShowLockup.init(deserializing:using:)(a1, a2);
}

uint64_t LibraryShowLockup.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v42 = a2;
  v5 = type metadata accessor for JSONContext(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  __chkstk_darwin(v5);
  v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONObject(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v38 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  swift_retain();
  v16 = a1;
  v17 = JSONObject.subscript.getter(1684632949, 0xE400000000000000);
  v18 = JSONObject.string.getter(v17);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v15, v7);
  if (v20)
  {
    v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
    *v22 = v18;
    v22[1] = v20;
    v23 = v16;
    v24 = JSONObject.subscript.getter(1701667182, 0xE400000000000000);
    v25 = JSONObject.string.getter(v24);
    v27 = v26;
    v21(v12, v7);
    v28 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
    *v28 = v25;
    v28[1] = v27;
    v29 = v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate;
    *(_QWORD *)v29 = 0;
    *(_BYTE *)(v29 + 8) = 1;
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction) = 0;
    *(_BYTE *)(v3 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed) = 2;
    swift_release(v3);
    v30 = (uint64_t)v38;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v38, v16, v7);
    v32 = v40;
    v31 = v41;
    v33 = (uint64_t)v39;
    v34 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v42, v41);
    v35 = LegacyLockup.init(deserializing:using:)(v30, v33);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
    v21(v23, v7);
    return (uint64_t)v35;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "ShelfKit/LibraryShowLockup.swift", 32, 2, 40, 0);
    __break(1u);
  }
  return result;
}

uint64_t LibraryShowLockup.init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,unsigned __int8 a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  v24 = sub_2267B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1, a11, a12, a13, a14 | ((HIDWORD(a14) & 1) << 32), a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24);
  swift_release(a19);
  swift_release(a18);
  swift_release(a17);
  swift_release(a15);
  return v24;
}

NSObject_optional __swiftcall LibraryShowLockup.appEntityAnnotation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  Swift::Bool v15;
  _QWORD v16[2];
  NSObject_optional result;

  v1 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  if ((AdamID.isEmpty.getter(v4) & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    v16[0] = v4;
    v7 = sub_144B4();
    v5 = BinaryInteger.description.getter(&type metadata for UInt64, v7);
    v6 = v8;
  }
  v16[0] = _swiftEmptyArrayStorage;
  v9 = sub_F1C0((unint64_t *)&qword_3B1D18, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B1D20);
  v11 = sub_29210();
  dispatch thunk of SetAlgebra.init<A>(_:)(v16, v10, v11, v1, v9);
  v12 = type metadata accessor for ShowEntity(0);
  v16[0] = v5;
  v16[1] = v6;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v13 = sub_F1C0(&qword_3B9668, (void (*)(uint64_t))&type metadata accessor for ShowEntity, (uint64_t)&protocol conformance descriptor for ShowEntity);
  v14 = (objc_class *)AppEntityViewAnnotation.init<A>(entityType:identifier:state:)(v12, v16, v3, v12, v13);
  result.value.isa = v14;
  result.is_nil = v15;
  return result;
}

uint64_t LibraryShowLockup.copy(withSubtitles:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[3];
  _QWORD v53[3];
  _BYTE v54[24];
  _BYTE v55[16];
  uint64_t v56;
  _BYTE v57[8];

  v2 = v1;
  v50 = a1;
  v49 = *v1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v48);
  v41 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v4);
  v47 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9EF0);
  __chkstk_darwin(v31);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v11);
  v44 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
  v46 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  v35 = v13;
  v45 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  sub_267BC((uint64_t)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, v44, &qword_3BEB70);
  v14 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8);
  v43 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  v34 = v14;
  v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8);
  v42 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  v33 = v15;
  v40 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate);
  v39 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate + 8);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal + 8);
  v38 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal);
  v32 = v16;
  v37 = *(unsigned int *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating);
  v36 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating + 4);
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction;
  swift_beginAccess(v17, v57, 0, 0);
  sub_267BC(v17, (uint64_t)v10, &qword_3B3C88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Lazy.wrappedValue.getter(&v56, v8);
  sub_1459C((uint64_t)v10, &qword_3B3C88);
  v18 = v56;
  v19 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__clickAction, v55, 0, 0);
  sub_267BC(v19, (uint64_t)v7, &qword_3B9EF0);
  Lazy.wrappedValue.getter(&v56, v31);
  sub_1459C((uint64_t)v7, &qword_3B9EF0);
  v20 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, v54, 0, 0);
  sub_267BC(v21, (uint64_t)v10, &qword_3B3C88);
  swift_retain();
  Lazy.wrappedValue.getter(v53, v8);
  sub_1459C((uint64_t)v10, &qword_3B3C88);
  v22 = v53[0];
  v23 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, v53, 0, 0);
  sub_267BC(v23, (uint64_t)v10, &qword_3B3C88);
  Lazy.wrappedValue.getter(v52, v8);
  sub_1459C((uint64_t)v10, &qword_3B3C88);
  v24 = v52[0];
  v25 = *((_BYTE *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed);
  LOBYTE(v8) = *((_BYTE *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit);
  v26 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v52, 0, 0);
  v27 = v41;
  sub_267BC(v26, v41, &qword_3BA270);
  v28 = v47;
  Lazy.wrappedValue.getter(v47, v48);
  sub_1459C(v27, &qword_3BA270);
  swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  v51 = v36;
  v29 = sub_2267B0(v46, v35, v45, v44, v43, v34, v42, v33, v40, v39, v50, v38, v32, v37 | ((unint64_t)v36 << 32), v18, (uint64_t)&v56, v20, v22, v24,
          v25,
          v8,
          0,
          0,
          (uint64_t)v28);
  swift_release(v20);
  swift_release(v24);
  swift_release(v22);
  swift_release(v18);
  return v29;
}

uint64_t LibraryShowLockup.copy(withClickAction:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD v51[3];
  _QWORD v52[3];
  _BYTE v53[24];
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _BYTE v57[8];

  v2 = v1;
  v31 = a1;
  v49 = *v1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v48);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v5);
  v47 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v10);
  v12 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
  v45 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  v43 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  v46 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC((uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, v46, &qword_3BEB70);
  v13 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8);
  v41 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  v14 = *(void **)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8);
  v40 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  v38 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate);
  v37 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate + 8);
  v15 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_subtitles);
  v16 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal + 8);
  v35 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal);
  v33 = *(unsigned int *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating);
  v32 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating + 4);
  v17 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction, v57, 0, 0);
  sub_267BC(v17, (uint64_t)v9, &qword_3B3C88);
  v34 = v16;
  v18 = v31;
  swift_bridgeObjectRetain();
  v44 = v12;
  swift_bridgeObjectRetain();
  v42 = v13;
  swift_bridgeObjectRetain();
  v39 = v14;
  swift_bridgeObjectRetain();
  v36 = v15;
  swift_bridgeObjectRetain();
  Lazy.wrappedValue.getter(&v54, v7);
  sub_1459C((uint64_t)v9, &qword_3B3C88);
  v19 = v54;
  if (v18)
  {
    *((_QWORD *)&v55 + 1) = type metadata accessor for FlowAction(0);
    v56 = sub_F1C0((unint64_t *)&qword_3B0C40, (void (*)(uint64_t))type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v54 = v18;
  }
  else
  {
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
  }
  v20 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, v53, 0, 0);
  sub_267BC(v21, (uint64_t)v9, &qword_3B3C88);
  swift_retain();
  swift_retain();
  Lazy.wrappedValue.getter(v52, v7);
  sub_1459C((uint64_t)v9, &qword_3B3C88);
  v22 = v52[0];
  v23 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, v52, 0, 0);
  sub_267BC(v23, (uint64_t)v9, &qword_3B3C88);
  Lazy.wrappedValue.getter(v51, v7);
  sub_1459C((uint64_t)v9, &qword_3B3C88);
  v24 = v51[0];
  LOBYTE(v23) = *((_BYTE *)v2 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed);
  v25 = *((_BYTE *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit);
  v26 = (uint64_t)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v51, 0, 0);
  sub_267BC(v26, (uint64_t)v4, &qword_3BA270);
  v27 = v47;
  Lazy.wrappedValue.getter(v47, v48);
  sub_1459C((uint64_t)v4, &qword_3BA270);
  swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  v50 = v32;
  v28 = sub_2267B0(v45, v44, v43, v46, v41, v42, v40, v39, v38, v37, v36, v35, v34, v33 | ((unint64_t)v32 << 32), v19, (uint64_t)&v54, v20, v22, v24,
          v23,
          v25,
          0,
          0,
          (uint64_t)v27);
  swift_release(v20);
  swift_release(v24);
  swift_release(v22);
  swift_release(v19);
  return v28;
}

uint64_t sub_2260C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _QWORD v63[3];
  _QWORD v64[3];
  _BYTE v65[24];
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[12];

  v6 = v5;
  v41 = a5;
  v60 = a2;
  v61 = a1;
  v59 = *v5;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA270);
  __chkstk_darwin(v57);
  v40 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v10);
  v58 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3C88);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v15);
  v17 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8);
  v55 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  v53 = *(_QWORD **)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  v56 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_267BC((uint64_t)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, v56, &qword_3BEB70);
  v18 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8);
  v52 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  v19 = *(void **)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8);
  v50 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  v48 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate);
  v47 = *((unsigned __int8 *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate + 8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8730);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_2EA0D0;
  *(_QWORD *)(v21 + 32) = a3;
  *(_QWORD *)(v21 + 40) = a4;
  v22 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal + 8);
  v46 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_ordinal);
  v44 = *(unsigned int *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating);
  v43 = *((unsigned __int8 *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_rating + 4);
  v23 = (uint64_t)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__buttonAction, v69, 0, 0);
  sub_267BC(v23, (uint64_t)v14, &qword_3B3C88);
  v45 = v22;
  swift_bridgeObjectRetain();
  v54 = v17;
  swift_bridgeObjectRetain();
  v24 = v41;
  swift_bridgeObjectRetain();
  v51 = v18;
  swift_bridgeObjectRetain();
  v49 = v19;
  swift_bridgeObjectRetain();
  Lazy.wrappedValue.getter(&v66, v12);
  sub_1459C((uint64_t)v14, &qword_3B3C88);
  v42 = v66;
  if (v24)
  {
    *((_QWORD *)&v67 + 1) = type metadata accessor for FlowAction(0);
    v68 = sub_F1C0((unint64_t *)&qword_3B0C40, (void (*)(uint64_t))type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v66 = v24;
  }
  else
  {
    v68 = 0;
    v66 = 0u;
    v67 = 0u;
  }
  v25 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction);
  v26 = (uint64_t)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__playAction, v65, 0, 0);
  sub_267BC(v26, (uint64_t)v14, &qword_3B3C88);
  swift_retain();
  swift_retain();
  Lazy.wrappedValue.getter(v64, v12);
  sub_1459C((uint64_t)v14, &qword_3B3C88);
  v27 = v64[0];
  v28 = (uint64_t)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__contextAction, v64, 0, 0);
  sub_267BC(v28, (uint64_t)v14, &qword_3B3C88);
  Lazy.wrappedValue.getter(v63, v12);
  sub_1459C((uint64_t)v14, &qword_3B3C88);
  v29 = v63[0];
  v30 = *((_BYTE *)v6 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed);
  v31 = *((_BYTE *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit);
  v32 = (uint64_t)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup__impressionMetrics, v63, 0, 0);
  v33 = v32;
  v34 = v40;
  sub_267BC(v33, v40, &qword_3BA270);
  v35 = v58;
  Lazy.wrappedValue.getter(v58, v57);
  sub_1459C(v34, &qword_3BA270);
  swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
  v36 = swift_bridgeObjectRetain();
  v62 = v43;
  v37 = v42;
  v38 = sub_2267B0(v55, v54, v53, v56, v52, v51, v50, v49, v48, v47, v21, v46, v45, v44 | ((unint64_t)v43 << 32), v42, (uint64_t)&v66, v25, v27, v29,
          v30,
          v31,
          v61,
          v36,
          (uint64_t)v35);
  swift_release(v25);
  swift_release(v29);
  swift_release(v27);
  swift_release(v37);
  return v38;
}

void LibraryShowLockup.init(id:adamId:isExplicit:icon:title:subtitles:eyebrow:titleAccessibilityLabel:genreNames:ordinal:releaseDate:releaseFrequency:rating:ratingCount:buttonAction:clickAction:contextAction:playAction:previewAction:subtitleAction:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.LibraryShowLockup", 26, "init(id:adamId:isExplicit:icon:title:subtitles:eyebrow:titleAccessibilityLabel:genreNames:ordinal:releaseDate:releaseFrequency:rating:ratingCount:buttonAction:clickAction:contextAction:playAction:previewAction:subtitleAction:impressionMetrics:)", 244, 0);
  __break(1u);
}

uint64_t sub_2266A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name + 8));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction));
}

uint64_t LibraryShowLockup.deinit()
{
  uint64_t v0;

  v0 = LegacyLockup.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction));
  return v0;
}

uint64_t LibraryShowLockup.__deallocating_deinit()
{
  uint64_t v0;

  v0 = LegacyLockup.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_2267B0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,unsigned __int8 a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v73 = a8;
  v74 = a7;
  v58 = a6;
  v71 = a24;
  v72 = a4;
  v68 = a21;
  v63 = a18;
  v64 = a19;
  v69 = a3;
  v70 = a16;
  v61 = a14;
  v62 = a15;
  v65 = a12;
  v66 = a13;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v28);
  v59 = (uint64_t)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v30);
  v60 = (uint64_t)&v58 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_uuid);
  *v33 = a1;
  v33[1] = a2;
  v34 = (_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_name);
  v35 = v58;
  *v34 = a5;
  v34[1] = v35;
  *(_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_providerAction) = a17;
  v36 = v24 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_addedDate;
  *(_QWORD *)v36 = a9;
  *(_BYTE *)(v36 + 8) = a10 & 1;
  *(_BYTE *)(v24 + OBJC_IVAR____TtC8ShelfKit17LibraryShowLockup_isSubscribed) = a20;
  v67 = a11;
  if (a23)
  {
    swift_retain();
    v38 = (uint64_t)v73;
    v39 = a23;
  }
  else
  {
    if (v73)
      v40 = v74;
    else
      v40 = 0;
    if (v73)
      v41 = v73;
    else
      v41 = (void *)0xE000000000000000;
    if (a11)
      v42 = (_QWORD *)a11;
    else
      v42 = _swiftEmptyArrayStorage;
    v75 = v31;
    v76 = a2;
    swift_retain();
    swift_bridgeObjectRetain_n(a2, 2);
    swift_bridgeObjectRetain();
    v43._countAndFlagsBits = v40;
    v43._object = v41;
    String.append(_:)(v43);
    v44 = v76;
    v45 = v42[2];
    if (v45)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = (void **)(v42 + 5);
      do
      {
        v47 = (uint64_t)*(v46 - 1);
        v48 = *v46;
        swift_bridgeObjectRetain();
        v49._countAndFlagsBits = v47;
        v49._object = v48;
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        v46 += 2;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v75;
      v44 = v76;
    }
    else
    {
      v50 = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = (uint64_t)v73;
    a22 = v50;
    v39 = v44;
  }
  v51 = v72;
  v52 = v60;
  sub_267BC(v72, v60, &qword_3BEB70);
  v53 = v70;
  sub_267BC(v70, (uint64_t)&v75, &qword_3B0C50);
  v54 = v71;
  v55 = v59;
  sub_267BC(v71, v59, (uint64_t *)&unk_3B8790);
  v56 = sub_19C468(a22, v39, v69, v68 & 1, v52, v74, v38, v67, 0, 0, 0, 0, 0, v65, v66, 0, 0, 0, v61 | ((HIDWORD(v61) & 1) << 32),
          0,
          1u,
          v62,
          (uint64_t)&v75,
          v64,
          v63,
          0,
          0,
          v55);
  sub_1459C(v54, (uint64_t *)&unk_3B8790);
  sub_1459C(v53, &qword_3B0C50);
  sub_1459C(v51, &qword_3BEB70);
  return v56;
}

uint64_t sub_226B78()
{
  return type metadata accessor for LibraryShowLockup(0);
}

uint64_t type metadata accessor for LibraryShowLockup(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2860;
  if (!qword_3C2860)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryShowLockup);
  return result;
}

uint64_t sub_226BBC(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = &unk_3009B8;
  v2[1] = &unk_3009D0;
  v2[2] = &unk_3009E8;
  v2[3] = &unk_300A00;
  v2[4] = &unk_300A18;
  return swift_updateClassMetadata2(a1, 256, 5, v2, a1 + 448);
}

uint64_t method lookup function for LibraryShowLockup(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LibraryShowLockup);
}

uint64_t dispatch thunk of LibraryShowLockup.__allocating_init(uuid:adamId:icon:name:title:addedDate:subtitles:ordinal:rating:buttonAction:clickAction:providerAction:playAction:contextAction:isSubscribed:isExplicit:shelfUniqueId:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 488))(a1, a2, a3, a4, a5, a6);
}

NSString sub_226CA4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3C2A78 = (uint64_t)result;
  return result;
}

id static RemotePersonalizationNotificationDetails.notificationName.getter()
{
  if (qword_3B01D0 != -1)
    swift_once(&qword_3B01D0, sub_226CA4);
  return (id)qword_3C2A78;
}

ValueMetadata *type metadata accessor for RemotePersonalizationNotificationDetails()
{
  return &type metadata for RemotePersonalizationNotificationDetails;
}

uint64_t sub_226D28(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t sub_226D6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t sub_226D88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t _s8RecorderCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s8RecorderCMn);
}

uint64_t SeeAllEpisodesPresenter.dismiss.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 136, v2, 0, 0);
  return swift_retain(*(_QWORD *)(v0 + 136));
}

uint64_t SeeAllEpisodesPresenter.dismiss.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 136, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 136) = a1;
  return swift_release(v3);
}

uint64_t (*SeeAllEpisodesPresenter.dismiss.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 136, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_226E6C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 152, v8, 0, 0);
  v5 = *(_QWORD *)(v3 + 152);
  v4 = *(_QWORD *)(v3 + 160);
  v6 = swift_allocObject(&unk_38B060, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_327F0;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_226EE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_38B038, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess(*a2 + 152, v9, 1, 0);
  v7 = *(_QWORD *)(v6 + 160);
  *(_QWORD *)(v6 + 152) = sub_327F0;
  *(_QWORD *)(v6 + 160) = v5;
  swift_retain();
  return swift_release(v7);
}

uint64_t SeeAllEpisodesPresenter.rebuildMenuBar.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 152, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 152);
  swift_retain(*(_QWORD *)(v0 + 160));
  return v1;
}

uint64_t SeeAllEpisodesPresenter.rebuildMenuBar.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 152, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 160);
  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return swift_release(v5);
}

uint64_t (*SeeAllEpisodesPresenter.rebuildMenuBar.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 152, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t SeeAllEpisodesPresenter.refreshControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  if (*(_QWORD *)(v0 + 168))
  {
    v1 = *(_QWORD *)(v0 + 168);
  }
  else
  {
    v2 = v0;
    v6 = 1;
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2770);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    v1 = CurrentValueSubject.init(_:)(&v6);
    v4 = *(_QWORD *)(v2 + 168);
    *(_QWORD *)(v2 + 168) = v1;
    swift_retain();
    swift_release(v4);
  }
  swift_retain();
  return v1;
}

uint64_t SeeAllEpisodesPresenter.refreshControls.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 168) = a1;
  return swift_release(v2);
}

uint64_t (*SeeAllEpisodesPresenter.refreshControls.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SeeAllEpisodesPresenter.refreshControls.getter();
  return sub_227108;
}

uint64_t sub_227108(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 168) = v2;
  return swift_release(v3);
}

uint64_t SeeAllEpisodesPresenter.paginatedPublisher.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 192, v2, 0, 0);
  return swift_retain(*(_QWORD *)(v0 + 192));
}

uint64_t SeeAllEpisodesPresenter.paginatedPublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 192, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 192) = a1;
  return swift_release(v3);
}

uint64_t (*SeeAllEpisodesPresenter.paginatedPublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 192, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SeeAllEpisodesPresenter.filters.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filters));
}

uint64_t SeeAllEpisodesPresenter.selectedFilter.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter));
}

uint64_t SeeAllEpisodesPresenter.filteringEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t SeeAllEpisodesPresenter.filteringEnabled.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*SeeAllEpisodesPresenter.filteringEnabled.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SeeAllEpisodesPresenter.Configuration.showAdamID.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t SeeAllEpisodesPresenter.Configuration.filter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_43568(v1, *(_BYTE *)(v0 + 40));
  return v1;
}

uint64_t SeeAllEpisodesPresenter.Configuration.filter.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_4357C(*(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 40) = a2;
  return result;
}

uint64_t SeeAllEpisodesPresenter.Configuration.showsPageHeader.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

void (__swiftcall *SeeAllEpisodesPresenter.Configuration.showsPageHeader.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t SeeAllEpisodesPresenter.Configuration.init(showUUID:showAdamID:filter:showsPageHeader:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6;
  *(_BYTE *)(a8 + 41) = a7;
  return result;
}

uint64_t SeeAllEpisodesPresenter.__allocating_init(asPartOf:with:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  SeeAllEpisodesPresenter.init(asPartOf:with:)(a1, a2);
  return v5;
}

uint64_t SeeAllEpisodesPresenter.init(asPartOf:with:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  uint64_t v54;
  unint64_t v55;
  Swift::String v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  void *v73;
  Swift::String v74;
  Swift::String v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  Swift::String v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  _QWORD v106[2];
  Swift::String v107;

  v3 = v2;
  v88 = a1;
  v84 = type metadata accessor for ScalarDictionary(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v81 = (char *)&v79 - v7;
  v8 = type metadata accessor for PageMetrics(0);
  v98 = *(_QWORD *)(v8 - 8);
  v99 = v8;
  __chkstk_darwin(v8);
  v97 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageID(0);
  v95 = *(_QWORD *)(v10 - 8);
  v96 = v10;
  __chkstk_darwin(v10);
  v94 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  v89 = *(_QWORD *)(v12 - 8);
  v90 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v79 - v19;
  v21 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = *a2;
  v85 = a2[1];
  v80 = a2[2];
  v93 = *((unsigned __int8 *)a2 + 24);
  v86 = a2[4];
  v87 = *((unsigned __int8 *)a2 + 40);
  v92 = *((unsigned __int8 *)a2 + 41);
  v100 = (Swift::String)0;
  LODWORD(v101) = 0;
  BYTE4(v101) = 5;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8770);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  *(_QWORD *)(v3 + 120) = CurrentValueSubject.init(_:)(&v100);
  *(_BYTE *)(v3 + 128) = 1;
  LOBYTE(v100._countAndFlagsBits) = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20D0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)(v3 + 136) = CurrentValueSubject.init(_:)(&v100);
  v100._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8780);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)(v3 + 144) = CurrentValueSubject.init(_:)(&v100);
  *(_QWORD *)(v3 + 152) = FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
  *(_QWORD *)(v3 + 160) = 0;
  *(_QWORD *)(v3 + 168) = 0;
  *v23 = 0;
  v27 = v21;
  v28 = v88;
  swift_storeEnumTagMultiPayload(v23, v27, 0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  *(_QWORD *)(v3 + 176) = CurrentValueSubject.init(_:)(v23);
  *(_QWORD *)(v3 + 184) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + 192) = 0;
  v30 = OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filters;
  v100._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  v31 = v85;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B08);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(_QWORD *)(v3 + v30) = CurrentValueSubject.init(_:)(&v100);
  v33 = OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled;
  LOBYTE(v100._countAndFlagsBits) = 1;
  v34 = *(unsigned int *)(v25 + 48);
  v35 = *(unsigned __int16 *)(v25 + 52);
  v36 = v25;
  v37 = v86;
  swift_allocObject(v36, v34, v35);
  *(_QWORD *)(v3 + v33) = CurrentValueSubject.init(_:)(&v100);
  v38 = v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage;
  v39 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v20, 1, 1, v39);
  swift_storeEnumTagMultiPayload(v20, v15, 1);
  sub_14510((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  Published.init(initialValue:)(v17, v15);
  sub_145D8((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  v40 = v14;
  v41 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v38, v40, v90);
  *(_QWORD *)(v3 + 16) = v28;
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(&v100, v42, v42);
  *(Swift::String *)(v3 + 24) = v100;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)(&v100, v43, v43);
  sub_F4D8((__int128 *)&v100._countAndFlagsBits, v3 + 40);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2778);
  BaseObjectGraph.inject<A>(_:)(&v100, v44, v44);
  sub_F4D8((__int128 *)&v100._countAndFlagsBits, v3 + 80);
  v45 = (_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_uuid);
  *v45 = v91;
  v45[1] = v31;
  v100._countAndFlagsBits = v37;
  LOBYTE(v100._object) = v41;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B20);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  swift_bridgeObjectRetain();
  sub_43568(v37, v41);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter) = CurrentValueSubject.init(_:)(&v100);
  if (v92 != 1)
  {
    v100 = (Swift::String)0;
    LODWORD(v101) = 0;
    BYTE4(v101) = 5;
    CurrentValueSubject.value.setter(&v100);
    swift_bridgeObjectRelease();
    v51 = sub_4357C(v37, v41);
    if (!v93)
      goto LABEL_3;
LABEL_5:
    v100._countAndFlagsBits = static MetricsPageType.room.getter(v51);
    v100._object = v73;
    v74._countAndFlagsBits = 95;
    v74._object = (void *)0xE100000000000000;
    String.append(_:)(v74);
    v75._countAndFlagsBits = 0x70456C6C41656553;
    v75._object = (void *)0xEE007365646F7369;
    String.append(_:)(v75);
    v76 = v94;
    PageID.init(with:)(v100._countAndFlagsBits, v100._object);
    v77 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v95 + 32))(v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageID, v76, v96);
    v72 = v97;
    static PageMetrics.notInstrumented.getter(v77);
    swift_release(v28);
    goto LABEL_6;
  }
  v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v107._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0x5345444F53495045;
  v48._object = (void *)0xE800000000000000;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v107._countAndFlagsBits = 0;
  v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v107);

  v100 = v50;
  LODWORD(v101) = 0;
  BYTE4(v101) = 0;
  CurrentValueSubject.value.setter(&v100);
  swift_bridgeObjectRelease();
  v51 = sub_4357C(v37, v41);
  if ((v93 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  v100._countAndFlagsBits = static MetricsPageType.room.getter(v51);
  v100._object = v52;
  v53._countAndFlagsBits = 95;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  v54 = v80;
  v106[0] = v80;
  v55 = sub_144B4();
  v56._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v55);
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  v57 = v94;
  PageID.init(with:)(v100._countAndFlagsBits, v100._object);
  v58 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v95 + 32))(v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageID, v57, v96);
  v59 = static MetricsPageType.room.getter(v58);
  v61 = v60;
  v100._countAndFlagsBits = v54;
  v100._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v55);
  v100._object = v62;
  v101 = v59;
  v102 = v61;
  v103 = 0;
  v104 = 0;
  v105 = 0;
  v63 = v81;
  ScalarDictionary.init()(v100._countAndFlagsBits);
  v64 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
  v66 = type metadata accessor for PageMetrics.Instruction(0);
  v67 = swift_allocObject(v65, ((*(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v66 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80) | 7);
  *(_OWORD *)(v67 + 16) = xmmword_2EA080;
  LOBYTE(v106[0]) = 0;
  PageMetrics.Instruction.init(eventType:)(v106);
  LOBYTE(v106[0]) = 1;
  PageMetrics.Instruction.init(eventType:)(v106);
  v68 = MetricsPageFields.metricsFields.getter();
  v69 = v83;
  v70 = v82;
  v71 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v82, v63, v84);
  v72 = v97;
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v67, v68, v70, v64);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v71);
  swift_release(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v3 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageMetrics, v72, v99);
  return v3;
}

uint64_t SeeAllEpisodesPresenter.interactionContextPage.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_300AB0);
  v4 = swift_getKeyPath(&unk_300AD8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_227CA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_300AB0);
  v5 = swift_getKeyPath(&unk_300AD8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_227D10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_14510(a1, (uint64_t)&v14 - v8, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_300AB0);
  v12 = swift_getKeyPath(&unk_300AD8);
  sub_14510((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  swift_retain();
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_145D8((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
}

uint64_t SeeAllEpisodesPresenter.interactionContextPage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_300AB0);
  v7 = swift_getKeyPath(&unk_300AD8);
  sub_14510(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  swift_retain();
  static Published.subscript.setter(v5, v1, KeyPath, v7);
  return sub_145D8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
}

void (*SeeAllEpisodesPresenter.interactionContextPage.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_300AB0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_300AD8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_84118;
}

uint64_t SeeAllEpisodesPresenter.$interactionContextPage.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_227FA4(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_228008(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B38);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage, v17, 33, 0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t SeeAllEpisodesPresenter.$interactionContextPage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B38);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage, v11, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*SeeAllEpisodesPresenter.$interactionContextPage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B38);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_84474;
}

Swift::Void __swiftcall SeeAllEpisodesPresenter.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B38);
  v82 = *(_QWORD *)(v2 - 8);
  v83 = v2;
  __chkstk_darwin(v2);
  v81 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v78 = (char *)&v66 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B40);
  v7 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v80 = v7;
  __chkstk_darwin(v6);
  v77 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B48);
  v10 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  v72 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B50);
  v14 = *(_QWORD *)(v13 - 8);
  v73 = v13;
  v74 = v14;
  __chkstk_darwin(v13);
  v70 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v0 + 24);
  v75 = *(_QWORD *)(v0 + 32);
  v17 = v75;
  v76 = v16;
  ObjectType = swift_getObjectType();
  v84 = ObjectType;
  v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_uuid);
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_uuid);
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_uuid + 8);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 328);
  swift_bridgeObjectRetain();
  v23 = v22(v21, v20, ObjectType, v17);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v86[0] = v23;
  v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filters);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B58);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B08);
  v27 = sub_32914(&qword_3C2B60, &qword_3C2B58, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v28 = sub_32914(&qword_3C2B68, &qword_3C2B08, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v29 = Publisher.subscribe<A>(_:)(v24, v25, v26, v27, v28);
  swift_release(v23);
  swift_beginAccess(v1 + 184, v86, 33, 0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v69 = v30;
  v68 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v1 + 184, v30, v68);
  swift_endAccess(v86);
  swift_release(v29);
  *(_QWORD *)&v86[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter);
  v31 = *(_QWORD *)&v86[0];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B20);
  v67 = v32;
  v33 = sub_32914(&qword_3C2B70, &qword_3C2B20, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v34 = sub_229E00();
  Publisher<>.removeDuplicates()(v32, v33, v34);
  v35 = sub_32914(&qword_3C2B80, &qword_3C2B48, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v36 = v70;
  v37 = v71;
  Publisher.dropFirst(_:)(1, v71, v35);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v12, v37);
  v39 = *v19;
  v38 = v19[1];
  sub_150C8(v1 + 40, (uint64_t)v86);
  v40 = swift_allocObject(&unk_38AEF8, 72, 7);
  sub_F4D8(v86, v40 + 16);
  *(_QWORD *)(v40 + 56) = v39;
  *(_QWORD *)(v40 + 64) = v38;
  v41 = sub_32914(&qword_3C2B88, &qword_3C2B50, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  swift_bridgeObjectRetain();
  v42 = v73;
  v43 = Publisher<>.sink(receiveValue:)(sub_229E70, v40, v73, v41);
  swift_release(v40);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v36, v42);
  swift_beginAccess(v1 + 184, v86, 33, 0);
  AnyCancellable.store<A>(in:)(v1 + 184, v69, v68);
  swift_endAccess(v86);
  swift_release(v43);
  v44 = *v19;
  v45 = v19[1];
  *(_QWORD *)&v86[0] = v31;
  swift_bridgeObjectRetain();
  v46 = Publisher.eraseToAnyPublisher()(v67, v33);
  v47 = v75;
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 352))(v44, v45, v46, v84, v75);
  swift_bridgeObjectRelease();
  swift_release(v46);
  *(_QWORD *)&v86[0] = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B90);
  v50 = type metadata accessor for InteractionContext.Page(0);
  v51 = sub_32914(&qword_3C2B98, &qword_3C2B90, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v52 = v77;
  Publisher.map<A>(_:)(sub_22895C, 0, v49, v50, v51);
  v53 = v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage, v86, 33, 0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  v55 = v78;
  Published.projectedValue.getter(v54);
  swift_endAccess(v86);
  v56 = sub_32914(&qword_3C2BA0, &qword_3C2B40, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v57 = v79;
  Publisher<>.assign(to:)(v55, v79, v56);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v57);
  v58 = v81;
  v59 = v82;
  v60 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v81, v55, v83);
  swift_beginAccess(v53, v86, 33, 0);
  Published.projectedValue.setter(v58, v54);
  swift_endAccess(v86);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v55, v60);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 360))(v48, 50, v84, v47);
  swift_beginAccess(v1 + 192, v86, 1, 0);
  v62 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 192) = v61;
  swift_retain();
  swift_release(v62);
  v85 = v61;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
  v64 = sub_32914(&qword_3C2BA8, &qword_3BEEC0, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v65 = Publisher.eraseToAnyPublisher()(v63, v64);
  sub_2289D4(v65);
  swift_release(v65);
  sub_228D04();
  swift_release(v48);
  swift_release(v61);
}

uint64_t sub_22895C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  v6 = type metadata accessor for InteractionContext.Page(0);
  return swift_storeEnumTagMultiPayload(a2, v6, 1);
}

uint64_t sub_2289D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];

  v2 = v1;
  v4 = type metadata accessor for PageMetrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v38 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E30);
  v12 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v42 = v12;
  __chkstk_darwin(v11);
  v40 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[0] = a1;
  v14 = swift_allocObject(&unk_38B0B0, 24, 7);
  swift_weakInit(v14 + 16);
  v39 = v2;
  v15 = v2 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageID;
  v16 = v2 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageMetrics;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
  v17 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v4);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = *(unsigned __int8 *)(v5 + 80);
  v21 = (v9 + v20 + v19) & ~v20;
  v22 = (v6 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_38B0D8, v22 + 8, v18 | v20 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23 + v19, v10, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v23 + v21, v38, v17);
  *(_QWORD *)(v23 + v22) = v14;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E38);
  v25 = type metadata accessor for PageContent(0);
  v26 = sub_32914(&qword_3C2E40, &qword_3C2E38, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v27 = v40;
  Publisher.compactMap<A>(_:)(sub_22A5AC, v23, v24, v25, v26);
  swift_release(v23);
  v28 = v39;
  v29 = *(_QWORD *)(v39 + 176);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  v31 = sub_32914(&qword_3C2E48, &qword_3C2E30, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v32 = sub_32914((unint64_t *)&unk_3B87F0, &qword_3B27B0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v33 = v41;
  v34 = Publisher.subscribe<A>(_:)(v29, v41, v30, v31, v32);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v33);
  swift_beginAccess(v28 + 184, v43, 33, 0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v36 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v28 + 184, v35, v36);
  swift_endAccess(v43);
  return swift_release(v34);
}

uint64_t sub_228D04()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v2);
  v4 = (unint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v39 = *(_QWORD *)(v0 + 144);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8800);
  v38 = type metadata accessor for HeaderButtonItem(0);
  v12 = *(_QWORD *)(v38 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v11, v15 + v13, v14 | 7);
  v34 = xmmword_2EA0D0;
  *(_OWORD *)(v16 + 16) = xmmword_2EA0D0;
  v36 = v16 + v15;
  v37 = v16;
  ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x73697370696C6C65, 0xE800000000000000, 0, 0, 0, 0);
  v17 = type metadata accessor for ArtworkModel(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v35(v10, 0, 1, v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0928);
  v19 = type metadata accessor for ActionMenu.Child(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v18, v23 + v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = v34;
  v25 = (unint64_t *)(v24 + v23);
  swift_retain();
  *v25 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v25[1] = v26;
  v25[2] = (unint64_t)sub_22A444;
  v25[3] = v1;
  swift_storeEnumTagMultiPayload(v25, v19, 2);
  v27 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v29 = v28;
  v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B27F8) + 48);
  sub_14554((uint64_t)v10, (uint64_t)v7);
  v31 = (uint64_t)v4 + *(int *)(v2 + 28);
  v35((char *)v31, 1, 1, v17);
  *v4 = v27;
  v4[1] = v29;
  v4[2] = 0;
  v4[3] = 0xE000000000000000;
  v4[4] = 0;
  v4[5] = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454((uint64_t)v7, v31, &qword_3BEB70);
  *(unint64_t *)((char *)v4 + *(int *)(v2 + 32)) = v24;
  v32 = v36;
  sub_3C56C((uint64_t)v4, v36, type metadata accessor for ActionMenu);
  *(_BYTE *)(v32 + v30) = 2;
  swift_storeEnumTagMultiPayload(v32, v38, 6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v10, &qword_3BEB70);
  v40 = v37;
  CurrentValueSubject.send(_:)();
  return swift_bridgeObjectRelease();
}

_QWORD *SeeAllEpisodesPresenter.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 5);
  __swift_destroy_boxed_opaque_existential_1(v0 + 10);
  swift_release(v0[15]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  swift_release(v0[21]);
  swift_release(v0[22]);
  swift_bridgeObjectRelease();
  swift_release(v0[24]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageID;
  v2 = type metadata accessor for PageID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_pageMetrics;
  v4 = type metadata accessor for PageMetrics(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filters));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_filteringEnabled));
  v5 = (char *)v0 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter__interactionContextPage;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B00);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t SeeAllEpisodesPresenter.__deallocating_deinit()
{
  uint64_t v0;

  SeeAllEpisodesPresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_229158@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *v1;
  KeyPath = swift_getKeyPath(&unk_300AB0);
  v5 = swift_getKeyPath(&unk_300AD8);
  static Published.subscript.getter(a1, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_2291C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 192, v5, 0, 0);
  v3 = *(_QWORD *)(v1 + 192);
  *a1 = v3;
  return swift_retain(v3);
}

uint64_t sub_229208@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  void *object;
  uint64_t countAndFlagsBits;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  Swift::String v52;

  v2 = v1;
  v45 = a1;
  v3 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v3);
  v5 = (unint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v6);
  v46 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)objc_opt_self(MTEpisode);
  swift_bridgeObjectRetain();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, "predicateForAllEpisodesOnPodcastUuid:", v12);

  CurrentValueSubject.value.getter(&v49, v14);
  v15 = v49;
  LOBYTE(v12) = BYTE8(v49);
  v16 = (void *)EpisodeUserFilter.basePredicate.getter(v49, BYTE8(v49));
  sub_4357C(v15, (char)v12);
  v17 = objc_msgSend(v13, "AND:", v16);

  v18 = v2[8];
  v19 = v2[9];
  __swift_project_boxed_opaque_existential_1(v2 + 5, v18);
  v20 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 496))(v17, v18, v19);
  v21 = 0;
  if ((v20 & 1) != 0)
  {
    CurrentValueSubject.value.getter(&v47, v20);
    if (v48 != 2 || v47)
    {
      sub_4357C(v47, v48);
      sub_150C8((uint64_t)(v2 + 5), (uint64_t)&v49);
      v24 = swift_allocObject(&unk_38B088, 64, 7);
      sub_F4D8(&v49, v24 + 16);
      *(_QWORD *)(v24 + 56) = v17;
      static ActionMetrics.notInstrumented.getter(v17);
      v25 = type metadata accessor for ClosureAction(0);
      swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v21 = sub_213C1C(0, 0, 32, (uint64_t)v10, (uint64_t)sub_22A474, v24);
      swift_release(v24);
    }
    else
    {
      v22 = v2[8];
      v23 = v2[9];
      __swift_project_boxed_opaque_existential_1(v2 + 5, v22);
      v21 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v23 + 512))(v17, v22, v23);
    }
  }
  v44 = v17;
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000017;
  v52._object = (void *)0xE000000000000000;
  v27._object = (void *)0x8000000000314410;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v52._countAndFlagsBits = 0;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v52);
  object = v29._object;
  countAndFlagsBits = v29._countAndFlagsBits;

  v30 = v46;
  ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0xD000000000000010, 0x8000000000314430, 0, 0, 0, 0);
  v31 = type metadata accessor for ArtworkModel(0);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v30, 0, 1, v31);
  if (v21)
  {
    *((_QWORD *)&v50 + 1) = type metadata accessor for Action(0);
    v51 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v49 = v21;
  }
  else
  {
    v51 = 0;
    v49 = 0u;
    v50 = 0u;
  }
  swift_retain();
  v33 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v35 = v34;
  v36 = (uint64_t)v5 + v3[6];
  v32(v36, 1, 1, v31);
  v37 = v3[7];
  *((_BYTE *)v5 + v37) = 2;
  v38 = (uint64_t)v5 + v3[9];
  *(_QWORD *)(v38 + 32) = 0;
  *(_OWORD *)v38 = 0u;
  *(_OWORD *)(v38 + 16) = 0u;
  *v5 = v33;
  v5[1] = v35;
  v39 = (unint64_t)object;
  v5[2] = countAndFlagsBits;
  v5[3] = v39;
  sub_3C454(v46, v36, &qword_3BEB70);
  *((_BYTE *)v5 + v37) = 2;
  *((_BYTE *)v5 + v3[8]) = 1;
  sub_3C454((uint64_t)&v49, v38, &qword_3B0C50);
  sub_3C56C((uint64_t)v5, v45, type metadata accessor for ActionMenu.Item);

  return swift_release(v21);
}

uint64_t sub_22969C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73[24];
  uint64_t v74;
  unsigned __int8 v75;
  char v76[24];
  unint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  char v80;
  Swift::String v81;

  v68 = a3;
  v69 = a1;
  v71 = a2;
  v5 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v70);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v67);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernShelf(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E50);
  FRPOutput.content.getter(v16);
  v17 = v77;
  v18 = FRPOutput.hasMore.getter(v16);
  v77 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
  if ((Loadable.notLoaded.getter(v19) & 1) != 0)
  {
    sub_64510(v17);
    *(_BYTE *)a4 = 1;
    v20 = type metadata accessor for PageContent(0);
    v21 = a4;
    v22 = v20;
    v23 = 0;
LABEL_16:
    swift_storeEnumTagMultiPayload(v21, v22, v23);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 0, 1, v20);
  }
  v64 = v9;
  v65 = v7;
  v80 = 0;
  sub_644D8(v17);
  v24 = sub_10E28(0, 1, 1, _swiftEmptyArrayStorage);
  v26 = v24[2];
  v25 = v24[3];
  v66 = a4;
  if (v26 >= v25 >> 1)
    v24 = sub_10E28((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v24[v26 + 4] = v17;
  sub_644D8(v17);
  v27 = sub_10E28(0, 1, 1, _swiftEmptyArrayStorage);
  v29 = v27[2];
  v28 = v27[3];
  if (v29 >= v28 >> 1)
    v27 = sub_10E28((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
  v27[2] = v29 + 1;
  v27[v29 + 4] = v17;
  sub_64510(v17);
  if ((v18 & 1) != 0)
  {
    static ModernShelf.loadingShelf(id:)(0x5365726F4D736168, 0xEC000000666C6568, v15);
    sub_14510((uint64_t)v15, (uint64_t)v11, type metadata accessor for ModernShelf);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 2, v12);
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
    Loadable.map<A>(_:)(&v77, sub_192A50, 0, v67, v30);
    v31 = v77;
    sub_644D8(v77);
    v33 = v27[2];
    v32 = v27[3];
    a4 = v66;
    if (v33 >= v32 >> 1)
      v27 = sub_10E28((_QWORD *)(v32 > 1), v33 + 1, 1, v27);
    v27[2] = v33 + 1;
    v27[v33 + 4] = v31;
    sub_64510(v31);
    sub_1459C((uint64_t)v11, &qword_3B35D0);
    sub_145D8((uint64_t)v15, type metadata accessor for ModernShelf);
    v34 = v80;
  }
  else
  {
    v34 = 0;
    a4 = v66;
  }
  LOBYTE(v77) = v34;
  v78 = v24;
  v79 = v27;
  if ((ModernShelfListBuilder.hasImportantContent.getter() & 1) != 0)
  {
    v35 = type metadata accessor for PageID(0);
    v36 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v64, v69, v35);
    v37 = v70;
    v38 = v36 + *(int *)(v70 + 20);
    v39 = type metadata accessor for PageMetrics(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v38, v71, v39);
    LOBYTE(v77) = v34;
    v78 = v24;
    v79 = v27;
    v40 = ModernShelfListBuilder.buildList()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + *(int *)(v37 + 24)) = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B89B0);
    v41 = sub_14510(v36, a4, type metadata accessor for ModernPage);
    static PageRenderContentTypes.unspecified.getter(v41);
    v20 = type metadata accessor for PageContent(0);
    swift_storeEnumTagMultiPayload(a4, v20, 3);
    sub_145D8(v36, type metadata accessor for ModernPage);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 0, 1, v20);
  }
  v42 = v68 + 16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v81._object = (void *)0xE000000000000000;
  v44._object = (void *)0x8000000000314450;
  v44._countAndFlagsBits = 0xD000000000000011;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v81._countAndFlagsBits = 0;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v81);

  v47 = swift_allocObject(&unk_38B0B0, 24, 7);
  swift_beginAccess(v42, &v77, 0, 0);
  Strong = swift_weakLoadStrong(v42);
  swift_weakInit(v47 + 16);
  swift_release(Strong);
  v49 = swift_retain();
  v50 = (uint64_t)v65;
  static ActionMetrics.notInstrumented.getter(v49);
  v51 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = sub_213C1C(v46._countAndFlagsBits, (uint64_t)v46._object, 32, v50, (uint64_t)sub_22A638, v47);
  swift_release_n(v47, 2);
  swift_beginAccess(v42, v76, 0, 0);
  v53 = swift_weakLoadStrong(v42);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter);
    swift_retain();
    v56 = swift_release(v54);
    CurrentValueSubject.value.getter(&v74, v56);
    swift_release(v55);
    v57 = v75;
    *(_QWORD *)a4 = v74;
    *(_QWORD *)(a4 + 8) = v57;
    *(_QWORD *)(a4 + 16) = v52 | 0x6000000000000000;
    v20 = type metadata accessor for PageContent(0);
    v21 = a4;
    v22 = v20;
    v23 = 2;
    goto LABEL_16;
  }
  swift_beginAccess(v42, &v74, 0, 0);
  v59 = swift_weakLoadStrong(v42);
  if (v59)
  {
    v60 = v59;
    swift_beginAccess(v59 + 136, v73, 0, 0);
    v61 = *(_QWORD *)(v60 + 136);
    swift_retain();
    swift_release(v60);
    v72 = 1;
    CurrentValueSubject.send(_:)();
    swift_release(v61);
  }
  swift_release(v52);
  v62 = type metadata accessor for PageContent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(a4, 1, 1, v62);
}

uint64_t sub_229D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit23SeeAllEpisodesPresenter_selectedFilter);
    swift_retain(v4);
    swift_release(v3);
    v5 = 0;
    v6 = 2;
    CurrentValueSubject.value.setter(&v5);
    return swift_release(v4);
  }
  return result;
}

unint64_t sub_229E00()
{
  unint64_t result;

  result = qword_3C2B78;
  if (!qword_3C2B78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeUserFilter);
    atomic_store(result, (unint64_t *)&qword_3C2B78);
  }
  return result;
}

uint64_t sub_229E44()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_229E70(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1 + 2;
  v3 = v1[7];
  v4 = v1[8];
  v5 = *a1;
  v6 = v1[5];
  v7 = v1[6];
  v8 = *((unsigned __int8 *)a1 + 8);
  __swift_project_boxed_opaque_existential_1(v2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 216))(v3, v4, v5, v8, v6, v7);
}

uint64_t sub_229EE0(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C2C70, (void (*)(uint64_t))type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SeeAllEpisodesPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2D08;
  if (!qword_3C2D08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SeeAllEpisodesPresenter);
  return result;
}

unint64_t sub_229F5C()
{
  unint64_t result;

  result = qword_3C2C78;
  if (!qword_3C2C78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EpisodeUserFilter);
    atomic_store(result, (unint64_t *)&qword_3C2C78);
  }
  return result;
}

uint64_t sub_229FA0()
{
  return sub_32914(&qword_3BEEC8, &qword_3BEEC0, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
}

uint64_t sub_229FCC()
{
  return sub_F1C0(&qword_3C2CD8, (void (*)(uint64_t))type metadata accessor for SeeAllEpisodesPresenter, (uint64_t)&protocol conformance descriptor for SeeAllEpisodesPresenter);
}

uint64_t sub_22A000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SeeAllEpisodesPresenter.refreshControls.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22A028(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 168);
  *(_QWORD *)(*(_QWORD *)a2 + 168) = v2;
  swift_retain(v2);
  return swift_release(v3);
}

uint64_t sub_22A060()
{
  return type metadata accessor for SeeAllEpisodesPresenter(0);
}

void sub_22A068(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[20];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = &unk_300CA8;
  v8[2] = &unk_300CC0;
  v8[3] = &unk_300CC0;
  v8[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[5] = &unk_300CD8;
  v8[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[8] = (char *)&value witness table for () + 64;
  v8[9] = &unk_300CF0;
  v8[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[12] = &unk_300CF0;
  v2 = type metadata accessor for PageID(319);
  if (v3 <= 0x3F)
  {
    v8[13] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for PageMetrics(319);
    if (v5 <= 0x3F)
    {
      v8[14] = *(_QWORD *)(v4 - 8) + 64;
      v8[15] = &unk_300CA8;
      v8[16] = (char *)&value witness table for Builtin.NativeObject + 64;
      v8[17] = (char *)&value witness table for Builtin.NativeObject + 64;
      v8[18] = (char *)&value witness table for Builtin.NativeObject + 64;
      sub_22A188(319);
      if (v7 <= 0x3F)
      {
        v8[19] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 20, v8, a1 + 80);
      }
    }
  }
}

uint64_t method lookup function for SeeAllEpisodesPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SeeAllEpisodesPresenter);
}

void sub_22A188(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3C2D18)
  {
    v2 = type metadata accessor for InteractionContext.Page(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3C2D18);
  }
}

uint64_t destroy for SeeAllEpisodesPresenter.Configuration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_4357C(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for SeeAllEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_43568(v5, v6);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithCopy for SeeAllEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_43568(v5, v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v8 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_4357C(v7, v8);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SeeAllEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_4357C(v6, v7);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeeAllEpisodesPresenter.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeeAllEpisodesPresenter.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeeAllEpisodesPresenter.Configuration()
{
  return &type metadata for SeeAllEpisodesPresenter.Configuration;
}

uint64_t sub_22A420()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_22A448()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_22A474()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 520))(v1, v3, v2);
}

uint64_t sub_22A4C0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_22A4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for PageID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for PageMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_22A5AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for PageID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for PageMetrics(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_22969C(v1 + v4, v1 + v7, *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_22A638()
{
  uint64_t v0;

  return sub_229D78(v0);
}

uint64_t sub_22A644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = type metadata accessor for URLQueryItem(0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v30 = v1;
  v38 = _swiftEmptyArrayStorage;
  sub_1809D0(0, v6, 0);
  v7 = v38;
  result = sub_232F7C(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v31 = a1 + 80;
  v32 = v6;
  v33 = v9;
  v34 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_24;
    v37 = v11;
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v16;
    v18 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v20 = a1;
    v21 = *v19;
    v22 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)(v17, v18, v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v7;
    v24 = v7[2];
    v23 = v7[3];
    if (v24 >= v23 >> 1)
    {
      sub_1809D0(v23 > 1, v24 + 1, 1);
      v7 = v38;
    }
    v7[2] = v24 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v35 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v24, v5, v36);
    v13 = 1 << *(_BYTE *)(v20 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v34;
    v25 = *(_QWORD *)(v34 + 8 * v15);
    if ((v25 & (1 << v10)) == 0)
      goto LABEL_26;
    a1 = v20;
    LODWORD(v9) = v33;
    if (*(_DWORD *)(v20 + 36) != (_DWORD)v33)
      goto LABEL_27;
    v26 = v25 & (-2 << (v10 & 0x3F));
    if (v26)
    {
      v13 = __clz(__rbit64(v26)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v32;
    }
    else
    {
      v27 = v15 + 1;
      v28 = (unint64_t)(v13 + 63) >> 6;
      v14 = v32;
      if (v15 + 1 < v28)
      {
        v29 = *(_QWORD *)(v34 + 8 * v27);
        if (v29)
        {
LABEL_20:
          v13 = __clz(__rbit64(v29)) + (v27 << 6);
        }
        else
        {
          while (v28 - 2 != v15)
          {
            v29 = *(_QWORD *)(v31 + 8 * v15++);
            if (v29)
            {
              v27 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v11 = v37 + 1;
    v10 = v13;
    if (v37 + 1 == v14)
      return (uint64_t)v7;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

char *HttpTemplateAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return HttpTemplateAction.init(deserializing:using:)(a1, a2);
}

uint64_t sub_22A940(uint64_t result, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = a2;
    v5 = (_QWORD *)result;
    v6 = v3 - 1;
    if (v3 != 1)
    {
      v27 = (_QWORD *)result;
      swift_bridgeObjectRetain();
      v7 = v2;
      v26 = v4;
      v8 = (uint64_t *)(v4 + 40);
      v25 = v6;
      while (1)
      {
        v12 = *(v8 - 1);
        v13 = *v8;
        *(_QWORD *)&v29[0] = v12;
        *((_QWORD *)&v29[0] + 1) = v13;
        swift_bridgeObjectRetain_n(v13, 3);
        v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v29, &type metadata for String);
        v15 = objc_msgSend(v7, "__swift_objectForKeyedSubscript:", v14);
        swift_unknownObjectRelease(v14);
        if (v15)
        {
          _bridgeAnyObjectToAny(_:)(v29);
          swift_unknownObjectRelease(v15);
        }
        else
        {
          memset(v29, 0, sizeof(v29));
        }
        sub_15BD4((uint64_t)v29, (uint64_t)&v30, (uint64_t *)&unk_3BC540);
        if (v32)
        {
          v16 = sub_22E348();
          v17 = swift_dynamicCast(&v28, &v30, (char *)&type metadata for Any + 8, v16, 6);
          swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
          {

            v7 = v28;
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1459C((uint64_t)&v30, (uint64_t *)&unk_3BC540);
        }
        v9 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
        v30 = v12;
        v31 = v13;
        swift_bridgeObjectRetain();
        v10 = v9;
        v11 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v30, &type metadata for String);
        objc_msgSend(v7, "__swift_setObject:forKeyedSubscript:", v10, v11);
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease(v11);
        v7 = v10;
LABEL_6:
        v8 += 2;
        if (!--v6)
        {
          v4 = v26;
          swift_bridgeObjectRelease();
          v5 = v27;
          v6 = v25;
          goto LABEL_15;
        }
      }
    }
    v7 = v2;
LABEL_15:
    v18 = v4 + 16 * v6;
    v20 = *(_QWORD *)(v18 + 32);
    v19 = *(_QWORD *)(v18 + 40);
    v21 = v5[3];
    v22 = __swift_project_boxed_opaque_existential_1(v5, v21);
    swift_bridgeObjectRetain();
    v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v21);
    v30 = v20;
    v31 = v19;
    swift_bridgeObjectRetain();
    v24 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v30, &type metadata for String);
    objc_msgSend(v7, "__swift_setObject:forKeyedSubscript:", v23, v24);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease(v23);
    return swift_unknownObjectRelease(v24);
  }
  return result;
}

uint64_t HttpTemplateJsonBody.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22AE90(a1, a2, (uint64_t)&type metadata for HttpTemplateJsonBody, a3);
}

NSMutableDictionary __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HttpTemplateJsonBody.makeMutableDictionary()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  Class isa;
  id v16;
  id v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  unint64_t v25;
  id v26[4];
  _QWORD v27[4];

  v1 = type metadata accessor for String.Encoding(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  v5 = v0[1];
  static String.Encoding.utf8.getter(v7);
  v8 = String.data(using:allowLossyConversion:)(v4, 0, v6, v5);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v10 >> 60 == 15)
  {
    v11 = sub_22DBF8();
    v12 = swift_allocError(&type metadata for HttpTemplateError, v11, 0, 0);
    *v13 = 2;
    swift_willThrow(v12);
  }
  else
  {
    v14 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v26[0] = 0;
    v16 = objc_msgSend(v14, "JSONObjectWithData:options:error:", isa, 1, v26);

    v17 = v26[0];
    if (v16)
    {
      _bridgeAnyObjectToAny(_:)(v27);
      swift_unknownObjectRelease(v16);
      sub_1FB98((uint64_t)v27, (uint64_t)v26);
      v18 = sub_22E348();
      if ((swift_dynamicCast(&v25, v26, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0)
      {
        sub_161328(v8, v10);
        v10 = v25;
      }
      else
      {
        v21 = sub_22DBF8();
        v22 = swift_allocError(&type metadata for HttpTemplateError, v21, 0, 0);
        *v23 = 1;
        swift_willThrow(v22);
        sub_161328(v8, v10);
      }
      __swift_destroy_boxed_opaque_existential_1(v27);
    }
    else
    {
      v19 = v17;
      _convertNSErrorToError(_:)(v17);

      swift_willThrow(v20);
      sub_161328(v8, v10);
    }
  }
  return (NSMutableDictionary)v10;
}

unint64_t HttpTemplateJsonBody.description.getter()
{
  return sub_22B3D8();
}

uint64_t sub_22AE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1AA004(a1, a2, a3);
}

uint64_t HttpTemplateFormBody.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22AE90(a1, a2, (uint64_t)&type metadata for HttpTemplateFormBody, a3);
}

uint64_t sub_22AE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = JSONObject.string.getter(a1);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
    v13 = type metadata accessor for JSONObject(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
    *a4 = v10;
    a4[1] = v11;
  }
  else
  {
    v15 = type metadata accessor for JSONError(0);
    v16 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v15, v16, 0, 0);
    *v17 = a3;
    v17[1] = _swiftEmptyArrayStorage;
    v18 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, enum case for JSONError.malformedDocument(_:), v15);
    swift_willThrow(v18);
    v19 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
    v20 = type metadata accessor for JSONObject(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
  }
  return result;
}

_QWORD *HttpTemplateFormBody.makeDictionary()()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _QWORD *result;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v1 = (_QWORD *)*v0;
  v45 = 38;
  v46 = 0xE100000000000000;
  v47 = v1;
  v2 = sub_65CC4();
  v3 = *(_QWORD *)(StringProtocol.components<A>(separatedBy:)(&v45, &type metadata for String, &type metadata for String, v2, v2)+ 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return &_swiftEmptyDictionarySingleton;
  }
  v41 = swift_bridgeObjectRetain();
  v4 = (uint64_t *)(v41 + 40);
  v5 = &_swiftEmptyDictionarySingleton;
  v42 = v2;
  while (1)
  {
    v7 = v5;
    v8 = *v4;
    v47 = (_QWORD *)*(v4 - 1);
    v48 = v8;
    v45 = 61;
    v46 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v5 = &v47;
    v9 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v45, &type metadata for String, &type metadata for String, v2, v2);
    if (v9[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      v37 = sub_22DBF8();
      v38 = swift_allocError(&type metadata for HttpTemplateError, v37, 0, 0);
      *v39 = 2;
      swift_willThrow(v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v41, 2);
      swift_bridgeObjectRelease();
      return v5;
    }
    v49 = v8;
    v10 = v9[4];
    v11 = v9[5];
    v12 = (_QWORD *)v9[6];
    v13 = v9[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v47 = v12;
    v48 = v13;
    v14 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v2);
    v16 = v15;
    swift_bridgeObjectRelease();
    if (!v16)
    {
      swift_bridgeObjectRetain();
      v28 = sub_29724(v10, v11);
      v30 = v29;
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
        v47 = v7;
        v5 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_232894();
          v5 = v47;
        }
        swift_bridgeObjectRelease();
        sub_2314CC(v28, (uint64_t)v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v5 = v7;
      }
      goto LABEL_5;
    }
    v43 = v3;
    v44 = v16;
    v17 = v14;
    v18 = swift_isUniquelyReferenced_nonNull_native(v7);
    v47 = v7;
    v19 = v10;
    v21 = sub_29724(v10, v11);
    v22 = v7[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v7[3] >= v24)
    {
      if ((v18 & 1) != 0)
      {
        v5 = v47;
        if ((v20 & 1) == 0)
          goto LABEL_19;
      }
      else
      {
        sub_232894();
        v5 = v47;
        if ((v25 & 1) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      sub_22FB80(v24, v18);
      v26 = sub_29724(v19, v11);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_30;
      v21 = v26;
      v5 = v47;
      if ((v25 & 1) == 0)
      {
LABEL_19:
        v5[(v21 >> 6) + 8] |= 1 << v21;
        v32 = (uint64_t *)(v5[6] + 16 * v21);
        *v32 = v19;
        v32[1] = v11;
        v33 = (uint64_t *)(v5[7] + 16 * v21);
        *v33 = v17;
        v33[1] = v44;
        v34 = v5[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_29;
        v5[2] = v36;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v6 = (uint64_t *)(v5[7] + 16 * v21);
    swift_bridgeObjectRelease();
    *v6 = v17;
    v6[1] = v44;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v42;
    v3 = v43;
LABEL_5:
    v4 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease_n(v41, 2);
      return v5;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

unint64_t HttpTemplateFormBody.description.getter()
{
  return sub_22B3D8();
}

unint64_t sub_22B3D8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;

  v1 = *v0;
  v2 = (void *)v0[1];
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  return 0xD000000000000014;
}

uint64_t HttpTemplateParameter.Target.rawValue.getter(char a1)
{
  if (!a1)
    return 0x79726575516C7275;
  if (a1 == 1)
    return 0x726564616568;
  return 0x79646F426E6F736ALL;
}

uint64_t sub_22B4B0(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE600000000000000;
  v4 = 0x726564616568;
  if (v2 != 1)
  {
    v4 = 0x79646F426E6F736ALL;
    v3 = 0xE800000000000000;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x79726575516C7275;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  v7 = 0xE600000000000000;
  v8 = 0x726564616568;
  if (*a2 != 1)
  {
    v8 = 0x79646F426E6F736ALL;
    v7 = 0xE800000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x79726575516C7275;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE800000000000000;
  if (v5 == v9 && v6 == v10)
  {
    v11 = 1;
    v10 = v6;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v9, v10, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

Swift::Int sub_22B5AC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x726564616568;
  if (v1 != 1)
  {
    v3 = 0x79646F426E6F736ALL;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x79726575516C7275;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_22B648(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x726564616568;
  if (*v1 != 1)
  {
    v3 = 0x79646F426E6F736ALL;
    v2 = 0xE800000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x79726575516C7275;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_22B6C0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x726564616568;
  if (v1 != 1)
  {
    v3 = 0x79646F426E6F736ALL;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x79726575516C7275;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_22B758@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8ShelfKit21HttpTemplateParameterV6TargetO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_22B784(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x726564616568;
  if (v2 != 1)
  {
    v5 = 0x79646F426E6F736ALL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x79726575516C7275;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t HttpTemplateParameter.InputType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22B810 + 4 * byte_300D20[a1]))(1954047348, 0xE400000000000000);
}

uint64_t sub_22B810()
{
  return 0x6C69616D65;
}

uint64_t sub_22B824()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_22B844()
{
  return 0x506C616D69636564;
}

void sub_22B860(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_22B8A4@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_22B90C + 4 * byte_300D28[a1]))(0x6C69616D65);
}

uint64_t sub_22B90C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C69616D65 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C69616D65, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_22B9BC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_22BA00()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C69616D65, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_22BA78()
{
  __asm { BR              X10 }
}

uint64_t sub_22BAAC(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C69616D65, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_22BB10()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_22BB50()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C69616D65, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_22BBC8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8ShelfKit21HttpTemplateParameterV9InputTypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22BBF4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_22BC1C + 4 * byte_300D38[*v0]))();
}

void sub_22BC1C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C69616D65;
  a1[1] = 0xE500000000000000;
}

void sub_22BC34(_QWORD *a1@<X8>)
{
  *a1 = 0x6D754E656E6F6870;
  a1[1] = 0xEB00000000726562;
}

void sub_22BC58(_QWORD *a1@<X8>)
{
  *a1 = 0x506C616D69636564;
  a1[1] = 0xEA00000000006461;
}

void __swiftcall HttpTemplateParameter.init(key:target:inputType:title:isRequired:maximumLength:)(ShelfKit::HttpTemplateParameter *__return_ptr retstr, Swift::String key, ShelfKit::HttpTemplateParameter::Target target, ShelfKit::HttpTemplateParameter::InputType inputType, Swift::String_optional title, Swift::Bool isRequired, Swift::Int_optional maximumLength)
{
  retstr->key = key;
  retstr->target = target;
  retstr->inputType = inputType;
  retstr->title = title;
  retstr->isRequired = isRequired;
  retstr->maximumLength.value = maximumLength.value;
  retstr->maximumLength.is_nil = maximumLength.is_nil;
}

uint64_t HttpTemplateParameter.init(deserializing:using:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v49 = a3;
  v50 = a2;
  v4 = type metadata accessor for JSONObject(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = JSONObject.subscript.getter(7955819, 0xE300000000000000);
  v15 = JSONObject.string.getter(v14);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v13, v4);
  if (!v17)
  {
    v21 = type metadata accessor for JSONError(0);
    v26 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v21, v26, 0, 0);
    v24 = v23;
    *v23 = 7955819;
    v25 = 0xE300000000000000;
    goto LABEL_7;
  }
  v48 = v15;
  JSONObject.subscript.getter(0x746567726174, 0xE600000000000000);
  v19 = sub_233094();
  JSONObject.stringEnumOrNil<A>()((uint64_t *)((char *)&v52 + 1), &type metadata for HttpTemplateParameter.Target, v19);
  v18(v10, v4);
  v20 = BYTE1(v52);
  if (BYTE1(v52) == 3)
  {
    swift_bridgeObjectRelease();
    v21 = type metadata accessor for JSONError(0);
    v22 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v21, v22, 0, 0);
    v24 = v23;
    *v23 = 0x746567726174;
    v25 = 0xE600000000000000;
LABEL_7:
    v23[1] = v25;
    v23[2] = &type metadata for HttpTemplateParameter;
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, enum case for JSONError.missingProperty(_:), v21);
    swift_willThrow(v29);
    v30 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v50, v30);
    return ((uint64_t (*)(char *, uint64_t))v18)(a1, v4);
  }
  JSONObject.subscript.getter(0x7079547475706E69, 0xE900000000000065);
  v27 = sub_2330D8();
  JSONObject.stringEnumOrNil<A>()(&v52, &type metadata for HttpTemplateParameter.InputType, v27);
  v18(v10, v4);
  if (v52 == 4)
  {
    swift_bridgeObjectRelease();
    v21 = type metadata accessor for JSONError(0);
    v28 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v21, v28, 0, 0);
    v24 = v23;
    *v23 = 0x7059547475706E69;
    v25 = 0xE900000000000065;
    goto LABEL_7;
  }
  v47 = v52;
  v32 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v33 = JSONObject.string.getter(v32);
  v45 = v34;
  v46 = v33;
  v18(v10, v4);
  v35 = JSONObject.subscript.getter(0x7269757165527369, 0xEA00000000006465);
  v36 = JSONObject.BOOL.getter(v35);
  v18(v7, v4);
  v51 = v36 & 1;
  v37 = JSONObject.subscript.getter(0x4C6D756D6978616DLL, 0xED00006874676E65);
  v38 = JSONObject.int.getter(v37);
  v40 = v39;
  v41 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v50, v41);
  v18(a1, v4);
  result = ((uint64_t (*)(char *, uint64_t))v18)(v10, v4);
  v42 = v51;
  v43 = v49;
  *v49 = v48;
  v43[1] = v17;
  *((_BYTE *)v43 + 16) = v20;
  *((_BYTE *)v43 + 17) = v47;
  v44 = v45;
  v43[3] = v46;
  v43[4] = v44;
  *((_BYTE *)v43 + 40) = v42;
  v43[6] = v38;
  *((_BYTE *)v43 + 56) = v40 & 1;
  return result;
}

uint64_t RecommendationsMetadata.Episodes.Metadata.isComplete.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t HttpTemplateParameter.maximumLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_22C100@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return HttpTemplateParameter.init(deserializing:using:)(a1, a2, a3);
}

uint64_t HttpTemplateSubstitutions.urlQuery.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t HttpTemplateSubstitutions.headers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t HttpTemplateSubstitutions.jsonBody.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t HttpTemplateSubstitutions.successAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

void (__swiftcall *HttpTemplateSubstitutions.successAction.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t HttpTemplateSubstitutions.init(urlQuery:headers:jsonBody:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  sub_288078((uint64_t)_swiftEmptyArrayStorage);
  sub_288078((uint64_t)_swiftEmptyArrayStorage);
  sub_287F38((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  a4[3] = 0;
  return result;
}

Swift::Void __swiftcall HttpTemplateSubstitutions.setParameter(value:for:)(Swift::String value, ShelfKit::HttpTemplateParameter *a2)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  Swift::String v9;
  void *v10;

  object = value._object;
  countAndFlagsBits = value._countAndFlagsBits;
  v6 = a2->key._countAndFlagsBits;
  v5 = a2->key._object;
  if (a2->target == ShelfKit_HttpTemplateParameter_Target_urlQuery)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v9._countAndFlagsBits = *v2;
    *v2 = 0x8000000000000000;
    sub_1DF28(countAndFlagsBits, (uint64_t)object, v6, (uint64_t)v5, isUniquelyReferenced_nonNull_native);
    *v2 = v9._countAndFlagsBits;
    goto LABEL_5;
  }
  if (a2->target == ShelfKit_HttpTemplateParameter_Target_header)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = swift_isUniquelyReferenced_nonNull_native(v2[1]);
    v9._countAndFlagsBits = v2[1];
    v2[1] = 0x8000000000000000;
    sub_1DF28(countAndFlagsBits, (uint64_t)object, v6, (uint64_t)v5, v7);
    v2[1] = v9._countAndFlagsBits;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v10 = &type metadata for String;
  v9 = value;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_166FC((uint64_t)&v9, v6, (uint64_t)v5);
}

uint64_t sub_22C3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(char *, unint64_t, uint64_t);
  _QWORD *v27;
  char *v28;
  uint64_t i;
  int64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t *v54;
  int64_t *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t j;
  _QWORD *v65;
  unint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t (*v110)(char *, unint64_t, uint64_t);
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  _QWORD *v116;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v6);
  v8 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URLQueryItem(0);
  v115 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v108 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CB8);
  __chkstk_darwin(v11);
  v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URLComponents(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v107 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = *v2;
  if (!*(_QWORD *)(v113 + 16))
  {
    v21 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a2, a1, v21);
  }
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1459C((uint64_t)v13, &qword_3B0CB8);
    v17 = sub_22DBF8();
    v18 = swift_allocError(&type metadata for HttpTemplateError, v17, 0, 0);
    *v19 = 0;
    return swift_willThrow(v18);
  }
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v107, v13, v14);
  v23 = URLComponents.queryItems.getter(v22);
  v105 = v8;
  v106 = v3;
  v102 = a2;
  v103 = v15;
  v104 = v14;
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + 16);
    v101 = v23;
    if (v24)
    {
      v25 = v23 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
      v26 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v115 + 16);
      v109 = *(_QWORD *)(v115 + 72);
      v110 = v26;
      v27 = &_swiftEmptyDictionarySingleton;
      v28 = v108;
      for (i = v26(v108, v25, v9); ; i = v110(v28, v25, v9))
      {
        v32 = URLQueryItem.name.getter(i);
        v34 = v33;
        v35 = URLQueryItem.value.getter(v32);
        if (v36)
        {
          v111 = v24;
          v112 = v35;
          v114 = v36;
          v37 = v9;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
          v116 = v27;
          v39 = v32;
          v40 = v32;
          v41 = v34;
          v43 = sub_29724(v40, v34);
          v44 = v27[2];
          v45 = (v42 & 1) == 0;
          v46 = v44 + v45;
          if (__OFADD__(v44, v45))
          {
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
          v47 = v42;
          if (v27[3] >= v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_232894();
          }
          else
          {
            sub_22FB80(v46, isUniquelyReferenced_nonNull_native);
            v48 = sub_29724(v39, v41);
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_71;
            v43 = v48;
          }
          v9 = v37;
          v27 = v116;
          if ((v47 & 1) != 0)
          {
            v30 = (int64_t *)(v116[7] + 16 * v43);
            swift_bridgeObjectRelease();
            v31 = v114;
            *v30 = v112;
            v30[1] = v31;
          }
          else
          {
            v116[(v43 >> 6) + 8] |= 1 << v43;
            v54 = (uint64_t *)(v27[6] + 16 * v43);
            *v54 = v39;
            v54[1] = v41;
            v55 = (int64_t *)(v27[7] + 16 * v43);
            v56 = v114;
            *v55 = v112;
            v55[1] = v56;
            v57 = v27[2];
            v58 = __OFADD__(v57, 1);
            v59 = v57 + 1;
            if (v58)
              goto LABEL_70;
            v27[2] = v59;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v28 = v108;
          v24 = v111;
        }
        else
        {
          swift_bridgeObjectRetain();
          v50 = sub_29724(v32, v34);
          v52 = v51;
          swift_bridgeObjectRelease();
          if ((v52 & 1) != 0)
          {
            v53 = swift_isUniquelyReferenced_nonNull_native(v27);
            v116 = v27;
            if ((v53 & 1) == 0)
            {
              sub_232894();
              v27 = v116;
            }
            swift_bridgeObjectRelease();
            sub_2314CC(v50, (uint64_t)v27);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v115 + 8))(v28, v9);
        v25 += v109;
        if (!--v24)
          break;
      }
    }
    else
    {
      v27 = &_swiftEmptyDictionarySingleton;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = &_swiftEmptyDictionarySingleton;
  }
  v60 = *(_QWORD *)(v113 + 64);
  v111 = v113 + 64;
  v61 = 1 << *(_BYTE *)(v113 + 32);
  v62 = -1;
  if (v61 < 64)
    v62 = ~(-1 << v61);
  v63 = v62 & v60;
  v112 = (unint64_t)(v61 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (j = 0; ; j = v115)
  {
    if (v63)
    {
      v114 = (v63 - 1) & v63;
      v115 = j;
      v66 = __clz(__rbit64(v63)) | (j << 6);
      goto LABEL_51;
    }
    v67 = j + 1;
    if (__OFADD__(j, 1))
      goto LABEL_67;
    if (v67 >= v112)
    {
LABEL_62:
      swift_release(v113);
      v91 = swift_bridgeObjectRetain();
      v92 = sub_22A644(v91);
      swift_bridgeObjectRelease_n(v27, 2);
      v93 = v107;
      v94 = URLComponents.queryItems.setter(v92);
      v95 = (uint64_t)v105;
      URLComponents.url.getter(v94);
      v96 = type metadata accessor for URL(0);
      v97 = *(_QWORD *)(v96 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96) == 1)
      {
        sub_1459C(v95, &qword_3B4370);
        v98 = sub_22DBF8();
        v99 = swift_allocError(&type metadata for HttpTemplateError, v98, 0, 0);
        *v100 = 0;
        swift_willThrow(v99);
        return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v93, v104);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v93, v104);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v102, v95, v96);
      }
    }
    v68 = *(_QWORD *)(v111 + 8 * v67);
    v69 = j + 1;
    if (!v68)
    {
      v69 = j + 2;
      if (j + 2 >= v112)
        goto LABEL_62;
      v68 = *(_QWORD *)(v111 + 8 * v69);
      if (!v68)
      {
        v69 = j + 3;
        if (j + 3 >= v112)
          goto LABEL_62;
        v68 = *(_QWORD *)(v111 + 8 * v69);
        if (!v68)
          break;
      }
    }
LABEL_50:
    v114 = (v68 - 1) & v68;
    v115 = v69;
    v66 = __clz(__rbit64(v68)) + (v69 << 6);
LABEL_51:
    v71 = 16 * v66;
    v72 = (uint64_t *)(*(_QWORD *)(v113 + 48) + v71);
    v74 = *v72;
    v73 = v72[1];
    v75 = (uint64_t *)(*(_QWORD *)(v113 + 56) + v71);
    v77 = *v75;
    v76 = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78 = swift_isUniquelyReferenced_nonNull_native(v27);
    v116 = v27;
    v80 = sub_29724(v74, v73);
    v81 = v27[2];
    v82 = (v79 & 1) == 0;
    v83 = v81 + v82;
    if (__OFADD__(v81, v82))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v84 = v79;
    if (v27[3] >= v83)
    {
      if ((v78 & 1) != 0)
      {
        v27 = v116;
        if ((v79 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        sub_232894();
        v27 = v116;
        if ((v84 & 1) != 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_22FB80(v83, v78);
      v85 = sub_29724(v74, v73);
      if ((v84 & 1) != (v86 & 1))
        goto LABEL_71;
      v80 = v85;
      v27 = v116;
      if ((v84 & 1) != 0)
      {
LABEL_33:
        v65 = (_QWORD *)(v27[7] + 16 * v80);
        swift_bridgeObjectRelease();
        *v65 = v77;
        v65[1] = v76;
        goto LABEL_34;
      }
    }
    v27[(v80 >> 6) + 8] |= 1 << v80;
    v87 = (uint64_t *)(v27[6] + 16 * v80);
    *v87 = v74;
    v87[1] = v73;
    v88 = (_QWORD *)(v27[7] + 16 * v80);
    *v88 = v77;
    v88[1] = v76;
    v89 = v27[2];
    v58 = __OFADD__(v89, 1);
    v90 = v89 + 1;
    if (v58)
      goto LABEL_66;
    v27[2] = v90;
    swift_bridgeObjectRetain();
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v114;
  }
  v70 = j + 4;
  if (j + 4 >= v112)
    goto LABEL_62;
  v68 = *(_QWORD *)(v111 + 8 * v70);
  if (v68)
  {
    v69 = j + 4;
    goto LABEL_50;
  }
  while (1)
  {
    v69 = v70 + 1;
    if (__OFADD__(v70, 1))
      break;
    if (v69 >= v112)
      goto LABEL_62;
    v68 = *(_QWORD *)(v111 + 8 * v69);
    ++v70;
    if (v68)
      goto LABEL_50;
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_22CBB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;

  v3 = *(_QWORD *)(v1 + 8);
  v37 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v38 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v39 = v3;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v40)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v40 = i;
      v10 = v9 | (i << 6);
    }
    else
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_36;
      if (v11 >= v38)
      {
LABEL_33:
        swift_release(v39);
        return (uint64_t)a1;
      }
      v12 = *(_QWORD *)(v37 + 8 * v11);
      v13 = i + 1;
      if (!v12)
      {
        v13 = i + 2;
        if (i + 2 >= v38)
          goto LABEL_33;
        v12 = *(_QWORD *)(v37 + 8 * v13);
        if (!v12)
        {
          v13 = i + 3;
          if (i + 3 >= v38)
            goto LABEL_33;
          v12 = *(_QWORD *)(v37 + 8 * v13);
          if (!v12)
          {
            v14 = i + 4;
            if (i + 4 >= v38)
              goto LABEL_33;
            v12 = *(_QWORD *)(v37 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_37;
                if (v13 >= v38)
                  goto LABEL_33;
                v12 = *(_QWORD *)(v37 + 8 * v13);
                ++v14;
                if (v12)
                  goto LABEL_21;
              }
            }
            v13 = i + 4;
          }
        }
      }
LABEL_21:
      v6 = (v12 - 1) & v12;
      v40 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = 16 * v10;
    v16 = (uint64_t *)(*(_QWORD *)(v39 + 48) + v15);
    v18 = *v16;
    v17 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(v39 + 56) + v15);
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    v24 = sub_29724(v18, v17);
    v25 = a1[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (a1[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_232894();
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_22FB80(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_29724(v18, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_38;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        v8 = (_QWORD *)(a1[7] + 16 * v24);
        swift_bridgeObjectRelease();
        *v8 = v21;
        v8[1] = v20;
        goto LABEL_5;
      }
    }
    a1[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(a1[6] + 16 * v24);
    *v31 = v18;
    v31[1] = v17;
    v32 = (_QWORD *)(a1[7] + 16 * v24);
    *v32 = v21;
    v32[1] = v20;
    v33 = a1[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_35;
    a1[2] = v35;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

id *sub_22CEA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  NSMutableDictionary v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  void *v28;
  Class v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  void *v37;
  uint64_t v38;
  int64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  Class isa;
  _QWORD v45[4];
  __int128 v46;
  _OWORD v47[2];
  id v48;
  uint64_t v49;
  __int128 v50;

  v3 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v1 + 16);
  v48 = *(id *)a1;
  v49 = v6;
  v8 = &v48;
  v9.super.super.isa = HttpTemplateJsonBody.makeMutableDictionary()().super.super.isa;
  if (!v10)
  {
    v40 = v5;
    v11 = *(_QWORD *)(v7 + 64);
    v41 = 0;
    v42 = v7 + 64;
    v12 = 1 << *(_BYTE *)(v7 + 32);
    v13 = -1;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    v14 = v13 & v11;
    v43 = (unint64_t)(v12 + 63) >> 6;
    isa = v9.super.super.isa;
    v39 = v43 - 1;
    swift_bridgeObjectRetain();
    v15 = 0;
    if (!v14)
      goto LABEL_12;
LABEL_10:
    v19 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v20 = v19 | (v15 << 6);
LABEL_11:
    v21 = *(_QWORD *)(v7 + 56);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v23 = v22[1];
    *(_QWORD *)&v46 = *v22;
    *((_QWORD *)&v46 + 1) = v23;
    sub_1FB98(v21 + 32 * v20, (uint64_t)v47);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_15BD4((uint64_t)&v46, (uint64_t)&v48, &qword_3BB408);
      v27 = v49;
      if (!v49)
        break;
      v16 = v48;
      sub_1F460(&v50, &v46);
      v45[2] = v16;
      v45[3] = v27;
      v45[0] = 46;
      v45[1] = 0xE100000000000000;
      v17 = sub_65CC4();
      v18 = StringProtocol.components<A>(separatedBy:)(v45, &type metadata for String, &type metadata for String, v17, v17);
      swift_bridgeObjectRelease();
      sub_22A940((uint64_t)&v46, v18);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(&v46);
      if (v14)
        goto LABEL_10;
LABEL_12:
      v24 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
      }
      if (v24 < v43)
      {
        v25 = *(_QWORD *)(v42 + 8 * v24);
        if (v25)
          goto LABEL_15;
        v26 = v15 + 2;
        ++v15;
        if (v24 + 1 < v43)
        {
          v25 = *(_QWORD *)(v42 + 8 * v26);
          if (v25)
            goto LABEL_18;
          v15 = v24 + 1;
          if (v24 + 2 < v43)
          {
            v25 = *(_QWORD *)(v42 + 8 * (v24 + 2));
            if (v25)
            {
              v24 += 2;
              goto LABEL_15;
            }
            v26 = v24 + 3;
            v15 = v24 + 2;
            if (v24 + 3 < v43)
            {
              v25 = *(_QWORD *)(v42 + 8 * v26);
              if (v25)
              {
LABEL_18:
                v24 = v26;
LABEL_15:
                v14 = (v25 - 1) & v25;
                v20 = __clz(__rbit64(v25)) + (v24 << 6);
                v15 = v24;
                goto LABEL_11;
              }
              while (1)
              {
                v24 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_36;
                if (v24 >= v43)
                  break;
                v25 = *(_QWORD *)(v42 + 8 * v24);
                ++v26;
                if (v25)
                  goto LABEL_15;
              }
              v15 = v39;
            }
          }
        }
      }
      v14 = 0;
      memset(v47, 0, sizeof(v47));
      v46 = 0u;
    }
    swift_release(v7);
    v28 = (void *)objc_opt_self(NSJSONSerialization);
    v48 = 0;
    v29 = isa;
    v8 = (id *)objc_msgSend(v28, "dataWithJSONObject:options:error:", isa, 0, &v48);
    v30 = v48;
    if (v8)
    {
      v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v33 = v32;

      v34 = v40;
      static String.Encoding.utf8.getter(v35);
      v8 = (id *)String.init(data:encoding:)(v31, v33, v34);

      sub_31BA4(v31, v33);
    }
    else
    {
      v37 = v30;
      _convertNSErrorToError(_:)(v30);

      swift_willThrow(v38);
    }
  }
  return v8;
}

char *HttpTemplateAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  void (*v2)(char *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  unint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  char *v121;

  v119 = a2;
  v121 = a1;
  v108 = *(_QWORD *)v2;
  v3 = type metadata accessor for JSONContext(0);
  v117 = *(_QWORD *)(v3 - 8);
  v118 = v3;
  v4 = __chkstk_darwin(v3);
  v112 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v105 = (char *)&v100 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C05D8);
  __chkstk_darwin(v7);
  v114 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v9);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONObject(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v111 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v110 = (char *)&v100 - v17;
  v18 = __chkstk_darwin(v16);
  v109 = (char *)&v100 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v100 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v100 - v24;
  v26 = __chkstk_darwin(v23);
  v106 = (char *)&v100 - v27;
  v28 = __chkstk_darwin(v26);
  v107 = (char *)&v100 - v29;
  __chkstk_darwin(v28);
  v31 = (char *)&v100 - v30;
  v32 = type metadata accessor for URL(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v115 = (char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = v2;
  swift_retain(v2);
  v35 = JSONObject.subscript.getter(7107189, 0xE300000000000000);
  JSONObject.url.getter(v35);
  v36 = v13;
  v37 = *(void (**)(char *, uint64_t))(v13 + 8);
  v38 = v31;
  v39 = v32;
  v40 = v12;
  v37(v38, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v11, 1, v39) == 1)
  {
    sub_1459C((uint64_t)v11, &qword_3B4370);
    v41 = (char *)type metadata accessor for JSONError(0);
    v42 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v41, v42, 0, 0);
    v44 = v43;
    v45 = v116;
    v46 = *(_QWORD *)v116;
    swift_release(v116);
    *v44 = 7107189;
    v44[1] = 0xE300000000000000;
    v44[2] = v46;
    v47 = (*(uint64_t (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v41 - 1) + 104))(v44, enum case for JSONError.missingProperty(_:), v41);
    swift_willThrow(v47);
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v119, v118);
    v37(v121, v40);
    swift_deallocPartialClassInstance(v45, v108, *(unsigned int *)(*(_QWORD *)v45 + 48), *(unsigned __int16 *)(*(_QWORD *)v45 + 52));
    return v41;
  }
  v101 = v25;
  v102 = v22;
  v108 = v36;
  v48 = v115;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v115, v11, v39);
  v49 = v116;
  v103 = v33;
  v104 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))((uint64_t)v116 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_url, v48, v39);
  v50 = (uint64_t)v107;
  v51 = v121;
  JSONObject.subscript.getter(0x646F6874656DLL, 0xE600000000000000);
  v52 = sub_1BF220();
  JSONObject.stringEnum<A>(or:)(&v120, sub_BE128, 0, &type metadata for HttpActionMethod, v52);
  v37((char *)v50, v12);
  *((_BYTE *)v49 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_method) = v120;
  v53 = v106;
  v54 = JSONObject.subscript.getter(0x73726564616568, 0xE700000000000000);
  v55 = v114;
  JSONObject.dictionary.getter(v54);
  v37(v53, v40);
  v56 = type metadata accessor for JSONDictionary(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56);
  v106 = (char *)v37;
  v100 = v40;
  if (v58 == 1)
  {
    sub_1459C(v114, &qword_3C05D8);
    v60 = v116;
    v59 = v117;
    v61 = v105;
LABEL_6:
    v63 = sub_288078((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v62 = v114;
  v63 = JSONDictionary.bridgedPrimitiveValues<A, B>()(&type metadata for String, &type metadata for String, &protocol witness table for String);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v62, v56);
  v60 = v116;
  v59 = v117;
  v61 = v105;
  if (!v63)
    goto LABEL_6;
LABEL_7:
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_headers) = v63;
  JSONObject.subscript.getter(2036625250, 0xE400000000000000);
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v65 = v118;
  v66 = v119;
  v64(v61, v119, v118);
  v116 = v64;
  sub_23311C();
  ExpressibleByJSON.init(tryDeserializing:using:)(v50, v61, &type metadata for HttpTemplateJsonBody);
  *(_OWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body) = v120;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E80);
  JSONObject.subscript.getter(0x6574656D61726170, 0xEA00000000007372);
  v64(v61, v66, v65);
  sub_233160();
  ExpressibleByJSON.init(tryDeserializing:using:)(v50, v61, v67);
  v68 = (_QWORD *)v120;
  if (!(_QWORD)v120)
    v68 = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_parameters) = v68;
  v69 = v101;
  v70 = JSONObject.subscript.getter(0x5265726F74537369, 0xEE00747365757165);
  v71 = JSONObject.BOOL.getter(v70);
  v72 = v69;
  v73 = v100;
  v74 = (void (*)(char *, uint64_t))v106;
  ((void (*)(char *, uint64_t))v106)(v72, v100);
  *((_BYTE *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_isStoreRequest) = v71 & 1;
  v75 = v102;
  v76 = JSONObject.subscript.getter(0xD000000000000013, 0x8000000000312FD0);
  v77 = JSONObject.BOOL.getter(v76);
  v74(v75, v73);
  *((_BYTE *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_needsAuthentication) = v77 & 1;
  v78 = v109;
  v79 = JSONObject.subscript.getter(0x756F437972746572, 0xEA0000000000746ELL);
  v80 = JSONObject.int.getter(v79);
  LOBYTE(v75) = v81;
  v74(v78, v73);
  if ((v75 & 1) != 0)
    v82 = 0;
  else
    v82 = v80;
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_retryCount) = v82;
  v83 = v110;
  v84 = JSONObject.subscript.getter(0x43656C6261736964, 0xEC00000065686361);
  v85 = JSONObject.BOOL.getter(v84);
  v74(v83, v73);
  *((_BYTE *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_disableCache) = v85 & 1;
  JSONObject.subscript.getter(0x4173736563637573, 0xED00006E6F697463);
  v86 = v119;
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v50, v119);
  v74((char *)v50, v73);
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_successAction) = Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  JSONObject.subscript.getter(0x416572756C696166, 0xED00006E6F697463);
  v88 = v86;
  v89 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v50, v86);
  v74((char *)v50, v73);
  *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_failureAction) = v89;
  v90 = JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000);
  v91 = JSONObject.string.getter(v90);
  v93 = v92;
  v94 = v118;
  v74((char *)v50, v73);
  v95 = (uint64_t *)((char *)v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_message);
  *v95 = v91;
  v95[1] = v93;
  swift_release(v60);
  v41 = v111;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v111, v51, v73);
  v96 = (uint64_t)v112;
  v116(v112, v88, v94);
  v97 = v113;
  v98 = Action.init(deserializing:using:)(v41, v96);
  if (!v97)
    v41 = (char *)v98;
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v88, v94);
  v74(v51, v73);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v115, v104);
  return v41;
}

unint64_t sub_22DBF8()
{
  unint64_t result;

  result = qword_3C2E58;
  if (!qword_3C2E58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateError);
    atomic_store(result, (unint64_t *)&qword_3C2E58);
  }
  return result;
}

uint64_t HttpTemplateAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_url;
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void HttpTemplateAction.method.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_method);
}

uint64_t HttpTemplateAction.headers.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_headers));
}

uint64_t HttpTemplateAction.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t HttpTemplateAction.parameters.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_parameters));
}

uint64_t HttpTemplateAction.isStoreRequest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_isStoreRequest);
}

uint64_t HttpTemplateAction.needsAuthentication.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_needsAuthentication);
}

uint64_t HttpTemplateAction.retryCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_retryCount);
}

uint64_t HttpTemplateAction.disableCache.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_disableCache);
}

uint64_t HttpTemplateAction.successAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_successAction));
}

uint64_t HttpTemplateAction.failureAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_failureAction));
}

uint64_t HttpTemplateAction.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_message);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_message + 8));
  return v1;
}

char *HttpTemplateAction.makeAction(with:actionMetrics:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id *v26;
  id *v27;
  id *v28;
  uint64_t v30;
  id **v31;
  char v32;
  char *v33;
  char v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[24];
  _QWORD v53[3];
  char v54[24];
  char v55[24];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = v2;
  v45 = a2;
  v6 = type metadata accessor for ActionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v13 = a1[1];
  v16 = a1[2];
  v15 = a1[3];
  v56 = *a1;
  v57 = v13;
  v46 = v16;
  v58 = v16;
  v59 = v15;
  v47 = v15;
  v60 = v4;
  sub_22C3AC(v4 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_url, (uint64_t)v12);
  if (!v3)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v45, v6);
    v17 = type metadata accessor for HttpAction(0);
    swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
    v9 = (char *)HttpAction.init(url:presentationStyle:actionMetrics:)((uint64_t)v12, 0, (uint64_t)v9);
    v18 = v60;
    v19 = *(_BYTE *)(v60 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_method);
    v20 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_method];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_method], v55, 1, 0);
    *v20 = v19;
    v56 = v14;
    v57 = v13;
    v21 = v46;
    v22 = v47;
    v58 = v46;
    v59 = v47;
    v23 = sub_22CBB4(*(_QWORD **)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_headers));
    v24 = (uint64_t *)&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_headers];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_headers], v54, 1, 0);
    *v24 = v23;
    swift_bridgeObjectRelease();
    v56 = v14;
    v57 = v13;
    v58 = v21;
    v59 = v22;
    v25 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body + 8);
    v53[0] = *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body);
    v53[1] = v25;
    swift_bridgeObjectRetain();
    v26 = sub_22CEA0((uint64_t)v53);
    v28 = v27;
    swift_bridgeObjectRelease();
    v30 = v22;
    v31 = (id **)&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_body];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_body], &v56, 1, 0);
    *v31 = v26;
    v31[1] = v28;
    swift_bridgeObjectRelease();
    v32 = *(_BYTE *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_isStoreRequest);
    v33 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_isStoreRequest], v53, 1, 0);
    *v33 = v32;
    v34 = *(_BYTE *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_needsAuthentication);
    v35 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_needsAuthentication], v52, 1, 0);
    *v35 = v34;
    v36 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_retryCount);
    v37 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_retryCount], v51, 1, 0);
    *(_QWORD *)v37 = v36;
    LOBYTE(v36) = *(_BYTE *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_disableCache);
    v38 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_disableCache], v50, 1, 0);
    *v38 = v36;
    v39 = v30;
    if (!v30)
    {
      v39 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_successAction);
      swift_retain();
    }
    v40 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_successAction], v49, 1, 0);
    v41 = *(_QWORD *)v40;
    *(_QWORD *)v40 = v39;
    swift_retain();
    swift_release(v41);
    v42 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_failureAction);
    v43 = &v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8ShelfKit10HttpAction_failureAction], v48, 1, 0);
    v44 = *(_QWORD *)v43;
    *(_QWORD *)v43 = v42;
    swift_retain();
    swift_release(v44);
  }
  return v9;
}

void HttpTemplateAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.HttpTemplateAction", 27, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_22E17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_headers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_body + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_parameters));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_successAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_failureAction));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_message + 8));
}

uint64_t HttpTemplateAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  v3 = v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_url;
  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_successAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit18HttpTemplateAction_failureAction));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HttpTemplateAction.__deallocating_deinit()
{
  uint64_t v0;

  HttpTemplateAction.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_22E348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C2E60;
  if (!qword_3C2E60)
  {
    v1 = objc_opt_self(NSMutableDictionary);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3C2E60);
  }
  return result;
}

uint64_t sub_22E384(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B1810);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain(v5);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_37;
        v20 = v36[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_37;
          v20 = v36[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_44;
                if (v14 >= v35)
                  goto LABEL_37;
                v20 = v36[v14];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v14 = v21;
          }
        }
LABEL_24:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_1F460(v25, v38);
      }
      else
      {
        sub_1FB98((uint64_t)v25, (uint64_t)v38);
        swift_bridgeObjectRetain(v23);
      }
      Hasher.init(_seed:)(v37);
      String.hash(into:)(v37, v24, v23);
      result = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_1F460(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_22E680(uint64_t a1, uint64_t a2)
{
  return sub_22F428(a1, a2, (void (*)(uint64_t))&type metadata accessor for UUID, &qword_3C3008, &qword_3B1D40, (uint64_t)&protocol conformance descriptor for UUID);
}

Swift::Int sub_22E6A4(uint64_t a1, uint64_t a2)
{
  return sub_230164(a1, a2, &qword_3C3018);
}

uint64_t sub_22E6B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3040);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              swift_release(v5);
              v3 = v35;
              if ((a2 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v14 >= v36)
                  goto LABEL_36;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v14 = v25;
          }
        }
LABEL_33:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)(v39);
      swift_bridgeObjectRetain();
      String.hash(into:)(v39, v33, v32);
      swift_bridgeObjectRelease();
      result = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v38;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

Swift::Int sub_22E9C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  Swift::Int result;
  Swift::Int v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  Swift::UInt64 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[9];

  v3 = v2;
  v41 = type metadata accessor for ThinClientEpisodeStateModel(0);
  v6 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3038);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = (Swift::Int)v39;
        if (v22 >= v38)
          goto LABEL_35;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_35;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_35:
              if ((v37 & 1) == 0)
              {
                result = swift_release(v9);
                v3 = v36;
                goto LABEL_42;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v12 >= v38)
                  goto LABEL_35;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_25;
              }
            }
            v12 = v24;
          }
        }
LABEL_25:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v41);
      Hasher.init(_seed:)(v42);
      Hasher._combine(_:)(v25);
      result = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v41);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release(v9);
LABEL_42:
  *v3 = v11;
  return result;
}

uint64_t sub_22ED00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[9];

  v3 = v2;
  v46 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3030);
  v44 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v41 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v42)
      goto LABEL_36;
    v23 = v43[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_36;
      v23 = v43[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v31, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v45, v31, v46);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v47);
    String.hash(into:)(v47, v29, v28);
    result = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v45, v46);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v42)
  {
    v23 = v43[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v42)
          goto LABEL_36;
        v23 = v43[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v8);
  v3 = v41;
  if ((v44 & 1) != 0)
  {
    v39 = 1 << *(_BYTE *)(v8 + 32);
    if (v39 >= 64)
      bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v43 = -1 << v39;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  result = swift_release(v8);
  *v3 = v10;
  return result;
}

uint64_t sub_22F068(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v5 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v2;
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3048);
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release(v8);
    v38 = v41;
LABEL_44:
    *v38 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  HIDWORD(v40) = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v44 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_26;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v42)
    {
      swift_release(v8);
      v38 = v41;
      v23 = v43;
      if ((v40 & 0x100000000) != 0)
      {
LABEL_39:
        v39 = 1 << *(_BYTE *)(v8 + 32);
        if (v39 >= 64)
          bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v39;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_43:
      result = swift_release(v8);
      goto LABEL_44;
    }
    v23 = v43;
    v24 = v43[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_36;
      v24 = v43[v17];
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v45 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + v44))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v5);
    v27 = v8;
    v28 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v21);
    v29 = *(_QWORD *)(v10 + 40);
    v30 = sub_F1C0(&qword_3B1D40, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v5, v30);
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v5);
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v19) = v28;
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  v25 = v22 + 2;
  if (v25 >= v42)
  {
LABEL_36:
    swift_release(v8);
    v38 = v41;
    if ((v40 & 0x100000000) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v43[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v42)
      goto LABEL_36;
    v24 = v43[v17];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_22F404(uint64_t a1, uint64_t a2)
{
  return sub_22F428(a1, a2, (void (*)(uint64_t))&type metadata accessor for URL, &qword_3C3028, &qword_3B1D60, (uint64_t)&protocol conformance descriptor for URL);
}

uint64_t sub_22F428(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  void (*v49)(uint64_t);
  unint64_t *v50;
  uint64_t v51;
  int v52;

  v50 = a5;
  v51 = a6;
  v8 = v6;
  v49 = a3;
  v11 = ((uint64_t (*)(_QWORD))a3)(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  v15 = *v8;
  if (*(_QWORD *)(*v8 + 24) > a1)
    a1 = *(_QWORD *)(*v8 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v52 = a2;
  v16 = static _DictionaryStorage.resize(original:capacity:move:)(v15, a1, a2);
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_43;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v47 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v45 = v8;
  v46 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  result = swift_retain(v15);
  v24 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_24;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v28 >= v46)
      break;
    v29 = v47;
    v30 = v47[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v46)
        goto LABEL_36;
      v30 = v47[v24];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v46)
        {
LABEL_36:
          swift_release(v15);
          v8 = v45;
          if ((v52 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v30 = v47[v31];
        if (!v30)
        {
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_45;
            if (v24 >= v46)
              goto LABEL_36;
            v30 = v47[v24];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v24 = v31;
      }
    }
LABEL_23:
    v21 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_24:
    v32 = *(_QWORD *)(v12 + 72);
    v33 = *(_QWORD *)(v15 + 48) + v32 * v27;
    if ((v52 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 32))(v14, v33, v11);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v33, v11);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
      swift_bridgeObjectRetain(v34);
    }
    v35 = *(_QWORD *)(v17 + 40);
    v36 = sub_F1C0(v50, v49, v51);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v11, v36);
    v37 = -1 << *(_BYTE *)(v17 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v22 + 8 * v39);
      }
      while (v43 == -1);
      v25 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v32 * v25, v14, v11);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v25) = v34;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release(v15);
  v8 = v45;
  v29 = v47;
  if ((v52 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v44 = 1 << *(_BYTE *)(v15 + 32);
  if (v44 >= 64)
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v44;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_43:
  result = swift_release(v15);
  *v8 = v17;
  return result;
}

uint64_t sub_22F7B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  int v48;
  __int128 v49;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3050);
  v48 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_24;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v24 >= v45)
      break;
    v25 = v46;
    v26 = v46[v24];
    ++v19;
    if (!v26)
    {
      v19 = v24 + 1;
      if (v24 + 1 >= v45)
        goto LABEL_36;
      v26 = v46[v19];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v45)
        {
LABEL_36:
          swift_release(v10);
          v3 = v44;
          if ((v48 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = v46[v27];
        if (!v26)
        {
          while (1)
          {
            v19 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v19 >= v45)
              goto LABEL_36;
            v26 = v46[v19];
            ++v27;
            if (v26)
              goto LABEL_23;
          }
        }
        v19 = v27;
      }
    }
LABEL_23:
    v16 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v19 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v7 + 72);
    v29 = *(_QWORD *)(v10 + 48) + v28 * v23;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v29, v6);
      v30 = *(_QWORD *)(v10 + 56) + 24 * v23;
      v49 = *(_OWORD *)v30;
      v31 = *(_QWORD *)(v30 + 16);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v29, v6);
      v32 = *(_QWORD *)(v10 + 56) + 24 * v23;
      v31 = *(_QWORD *)(v32 + 16);
      v49 = *(_OWORD *)v32;
      swift_unknownObjectRetain(v49);
      swift_retain();
    }
    v33 = *(_QWORD *)(v12 + 40);
    v34 = sub_F1C0(&qword_3B1D40, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v6, v34);
    v35 = -1 << *(_BYTE *)(v12 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v17 + 8 * v37);
      }
      while (v41 == -1);
      v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v28 * v20, v9, v6);
    v21 = *(_QWORD *)(v12 + 56) + 24 * v20;
    *(_OWORD *)v21 = v49;
    *(_QWORD *)(v21 + 16) = v31;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v44;
  v25 = v46;
  if ((v48 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v42 = 1 << *(_BYTE *)(v10 + 32);
  if (v42 >= 64)
    bzero(v25, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v42;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  result = swift_release(v10);
  *v3 = v12;
  return result;
}

Swift::Int sub_22FB80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3020);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_34;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v14 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v14 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44);
    String.hash(into:)(v44, v35, v34);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_22FEA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3010);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v11;
    v34 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_36;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_36;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v34 >= 64)
                  bzero((void *)(v5 + 64), 8 * v35);
                else
                  *v10 = v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v35)
                  goto LABEL_36;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(v5 + 56);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
      v32 = *(_QWORD *)(v30 + v29);
      if ((a2 & 1) == 0)
        sub_26794(*(_QWORD *)(v30 + v29));
      result = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v31);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

Swift::Int sub_230158(uint64_t a1, uint64_t a2)
{
  return sub_230164(a1, a2, &qword_3C3058);
}

Swift::Int sub_230164(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release(v6);
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v15 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v15 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      swift_retain(v34);
    }
    Hasher.init(_seed:)(v39);
    String.hash(into:)(v39, v33, v32);
    result = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

uint64_t sub_230474(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3BCFD0);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_25;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v18 >= v37)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v38 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_37;
      v20 = *(_QWORD *)(v38 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_37:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v20 = *(_QWORD *)(v38 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_46;
            if (v14 >= v37)
              goto LABEL_37;
            v20 = *(_QWORD *)(v38 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v14 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_25:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((v39 & 1) != 0)
    {
      sub_1F460(v23, v41);
    }
    else
    {
      sub_1FB98((uint64_t)v23, (uint64_t)v41);
      v24 = v22;
    }
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v27 = v26;
    Hasher.init(_seed:)(v40);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    result = swift_bridgeObjectRelease();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_1F460(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_2307AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3000);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_25;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v18 >= v37)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v38 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_37;
      v20 = *(_QWORD *)(v38 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_37:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v20 = *(_QWORD *)(v38 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_46;
            if (v14 >= v37)
              goto LABEL_37;
            v20 = *(_QWORD *)(v38 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v14 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_25:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((v39 & 1) != 0)
    {
      sub_1F460(v23, v41);
    }
    else
    {
      sub_1FB98((uint64_t)v23, (uint64_t)v41);
      v24 = v22;
    }
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v27 = v26;
    Hasher.init(_seed:)(v40);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    result = swift_bridgeObjectRelease();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_1F460(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release();
  *v3 = v8;
  return result;
}

unint64_t sub_230AE4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v29);
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v29, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v13 < v8)
          goto LABEL_11;
LABEL_12:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (_OWORD *)(v14 + 16 * v3);
        v16 = (_OWORD *)(v14 + 16 * v6);
        if (v3 != v6 || v15 >= v16 + 1)
          *v15 = *v16;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 72);
        v19 = v18 * v3;
        result = v17 + v18 * v3;
        v20 = v18 * v6;
        v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v13 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_230CE0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v37 = (result + 1) & v11;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v36(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_F1C0(&qword_3B1D40, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            result = v24 + v15 * a1;
            v25 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v25 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v25, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result);
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_BYTE *)(v26 + a1);
            v28 = (_BYTE *)(v26 + v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_230F80(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for URL(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v38 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v37(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_F1C0(&qword_3B1D60, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_QWORD *)(v27 + 8 * a1);
            v29 = (_QWORD *)(v27 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_231220(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int128 *v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v38 = (result + 1) & v11;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v37(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_F1C0(&qword_3B1D40, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            result = v24 + v15 * a1;
            v25 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v25 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v25, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result);
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = v26 + 24 * a1;
            v28 = (__int128 *)(v26 + 24 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= (unint64_t)v28 + 24))
            {
              v29 = *v28;
              *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
              *(_OWORD *)v27 = v29;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2314CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26);
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2316A0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2317A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

unint64_t sub_2316AC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_2316FC(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_231794(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2317A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_2317A0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_231838(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a6[6];
  v13 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v15 = (_QWORD *)(a6[7] + 24 * a1);
  *v15 = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16 = a6[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a6[2] = v18;
  return result;
}

unint64_t sub_2318EC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_231938(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1F460(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_23199C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B1810);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release(v2);
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1FB98(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1F460(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_231B80()
{
  return sub_232410((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_3C3008);
}

void *sub_231B94()
{
  return sub_232BF8(&qword_3C3018);
}

void *sub_231BA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3040);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_231D60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for ThinClientEpisodeStateModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3038);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v5);
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_231F80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3030);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release(v4);
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release(v4);
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2321DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3048);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v5);
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2323FC()
{
  return sub_232410((uint64_t (*)(_QWORD))&type metadata accessor for URL, &qword_3C3028);
}

void *sub_232410(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v8);
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain(v22);
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232640()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  __int128 v32;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3050);
  v29 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v5);
    *v29 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v30 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v31)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v31)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 24 * v16;
    v19 = *(_QWORD *)(v5 + 56) + 24 * v16;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v7 + 48) + v17;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v32 = *(_OWORD *)v19;
    v22(v21, v4, v1);
    v23 = *(_QWORD *)(v7 + 56) + v18;
    v24 = v32;
    *(_OWORD *)v23 = v32;
    *(_QWORD *)(v23 + 16) = v20;
    swift_unknownObjectRetain(v24);
    result = (void *)swift_retain();
  }
  v27 = v25 + 2;
  if (v27 >= v31)
    goto LABEL_26;
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v31)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232894()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3020);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    result = (void *)swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232A4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3010);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)sub_26794(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_232BEC()
{
  return sub_232BF8(&qword_3C3058);
}

void *sub_232BF8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    result = (void *)swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_232DA4()
{
  return sub_232DBC(&qword_3BCFD0);
}

id sub_232DB0()
{
  return sub_232DBC(&qword_3C3000);
}

id sub_232DBC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 32 * v16;
    sub_1FB98(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    sub_1F460(v23, (_OWORD *)(*(_QWORD *)(v5 + 56) + v19));
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_232F7C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t _s8ShelfKit21HttpTemplateParameterV6TargetO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375978, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t _s8ShelfKit21HttpTemplateParameterV9InputTypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_3759E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_233094()
{
  unint64_t result;

  result = qword_3C2E68;
  if (!qword_3C2E68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateParameter.Target);
    atomic_store(result, (unint64_t *)&qword_3C2E68);
  }
  return result;
}

unint64_t sub_2330D8()
{
  unint64_t result;

  result = qword_3C2E70;
  if (!qword_3C2E70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateParameter.InputType);
    atomic_store(result, (unint64_t *)&qword_3C2E70);
  }
  return result;
}

unint64_t sub_23311C()
{
  unint64_t result;

  result = qword_3C2E78;
  if (!qword_3C2E78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateJsonBody);
    atomic_store(result, (unint64_t *)&qword_3C2E78);
  }
  return result;
}

unint64_t sub_233160()
{
  unint64_t result;

  result = qword_3C2E88;
  if (!qword_3C2E88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C2E80);
    sub_2331C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A]);
    atomic_store(result, (unint64_t *)&qword_3C2E88);
  }
  return result;
}

unint64_t sub_2331C4()
{
  unint64_t result;

  result = qword_3C2E90;
  if (!qword_3C2E90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateParameter);
    atomic_store(result, (unint64_t *)&qword_3C2E90);
  }
  return result;
}

unint64_t sub_23320C()
{
  unint64_t result;

  result = qword_3C2E98;
  if (!qword_3C2E98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateError);
    atomic_store(result, (unint64_t *)&qword_3C2E98);
  }
  return result;
}

unint64_t sub_233254()
{
  unint64_t result;

  result = qword_3C2EA0;
  if (!qword_3C2EA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateParameter.Target);
    atomic_store(result, (unint64_t *)&qword_3C2EA0);
  }
  return result;
}

unint64_t sub_23329C()
{
  unint64_t result;

  result = qword_3C2EA8;
  if (!qword_3C2EA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HttpTemplateParameter.InputType);
    atomic_store(result, (unint64_t *)&qword_3C2EA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HttpTemplateError()
{
  return &type metadata for HttpTemplateError;
}

ValueMetadata *type metadata accessor for HttpTemplateJsonBody()
{
  return &type metadata for HttpTemplateJsonBody;
}

ValueMetadata *type metadata accessor for HttpTemplateFormBody()
{
  return &type metadata for HttpTemplateFormBody;
}

uint64_t destroy for HttpTemplateParameter(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for HttpTemplateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for HttpTemplateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HttpTemplateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HttpTemplateParameter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HttpTemplateParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HttpTemplateParameter()
{
  return &type metadata for HttpTemplateParameter;
}

uint64_t _s8ShelfKit21HttpTemplateParameterV6TargetOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2335A4 + 4 * byte_300D41[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2335D8 + 4 * byte_300D3C[v4]))();
}

uint64_t sub_2335D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2335E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2335E8);
  return result;
}

uint64_t sub_2335F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2335FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HttpTemplateParameter.Target()
{
  return &type metadata for HttpTemplateParameter.Target;
}

uint64_t storeEnumTagSinglePayload for HttpTemplateParameter.InputType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233670 + 4 * byte_300D4B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2336A4 + 4 * byte_300D46[v4]))();
}

uint64_t sub_2336A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2336AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2336B4);
  return result;
}

uint64_t sub_2336C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2336C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2336CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2336D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HttpTemplateParameter.InputType()
{
  return &type metadata for HttpTemplateParameter.InputType;
}

uint64_t destroy for HttpTemplateSubstitutions(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_release(a1[3]);
}

uint64_t *initializeWithCopy for HttpTemplateSubstitutions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for HttpTemplateSubstitutions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a1[3];
  v11 = a2[3];
  a1[3] = v11;
  swift_retain(v11);
  swift_release(v10);
  return a1;
}

_QWORD *assignWithTake for HttpTemplateSubstitutions(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for HttpTemplateSubstitutions()
{
  return &type metadata for HttpTemplateSubstitutions;
}

uint64_t sub_23386C()
{
  return type metadata accessor for HttpTemplateAction(0);
}

uint64_t type metadata accessor for HttpTemplateAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C2ED8;
  if (!qword_3C2ED8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HttpTemplateAction);
  return result;
}

uint64_t sub_2338B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_301178;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_301190;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_3011A8;
    v4[6] = &unk_3011A8;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = &unk_3011A8;
    v4[9] = &unk_3011C0;
    v4[10] = &unk_3011C0;
    v4[11] = &unk_301190;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 160);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t SearchAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SearchAction(0) + 24);
  return sub_282CC(v3, a1);
}

uint64_t type metadata accessor for SearchAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C30B8;
  if (!qword_3C30B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchAction);
  return result;
}

uint64_t SearchAction.hintIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchAction(0) + 28));
}

uint64_t SearchAction.hintIndex.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SearchAction(0);
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

void (__swiftcall *SearchAction.hintIndex.modify())()
{
  type metadata accessor for SearchAction(0);
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t SearchAction.activatesSearchBar.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchAction(0) + 32));
}

uint64_t SearchAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchAction(0) + 36);
  v4 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchAction.init(origin:term:url:hintIndex:activatesSearchBar:actionMetrics:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = (int *)type metadata accessor for SearchAction(0);
  v18 = a9 + v17[7];
  *(_BYTE *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  sub_B683C(a4, a9 + v17[6]);
  *(_QWORD *)v18 = a5;
  *(_BYTE *)(v18 + 8) = a6 & 1;
  *(_BYTE *)(a9 + v17[8]) = a7;
  v19 = a9 + v17[9];
  v20 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a8, v20);
}

uint64_t sub_233BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SearchAction.with(hintIndex:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  sub_233C34(v3, a3);
  result = type metadata accessor for SearchAction(0);
  v8 = a3 + *(int *)(result + 28);
  *(_QWORD *)v8 = a1;
  *(_BYTE *)(v8 + 8) = a2 & 1;
  return result;
}

uint64_t sub_233C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SearchAction.init(deserializing:using:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int v29;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v71 = a2;
  v64 = a3;
  v4 = type metadata accessor for ActionMetrics(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v67 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v6);
  v66 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSONContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v65 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - v12;
  v14 = type metadata accessor for JSONObject(0);
  v68 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v56 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v56 - v24;
  v72 = a1;
  JSONObject.subscript.getter(0x6E696769726FLL, 0xE600000000000000);
  v26 = v71;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27(v13, v71, v8);
  v28 = v70;
  v29 = sub_45ADC((uint64_t)v25, (uint64_t)v13);
  if (v28)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v72, v69);
  }
  else
  {
    v59 = v27;
    v60 = v16;
    v58 = v29;
    v61 = v9;
    v31 = v66;
    v32 = v67;
    v70 = v8;
    v33 = JSONObject.subscript.getter(1836213620, 0xE400000000000000);
    v34 = JSONObject.string.getter(v33);
    v36 = v35;
    v37 = v69;
    v38 = *(void (**)(char *, uint64_t))(v68 + 8);
    v38(v22, v69);
    if (v36)
    {
      v57 = v34;
      v68 = v36;
      v39 = v19;
      v40 = JSONObject.subscript.getter(7107189, 0xE300000000000000);
      v41 = (uint64_t)v31;
      JSONObject.url.getter(v40);
      v38(v39, v37);
      v42 = v60;
      JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274);
      v43 = v65;
      v45 = v70;
      v44 = v71;
      v59(v65, v71, v70);
      ActionMetrics.init(deserializing:using:)(v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v44, v45);
      v38(v72, v37);
      v52 = (int *)type metadata accessor for SearchAction(0);
      v53 = v64;
      v54 = &v64[v52[7]];
      *v64 = v58;
      v55 = v68;
      *((_QWORD *)v53 + 1) = v57;
      *((_QWORD *)v53 + 2) = v55;
      sub_B683C(v41, (uint64_t)&v53[v52[6]]);
      *(_QWORD *)v54 = 0;
      v54[8] = 1;
      v53[v52[8]] = 0;
      return (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v62 + 32))(&v53[v52[9]], v32, v63);
    }
    else
    {
      v46 = type metadata accessor for JSONError(0);
      v47 = sub_1E468();
      swift_allocError(v46, v47, 0, 0);
      v49 = v48;
      v50 = type metadata accessor for SearchAction(0);
      *v49 = 1836213620;
      v49[1] = 0xE400000000000000;
      v49[2] = v50;
      v51 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v49, enum case for JSONError.missingProperty(_:), v46);
      swift_willThrow(v51);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v71, v70);
      return ((uint64_t (*)(char *, uint64_t))v38)(v72, v37);
    }
  }
}

uint64_t sub_2340E0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return SearchAction.init(deserializing:using:)(a1, a2, a3);
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchAction(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)v4 + v16;
    v19 = (char *)a2 + v16;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v20 = *((_BYTE *)a2 + v17);
    v18[8] = v19[8];
    *((_BYTE *)v4 + v17) = v20;
    v21 = a3[9];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for ActionMetrics(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for SearchAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 36);
  v8 = type metadata accessor for ActionMetrics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v18 = *(_BYTE *)(a2 + v15);
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_BYTE *)(a1 + v15) = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_BYTE *)(a1 + v13) = v16;
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for SearchAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_BYTE *)(a1 + v17) = v20;
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_234854);
}

uint64_t sub_234854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for ActionMetrics(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_234904);
}

uint64_t sub_234904(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for ActionMetrics(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2349A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_301280;
  v6[1] = &unk_301298;
  sub_28C74(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_3012B0;
    v6[4] = &unk_3012C8;
    v4 = type metadata accessor for ActionMetrics(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t EpisodeContextAction.contentId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_contentId);
}

uint64_t EpisodeContextAction.episodeOffer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1E3E8(v1 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_episodeOffer, a1);
}

uint64_t EpisodeContextAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return EpisodeContextAction.init(deserializing:using:)(a1, a2);
}

uint64_t EpisodeContextAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v3 = v2;
  v56 = a2;
  v53 = *v3;
  v55 = type metadata accessor for JSONContext(0);
  v5 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - v8;
  v10 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v10);
  v52 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for JSONObject(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v47 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  swift_retain();
  v54 = a1;
  v21 = JSONObject.subscript.getter(0x49746E65746E6F63, 0xE900000000000064);
  v22 = JSONObject.string.getter(v21);
  if (v23)
  {
    v50 = v13;
    v24 = v51;
    v25 = static AdamID.parse(_:)(v22, v23);
    if (v24)
    {
      v26 = swift_bridgeObjectRelease();
      v27 = static AdamID.empty.getter(v26);
      swift_errorRelease(v24);
    }
    else
    {
      v27 = v25;
      swift_bridgeObjectRelease();
    }
    v36 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v46 = v12;
    v48 = v36;
    v36((uint64_t)v20, v12);
    *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_contentId) = v27;
    v37 = v54;
    JSONObject.subscript.getter(0x4F65646F73697065, 0xEC00000072656666);
    v51 = v5;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39 = v56;
    v40 = v55;
    v38(v9, v56, v55);
    v41 = v52;
    EpisodeOffer.init(deserializing:using:)((uint64_t)v17, (uint64_t)v9, v52);
    sub_1E4B0((uint64_t)v41, (uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_episodeOffer);
    swift_release(v3);
    v43 = v46;
    v44 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v37, v46);
    v45 = (uint64_t)v49;
    v38(v49, v39, v40);
    v29 = Action.init(deserializing:using:)(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v39, v40);
    v48((uint64_t)v37, v43);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v20, v12);
    v29 = type metadata accessor for JSONError(0);
    v30 = sub_1E468();
    swift_allocError(v29, v30, 0, 0);
    v32 = v31;
    v33 = *v3;
    swift_release(v3);
    *v32 = 0x49746E65746E6F63;
    v32[1] = 0xE900000000000064;
    v32[2] = v33;
    v34 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v32, enum case for JSONError.missingProperty(_:), v29);
    swift_willThrow(v34);
    v35 = v54;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v56, v55);
    v28(v35, v12);
    swift_deallocPartialClassInstance(v3, v53, *(unsigned int *)(*v3 + 48), *(unsigned __int16 *)(*v3 + 52));
  }
  return v29;
}

void EpisodeContextAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.EpisodeContextAction", 29, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_234F00()
{
  uint64_t v0;

  return sub_1E42C(v0 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_episodeOffer);
}

uint64_t EpisodeContextAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_1E42C(v0 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_episodeOffer);
  return v0;
}

uint64_t EpisodeContextAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B00(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_1E42C(v0 + OBJC_IVAR____TtC8ShelfKit20EpisodeContextAction_episodeOffer);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_235014()
{
  return type metadata accessor for EpisodeContextAction(0);
}

uint64_t type metadata accessor for EpisodeContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3128;
  if (!qword_3C3128)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EpisodeContextAction);
  return result;
}

uint64_t sub_23505C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC8ShelfKit16ShowListProvider_kind) == 9)
    v5 = 14;
  else
    v5 = 16;
  v6 = swift_storeEnumTagMultiPayload(v4, v2, v5);
  v7 = InteractionContext.Page.entityAnnotation()(v6);
  sub_1D8B8C((uint64_t)v4);
  v11 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return CurrentValueSubject.init(_:)(&v11);
}

uint64_t sub_23511C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_301500);
  v5 = swift_getKeyPath(&unk_301528);
  static Published.subscript.getter(v3, v0, KeyPath, v5);
  swift_release(KeyPath);
  v6 = swift_release(v5);
  v7 = InteractionContext.Page.entityAnnotation()(v6);
  sub_1D8B8C((uint64_t)v3);
  v11 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return CurrentValueSubject.init(_:)(&v11);
}

uint64_t sub_2351F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[24];

  v1 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  swift_beginAccess(v4, v12, 0, 0);
  v5 = type metadata accessor for EpisodeListSettings(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v3, v4, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  v7 = swift_storeEnumTagMultiPayload(v3, v1, 1);
  v8 = InteractionContext.Page.entityAnnotation()(v7);
  sub_1D8B8C((uint64_t)v3);
  v11 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  return CurrentValueSubject.init(_:)(&v11);
}

uint64_t ModernPagePresenter.appEntityAnnotation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for InteractionContext.Page(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 72))(a1, a2, v5);
  v9 = InteractionContext.Page.entityAnnotation()(v8);
  sub_1D8B8C((uint64_t)v7);
  v13 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return CurrentValueSubject.init(_:)(&v13);
}

uint64_t ModernPagePresenter.scrollToTop.getter()
{
  return sub_235D1C();
}

uint64_t sub_2353DC(uint64_t a1)
{
  return sub_235CC4(a1);
}

double ModernPagePresenter.reorderingExtension.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t _s8ShelfKit19ModernPagePresenterPAAE10pageRender7Combine7Subject_ps5NeverO7FailureRts_10PodcastsUI0dG5EventO6OutputRtsXPvg_0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for PageRenderEvent(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))(v3, enum case for PageRenderEvent.notImplemented(_:), v1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3218);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = CurrentValueSubject.init(_:)(v3);
  sub_32914((unint64_t *)&unk_3C3220, &qword_3C3218, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return v6;
}

uint64_t sub_2354BC(uint64_t a1, uint64_t a2)
{
  return sub_23555C(a1, a2, 8);
}

uint64_t sub_2354C4(uint64_t a1)
{
  return sub_235CC4(a1);
}

uint64_t sub_2354D0(uint64_t a1)
{
  return sub_235CC4(a1);
}

uint64_t sub_2354DC(uint64_t a1, uint64_t a2)
{
  return sub_23555C(a1, a2, 9);
}

uint64_t sub_2354E4(uint64_t a1, uint64_t a2)
{
  return sub_23555C(a1, a2, 19);
}

uint64_t sub_2354EC(uint64_t a1)
{
  return sub_235CC4(a1);
}

uint64_t sub_2354F8(uint64_t a1)
{
  return sub_235CC4(a1);
}

uint64_t _s8ShelfKit19ModernPagePresenterPAAE17headerButtonItems7Combine19CurrentValueSubjectCySayAA06HeaderG4ItemOGs5NeverOGvg_0()
{
  uint64_t v0;
  _QWORD *v2;

  v2 = _swiftEmptyArrayStorage;
  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8780);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return CurrentValueSubject.init(_:)(&v2);
}

uint64_t sub_235554(uint64_t a1, uint64_t a2)
{
  return sub_23555C(a1, a2, 10);
}

uint64_t sub_23555C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_storeEnumTagMultiPayload(v6, v7, a3);
  v9 = InteractionContext.Page.entityAnnotation()(v8);
  sub_1D8B8C((uint64_t)v6);
  v13 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return CurrentValueSubject.init(_:)(&v13);
}

uint64_t sub_2355FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v0 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = LibraryShowProvider.interactionContextPage.getter((uint64_t)v2);
  v4 = InteractionContext.Page.entityAnnotation()(v3);
  sub_1D8B8C((uint64_t)v2);
  v8 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  return CurrentValueSubject.init(_:)(&v8);
}

_UNKNOWN **static UberStyle.allCases.getter()
{
  return &off_375B10;
}

uint64_t UberStyle.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2356DC + 4 * byte_301350[a1]))(0x6E69616C70, 0xE500000000000000);
}

uint64_t sub_2356DC()
{
  return 0x6548646972627968;
}

uint64_t sub_2356F8()
{
  return 1869768040;
}

uint64_t sub_235708()
{
  return 0x65646F73697065;
}

uint64_t sub_235720()
{
  return 1836019570;
}

uint64_t sub_235730()
{
  return 0x6C656E6E616863;
}

void sub_235748(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_235794@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_235818 + 4 * byte_30135C[a1]))(0x6548646972627968);
}

uint64_t sub_235818(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6548646972627968 && v1 == 0xEA00000000006F72)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6548646972627968, 0xEA00000000006F72, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA00000000006F72);
  return v2 & 1;
}

void sub_2358F0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_235938()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6548646972627968, 0xEA00000000006F72);
  swift_bridgeObjectRelease(0xEA00000000006F72);
  return Hasher._finalize()();
}

void sub_2359CC()
{
  __asm { BR              X10 }
}

uint64_t sub_235A04(uint64_t a1)
{
  String.hash(into:)(a1, 0x6548646972627968, 0xEA00000000006F72);
  return swift_bridgeObjectRelease(0xEA00000000006F72);
}

void sub_235A84()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_235AC8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6548646972627968, 0xEA00000000006F72);
  swift_bridgeObjectRelease(0xEA00000000006F72);
  return Hasher._finalize()();
}

unint64_t sub_235B5C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8ShelfKit9UberStyleO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_235B88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_235BB4 + 4 * byte_301374[*v0]))();
}

void sub_235BB4(_QWORD *a1@<X8>)
{
  *a1 = 0x6548646972627968;
  a1[1] = 0xEA00000000006F72;
}

void sub_235BD4(_QWORD *a1@<X8>)
{
  *a1 = 1869768040;
  a1[1] = 0xE400000000000000;
}

void sub_235BE8(_QWORD *a1@<X8>)
{
  *a1 = 0x65646F73697065;
  a1[1] = 0xE700000000000000;
}

void sub_235C04(_QWORD *a1@<X8>)
{
  *a1 = 1836019570;
  a1[1] = 0xE400000000000000;
}

void sub_235C18(_QWORD *a1@<X8>)
{
  *a1 = 0x6C656E6E616863;
  a1[1] = 0xE700000000000000;
}

void sub_235C34(_QWORD *a1@<X8>)
{
  *a1 = &off_375B10;
}

double sub_235C48@<D0>(_OWORD *a1@<X8>)
{
  return Paragraph.clickSender.getter(a1);
}

double sub_235C5C@<D0>(_OWORD *a1@<X8>)
{
  return ModernPagePresenter.reorderingExtension.getter(a1);
}

void *PageHeader.title.getter(void *a1, void *a2, uint64_t a3)
{
  void *v3;

  if (BYTE4(a3) > 3u)
    return 0;
  v3 = a1;
  sub_235E3C(a1, a2, a3, SBYTE4(a3));
  return v3;
}

uint64_t sub_235CB8(uint64_t a1)
{
  return sub_235CC4(a1);
}

uint64_t sub_235CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = InteractionContext.Page.entityAnnotation()(a1);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B63D0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return CurrentValueSubject.init(_:)(&v3);
}

uint64_t sub_235D1C()
{
  uint64_t v0;
  char v2;

  v2 = 0;
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20D0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return CurrentValueSubject.init(_:)(&v2);
}

uint64_t _s8ShelfKit19ModernPagePresenterPAAE16hasLoadedContent7Combine19CurrentValueSubjectCy10PodcastsUI20ExtendedLaunchStatusOs5NeverOGvg_0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for ExtendedLaunchStatus(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))(v3, enum case for ExtendedLaunchStatus.notImplementedError(_:), v1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4448);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  return CurrentValueSubject.init(_:)(v3);
}

unint64_t _s8ShelfKit9UberStyleO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375A60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

id sub_235E3C(id result, id a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = (id)swift_bridgeObjectRetain(a2);
      break;
    case 4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_235E78()
{
  unint64_t result;

  result = qword_3C3200;
  if (!qword_3C3200)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UberStyle);
    atomic_store(result, (unint64_t *)&qword_3C3200);
  }
  return result;
}

uint64_t sub_235EBC()
{
  return sub_32914(&qword_3C3208, &qword_3C3210, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t storeEnumTagSinglePayload for UberStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_235F34 + 4 * byte_301384[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_235F68 + 4 * byte_30137F[v4]))();
}

uint64_t sub_235F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235F78);
  return result;
}

uint64_t sub_235F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235F8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_235F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UberStyle()
{
  return &type metadata for UberStyle;
}

void destroy for PageHeader(uint64_t a1)
{
  sub_235FCC(*(void **)a1, *(id *)(a1 + 8), *(unsigned int *)(a1 + 16), *(_BYTE *)(a1 + 20));
}

void sub_235FCC(void *a1, id a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease(a2);
      break;
    case 4:

      break;
    default:
      return;
  }
}

uint64_t _s8ShelfKit10PageHeaderOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_235E3C(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 20) = v6;
  return a1;
}

uint64_t assignWithCopy for PageHeader(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 20);
  sub_235E3C(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(unsigned int *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v6;
  sub_235FCC(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PageHeader(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_DWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(unsigned int *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 20);
  *(_BYTE *)(a1 + 20) = v4;
  sub_235FCC(v5, v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageHeader(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = -(char)a2;
  }
  return result;
}

uint64_t sub_2361C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 20) <= 4u)
    return *(unsigned __int8 *)(a1 + 20);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_2361D8(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_BYTE *)(result + 20) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PageHeader()
{
  return &type metadata for PageHeader;
}

uint64_t dispatch thunk of ModernPagePresenter.pageExtensions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ModernPagePresenter.showsHeaders.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ModernPagePresenter.clearsSelectionOnViewWillAppear.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ModernPagePresenter.hasLoadedContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.refollowAllRecentlyUnfollowedShows()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t BookmarkEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t LocalEpisodeContentIDsIntent;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2[19] = a1;
  v2[20] = a2;
  v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v2[21] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[22] = v4;
  v2[23] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalEpisodeContentIDsIntent = type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntent(0);
  v2[24] = LocalEpisodeContentIDsIntent;
  v6 = *(_QWORD *)(LocalEpisodeContentIDsIntent - 8);
  v2[25] = v6;
  v2[26] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  v2[27] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[28] = v8;
  v2[29] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B68D0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v2[30] = v10;
  *v10 = v2;
  v10[1] = sub_236334;
  return BaseObjectGraph.inject<A>(_:)(v2 + 17, v9, v9);
}

uint64_t sub_236334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_236980;
  else
    v3 = sub_236398;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_236398()
{
  _QWORD *v0;
  uint64_t ObjectType;
  _QWORD *v2;

  v0[32] = v0[17];
  ObjectType = swift_getObjectType();
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  v2 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
  v0[33] = v2;
  *v2 = v0;
  v2[1] = sub_236418;
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v0[29], ObjectType);
}

uint64_t sub_236418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return swift_task_switch(sub_23649C, 0, 0);
}

uint64_t sub_23649C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7060);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v0 + 280) = v2;
  *v2 = v0;
  v2[1] = sub_236514;
  return BaseObjectGraph.inject<A>(_:)(v0 + 16, v1, v1);
}

uint64_t sub_236514()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(*v1 + 280);
  v3 = *v1;
  *(_QWORD *)(v3 + 288) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_2369D4, 0, 0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v3 + 296) = v6;
  *v6 = v3;
  v6[1] = sub_2365D4;
  return BaseObjectGraph.inject<A>(_:)(v3 + 56, v5, v5);
}

uint64_t sub_2365D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_236A30;
  else
    v3 = sub_236638;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_236638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = BookmarkEpisodeIntent.episodeIdentifiers.getter();
  FindOrCreateLocalEpisodeContentIDsIntent.init(identifiers:)(v1);
  v2 = v0[10];
  v3 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v2);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[39] = v4;
  v5 = sub_F1C0((unint64_t *)&qword_3C3240, (void (*)(uint64_t))&type metadata accessor for FindOrCreateLocalEpisodeContentIDsIntent, (uint64_t)&protocol conformance descriptor for FindOrCreateLocalEpisodeContentIDsIntent);
  *v4 = v0;
  v4[1] = sub_2366FC;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0 + 18, v0[26], v0[20], v0[24], v5, v2, v3);
}

uint64_t sub_2366FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 312);
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_236A98;
  else
    v3 = sub_236760;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_236760()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v1 = *(void **)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  sub_150C8(v0 + 16, v0 + 96);
  v6 = swift_allocObject(&unk_38B860, 72, 7);
  *(_QWORD *)(v0 + 328) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  sub_F4D8((__int128 *)(v0 + 96), v6 + 32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  v7 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v8 = v1;
  v9 = (_QWORD *)swift_task_alloc(v7);
  *(_QWORD *)(v0 + 336) = v9;
  *v9 = v0;
  v9[1] = sub_236850;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v9, *(_QWORD *)(v0 + 184), sub_236C5C, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_236850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_236B2C;
  else
    v7 = sub_2368E4;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_2368E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_236980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2369D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236BC0(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;

  result = NSManagedObjectContext.episodes(for:sortDescriptors:limit:)(a2, _swiftEmptyArrayStorage, 0, 1);
  if (!v3)
  {
    sub_236CA4(result, a3, a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236C28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_236C5C()
{
  uint64_t v0;

  return sub_236BC0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), (_QWORD *)(v0 + 32));
}

uint64_t sub_236C78()
{
  return sub_F1C0((unint64_t *)&qword_3B18D8, (void (*)(uint64_t))&type metadata accessor for BookmarkEpisodeIntent, (uint64_t)&protocol conformance descriptor for BookmarkEpisodeIntent);
}

id sub_236CA4(uint64_t a1, _QWORD *a2, void *a3)
{
  id v6;
  uint64_t v7;
  id result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  unsigned int v21;

  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v21 = objc_msgSend(v6, "BOOLForKey:", kMTDownloadEpisodesWhenSaving);

  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = (id)swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
    return (id)swift_bridgeObjectRelease();
  }
  if (a1 < 0)
    v18 = a1;
  else
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = (id)_CocoaArrayWrapper.endIndex.getter(v18);
  v7 = (uint64_t)result;
  if (!result)
    return (id)swift_bridgeObjectRelease();
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v19 = a3;
    v20 = a1 & 0xC000000000000001;
    v11 = a1;
    do
    {
      if (v20)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10);
      else
        v15 = *(id *)(a1 + 8 * v10 + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, "isBookmarked");
      if (v21)
        v12 = objc_msgSend(v16, "isDownloadable");
      else
        v12 = 0;
      ++v10;
      v9 |= v17 ^ 1;
      v14 = a2[3];
      v13 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v14);
      dispatch thunk of PodcastsStateCoordinatorProtocol.unsafeBookmarkIfNeeded(episode:shouldDownloadEpisode:from:)(v16, v12, 3, v14, v13);

      a1 = v11;
    }
    while (v7 != v10);
    result = (id)swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      return objc_msgSend(v19, "saveInCurrentBlock");
  }
  return result;
}

uint64_t sub_236E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_3C3234);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_BD868;
  return BookmarkEpisodeIntentImplementation.perform(_:objectGraph:)(a2, a3);
}

ValueMetadata *type metadata accessor for BookmarkEpisodeIntentImplementation()
{
  return &type metadata for BookmarkEpisodeIntentImplementation;
}

int *sub_236F04()
{
  uint64_t v0;
  int *result;

  v0 = type metadata accessor for AppLaunchMetricsEvent();
  swift_allocObject(v0, 178, 7);
  result = (int *)AppLaunchMetricsEvent.init()();
  off_3C3260 = result;
  return result;
}

uint64_t static PendingAppLaunch.didFailToLaunch()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_676C8();
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  aBlock[4] = sub_2376FC;
  v18 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_26;
  v10 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_E65F4();
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v13 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v0, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release(v18);
}

uint64_t static PendingAppLaunch.didFinishLaunch(postEventUsing:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricsPipeline(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_676C8();
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_38B8F8, v14 + v10, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_23785C;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_3_0;
  v16 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v16);
  v24 = _swiftEmptyArrayStorage;
  v17 = sub_E65F4();
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v19 = sub_724B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  return swift_release(v26);
}

void sub_237318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];

  v47 = a1;
  v1 = type metadata accessor for MetricsData(0);
  v48 = *(_QWORD *)(v1 - 8);
  v49 = v1;
  __chkstk_darwin(v1);
  v46 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B76E8);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for MetricsActivity.State(0);
  __chkstk_darwin(v41);
  v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B76F0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for MetricsFieldsContext(0);
  v9 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v18 = type metadata accessor for Date(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3B01D8 != -1)
    swift_once(&qword_3B01D8, sub_236F04);
  v22 = off_3C3260;
  if (off_3C3260)
  {
    v23 = swift_retain();
    v24 = Date.init()(v23);
    v25 = Date.timeIntervalSince1970.getter(v24);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    swift_beginAccess(v22 + 38, v51, 1, 0);
    *(double *)((char *)&stru_68.offset + (_QWORD)v22) = v25;
    *((_BYTE *)&stru_68.reloff + (_QWORD)v22) = 0;
    MetricsFieldsContext.init()(v26);
    v27 = type metadata accessor for PageContextTracker(0);
    v50 = static PageContextTracker.shared.getter();
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter(v50);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v50, v8, v27);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    swift_release(v50);
    v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    v29 = v44;
    v28(v11, v44);
    if (qword_3B0108 != -1)
      swift_once(&qword_3B0108, sub_13CAD4);
    v30 = v41;
    OSAllocatedUnfairLock.current.getter(v5, *(_QWORD *)(qword_3BBC50 + OBJC_IVAR____TtC8ShelfKit15MetricsActivity_state), v41);
    v31 = *(_QWORD *)((char *)v5 + *(int *)(v30 + 28));
    swift_bridgeObjectRetain();
    v32 = sub_B4A20((uint64_t)v5);
    v50 = v31;
    v33 = v42;
    static MetricsFieldsContext.Property<A>.pageFields.getter(v32);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A78);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v50, v33, v34);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v45);
    swift_bridgeObjectRelease();
    v28(v14, v29);
    v35 = v46;
    AppLaunchMetricsEvent.metricsData.getter();
    v36 = MetricsPipeline.process(_:using:)(v35, v17);
    swift_release(v36);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
    v37 = off_3C3260;
    off_3C3260 = 0;
    swift_release(v22);
    swift_release(v37);
    v28(v17, v29);
  }
}

void sub_2376FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _BYTE v9[24];

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_3B01D8 != -1)
    swift_once(&qword_3B01D8, sub_236F04);
  v4 = off_3C3260;
  if (off_3C3260)
  {
    v5 = swift_retain();
    v6 = Date.init()(v5);
    v7 = Date.timeIntervalSince1970.getter(v6);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    swift_beginAccess(v4 + 34, v9, 1, 0);
    *(double *)&stru_68.segname[(_QWORD)v4 + 16] = v7;
    *((_BYTE *)&stru_68.size + (_QWORD)v4) = 0;
    swift_release(v4);
  }
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_26(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2377FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MetricsPipeline(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_23785C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricsPipeline(0) - 8) + 80);
  sub_237318(v0 + ((v1 + 16) & ~v1));
}

ValueMetadata *type metadata accessor for PendingAppLaunch()
{
  return &type metadata for PendingAppLaunch;
}

_QWORD *ShowHeader.merging(with:preferredEpisodeToPlay:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  BOOL v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  unsigned __int8 *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  _BYTE v163[8];
  uint64_t v164;
  uint64_t v165;
  char v166;

  v3 = v2;
  v6 = *v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v7);
  v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v157 = (uint64_t)&v115 - v11;
  __chkstk_darwin(v12);
  v156 = (uint64_t)&v115 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v14);
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v115 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v115 - v21;
  __chkstk_darwin(v23);
  v162 = (uint64_t)&v115 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v115 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v115 - v29;
  if (a1)
  {
    v31 = v3[3];
    v164 = v3[2];
    v165 = v31;
    swift_retain();
    swift_bridgeObjectRetain();
    v32._countAndFlagsBits = 45;
    v32._object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    v33 = a1[2];
    v34 = (void *)a1[3];
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = v33;
    v35._object = v34;
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36 = *(_QWORD **)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_metadata);
    v37 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_metadata);
    v38 = *(_QWORD *)(v37 + 16);
    v158 = a2;
    v155 = v6;
    v152 = v165;
    v153 = v164;
    if (v38)
    {
      v39 = (_BYTE *)(v37 + 48);
      while (*v39 != 6)
      {
        v39 += 24;
        if (!--v38)
          goto LABEL_6;
      }
      v59 = *((_QWORD *)v39 - 2);
      v60 = *((_QWORD *)v39 - 1);
      sub_18ED7C(v59, v60, 6);
      swift_bridgeObjectRetain();
      sub_18ED7C(v59, v60, 6);
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        v36 = sub_110A4(0, v36[2] + 1, 1, v36);
      v62 = v36[2];
      v61 = v36[3];
      v63 = v36;
      if (v62 >= v61 >> 1)
        v63 = sub_110A4((_QWORD *)(v61 > 1), v62 + 1, 1, v36);
      v63[2] = v62 + 1;
      v36 = v63;
      v64 = &v63[3 * v62];
      v64[4] = v59;
      v64[5] = v60;
      *((_BYTE *)v64 + 48) = 6;
      sub_18EDC4(v59, v60, 6);
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRetain();
    }
    v65 = v3[4];
    v66 = a1[4];
    if (*(_BYTE *)(v65 + 16))
      v67 = 1869049708;
    else
      v67 = 0x7265766F63;
    if (*(_BYTE *)(v65 + 16))
      v68 = 0xE400000000000000;
    else
      v68 = 0xE500000000000000;
    if (*(_BYTE *)(v66 + 16))
      v69 = 1869049708;
    else
      v69 = 0x7265766F63;
    if (*(_BYTE *)(v66 + 16))
      v70 = 0xE400000000000000;
    else
      v70 = 0xE500000000000000;
    v71 = v67 == v69 && v68 == v70;
    v151 = v36;
    if (v71)
    {
      v159 = v65;
      swift_bridgeObjectRelease_n(v68, 2);
    }
    else
    {
      v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v69, v70, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v72 & 1) == 0)
        v65 = v66;
      v159 = v65;
    }
    v73 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid + 8);
    v150 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid);
    sub_267BC((uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, (uint64_t)v27, &qword_3BEB70);
    v74 = type metadata accessor for ArtworkModel(0);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    if (v76(v27, 1, v74) == 1)
    {
      sub_267BC((uint64_t)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, (uint64_t)v30, &qword_3BEB70);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1459C((uint64_t)v27, &qword_3BEB70);
    }
    else
    {
      sub_14614((uint64_t)v27, (uint64_t)v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v30, 0, 1, v74);
      swift_retain();
      swift_bridgeObjectRetain();
    }
    v161 = *(id *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor);
    v77 = *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_interfaceStyle);
    LODWORD(v160) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor + 8);
    v166 = v77;
    v78 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title + 8);
    if (v78)
    {
      v137 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
      v136 = v78;
    }
    else
    {
      v79 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title + 8);
      v137 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
      v136 = v79;
      swift_bridgeObjectRetain();
    }
    v80 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description + 8);
    v154 = v30;
    if (v80)
    {
      v135 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
      v134 = v80;
    }
    else
    {
      v81 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description + 8);
      v135 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
      v134 = v81;
      swift_bridgeObjectRetain();
    }
    sub_267BC((uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, (uint64_t)v22, &qword_3BEB70);
    if (v76(v22, 1, v74) == 1)
    {
      sub_267BC((uint64_t)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, v162, &qword_3BEB70);
      sub_C5CB0(v161, v160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1459C((uint64_t)v22, &qword_3BEB70);
    }
    else
    {
      v82 = (uint64_t)v22;
      v83 = v162;
      sub_14614(v82, v162);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v83, 0, 1, v74);
      sub_C5CB0(v161, v160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v84 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction);
    v85 = v84;
    v86 = v157;
    if (!v84)
    {
      v85 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction);
      swift_retain();
    }
    v87 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle + 8);
    v127 = v87;
    if (v87)
    {
      v133 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
      v132 = v87;
    }
    else
    {
      v88 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle + 8);
      v133 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
      v132 = v88;
      swift_bridgeObjectRetain();
    }
    v89 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction);
    v90 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction);
    v126 = v90;
    if (!v90)
    {
      v90 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction);
      swift_retain();
    }
    v91 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle + 8);
    v128 = v84;
    if (v91)
    {
      v130 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle);
      v129 = v91;
    }
    else
    {
      v92 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle + 8);
      v130 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle);
      v129 = v92;
      swift_bridgeObjectRetain();
    }
    v93 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner);
    v124 = v93;
    if (!v93)
    {
      v93 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner);
      swift_retain();
    }
    v125 = v91;
    v94 = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_entitlementBadge);
    if (v94 == 2)
      v94 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_entitlementBadge);
    LODWORD(v145) = v94;
    v149 = v73;
    v95 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction);
    v123 = v95;
    if (!v95)
    {
      v95 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction);
      swift_retain();
    }
    v146 = v93;
    v96 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_followAction);
    if (!v96)
      v96 = swift_retain();
    v143 = v96;
    v144 = v95;
    v97 = (unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed;
    swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, &v164, 0, 0);
    LODWORD(v142) = *v97;
    v98 = (unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId;
    swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId, v163, 0, 0);
    v99 = *v98;
    v100 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction);
    if (!v100)
      v100 = swift_retain();
    v140 = v100;
    v101 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId + 8);
    if (v101)
    {
      v122 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
      v121 = v101;
    }
    else
    {
      v102 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId + 8);
      v122 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
      v121 = v102;
      swift_bridgeObjectRetain();
    }
    v103 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID);
    v71 = *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID + 8) == 1;
    v148 = (void *)v85;
    if (v71)
    {
      v103 = (_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID);
      v120 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID + 8);
    }
    else
    {
      v120 = 0;
    }
    v139 = *v103;
    v104 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID + 8);
    v131 = v89;
    if (v104)
    {
      v119 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
      v118 = v104;
    }
    else
    {
      v105 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID + 8);
      v119 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
      v118 = v105;
      swift_bridgeObjectRetain();
    }
    v106 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink + 8);
    v147 = v90;
    LODWORD(v141) = v99;
    if (v106)
    {
      v117 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
      v116 = v106;
    }
    else
    {
      v107 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink + 8);
      v117 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
      v116 = v107;
      swift_bridgeObjectRetain();
    }
    LODWORD(v138) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_isForFirstPartyApp);
    sub_267BC((uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, v86, (uint64_t *)&unk_3B8790);
    v108 = type metadata accessor for ImpressionMetrics(0);
    v109 = v86;
    v110 = *(_QWORD *)(v108 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v109, 1, v108) == 1)
    {
      v111 = v156;
      sub_267BC((uint64_t)a1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, v156, (uint64_t *)&unk_3B8790);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v112 = v131;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1459C(v109, (uint64_t *)&unk_3B8790);
    }
    else
    {
      v111 = v156;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v156, v109, v108);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v108);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v112 = v131;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_allocObject(v155, *(unsigned int *)(v155 + 48), *(unsigned __int16 *)(v155 + 52));
    v3 = sub_23B810(v150, v149, v159, (uint64_t)v154, (uint64_t)v161, v160, &v166, v137, v136, v135, v134, v162, (uint64_t)v148, v133, v132, v112, v147, v130, v129,
           (uint64_t)v151,
           v146,
           v145,
           v144,
           v143,
           v153,
           v152,
           v142,
           v158,
           v141,
           v140,
           v122,
           v121,
           v139,
           v120,
           v119,
           v118,
           v117,
           v116,
           v138,
           v111);
    swift_retain();
    swift_release(a1);
  }
  else if (a2)
  {
    v40 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid);
    v150 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid + 8);
    v151 = (_QWORD *)v40;
    v149 = v3[4];
    sub_267BC((uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, (uint64_t)v19, &qword_3BEB70);
    v148 = *(void **)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor);
    v41 = *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_interfaceStyle);
    LODWORD(v147) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor + 8);
    v166 = v41;
    v42 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title + 8);
    v146 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
    v145 = v42;
    v43 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description + 8);
    v144 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
    v143 = v43;
    sub_267BC((uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, (uint64_t)v16, &qword_3BEB70);
    v142 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction);
    v44 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle + 8);
    v141 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
    v152 = v44;
    v156 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction);
    v45 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction);
    v162 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_metadata);
    v46 = *(void **)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner);
    v160 = v45;
    v161 = v46;
    LODWORD(v139) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_entitlementBadge);
    v159 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction);
    v157 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_followAction);
    v47 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle + 8);
    v137 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle);
    v154 = (char *)v47;
    v48 = (unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed;
    v135 = v3[2];
    v153 = v3[3];
    swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, &v164, 0, 0);
    LODWORD(v134) = *v48;
    v49 = (unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId;
    swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId, v163, 0, 0);
    LODWORD(v133) = *v49;
    v136 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction);
    v50 = v136;
    v158 = a2;
    v51 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId + 8);
    v131 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
    v138 = v51;
    v132 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID);
    LODWORD(v129) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID + 8);
    v52 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID + 8);
    v128 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
    v140 = v52;
    v53 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
    v130 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink + 8);
    v54 = v130;
    v55 = (uint64_t)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics;
    v56 = *((_BYTE *)v3 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_isForFirstPartyApp);
    sub_267BC(v55, (uint64_t)v9, (uint64_t *)&unk_3B8790);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v114 = v52;
    v57 = (uint64_t)v19;
    v58 = v148;
    LOBYTE(v52) = v147;
    v3 = sub_23B810((uint64_t)v151, v150, v149, v57, (uint64_t)v148, v147, &v166, v146, v145, v144, v143, (uint64_t)v16, v142, v141, v152, v156, v160, v137, (uint64_t)v154,
           v162,
           (uint64_t)v161,
           v139,
           v159,
           v157,
           v135,
           v153,
           v134,
           v158,
           v133,
           v50,
           v131,
           v51,
           v132,
           v129,
           v128,
           v114,
           v53,
           v54,
           v56,
           (uint64_t)v9);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_C5CB0(v58, v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
  }
  return v3;
}

_QWORD *ShowHeader.__allocating_init(podcastUuid:primaryArtwork:backgroundArtwork:backgroundColor:interfaceStyle:title:description:providerIconArtwork:providerAction:providerTitle:primaryButtonAction:secondaryButtonAction:secondaryButtonSubtitle:metadata:playAction:upsellBanner:entitlementBadge:contextAction:followAction:shelfUniqueId:hasEverPlayed:episodeToPlay:hasAdamId:subtitleAction:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:isForFirstPartyApp:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41)
{
  uint64_t v41;
  _QWORD *v42;

  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = sub_23B810(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34,
          a35 & 1,
          a36,
          a37,
          a38,
          a39,
          a40,
          a41);
  swift_release(a21);
  return v42;
}

_QWORD *ShowHeader.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (**v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  void (**v66)(uint64_t, char *, char *);
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  int v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v107;
  char *v108;
  uint64_t v109;
  char v110;
  char *v111;
  void (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t);
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, uint64_t);
  uint64_t v197;
  char *v198;
  void (**v199)(uint64_t, char *, char *);
  char *v200;
  _QWORD *v201;
  uint64_t v202;
  char *v203;
  uint64_t Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0;
  char *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  char v212;
  uint64_t v213;

  v209 = a2;
  v189 = type metadata accessor for UUID(0);
  v187 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v186 = (char *)&v158 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  v5 = __chkstk_darwin(v4);
  v188 = (uint64_t)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v181 = (char *)&v158 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  v9 = __chkstk_darwin(v8);
  v190 = (uint64_t)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v191 = (uint64_t)&v158 - v12;
  v13 = __chkstk_darwin(v11);
  v201 = (char **)((char *)&v158 - v14);
  __chkstk_darwin(v13);
  v197 = (uint64_t)&v158 - v15;
  v208 = type metadata accessor for JSONContext(0);
  v206 = *(_QWORD *)(v208 - 8);
  v16 = __chkstk_darwin(v208);
  v184 = (uint64_t)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v194 = (uint64_t)&v158 - v19;
  v20 = __chkstk_darwin(v18);
  v192 = (uint64_t)&v158 - v21;
  v22 = __chkstk_darwin(v20);
  v200 = (char *)&v158 - v23;
  __chkstk_darwin(v22);
  v199 = (void (**)(uint64_t, char *, char *))((char *)&v158 - v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v25);
  v27 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for JSONArray(0);
  v29 = *(void (***)(char *, char *, uint64_t))(v28 - 8);
  v30 = __chkstk_darwin(v28);
  v193 = (uint64_t)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v203 = (char *)&v158 - v32;
  v33 = type metadata accessor for JSONObject(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v185 = (char *)&v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v180 = (uint64_t)&v158 - v38;
  v39 = __chkstk_darwin(v37);
  v183 = (char *)&v158 - v40;
  v41 = __chkstk_darwin(v39);
  v182 = (char *)&v158 - v42;
  v43 = __chkstk_darwin(v41);
  v45 = (char *)&v158 - v44;
  v46 = __chkstk_darwin(v43);
  v198 = (char *)&v158 - v47;
  v48 = __chkstk_darwin(v46);
  v50 = (char *)&v158 - v49;
  __chkstk_darwin(v48);
  v52 = (char *)&v158 - v51;
  JSONObject.subscript.getter(0xD000000000000013, 0x800000000030E2F0);
  Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0((uint64_t)v52, v209);
  v53 = *(void (**)(char *, uint64_t))(v34 + 8);
  v53(v52, v33);
  v205 = a1;
  v54 = JSONObject.subscript.getter(0x617461646174656DLL, 0xE800000000000000);
  JSONObject.array.getter(v54);
  v53(v50, v33);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v29[6])(v27, 1, v28) == 1)
  {
    sub_1459C((uint64_t)v27, &qword_3B4F30);
    v55 = type metadata accessor for JSONError(0);
    v56 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    v57 = (_QWORD *)swift_allocError(v55, v56, 0, 0);
    *v58 = 0x617461646174656DLL;
    v59 = v202;
    v58[1] = 0xE800000000000000;
    v58[2] = v59;
    v60 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v58, enum case for JSONError.missingProperty(_:), v55);
    v207 = v57;
    swift_willThrow(v60);
    swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v208);
    v53(v205, v33);
  }
  else
  {
    v178 = v45;
    v179 = v52;
    v195 = v33;
    v196 = (void (*)(uint64_t, uint64_t))v53;
    v61 = v203;
    v29[4](v203, v27, v28);
    v62 = type metadata accessor for HeaderModel.PrimaryArtwork(0);
    v63 = (uint64_t)v198;
    v64 = v205;
    JSONObject.subscript.getter(0x417972616D697270, 0xEE006B726F777472);
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 16);
    v66 = v199;
    v65((uint64_t)v199, v209, v208);
    v67 = (uint64_t)v66;
    v57 = (_QWORD *)v62;
    v68 = v207;
    v69 = HeaderModel.PrimaryArtwork.__allocating_init(deserializing:using:)(v63, v67);
    v207 = v68;
    if (v68)
    {
      swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v208);
      v196((uint64_t)v64, v195);
      ((void (*)(char *, uint64_t))v29[1])(v61, v28);
    }
    else
    {
      v70 = v69;
      v198 = (char *)v28;
      v199 = (void (**)(uint64_t, char *, char *))v29;
      v71 = type metadata accessor for ArtworkModel(0);
      v72 = v179;
      v170 = 0xD000000000000011;
      JSONObject.subscript.getter(0xD000000000000011, 0x8000000000312940);
      v73 = v200;
      v75 = v208;
      v74 = v209;
      v65((uint64_t)v200, v209, v208);
      v76 = sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
      v176 = v71;
      ExpressibleByJSON.init(tryDeserializing:using:)(v72, v73, v71);
      v77 = (uint64_t)v178;
      JSONObject.subscript.getter(0x756F72676B636162, 0xEF726F6C6F43646ELL);
      v78 = v192;
      v177 = v65;
      v65(v192, v74, v75);
      v79 = v207;
      v80 = sub_449EC(v77, v78);
      v82 = v196;
      v174 = v70;
      v175 = v76;
      if (v79)
      {
        swift_errorRelease(v79);
        v171 = 0;
        v207 = 0;
        v211 = 255;
      }
      else
      {
        v211 = v81;
        v171 = v80;
        v207 = 0;
      }
      v83 = (uint64_t)v179;
      JSONObject.subscript.getter(0x6361667265746E69, 0xEE00656C79745365);
      v84 = sub_1B7E24();
      JSONObject.stringEnum<A>(or:)(&v213, sub_BE128, 0, &type metadata for HeaderModel.InterfaceStyle, v84);
      v85 = v195;
      v82(v83, v195);
      v167 = v213;
      v86 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
      v169 = JSONObject.string.getter(v86);
      v192 = v87;
      v82(v83, v85);
      v88 = JSONObject.subscript.getter(0x7470697263736564, 0xEB000000006E6F69);
      v168 = JSONObject.string.getter(v88);
      v178 = (char *)v89;
      v82(v83, v85);
      JSONObject.subscript.getter(0xD000000000000013, 0x8000000000314540);
      v90 = v200;
      v92 = v208;
      v91 = v209;
      v93 = v177;
      v177((uint64_t)v200, v209, v208);
      ExpressibleByJSON.init(tryDeserializing:using:)(v83, v90, v176);
      JSONObject.subscript.getter(0x72656469766F7270, 0xEE006E6F69746341);
      v176 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v83, v91);
      v82(v83, v85);
      v94 = JSONObject.subscript.getter(0x72656469766F7270, 0xED0000656C746954);
      v166 = JSONObject.string.getter(v94);
      v175 = v95;
      v82(v83, v85);
      JSONObject.subscript.getter(0xD000000000000015, 0x8000000000314560);
      v173 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v83, v91);
      v82(v83, v85);
      v96 = JSONObject.subscript.getter(0xD000000000000017, 0x8000000000314580);
      v97 = JSONObject.string.getter(v96);
      v172 = v98;
      v82(v83, v85);
      v99 = v198;
      v100 = v193;
      v101 = v203;
      v199[2](v193, v203, v198);
      v102 = v194;
      v93(v194, v91, v92);
      v103 = sub_FB970();
      v104 = v207;
      v105 = Array<A>.init(deserializing:using:)(v100, v102, &type metadata for HeaderModel.MetadataComponent, v103);
      v57 = v201;
      v207 = v104;
      if (v104)
      {
        swift_release(v174);
        swift_release(Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0);
        sub_C5CC4(v171, v211);
        swift_release(v176);
        swift_release(v173);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v208);
        v196((uint64_t)v205, v195);
        sub_1459C((uint64_t)v57, &qword_3BEB70);
        sub_1459C(v197, &qword_3BEB70);
        ((void (*)(char *, char *))v199[1])(v101, v99);
      }
      else
      {
        v193 = v105;
        v194 = v97;
        v107 = v182;
        v108 = v205;
        v109 = JSONObject.subscript.getter(0xD000000000000010, 0x80000000003145A0);
        v110 = JSONObject.BOOL.getter(v109);
        v111 = v107;
        v113 = v195;
        v112 = v196;
        v196((uint64_t)v111, v195);
        LODWORD(v182) = v110 & 1;
        v114 = type metadata accessor for UpsellBanner(0);
        JSONObject.subscript.getter(0x61426C6C65737075, 0xEC00000072656E6ELL);
        v115 = v200;
        v117 = v208;
        v116 = v209;
        v118 = v177;
        v177((uint64_t)v200, v209, v208);
        sub_F1C0(&qword_3C01A8, (void (*)(uint64_t))type metadata accessor for UpsellBanner, (uint64_t)&protocol conformance descriptor for UpsellBanner);
        ExpressibleByJSON.init(tryDeserializing:using:)(v83, v115, v114);
        v165 = v210;
        JSONObject.subscript.getter(0x41747865746E6F63, 0xED00006E6F697463);
        v164 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v83, v116);
        v112(v83, v113);
        v119 = v183;
        JSONObject.subscript.getter(0x6341776F6C6C6F66, 0xEC0000006E6F6974);
        v120 = v184;
        v118(v184, v116, v117);
        v121 = type metadata accessor for PodcastOfferAction(0);
        swift_allocObject(v121, *(unsigned int *)(v121 + 48), *(unsigned __int16 *)(v121 + 52));
        v122 = v207;
        v123 = PodcastOfferAction.init(deserializing:using:)(v119, v120);
        v124 = v196;
        v207 = v122;
        if (v122)
        {
          swift_errorRelease(v207);
          v158 = 0;
          v207 = 0;
        }
        else
        {
          v158 = v123;
        }
        v125 = v180;
        JSONObject.subscript.getter(0x656C746974627573, 0xEE006E6F69746341);
        v126 = _s8ShelfKit6ActionC17tryToMakeInstance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0(v83, v116);
        v124(v83, v113);
        v127 = JSONObject.subscript.getter(0x6C646E7542707061, 0xEB00000000644965);
        v128 = JSONObject.string.getter(v127);
        v180 = v129;
        v124(v83, v113);
        v130 = JSONObject.subscript.getter(0x496D616441707061, 0xE900000000000064);
        v131 = JSONObject.string.getter(v130);
        v133 = v132;
        v184 = v126;
        v183 = (char *)v128;
        if (v132)
        {
          v134 = v207;
          v135 = static AdamID.parse(_:)(v131, v132);
          v207 = v134;
          if (v134)
          {
            v136 = swift_bridgeObjectRelease();
            v159 = static AdamID.empty.getter(v136);
            swift_errorRelease(v207);
            v207 = 0;
          }
          else
          {
            v159 = v135;
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          v159 = 0;
        }
        v137 = (uint64_t)v181;
        LODWORD(v181) = v133 == 0;
        v138 = v125;
        v139 = v195;
        v140 = (void (*)(char *, uint64_t))v196;
        v196(v138, v195);
        v141 = v179;
        v142 = JSONObject.subscript.getter(0xD000000000000013, 0x8000000000311A20);
        v163 = JSONObject.string.getter(v142);
        v162 = v143;
        v140(v141, v139);
        v144 = JSONObject.subscript.getter(0xD000000000000018, 0x8000000000311A00);
        v161 = JSONObject.string.getter(v144);
        v160 = v145;
        v140(v141, v139);
        v146 = v185;
        v147 = JSONObject.subscript.getter(0xD000000000000012, 0x80000000003119E0);
        v148 = JSONObject.BOOL.getter(v147);
        v140(v146, v139);
        LODWORD(v185) = v148 & 1;
        v149 = type metadata accessor for ImpressionMetrics(0);
        JSONObject.subscript.getter(v170, 0x8000000000309180);
        v150 = v200;
        v177((uint64_t)v200, v209, v208);
        ExpressibleByJSON.init(tryDeserializing:using:)(v141, v150, v149);
        sub_267BC(v197, v191, &qword_3BEB70);
        v212 = v167;
        v151 = v190;
        v152 = sub_267BC((uint64_t)v201, v190, &qword_3BEB70);
        v153 = v186;
        UUID.init()(v152);
        v154 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
        v156 = v155;
        (*(void (**)(char *, uint64_t))(v187 + 8))(v153, v189);
        v157 = v188;
        sub_267BC(v137, v188, (uint64_t *)&unk_3B8790);
        swift_allocObject(v202, *(unsigned int *)(v202 + 48), *(unsigned __int16 *)(v202 + 52));
        v57 = sub_23B810(0, 0xE000000000000000, v174, v191, (uint64_t)v171, v211, &v212, v169, v192, v168, (uint64_t)v178, v151, v176, v166, v175, Instance15byDeserializing5usingACSg9JetEngine10JSONObjectV_AH11JSONContextVtFZ_0, v173, v194, v172,
                v193,
                v165,
                (char)v182,
                v164,
                (uint64_t)v158,
                v154,
                v156,
                0,
                0,
                1,
                v184,
                (uint64_t)v183,
                v180,
                v159,
                (char)v181,
                v163,
                v162,
                v161,
                v160,
                (char)v185,
                v157);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v209, v208);
        v140(v108, v139);
        sub_1459C(v137, (uint64_t *)&unk_3B8790);
        sub_1459C((uint64_t)v201, &qword_3BEB70);
        sub_1459C(v197, &qword_3BEB70);
        ((void (*)(char *, char *))v199[1])(v203, v198);
      }
    }
  }
  return v57;
}

uint64_t ShowHeader.backgroundArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, a1, &qword_3BEB70);
}

void ShowHeader.interfaceStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_interfaceStyle);
}

void *ShowHeader.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor);
  sub_C5CB0(v1, *(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor + 8));
  return v1;
}

uint64_t ShowHeader.title.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
}

uint64_t ShowHeader.description.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
}

uint64_t ShowHeader.providerIconArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, a1, &qword_3BEB70);
}

uint64_t ShowHeader.providerAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction));
}

uint64_t ShowHeader.providerTitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
}

uint64_t ShowHeader.primaryButtonAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction));
}

uint64_t ShowHeader.secondaryButtonAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction));
}

uint64_t ShowHeader.secondaryButtonSubtitle.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle);
}

uint64_t ShowHeader.metadata.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_metadata));
}

uint64_t ShowHeader.upsellBanner.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner));
}

uint64_t ShowHeader.entitlementBadge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_entitlementBadge);
}

uint64_t ShowHeader.episodeToPlay.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_episodeToPlay));
}

uint64_t ShowHeader.hasEverPlayed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, v3, 0, 0);
  return *v1;
}

uint64_t ShowHeader.hasEverPlayed.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*ShowHeader.hasEverPlayed.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ShowHeader.hasAdamId.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId, v3, 0, 0);
  return *v1;
}

uint64_t ShowHeader.hasAdamId.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*ShowHeader.hasAdamId.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ShowHeader.appBundleId.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
}

uint64_t ShowHeader.appAdamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID);
}

uint64_t ShowHeader.customProductPageID.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
}

uint64_t ShowHeader.externalAppOfferDeeplink.getter()
{
  return sub_1CCE8(&OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
}

uint64_t ShowHeader.isForFirstPartyApp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_isForFirstPartyApp);
}

uint64_t ShowHeader.subtitleAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction));
}

uint64_t ShowHeader.contextAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction));
}

uint64_t ShowHeader.followAction.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_followAction));
}

uint64_t ShowHeader.podcastUuid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid + 8));
  return v1;
}

uint64_t ShowHeader.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_267BC(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

_QWORD *ShowHeader.init(podcastUuid:primaryArtwork:backgroundArtwork:backgroundColor:interfaceStyle:title:description:providerIconArtwork:providerAction:providerTitle:primaryButtonAction:secondaryButtonAction:secondaryButtonSubtitle:metadata:playAction:upsellBanner:entitlementBadge:contextAction:followAction:shelfUniqueId:hasEverPlayed:episodeToPlay:hasAdamId:subtitleAction:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:isForFirstPartyApp:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41)
{
  _QWORD *v41;

  v41 = sub_23B810(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a22,
          a23,
          a24,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34,
          a35 & 1,
          a36,
          a37,
          a38,
          a39,
          a40,
          a41);
  swift_release(a21);
  return v41;
}

uint64_t ShowHeader.preferredBackgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - v5;
  v7 = (id *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor);
  v8 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor + 8);
  if ((_DWORD)v8 == 255)
  {
    sub_267BC(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, (uint64_t)&v17 - v5, &qword_3BEB70);
    v11 = type metadata accessor for ArtworkModel(0);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
    if (v12(v6, 1, v11) == 1)
    {
      sub_1459C((uint64_t)v6, &qword_3BEB70);
      v13 = 0;
    }
    else
    {
      v13 = (void *)*((_QWORD *)v6 + 7);
      v14 = v6[64];
      sub_C5CB0(v13, v6[64]);
      sub_3E4A4((uint64_t)v6);
      if ((_DWORD)v14 != 255)
        goto LABEL_10;
    }
    sub_267BC(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtCO8ShelfKit11HeaderModel14PrimaryArtwork_artwork, (uint64_t)v3, &qword_3BEB70);
    if (v12(v3, 1, v11) == 1)
    {
      sub_1459C((uint64_t)v3, &qword_3BEB70);
      sub_C5CC4(v13, 255);
      return 0;
    }
    v15 = (void *)*((_QWORD *)v3 + 7);
    v14 = v3[64];
    sub_C5CB0(v15, v3[64]);
    sub_3E4A4((uint64_t)v3);
    sub_C5CC4(v13, 255);
    if ((_DWORD)v14 == 255)
      return 0;
    v13 = v15;
LABEL_10:
    sub_C5CB0(v13, v14);
    v10 = Color.color.getter(v13, v14);
    sub_C5CC4(v13, v14);
    sub_C5CC4(v13, v14);
    return v10;
  }
  v9 = *v7;
  sub_3D47C(*v7, v8);
  v10 = Color.color.getter(v9, v8);
  sub_C5CC4(v9, v8);
  return v10;
}

_QWORD *ShowHeader.impressionableActions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE v32[72];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C01B0);
  inited = swift_initStackObject(v1, v32);
  v3 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_2F27F0;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner);
  if (v4)
  {
    *(_QWORD *)(inited + 32) = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_action);
    *(_QWORD *)(inited + 40) = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction);
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction);
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8ShelfKit12UpsellBanner_subtitleAction);
    swift_retain();
    inited = swift_retain();
  }
  else
  {
    v5 = 0;
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction);
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction);
  }
  v3[7] = v5;
  v3[8] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction);
  specialized Array._endMutation()(inited);
  v6 = v3[4];
  if (!v6)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    v11 = v3[5];
    if (!v11)
      goto LABEL_13;
    goto LABEL_10;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  v7 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v8 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
  specialized Array._endMutation()(v10);
  v11 = v3[5];
  if (v11)
  {
LABEL_10:
    v12 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v13 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
    specialized Array._endMutation()(v15);
  }
LABEL_13:
  v16 = v3[6];
  if (v16)
  {
    v17 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v18 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
    specialized Array._endMutation()(v20);
  }
  v21 = v3[7];
  if (v21)
  {
    v22 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v23 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
    specialized Array._endMutation()(v25);
  }
  v26 = v3[8];
  if (v26)
  {
    v27 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v29 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v28 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
    specialized Array._endMutation()(v30);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t ShowHeader.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 32));
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, &qword_3BEB70);
  sub_C5CC4(*(id *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor), *(_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, &qword_3BEB70);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_episodeToPlay));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_followAction));
  swift_bridgeObjectRelease();
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, (uint64_t *)&unk_3B8790);
  return v0;
}

uint64_t ShowHeader.__deallocating_deinit()
{
  uint64_t v0;

  ShowHeader.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

_QWORD *sub_23A9E4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = ShowHeader.__allocating_init(deserializing:using:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_23AA0C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 32));
}

uint64_t sub_23AA18@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, a1, &qword_3BEB70);
}

uint64_t sub_23AA48()
{
  return ShowHeader.preferredBackgroundColor.getter();
}

void sub_23AA68(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_interfaceStyle);
}

_QWORD *sub_23AA80()
{
  return ShowHeader.impressionableActions.getter();
}

uint64_t sub_23AAA0(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
}

uint64_t sub_23AAAC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID);
}

uint64_t sub_23AAC8(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
}

uint64_t sub_23AAD4(uint64_t a1, uint64_t a2)
{
  return sub_163A88(a1, a2, &OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
}

uint64_t sub_23AAE0()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_isForFirstPartyApp);
}

uint64_t sub_23AAF4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_267BC(*v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, a1, (uint64_t *)&unk_3B8790);
}

uint64_t ShowHeader.fullDescriptionAction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  uint64_t v29;
  char Attributed;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[30];
  __int16 v47;
  Swift::String v48;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v2);
  v4 = &v46[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B92D0);
  __chkstk_darwin(v5);
  v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v8);
  v10 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v11);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_episodeToPlay);
  if (v14)
  {
    v15 = (_BYTE *)(v0 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, v46, 0, 0);
    if (*v15 == 1)
    {
      v16 = *(_QWORD *)(v14 + 72);
      *(_QWORD *)v13 = *(_QWORD *)(v14 + 64);
      *((_QWORD *)v13 + 1) = v16;
      *((_QWORD *)v13 + 3) = 0;
      *((_QWORD *)v13 + 4) = 0;
      *((_QWORD *)v13 + 2) = 0;
      v13[40] = 1;
      *((_QWORD *)v13 + 6) = 0;
      v13[56] = 1;
      swift_storeEnumTagMultiPayload(v13, v11, 9);
      v17 = (void *)objc_opt_self(NSBundle);
      swift_retain();
      swift_bridgeObjectRetain();
      v18 = objc_msgSend(v17, "mainBundle");
      v48._object = (void *)0xE000000000000000;
      v19._object = (void *)0x8000000000312170;
      v19._countAndFlagsBits = 0xD00000000000001BLL;
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v48._countAndFlagsBits = 0;
      v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v48);

      v47 = 0;
      static ActionMetrics.notInstrumented.getter(v22);
      v23 = type metadata accessor for FlowAction(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v24 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v13, 0, 0, v21._countAndFlagsBits, (uint64_t)v21._object, (char *)&v47 + 1, 0, 48, (char *)&v47, (uint64_t)v10);
      v25 = v14;
LABEL_10:
      swift_release(v25);
      return v24;
    }
  }
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description + 8);
  if (v26)
  {
    v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
    v28 = (objc_class *)type metadata accessor for LanguageAwareString(0);
    v29 = swift_bridgeObjectRetain();
    Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter(v29);
    v31 = objc_allocWithZone(v28);
    v32 = (void *)LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(v27, v26, 0, Attributed & 1);
    v33 = type metadata accessor for ShareSheetContentSource(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 1, 1, v33);
    v34 = type metadata accessor for ImpressionMetrics(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 1, 1, v34);
    v35 = type metadata accessor for Paragraph(0);
    swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
    v36 = sub_F80AC((uint64_t)v32, 0, 2, 0, 1, (uint64_t)v7, (uint64_t)v4);

    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title + 8))
    {
      v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
      v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title + 8);
    }
    else
    {
      v37 = 0;
      v38 = 0xE000000000000000;
    }
    v40 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
    v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle + 8);
    v41 = type metadata accessor for LongDescription();
    v42 = (_QWORD *)swift_allocObject(v41, 56, 7);
    v42[2] = v37;
    v42[3] = v38;
    v42[4] = v40;
    v42[5] = v39;
    v42[6] = v36;
    *(_QWORD *)v13 = v42;
    swift_storeEnumTagMultiPayload(v13, v11, 23);
    v47 = 1024;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v43 = swift_bridgeObjectRetain();
    static ActionMetrics.notInstrumented.getter(v43);
    v44 = type metadata accessor for FlowAction(0);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    v24 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v13, 0, 0, 0, 0, (char *)&v47 + 1, 0, 48, (char *)&v47, (uint64_t)v10);
    swift_release(v42);
    v25 = v36;
    goto LABEL_10;
  }
  return 0;
}

NSAttributedString __swiftcall ShowHeader.richDescription(standardFont:emphasizedFont:)(UIFont standardFont, UIFont emphasizedFont)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  NSString *v16;
  objc_class *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  int v22;
  id v23;
  id v24;
  uint64_t v25;
  Class v26;
  NSString *v27;
  objc_class *v28;
  unint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  id v39;
  NSString v40;
  Class v41;
  id v42;
  id v43;
  NSString v44;
  Class v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  Class v58;
  void *v60;
  id v61;
  unint64_t v62;
  void *v63;
  NSString v64;
  Class v65;
  id v66;
  id v67;
  Class v68;
  __int128 v69;
  uint64_t v70;
  Class isa;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82[48];
  char v83[24];
  char v84[56];

  isa = emphasizedFont.super.isa;
  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B24D8);
  __chkstk_darwin(v8);
  v75 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for EyebrowBuilder.Style(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v74 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EyebrowBuilder.ListContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v73 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3268);
  inited = swift_initStackObject(v14, v84);
  v69 = xmmword_2EA0D0;
  *(_OWORD *)(inited + 16) = xmmword_2EA0D0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(UIFont *)(inited + 40) = standardFont;
  v16 = NSFontAttributeName;
  v17 = standardFont.super.isa;
  v18 = sub_288EA0(inited);
  v19 = v18;
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_episodeToPlay);
  if (v20)
  {
    v76 = v18;
    v21 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed, v83, 0, 0);
    v22 = *v21;
    v19 = v76;
    if (v22 == 1)
    {
      v23 = objc_allocWithZone((Class)NSMutableAttributedString);
      swift_retain();
      v24 = objc_msgSend(v23, "init");
      v25 = swift_initStackObject(v14, v82);
      *(_OWORD *)(v25 + 16) = v69;
      v26 = isa;
      *(_QWORD *)(v25 + 32) = v16;
      *(_QWORD *)(v25 + 40) = v26;
      v27 = v16;
      v28 = v26;
      v29 = sub_288EA0(v25);
      v80 = type metadata accessor for Episode(0);
      v81 = sub_F1C0(&qword_3C2638, (void (*)(uint64_t))type metadata accessor for Episode, (uint64_t)&protocol conformance descriptor for Episode);
      v78 = v20;
      v30 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
      v31 = v73;
      v30(v73, enum case for EyebrowBuilder.ListContext.single(_:), v11);
      v32 = v74;
      (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v74, enum case for EyebrowBuilder.Style.short(_:), v72);
      v33 = type metadata accessor for AbbreviatedTimeIntervalFormatter.Configuration(0);
      v34 = v75;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v75, 1, 1, v33);
      v35 = type metadata accessor for EyebrowBuilder(0);
      swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
      swift_retain();
      v75 = (char *)EyebrowBuilder.init(episode:context:style:uppercase:explicitSymbol:abbreviatedPubDateConfig:showsSubscriptionBadge:hostingViewHasLimitedSpace:)(&v78, v31, v32, 1, 0, 0, v34, 1, 0);
      v36 = EyebrowBuilder.caption.getter();
      if (v37)
      {
        v78 = v36;
        v79 = v37;
        swift_bridgeObjectRetain();
        v38._countAndFlagsBits = 8250;
        v38._object = (void *)0xE200000000000000;
        String.append(_:)(v38);
        swift_bridgeObjectRelease();
        sub_15C1E8(v29);
        v39 = objc_allocWithZone((Class)NSAttributedString);
        v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_F1C0((unint64_t *)&qword_3C7F00, type metadata accessor for Key, (uint64_t)&unk_2E9460);
        v41 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v39, "initWithString:attributes:", v40, v41);

        objc_msgSend(v24, "appendAttributedString:", v42);
      }
      swift_bridgeObjectRetain();
      sub_15C1E8(v29);
      swift_bridgeObjectRelease();
      v43 = objc_allocWithZone((Class)NSAttributedString);
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_F1C0((unint64_t *)&qword_3C7F00, type metadata accessor for Key, (uint64_t)&unk_2E9460);
      v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v46 = objc_msgSend(v43, "initWithString:attributes:", v44, v45);

      objc_msgSend(v24, "appendAttributedString:", v46);
      v47 = sub_21BFD0();
      if (v47)
      {
        v48 = (void *)v47;
        if ((dispatch thunk of LanguageAwareString.isEmpty.getter() & 1) == 0)
        {
          v60 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();
          v61 = objc_msgSend(v60, "mutableCopy");

          _bridgeAnyObjectToAny(_:)(&v78);
          swift_unknownObjectRelease(v61);
          v62 = sub_23BB5C();
          if ((swift_dynamicCast(&v77, &v78, (char *)&type metadata for Any + 8, v62, 6) & 1) == 0)
          {
            swift_release(v20);
            swift_bridgeObjectRelease();
            swift_release(v75);

            return (NSAttributedString)v24;
          }
          v63 = v77;
          sub_15C1E8(v76);
          v74 = (char *)objc_allocWithZone((Class)NSAttributedString);
          v64 = String._bridgeToObjectiveC()();
          v65 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          v66 = objc_msgSend(v74, "initWithString:attributes:", v64, v65);

          objc_msgSend(v24, "appendAttributedString:", v66);
          v67 = objc_msgSend(v63, "length");
          sub_15C1E8(v76);
          swift_bridgeObjectRelease();
          v68 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v63, "setAttributes:range:", v68, 0, v67);

          objc_msgSend(v24, "appendAttributedString:", v63);
          swift_release(v20);
          goto LABEL_9;
        }

      }
      swift_release(v20);
      swift_bridgeObjectRelease();
LABEL_9:
      swift_release(v75);
      return (NSAttributedString)v24;
    }
  }
  v49 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description + 8);
  if (v49)
  {
    v78 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
    v79 = v49;
    v50 = swift_bridgeObjectRetain();
    static CharacterSet.newlines.getter(v50, v51);
    v52 = sub_65CC4();
    v53 = StringProtocol.components(separatedBy:)(v7, &type metadata for String, v52);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    v78 = v53;
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
    v55 = sub_707E4();
    BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v54, v55);
    swift_bridgeObjectRelease();
  }
  sub_15C1E8(v19);
  swift_bridgeObjectRelease();
  v56 = objc_allocWithZone((Class)NSAttributedString);
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_F1C0((unint64_t *)&qword_3C7F00, type metadata accessor for Key, (uint64_t)&unk_2E9460);
  v58 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v56, "initWithString:attributes:", v57, v58);

  return (NSAttributedString)v24;
}

_QWORD *sub_23B810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40)
{
  _QWORD *v40;
  _BYTE *v41;
  _QWORD *v42;
  char v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  _QWORD *v52;
  char v57[32];

  v41 = (char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed;
  *((_BYTE *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasEverPlayed) = 0;
  v40[2] = a25;
  v40[3] = a26;
  v42 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_podcastUuid);
  *v42 = a1;
  v42[1] = a2;
  v43 = *a7;
  v40[4] = a3;
  sub_15BD4(a4, (uint64_t)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundArtwork, &qword_3BEB70);
  v44 = (char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_backgroundColor;
  *(_QWORD *)v44 = a5;
  v44[8] = a6;
  *((_BYTE *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_interfaceStyle) = v43;
  v45 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_title);
  *v45 = a8;
  v45[1] = a9;
  v46 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_description);
  *v46 = a10;
  v46[1] = a11;
  sub_15BD4(a12, (uint64_t)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerIconArtwork, &qword_3BEB70);
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerAction) = a13;
  v47 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_providerTitle);
  *v47 = a14;
  v47[1] = a15;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_primaryButtonAction) = a16;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonAction) = a17;
  v48 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_secondaryButtonSubtitle);
  *v48 = a18;
  v48[1] = a19;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_metadata) = a20;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_upsellBanner) = a21;
  *((_BYTE *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_entitlementBadge) = a22;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_contextAction) = a23;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_followAction) = a24;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_episodeToPlay) = a28;
  swift_beginAccess(v41, v57, 1, 0);
  *v41 = a27;
  *((_BYTE *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_hasAdamId) = a29;
  *(_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_subtitleAction) = a30;
  v49 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appBundleId);
  *v49 = a31;
  v49[1] = a32;
  v50 = (char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_appAdamID;
  *(_QWORD *)v50 = a33;
  v50[8] = a34 & 1;
  v51 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_customProductPageID);
  *v51 = a35;
  v51[1] = a36;
  v52 = (_QWORD *)((char *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_externalAppOfferDeeplink);
  *v52 = a37;
  v52[1] = a38;
  *((_BYTE *)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_isForFirstPartyApp) = a39;
  sub_15BD4(a40, (uint64_t)v40 + OBJC_IVAR____TtC8ShelfKit10ShowHeader_impressionMetrics, (uint64_t *)&unk_3B8790);
  return v40;
}

unint64_t sub_23BB5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C3270;
  if (!qword_3C3270)
  {
    v1 = objc_opt_self(NSMutableAttributedString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3C3270);
  }
  return result;
}

uint64_t sub_23BB98(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C3278, (void (*)(uint64_t))type metadata accessor for ShowHeader, (uint64_t)&protocol conformance descriptor for ShowHeader);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ShowHeader(uint64_t a1)
{
  uint64_t result;

  result = qword_3C32A8;
  if (!qword_3C32A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShowHeader);
  return result;
}

uint64_t sub_23BC10()
{
  return type metadata accessor for ShowHeader(0);
}

void sub_23BC18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v6[0] = &unk_301708;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = &unk_301720;
    v9 = &unk_301738;
    v10 = &unk_301750;
    v11 = &unk_301750;
    v12 = v7;
    v13 = &unk_301768;
    v14 = &unk_301750;
    v15 = &unk_301768;
    v16 = &unk_301768;
    v17 = &unk_301750;
    v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v19 = &unk_301768;
    v20 = &unk_301720;
    v21 = &unk_301768;
    v22 = &unk_301780;
    v23 = &unk_301780;
    v24 = &unk_301750;
    v25 = &unk_301798;
    v26 = &unk_301750;
    v27 = &unk_301750;
    v28 = &unk_301780;
    v29 = &unk_301768;
    v30 = &unk_301768;
    v31 = &unk_301768;
    v32 = &unk_301708;
    sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v33 = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 29, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for ShowHeader(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShowHeader);
}

uint64_t dispatch thunk of ShowHeader.__allocating_init(deserializing:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of ShowHeader.__allocating_init(podcastUuid:primaryArtwork:backgroundArtwork:backgroundColor:interfaceStyle:title:description:providerIconArtwork:providerAction:providerTitle:primaryButtonAction:secondaryButtonAction:secondaryButtonSubtitle:metadata:playAction:upsellBanner:entitlementBadge:contextAction:followAction:shelfUniqueId:hasEverPlayed:episodeToPlay:hasAdamId:subtitleAction:appBundleId:appAdamID:customProductPageID:externalAppOfferDeeplink:isForFirstPartyApp:impressionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 320))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t StoreTab.Identifier.init(navigationTab:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v3;

  if ((unint64_t)(result - 1) >= 0x11)
  {
    result = sub_267A8(result);
    v3 = 4;
  }
  else
  {
    v3 = byte_3018CE[result - 1];
  }
  *a2 = v3;
  return result;
}

ShelfKit::StoreTab::Identifier_optional __swiftcall StoreTab.Identifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  ShelfKit::StoreTab::Identifier_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375B60, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 4;
  if (v5 < 4)
    v7 = v5;
  *v4 = v7;
  return result;
}

uint64_t StoreTab.Identifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BF60 + 4 * byte_3017B0[*v0]))(0x686372616573, 0xE600000000000000);
}

uint64_t sub_23BF60()
{
  return 0x737472616863;
}

uint64_t sub_23BF70()
{
  return 0x6573616863727570;
}

uint64_t sub_23BF8C()
{
  return 0x64616F6C6E776F64;
}

void sub_23BFAC(char *a1)
{
  sub_1E032C(*a1);
}

void sub_23BFB8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_23C000()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x737472616863, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_23C074()
{
  __asm { BR              X10 }
}

uint64_t sub_23C0AC(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x737472616863, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_23C10C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_23C150()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x737472616863, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

ShelfKit::StoreTab::Identifier_optional sub_23C1C4(Swift::String *a1)
{
  return StoreTab.Identifier.init(rawValue:)(*a1);
}

uint64_t sub_23C1D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23C1FC + 4 * byte_3017C0[*v0]))();
}

void sub_23C1FC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x737472616863;
  a1[1] = v1;
}

void sub_23C210(_QWORD *a1@<X8>)
{
  *a1 = 0x6573616863727570;
  a1[1] = 0xE900000000000064;
}

void sub_23C230(_QWORD *a1@<X8>)
{
  *a1 = 0x64616F6C6E776F64;
  a1[1] = 0xE900000000000073;
}

void StoreTab.pageContext.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_23C294()
{
  unint64_t v0;
  uint64_t v1;

  v0 = sub_65CC4();
  v1 = ((uint64_t (*)(void *, unint64_t))StringProtocol.capitalized.getter)(&type metadata for String, v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t StoreTab.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StoreTab(0) + 20);
  return sub_282CC(v3, a1);
}

uint64_t type metadata accessor for StoreTab(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3480;
  if (!qword_3C3480)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StoreTab);
  return result;
}

uint64_t StoreTab.init(identifier:url:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;

  *a3 = *a1;
  v4 = (uint64_t)&a3[*(int *)(type metadata accessor for StoreTab(0) + 20)];
  return sub_B683C(a2, v4);
}

uint64_t StoreTab.init(jsonObject:)@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  void (*v12)(_BYTE *, uint64_t);
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[15];
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for JSONObject(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  JSONObject.subscript.getter(25705, 0xE200000000000000);
  v11 = sub_23C570();
  JSONObject.stringEnumOrNil<A>()(&v19, &type metadata for StoreTab.Identifier, v11);
  v12 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v12(v10, v7);
  v13 = v19;
  if (v19 == 4)
  {
    v12(a1, v7);
    v14 = type metadata accessor for StoreTab(0);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    v16 = JSONObject.subscript.getter(7107189, 0xE300000000000000);
    JSONObject.url.getter(v16);
    v12(a1, v7);
    v12(v10, v7);
    *a2 = v13;
    v17 = type metadata accessor for StoreTab(0);
    sub_B683C((uint64_t)v6, (uint64_t)&a2[*(int *)(v17 + 20)]);
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
}

unint64_t sub_23C570()
{
  unint64_t result;

  result = qword_3C3418;
  if (!qword_3C3418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StoreTab.Identifier);
    atomic_store(result, (unint64_t *)&qword_3C3418);
  }
  return result;
}

unint64_t sub_23C5B8()
{
  unint64_t result;

  result = qword_3C3420;
  if (!qword_3C3420)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StoreTab.Identifier);
    atomic_store(result, (unint64_t *)&qword_3C3420);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StoreTab(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for StoreTab(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *initializeWithCopy for StoreTab(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *assignWithCopy for StoreTab(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_BYTE *initializeWithTake for StoreTab(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *assignWithTake for StoreTab(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreTab(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23CAE4);
}

uint64_t sub_23CAE4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 252)
  {
    v4 = *a1;
    if (v4 >= 4)
      return v4 - 3;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StoreTab(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23CB68);
}

_BYTE *sub_23CB68(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23CBDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_301898;
  sub_28C74(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for StoreTab.Identifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23CC9C + 4 * byte_3017CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23CCD0 + 4 * byte_3017C8[v4]))();
}

uint64_t sub_23CCD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23CCD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23CCE0);
  return result;
}

uint64_t sub_23CCEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23CCF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23CCF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23CD00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreTab.Identifier()
{
  return &type metadata for StoreTab.Identifier;
}

uint64_t sub_23CD1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73B8);
  result = Loadable.item.getter(v2);
  *a1 = v4;
  return result;
}

uint64_t CategoryPagePresenter.pageContent.getter()
{
  return sub_17B34C(&OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
}

uint64_t CategoryPagePresenter.pageContent.setter(uint64_t a1)
{
  return sub_17B39C(a1, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
}

uint64_t (*CategoryPagePresenter.pageContent.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t CategoryPagePresenter.pageHeader.getter()
{
  return sub_17B34C(&OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader);
}

uint64_t CategoryPagePresenter.pageHeader.setter(uint64_t a1)
{
  return sub_17B39C(a1, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader);
}

uint64_t (*CategoryPagePresenter.pageHeader.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t CategoryPagePresenter.headerButtonItems.getter()
{
  return sub_17B34C(&OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems);
}

uint64_t CategoryPagePresenter.headerButtonItems.setter(uint64_t a1)
{
  return sub_17B39C(a1, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems);
}

uint64_t (*CategoryPagePresenter.headerButtonItems.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t CategoryPagePresenter.interactionContextPage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_14510(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextPage, a1, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
}

uint64_t CategoryPagePresenter.interactionContextOrigin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextOrigin;
  v4 = type metadata accessor for InteractionContext.Origin(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23CEEC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_301A08);
  v2 = swift_getKeyPath(&unk_301A30);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t CategoryPagePresenter.Configuration.categoryPageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CategoryPagePresenter.Configuration(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CategoryPagePresenter.Configuration(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C3758, (uint64_t)&nominal type descriptor for CategoryPagePresenter.Configuration);
}

uint64_t CategoryPagePresenter.Configuration.init(categoryAdamID:categoryPageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;

  *a3 = a1;
  v4 = (char *)a3 + *(int *)(type metadata accessor for CategoryPagePresenter.Configuration(0) + 20);
  v5 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
}

uint64_t CategoryPagePresenter.__allocating_init(asPartOf:with:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = sub_23F1F4(a1, a2);
  swift_release(a1);
  return v5;
}

uint64_t CategoryPagePresenter.init(asPartOf:with:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = sub_23F1F4(a1, a2);
  swift_release(a1);
  return v3;
}

Swift::Void __swiftcall CategoryPagePresenter.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7410);
  v3 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  v78 = v3;
  __chkstk_darwin(v2);
  v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v5);
  v75 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7440);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = v7;
  __chkstk_darwin(v7);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7448);
  v13 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  v83 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7428);
  v71 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B7430);
  v73 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C34B8);
  v22 = *(_QWORD *)(v21 - 8);
  v80 = v21;
  v81 = v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23D97C();
  v87 = v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter__storePage;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter__storePage, v90, 33, 0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73A8);
  Published.projectedValue.getter(v88);
  swift_endAccess(v90);
  v25 = type metadata accessor for Page(0);
  v89 = v25;
  v86 = sub_32914(&qword_3B7450, &qword_3B7440, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v84 = v9;
  Publisher.compactMap<A>(_:)(sub_23DBE4, 0, v9, v25, v86);
  v85 = *(void (**)(char *, uint64_t))(v8 + 8);
  v85(v11, v9);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_objectGraph);
  sub_150C8(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider, (uint64_t)v90);
  v27 = swift_allocObject(&unk_38BBF0, 64, 7);
  sub_F4D8(v90, v27 + 16);
  *(_QWORD *)(v27 + 56) = v26;
  swift_retain();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2970);
  v29 = v82;
  Publishers.CompactMap.map<A>(_:)(sub_C5D0C, v27, v82, v28);
  swift_release(v27);
  v83 = *(_QWORD *)(v83 + 8);
  ((void (*)(char *, uint64_t))v83)(v15, v29);
  v30 = sub_32914(&qword_3B7460, &qword_3B7428, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v31 = sub_32914(&qword_3B2978, &qword_3B2970, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.switchToLatest()(v16, v30, v31);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v16);
  v32 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  *(_QWORD *)&v90[0] = static OS_dispatch_queue.main.getter(v32);
  v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v34 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v75, 1, 1, v33);
  v35 = sub_32914(&qword_3B7470, &qword_3B7430, (uint64_t)&protocol conformance descriptor for Publishers.SwitchToLatest<A, B>);
  v36 = sub_436CC();
  v37 = v72;
  Publisher.receive<A>(on:options:)(v90, v34, v72, v32, v35, v36);
  sub_1459C(v34, &qword_3B2B18);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v20, v37);
  v38 = swift_allocObject(&unk_38BC18, 24, 7);
  v79 = v1;
  swift_weakInit(v38 + 16);
  v39 = sub_32914(&qword_3C34D8, &qword_3C34B8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v40 = v80;
  v41 = Publisher<>.sink(receiveValue:)(sub_23F608, v38, v80, v39);
  swift_release(v38);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v40);
  v42 = v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_subscriptions;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_subscriptions, v90, 33, 0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v81 = v43;
  v80 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v42, v43, v80);
  swift_endAccess(v90);
  swift_release(v41);
  swift_beginAccess(v87, v90, 33, 0);
  v44 = v74;
  v45 = v88;
  Published.projectedValue.getter(v88);
  swift_endAccess(v90);
  v46 = v15;
  v47 = v84;
  v48 = v86;
  Publisher.compactMap<A>(_:)(sub_23DBE4, 0, v84, v89, v86);
  v49 = v85;
  v85(v44, v47);
  v50 = swift_allocObject(&unk_38BC18, 24, 7);
  swift_weakInit(v50 + 16);
  v75 = (char *)sub_32914(&qword_3B7458, &qword_3B7448, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v51 = v82;
  v52 = Publisher<>.sink(receiveValue:)(sub_23F628, v50, v82, v75);
  swift_release(v50);
  ((void (*)(char *, uint64_t))v83)(v46, v51);
  swift_beginAccess(v42, v90, 33, 0);
  AnyCancellable.store<A>(in:)(v42, v81, v80);
  swift_endAccess(v90);
  swift_release(v52);
  v53 = v87;
  swift_beginAccess(v87, v90, 33, 0);
  v54 = v45;
  v55 = v53;
  Published.projectedValue.getter(v54);
  swift_endAccess(v90);
  v56 = v84;
  Publisher.compactMap<A>(_:)(sub_23DBE4, 0, v84, v89, v48);
  v57 = v56;
  v49(v44, v56);
  v58 = swift_allocObject(&unk_38BC18, 24, 7);
  v59 = v79;
  swift_weakInit(v58 + 16);
  v60 = Publisher<>.sink(receiveValue:)(sub_23F630, v58, v51, v75);
  swift_release(v58);
  ((void (*)(char *, uint64_t))v83)(v46, v51);
  swift_beginAccess(v42, v90, 33, 0);
  v61 = v42;
  v63 = v80;
  v62 = v81;
  AnyCancellable.store<A>(in:)(v42, v81, v80);
  swift_endAccess(v90);
  swift_release(v60);
  swift_beginAccess(v55, v90, 33, 0);
  Published.projectedValue.getter(v88);
  swift_endAccess(v90);
  swift_retain();
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  v65 = v76;
  Publisher.map<A>(_:)(sub_23F638, v59, v57, v64, v86);
  swift_release(v59);
  v85(v44, v57);
  v66 = swift_allocObject(&unk_38BC18, 24, 7);
  swift_weakInit(v66 + 16);
  v67 = sub_32914(&qword_3B74A0, &qword_3B7410, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v68 = v77;
  v69 = Publisher<>.sink(receiveValue:)(sub_23F640, v66, v77, v67);
  swift_release(v66);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v65, v68);
  swift_beginAccess(v61, v90, 33, 0);
  AnyCancellable.store<A>(in:)(v61, v62, v63);
  swift_endAccess(v90);
  swift_release(v69);
  sub_23F648();
}

uint64_t sub_23D97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  id v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3790);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = sub_23E984();
  v9 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v22 = (id)static OS_dispatch_queue.main.getter(v9);
  v10 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2970);
  v12 = sub_32914(&qword_3B2978, &qword_3B2970, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v13 = sub_436CC();
  Publisher.receive<A>(on:options:)(&v22, v4, v11, v9, v12, v13);
  sub_1459C((uint64_t)v4, &qword_3B2B18);

  swift_release(v21[0]);
  v14 = swift_allocObject(&unk_38BC18, 24, 7);
  swift_weakInit(v14 + 16);
  v15 = sub_32914(&qword_3C3798, &qword_3C3790, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v16 = Publisher<>.sink(receiveValue:)(sub_23FDA8, v14, v5, v15);
  swift_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_subscriptions;
  swift_beginAccess(v17, v21, 33, 0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v19 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v17, v18, v19);
  swift_endAccess(v21);
  return swift_release(v16);
}

uint64_t sub_23DBE8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  int v12;
  char v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v2 = *(_QWORD *)result;
  if ((*(_BYTE *)(*(_QWORD *)result + 68) & 1) == 0)
  {
    v3 = *(_DWORD *)(v2 + 64);
    v4 = a2 + 16;
    swift_beginAccess(a2 + 16, v15, 0, 0);
    result = swift_weakLoadStrong(v4);
    if (result)
    {
      v5 = result;
      v6 = (uint64_t *)(result + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader);
      swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader, v14, 0, 0);
      v7 = *v6;
      swift_retain(v7);
      swift_release(v5);
      v8 = *(_QWORD *)(v2 + 32);
      if (v8)
      {
        v9 = *(_QWORD *)(v2 + 24);
        v10 = *(_QWORD *)(v2 + 32);
      }
      else
      {
        v9 = 0;
        v10 = 0xE000000000000000;
      }
      v11[0] = v9;
      v11[1] = v10;
      v12 = v3;
      v13 = 1;
      swift_bridgeObjectRetain(v8);
      CurrentValueSubject.value.setter(v11);
      return swift_release(v7);
    }
  }
  return result;
}

uint64_t sub_23DCBC(unint64_t *a1)
{
  uint64_t KeyPath;
  unint64_t v3;
  unint64_t v5;

  KeyPath = swift_getKeyPath(&unk_301A50);
  v3 = *a1;
  v5 = v3;
  sub_C5FD8(v3);
  swift_getAtKeyPath(&v5, KeyPath);
  sub_C5FF4(v3);
  return swift_release(KeyPath);
}

uint64_t sub_23DD2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = (uint64_t *)(result + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems);
    swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems, v9, 0, 0);
    v7 = *v6;
    swift_retain(v7);
    swift_release(v5);
    v8 = *(_QWORD *)(v2 + 72);
    swift_bridgeObjectRetain(v8);
    CurrentValueSubject.value.setter(&v8);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_23DDD0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[2];

  v4 = type metadata accessor for ErrorModel(0);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12[1] = *a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73B8);
  if ((Loadable.failed.getter(v7) & 1) != 0)
  {
    v8 = swift_allocObject(&unk_38BC18, 24, 7);
    swift_weakInit(v8 + 16);
    swift_retain();
    static ErrorModel.offline(_:)((uint64_t)sub_23FD54, v8, v6);
    swift_release_n(v8, 2);
    static ModernShelf.errorShelf(id:_:)(0x685320726F727245, 0xEB00000000666C65, (uint64_t)v6, a2);
    sub_145D8((uint64_t)v6, type metadata accessor for ErrorModel);
    v9 = type metadata accessor for ModernShelf(0);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    v11 = type metadata accessor for ModernShelf(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_23DF20(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_23F648();
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_23DF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    sub_64238(a1, (uint64_t)v9);
    v12 = v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf;
    swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf, v15, 33, 0);
    sub_64280((uint64_t)v9, v12);
    swift_endAccess(v15);
    v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
    swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent, v15, 0, 0);
    v14 = *v13;
    swift_retain();
    sub_23E1F8((uint64_t)v6);
    CurrentValueSubject.value.setter(v6);
    swift_release(v14);
    sub_1459C((uint64_t)v9, &qword_3B8660);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_23E0E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    KeyPath = swift_getKeyPath(&unk_301A08);
    v7 = swift_getKeyPath(&unk_301A30);
    v8 = v2;
    swift_retain(v2);
    return static Published.subscript.setter(&v8, v5, KeyPath, v7);
  }
  return result;
}

uint64_t sub_23E178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    KeyPath = swift_getKeyPath(&unk_301A08);
    v6 = swift_getKeyPath(&unk_301A30);
    v7 = 1;
    return static Published.subscript.setter(&v7, v4, KeyPath, v6);
  }
  return result;
}

uint64_t sub_23E1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  Swift::String v37;
  unint64_t v38;
  Swift::String v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  char v88[24];
  char v89;

  v78 = a1;
  v70 = type metadata accessor for ScalarDictionary(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v65 = (char *)&v63 - v4;
  v77 = type metadata accessor for PageMetrics(0);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v74 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for PageID(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v68 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v72);
  v76 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v64);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModernShelf(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = 1;
  v79 = v1;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_fromMyShowsShelf);
  sub_644D8(v17);
  sub_644D8(v17);
  v18 = sub_10E28(0, 1, 1, _swiftEmptyArrayStorage);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_10E28((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
  v18[2] = v20 + 1;
  v66 = v18;
  v18[v20 + 4] = v17;
  sub_644D8(v17);
  v21 = sub_10E28(0, 1, 1, _swiftEmptyArrayStorage);
  v23 = v21[2];
  v22 = v21[3];
  if (v23 >= v22 >> 1)
    v21 = sub_10E28((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
  v21[2] = v23 + 1;
  v21[v23 + 4] = v17;
  sub_64510(v17);
  v24 = v79;
  v25 = v79 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf;
  swift_beginAccess(v79 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf, v88, 0, 0);
  sub_64238(v25, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1459C((uint64_t)v12, &qword_3B8660);
    v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeShelves);
    sub_644D8(v26);
    sub_644D8(v26);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_10E28(0, v21[2] + 1, 1, v21);
    v28 = v21[2];
    v27 = v21[3];
    if (v28 >= v27 >> 1)
      v21 = sub_10E28((_QWORD *)(v27 > 1), v28 + 1, 1, v21);
    v21[2] = v28 + 1;
    v21[v28 + 4] = v26;
    v29 = sub_64510(v26);
  }
  else
  {
    sub_15C18((uint64_t)v12, (uint64_t)v16);
    sub_14510((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModernShelf);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 2, v13);
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
    Loadable.map<A>(_:)(&v80, sub_192A50, 0, v64, v30);
    v31 = v80;
    sub_644D8(v80);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_10E28(0, v21[2] + 1, 1, v21);
    v33 = v21[2];
    v32 = v21[3];
    if (v33 >= v32 >> 1)
      v21 = sub_10E28((_QWORD *)(v32 > 1), v33 + 1, 1, v21);
    v21[2] = v33 + 1;
    v21[v33 + 4] = v31;
    sub_64510(v31);
    sub_1459C((uint64_t)v9, &qword_3B35D0);
    v29 = sub_145D8((uint64_t)v16, type metadata accessor for ModernShelf);
    v24 = v79;
  }
  v34 = static MetricsPageType.category.getter(v29);
  v35 = *(_QWORD *)(v24 + 16);
  v80 = v34;
  v81 = v36;
  v37._countAndFlagsBits = 95;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v87 = v35;
  v38 = sub_144B4();
  v39._countAndFlagsBits = BinaryInteger.description.getter(&type metadata for UInt64, v38);
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  v40 = v68;
  v41 = PageID.init(with:)(v80, v81);
  v42 = static MetricsPageType.category.getter(v41);
  v44 = v43;
  v80 = v35;
  v80 = BinaryInteger.description.getter(&type metadata for UInt64, v38);
  v81 = v45;
  v82 = (_QWORD *)v42;
  v83 = v44;
  v84 = 0;
  v85 = 0;
  v86 = 0;
  v46 = v65;
  ScalarDictionary.init()(v80);
  v47 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
  v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
  v49 = type metadata accessor for PageMetrics.Instruction(0);
  v50 = swift_allocObject(v48, ((*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v49 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80) | 7);
  *(_OWORD *)(v50 + 16) = xmmword_2EA080;
  LOBYTE(v87) = 0;
  PageMetrics.Instruction.init(eventType:)(&v87);
  LOBYTE(v87) = 1;
  PageMetrics.Instruction.init(eventType:)(&v87);
  v51 = MetricsPageFields.metricsFields.getter();
  v52 = v69;
  v53 = v67;
  v54 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v46, v70);
  v55 = v74;
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v50, v51, v53, v47);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v80) = v89;
  v81 = v66;
  v82 = v21;
  v56 = ModernShelfListBuilder.buildList()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v57 = (uint64_t)v76;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v76, v40, v73);
  v58 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v57 + *(int *)(v72 + 20), v55, v77);
  *(_QWORD *)(v57 + *(int *)(v58 + 24)) = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B89B0);
  v59 = v78;
  v60 = sub_14510(v57, v78, type metadata accessor for ModernPage);
  static PageRenderContentTypes.unspecified.getter(v60);
  v61 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(v59, v61, 3);
  return sub_145D8(v57, type metadata accessor for ModernPage);
}

uint64_t sub_23E984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __int128 v36[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B20);
  v31 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B28);
  v33 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B30);
  v34 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B40);
  v14 = v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_intentDispatcher;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_objectGraph);
  sub_150C8(v14, (uint64_t)v36);
  v16 = swift_allocObject(&unk_38BC68, 72, 7);
  sub_F4D8(v36, v16 + 16);
  *(_QWORD *)(v16 + 56) = v12;
  *(_QWORD *)(v16 + 64) = v15;
  swift_retain();
  *(_QWORD *)&v36[0] = Future<>.init(unwrapping:)(&unk_3C37A8, v16);
  v17 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v35 = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
  v19 = sub_32914(&qword_3B2B58, &qword_3B2B40, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v20 = sub_436CC();
  Publisher.subscribe<A>(on:options:)(&v35, v3, v13, v17, v19, v20);
  sub_1459C((uint64_t)v3, &qword_3B2B18);

  v21 = swift_release(*(_QWORD *)&v36[0]);
  v22 = static Subscribers.Demand.unlimited.getter(v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2970);
  v24 = sub_32914(&qword_3B2B68, &qword_3B2B20, (uint64_t)&protocol conformance descriptor for Publishers.SubscribeOn<A, B>);
  v25 = sub_32914(&qword_3B2978, &qword_3B2970, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.flatMap<A>(maxPublishers:_:)(v22, sub_40C24, 0, v4, v23, v24, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  v26 = sub_32914(&qword_3B2B70, &qword_3B2B28, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  Publisher.catch<A>(_:)(sub_40C30, 0, v7, v23, v26, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
  v27 = sub_32914(&qword_3B2B78, &qword_3B2B30, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v28 = v32;
  v29 = Publisher.eraseToAnyPublisher()(v32, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v28);
  return v29;
}

uint64_t sub_23ED28(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v6 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = *a3;
    v13 = *(_QWORD *)(result + *a3);
    *(_QWORD *)(result + v12) = v9;
    swift_bridgeObjectRetain();
    sub_64510(v13);
    v14 = (uint64_t *)(v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
    swift_beginAccess(v11 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent, v16, 0, 0);
    v15 = *v14;
    swift_retain();
    sub_23E1F8((uint64_t)v8);
    CurrentValueSubject.value.setter(v8);
    swift_release(v11);
    return swift_release(v15);
  }
  return result;
}

uint64_t sub_23EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch(sub_23EE48, 0, 0);
}

uint64_t sub_23EE48()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v1 = (_QWORD *)v0[4];
  v2 = v0[5];
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v0[2] = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[7] = v5;
  v6 = sub_126484();
  *v5 = v0;
  v5[1] = sub_23EEE4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[3], v0 + 2, v0[6], &type metadata for CategoryPageFromYourShowsShelfIntent, v6, v3, v4);
}

uint64_t sub_23EEE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_23EF50, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23EF50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CategoryPagePresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_categoryPageURL;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_objectGraph));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0
                                                      + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_intentDispatcher));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems));
  sub_145D8(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextPage, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  v3 = v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextOrigin;
  v4 = type metadata accessor for InteractionContext.Origin(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter__storePage;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_64510(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_fromMyShowsShelf));
  sub_64510(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeShelves));
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf, &qword_3B8660);
  return v0;
}

uint64_t CategoryPagePresenter.__deallocating_deinit()
{
  uint64_t v0;

  CategoryPagePresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_23F0D8(uint64_t a1, uint64_t a2)
{
  return sub_17CB70(a1, a2, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
}

uint64_t sub_23F0E4(uint64_t a1, uint64_t a2)
{
  return sub_17CB70(a1, a2, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems);
}

uint64_t sub_23F0F0(uint64_t a1, uint64_t a2)
{
  return sub_17CB70(a1, a2, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader);
}

uint64_t sub_23F100@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_301A08);
  v5 = swift_getKeyPath(&unk_301A30);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_23F17C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_301A08);
  v5 = swift_getKeyPath(&unk_301A30);
  v7 = v2;
  sub_C5FD8(v2);
  swift_retain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_23F1F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v41;
  __int128 v42;
  int v43;
  char v44;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73A8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_subscriptions) = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent;
  *v12 = 0;
  swift_storeEnumTagMultiPayload(v12, v14, 0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)(v2 + v13) = CurrentValueSubject.init(_:)(v12);
  v16 = OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageHeader;
  v42 = 0uLL;
  v43 = 0;
  v44 = 5;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8770);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_QWORD *)(v2 + v16) = CurrentValueSubject.init(_:)(&v42);
  v18 = OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_headerButtonItems;
  *(_QWORD *)&v42 = _swiftEmptyArrayStorage;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8780);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  *(_QWORD *)(v2 + v18) = CurrentValueSubject.init(_:)(&v42);
  v20 = v2 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextPage;
  v21 = type metadata accessor for InteractionContext.Page(0);
  swift_storeEnumTagMultiPayload(v20, v21, 7);
  v22 = v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_interactionContextOrigin;
  v23 = enum case for InteractionContext.Origin.local(_:);
  v24 = type metadata accessor for InteractionContext.Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v22, v23, v24);
  v25 = v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter__storePage;
  v26 = type metadata accessor for Page(0);
  Loadable.init()(&v42, v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73B8);
  Published.init(initialValue:)(&v42, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25, v9, v6);
  v28 = OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_fromMyShowsShelf;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  Loadable.init()(&v42, v29);
  *(_QWORD *)(v3 + v28) = v42;
  v30 = OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeShelves;
  Loadable.init()(&v42, v29);
  *(_QWORD *)(v3 + v30) = v42;
  v31 = v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeErrorShelf;
  v32 = type metadata accessor for ModernShelf(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_objectGraph) = a1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BE9F0);
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(&v42, v33, v33);
  sub_F4D8(&v42, v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8C50);
  BaseObjectGraph.inject<A>(_:)(&v42, v34, v34);
  sub_F4D8(&v42, v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_intentDispatcher);
  *(_QWORD *)(v3 + 16) = *a2;
  v35 = (char *)a2 + *(int *)(type metadata accessor for CategoryPagePresenter.Configuration(0) + 20);
  v36 = v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_categoryPageURL;
  v37 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v36, v35, v37);
  v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_pageContent, &v42, 0, 0);
  v39 = *v38;
  swift_retain();
  sub_23E1F8((uint64_t)v12);
  CurrentValueSubject.value.setter(v12);
  swift_release(v39);
  sub_145D8((uint64_t)a2, type metadata accessor for CategoryPagePresenter.Configuration);
  return v3;
}

uint64_t sub_23F5B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_23F5E4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_23F608(uint64_t *a1)
{
  uint64_t v1;

  return sub_23ED28(a1, v1, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeShelves);
}

uint64_t sub_23F628(uint64_t a1)
{
  uint64_t v1;

  return sub_23DBE8(a1, v1);
}

uint64_t sub_23F630(uint64_t *a1)
{
  uint64_t v1;

  return sub_23DD2C(a1, v1);
}

uint64_t sub_23F638@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23DDD0(a1, a2);
}

uint64_t sub_23F640(uint64_t a1)
{
  uint64_t v1;

  return sub_23DF74(a1, v1);
}

uint64_t sub_23F648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_301A08);
  v3 = swift_getKeyPath(&unk_301A30);
  v13[0] = 0;
  swift_retain();
  static Published.subscript.setter(v13, v1, KeyPath, v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider + 24);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_storeDataProvider), v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 152))(v1 + OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_categoryPageURL, v4, v5);
  v7 = swift_allocObject(&unk_38BC18, 24, 7);
  swift_weakInit(v7 + 16);
  v8 = swift_allocObject(&unk_38BC18, 24, 7);
  swift_weakInit(v8 + 16);
  v9 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v10 = swift_retain();
  v11 = static OS_dispatch_queue.main.getter(v10);
  v13[3] = v9;
  v13[4] = &protocol witness table for OS_dispatch_queue;
  v13[0] = v11;
  Promise.then(perform:orCatchError:on:)(sub_23FD44, v7, sub_23FD4C, v8, v13);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return swift_release(v8);
}

uint64_t sub_23F7C4(uint64_t a1)
{
  uint64_t result;

  result = sub_23F7F8(&qword_3C35D0, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23F7F8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CategoryPagePresenter(255);
    result = swift_getWitnessTable(a2);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CategoryPagePresenter(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C3608, (uint64_t)&nominal type descriptor for CategoryPagePresenter);
}

uint64_t sub_23F84C()
{
  return sub_23F7F8(&qword_3C35D8, (uint64_t)&protocol conformance descriptor for CategoryPagePresenter);
}

uint64_t sub_23F870()
{
  return type metadata accessor for CategoryPagePresenter(0);
}

void sub_23F878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[15];

  v12[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v12[1] = *(_QWORD *)(v2 - 8) + 64;
    v12[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v12[4] = &unk_3019C8;
    v12[5] = &unk_3019C8;
    v12[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v12[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v12[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4 = type metadata accessor for InteractionContext.Page(319);
    if (v5 <= 0x3F)
    {
      v12[9] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for InteractionContext.Origin(319);
      if (v7 <= 0x3F)
      {
        v12[10] = *(_QWORD *)(v6 - 8) + 64;
        sub_C5F58(319);
        if (v9 <= 0x3F)
        {
          v12[11] = *(_QWORD *)(v8 - 8) + 64;
          v12[12] = &unk_3019E0;
          v12[13] = &unk_3019E0;
          sub_23F9A4(319);
          if (v11 <= 0x3F)
          {
            v12[14] = *(_QWORD *)(v10 - 8) + 64;
            swift_updateClassMetadata2(a1, 256, 15, v12, a1 + 80);
          }
        }
      }
    }
  }
}

uint64_t method lookup function for CategoryPagePresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CategoryPagePresenter);
}

void sub_23F9A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3B3460)
  {
    v2 = type metadata accessor for ModernShelf(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3B3460);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryPagePresenter.Configuration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for CategoryPagePresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for CategoryPagePresenter.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for CategoryPagePresenter.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for CategoryPagePresenter.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for CategoryPagePresenter.Configuration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryPagePresenter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23FC34);
}

uint64_t sub_23FC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CategoryPagePresenter.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23FC80);
}

uint64_t sub_23FC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23FCC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_23FD44(uint64_t *a1)
{
  uint64_t v1;

  return sub_23E0E4(a1, v1);
}

uint64_t sub_23FD4C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E178(a1, v1);
}

uint64_t sub_23FD54()
{
  uint64_t v0;

  return sub_23DF20(v0);
}

uint64_t sub_23FD5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B73B8);
  result = Loadable.item.getter(v2);
  *a1 = v4;
  return result;
}

uint64_t sub_23FDA8(uint64_t *a1)
{
  uint64_t v1;

  return sub_23ED28(a1, v1, &OBJC_IVAR____TtC8ShelfKit21CategoryPagePresenter_fromMyShowsShelf);
}

uint64_t sub_23FDC8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_23FDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = (_QWORD *)swift_task_alloc(dword_3C37A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_43684;
  v7[5] = v6;
  v7[6] = v5;
  v7[3] = a1;
  v7[4] = v4;
  return swift_task_switch(sub_23EE48, 0, 0);
}

uint64_t JSStoreDataCache.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = v1;
  v4 = sub_327F8(0, (unint64_t *)&unk_3BF6A0, ACAccountStore_ptr);
  BaseObjectGraph.inject<A>(_:)(&v7, v4, v4);
  swift_release(a1);
  v5 = v7;
  result = swift_allocObject(v2, 24, 7);
  *(_QWORD *)(result + 16) = v5;
  return result;
}

uint64_t JSStoreDataCache.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t JSStoreDataCache.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_23FF14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;

  v54 = a3;
  v6 = type metadata accessor for JSONObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - v17;
  sub_31B60(a1, a2);
  JSONObject.init(deserializing:)(a1);
  if (v3)
    return sub_31BA4(a1, a2);
  v50 = 0;
  v51 = v9;
  v52 = a1;
  v53 = a2;
  v20 = JSONObject.subscript.getter(0x49746E756F636361, 0xE900000000000044);
  v21 = JSONObject.string.getter(v20);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v15, v6);
  v25 = JSONObject.subscript.getter(0x4164657461657263, 0xE900000000000074);
  v26 = JSONObject.double.getter(v25);
  v28 = v27;
  v24(v12, v6);
  v29 = v6;
  if ((v28 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v40 = type metadata accessor for JSONError(0);
    v41 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v40, v41, 0, 0);
    v43 = v42;
    v44 = type metadata accessor for JSStoreDataCacheValue(0);
    *v43 = 0x4164657461657263;
    v43[1] = 0xE900000000000074;
    v43[2] = v44;
    v45 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v43, enum case for JSONError.missingProperty(_:), v40);
    swift_willThrow(v45);
    sub_31BA4(v52, v53);
    return ((uint64_t (*)(char *, uint64_t))v24)(v18, v29);
  }
  v48 = v26;
  v49 = v21;
  v30 = v51;
  v31 = JSONObject.subscript.getter(0x7463656A626FLL, 0xE600000000000000);
  v32 = JSONObject.isNull.getter(v31);
  v33 = v52;
  if ((v32 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v34 = type metadata accessor for JSONError(0);
    v35 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v34, v35, 0, 0);
    v37 = v36;
    v38 = type metadata accessor for JSStoreDataCacheValue(0);
    *v37 = 0x7463656A626FLL;
    v37[1] = 0xE600000000000000;
    v37[2] = v38;
    v39 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v37, enum case for JSONError.missingProperty(_:), v34);
    swift_willThrow(v39);
    sub_31BA4(v33, v53);
    v24(v30, v29);
    return ((uint64_t (*)(char *, uint64_t))v24)(v18, v29);
  }
  sub_31BA4(v52, v53);
  v24(v18, v29);
  v46 = type metadata accessor for JSStoreDataCacheValue(0);
  v47 = v54;
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))((char *)v54 + *(int *)(v46 + 24), v30, v29);
  *v47 = v49;
  v47[1] = v23;
  v47[2] = v48;
  return result;
}

uint64_t JSStoreDataCache.object(forKey:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_signpost_type_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  v3 = v2;
  v5 = *v2;
  v36 = a1;
  v37 = v5;
  v6 = type metadata accessor for OSSignpostID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - v11;
  if (qword_3B01E8 != -1)
    swift_once(&qword_3B01E8, sub_243CC0);
  v13 = type metadata accessor for OSSignposter(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_3C37C8);
  v15 = OSSignposter.logHandle.getter(v14);
  v16 = OSSignpostID.init(log:)(v15);
  v17 = OSSignposter.logHandle.getter(v16);
  v18 = static os_signpost_type_t.begin.getter(v17);
  v19 = v18;
  if ((OS_os_log.signpostsEnabled.getter(v18) & 1) != 0)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v20(v9, v12, v6);
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    v35 = v6;
    v22 = a2;
    v23 = v21;
    *(_WORD *)v21 = 0;
    v24 = OSSignpostID.rawValue.getter(v21);
    _os_signpost_emit_with_name_impl(&dword_0, v17, v19, v24, "object(forKey:)", "", v23, 2u);
    v25 = v23;
    a2 = v22;
    v3 = v2;
    v6 = v35;
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    v20 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  }
  v20(v9, v12, v6);
  v26 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = OSSignpostIntervalState.init(id:isOpen:)(v9, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C3810);
  if (qword_3B01F0 != -1)
    swift_once(&qword_3B01F0, sub_243D8C);
  v28 = (void *)qword_3C37E0;
  v38[3] = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v38[4] = &protocol witness table for OS_dispatch_queue;
  v38[0] = v28;
  v29 = swift_allocObject(&unk_38BCE8, 80, 7);
  v30 = v36;
  *(_QWORD *)(v29 + 16) = v3;
  *(_QWORD *)(v29 + 24) = v30;
  *(_QWORD *)(v29 + 32) = a2;
  *(_QWORD *)(v29 + 40) = "object(forKey:)";
  *(_QWORD *)(v29 + 48) = 15;
  *(_BYTE *)(v29 + 56) = 2;
  v31 = v37;
  *(_QWORD *)(v29 + 64) = v27;
  *(_QWORD *)(v29 + 72) = v31;
  v32 = v28;
  swift_retain();
  swift_bridgeObjectRetain();
  v33 = Promise.__allocating_init(on:executor:)(v38, sub_24420C, v29);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v33;
}

uint64_t sub_240590(void (*a1)(char *), uint64_t a2, void (*a3)(NSObject *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const char *a8, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *);
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  Swift::String v51;
  uint64_t v52;
  void *v53;
  Swift::String v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v58;
  Swift::String v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint8_t *v68;
  os_signpost_id_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  void (*v72)(char *);
  uint64_t v73;
  char *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char v95[8];
  _QWORD v96[3];
  void *v97;
  char v98;

  v90 = (char *)a8;
  v77 = a4;
  v78 = a3;
  v71 = a2;
  v72 = a1;
  v92 = a11;
  v75 = a10;
  v91 = type metadata accessor for OSSignposter(0);
  v87 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v86 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v15);
  v80 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for OSLogger(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v79 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for OSSignpostError(0);
  v76 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  __chkstk_darwin(v18);
  v20 = (char *)&v71 - v19;
  v21 = type metadata accessor for OSSignpostID(0);
  v88 = *(_QWORD *)(v21 - 8);
  v89 = v21;
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  v74 = (char *)&v71 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v71 - v25;
  v27 = type metadata accessor for JSONObject(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a6;
  v84 = a5;
  v85 = (void *)a7;
  sub_240F1C(a6, a7, (uint64_t)v30);
  v86 = (char *)v27;
  v87 = v28;
  v31 = v72;
  if (qword_3B01E8 != -1)
    swift_once(&qword_3B01E8, sub_243CC0);
  v32 = __swift_project_value_buffer(v91, (uint64_t)qword_3C37C8);
  v33 = OSSignposter.logHandle.getter(v32);
  v34 = OSSignpostIntervalState.signpostID.getter(v33);
  v35 = static os_signpost_type_t.end.getter(v34);
  v36 = OS_os_log.signpostsEnabled.getter(v35);
  v38 = v86;
  v37 = v87;
  if ((v36 & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v88 + 8))(v26, v89);
LABEL_19:
    v31(v30);
    return (*(uint64_t (**)(char *, char *))(v37 + 8))(v30, v38);
  }
  if ((v75 & 1) != 0)
  {
    v39 = v76;
    if ((unint64_t)v90 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v90 >> 11 == 27)
      {
LABEL_22:
        __break(1u);
        swift_errorRelease(v33);
        result = swift_errorRelease(v33);
        __break(1u);
        return result;
      }
      if (v90 >> 16 <= 0x10)
      {
        v90 = &v98;
        goto LABEL_15;
      }
    }
    __break(1u);
    __break(1u);
    goto LABEL_22;
  }
  v39 = v76;
  if (v90)
  {
LABEL_15:
    v61 = v92;
    v62 = swift_retain();
    checkForErrorAndConsumeState(state:)(v62);
    swift_release(v61);
    v63 = v73;
    if ((*(unsigned int (**)(char *, uint64_t))(v39 + 88))(v20, v73) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v64 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v63);
      v64 = "";
    }
    v66 = v88;
    v65 = v89;
    v67 = v74;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v74, v26, v89);
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    v69 = OSSignpostID.rawValue.getter(v68);
    _os_signpost_emit_with_name_impl(&dword_0, v33, (os_signpost_type_t)v35, v69, v90, v64, v68, 2u);
    swift_slowDealloc(v68, -1, -1);

    v70 = *(void (**)(char *, uint64_t))(v66 + 8);
    v70(v26, v65);
    v70(v67, v65);
    v38 = v86;
    v37 = v87;
    goto LABEL_19;
  }
  __break(1u);

  swift_errorRelease(v33);
  swift_errorRelease(v33);
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v35, v89);
  (*((void (**)(uint64_t, char *))v20 + 1))(a6, v26);
  v78(v33);
  if (qword_3B01E0 != -1)
    swift_once(&qword_3B01E0, sub_243C10);
  v40 = v82;
  v41 = __swift_project_value_buffer(v82, (uint64_t)qword_3C37B0);
  v42 = v81;
  v43 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v79, v41, v40);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
  v45 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v46 = *(_QWORD *)(v45 + 72);
  v47 = *(unsigned __int8 *)(v45 + 80);
  v48 = (v47 + 32) & ~v47;
  v49 = swift_allocObject(v44, v48 + v46, v47 | 7);
  *(_OWORD *)(v49 + 16) = xmmword_2EA0D0;
  v92 = v49 + v48;
  v50 = v80;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2);
  v51._object = (void *)0x8000000000314780;
  v51._countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v51);
  v97 = &type metadata for String;
  v52 = v83;
  v53 = v85;
  v96[0] = v83;
  v96[1] = v85;
  swift_bridgeObjectRetain();
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v96);
  sub_298FC((uint64_t)v96);
  v54._countAndFlagsBits = 2112034;
  v54._object = (void *)0xE300000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v54);
  swift_getErrorValue(v33, v95, &v93);
  v55 = v93;
  v56 = v94;
  v97 = v94;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v96);
  (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v56 - 1) + 16))(boxed_opaque_existential_2Tm, v55, v56);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v96);
  sub_298FC((uint64_t)v96);
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v58);
  LogMessage.init(stringInterpolation:)(v50);
  Logger.error(_:)(v49, v40, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
  v59._countAndFlagsBits = v52;
  v59._object = v53;
  JSStoreDataCache.removeObject(forKey:)(v59);
  return swift_errorRelease(v33);
}

uint64_t sub_240F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  Swift::String v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  NSString v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  char v47;
  double v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD v62[2];

  v55 = a3;
  v54 = type metadata accessor for JSStoreDataCacheValue(0);
  __chkstk_darwin(v54);
  v57 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for URL.DirectoryHint(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_3B01F0 != -1)
    swift_once(&qword_3B01F0, sub_243D8C);
  v15 = qword_3C37E0;
  *v14 = qword_3C37E0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = (id)v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (qword_3B0208 == -1)
      goto LABEL_5;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_3B0208, sub_243FD0);
LABEL_5:
  v17 = v61;
  __swift_project_value_buffer(v61, (uint64_t)qword_3C37F8);
  v62[0] = a1;
  v62[1] = a2;
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 0x6E6F736A2ELL;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
  v19 = sub_65CC4();
  v20 = v60;
  URL.appending<A>(path:directoryHint:)(v62, v9, &type metadata for String, v19);
  v21 = v6;
  v22 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL.path.getter();
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, "fileExistsAtPath:", v24);

  if (!v25)
  {
    v32 = sub_24484C();
    swift_allocError(&type metadata for StoreDataCacheError, v32, 0, 0);
    *v33 = a1;
    v33[1] = a2;
    v34 = swift_bridgeObjectRetain();
    swift_willThrow(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v22, v17);
  }
  v26 = v58;
  v27 = Data.init(contentsOf:options:)(v22, 0);
  if (v26)
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v22, v17);
  v29 = v27;
  v30 = v28;
  sub_31B60(v27, v28);
  v31 = v57;
  sub_23FF14(v29, v30, v57);
  v36 = (void *)*v31;
  v37 = v31[1];
  v38 = *(void **)(v56 + 16);
  swift_bridgeObjectRetain();
  v39 = objc_msgSend(v38, "ams_activeiTunesAccount");
  v40 = v39;
  if (v39)
  {
    v41 = objc_msgSend(v39, "identifier");

    if (v41)
    {
      v40 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v43 = v42;

    }
    else
    {
      v40 = 0;
      v43 = 0;
    }
    v22 = v60;
  }
  else
  {
    v43 = 0;
  }
  if (!v37)
  {
    if (!v43)
      goto LABEL_25;
    goto LABEL_22;
  }
  if (!v43)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v36 != v40 || v37 != v43)
  {
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v40, v43, 0);
    swift_bridgeObjectRelease();
    v39 = (id)swift_bridgeObjectRelease();
    if ((v47 & 1) != 0)
      goto LABEL_25;
LABEL_23:
    v44 = sub_24484C();
    v45 = swift_allocError(&type metadata for StoreDataCacheError, v44, 0, 0);
    *v46 = xmmword_2FA990;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v39 = (id)swift_bridgeObjectRelease();
LABEL_25:
  v48 = *((double *)v31 + 2) + 604800.0;
  if (static Date.timeIntervalSinceReferenceDate.getter(v39) < v48)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v61);
    sub_31BA4(v29, v30);
    v49 = (uint64_t)v31;
    v50 = (char *)v31 + *(int *)(v54 + 24);
    v51 = type metadata accessor for JSONObject(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v55, v50, v51);
    return sub_2444F4(v49);
  }
  v52 = sub_24484C();
  v45 = swift_allocError(&type metadata for StoreDataCacheError, v52, 0, 0);
  *v53 = 0;
  v53[1] = 0;
LABEL_28:
  swift_willThrow(v45);
  sub_31BA4(v29, v30);
  sub_2444F4((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v22, v61);
}

Swift::Void __swiftcall JSStoreDataCache.removeObject(forKey:)(Swift::String forKey)
{
  uint64_t *v1;
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  v5 = *v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3B0200 != -1)
    swift_once(&qword_3B0200, sub_243F90);
  v21[1] = qword_3C37F0;
  v13 = swift_allocObject(&unk_38BD10, 24, 7);
  swift_weakInit(v13 + 16);
  v14 = swift_allocObject(&unk_38BD38, 72, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = "removeObject(forKey:)";
  *(_QWORD *)(v14 + 32) = 21;
  *(_BYTE *)(v14 + 40) = 2;
  *(_QWORD *)(v14 + 48) = countAndFlagsBits;
  *(_QWORD *)(v14 + 56) = object;
  *(_QWORD *)(v14 + 64) = v5;
  aBlock[4] = sub_244298;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_27;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter(v16);
  v23 = _swiftEmptyArrayStorage;
  v17 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v19 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = v25;
  swift_release(v13);
  swift_release(v20);
}

uint64_t JSStoreDataCache.object<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];

  v38 = a3;
  v39 = a4;
  v36 = a1;
  v37 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BB430);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyIntentTypes(0, v5);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - v18;
  JSONContext.init()(v20);
  JSONContext.withActionKinds()((uint64_t)v16);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v22 = sub_126124();
  v23 = AnyIntentTypes.init(_:)(&type metadata for IntentKinds, v22);
  static JSONContext.Property<A>.intentTypes.getter(v23);
  JSONContext.addingValue<A>(_:forProperty:)(v10, v7, v8);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  v21(v16, v11);
  v24 = JSStoreDataCache.object(forKey:)(v36, v37);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = swift_allocObject(&unk_38BD88, v26 + v13, v25 | 7);
  v29 = v38;
  v28 = v39;
  *(_QWORD *)(v27 + 16) = v38;
  *(_QWORD *)(v27 + 24) = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v16, v11);
  type metadata accessor for JSONObject(0);
  v40[3] = type metadata accessor for SyncTaskScheduler(0);
  v40[4] = &protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v40);
  SyncTaskScheduler.init()();
  v30 = Promise.map<A>(on:_:)(v40, sub_244328, v27, v29);
  swift_release(v24);
  swift_release(v27);
  __swift_destroy_boxed_opaque_existential_1(v40);
  v21(v19, v11);
  return v30;
}

uint64_t sub_2419B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;

  v10 = type metadata accessor for JSONContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for JSONObject(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))(v17, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_327F8(0, (unint64_t *)&qword_3B0CF0, OS_os_log_ptr);
  v19 = (void *)static OS_os_log.jsSignpost.getter();
  return ExpressibleByJSON.init(measuredDeserializing:using:performanceLog:)((uint64_t)v17, (uint64_t)v13, v19, a3, a4, a5);
}

uint64_t JSStoreDataCache.setObject(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v33 = a2;
  v34 = a3;
  v32 = *v3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JSONObject(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3B01F8 != -1)
    swift_once(&qword_3B01F8, sub_243F50);
  v31[1] = qword_3C37E8;
  v15 = swift_allocObject(&unk_38BD10, 24, 7);
  swift_weakInit(v15 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 41) & ~v16;
  v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_38BDB0, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = "setObject(_:forKey:)";
  *(_QWORD *)(v20 + 32) = 20;
  *(_BYTE *)(v20 + 40) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + v17, v14, v11);
  v21 = (_QWORD *)(v20 + v18);
  v22 = v34;
  *v21 = v33;
  v21[1] = v22;
  *(_QWORD *)(v20 + v19) = v32;
  aBlock[4] = sub_244430;
  v41 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2C9F4;
  aBlock[3] = &block_descriptor_16_1;
  v23 = _Block_copy(aBlock);
  swift_retain();
  v24 = swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter(v24);
  v39 = _swiftEmptyArrayStorage;
  v25 = sub_F1C0((unint64_t *)&qword_3B4420, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8720);
  v27 = sub_67E30((unint64_t *)&qword_3B4430, (uint64_t *)&unk_3B8720);
  v28 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v26, v27, v38, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  v29 = v41;
  swift_release(v15);
  return swift_release(v29);
}

uint64_t sub_241DEC(uint64_t a1, const char *a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_signpost_type_t v38;
  const char *v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  char *v43;
  uint8_t *v44;
  os_signpost_id_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  NSObject *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  Swift::String v72;
  void *v73;
  Swift::String v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v79;
  Swift::String v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  const char *v85;
  char *v86;
  uint8_t *v87;
  os_signpost_id_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char v116[8];
  _QWORD v117[3];
  void *v118;
  char v119[8];
  char v120;
  char v121;

  v111 = a6;
  v112 = (char *)a2;
  v108 = a5;
  v113 = type metadata accessor for OSSignposter(0);
  v110 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v107 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v11);
  v104 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v105 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for OSSignpostError(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v96 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v95 = (char *)&v90 - v18;
  v19 = type metadata accessor for OSSignpostID(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v106 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v103 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v90 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v90 - v28;
  a1 += 16;
  swift_beginAccess(a1, v119, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (!result)
    return result;
  v31 = (void *)result;
  v93 = v14;
  v94 = v13;
  v32 = v19;
  v98 = a4;
  if (qword_3B01E8 != -1)
    swift_once(&qword_3B01E8, sub_243CC0);
  v33 = __swift_project_value_buffer(v113, (uint64_t)qword_3C37C8);
  v34 = OSSignposter.logHandle.getter(v33);
  v35 = OSSignpostID.init(log:)(v34);
  v36 = OSSignposter.logHandle.getter(v35);
  v37 = static os_signpost_type_t.begin.getter(v36);
  v38 = v37;
  result = OS_os_log.signpostsEnabled.getter(v37);
  v102 = a7;
  v101 = v31;
  v97 = v20;
  if ((result & 1) == 0)
  {

    v39 = *(const char **)(v20 + 16);
    v40 = v32;
    v41 = v31;
    goto LABEL_14;
  }
  if ((v98 & 1) != 0)
  {
    if (!((unint64_t)v112 >> 32))
    {
      if (v112 >> 11 == 27)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v112 >> 16 <= 0x10)
      {
        v91 = &v120;
        goto LABEL_13;
      }
LABEL_33:
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v112)
  {
    __break(1u);
    goto LABEL_32;
  }
  v91 = v112;
LABEL_13:
  v42 = *(const char **)(v20 + 16);
  ((void (*)(char *, char *, uint64_t))v42)(v26, v29, v32);
  v43 = v29;
  v44 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v44 = 0;
  v45 = OSSignpostID.rawValue.getter(v44);
  v40 = v32;
  _os_signpost_emit_with_name_impl(&dword_0, v36, v38, v45, v91, "", v44, 2u);
  v46 = v44;
  v29 = v43;
  swift_slowDealloc(v46, -1, -1);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v32);
  v39 = v42;
  v41 = v101;
  a7 = v102;
LABEL_14:
  v47 = v111;
  v109 = v40;
  v91 = (char *)v39;
  ((void (*)(char *, char *, uint64_t))v39)(v26, v29, v40);
  v48 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = OSSignpostIntervalState.init(id:isOpen:)(v26, 1);
  v50 = sub_242968(v108, v47, a7);
  v51 = v41;
  v52 = OSSignposter.logHandle.getter(v50);
  v53 = v103;
  v54 = OSSignpostIntervalState.signpostID.getter(v52);
  v55 = static os_signpost_type_t.end.getter(v54);
  result = OS_os_log.signpostsEnabled.getter(v55);
  if ((result & 1) == 0)
  {

    swift_release(v41);
    v59 = *(void (**)(char *, uint64_t))(v97 + 8);
    v60 = v109;
    v59(v53, v109);
    v59(v29, v60);
    return swift_release(v49);
  }
  v56 = v109;
  if ((v98 & 1) == 0)
  {
    v57 = v100;
    v58 = v95;
    if (!v112)
    {
      __break(1u);

      swift_errorRelease(v55);
      swift_errorRelease(v55);
      v112 = *(char **)(v97 + 8);
      ((void (*)(void *, uint64_t))v112)(v41, v109);
      (*((void (**)(char *, NSObject *))v58 + 1))(v29, v52);
      if (qword_3B01E0 != -1)
        swift_once(&qword_3B01E0, sub_243C10);
      v61 = v94;
      v62 = __swift_project_value_buffer(v94, (uint64_t)qword_3C37B0);
      v63 = v93;
      v64 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v105, v62, v61);
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
      v66 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v67 = *(_QWORD *)(v66 + 72);
      v68 = *(unsigned __int8 *)(v66 + 80);
      v69 = (v68 + 32) & ~v68;
      v70 = swift_allocObject(v65, v69 + v67, v68 | 7);
      *(_OWORD *)(v70 + 16) = xmmword_2EA0D0;
      v113 = v70 + v69;
      v71 = v104;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 2);
      v72._object = (void *)0x8000000000314710;
      v72._countAndFlagsBits = 0xD00000000000001FLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v72);
      v118 = &type metadata for String;
      v73 = v102;
      v117[0] = v57;
      v117[1] = v102;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v117);
      sub_298FC((uint64_t)v117);
      v74._countAndFlagsBits = 2112034;
      v74._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      swift_getErrorValue(v55, v116, &v114);
      v75 = v57;
      v77 = v114;
      v76 = v115;
      v118 = v115;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v117);
      (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v76 - 1) + 16))(boxed_opaque_existential_2Tm, v77, v76);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v117);
      sub_298FC((uint64_t)v117);
      v79._countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v79);
      LogMessage.init(stringInterpolation:)(v71);
      Logger.error(_:)(v70, v61, &protocol witness table for OSLogger);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v61);
      v80._countAndFlagsBits = v75;
      v80._object = v73;
      v81 = v101;
      JSStoreDataCache.removeObject(forKey:)(v80);
      swift_release(v90);
      swift_release(v81);
      swift_errorRelease(v55);
      return ((uint64_t (*)(char *, uint64_t))v112)(v92, v109);
    }
    goto LABEL_26;
  }
  v57 = v100;
  v58 = v95;
  if ((unint64_t)v112 >> 32)
    goto LABEL_35;
  if (v112 >> 11 == 27)
  {
LABEL_37:
    __break(1u);
    return result;
  }
  if (v112 >> 16 > 0x10)
  {
LABEL_36:
    __break(1u);
    __break(1u);
    goto LABEL_37;
  }
  v112 = &v121;
LABEL_26:
  v82 = swift_retain();
  checkForErrorAndConsumeState(state:)(v82);
  swift_release(v49);
  v83 = v99;
  v84 = (*(uint64_t (**)(char *, uint64_t))(v99 + 88))(v58, v57);
  v92 = v29;
  if (v84 == enum case for OSSignpostError.doubleEnd(_:))
  {
    v85 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v57);
    v85 = "";
  }
  v86 = v103;
  ((void (*)(char *, char *, uint64_t))v91)(v26, v103, v56);
  v87 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v87 = 0;
  v88 = OSSignpostID.rawValue.getter(v87);
  _os_signpost_emit_with_name_impl(&dword_0, v52, (os_signpost_type_t)v55, v88, v112, v85, v87, 2u);
  swift_slowDealloc(v87, -1, -1);

  swift_release(v51);
  v89 = *(void (**)(char *, uint64_t))(v97 + 8);
  v89(v86, v56);
  v89(v92, v56);
  swift_release(v49);
  return ((uint64_t (*)(char *, uint64_t))v89)(v26, v56);
}

uint64_t sub_242968(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  void *v21;
  id v22;
  Swift::String v23;
  Swift::Bool v24;
  _BYTE *v25;
  id v26;
  void *v27;
  void *v28;
  unsigned int v29;
  id v30;
  id v31;
  Swift::String v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t inited;
  double *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  Class isa;
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  void (*v65)(_BYTE *, uint64_t);
  _BYTE v66[16];
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  id v77[2];
  char v78[152];
  NSURL v79;

  v71 = a3;
  v70 = a2;
  v68 = a1;
  v67 = type metadata accessor for JSStoreDataCacheValue(0);
  __chkstk_darwin(v67);
  v69 = (uint64_t *)&v66[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v72 = type metadata accessor for URL.DirectoryHint(0);
  v4 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v6 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v75 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v76 = &v66[-v11];
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v66[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_3B01F8 != -1)
    swift_once(&qword_3B01F8, sub_243F50);
  v16 = (void *)qword_3C37E8;
  *v15 = qword_3C37E8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = v16;
  v18 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) != 0)
  {
    if (qword_3B0208 == -1)
      goto LABEL_5;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_3B0208, sub_243FD0);
LABEL_5:
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_3C37F8);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v75 + 16);
  v74 = v7;
  v20(v76, v19, v7);
  v21 = (void *)objc_opt_self(NSFileManager);
  v22 = objc_msgSend(v21, "defaultManager");
  v23._countAndFlagsBits = URL.absoluteString.getter(v22);
  v24 = NSFileManager.directoryExists(atPath:)(v23);

  swift_bridgeObjectRelease();
  v25 = v9;
  if (!v24)
  {
    v26 = objc_msgSend(v21, "defaultManager");
    URL._bridgeToObjectiveC()(&v79);
    v28 = v27;
    v77[0] = 0;
    v29 = objc_msgSend(v26, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v27, 1, 0, v77);

    v30 = v77[0];
    if (!v29)
    {
      v44 = v77[0];
      _convertNSErrorToError(_:)(v30);

      swift_willThrow(v45);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v75 + 8))(v76, v74);
    }
    v31 = v77[0];
  }
  v77[0] = v70;
  v77[1] = v71;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = 0x6E6F736A2ELL;
  v32._object = (void *)0xE500000000000000;
  String.append(_:)(v32);
  v33 = v72;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v72);
  v34 = sub_65CC4();
  URL.appending<A>(path:directoryHint:)(v77, v6, &type metadata for String, v34);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v33);
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(*(id *)(v73 + 16), "ams_activeiTunesAccount");
  v36 = v35;
  if (v35)
  {
    v37 = objc_msgSend(v35, "identifier");

    v38 = v74;
    v39 = v69;
    v40 = v68;
    v41 = v67;
    if (v37)
    {
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v36 = v43;

    }
    else
    {
      v42 = 0;
      v36 = 0;
    }
  }
  else
  {
    v42 = 0;
    v38 = v74;
    v39 = v69;
    v40 = v68;
    v41 = v67;
  }
  v47 = (char *)v39 + *(int *)(v41 + 24);
  v48 = type metadata accessor for JSONObject(0);
  v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v47, v40, v48);
  v50 = static Date.timeIntervalSinceReferenceDate.getter(v49);
  *v39 = v42;
  v39[1] = (uint64_t)v36;
  *((double *)v39 + 2) = v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C38B8);
  inited = swift_initStackObject(v51, v78);
  v53 = (double *)inited;
  *(_OWORD *)(inited + 16) = xmmword_2EFAE0;
  *(_QWORD *)(inited + 32) = 0x49746E756F636361;
  *(_QWORD *)(inited + 40) = 0xE900000000000044;
  if (v36)
  {
    v54 = &type metadata for String;
  }
  else
  {
    v42 = 0;
    v54 = 0;
    *(_QWORD *)(inited + 64) = 0;
  }
  *(_QWORD *)(inited + 48) = v42;
  *(_QWORD *)(inited + 56) = v36;
  *(_QWORD *)(inited + 72) = v54;
  v55 = (void *)objc_opt_self(NSJSONSerialization);
  v53[10] = 10693539.0;
  v53[11] = -5.98008217e197;
  v53[12] = v50;
  *((_QWORD *)v53 + 15) = &type metadata for Double;
  *((_QWORD *)v53 + 16) = 0x7463656A626FLL;
  v53[17] = -2.12455197e183;
  v56 = swift_bridgeObjectRetain();
  JSONObject.untyped.getter((_QWORD *)v53 + 18, v56);
  sub_288FA8((uint64_t)v53);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC540);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v77[0] = 0;
  v58 = objc_msgSend(v55, "dataWithJSONObject:options:error:", isa, 0, v77);

  v59 = v77[0];
  if (v58)
  {
    v60 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v62 = v61;

    Data.write(to:options:)(v25, 0, v60, v62);
    sub_31BA4(v60, v62);
  }
  else
  {
    v63 = v59;
    _convertNSErrorToError(_:)(v59);

    swift_willThrow(v64);
  }
  sub_2444F4((uint64_t)v39);
  v65 = *(void (**)(_BYTE *, uint64_t))(v75 + 8);
  v65(v25, v38);
  return ((uint64_t (*)(_BYTE *, uint64_t))v65)(v76, v38);
}

uint64_t sub_243080(uint64_t a1, const char *a2, uint64_t a3, unsigned __int8 a4, void *a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_signpost_type_t v35;
  char v36;
  void (*v37)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v40;
  uint8_t *v41;
  os_signpost_id_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  _BYTE *v53;
  const char *v54;
  _BYTE *v55;
  _BYTE *v56;
  void (*v57)(_BYTE *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  Swift::String v66;
  Swift::String v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  const char *v76;
  _BYTE *v77;
  uint64_t v78;
  uint8_t *v79;
  os_signpost_id_t v80;
  void (*v81)(_BYTE *, uint64_t);
  _BYTE v82[12];
  void (*v83)(_BYTE *, _BYTE *, uint64_t);
  int v84;
  uint64_t v85;
  char *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char v107[8];
  _QWORD v108[3];
  void *v109;
  char v110[4];
  char v111;
  char v112;

  v100 = a6;
  v101 = a5;
  v103 = (char *)a2;
  v8 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v8);
  v10 = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for OSLogger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v82[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v93 = type metadata accessor for OSSignpostError(0);
  v94 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v92 = &v82[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v91 = &v82[-v17];
  v102 = type metadata accessor for OSSignposter(0);
  v98 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = &v82[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for OSSignpostID(0);
  v104 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v97 = &v82[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v95 = &v82[-v22];
  __chkstk_darwin(v23);
  v25 = &v82[-v24];
  __chkstk_darwin(v26);
  v28 = &v82[-v27];
  swift_beginAccess(a1 + 16, v110, 0, 0);
  result = swift_weakLoadStrong(a1 + 16);
  if (!result)
    return result;
  v30 = result;
  v87 = v10;
  v88 = v14;
  v89 = v12;
  v90 = v11;
  if (qword_3B01E8 != -1)
    swift_once(&qword_3B01E8, sub_243CC0);
  v31 = __swift_project_value_buffer(v102, (uint64_t)qword_3C37C8);
  v32 = OSSignposter.logHandle.getter(v31);
  v33 = OSSignpostID.init(log:)(v32);
  v34 = OSSignposter.logHandle.getter(v33);
  v35 = static os_signpost_type_t.begin.getter(v34);
  v36 = OS_os_log.signpostsEnabled.getter();
  v96 = v30;
  v84 = a4;
  if ((v36 & 1) == 0)
  {

    v37 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v104 + 16);
    goto LABEL_14;
  }
  if ((a4 & 1) != 0)
  {
    if (!((unint64_t)v103 >> 32))
    {
      if (v103 >> 11 == 27)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (v103 >> 16 <= 0x10)
      {
        v86 = &v111;
        goto LABEL_13;
      }
LABEL_33:
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v103)
  {
    __break(1u);
    goto LABEL_32;
  }
  v86 = v103;
LABEL_13:
  v38 = v104;
  v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v104 + 16);
  v39(v25, v28, v19);
  v14 = v28;
  v40 = v19;
  v41 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v41 = 0;
  v42 = OSSignpostID.rawValue.getter(v41);
  _os_signpost_emit_with_name_impl(&dword_0, v34, v35, v42, v86, "", v41, 2u);
  v43 = v41;
  v19 = v40;
  v28 = v14;
  swift_slowDealloc(v43, -1, -1);

  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v25, v19);
  v37 = v39;
  v30 = v96;
LABEL_14:
  v83 = v37;
  v37(v25, v28, v19);
  v44 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  v45 = OSSignpostIntervalState.init(id:isOpen:)(v25, 1);
  v46 = sub_244530(v101, v100);
  v47 = OSSignposter.logHandle.getter(v46);
  v48 = v95;
  v49 = OSSignpostIntervalState.signpostID.getter();
  v50 = static os_signpost_type_t.end.getter(v49);
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
  {

    swift_release(v30);
    v57 = *(void (**)(_BYTE *, uint64_t))(v104 + 8);
    v57(v48, v19);
    v57(v28, v19);
    return swift_release(v45);
  }
  if ((v84 & 1) == 0)
  {
    v51 = (const char *)v45;
    v52 = v94;
    v53 = v91;
    v54 = v103;
    if (!v103)
    {
      __break(1u);

      swift_errorRelease(v14);
      swift_errorRelease(v14);
      v104 = *(_QWORD *)(v104 + 8);
      ((void (*)(_BYTE *, uint64_t))v104)(v25, v19);
      (*(void (**)(_BYTE *, _BYTE *))(v30 + 8))(v28, v53);
      v55 = v95;
      v56 = v14;
      if (qword_3B01E0 != -1)
        swift_once(&qword_3B01E0, sub_243C10);
      v58 = v90;
      v59 = __swift_project_value_buffer(v90, (uint64_t)qword_3C37B0);
      v60 = v89;
      v61 = v88;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v89 + 16))(v88, v59, v58);
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
      v63 = type metadata accessor for LogMessage(0);
      v64 = swift_allocObject(v62, ((*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v63 - 8) + 80) | 7);
      *(_OWORD *)(v64 + 16) = xmmword_2EA0D0;
      v65 = v87;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2);
      v66._object = (void *)0x8000000000314750;
      v66._countAndFlagsBits = 0xD000000000000020;
      LogMessage.StringInterpolation.appendLiteral(_:)(v66);
      v109 = &type metadata for String;
      v108[0] = v101;
      v108[1] = v50;
      swift_bridgeObjectRetain();
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v108);
      sub_298FC((uint64_t)v108);
      v67._countAndFlagsBits = 2112034;
      v67._object = (void *)0xE300000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v67);
      swift_getErrorValue(v56, v107, &v105);
      v69 = v105;
      v68 = v106;
      v109 = v106;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v108);
      (*(void (**)(_QWORD *, uint64_t, _QWORD *))(*(v68 - 1) + 16))(boxed_opaque_existential_2Tm, v69, v68);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v108);
      sub_298FC((uint64_t)v108);
      v71._countAndFlagsBits = 0;
      v71._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v71);
      LogMessage.init(stringInterpolation:)(v65);
      Logger.error(_:)(v64, v58, &protocol witness table for OSLogger);
      swift_release(v86);
      swift_bridgeObjectRelease();
      swift_release(v96);
      swift_errorRelease(v56);
      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v61, v58);
      return ((uint64_t (*)(_BYTE *, uint64_t))v104)(v55, v85);
    }
    goto LABEL_26;
  }
  v52 = v94;
  v53 = v91;
  if ((unint64_t)v103 >> 32)
    goto LABEL_35;
  if (v103 >> 11 == 27)
  {
LABEL_37:
    __break(1u);
    swift_errorRelease(v14);
    result = swift_errorRelease(v14);
    __break(1u);
    return result;
  }
  if (v103 >> 16 > 0x10)
  {
LABEL_36:
    __break(1u);
    __break(1u);
    goto LABEL_37;
  }
  v51 = (const char *)v45;
  v54 = &v112;
LABEL_26:
  v72 = v51;
  v73 = swift_retain();
  checkForErrorAndConsumeState(state:)(v73);
  v86 = (char *)v72;
  swift_release(v72);
  v74 = v93;
  v75 = v28;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v52 + 88))(v53, v93) == enum case for OSSignpostError.doubleEnd(_:))
  {
    v76 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v53, v74);
    v76 = "";
  }
  v77 = v95;
  v83(v25, v95, v19);
  v78 = v19;
  v79 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v79 = 0;
  v80 = OSSignpostID.rawValue.getter(v79);
  _os_signpost_emit_with_name_impl(&dword_0, v47, (os_signpost_type_t)v50, v80, v54, v76, v79, 2u);
  swift_slowDealloc(v79, -1, -1);

  swift_release(v96);
  v81 = *(void (**)(_BYTE *, uint64_t))(v104 + 8);
  v81(v77, v78);
  v81(v75, v78);
  swift_release(v86);
  return ((uint64_t (*)(_BYTE *, uint64_t))v81)(v25, v78);
}

uint64_t sub_243C10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OSLogger(0);
  __swift_allocate_value_buffer(v3, qword_3C37B0);
  __swift_project_value_buffer(v3, (uint64_t)qword_3C37B0);
  static OSLogger.Subsystem.podcasts.getter();
  return OSLogger.init(subsystem:category:)(v2, 0xD000000000000010, 0x8000000000301A90);
}

uint64_t sub_243CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSSignposter(0);
  __swift_allocate_value_buffer(v4, qword_3C37C8);
  __swift_project_value_buffer(v4, (uint64_t)qword_3C37C8);
  v5 = static OSLogger.Subsystem.podcasts.getter();
  v6 = OSLogger.Subsystem.rawValue.getter(v5);
  OSSignposter.init(subsystem:category:)(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_243D8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_F1C0(&qword_3B20B8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20C0);
  v12 = sub_67E30((unint64_t *)&qword_3B20C8, &qword_3B20C0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v0, v10);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ALL, 0x80000000003147A0, v9, v2, v6, 0);
  qword_3C37E0 = result;
  return result;
}

uint64_t sub_243F50()
{
  uint64_t result;

  sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  result = static OS_dispatch_queue.localAssetSupportWorkQueue.getter();
  qword_3C37E8 = result;
  return result;
}

uint64_t sub_243F90()
{
  uint64_t result;

  sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  result = static OS_dispatch_queue.localAssetSupportWorkQueue.getter();
  qword_3C37F0 = result;
  return result;
}

uint64_t sub_243FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  _QWORD v12[2];

  v0 = type metadata accessor for URL.DirectoryHint(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v8, qword_3C37F8);
  __swift_project_value_buffer(v4, (uint64_t)qword_3C37F8);
  v9 = objc_msgSend((id)objc_opt_self(MTConstants), "sharedCacheDirectory");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

  v12[0] = 0xD000000000000013;
  v12[1] = 0x8000000000314730;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.isDirectory(_:), v0);
  v10 = sub_65CC4();
  URL.appending<A>(path:directoryHint:)(v12, v3, &type metadata for String, v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_244148(uint64_t a1, uint64_t a2)
{
  return JSStoreDataCache.object(forKey:)(a1, a2);
}

uint64_t sub_244168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return JSStoreDataCache.object<A>(forKey:)(a1, a2, a3, a4);
}

uint64_t sub_244188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return JSStoreDataCache.setObject(_:forKey:)(a1, a2, a3);
}

void sub_2441A8(uint64_t a1, uint64_t a2)
{
  JSStoreDataCache.removeObject(forKey:)(*(Swift::String *)&a1);
}

char *sub_2441C8()
{
  char v1;

  return &v1;
}

uint64_t sub_2441D8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_24420C(void (*a1)(char *), uint64_t a2, void (*a3)(NSObject *), uint64_t a4)
{
  uint64_t v4;

  return sub_240590(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(const char **)(v4 + 40), *(_QWORD *)(v4 + 48), *(_BYTE *)(v4 + 56), *(_QWORD *)(v4 + 64));
}

uint64_t sub_244248()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_24426C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_244298()
{
  uint64_t v0;

  return sub_243080(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_27(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2442C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for JSONContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_244328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSONContext(0) - 8) + 80);
  return sub_2419B4(a1, v2 + ((v7 + 32) & ~v7), v5, v6, a2);
}

uint64_t sub_244394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for JSONObject(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 41) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_244430()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void **v3;

  v1 = *(_QWORD *)(type metadata accessor for JSONObject(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_241DEC(*(_QWORD *)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), v0 + v2, *v3, v3[1]);
}

uint64_t type metadata accessor for JSStoreDataCache()
{
  return objc_opt_self(_TtC8ShelfKit16JSStoreDataCache);
}

uint64_t method lookup function for JSStoreDataCache(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for JSStoreDataCache);
}

uint64_t type metadata accessor for JSStoreDataCacheValue(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3920;
  if (!qword_3C3920)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for JSStoreDataCacheValue);
  return result;
}

uint64_t sub_2444F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JSStoreDataCacheValue(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244530(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  unsigned __int8 v22;
  id v23;
  uint64_t (*v24)(char *, uint64_t);
  id v25;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33[2];

  v31 = a1;
  v3 = type metadata accessor for URL.DirectoryHint(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for URL(0);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_3B0200 != -1)
    swift_once(&qword_3B0200, sub_243F90);
  v13 = qword_3C37F0;
  *v12 = qword_3C37F0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = (id)v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    if (qword_3B0208 == -1)
      goto LABEL_5;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_3B0208, sub_243FD0);
LABEL_5:
  v15 = v32;
  __swift_project_value_buffer(v32, (uint64_t)qword_3C37F8);
  v33[0] = v31;
  v33[1] = a2;
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = 0x6E6F736A2ELL;
  v16._object = (void *)0xE500000000000000;
  String.append(_:)(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v3);
  v17 = sub_65CC4();
  URL.appending<A>(path:directoryHint:)(v33, v6, &type metadata for String, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v19);
  v21 = v20;
  v33[0] = 0;
  v22 = objc_msgSend(v18, "removeItemAtURL:error:", v20, v33);

  v23 = v33[0];
  if ((v22 & 1) != 0)
  {
    v24 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
    v25 = v33[0];
    return v24(v8, v15);
  }
  else
  {
    v27 = v33[0];
    _convertNSErrorToError(_:)(v23);

    swift_willThrow(v28);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v8, v15);
  }
}

unint64_t sub_24484C()
{
  unint64_t result;

  result = qword_3C38C0;
  if (!qword_3C38C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StoreDataCacheError);
    atomic_store(result, (unint64_t *)&qword_3C38C0);
  }
  return result;
}

uint64_t *sub_244890(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for JSONObject(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_244934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for JSONObject(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_24497C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for JSONObject(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_2449F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for JSONObject(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_244A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for JSONObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_244ADC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for JSONObject(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_244B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_244B5C);
}

uint64_t sub_244B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for JSONObject(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_244BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_244BF0);
}

uint64_t sub_244BF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for JSONObject(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_244C64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_301AF8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for JSONObject(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *MultiSelectableExtension.__allocating_init(shouldDisplayMultiSelectUI:isMultiSelectable:shouldSelect:didDeselect:didSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *result;

  result = (_QWORD *)swift_allocObject(v10, 112, 7);
  result[12] = 0;
  result[13] = 0;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  result[9] = a8;
  result[10] = a9;
  result[11] = a10;
  return result;
}

uint64_t MultiSelectableExtension.shouldSelect.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t MultiSelectableExtension.didDeselect.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain(*(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t MultiSelectableExtension.didSelect.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_retain(*(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t sub_244E00@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _BYTE v9[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 96, v9, 0, 0);
  v4 = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 104);
  if (v4)
  {
    v6 = swift_allocObject(&unk_38BE68, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_3B570;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_76C34(v4, v5);
}

uint64_t sub_244E88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_38BE40, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_3B570;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess(*a2 + 96, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 96);
  v9 = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v7 + 96) = v6;
  *(_QWORD *)(v7 + 104) = v5;
  sub_76C34(v3, v4);
  return sub_327A0(v8, v9);
}

uint64_t MultiSelectableExtension.manuallySelect.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  sub_76C34(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t MultiSelectableExtension.manuallySelect.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return sub_327A0(v5, v6);
}

_QWORD *MultiSelectableExtension.init(shouldDisplayMultiSelectUI:isMultiSelectable:shouldSelect:didDeselect:didSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  v10[12] = 0;
  v10[13] = 0;
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = a5;
  v10[7] = a6;
  v10[8] = a7;
  v10[9] = a8;
  v10[10] = a9;
  v10[11] = a10;
  return v10;
}

_QWORD *MultiSelectableExtension.deinit()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_327A0(v0[12], v0[13]);
  return v0;
}

uint64_t MultiSelectableExtension.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_327A0(v0[12], v0[13]);
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for MultiSelectableExtension()
{
  return objc_opt_self(_TtC8ShelfKit24MultiSelectableExtension);
}

uint64_t method lookup function for MultiSelectableExtension(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MultiSelectableExtension);
}

uint64_t sub_2450B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2450E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_180784(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5);
        v17 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_180784(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = type metadata accessor for Action(0);
        v16 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)&v14 = v6;
        v3[2] = v8 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = v3[2];
        v11 = v3[3];
        swift_retain();
        if (v12 >= v11 >> 1)
        {
          sub_180784(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = type metadata accessor for Action(0);
        v16 = sub_F1C0((unint64_t *)&qword_3B28E8, (void (*)(uint64_t))type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)&v14 = v10;
        v3[2] = v12 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2452E8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_18081C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v17 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_18081C(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = type metadata accessor for LibraryEpisodeLockup(0);
        v16 = sub_F1C0(&qword_3BB998, (void (*)(uint64_t))type metadata accessor for LibraryEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v6;
        v3[2] = v8 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = v3[2];
        v11 = v3[3];
        swift_retain(v10);
        if (v12 >= v11 >> 1)
        {
          sub_18081C(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = type metadata accessor for LibraryEpisodeLockup(0);
        v16 = sub_F1C0(&qword_3BB998, (void (*)(uint64_t))type metadata accessor for LibraryEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v10;
        v3[2] = v12 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2454F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_18081C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v17 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_18081C(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = type metadata accessor for LibraryShowLockup(0);
        v16 = sub_F1C0(&qword_3C3B28, (void (*)(uint64_t))type metadata accessor for LibraryShowLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v6;
        v3[2] = v8 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = v3[2];
        v11 = v3[3];
        swift_retain(v10);
        if (v12 >= v11 >> 1)
        {
          sub_18081C(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = type metadata accessor for LibraryShowLockup(0);
        v16 = sub_F1C0(&qword_3C3B28, (void (*)(uint64_t))type metadata accessor for LibraryShowLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v10;
        v3[2] = v12 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2456F8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_18081C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5);
        v17 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_18081C(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = type metadata accessor for LegacyLockup(0);
        v16 = sub_F1C0(&qword_3BB900, (void (*)(uint64_t))type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v6;
        v3[2] = v8 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = v3[2];
        v11 = v3[3];
        swift_retain();
        if (v12 >= v11 >> 1)
        {
          sub_18081C(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = type metadata accessor for LegacyLockup(0);
        v16 = sub_F1C0(&qword_3BB900, (void (*)(uint64_t))type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v10;
        v3[2] = v12 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_245900(uint64_t a1)
{
  return sub_245938(a1, (void (*)(uint64_t))type metadata accessor for Information, &qword_3B4E90, (uint64_t)&protocol conformance descriptor for Information);
}

_QWORD *sub_24591C(uint64_t a1)
{
  return sub_245938(a1, (void (*)(uint64_t))type metadata accessor for CategoryListItem, &qword_3BB930, (uint64_t)&protocol conformance descriptor for CategoryListItem);
}

_QWORD *sub_245938(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v20 = a4;
  v7 = ((uint64_t (*)(_QWORD))a2)(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v24 = _swiftEmptyArrayStorage;
    sub_18081C(0, v11, 0);
    v12 = v24;
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_14510(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))a2);
      v24 = v12;
      v16 = v12[2];
      v15 = v12[3];
      if (v16 >= v15 >> 1)
      {
        sub_18081C(v15 > 1, v16 + 1, 1);
        v12 = v24;
      }
      v22 = v7;
      v23 = sub_F1C0(a3, a2, v20);
      v17 = __swift_allocate_boxed_opaque_existential_2Tm(&v21);
      sub_14510((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))a2);
      v12[2] = v16 + 1;
      sub_F4D8(&v21, (uint64_t)&v12[5 * v16 + 4]);
      sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))a2);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

_QWORD *sub_245AA8(uint64_t a1)
{
  return sub_245938(a1, (void (*)(uint64_t))type metadata accessor for Link, &qword_3B0C48, (uint64_t)&protocol conformance descriptor for Link);
}

uint64_t sub_245AC4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_180998(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i);
        v6 = sub_10D2E0();
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_180998(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_180998(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_1F460(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_10D2E0();
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_180998(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_180998(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_1F460(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_245CF4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_18081C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v17 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_18081C(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = type metadata accessor for LegacyChannelLockup(0);
        v16 = sub_F1C0(&qword_3C3B30, (void (*)(uint64_t))type metadata accessor for LegacyChannelLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v6;
        v3[2] = v8 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = v3[2];
        v11 = v3[3];
        swift_retain(v10);
        if (v12 >= v11 >> 1)
        {
          sub_18081C(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = type metadata accessor for LegacyChannelLockup(0);
        v16 = sub_F1C0(&qword_3C3B30, (void (*)(uint64_t))type metadata accessor for LegacyChannelLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
        *(_QWORD *)&v14 = v10;
        v3[2] = v12 + 1;
        sub_F4D8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t CompoundAction.__allocating_init(actions:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  CompoundAction.init(title:actions:presentationStyle:)(0, 0, a1, 0);
  return v3;
}

uint64_t CompoundAction.__allocating_init(title:actions:presentationStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  CompoundAction.init(title:actions:presentationStyle:)(a1, a2, a3, a4);
  return v9;
}

uint64_t CompoundAction.init(title:actions:presentationStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v5 = v4;
  v29 = a4;
  v27 = a1;
  v28 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8ShelfKit14CompoundAction_actions) = a3;
  v18 = type metadata accessor for ImpressionMetrics(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v20 = static ActionMetrics.notInstrumented.getter(v19);
  UUID.init()(v20);
  v21 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v5 + 16) = v21;
  *(_QWORD *)(v5 + 24) = v23;
  v24 = v28;
  *(_QWORD *)(v5 + 32) = v27;
  *(_QWORD *)(v5 + 40) = v24;
  *(_BYTE *)(v5 + 48) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v14, v11);
  sub_23AB8((uint64_t)v17, v5 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  return v5;
}

uint64_t CompoundAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return CompoundAction.init(deserializing:using:)(a1, a2);
}

uint64_t CompoundAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  void (**v2)(uint64_t, uint64_t);
  void (**v3)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v52 = a2;
  v47 = *v3;
  v5 = type metadata accessor for JSONContext(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for JSONObject(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for JSONArray(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v44 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v50 = a1;
  v19 = JSONObject.subscript.getter(0x736E6F69746361, 0xE700000000000000);
  JSONObject.array.getter(v19);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v51 = v10;
  v20(v15, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    sub_1459C((uint64_t)v9, &qword_3B4F30);
    v21 = type metadata accessor for JSONError(0);
    v22 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v21, v22, 0, 0);
    v24 = v23;
    v25 = *v3;
    swift_release(v3);
    *v24 = 0x736E6F69746361;
    v24[1] = 0xE700000000000000;
    v24[2] = v25;
    v26 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, enum case for JSONError.missingProperty(_:), v21);
    swift_willThrow(v26);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v49);
    v20(v50, v51);
    swift_deallocPartialClassInstance(v3, v47, *((unsigned int *)*v3 + 12), *((unsigned __int16 *)*v3 + 26));
  }
  else
  {
    v47 = (void (*)(uint64_t, uint64_t))v20;
    v27 = v44;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v44, v9, v16);
    v28 = type metadata accessor for Action(0);
    __chkstk_darwin(v28);
    v29 = v52;
    *(&v42 - 2) = v30;
    *(&v42 - 1) = v29;
    v31 = v45;
    v32 = JSONArray.compactMap<A>(_:)(sub_9105C);
    v45 = v31;
    v33 = sub_2450E0(v32);
    swift_bridgeObjectRelease();
    *(void (**)(uint64_t, uint64_t))((char *)v3 + OBJC_IVAR____TtC8ShelfKit14CompoundAction_actions) = (void (*)(uint64_t, uint64_t))v33;
    swift_release(v3);
    v34 = v43;
    v35 = v50;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v43, v50, v51);
    v36 = v48;
    v21 = (uint64_t)v46;
    v37 = v29;
    v38 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, v37, v49);
    v39 = v45;
    v40 = Action.init(deserializing:using:)(v34, v21);
    if (!v39)
      v21 = v40;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v52, v38);
    v47((uint64_t)v35, v51);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v16);
  }
  return v21;
}

uint64_t CompoundAction.actions.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit14CompoundAction_actions));
}

void CompoundAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKit.CompoundAction", 23, "init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)", 71, 0);
  __break(1u);
}

uint64_t sub_2465D0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit14CompoundAction_actions));
}

uint64_t CompoundAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CompoundAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  v2 = type metadata accessor for ActionMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_3B8790);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_2466F4()
{
  return type metadata accessor for CompoundAction(0);
}

uint64_t type metadata accessor for CompoundAction(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3A50;
  if (!qword_3C3A50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CompoundAction);
  return result;
}

uint64_t sub_246738(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 160);
}

uint64_t method lookup function for CompoundAction(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CompoundAction);
}

uint64_t ExpressibleByJSON.init(measuredDeserializing:using:performanceLog:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t MetatypeMetadata;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a5;
  v55 = a2;
  v56 = a1;
  v50 = a6;
  v66 = type metadata accessor for JSONContext(0);
  v58 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JSONObject(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v13);
  v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSSignpostID(0);
  v62 = *(_QWORD *)(v15 - 8);
  v63 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3;
  v19 = OSSignpostID.init(log:)(v18);
  LODWORD(v65) = static os_signpost_type_t.begin.getter(v19);
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E10);
  v20 = swift_allocObject(v53, 72, 7);
  v52 = xmmword_2EA0D0;
  *(_OWORD *)(v20 + 16) = xmmword_2EA0D0;
  v67 = a4;
  MetatypeMetadata = swift_getMetatypeMetadata(a4);
  v22 = String.init<A>(describing:)(&v67, MetatypeMetadata);
  v24 = v23;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  v51 = sub_22F20();
  *(_QWORD *)(v20 + 64) = v51;
  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  v25 = v55;
  v26 = v56;
  v61 = v18;
  v27 = v18;
  v28 = v17;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v65, &dword_0, v27, "ExpressibleByJSON.deserialize", 29, 2, v17, "%{public}s", 10, 2, v20);
  v29 = v54;
  swift_bridgeObjectRelease();
  v64 = v10;
  v65 = v9;
  v30 = v9;
  v31 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v30);
  v32 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v57, v25, v66);
  v33 = v59;
  v34 = dispatch thunk of ExpressibleByJSON.init(deserializing:using:)(v12, v32, a4, v60);
  if (v33)
  {
    v35 = static os_signpost_type_t.end.getter(v34);
    v36 = swift_allocObject(v53, 72, 7);
    *(_OWORD *)(v36 + 16) = v52;
    v67 = v33;
    swift_errorRetain(v33);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B08);
    v38 = String.init<A>(describing:)(&v67, v37);
    v39 = v51;
    *(_QWORD *)(v36 + 56) = &type metadata for String;
    *(_QWORD *)(v36 + 64) = v39;
    *(_QWORD *)(v36 + 32) = v38;
    *(_QWORD *)(v36 + 40) = v40;
    LOBYTE(v47) = 2;
    v41 = v61;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v35, &dword_0, v61, "ExpressibleByJSON.deserialize", 29, 2, v28, "%{public}s", 10, v47, v36);
    v42 = swift_bridgeObjectRelease();
    swift_willThrow(v42);

  }
  else
  {
    v43 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v50, v29, a4);
    v44 = static os_signpost_type_t.end.getter(v43);
    v45 = v61;
    os_signpost(_:dso:log:name:signpostID:)(v44, &dword_0, v61, "ExpressibleByJSON.deserialize", 29, 2, v28);

  }
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v25, v66);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v26, v65);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v28, v63);
}

uint64_t ExpressibleByJSON.init(tryMeasuredDeserializing:using:performanceLog:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a5;
  v26 = a3;
  v28 = a6;
  v29 = a2;
  v8 = type metadata accessor for JSONContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONObject(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((JSONObject.isNull.getter(v19) & 1) != 0)
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v8);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v20 = 1;
    v22 = v27;
    v21 = v28;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v29, v8);
    ExpressibleByJSON.init(measuredDeserializing:using:performanceLog:)((uint64_t)v15, (uint64_t)v11, v26, a4, v25, (uint64_t)v18);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v8);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v22 = v27;
    v21 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v28, v18, a4);
    v20 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v21, v20, 1, a4);
}

UIImage __swiftcall TabMenu.Item.tabImage(for:)(ShelfKit::InterfaceMode a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  UIImage v16;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for TabMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x72616265646973, 0xE700000000000000, 0x726142626174, 0xE600000000000000, 0);
  v11 = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_4:
    sub_267BC(v2 + *(int *)(v4 + 20), (uint64_t)v9, (uint64_t *)&unk_3BC5B0);
    v12 = type metadata accessor for Glyph(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if ((_DWORD)v14 == 1)
    {
      sub_1459C((uint64_t)v9, (uint64_t *)&unk_3BC5B0);
      v15 = sub_14510(v2, (uint64_t)v6, type metadata accessor for TabMenu.Item);
    }
    else
    {
      v16.super.isa = (Class)Glyph.image.getter(v14);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
      v15 = sub_14510(v2, (uint64_t)v6, type metadata accessor for TabMenu.Item);
      if (v16.super.isa)
      {
LABEL_8:
        sub_145D8((uint64_t)v6, type metadata accessor for TabMenu.Item);
        return v16;
      }
    }
    v16.super.isa = (Class)Glyph.image.getter(v15);
    goto LABEL_8;
  }
  return (UIImage)Glyph.image.getter(v11);
}

uint64_t TabMenu.Item.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 28)) - 1;
  result = 0x73776F6873;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x736C656E6E616863;
      break;
    case 2:
      result = 0x69726F6765746163;
      break;
    case 3:
      result = 0x64616F6C6E776F64;
      break;
    case 4:
      result = 0x7472616843706F74;
      break;
    case 5:
      result = 0x6F546E7265646F6DLL;
      break;
    case 6:
      result = 0x7972617262696CLL;
      break;
    case 7:
      result = 0x6E657473696CLL;
      break;
    case 8:
      v3 = 0x6F6C61746163;
      goto LABEL_15;
    case 9:
      result = 0x7265666E69;
      break;
    case 10:
      result = 0x64657463656C6573;
      break;
    case 11:
      result = 0x686372616573;
      break;
    case 12:
      v3 = 0x6E6964616F6CLL;
LABEL_15:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x67000000000000;
      break;
    case 13:
      result = 0x79616C50696E696DLL;
      break;
    case 14:
      result = 0x6B72616D6B6F6F62;
      break;
    case 15:
      result = 0x704574736574616CLL;
      break;
    case 16:
      result = 0x796C746E65636572;
      break;
    default:
      result = 0x6E6F6974617473;
      break;
  }
  return result;
}

uint64_t TabMenu.Item.shelfUniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v1 = _s8ShelfKit7TabMenuV4ItemV15sidebarUniqueIDSSvg_0();
  v12 = v1;
  v13 = v2;
  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 28));
  if ((unint64_t)(v3 - 1) >= 0x11)
  {
    if (v3)
    {
      v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount);
      *((_QWORD *)&v11 + 1) = &type metadata for Int;
      *(_QWORD *)&v10 = v4;
    }
    else
    {
      v10 = 0u;
      v11 = 0u;
    }
    sub_267BC((uint64_t)&v10, (uint64_t)&v7, (uint64_t *)&unk_3BC540);
    if (v8)
    {
      sub_1F460(&v7, v9);
      sub_1FB98((uint64_t)v9, (uint64_t)&v7);
      swift_retain();
      v5._countAndFlagsBits = String.init<A>(describing:)(&v7, (char *)&type metadata for Any + 8);
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v9);
      sub_267A8(v3);
      v1 = v12;
    }
    else
    {
      sub_1459C((uint64_t)&v7, (uint64_t *)&unk_3BC540);
    }
    sub_1459C((uint64_t)&v10, (uint64_t *)&unk_3BC540);
  }
  return v1;
}

uint64_t TabMenu.Item.makingEnabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  _QWORD *v15;

  v5 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v2, v5);
  v6 = (int *)type metadata accessor for TabMenu.Item(0);
  v7 = (uint64_t *)(v2 + v6[6]);
  v9 = *v7;
  v8 = v7[1];
  v10 = *(_QWORD *)(v2 + v6[7]);
  v11 = *(_BYTE *)(v2 + v6[8]);
  sub_267BC(v2 + v6[5], a2 + v6[5], (uint64_t *)&unk_3BC5B0);
  v12 = *(_BYTE *)(v2 + v6[10]);
  v13 = *(_BYTE *)(v2 + v6[11]);
  v14 = *(_BYTE *)(v2 + v6[12]);
  v15 = (_QWORD *)(a2 + v6[6]);
  *v15 = v9;
  v15[1] = v8;
  *(_QWORD *)(a2 + v6[7]) = v10;
  *(_BYTE *)(a2 + v6[8]) = v11;
  *(_BYTE *)(a2 + v6[9]) = a1;
  *(_BYTE *)(a2 + v6[10]) = v12;
  *(_BYTE *)(a2 + v6[11]) = v13;
  *(_BYTE *)(a2 + v6[12]) = v14;
  swift_bridgeObjectRetain();
  return sub_26794(v10);
}

uint64_t static TabMenu.item(for:interfaceMode:)@<X0>(int *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a2 & 1;
  v6 = TabMenu.Group.items(for:)(a2 & 1, 0);
  v7 = 1;
  v8 = TabMenu.Group.items(for:)(v5, 1);
  sub_1E406C((uint64_t)v8);
  sub_26794((uint64_t)a1);
  v9 = sub_12AE98((uint64_t)v6, a1);
  sub_267A8((uint64_t)a1);
  swift_bridgeObjectRelease();
  v10 = v9[2];
  v11 = type metadata accessor for TabMenu.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (v10)
  {
    sub_14510((uint64_t)v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), a3, type metadata accessor for TabMenu.Item);
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a3, v7, 1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t TabMenu.Group.title.getter(char a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  if (a1)
  {
    if (a1 == 1)
    {
      v1 = 0x494C5F454C544954;
      v2 = 0xED00005952415242;
    }
    else
    {
      v1 = 0x534E4F4954415453;
      v2 = 0xE800000000000000;
    }
    v4 = 0;
    v3 = 0xE000000000000000;
  }
  else
  {
    v3 = 0x8000000000310BB0;
    v1 = 0x6F5020656C707041;
    v2 = 0xEE00737473616364;
    v4 = 0xD000000000000016;
  }
  return PFLocalizedString(_:comment:)(*(Swift::String *)&v1, *(Swift::String *)&v4)._countAndFlagsBits;
}

uint64_t TabMenu.Group.accessibilityIdentifier.getter(char a1)
{
  if (!a1)
    return 0xD000000000000013;
  if (a1 == 1)
    return 0x696C2E70756F7267;
  return 0x74732E70756F7267;
}

_QWORD *TabMenu.Group.items(for:)(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, char *, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  Swift::String v78;
  Swift::String v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  Swift::String v103;
  Swift::String v104;
  Swift::String v105;
  uint64_t (*v106)(uint64_t, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  Swift::String v110;
  Swift::String v111;
  Swift::String v112;
  void (*v113)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String v117;
  Swift::String v118;
  Swift::String v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  Swift::String v123;
  Swift::String v124;
  Swift::String v125;
  uint64_t v126;
  uint64_t v127;
  Swift::String v128;
  Swift::String v129;
  Swift::String v130;
  uint64_t *v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  void (*v145)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v146)(uint64_t, char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  char *v149;
  Swift::String v150;
  Swift::String v151;
  Swift::String v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  Swift::String v156;
  Swift::String v157;
  Swift::String v158;
  void *v159;
  uint64_t v160;
  char v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  Swift::String v168;
  Swift::String v169;
  Swift::String v170;
  uint64_t v171;
  uint64_t v172;
  Swift::String v173;
  Swift::String v174;
  Swift::String v175;
  Swift::String v176;
  Swift::String v177;
  Swift::String v178;
  unint64_t v179;
  unint64_t v180;
  void (*v181)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v183)(char *, uint64_t, uint64_t, uint64_t);
  void (*v184)(uint64_t, char *, uint64_t);
  uint64_t (*v185)(uint64_t, char *, uint64_t);
  void (*v186)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  __chkstk_darwin(v4);
  v6 = (void (*)(uint64_t, char *, uint64_t))((char *)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (int *)type metadata accessor for TabMenu.Item(0);
  v8 = *((_QWORD *)v7 - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Glyph(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a2 == 1)
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0938);
      v17 = *(_QWORD *)(v8 + 72);
      v18 = *(unsigned __int8 *)(v8 + 80);
      v19 = (v18 + 32) & ~v18;
      v20 = v18 | 7;
      v187 = v17;
      if ((a1 & 1) != 0)
      {
        v87 = swift_allocObject(v16, v19 - v17 + 8 * v17, v20);
        v188 = v87;
        *(_OWORD *)(v87 + 16) = xmmword_2F27E0;
        v88 = v87 + v19;
        static Glyph.Sidebar.recentlyUpdated.getter();
        v89._object = (void *)0x800000000030AFD0;
        v89._countAndFlagsBits = 0xD000000000000010;
        v90._countAndFlagsBits = 0;
        v90._object = (void *)0xE000000000000000;
        v91 = PFLocalizedString(_:comment:)(v89, v90);
        v92 = v88 + v7[5];
        v184 = v6;
        v186 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v186(v92, 1, 1, v11);
        v93 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32);
        v94 = v93(v88, v15, v11);
        v185 = v93;
        *(Swift::String *)(v88 + v7[6]) = v91;
        *(_QWORD *)(v88 + v7[7]) = 17;
        *(_BYTE *)(v88 + v7[8]) = 0;
        *(_BYTE *)(v88 + v7[9]) = 1;
        *(_BYTE *)(v88 + v7[10]) = 0;
        *(_BYTE *)(v88 + v7[11]) = 1;
        *(_BYTE *)(v88 + v7[12]) = 1;
        v95 = v187;
        v96 = v88 + v187;
        static Glyph.Sidebar.shows.getter(v94);
        v97._countAndFlagsBits = 0x48535F454C544954;
        v97._object = (void *)0xEB0000000053574FLL;
        v98._countAndFlagsBits = 0;
        v98._object = (void *)0xE000000000000000;
        v99 = PFLocalizedString(_:comment:)(v97, v98);
        v100 = v186;
        v186(v96 + v7[5], 1, 1, v11);
        v101 = v93(v88 + v95, v15, v11);
        *(Swift::String *)(v96 + v7[6]) = v99;
        *(_QWORD *)(v96 + v7[7]) = 1;
        *(_BYTE *)(v96 + v7[8]) = 0;
        *(_BYTE *)(v96 + v7[9]) = 1;
        *(_BYTE *)(v96 + v7[10]) = 0;
        *(_BYTE *)(v96 + v7[11]) = 1;
        *(_BYTE *)(v96 + v7[12]) = 1;
        v102 = v88 + 2 * v95;
        static Glyph.Sidebar.channels.getter(v101);
        v103._countAndFlagsBits = 0x48435F454C544954;
        v103._object = (void *)0xEE00534C454E4E41;
        v104._countAndFlagsBits = 0;
        v104._object = (void *)0xE000000000000000;
        v105 = PFLocalizedString(_:comment:)(v103, v104);
        v100(v102 + v7[5], 1, 1, v11);
        v106 = v185;
        v107 = v185(v102, v15, v11);
        *(Swift::String *)(v102 + v7[6]) = v105;
        *(_QWORD *)(v102 + v7[7]) = 2;
        *(_BYTE *)(v102 + v7[8]) = 0;
        *(_BYTE *)(v102 + v7[9]) = 1;
        *(_BYTE *)(v102 + v7[10]) = 0;
        *(_BYTE *)(v102 + v7[11]) = 1;
        *(_BYTE *)(v102 + v7[12]) = 1;
        v108 = v95;
        v109 = v88 + 3 * v95;
        static Glyph.Sidebar.categories.getter(v107);
        v110._object = (void *)0x800000000030E8C0;
        v110._countAndFlagsBits = 0xD000000000000010;
        v111._countAndFlagsBits = 0;
        v111._object = (void *)0xE000000000000000;
        v112 = PFLocalizedString(_:comment:)(v110, v111);
        v113 = v186;
        v186(v109 + v7[5], 1, 1, v11);
        v114 = v106(v109, v15, v11);
        *(Swift::String *)(v109 + v7[6]) = v112;
        *(_QWORD *)(v109 + v7[7]) = 3;
        *(_BYTE *)(v109 + v7[8]) = 0;
        *(_BYTE *)(v109 + v7[9]) = 1;
        *(_BYTE *)(v109 + v7[10]) = 0;
        *(_BYTE *)(v109 + v7[11]) = 1;
        *(_BYTE *)(v109 + v7[12]) = 1;
        v115 = v108;
        v183 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(4 * v108);
        v116 = v88 + 4 * v108;
        static Glyph.Sidebar.bookmarks.getter(v114);
        v117._countAndFlagsBits = 0x41535F454C544954;
        v117._object = (void *)0xEB00000000444556;
        v118._countAndFlagsBits = 0;
        v118._object = (void *)0xE000000000000000;
        v119 = PFLocalizedString(_:comment:)(v117, v118);
        v113(v116 + v7[5], 1, 1, v11);
        v120 = (void (*)(char *, char *, uint64_t))v185;
        v121 = v185(v116, v15, v11);
        *(Swift::String *)(v116 + v7[6]) = v119;
        *(_QWORD *)(v116 + v7[7]) = 15;
        *(_BYTE *)(v116 + v7[8]) = 0;
        *(_BYTE *)(v116 + v7[9]) = 1;
        *(_BYTE *)(v116 + v7[10]) = 0;
        *(_BYTE *)(v116 + v7[11]) = 1;
        *(_BYTE *)(v116 + v7[12]) = 1;
        v122 = (char *)v183 + v115 + v88;
        static Glyph.Sidebar.downloaded.getter(v121);
        v123._object = (void *)0x80000000003148E0;
        v123._countAndFlagsBits = 0xD000000000000010;
        v124._countAndFlagsBits = 0;
        v124._object = (void *)0xE000000000000000;
        v125 = PFLocalizedString(_:comment:)(v123, v124);
        v126 = (uint64_t)v184;
        static Glyph.Sidebar.downloadedWithBadge.getter();
        v113(v126, 0, 1, v11);
        v120(v122, v15, v11);
        *(Swift::String *)&v122[v7[6]] = v125;
        *(_QWORD *)&v122[v7[7]] = 4;
        v122[v7[8]] = 0;
        v122[v7[9]] = 1;
        v127 = sub_24C0D4(v126, (uint64_t)&v122[v7[5]]);
        v122[v7[10]] = 0;
        v122[v7[11]] = 1;
        v122[v7[12]] = 1;
        v55 = (char *)(v88 + 6 * v187);
        static Glyph.Sidebar.latestEpisodes.getter(v127);
        v128._countAndFlagsBits = 0xD000000000000015;
        v128._object = (void *)0x8000000000314900;
        v129._countAndFlagsBits = 0;
        v129._object = (void *)0xE000000000000000;
        v130 = PFLocalizedString(_:comment:)(v128, v129);
        countAndFlagsBits = v130._countAndFlagsBits;
        object = v130._object;
        v113((uint64_t)&v55[v7[5]], 1, 1, v11);
        v120(v55, v15, v11);
      }
      else
      {
        v21 = swift_allocObject(v16, v19 + 6 * v17, v20);
        v188 = v21;
        *(_OWORD *)(v21 + 16) = xmmword_3020A0;
        v22 = v21 + v19;
        static Glyph.Sidebar.shows.getter(v21);
        v23._countAndFlagsBits = 0x48535F454C544954;
        v23._object = (void *)0xEB0000000053574FLL;
        v24._countAndFlagsBits = 0;
        v24._object = (void *)0xE000000000000000;
        v25 = PFLocalizedString(_:comment:)(v23, v24);
        v26 = v22 + v7[5];
        v186 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v186(v26, 1, 1, v11);
        v27 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32);
        v28 = v27(v22, v15, v11);
        v29 = v27;
        *(Swift::String *)(v22 + v7[6]) = v25;
        *(_QWORD *)(v22 + v7[7]) = 1;
        *(_BYTE *)(v22 + v7[8]) = 0;
        *(_BYTE *)(v22 + v7[9]) = 1;
        *(_BYTE *)(v22 + v7[10]) = 0;
        *(_BYTE *)(v22 + v7[11]) = 1;
        *(_BYTE *)(v22 + v7[12]) = 1;
        v30 = v187;
        v31 = v22 + v187;
        static Glyph.Sidebar.channels.getter(v28);
        v32._countAndFlagsBits = 0x48435F454C544954;
        v32._object = (void *)0xEE00534C454E4E41;
        v33._countAndFlagsBits = 0;
        v33._object = (void *)0xE000000000000000;
        v34 = PFLocalizedString(_:comment:)(v32, v33);
        v186(v31 + v7[5], 1, 1, v11);
        v35 = v29(v22 + v30, v15, v11);
        *(Swift::String *)(v31 + v7[6]) = v34;
        *(_QWORD *)(v31 + v7[7]) = 2;
        *(_BYTE *)(v31 + v7[8]) = 0;
        *(_BYTE *)(v31 + v7[9]) = 1;
        *(_BYTE *)(v31 + v7[10]) = 0;
        *(_BYTE *)(v31 + v7[11]) = 1;
        *(_BYTE *)(v31 + v7[12]) = 1;
        v184 = (void (*)(uint64_t, char *, uint64_t))v29;
        v185 = (uint64_t (*)(uint64_t, char *, uint64_t))(2 * v30);
        v36 = v22 + 2 * v30;
        static Glyph.Sidebar.categories.getter(v35);
        v37._object = (void *)0x800000000030E8C0;
        v37._countAndFlagsBits = 0xD000000000000010;
        v38._countAndFlagsBits = 0;
        v38._object = (void *)0xE000000000000000;
        v39 = PFLocalizedString(_:comment:)(v37, v38);
        v40 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v186;
        v186(v36 + v7[5], 1, 1, v11);
        v41 = v29(v36, v15, v11);
        *(Swift::String *)(v36 + v7[6]) = v39;
        *(_QWORD *)(v36 + v7[7]) = 3;
        *(_BYTE *)(v36 + v7[8]) = 0;
        *(_BYTE *)(v36 + v7[9]) = 1;
        *(_BYTE *)(v36 + v7[10]) = 0;
        *(_BYTE *)(v36 + v7[11]) = 1;
        *(_BYTE *)(v36 + v7[12]) = 1;
        v42 = v187;
        v43 = (char *)v185 + v187 + v22;
        static Glyph.Sidebar.bookmarks.getter(v41);
        v44._countAndFlagsBits = 0x41535F454C544954;
        v44._object = (void *)0xEB00000000444556;
        v45._countAndFlagsBits = 0;
        v45._object = (void *)0xE000000000000000;
        v46 = PFLocalizedString(_:comment:)(v44, v45);
        v40(&v43[v7[5]], 1, 1, v11);
        v47 = v184;
        v48 = ((uint64_t (*)(char *, char *, uint64_t))v184)(v43, v15, v11);
        *(Swift::String *)&v43[v7[6]] = v46;
        *(_QWORD *)&v43[v7[7]] = 15;
        v43[v7[8]] = 0;
        v43[v7[9]] = 1;
        v43[v7[10]] = 0;
        v43[v7[11]] = 1;
        v43[v7[12]] = 1;
        v185 = (uint64_t (*)(uint64_t, char *, uint64_t))(4 * v42);
        v49 = v22 + 4 * v42;
        static Glyph.Sidebar.downloaded.getter(v48);
        v50._object = (void *)0x80000000003148E0;
        v50._countAndFlagsBits = 0xD000000000000010;
        v51._countAndFlagsBits = 0;
        v51._object = (void *)0xE000000000000000;
        v52 = PFLocalizedString(_:comment:)(v50, v51);
        static Glyph.Sidebar.downloadedWithBadge.getter();
        v53 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v186;
        v186((uint64_t)v6, 0, 1, v11);
        v47(v49, v15, v11);
        *(Swift::String *)(v49 + v7[6]) = v52;
        *(_QWORD *)(v49 + v7[7]) = 4;
        *(_BYTE *)(v49 + v7[8]) = 0;
        *(_BYTE *)(v49 + v7[9]) = 1;
        v54 = sub_24C0D4((uint64_t)v6, v49 + v7[5]);
        *(_BYTE *)(v49 + v7[10]) = 0;
        *(_BYTE *)(v49 + v7[11]) = 1;
        *(_BYTE *)(v49 + v7[12]) = 1;
        v55 = (char *)v185 + v187 + v22;
        static Glyph.Sidebar.latestEpisodes.getter(v54);
        v56._countAndFlagsBits = 0xD000000000000015;
        v56._object = (void *)0x8000000000314900;
        v57._countAndFlagsBits = 0;
        v57._object = (void *)0xE000000000000000;
        v58 = PFLocalizedString(_:comment:)(v56, v57);
        countAndFlagsBits = v58._countAndFlagsBits;
        object = v58._object;
        v53(&v55[v7[5]], 1, 1, v11);
        v47((uint64_t)v55, v15, v11);
      }
      v131 = (uint64_t *)&v55[v7[6]];
      *v131 = countAndFlagsBits;
      v131[1] = (uint64_t)object;
      *(_QWORD *)&v55[v7[7]] = 16;
      v55[v7[8]] = 0;
      v55[v7[9]] = 1;
      v55[v7[10]] = 0;
      v55[v7[11]] = 1;
      v55[v7[12]] = 1;
      return (_QWORD *)v188;
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  else if ((a1 & 1) != 0)
  {
    v132 = static Podcasts.isUIPSidebarEnabled.getter(v13);
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0938);
    v134 = *(_QWORD *)(v8 + 72);
    v135 = *(unsigned __int8 *)(v8 + 80);
    v136 = (v135 + 32) & ~v135;
    v137 = v135 | 7;
    v186 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v136;
    v187 = v134;
    if ((v132 & 1) != 0)
    {
      v138 = swift_allocObject(v133, v136 + 4 * v134, v137);
      *(_OWORD *)(v138 + 16) = xmmword_2ED8E0;
      v188 = v138;
      v139 = v138 + v136;
      v185 = (uint64_t (*)(uint64_t, char *, uint64_t))(v138 + v136);
      v140 = sub_2499C8(v138 + v136);
      v141 = v139 + v134;
      static Glyph.Sidebar.browse.getter(v140);
      v142._countAndFlagsBits = 0x41435F454C544954;
      v142._object = (void *)0xED0000474F4C4154;
      v143._countAndFlagsBits = 0;
      v143._object = (void *)0xE000000000000000;
      v144 = PFLocalizedString(_:comment:)(v142, v143);
      v145 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v145(v139 + v134 + v7[5], 1, 1, v11);
      v146 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
      v183 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v145;
      v184 = v146;
      v147 = ((uint64_t (*)(uint64_t, char *, uint64_t))v146)(v139 + v134, v15, v11);
      *(Swift::String *)(v139 + v134 + v7[6]) = v144;
      *(_QWORD *)(v141 + v7[7]) = 9;
      *(_BYTE *)(v141 + v7[8]) = 0;
      *(_BYTE *)(v141 + v7[9]) = 1;
      *(_BYTE *)(v141 + v7[10]) = 0;
      *(_BYTE *)(v141 + v7[11]) = 1;
      *(_BYTE *)(v141 + v7[12]) = 1;
      v148 = 2 * v187;
      v149 = (char *)v185 + 2 * v187;
      static Glyph.Sidebar.topCharts.getter(v147);
      v150._object = (void *)0x8000000000314920;
      v150._countAndFlagsBits = 0xD000000000000010;
      v151._countAndFlagsBits = 0;
      v151._object = (void *)0xE000000000000000;
      v152 = PFLocalizedString(_:comment:)(v150, v151);
      v145((uint64_t)&v149[v7[5]], 1, 1, v11);
      v153 = ((uint64_t (*)(char *, char *, uint64_t))v184)(v149, v15, v11);
      *(Swift::String *)&v149[v7[6]] = v152;
      v154 = v187;
      *(_QWORD *)&v149[v7[7]] = 6;
      v149[v7[8]] = 0;
      v149[v7[9]] = 1;
      v149[v7[10]] = 0;
      v149[v7[11]] = 1;
      v149[v7[12]] = 1;
      v155 = (char *)v185 + v148 + v154;
      static Glyph.TabBar.library.getter(v153);
      v156._countAndFlagsBits = 0x494C5F454C544954;
      v156._object = (void *)0xED00005952415242;
      v157._countAndFlagsBits = 0;
      v157._object = (void *)0xE000000000000000;
      v158 = PFLocalizedString(_:comment:)(v156, v157);
      v159 = v158._object;
      v183(&v155[v7[5]], 1, 1, v11);
      v160 = ((uint64_t (*)(char *, char *, uint64_t))v184)(v155, v15, v11);
      v161 = 0;
      v162 = (uint64_t *)&v155[v7[6]];
      *v162 = v158._countAndFlagsBits;
      v163 = 7;
    }
    else
    {
      v185 = (uint64_t (*)(uint64_t, char *, uint64_t))(2 * v134);
      v164 = swift_allocObject(v133, v136 + 3 * v134, v137);
      *(_OWORD *)(v164 + 16) = xmmword_2EFAE0;
      v188 = v164;
      v165 = v164 + v136;
      v166 = sub_2499C8(v165);
      v167 = v165 + v134;
      static Glyph.Sidebar.browse.getter(v166);
      v168._countAndFlagsBits = 0x41435F454C544954;
      v168._object = (void *)0xED0000474F4C4154;
      v169._countAndFlagsBits = 0;
      v169._object = (void *)0xE000000000000000;
      v170 = PFLocalizedString(_:comment:)(v168, v169);
      v171 = v165 + v134 + v7[5];
      v184 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 56);
      v161 = 1;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v184)(v171, 1, 1, v11);
      v183 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 32);
      v172 = ((uint64_t (*)(uint64_t, char *, uint64_t))v183)(v165 + v134, v15, v11);
      *(Swift::String *)(v165 + v134 + v7[6]) = v170;
      v154 = v187;
      *(_QWORD *)(v167 + v7[7]) = 9;
      *(_BYTE *)(v167 + v7[8]) = 0;
      *(_BYTE *)(v167 + v7[9]) = 1;
      *(_BYTE *)(v167 + v7[10]) = 0;
      *(_BYTE *)(v167 + v7[11]) = 1;
      *(_BYTE *)(v167 + v7[12]) = 1;
      v155 = (char *)v185 + v165;
      static Glyph.Sidebar.topCharts.getter(v172);
      v173._object = (void *)0x8000000000314920;
      v173._countAndFlagsBits = 0xD000000000000010;
      v174._countAndFlagsBits = 0;
      v174._object = (void *)0xE000000000000000;
      v175 = PFLocalizedString(_:comment:)(v173, v174);
      v159 = v175._object;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v184)(&v155[v7[5]], 1, 1, v11);
      v160 = ((uint64_t (*)(char *, char *, uint64_t))v183)(v155, v15, v11);
      v162 = (uint64_t *)&v155[v7[6]];
      *v162 = v175._countAndFlagsBits;
      v163 = 6;
    }
    v162[1] = (uint64_t)v159;
    *(_QWORD *)&v155[v7[7]] = v163;
    v155[v7[8]] = 0;
    v155[v7[9]] = 1;
    v155[v7[10]] = 0;
    v155[v7[11]] = v161;
    v155[v7[12]] = 1;
    static Glyph.TabBar.search.getter(v160);
    v176._countAndFlagsBits = 0x45535F454C544954;
    v176._object = (void *)0xEC00000048435241;
    v177._countAndFlagsBits = 0;
    v177._object = (void *)0xE000000000000000;
    v178 = PFLocalizedString(_:comment:)(v176, v177);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(&v10[v7[5]], 1, 1, v11);
    *(Swift::String *)&v10[v7[6]] = v178;
    *(_QWORD *)&v10[v7[7]] = 12;
    v10[v7[8]] = 0;
    v10[v7[9]] = 1;
    v10[v7[10]] = 0;
    v10[v7[11]] = 0;
    v10[v7[12]] = 1;
    v82 = v188;
    v180 = *(_QWORD *)(v188 + 16);
    v179 = *(_QWORD *)(v188 + 24);
    if (v180 >= v179 >> 1)
      v82 = sub_111EC(v179 > 1, v180 + 1, 1, v188);
    v181 = v186;
    *(_QWORD *)(v82 + 16) = v180 + 1;
    sub_12B1D0((uint64_t)v10, (uint64_t)v181 + v82 + v154 * v180);
  }
  else
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0938);
    v62 = *(unsigned __int8 *)(v8 + 80);
    v63 = (v62 + 32) & ~v62;
    v187 = *(_QWORD *)(v8 + 72);
    v64 = v187;
    v65 = swift_allocObject(v61, v63 + 4 * v187, v62 | 7);
    v188 = v65;
    *(_OWORD *)(v65 + 16) = xmmword_2ED8E0;
    v66 = v65 + v63;
    v67 = sub_2499C8(v65 + v63);
    v68 = v66 + v64;
    static Glyph.TabBar.browse.getter(v67);
    v69._countAndFlagsBits = 0x41435F454C544954;
    v69._object = (void *)0xED0000474F4C4154;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v71 = PFLocalizedString(_:comment:)(v69, v70);
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v72(v68 + v7[5], 1, 1, v11);
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32);
    v185 = (uint64_t (*)(uint64_t, char *, uint64_t))v72;
    v186 = v73;
    v74 = ((uint64_t (*)(uint64_t, char *, uint64_t))v73)(v68, v15, v11);
    *(Swift::String *)(v68 + v7[6]) = v71;
    *(_QWORD *)(v68 + v7[7]) = 9;
    *(_BYTE *)(v68 + v7[8]) = 0;
    *(_BYTE *)(v68 + v7[9]) = 1;
    *(_BYTE *)(v68 + v7[10]) = 0;
    *(_BYTE *)(v68 + v7[11]) = 1;
    *(_BYTE *)(v68 + v7[12]) = 1;
    v75 = v187;
    v76 = v66 + 2 * v187;
    static Glyph.TabBar.library.getter(v74);
    v77._countAndFlagsBits = 0x494C5F454C544954;
    v77._object = (void *)0xED00005952415242;
    v78._countAndFlagsBits = 0;
    v78._object = (void *)0xE000000000000000;
    v79 = PFLocalizedString(_:comment:)(v77, v78);
    v72(v76 + v7[5], 1, 1, v11);
    v80 = (void (*)(uint64_t, char *, uint64_t))v186;
    v81 = ((uint64_t (*)(uint64_t, char *, uint64_t))v186)(v66 + 2 * v75, v15, v11);
    *(Swift::String *)(v76 + v7[6]) = v79;
    *(_QWORD *)(v76 + v7[7]) = 7;
    *(_BYTE *)(v76 + v7[8]) = 0;
    *(_BYTE *)(v76 + v7[9]) = 1;
    *(_BYTE *)(v76 + v7[10]) = 0;
    *(_BYTE *)(v76 + v7[11]) = 0;
    *(_BYTE *)(v76 + v7[12]) = 1;
    v82 = v188;
    v83 = v66 + 3 * v75;
    static Glyph.TabBar.search.getter(v81);
    v84._countAndFlagsBits = 0x45535F454C544954;
    v84._object = (void *)0xEC00000048435241;
    v85._countAndFlagsBits = 0;
    v85._object = (void *)0xE000000000000000;
    v86 = PFLocalizedString(_:comment:)(v84, v85);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v185)(v83 + v7[5], 1, 1, v11);
    v80(v83, v15, v11);
    *(Swift::String *)(v83 + v7[6]) = v86;
    *(_QWORD *)(v83 + v7[7]) = 12;
    *(_BYTE *)(v83 + v7[8]) = 0;
    *(_BYTE *)(v83 + v7[9]) = 1;
    *(_BYTE *)(v83 + v7[10]) = 0;
    *(_BYTE *)(v83 + v7[11]) = 0;
    *(_BYTE *)(v83 + v7[12]) = 1;
  }
  return (_QWORD *)v82;
}

ShelfKit::TabMenu::Section __swiftcall TabMenu.Section.init(group:items:)(ShelfKit::TabMenu::Group group, Swift::OpaquePointer items)
{
  uint64_t v2;
  ShelfKit::TabMenu::Section result;

  *(_BYTE *)v2 = group;
  *(Swift::OpaquePointer *)(v2 + 8) = items;
  result.items = items;
  result.group = group;
  return result;
}

uint64_t TabMenu.Item.init(station:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  static Glyph.Sidebar.station.getter(a1);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = (int *)type metadata accessor for TabMenu.Item(0);
  v7 = a2 + v6[5];
  v8 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)(a2 + v6[6]);
  *v9 = v5;
  v9[1] = v4;
  *(_QWORD *)(a2 + v6[7]) = a1;
  *(_BYTE *)(a2 + v6[8]) = 1;
  *(_BYTE *)(a2 + v6[9]) = 1;
  *(_BYTE *)(a2 + v6[10]) = 0;
  *(_BYTE *)(a2 + v6[11]) = 1;
  *(_BYTE *)(a2 + v6[12]) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t static TabMenu.item(for:preferredInterfaceMode:)@<X0>(int *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _UNKNOWN **v9;
  char *v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _UNKNOWN **v26;

  v5 = a2 & 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC390);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = &off_3729C8;
  sub_24A6D8((uint64_t *)&v26, v5);
  v9 = v26;
  v25 = (char *)v26[2];
  if (v25)
  {
    v24 = a3;
    v10 = 0;
    while (1)
    {
      v11 = v10[(_QWORD)v9 + 32];
      v12 = TabMenu.Group.items(for:)(v11, 0);
      v13 = 1;
      v14 = TabMenu.Group.items(for:)(v11, 1);
      v26 = (_UNKNOWN **)v12;
      sub_1E406C((uint64_t)v14);
      v15 = (uint64_t)v26;
      sub_26794((uint64_t)a1);
      v16 = sub_12AE98(v15, a1);
      sub_267A8((uint64_t)a1);
      swift_bridgeObjectRelease();
      v17 = v16[2];
      v18 = type metadata accessor for TabMenu.Item(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (v17)
      {
        sub_14510((uint64_t)v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), (uint64_t)v8, type metadata accessor for TabMenu.Item);
        v13 = 0;
      }
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v20(v8, v13, 1, v18);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18) != 1)
        break;
      ++v10;
      sub_1459C((uint64_t)v8, &qword_3BC390);
      if (v25 == v10)
      {
        swift_release(v9);
        a3 = v24;
        goto LABEL_9;
      }
    }
    swift_release(v9);
    v23 = v24;
    sub_12B1D0((uint64_t)v8, v24);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v20)(v23, 0, 1, v18);
  }
  else
  {
    swift_release(v26);
LABEL_9:
    v21 = type metadata accessor for TabMenu.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
  }
}

ShelfKit::InterfaceMode_optional __swiftcall InterfaceMode.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  ShelfKit::InterfaceMode_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375BE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = ShelfKit_InterfaceMode_sidebar;
  else
    v4.value = ShelfKit_InterfaceMode_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static InterfaceMode.allCases.getter()
{
  return &off_375C30;
}

uint64_t InterfaceMode.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x72616265646973;
  else
    return 0x726142626174;
}

uint64_t sub_248AB0(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x72616265646973;
  else
    v3 = 0x726142626174;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if (*a2)
    v5 = 0x72616265646973;
  else
    v5 = 0x726142626174;
  if (*a2)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_248B54()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x72616265646973;
  else
    v2 = 0x726142626174;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_248BD0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x72616265646973;
  else
    v2 = 0x726142626174;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_248C28()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x72616265646973;
  else
    v2 = 0x726142626174;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_248CA0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375BE0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_248CFC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x726142626174;
  if (*v1)
    v2 = 0x72616265646973;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t type metadata accessor for TabMenu.Item(uint64_t a1)
{
  return sub_1F9D4(a1, (uint64_t *)&unk_3C3BE0, (uint64_t)&nominal type descriptor for TabMenu.Item);
}

void sub_248D4C(_QWORD *a1@<X8>)
{
  *a1 = &off_375C58;
}

uint64_t TabMenu.Item.usingAlternateGlyph()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  _QWORD *v13;

  v3 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  v4 = (int *)type metadata accessor for TabMenu.Item(0);
  v5 = (uint64_t *)(v1 + v4[6]);
  v6 = *(_QWORD *)(v1 + v4[7]);
  v7 = *(_BYTE *)(v1 + v4[8]);
  v9 = *v5;
  v8 = v5[1];
  v10 = *(_BYTE *)(v1 + v4[9]);
  sub_267BC(v1 + v4[5], a1 + v4[5], (uint64_t *)&unk_3BC5B0);
  v11 = *(_BYTE *)(v1 + v4[11]);
  v12 = *(_BYTE *)(v1 + v4[12]);
  v13 = (_QWORD *)(a1 + v4[6]);
  *v13 = v9;
  v13[1] = v8;
  *(_QWORD *)(a1 + v4[7]) = v6;
  *(_BYTE *)(a1 + v4[8]) = v7;
  *(_BYTE *)(a1 + v4[9]) = v10;
  *(_BYTE *)(a1 + v4[10]) = 1;
  *(_BYTE *)(a1 + v4[11]) = v11;
  *(_BYTE *)(a1 + v4[12]) = v12;
  swift_bridgeObjectRetain();
  return sub_26794(v6);
}

uint64_t TabMenu.Section.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;

  v3 = *((_QWORD *)v1 + 1);
  Hasher._combine(_:)(*v1);
  swift_bridgeObjectRetain();
  sub_24DF4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static TabMenu.Section.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_12C44(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1));
  else
    return 0;
}

Swift::Int TabMenu.Section.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  swift_bridgeObjectRetain();
  sub_24DF4((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_248F24()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  swift_bridgeObjectRetain();
  sub_24DF4((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t TabMenu.Item.alternateGlyph.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TabMenu.Item(0);
  return sub_267BC(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_3BC5B0);
}

uint64_t TabMenu.Item.navigationTab.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 28));
  sub_26794(v1);
  return v1;
}

uint64_t TabMenu.Item.glyphTint.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 32));
}

uint64_t TabMenu.Item.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 36));
}

uint64_t TabMenu.Item.useAlternateGlyph.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 40));
}

uint64_t TabMenu.Item.removableFromFavorites.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 44));
}

uint64_t TabMenu.Item.movable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 48));
}

uint64_t TabMenu.Item.init(glyph:title:navigationTab:glyphTint:enabled:alternateGlyph:useAlternateGlyph:removableFromFavorites:movable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  char v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  uint64_t result;

  v18 = a5 & 1;
  v19 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for TabMenu.Item(0);
  v21 = (_QWORD *)(a9 + v20[6]);
  *v21 = a2;
  v21[1] = a3;
  *(_QWORD *)(a9 + v20[7]) = a4;
  *(_BYTE *)(a9 + v20[8]) = v18;
  *(_BYTE *)(a9 + v20[9]) = a6;
  result = sub_24C0D4(a7, a9 + v20[5]);
  *(_BYTE *)(a9 + v20[10]) = a8;
  *(_BYTE *)(a9 + v20[11]) = a10;
  *(_BYTE *)(a9 + v20[12]) = a11;
  return result;
}

uint64_t _s8ShelfKit7TabMenuV4ItemV5titleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.Item(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void TabMenu.Item.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_F1C0(&qword_3B1B28, (void (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v11);
  v12 = (int *)type metadata accessor for TabMenu.Item(0);
  sub_267BC(v1 + v12[5], (uint64_t)v10, (uint64_t *)&unk_3BC5B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v13 = (uint64_t *)(v1 + v12[6]);
  v14 = *v13;
  v15 = v13[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD **)(v2 + v12[7]);
  sub_26794((uint64_t)v16);
  NavigationTab.hash(into:)(a1, v16);
  sub_267A8((uint64_t)v16);
  Hasher._combine(_:)(*(unsigned __int8 *)(v2 + v12[8]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v12[9]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v12[10]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v12[11]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v12[12]));
}

Swift::Int TabMenu.Item.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  TabMenu.Item.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_24941C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  TabMenu.Item.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_249454(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t _s8ShelfKit7TabMenuV4ItemV5glyph10PodcastsUI5GlyphVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Glyph(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TabMenu.ActionItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.ActionItem(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TabMenu.ActionItem.action.getter()
{
  type metadata accessor for TabMenu.ActionItem(0);
  return swift_retain();
}

uint64_t TabMenu.ActionItem.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TabMenu.ActionItem(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *TabMenu.ActionItem.init(glyph:title:action:accessibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *result;
  _QWORD *v16;
  _QWORD *v17;

  v14 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  result = (int *)type metadata accessor for TabMenu.ActionItem(0);
  v16 = (_QWORD *)(a7 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  *(_QWORD *)(a7 + result[6]) = a4;
  v17 = (_QWORD *)(a7 + result[7]);
  *v17 = a5;
  v17[1] = a6;
  return result;
}

void TabMenu.ActionItem.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for Glyph(0);
  v4 = sub_F1C0(&qword_3B1B28, (void (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  v5 = type metadata accessor for TabMenu.ActionItem(0);
  v6 = (uint64_t *)(v1 + *(int *)(v5 + 20));
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v7, v8);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v1 + *(int *)(v5 + 28));
  v10 = v9[1];
  if (v10)
  {
    v11 = *v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v11, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int TabMenu.ActionItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11);
  v1 = type metadata accessor for Glyph(0);
  v2 = sub_F1C0(&qword_3B1B28, (void (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  dispatch thunk of Hashable.hash(into:)(v11, v1, v2);
  v3 = type metadata accessor for TabMenu.ActionItem(0);
  v4 = (uint64_t *)(v0 + *(int *)(v3 + 20));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v11, v5, v6);
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(v0 + *(int *)(v3 + 28));
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v11, v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_2497E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = type metadata accessor for Glyph(0);
  v6 = sub_F1C0(&qword_3B1B28, (void (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v2 + *(int *)(a2 + 28));
  v11 = v10[1];
  if (v11)
  {
    v12 = *v10;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v12, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_2498D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13);
  v4 = type metadata accessor for Glyph(0);
  v5 = sub_F1C0(&qword_3B1B28, (void (*)(uint64_t))&type metadata accessor for Glyph, (uint64_t)&protocol conformance descriptor for Glyph);
  dispatch thunk of Hashable.hash(into:)(v13, v4, v5);
  v6 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v13, v7, v8);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v2 + *(int *)(a2 + 28));
  v10 = v9[1];
  if (v10)
  {
    v11 = *v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v13, v11, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_2499C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t countAndFlagsBits;
  void *object;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD v20[5];

  v2 = type metadata accessor for Podcasts(0);
  v20[3] = v2;
  v20[4] = sub_F1C0((unint64_t *)&qword_3B33B8, (void (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v20);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.homeTab(_:), v2);
  LOBYTE(v2) = isFeatureEnabled(_:)(v20);
  v4 = __swift_destroy_boxed_opaque_existential_1(v20);
  if ((v2 & 1) != 0)
  {
    static Glyph.Sidebar.home.getter(v4);
    v5._countAndFlagsBits = 0x4F485F454C544954;
    v5._object = (void *)0xEA0000000000454DLL;
    v6._countAndFlagsBits = 1701670728;
    v6._object = (void *)0xE400000000000000;
    v7 = PFLocalizedString(_:comment:)(v5, v6);
    countAndFlagsBits = v7._countAndFlagsBits;
    object = v7._object;
    v10 = (int *)type metadata accessor for TabMenu.Item(0);
    v11 = a1 + v10[5];
    static Glyph.TabBar.home.getter();
    v12 = type metadata accessor for Glyph(0);
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  }
  else
  {
    static Glyph.Sidebar.listenNow.getter(v4);
    v14._countAndFlagsBits = 0x494C5F454C544954;
    v14._object = (void *)0xEC0000004E455453;
    v15._countAndFlagsBits = 0x4E206E657473694CLL;
    v15._object = (void *)0xEA0000000000776FLL;
    v16 = PFLocalizedString(_:comment:)(v14, v15);
    countAndFlagsBits = v16._countAndFlagsBits;
    object = v16._object;
    v10 = (int *)type metadata accessor for TabMenu.Item(0);
    v17 = a1 + v10[5];
    v18 = type metadata accessor for Glyph(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  }
  v19 = (uint64_t *)(a1 + v10[6]);
  *v19 = countAndFlagsBits;
  v19[1] = (uint64_t)object;
  *(_QWORD *)(a1 + v10[7]) = 8;
  *(_BYTE *)(a1 + v10[8]) = 0;
  *(_BYTE *)(a1 + v10[9]) = 1;
  *(_BYTE *)(a1 + v10[10]) = 0;
  *(_BYTE *)(a1 + v10[11]) = 0;
  *(_BYTE *)(a1 + v10[12]) = 0;
  return result;
}

BOOL TabMenu.Group.sidebarContains(_:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  _QWORD v22[2];
  char *v23;
  uint64_t v24;

  v4 = type metadata accessor for TabMenu.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC390);
  __chkstk_darwin(v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 1;
  v12 = TabMenu.Group.items(for:)(1, a2);
  v13 = v12[2];
  if (v13)
  {
    v22[1] = v12;
    v23 = v10;
    v14 = (uint64_t)v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v24 = v5;
    v15 = *(_QWORD *)(v5 + 72);
    v16 = a1 - 1;
    while (1)
    {
      v18 = sub_14510(v14, (uint64_t)v7, type metadata accessor for TabMenu.Item);
      v19 = 1;
      switch(*(_QWORD *)&v7[*(int *)(v4 + 28)])
      {
        case 1:
          v19 = 7;
          if (v16 <= 0x10)
            goto LABEL_32;
          goto LABEL_36;
        case 2:
          v19 = 8;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 3:
          v19 = 9;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 4:
          v19 = 10;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 5:
          v19 = 11;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 6:
          v19 = 12;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 7:
          v19 = 5;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 8:
          v19 = 4;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 9:
          v19 = 6;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 0xALL:
          v19 = 2;
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 0xBLL:
          goto LABEL_32;
        case 0xCLL:
          v19 = 3;
          goto LABEL_32;
        case 0xDLL:
          v19 = NSNotFound.getter(v18);
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        case 0xELL:
        case 0xFLL:
        case 0x10:
        case 0x11:
          v19 = *(_QWORD *)&v7[*(int *)(v4 + 28)];
          if (v16 > 0x10)
            goto LABEL_36;
          goto LABEL_32;
        default:
          v19 = 13;
          if (v16 <= 0x10)
          {
LABEL_32:
            v17 = 1;
            switch(v16)
            {
              case 0uLL:
                if (v19 == 7)
                  goto LABEL_65;
                goto LABEL_5;
              case 1uLL:
                if (v19 == 8)
                  goto LABEL_65;
                goto LABEL_5;
              case 2uLL:
                if (v19 == 9)
                  goto LABEL_65;
                goto LABEL_5;
              case 3uLL:
                if (v19 == 10)
                  goto LABEL_65;
                goto LABEL_5;
              case 4uLL:
                if (v19 == 11)
                  goto LABEL_65;
                goto LABEL_5;
              case 5uLL:
                if (v19 == 12)
                  goto LABEL_65;
                goto LABEL_5;
              case 6uLL:
                if (v19 == 5)
                  goto LABEL_65;
                goto LABEL_5;
              case 7uLL:
                if (v19 == 4)
                  goto LABEL_65;
                goto LABEL_5;
              case 8uLL:
                if (v19 == 6)
                  goto LABEL_65;
                goto LABEL_5;
              case 9uLL:
                if (v19 == 2)
                  goto LABEL_65;
                goto LABEL_5;
              case 0xAuLL:
                break;
              case 0xBuLL:
                if (v19 == 3)
                  goto LABEL_65;
                goto LABEL_5;
              case 0xCuLL:
                v17 = NSNotFound.getter(1);
                break;
              case 0xDuLL:
                if (v19 == 14)
                  goto LABEL_65;
                goto LABEL_5;
              case 0xEuLL:
                if (v19 == 15)
                  goto LABEL_65;
                goto LABEL_5;
              case 0xFuLL:
                if (v19 == 16)
                  goto LABEL_65;
                goto LABEL_5;
              case 0x10uLL:
                if (v19 == 17)
                  goto LABEL_65;
                goto LABEL_5;
              default:
                goto LABEL_36;
            }
            if (v19 == v17)
            {
LABEL_65:
              v10 = v23;
              sub_12B1D0((uint64_t)v7, (uint64_t)v23);
              v11 = 0;
              v5 = v24;
              goto LABEL_67;
            }
          }
          else
          {
LABEL_36:
            if (v19 == 13)
              goto LABEL_65;
          }
LABEL_5:
          sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
          v14 += v15;
          if (!--v13)
          {
            v11 = 1;
            v10 = v23;
            v5 = v24;
            goto LABEL_67;
          }
          break;
      }
    }
  }
LABEL_67:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v11, 1, v4);
  swift_bridgeObjectRelease();
  v20 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1;
  sub_1459C((uint64_t)v10, &qword_3BC390);
  return v20;
}

ShelfKit::TabMenu::Group_optional __swiftcall TabMenu.Group.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3)
    LOBYTE(rawValue) = 3;
  return (ShelfKit::TabMenu::Group_optional)rawValue;
}

_UNKNOWN **static TabMenu.Group.allCases.getter()
{
  return &off_375C80;
}

uint64_t TabMenu.Group.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t *sub_249F50@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_249F68(_QWORD *a1@<X8>)
{
  *a1 = &off_375CA8;
}

_QWORD *static TabMenu.allItems(interfaceMode:)(char a1)
{
  char v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = a1 & 1;
  v2 = TabMenu.Group.items(for:)(a1 & 1, 0);
  v3 = TabMenu.Group.items(for:)(v1, 1);
  sub_1E406C((uint64_t)v3);
  return v2;
}

_QWORD *static TabMenu.allItems(group:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  int v37;
  int v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v37 = a1;
  v46 = type metadata accessor for TabMenu.Item(0);
  v41 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (uint64_t)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - v3;
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - v6;
  v8 = 0;
  v9 = 0;
  v10 = _swiftEmptyArrayStorage;
  do
  {
    v11 = v8;
    v12 = TabMenu.Group.items(for:)(*((_BYTE *)&off_375CD0 + v9 + 32), v37);
    v13 = v12;
    v42 = v12[2];
    if (v42)
    {
      v38 = v11;
      v14 = 0;
      v44 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v39 = v12;
      v40 = (char *)v12 + v44;
      while (1)
      {
        if (v14 >= v13[2])
        {
          __break(1u);
          __break(1u);
          JUMPOUT(0x24A420);
        }
        v15 = *(_QWORD *)(v41 + 72);
        sub_14510((uint64_t)&v40[v15 * v14], (uint64_t)v7, type metadata accessor for TabMenu.Item);
        v16 = v10[2];
        if (!v16)
          goto LABEL_67;
        v17 = *(int *)(v46 + 28);
        v18 = (uint64_t)v10 + v44;
        v43 = v10;
        swift_bridgeObjectRetain();
        while (2)
        {
          sub_14510(v18, (uint64_t)v4, type metadata accessor for TabMenu.Item);
          v19 = *(_QWORD **)&v4[*(int *)(v46 + 28)];
          v20 = *(int **)&v7[v17];
          switch((unint64_t)v19)
          {
            case 1uLL:
              if (v20 != (int *)((char *)&dword_0 + 1))
                goto LABEL_62;
              goto LABEL_6;
            case 2uLL:
              if (v20 == (int *)((char *)&dword_0 + 2))
                goto LABEL_6;
              goto LABEL_62;
            case 3uLL:
              if (v20 == (int *)((char *)&dword_0 + 3))
                goto LABEL_6;
              goto LABEL_62;
            case 4uLL:
              if (v20 == &dword_4)
                goto LABEL_6;
              goto LABEL_62;
            case 5uLL:
              if (v20 == (int *)((char *)&dword_4 + 1))
                goto LABEL_6;
              goto LABEL_62;
            case 6uLL:
              if (v20 == (int *)((char *)&dword_4 + 2))
                goto LABEL_6;
              goto LABEL_62;
            case 7uLL:
              if (v20 == (int *)((char *)&dword_4 + 3))
                goto LABEL_6;
              goto LABEL_62;
            case 8uLL:
              if (v20 == &dword_8)
                goto LABEL_6;
              goto LABEL_62;
            case 9uLL:
              if (v20 == (int *)((char *)&dword_8 + 1))
                goto LABEL_6;
              goto LABEL_62;
            case 0xAuLL:
              if (v20 == (int *)((char *)&dword_8 + 2))
                goto LABEL_6;
              goto LABEL_62;
            case 0xBuLL:
              if (v20 == (int *)((char *)&dword_8 + 3))
                goto LABEL_6;
              goto LABEL_62;
            case 0xCuLL:
              if (v20 == &dword_C)
                goto LABEL_6;
              goto LABEL_62;
            case 0xDuLL:
              if (v20 == (int *)((char *)&dword_C + 1))
                goto LABEL_6;
              goto LABEL_62;
            case 0xEuLL:
              if (v20 == (int *)((char *)&dword_C + 2))
                goto LABEL_6;
              goto LABEL_62;
            case 0xFuLL:
              if (v20 == (int *)((char *)&dword_C + 3))
                goto LABEL_6;
              goto LABEL_62;
            case 0x10uLL:
              if (v20 == &dword_10)
                goto LABEL_6;
              goto LABEL_62;
            case 0x11uLL:
              if (v20 != (int *)((char *)&dword_10 + 1))
                goto LABEL_62;
              goto LABEL_6;
            default:
              if ((unint64_t)v20 - 1 < 0x11)
                goto LABEL_62;
              if (v19)
              {
                if (v20)
                {
                  v21 = v19[2];
                  v22 = v19[3];
                  v23 = *((_QWORD *)v20 + 2);
                  v24 = *((_QWORD *)v20 + 3);
                  v25 = v21 == v23 && v22 == v24;
                  if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0) & 1) != 0)
                  {
                    v26 = v19[4];
                    v27 = v19[5];
                    v28 = *((_QWORD *)v20 + 4);
                    v29 = *((_QWORD *)v20 + 5);
                    v30 = v26 == v28 && v27 == v29;
                    if ((v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v28, v29, 0) & 1) != 0)
                      && *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount) == *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount))
                    {
                      v31 = *(_QWORD *)((char *)v19 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                      v32 = *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount);
                      sub_145D8((uint64_t)v4, type metadata accessor for TabMenu.Item);
                      if (v31 == v32)
                        goto LABEL_7;
                      goto LABEL_63;
                    }
                  }
                }
LABEL_62:
                sub_145D8((uint64_t)v4, type metadata accessor for TabMenu.Item);
LABEL_63:
                v18 += v15;
                if (!--v16)
                {
                  v10 = v43;
                  swift_bridgeObjectRelease();
LABEL_67:
                  sub_14510((uint64_t)v7, v45, type metadata accessor for TabMenu.Item);
                  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
                    v10 = (_QWORD *)sub_111EC(0, v10[2] + 1, 1, (unint64_t)v10);
                  v13 = v39;
                  v34 = v10[2];
                  v33 = v10[3];
                  if (v34 >= v33 >> 1)
                    v10 = (_QWORD *)sub_111EC(v33 > 1, v34 + 1, 1, (unint64_t)v10);
                  v10[2] = v34 + 1;
                  sub_12B1D0(v45, (uint64_t)v10 + v44 + v34 * v15);
                  goto LABEL_8;
                }
                continue;
              }
              if (v20)
              {
                sub_267A8(0);
                goto LABEL_62;
              }
LABEL_6:
              sub_145D8((uint64_t)v4, type metadata accessor for TabMenu.Item);
LABEL_7:
              v10 = v43;
              swift_bridgeObjectRelease();
              v13 = v39;
LABEL_8:
              ++v14;
              sub_145D8((uint64_t)v7, type metadata accessor for TabMenu.Item);
              if (v14 == v42)
              {
                swift_bridgeObjectRelease();
                LOBYTE(v11) = v38;
                goto LABEL_3;
              }
              break;
          }
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_3:
    v8 = 1;
    v9 = 1;
  }
  while ((v11 & 1) == 0);
  return v10;
}

uint64_t static TabMenu.defaultTab.getter()
{
  return 8;
}

uint64_t TabMenu.Item.link.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return static Link.libraryLink(from:)(v1, a1);
}

uint64_t _s8ShelfKit7TabMenuV4ItemV15sidebarUniqueIDSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::String v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for TabMenu.Item(0);
  v3 = *(int *)(v2 + 28);
  v21 = NavigationTab.stringValue.getter(*(_QWORD *)(v1 + v3));
  v22 = v4;
  v5 = *(_BYTE *)(v1 + *(int *)(v2 + 40));
  v20 = &type metadata for Bool;
  LOBYTE(v18) = v5;
  sub_267BC((uint64_t)&v18, (uint64_t)&v15, (uint64_t *)&unk_3BC540);
  if (v16)
  {
    sub_1F460(&v15, v17);
    sub_1FB98((uint64_t)v17, (uint64_t)&v15);
    v6._countAndFlagsBits = String.init<A>(describing:)(&v15, (char *)&type metadata for Any + 8);
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v17);
  }
  else
  {
    sub_1459C((uint64_t)&v15, (uint64_t *)&unk_3BC540);
  }
  sub_1459C((uint64_t)&v18, (uint64_t *)&unk_3BC540);
  v7 = *(_QWORD **)(v1 + v3);
  if ((unint64_t)v7 >= 0x12)
  {
    v8 = v7[2];
    v9 = v7[3];
    v20 = &type metadata for String;
    v18 = v8;
    v19 = v9;
    sub_267BC((uint64_t)&v18, (uint64_t)&v15, (uint64_t *)&unk_3BC540);
    if (v16)
    {
      sub_1F460(&v15, v17);
      sub_1FB98((uint64_t)v17, (uint64_t)&v15);
      sub_26794((uint64_t)v7);
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = String.init<A>(describing:)(&v15, (char *)&type metadata for Any + 8);
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v17);
    }
    else
    {
      sub_26794((uint64_t)v7);
      swift_bridgeObjectRetain();
      sub_1459C((uint64_t)&v15, (uint64_t *)&unk_3BC540);
    }
    sub_1459C((uint64_t)&v18, (uint64_t *)&unk_3BC540);
    v11 = v7[4];
    v12 = v7[5];
    v20 = &type metadata for String;
    v18 = v11;
    v19 = v12;
    sub_267BC((uint64_t)&v18, (uint64_t)&v15, (uint64_t *)&unk_3BC540);
    if (v16)
    {
      sub_1F460(&v15, v17);
      sub_1FB98((uint64_t)v17, (uint64_t)&v15);
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = String.init<A>(describing:)(&v15, (char *)&type metadata for Any + 8);
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v17);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1459C((uint64_t)&v15, (uint64_t *)&unk_3BC540);
    }
    sub_267A8((uint64_t)v7);
    sub_1459C((uint64_t)&v18, (uint64_t *)&unk_3BC540);
  }
  return v21;
}

Swift::Int sub_24A6D8(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  uint64_t v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_24B7F8(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = sub_24A748(v7, a2 & 1);
  *a1 = v4;
  return result;
}

Swift::Int sub_24A748(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  Swift::Int v5;
  Swift::Int result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  Swift::Int v27;
  Swift::Int v28;
  char v29;
  Swift::Int v30;
  Swift::Int v31;
  Swift::Int v32;
  char *v33;
  char v34;
  char *v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  char v40;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  Swift::Int v102;
  uint64_t *v103;
  _QWORD *v104;
  Swift::Int v105;
  Swift::Int v106;
  char *v107;
  char *v108;
  Swift::Int v109;
  uint64_t v110;
  _BYTE *__dst;
  int v112;
  uint64_t v113;
  Swift::Int v114;
  Swift::Int v115;
  uint64_t v116;

  v3 = v2;
  v4 = a1;
  v112 = a2 & 1;
  v5 = a1[1];
  result = _minimumMergeRunLength(_:)(v5);
  if (result < v5)
  {
    if (v5 >= 0)
      v7 = v5;
    else
      v7 = v5 + 1;
    if (v5 >= -1)
    {
      v105 = result;
      if (v5 < 2)
      {
        v10 = _swiftEmptyArrayStorage;
        __dst = &_swiftEmptyArrayStorage[4];
        if (v5 != 1)
        {
          v16 = _swiftEmptyArrayStorage[2];
          v15 = (char *)_swiftEmptyArrayStorage;
          if (v16 < 2)
            goto LABEL_144;
          goto LABEL_147;
        }
        v104 = _swiftEmptyArrayStorage;
        v113 = v2;
      }
      else
      {
        v113 = v2;
        v8 = v7 >> 1;
        v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7 >> 1, &type metadata for InterfaceMode);
        *(_QWORD *)(v9 + 16) = v8;
        v104 = (_QWORD *)v9;
        __dst = (_BYTE *)(v9 + 32);
      }
      v11 = 0;
      v103 = v4;
      v12 = *v4;
      if (v112)
        v13 = 0x72616265646973;
      else
        v13 = 0x726142626174;
      if (v112)
        v14 = 0xE700000000000000;
      else
        v14 = 0xE600000000000000;
      v15 = (char *)_swiftEmptyArrayStorage;
      v106 = v5;
      v116 = *v4;
      v110 = v13;
LABEL_22:
      v17 = v11++;
      if (v11 < v5)
      {
        v18 = v17;
        v107 = v15;
        if (*(_BYTE *)(v12 + v11))
          v19 = 0x72616265646973;
        else
          v19 = 0x726142626174;
        if (*(_BYTE *)(v12 + v11))
          v20 = 0xE700000000000000;
        else
          v20 = 0xE600000000000000;
        if (v19 == v13 && v20 == v14)
          v22 = 1;
        else
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v13, v14, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v17 + 2;
        if (v17 + 2 < v5)
        {
          do
          {
            if (*(_BYTE *)(v116 + v11))
              v24 = 0x72616265646973;
            else
              v24 = 0x726142626174;
            if (*(_BYTE *)(v116 + v11))
              v25 = 0xE700000000000000;
            else
              v25 = 0xE600000000000000;
            if (v24 == v13 && v25 == v14)
            {
              swift_bridgeObjectRelease_n(v14, 2);
              if ((v22 & 1) == 0)
              {
                v15 = v107;
                v12 = v116;
                goto LABEL_63;
              }
            }
            else
            {
              v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v13, v14, 0);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (((v22 ^ v23) & 1) != 0)
                goto LABEL_53;
            }
            ++v11;
          }
          while (v5 != v11);
          v11 = v5;
        }
LABEL_53:
        v12 = v116;
        if ((v22 & 1) != 0)
        {
          v15 = v107;
          if (v11 < v18)
            goto LABEL_185;
          v17 = v18;
          if (v18 < v11)
          {
            v27 = v11 - 1;
            v28 = v18;
            do
            {
              if (v28 != v27)
              {
                if (!v116)
                  goto LABEL_188;
                v29 = *(_BYTE *)(v116 + v28);
                *(_BYTE *)(v116 + v28) = *(_BYTE *)(v116 + v27);
                *(_BYTE *)(v116 + v27) = v29;
              }
              v75 = ++v28 < v27--;
            }
            while (v75);
          }
        }
        else
        {
          v15 = v107;
LABEL_63:
          v17 = v18;
        }
      }
      if (v11 >= v5)
        goto LABEL_94;
      if (__OFSUB__(v11, v17))
        goto LABEL_181;
      if (v11 - v17 >= v105)
        goto LABEL_94;
      if (__OFADD__(v17, v105))
        goto LABEL_183;
      if (v17 + v105 >= v5)
        v30 = v5;
      else
        v30 = v17 + v105;
      if (v30 >= v17)
      {
        if (v11 == v30)
          goto LABEL_94;
        v108 = v15;
        v109 = v30;
        v102 = v17;
        v31 = v17 - v11;
        v32 = v11;
        v33 = (char *)(v12 + v11);
LABEL_75:
        v114 = v32;
        v34 = *(_BYTE *)(v12 + v32);
        v35 = v33;
        v36 = v31;
        while (1)
        {
          if ((v34 & 1) != 0)
            v37 = 0x72616265646973;
          else
            v37 = 0x726142626174;
          if ((v34 & 1) != 0)
            v38 = 0xE700000000000000;
          else
            v38 = 0xE600000000000000;
          if (v37 == v13 && v38 == v14)
          {
            swift_bridgeObjectRelease_n(v14, 2);
          }
          else
          {
            v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v13, v14, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
            {
              v12 = v116;
LABEL_74:
              v32 = v114 + 1;
              --v31;
              ++v33;
              if (v114 + 1 != v109)
                goto LABEL_75;
              v11 = v109;
              v15 = v108;
              v17 = v102;
LABEL_94:
              if (v11 < v17)
                goto LABEL_176;
              v42 = v15;
              if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) != 0)
                v15 = v42;
              else
                v15 = sub_24B480(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
              v44 = *((_QWORD *)v15 + 2);
              v43 = *((_QWORD *)v15 + 3);
              v16 = v44 + 1;
              v12 = v116;
              if (v44 >= v43 >> 1)
              {
                v15 = sub_24B480((char *)(v43 > 1), v44 + 1, 1, v15);
                v12 = v116;
              }
              *((_QWORD *)v15 + 2) = v16;
              v45 = v15 + 32;
              v46 = &v15[16 * v44 + 32];
              *(_QWORD *)v46 = v17;
              *((_QWORD *)v46 + 1) = v11;
              if (v44)
              {
                v115 = v11;
                while (1)
                {
                  v47 = v16 - 1;
                  if (v16 >= 4)
                  {
                    v52 = &v45[16 * v16];
                    v53 = *((_QWORD *)v52 - 8);
                    v54 = *((_QWORD *)v52 - 7);
                    v58 = __OFSUB__(v54, v53);
                    v55 = v54 - v53;
                    if (v58)
                      goto LABEL_165;
                    v57 = *((_QWORD *)v52 - 6);
                    v56 = *((_QWORD *)v52 - 5);
                    v58 = __OFSUB__(v56, v57);
                    v50 = v56 - v57;
                    v51 = v58;
                    if (v58)
                      goto LABEL_166;
                    v59 = v16 - 2;
                    v60 = &v45[16 * v16 - 32];
                    v62 = *(_QWORD *)v60;
                    v61 = *((_QWORD *)v60 + 1);
                    v58 = __OFSUB__(v61, v62);
                    v63 = v61 - v62;
                    if (v58)
                      goto LABEL_168;
                    v58 = __OFADD__(v50, v63);
                    v64 = v50 + v63;
                    if (v58)
                      goto LABEL_171;
                    if (v64 >= v55)
                    {
                      v82 = &v45[16 * v47];
                      v84 = *(_QWORD *)v82;
                      v83 = *((_QWORD *)v82 + 1);
                      v58 = __OFSUB__(v83, v84);
                      v85 = v83 - v84;
                      if (v58)
                        goto LABEL_175;
                      v75 = v50 < v85;
                      goto LABEL_132;
                    }
                  }
                  else
                  {
                    if (v16 != 3)
                    {
                      v76 = *((_QWORD *)v15 + 4);
                      v77 = *((_QWORD *)v15 + 5);
                      v58 = __OFSUB__(v77, v76);
                      v69 = v77 - v76;
                      v70 = v58;
                      goto LABEL_126;
                    }
                    v49 = *((_QWORD *)v15 + 4);
                    v48 = *((_QWORD *)v15 + 5);
                    v58 = __OFSUB__(v48, v49);
                    v50 = v48 - v49;
                    v51 = v58;
                  }
                  if ((v51 & 1) != 0)
                    goto LABEL_167;
                  v59 = v16 - 2;
                  v65 = &v45[16 * v16 - 32];
                  v67 = *(_QWORD *)v65;
                  v66 = *((_QWORD *)v65 + 1);
                  v68 = __OFSUB__(v66, v67);
                  v69 = v66 - v67;
                  v70 = v68;
                  if (v68)
                    goto LABEL_170;
                  v71 = &v45[16 * v47];
                  v73 = *(_QWORD *)v71;
                  v72 = *((_QWORD *)v71 + 1);
                  v58 = __OFSUB__(v72, v73);
                  v74 = v72 - v73;
                  if (v58)
                    goto LABEL_173;
                  if (__OFADD__(v69, v74))
                    goto LABEL_174;
                  if (v69 + v74 >= v50)
                  {
                    v75 = v50 < v74;
LABEL_132:
                    if (v75)
                      v47 = v59;
                    goto LABEL_134;
                  }
LABEL_126:
                  if ((v70 & 1) != 0)
                    goto LABEL_169;
                  v78 = &v45[16 * v47];
                  v80 = *(_QWORD *)v78;
                  v79 = *((_QWORD *)v78 + 1);
                  v58 = __OFSUB__(v79, v80);
                  v81 = v79 - v80;
                  if (v58)
                    goto LABEL_172;
                  if (v81 < v69)
                    goto LABEL_21;
LABEL_134:
                  v86 = v47 - 1;
                  if (v47 - 1 >= v16)
                  {
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
LABEL_180:
                    __break(1u);
LABEL_181:
                    __break(1u);
LABEL_182:
                    __break(1u);
LABEL_183:
                    __break(1u);
                    goto LABEL_184;
                  }
                  if (!v12)
                    goto LABEL_187;
                  v87 = v15;
                  v88 = &v45[16 * v86];
                  v89 = *(_QWORD *)v88;
                  v90 = v45;
                  v91 = v47;
                  v92 = &v45[16 * v47];
                  v93 = *((_QWORD *)v92 + 1);
                  sub_24B0D0((_BYTE *)(v12 + *(_QWORD *)v88), (_BYTE *)(v12 + *(_QWORD *)v92), v12 + v93, __dst, v112);
                  if (v113)
                  {
                    v10 = v104;
                    goto LABEL_144;
                  }
                  if (v93 < v89)
                    goto LABEL_162;
                  if (v91 > *((_QWORD *)v87 + 2))
                    goto LABEL_163;
                  *(_QWORD *)v88 = v89;
                  *(_QWORD *)&v90[16 * v86 + 8] = v93;
                  v94 = *((_QWORD *)v87 + 2);
                  if (v91 >= v94)
                    goto LABEL_164;
                  v16 = v94 - 1;
                  memmove(v92, v92 + 16, 16 * (v94 - 1 - v91));
                  v45 = v90;
                  v15 = v87;
                  *((_QWORD *)v87 + 2) = v94 - 1;
                  v12 = v116;
                  v11 = v115;
                  v13 = v110;
                  if (v94 <= 2)
                    goto LABEL_21;
                }
              }
              v16 = 1;
LABEL_21:
              v5 = v106;
              if (v11 >= v106)
              {
                v3 = v113;
                v4 = v103;
                v10 = v104;
                if (v16 < 2)
                {
LABEL_144:
                  swift_bridgeObjectRelease();
                  v10[2] = 0;
                  return swift_bridgeObjectRelease();
                }
LABEL_147:
                v95 = *v4;
                while (1)
                {
                  v96 = v16 - 2;
                  if (v16 < 2)
                    goto LABEL_177;
                  if (!v95)
                    goto LABEL_189;
                  v97 = v15;
                  v98 = *(_QWORD *)&v15[16 * v96 + 32];
                  v99 = *(_QWORD *)&v15[16 * v16 + 24];
                  sub_24B0D0((_BYTE *)(v95 + v98), (_BYTE *)(v95 + *(_QWORD *)&v15[16 * v16 + 16]), v95 + v99, __dst, v112);
                  if (v3)
                    goto LABEL_144;
                  if (v99 < v98)
                    goto LABEL_178;
                  if ((swift_isUniquelyReferenced_nonNull_native(v97) & 1) == 0)
                    v97 = sub_24B7BC((uint64_t)v97);
                  if (v96 >= *((_QWORD *)v97 + 2))
                    goto LABEL_179;
                  v100 = &v97[16 * v96 + 32];
                  *(_QWORD *)v100 = v98;
                  *((_QWORD *)v100 + 1) = v99;
                  v101 = *((_QWORD *)v97 + 2);
                  if (v16 > v101)
                    goto LABEL_180;
                  memmove(&v97[16 * v16 + 16], &v97[16 * v16 + 32], 16 * (v101 - v16));
                  v15 = v97;
                  *((_QWORD *)v97 + 2) = v101 - 1;
                  v16 = v101 - 1;
                  if (v101 <= 2)
                    goto LABEL_144;
                }
              }
              goto LABEL_22;
            }
          }
          v12 = v116;
          if (!v116)
            goto LABEL_186;
          v34 = *v35;
          *v35 = *(v35 - 1);
          *--v35 = v34;
          if (__CFADD__(v36++, 1))
            goto LABEL_74;
        }
      }
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (v5 < 0)
    goto LABEL_182;
  if (v5)
    return sub_24AF78(0, v5, 1, v4, v112);
  return result;
}

uint64_t sub_24AF78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;

  if (a3 != a2)
  {
    v5 = *a4;
    if ((a5 & 1) != 0)
      v6 = 0x72616265646973;
    else
      v6 = 0x726142626174;
    if ((a5 & 1) != 0)
      v7 = 0xE700000000000000;
    else
      v7 = 0xE600000000000000;
    v8 = result - a3;
    v9 = (_BYTE *)(v5 + a3);
LABEL_11:
    v19 = a3;
    v10 = *(_BYTE *)(v5 + a3);
    v17 = v9;
    v18 = v8;
    while (1)
    {
      v11 = (v10 & 1) != 0 ? 0x72616265646973 : 0x726142626174;
      v12 = (v10 & 1) != 0 ? 0xE700000000000000 : 0xE600000000000000;
      if (v11 == v6 && v12 == v7)
      {
        result = swift_bridgeObjectRelease_n(v7, 2);
      }
      else
      {
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v6, v7, 0);
        swift_bridgeObjectRelease(v12);
        result = swift_bridgeObjectRelease(v7);
        if ((v14 & 1) == 0)
          goto LABEL_10;
      }
      if (!v5)
        break;
      v10 = *v9;
      *v9 = *(v9 - 1);
      *--v9 = v10;
      if (__CFADD__(v8++, 1))
      {
LABEL_10:
        a3 = v19 + 1;
        v8 = v18 - 1;
        v9 = v17 + 1;
        if (v19 + 1 == a2)
          return result;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24B0D0(_BYTE *__src, _BYTE *a2, unint64_t a3, _BYTE *__dst, char a5)
{
  _BYTE *v6;
  _BYTE *v8;
  _BYTE *v9;
  size_t v10;
  unint64_t v11;
  _BYTE *v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  unint64_t v28;
  char v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t result;
  uint64_t v34;
  _BYTE *v35;
  const void *v36;
  _BYTE *v37;

  v37 = __src;
  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a3 - (_QWORD)a2;
  v36 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_77;
    if (__dst != a2 || a3 <= (unint64_t)__dst)
      memmove(__dst, a2, a3 - (_QWORD)a2);
    v21 = &v6[v11];
    v35 = &v6[v11];
    v37 = v8;
    if (v9 >= v8 || (_BYTE *)a3 == v8)
    {
LABEL_76:
      sub_24B72C((void **)&v37, &v36, &v35);
      return 1;
    }
    if ((a5 & 1) != 0)
      v22 = 0x72616265646973;
    else
      v22 = 0x726142626174;
    if ((a5 & 1) != 0)
      v23 = 0xE700000000000000;
    else
      v23 = 0xE600000000000000;
    v24 = (_BYTE *)(a3 - 1);
    v34 = v22;
    while (1)
    {
      v25 = v6;
      v26 = v24 + 1;
      v27 = *(v21 - 1) ? 0x72616265646973 : 0x726142626174;
      v28 = *(v21 - 1) ? 0xE700000000000000 : 0xE600000000000000;
      if (v27 == v22 && v28 == v23)
        break;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v22, v23, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        goto LABEL_67;
      v31 = v21 - 1;
      v35 = v21 - 1;
      if (v26 >= v21 && v24 < v21)
      {
        v22 = v34;
        if (v26 != v21)
          *v24 = *v31;
        v32 = v8;
        --v21;
        v6 = v25;
        goto LABEL_72;
      }
      *v24 = *v31;
      v32 = v8;
      --v21;
LABEL_71:
      v6 = v25;
      v22 = v34;
LABEL_72:
      if (v21 > v6)
      {
        --v24;
        v8 = v32;
        if (v32 > v9)
          continue;
      }
      goto LABEL_76;
    }
    swift_bridgeObjectRelease_n(v23, 2);
LABEL_67:
    v32 = v8 - 1;
    if (v26 != v8 || v24 >= v8)
      *v24 = *v32;
    v37 = v8 - 1;
    goto LABEL_71;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v10);
    v12 = &v6[v10];
    v35 = &v6[v10];
    if (v8 != v9 && (unint64_t)v8 < a3)
    {
      v13 = (a5 & 1) == 0;
      if ((a5 & 1) != 0)
        v14 = 0x72616265646973;
      else
        v14 = 0x726142626174;
      if (v13)
        v15 = 0xE600000000000000;
      else
        v15 = 0xE700000000000000;
      while (1)
      {
        v16 = *v8 ? 0x72616265646973 : 0x726142626174;
        v17 = *v8 ? 0xE700000000000000 : 0xE600000000000000;
        if (v16 == v14 && v17 == v15)
          break;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v14, v15, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) != 0)
          goto LABEL_30;
        if (v9 != v6 || v9 >= v6 + 1)
          *v9 = *v6;
        v36 = v6 + 1;
        v20 = v8;
        ++v6;
LABEL_34:
        ++v9;
        if (v6 < v12)
        {
          v8 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v37 = v9;
        goto LABEL_76;
      }
      swift_bridgeObjectRelease_n(v15, 2);
LABEL_30:
      v20 = v8 + 1;
      if (v9 < v8 || v9 >= v20 || v9 != v8)
        *v9 = *v8;
      goto LABEL_34;
    }
    goto LABEL_76;
  }
LABEL_77:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_24B480(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3CD8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_24B578(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_24B620(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for TabMenu.Item(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  v10 = v8 / v7;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v10 * v7)
    return swift_arrayInitWithTakeFrontToBack(v3, v4, v10, result);
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront(v3);
  return result;
}

char *sub_24B72C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_24B7BC(uint64_t a1)
{
  return sub_24B480(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24B7D0(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_24B7E4(_QWORD *a1)
{
  return sub_181798(0, a1[2], 0, a1);
}

uint64_t sub_24B7F8(uint64_t a1)
{
  return sub_181C08(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s8ShelfKit7TabMenuV10ActionItemV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v24;
  char v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;

  v4 = type metadata accessor for TabMenu.ActionItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v33 - v15;
  v17 = static Glyph.== infix(_:_:)(a1, a2, v14);
  sub_14510(a1, (uint64_t)v16, type metadata accessor for TabMenu.ActionItem);
  sub_14510(a2, (uint64_t)v12, type metadata accessor for TabMenu.ActionItem);
  if ((v17 & 1) == 0)
  {
    sub_145D8((uint64_t)v16, type metadata accessor for TabMenu.ActionItem);
    sub_145D8((uint64_t)v12, type metadata accessor for TabMenu.ActionItem);
    sub_14510(a1, (uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
    sub_14510(a2, (uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
    goto LABEL_9;
  }
  v18 = *(int *)(v4 + 20);
  v19 = *(_QWORD *)&v16[v18];
  v20 = *(_QWORD *)&v16[v18 + 8];
  v21 = &v12[v18];
  v22 = *((_QWORD *)v21 + 1);
  if (v19 == *(_QWORD *)v21 && v20 == v22)
  {
    sub_145D8((uint64_t)v16, type metadata accessor for TabMenu.ActionItem);
    sub_145D8((uint64_t)v12, type metadata accessor for TabMenu.ActionItem);
    sub_14510(a1, (uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
    sub_14510(a2, (uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
    goto LABEL_13;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, *(_QWORD *)v21, v22, 0);
  sub_145D8((uint64_t)v16, type metadata accessor for TabMenu.ActionItem);
  sub_145D8((uint64_t)v12, type metadata accessor for TabMenu.ActionItem);
  sub_14510(a1, (uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
  sub_14510(a2, (uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
  if ((v24 & 1) == 0)
  {
LABEL_9:
    sub_145D8((uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
    sub_145D8((uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
LABEL_10:
    v25 = 0;
    return v25 & 1;
  }
LABEL_13:
  v27 = *(int *)(v4 + 28);
  v28 = &v9[v27];
  v29 = *(_QWORD *)&v9[v27 + 8];
  v30 = &v6[v27];
  v31 = *((_QWORD *)v30 + 1);
  if (!v29)
  {
    swift_bridgeObjectRetain();
    sub_145D8((uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
    sub_145D8((uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
    if (!v31)
    {
      v25 = 1;
      return v25 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (!v31)
  {
    swift_bridgeObjectRetain();
    sub_145D8((uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
    sub_145D8((uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (*(_QWORD *)v28 == *(_QWORD *)v30 && v29 == v31)
    v25 = 1;
  else
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v28, v29, *(_QWORD *)v30, *((_QWORD *)v30 + 1), 0);
  swift_bridgeObjectRetain();
  sub_145D8((uint64_t)v6, type metadata accessor for TabMenu.ActionItem);
  sub_145D8((uint64_t)v9, type metadata accessor for TabMenu.ActionItem);
  swift_bridgeObjectRelease();
  return v25 & 1;
}

uint64_t _s8ShelfKit7TabMenuV4ItemV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  char v44;
  BOOL v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  char v63;
  char v64;
  char v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = type metadata accessor for TabMenu.Item(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v69 = (uint64_t)&v67 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - v11;
  __chkstk_darwin(v13);
  v68 = (uint64_t)&v67 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v67 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v67 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v67 - v25;
  __chkstk_darwin(v27);
  v32 = (char *)&v67 - v29;
  v34 = v33;
  v35 = v33[6];
  v36 = a1;
  v37 = *(_QWORD *)(a1 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 8);
  v73 = v39;
  v74 = a2;
  v40 = (uint64_t *)(a2 + v35);
  v41 = *v40;
  v42 = v40[1];
  v43 = v37 == *v40 && v38 == v42;
  v71 = v31;
  v72 = v30;
  v70 = v28;
  if (v43)
  {
    sub_14510(a1, (uint64_t)&v67 - v29, type metadata accessor for TabMenu.Item);
    sub_14510(v74, (uint64_t)v26, type metadata accessor for TabMenu.Item);
  }
  else
  {
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v41, v42, 0);
    sub_14510(v36, (uint64_t)v32, type metadata accessor for TabMenu.Item);
    sub_14510(v74, (uint64_t)v26, type metadata accessor for TabMenu.Item);
    if ((v44 & 1) == 0)
    {
      sub_145D8((uint64_t)v32, type metadata accessor for TabMenu.Item);
      sub_145D8((uint64_t)v26, type metadata accessor for TabMenu.Item);
      sub_14510(v36, (uint64_t)v23, type metadata accessor for TabMenu.Item);
      sub_14510(v74, (uint64_t)v20, type metadata accessor for TabMenu.Item);
LABEL_16:
      sub_145D8((uint64_t)v20, type metadata accessor for TabMenu.Item);
      sub_145D8((uint64_t)v23, type metadata accessor for TabMenu.Item);
      sub_14510(v36, (uint64_t)v17, type metadata accessor for TabMenu.Item);
      v49 = v68;
      sub_14510(v74, v68, type metadata accessor for TabMenu.Item);
      v51 = v70;
      v50 = v71;
LABEL_17:
      sub_145D8(v49, type metadata accessor for TabMenu.Item);
      sub_145D8((uint64_t)v17, type metadata accessor for TabMenu.Item);
      sub_14510(v36, (uint64_t)v12, type metadata accessor for TabMenu.Item);
      v55 = v69;
      sub_14510(v74, v69, type metadata accessor for TabMenu.Item);
      v57 = v72;
      v56 = v73;
LABEL_18:
      sub_145D8(v55, type metadata accessor for TabMenu.Item);
      sub_145D8((uint64_t)v12, type metadata accessor for TabMenu.Item);
      sub_14510(v36, v51, type metadata accessor for TabMenu.Item);
      sub_14510(v74, v50, type metadata accessor for TabMenu.Item);
      goto LABEL_19;
    }
  }
  v45 = _s8ShelfKit13NavigationTabO2eeoiySbAC_ACtFZ_0(*(_QWORD **)&v32[v34[7]], *(int **)&v26[v34[7]]);
  sub_145D8((uint64_t)v32, type metadata accessor for TabMenu.Item);
  sub_145D8((uint64_t)v26, type metadata accessor for TabMenu.Item);
  sub_14510(v36, (uint64_t)v23, type metadata accessor for TabMenu.Item);
  sub_14510(v74, (uint64_t)v20, type metadata accessor for TabMenu.Item);
  if (!v45)
    goto LABEL_16;
  v46 = v23[v34[8]];
  sub_145D8((uint64_t)v23, type metadata accessor for TabMenu.Item);
  v47 = v20[v34[8]];
  sub_145D8((uint64_t)v20, type metadata accessor for TabMenu.Item);
  sub_14510(v36, (uint64_t)v17, type metadata accessor for TabMenu.Item);
  v48 = v68;
  sub_14510(v74, v68, type metadata accessor for TabMenu.Item);
  v43 = v46 == v47;
  v49 = v48;
  v51 = v70;
  v50 = v71;
  if (!v43)
    goto LABEL_17;
  v52 = v17[v34[9]];
  sub_145D8((uint64_t)v17, type metadata accessor for TabMenu.Item);
  v53 = *(unsigned __int8 *)(v48 + v34[9]);
  sub_145D8(v48, type metadata accessor for TabMenu.Item);
  sub_14510(v36, (uint64_t)v12, type metadata accessor for TabMenu.Item);
  v54 = v69;
  sub_14510(v74, v69, type metadata accessor for TabMenu.Item);
  v43 = v52 == v53;
  v55 = v54;
  v57 = v72;
  v56 = v73;
  if (!v43)
    goto LABEL_18;
  v58 = v12[v34[10]];
  sub_145D8((uint64_t)v12, type metadata accessor for TabMenu.Item);
  v59 = v55;
  v60 = *(unsigned __int8 *)(v55 + v34[10]);
  sub_145D8(v59, type metadata accessor for TabMenu.Item);
  sub_14510(v36, v51, type metadata accessor for TabMenu.Item);
  sub_14510(v74, v50, type metadata accessor for TabMenu.Item);
  if (v58 != v60)
  {
LABEL_19:
    sub_145D8(v50, type metadata accessor for TabMenu.Item);
    sub_145D8(v51, type metadata accessor for TabMenu.Item);
    sub_14510(v36, v57, type metadata accessor for TabMenu.Item);
    sub_14510(v74, v56, type metadata accessor for TabMenu.Item);
    goto LABEL_20;
  }
  v61 = *(unsigned __int8 *)(v51 + v34[11]);
  sub_145D8(v51, type metadata accessor for TabMenu.Item);
  v62 = *(unsigned __int8 *)(v50 + v34[11]);
  sub_145D8(v50, type metadata accessor for TabMenu.Item);
  sub_14510(v36, v57, type metadata accessor for TabMenu.Item);
  sub_14510(v74, v56, type metadata accessor for TabMenu.Item);
  if (v61 != v62)
  {
LABEL_20:
    sub_145D8(v56, type metadata accessor for TabMenu.Item);
    sub_145D8(v57, type metadata accessor for TabMenu.Item);
    v65 = 0;
    return v65 & 1;
  }
  v63 = *(_BYTE *)(v57 + v34[12]);
  sub_145D8(v57, type metadata accessor for TabMenu.Item);
  v64 = *(_BYTE *)(v56 + v34[12]);
  sub_145D8(v56, type metadata accessor for TabMenu.Item);
  v65 = v63 ^ v64 ^ 1;
  return v65 & 1;
}

uint64_t sub_24C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TabMenu.ActionItem(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C3C98, (uint64_t)&nominal type descriptor for TabMenu.ActionItem);
}

unint64_t sub_24C134()
{
  unint64_t result;

  result = qword_3C3B38;
  if (!qword_3C3B38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InterfaceMode);
    atomic_store(result, (unint64_t *)&qword_3C3B38);
  }
  return result;
}

uint64_t sub_24C178()
{
  return sub_24C2F0(&qword_3C3B40, &qword_3C3B48);
}

unint64_t sub_24C1A0()
{
  unint64_t result;

  result = qword_3C3B50;
  if (!qword_3C3B50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabMenu.Section);
    atomic_store(result, (unint64_t *)&qword_3C3B50);
  }
  return result;
}

unint64_t sub_24C1E8()
{
  unint64_t result;

  result = qword_3C3B58;
  if (!qword_3C3B58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabMenu.Item.GlyphTint);
    atomic_store(result, (unint64_t *)&qword_3C3B58);
  }
  return result;
}

uint64_t sub_24C22C()
{
  return sub_F1C0(&qword_3C1B08, (void (*)(uint64_t))type metadata accessor for TabMenu.Item, (uint64_t)&protocol conformance descriptor for TabMenu.Item);
}

uint64_t sub_24C258()
{
  return sub_F1C0(&qword_3C3B60, (void (*)(uint64_t))type metadata accessor for TabMenu.ActionItem, (uint64_t)&protocol conformance descriptor for TabMenu.ActionItem);
}

unint64_t sub_24C288()
{
  unint64_t result;

  result = qword_3C3B68;
  if (!qword_3C3B68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabMenu.Group);
    atomic_store(result, (unint64_t *)&qword_3C3B68);
  }
  return result;
}

uint64_t sub_24C2CC()
{
  return sub_24C2F0(&qword_3C3B70, &qword_3C3B78);
}

uint64_t sub_24C2F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A]);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for InterfaceMode()
{
  return &type metadata for InterfaceMode;
}

ValueMetadata *type metadata accessor for TabMenu()
{
  return &type metadata for TabMenu;
}

uint64_t initializeBufferWithCopyOfBuffer for TabMenu.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for TabMenu.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for TabMenu.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for TabMenu.Section()
{
  return &type metadata for TabMenu.Section;
}

char *initializeBufferWithCopyOfBuffer for TabMenu.Item(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Glyph(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = &a1[v15];
    v18 = &a2[v15];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v20 = *(_QWORD *)&a2[v16];
    swift_bridgeObjectRetain();
    if ((unint64_t)(v20 - 1) >= 0x11)
      swift_retain();
    *(_QWORD *)&a1[v16] = v20;
    v21 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    a1[v21] = a2[v21];
    v22 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v22] = a2[v22];
    a1[a3[12]] = a2[a3[12]];
  }
  return a1;
}

uint64_t destroy for TabMenu.Item(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  result = *(_QWORD *)(a1 + a2[7]);
  if ((unint64_t)(result - 1) >= 0x11)
    return swift_release(result);
  return result;
}

char *initializeWithCopy for TabMenu.Item(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  v18 = *(_QWORD *)&a2[v14];
  swift_bridgeObjectRetain();
  if ((unint64_t)(v18 - 1) >= 0x11)
    swift_retain();
  *(_QWORD *)&a1[v14] = v18;
  v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v19] = a2[v19];
  v20 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v20] = a2[v20];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t assignWithCopy for TabMenu.Item(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = *(_QWORD *)(a1 + v19);
  v22 = *(_QWORD *)(a2 + v19);
  v23 = v22 - 1;
  if ((unint64_t)(v21 - 1) >= 0x11)
  {
    if (v23 >= 0x11)
    {
      *v20 = v22;
      swift_retain();
      swift_release(v21);
    }
    else
    {
      sub_1459C(a1 + v19, &qword_3C3B80);
      *v20 = *(_QWORD *)(a2 + v19);
    }
  }
  else
  {
    *v20 = v22;
    if (v23 >= 0x11)
      swift_retain();
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

char *initializeWithTake for TabMenu.Item(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v14] = a2[v14];
  v15 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v15] = a2[v15];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *assignWithTake for TabMenu.Item(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v20 = *v18;
  v19 = v18[1];
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = *(_QWORD *)&a1[v21];
  v24 = *(_QWORD *)&a2[v21];
  if ((unint64_t)(v23 - 1) >= 0x11)
  {
    if ((unint64_t)(v24 - 1) >= 0x11)
    {
      *(_QWORD *)v22 = v24;
      swift_release(v23);
      goto LABEL_12;
    }
    sub_1459C((uint64_t)&a1[v21], &qword_3C3B80);
    v24 = *(_QWORD *)&a2[v21];
  }
  *(_QWORD *)v22 = v24;
LABEL_12:
  v25 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v25] = a2[v25];
  v26 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v26] = a2[v26];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TabMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24CC4C);
}

uint64_t sub_24CC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TabMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24CD08);
}

uint64_t sub_24CD08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for Glyph(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC5B0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_24CDB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v2 = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_24CE5C(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_302018;
      v6[3] = &unk_302030;
      v6[4] = &unk_302048;
      v6[5] = &unk_302048;
      v6[6] = &unk_302048;
      v6[7] = &unk_302048;
      v6[8] = &unk_302048;
      swift_initStructMetadata(a1, 256, 9, v6, a1 + 16);
    }
  }
}

void sub_24CE5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3C3BF0)
  {
    v2 = type metadata accessor for Glyph(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3C3BF0);
  }
}

uint64_t _s8ShelfKit13InterfaceModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24CEFC + 4 * byte_301BF0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24CF30 + 4 * byte_301BEB[v4]))();
}

uint64_t sub_24CF30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24CF38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24CF40);
  return result;
}

uint64_t sub_24CF4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24CF54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24CF58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24CF60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabMenu.Item.GlyphTint()
{
  return &type metadata for TabMenu.Item.GlyphTint;
}

uint64_t *initializeBufferWithCopyOfBuffer for TabMenu.ActionItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for Glyph(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v13;
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain(v12);
    swift_retain(v13);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t destroy for TabMenu.ActionItem(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t initializeWithCopy for TabMenu.ActionItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v12;
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t assignWithCopy for TabMenu.ActionItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = *(_QWORD *)(a2 + v12);
  v14 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t initializeWithTake for TabMenu.ActionItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for TabMenu.ActionItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Glyph(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = v16[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabMenu.ActionItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_24D310);
}

uint64_t sub_24D310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TabMenu.ActionItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_24D39C);
}

uint64_t sub_24D39C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Glyph(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_24D418(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_302018;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_302078;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabMenu.Group(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24D4EC + 4 * byte_301BFA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24D520 + 4 * byte_301BF5[v4]))();
}

uint64_t sub_24D520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24D528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24D530);
  return result;
}

uint64_t sub_24D53C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24D544);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24D548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24D550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabMenu.Group()
{
  return &type metadata for TabMenu.Group;
}

unint64_t static SourceProviding.presentationSourceId.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for SourceProviding()
{
  return &type metadata for SourceProviding;
}

Swift::Void __swiftcall ChannelListProvider.loadPageContent()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  uint64_t v16;
  _QWORD *boxed_opaque_existential_2Tm;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[5];

  v1 = v0;
  v54 = *v0;
  v2 = v54;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3CE0);
  v4 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  v57 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3CE8);
  v8 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  v59 = v8;
  __chkstk_darwin(v7);
  v55 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0[3];
  ObjectType = swift_getObjectType();
  v15 = (void *)objc_opt_self(MTChannel);
  v16 = type metadata accessor for Podcasts(0);
  v61[3] = v16;
  v61[4] = sub_24DB34();
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v61);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.ponderosa(_:), v16);
  LOBYTE(v16) = isFeatureEnabled(_:)(v61);
  __swift_destroy_boxed_opaque_existential_1(v61);
  v18 = objc_msgSend(v15, "sortDescriptorsForLibraryChannelsPage:", v16 & 1);
  v19 = sub_24DB7C();
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 232))(v20, 50, ObjectType, v13);
  swift_bridgeObjectRelease();
  v61[0] = v21;
  v22 = swift_allocObject(&unk_38C1A8, 24, 7);
  *(_QWORD *)(v22 + 16) = v2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3CF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E60);
  v25 = sub_32914(&qword_3C3CF8, &qword_3C3CF0, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v26 = PaginatedPublisher.paginatedMap<A>(_:)(sub_24DC34, v22, v23, v24, v25);
  swift_release(v22);
  swift_release(v61[0]);
  v61[0] = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4EA8);
  v28 = swift_allocObject(v27, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  *(_OWORD *)(v28 + 16) = xmmword_2EA0D0;
  v29 = type metadata accessor for ModernShelf(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 1, 2, v29);
  FRPOutput.init(content:hasMore:totalCount:)(v12, 1, 0, v10);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2600);
  v31 = sub_32914((unint64_t *)&qword_3B25F8, &qword_3B2600, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v32 = PaginatedPublisher.paginatedPrepend(_:)(v28, v30, v31);
  swift_release(v26);
  swift_bridgeObjectRelease();
  v61[0] = v32;
  v33 = v1[7];
  v34 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v33);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
  v60 = v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3628);
  v37 = sub_32914(&qword_3B4C18, &qword_3B2600, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v38 = sub_32914(&qword_3B3638, &qword_3B3628, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.combineLatest<A>(_:)(&v60, v30, v36, v37, v38);
  swift_release(v35);
  v39 = swift_allocObject(&unk_38C1D0, 24, 7);
  *(_QWORD *)(v39 + 16) = v54;
  v40 = swift_allocObject(&unk_38C1F8, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_24E038;
  *(_QWORD *)(v40 + 24) = v39;
  v41 = type metadata accessor for PageContent(0);
  v42 = sub_32914(&qword_3C3D00, &qword_3C3CE0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v44 = v55;
  v43 = v56;
  Publisher.map<A>(_:)(sub_24E65C, v40, v56, v41, v42);
  swift_release(v40);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v6, v43);
  v45 = v1[9];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  v47 = sub_32914(&qword_3C3D08, &qword_3C3CE8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v48 = sub_32914((unint64_t *)&unk_3B87F0, &qword_3B27B0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v49 = v58;
  v50 = Publisher.subscribe<A>(_:)(v45, v58, v46, v47, v48);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v49);
  swift_beginAccess(v1 + 11, v61, 33, 0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v52 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v1 + 11, v51, v52);
  swift_endAccess(v61);
  swift_release(v50);
  swift_beginAccess(v1 + 10, v61, 1, 0);
  v53 = v1[10];
  v1[10] = v32;
  swift_release(v53);
}

unint64_t sub_24DB34()
{
  unint64_t result;

  result = qword_3B33B8;
  if (!qword_3B33B8)
  {
    type metadata accessor for Podcasts(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Podcasts);
    atomic_store(result, (unint64_t *)&qword_3B33B8);
  }
  return result;
}

unint64_t sub_24DB7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BE8C0;
  if (!qword_3BE8C0)
  {
    v1 = objc_opt_self(NSSortDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3BE8C0);
  }
  return result;
}

uint64_t sub_24DBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v5[2] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3DD8);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  return FRPOutput.map<A>(_:)(sub_24E754, v5, v2, v3);
}

uint64_t sub_24DC24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_24DC34(uint64_t a1)
{
  uint64_t v1;

  return sub_24DBB8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24DC3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v33 = a2;
  v3 = (int *)type metadata accessor for ModernShelf(0);
  v32 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = type metadata accessor for Header(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v31 = sub_245CF4(v15);
  v17 = type metadata accessor for URL(0);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v19 = v18(v11, 1, 1, v17);
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  v20 = static MetricsTargetType.swoosh.getter(v19);
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)(0x736C656E6E616843, 0xE800000000000000, 0, 0, 0xD000000000000021, 0x8000000000314970, v20, v21, 0, 0);
  swift_bridgeObjectRelease();
  v22 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  v23 = v3[8];
  *((_BYTE *)v5 + v23) = 3;
  v24 = (uint64_t)v5 + v3[9];
  v18((char *)v24, 1, 1, v17);
  *v5 = 0xD000000000000021;
  v5[1] = 0x8000000000314970;
  sub_15BD4((uint64_t)v14, (uint64_t)v5 + v3[5], &qword_3B0C38);
  v25 = (char *)v5 + v3[6];
  *(_WORD *)v25 = 42;
  *((_WORD *)v25 + 3) = 256;
  *(_DWORD *)(v25 + 2) = 0;
  *((_QWORD *)v25 + 1) = 1;
  *(_QWORD *)((char *)v5 + v3[7]) = v31;
  sub_15B8C((uint64_t)v11, v24);
  *((_BYTE *)v5 + v3[10]) = 1;
  *((_BYTE *)v5 + v3[11]) = 0;
  v26 = (uint64_t)v5 + v3[12];
  if (*((_QWORD *)&v35 + 1))
  {
    sub_F4D8(&v34, v26);
  }
  else
  {
    v27 = (unint64_t)v35;
    *(_OWORD *)v26 = v34;
    *(_OWORD *)(v26 + 16) = v27;
    *(_QWORD *)(v26 + 32) = v36;
  }
  sub_15BD4((uint64_t)v8, (uint64_t)v5 + v3[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)v5 + v23) = 3;
  v28 = v33;
  sub_15C18((uint64_t)v5, v33);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v32 + 56))(v28, 0, 2, v3);
}

uint64_t sub_24DF64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E60);
  FRPOutput.content.getter(v7);
  v8 = FRPOutput.hasMore.getter(v7);
  sub_24E040(v8 & 1, a1, a2);
  return sub_1459C((uint64_t)v6, &qword_3B35D0);
}

uint64_t sub_24E028()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_24E038@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_24DF64(a1, a2);
}

uint64_t sub_24E040@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  LODWORD(v65) = a1;
  v5 = type metadata accessor for ScalarDictionary(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  v6 = __chkstk_darwin(v5);
  v69 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v67 = (char *)&v64 - v8;
  v9 = type metadata accessor for PageMetrics(0);
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  __chkstk_darwin(v9);
  v73 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for PageID(0);
  v66 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v76 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v68);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ModernShelf(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (unint64_t *)((char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v23 = (char *)&v64 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  if ((Loadable.notLoaded.getter(v24) & 1) != 0)
  {
    *(_BYTE *)a3 = 1;
    v25 = type metadata accessor for PageContent(0);
    return swift_storeEnumTagMultiPayload(a3, v25, 0);
  }
  Loadable.item.getter(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1459C((uint64_t)v16, &qword_3B8660);
LABEL_11:
    *(_QWORD *)a3 = a2;
    v37 = type metadata accessor for PageContent(0);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    return swift_storeEnumTagMultiPayload(a3, v37, 2);
  }
  sub_15C18((uint64_t)v16, (uint64_t)v23);
  v78 = *(_QWORD *)&v23[*(int *)(v17 + 28)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E68);
  v28 = sub_32914(&qword_3B4E70, &qword_3B4E68, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v27, v28) & 1) == 0)
  {
    sub_145D8((uint64_t)v23, type metadata accessor for ModernShelf);
    goto LABEL_11;
  }
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A48);
  v30 = *(_QWORD *)(v18 + 72);
  v31 = *(unsigned __int8 *)(v18 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v29, v32 + v30, v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_2EA0D0;
  v34 = sub_14510((uint64_t)v23, v33 + v32, type metadata accessor for ModernShelf);
  if ((v65 & 1) != 0)
  {
    static ModernShelf.loadingShelf(id:)(0x53676E6964616F6CLL, 0xEE004449666C6568, v21);
    v36 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v33 + 24);
    if (v36 >= v35 >> 1)
      v33 = sub_10CD4(v35 > 1, v36 + 1, 1, v33);
    v65 = v33;
    *(_QWORD *)(v33 + 16) = v36 + 1;
    v34 = sub_15C18((uint64_t)v21, v33 + v32 + v36 * v30);
  }
  else
  {
    v65 = v33;
  }
  v38 = static MetricsPageType.room.getter(v34);
  v40 = v39;
  v41 = ((uint64_t (*)(void))static MetricsPageID.channels.getter)();
  v43 = v42;
  v78 = v38;
  v79 = v40;
  v44._countAndFlagsBits = 95;
  v44._object = (void *)0xE100000000000000;
  String.append(_:)(v44);
  v45._countAndFlagsBits = v41;
  v45._object = v43;
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  v46 = PageID.init(with:)(v78, v79);
  v47 = static MetricsPageID.channels.getter(v46);
  v49 = v48;
  v50 = static MetricsPageType.room.getter(v47);
  v78 = v47;
  v79 = v49;
  v80 = v50;
  v81 = v51;
  v82 = 0;
  v83 = 0;
  v84 = 0;
  v52 = v67;
  ScalarDictionary.init()(v50);
  v64 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
  v54 = type metadata accessor for PageMetrics.Instruction(0);
  v55 = swift_allocObject(v53, ((*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v54 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) | 7);
  *(_OWORD *)(v55 + 16) = xmmword_2EA080;
  v77 = 0;
  PageMetrics.Instruction.init(eventType:)(&v77);
  v77 = 1;
  PageMetrics.Instruction.init(eventType:)(&v77);
  v56 = MetricsPageFields.metricsFields.getter();
  v58 = v71;
  v57 = v72;
  v59 = v69;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v52, v72);
  v60 = v73;
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v55, v56, v59, v64);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v13, v76, v70);
  v61 = v68;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v13[*(int *)(v68 + 20)], v60, v75);
  *(_QWORD *)&v13[*(int *)(v61 + 24)] = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3B89B0);
  v62 = sub_14510((uint64_t)v13, a3, type metadata accessor for ModernPage);
  static PageRenderContentTypes.unspecified.getter(v62);
  v63 = type metadata accessor for PageContent(0);
  swift_storeEnumTagMultiPayload(a3, v63, 3);
  sub_145D8((uint64_t)v13, type metadata accessor for ModernPage);
  return sub_145D8((uint64_t)v23, type metadata accessor for ModernShelf);
}

uint64_t sub_24E638()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_24E65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3DD0);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

_QWORD *ChannelListProvider.deinit()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 4);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChannelListProvider.__deallocating_deinit()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 4);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for ChannelListProvider()
{
  return objc_opt_self(_TtC8ShelfKit19ChannelListProvider);
}

uint64_t method lookup function for ChannelListProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ChannelListProvider);
}

uint64_t sub_24E754@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24DC3C(a1, a2);
}

uint64_t sub_24E75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13[3];

  v2 = v1;
  v4 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = 0;
  swift_storeEnumTagMultiPayload(v6, v7, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  *(_QWORD *)(v2 + 72) = CurrentValueSubject.init(_:)(v6);
  *(_QWORD *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 88) = _swiftEmptyArrayStorage;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  v10 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v13, v9, a1, v9, v10);
  *(_OWORD *)(v2 + 16) = v13[0];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F28);
  inject<A, B>(_:from:)(v13, v11, a1, v11, v10);
  sub_F4D8(v13, v2 + 32);
  return v2;
}

uint64_t Link.init(id:title:subtitle:artwork:presentation:segue:impressionMetrics:entity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int16 a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v15;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  v15 = (int *)type metadata accessor for Link(0);
  sub_267BC(a7, (uint64_t)a9 + v15[7], &qword_3BEB70);
  if ((a8 & 0x100) != 0)
    LOBYTE(a8) = 0;
  sub_1459C(a7, &qword_3BEB70);
  *((_BYTE *)a9 + v15[8]) = a8;
  sub_15BD4(a10, (uint64_t)a9 + v15[9], &qword_3B0C50);
  sub_15BD4(a11, (uint64_t)a9 + v15[10], (uint64_t *)&unk_3B8790);
  return sub_15BD4(a12, (uint64_t)a9 + v15[11], &qword_3B1D10);
}

uint64_t static Link.Presentation.textFollowsTintColor.getter()
{
  return 32;
}

uint64_t Link.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  char v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  int v98;
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t *v104;
  char *v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD v121[2];
  uint64_t v122;
  _QWORD v123[4];
  unsigned __int8 v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  char v128[8];

  v119 = a2;
  v120 = a1;
  v107 = a3;
  v3 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for OSLogger(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v7);
  v105 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for Link(0);
  v11 = __chkstk_darwin(v110);
  v104 = (uint64_t *)((char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v106 = (void (*)(char *, uint64_t, uint64_t))((char *)&v98 - v13);
  v14 = type metadata accessor for JSONContext(0);
  v15 = *(char **)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v103 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v98 - v18;
  v20 = type metadata accessor for JSONObject(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v111 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v102 = (char *)&v98 - v25;
  v26 = __chkstk_darwin(v24);
  v101 = (char *)&v98 - v27;
  v28 = __chkstk_darwin(v26);
  v108 = (char *)&v98 - v29;
  __chkstk_darwin(v28);
  v31 = (char *)&v98 - v30;
  v32 = type metadata accessor for LegacyActionLink(0);
  v33 = __chkstk_darwin(v32);
  v35 = (uint64_t *)((char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33);
  v37 = (char *)&v98 - v36;
  v116 = (void (*)(char *, uint64_t))v21;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v118 = v20;
  v39 = v20;
  v40 = v15;
  v38(v31, v120, v39);
  v41 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v15 + 2);
  v117 = v14;
  v41(v19, v119, v14);
  v42 = v115;
  v43 = LegacyActionLink.init(deserializing:using:)(v31, (uint64_t)v19, (uint64_t)v37);
  if (!v42)
  {
    sub_14510((uint64_t)v37, (uint64_t)v35, type metadata accessor for LegacyActionLink);
    v44 = v106;
    Link.init(from:)(v35, (uint64_t)v106);
    (*((void (**)(uint64_t, uint64_t))v40 + 1))(v119, v117);
    (*((void (**)(uint64_t, uint64_t))v116 + 1))(v120, v118);
    sub_145D8((uint64_t)v37, type metadata accessor for LegacyActionLink);
    return sub_24F408((uint64_t)v44, v107);
  }
  v106 = v41;
  v115 = 0;
  v45 = v112;
  static OSLogger.jsonDeserialization.getter(v43);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
  v47 = type metadata accessor for LogMessage(0);
  v48 = swift_allocObject(v46, ((*(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v47 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80) | 7);
  *(_OWORD *)(v48 + 16) = xmmword_2EA0D0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(42, 1);
  v49._countAndFlagsBits = 0xD00000000000002ALL;
  v49._object = (void *)0x80000000003149A0;
  LogMessage.StringInterpolation.appendLiteral(_:)(v49);
  swift_getErrorValue(v42, v128, &v126);
  v50 = v126;
  v51 = v127;
  v123[3] = v127;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v123);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(boxed_opaque_existential_2Tm, v50, v51);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v123);
  sub_1459C((uint64_t)v123, (uint64_t *)&unk_3BC540);
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v53);
  LogMessage.init(stringInterpolation:)(v5);
  v54 = v114;
  Logger.debug(_:)(v48, v114, &protocol witness table for OSLogger);
  swift_bridgeObjectRelease();
  swift_errorRelease(v42);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v45, v54);
  v55 = v111;
  v56 = v120;
  v57 = JSONObject.subscript.getter(25705, 0xE200000000000000);
  v58 = JSONObject.string.getter(v57);
  v60 = v59;
  v61 = (void (*)(char *, uint64_t))*((_QWORD *)v116 + 1);
  v62 = v55;
  v63 = v118;
  v61(v62, v118);
  if (!v60)
  {
    v90 = (uint64_t (*)(uint64_t, uint64_t))v61;
    v91 = type metadata accessor for JSONError(0);
    v92 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v91, v92, 0, 0);
    v94 = v93;
    *v93 = 25705;
    v93[1] = 0xE200000000000000;
LABEL_12:
    v93[2] = v110;
    v96 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v91 - 8) + 104))(v94, enum case for JSONError.missingProperty(_:), v91);
    swift_willThrow(v96);
    (*((void (**)(uint64_t, uint64_t))v40 + 1))(v119, v117);
    return v90(v56, v63);
  }
  v114 = v58;
  v64 = v108;
  v65 = JSONObject.subscript.getter(0x656C746974, 0xE500000000000000);
  v66 = JSONObject.string.getter(v65);
  v68 = v67;
  v61(v64, v63);
  v113 = v68;
  if (!v68)
  {
    v90 = (uint64_t (*)(uint64_t, uint64_t))v61;
    swift_bridgeObjectRelease();
    v91 = type metadata accessor for JSONError(0);
    v95 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v91, v95, 0, 0);
    v94 = v93;
    *v93 = 0x656C746974;
    v93[1] = 0xE500000000000000;
    goto LABEL_12;
  }
  v69 = v101;
  v111 = (char *)v66;
  v70 = JSONObject.subscript.getter(0x656C746974627573, 0xE800000000000000);
  v108 = (char *)JSONObject.string.getter(v70);
  v100 = v71;
  v61(v69, v63);
  v72 = type metadata accessor for ArtworkModel(0);
  v73 = v56;
  v74 = v102;
  JSONObject.subscript.getter(0x6B726F77747261, 0xE700000000000000);
  v116 = v61;
  v75 = v103;
  v112 = v40;
  v76 = v119;
  v101 = v60;
  v77 = v63;
  v78 = v117;
  v79 = v106;
  v106(v103, v119, v117);
  sub_F1C0((unint64_t *)&qword_3B2828, (void (*)(uint64_t))&type metadata accessor for ArtworkModel, (uint64_t)&protocol conformance descriptor for ArtworkModel);
  ExpressibleByJSON.init(tryDeserializing:using:)(v74, v75, v72);
  JSONObject.subscript.getter(0x61746E6573657270, 0xEC0000006E6F6974);
  v79(v75, v76, v78);
  sub_3CFF0();
  ExpressibleByJSON.init(tryDeserializing:using:)(v74, v75, &type metadata for Link.Presentation);
  v99 = v124;
  v98 = v125;
  JSONObject.subscript.getter(0x6575676573, 0xE500000000000000);
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)(v123, v74, v76);
  v116(v74, v77);
  v80 = type metadata accessor for ImpressionMetrics(0);
  v81 = v73;
  JSONObject.subscript.getter(0xD000000000000011, 0x8000000000309180);
  v79(v75, v76, v78);
  v82 = (uint64_t)v105;
  ExpressibleByJSON.init(tryDeserializing:using:)(v74, v75, v80);
  v122 = 0;
  memset(v121, 0, sizeof(v121));
  v83 = v104;
  v84 = v101;
  *v104 = v114;
  v83[1] = (uint64_t)v84;
  v85 = v113;
  v83[2] = (uint64_t)v111;
  v83[3] = v85;
  v86 = v100;
  v83[4] = (uint64_t)v108;
  v83[5] = v86;
  v87 = (int *)v110;
  v88 = v109;
  sub_267BC(v109, (uint64_t)v83 + *(int *)(v110 + 28), &qword_3BEB70);
  if (v98)
    v89 = 0;
  else
    v89 = v99;
  sub_1459C(v88, &qword_3BEB70);
  *((_BYTE *)v83 + v87[8]) = v89;
  sub_15BD4((uint64_t)v123, (uint64_t)v83 + v87[9], &qword_3B0C50);
  sub_15BD4(v82, (uint64_t)v83 + v87[10], (uint64_t *)&unk_3B8790);
  sub_15BD4((uint64_t)v121, (uint64_t)v83 + v87[11], &qword_3B1D10);
  sub_24F408((uint64_t)v83, v107);
  (*((void (**)(uint64_t, uint64_t))v112 + 1))(v76, v78);
  return ((uint64_t (*)(uint64_t, uint64_t))v116)(v81, v118);
}

_BYTE *sub_24F3C0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata accessor for Link(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3E60;
  if (!qword_3C3E60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Link);
  return result;
}

uint64_t sub_24F408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Link(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_BYTE *sub_24F44C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_24F460@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_24F474@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24F488(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_24F4B8@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_24F4E4@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_24F508(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_24F51C(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_24F530(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_24F544@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24F558(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_24F56C(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_24F580(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_24F594()
{
  _BYTE *v0;

  return *v0 == 0;
}

_BYTE *sub_24F5A4(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_24F5B8@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24F5C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = sub_F468(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t Link.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Link(0);
  return sub_267BC(v1 + *(int *)(v3 + 28), a1, &qword_3BEB70);
}

uint64_t Link.presentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Link(0) + 32));
}

uint64_t Link.segue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Link(0);
  return sub_267BC(v1 + *(int *)(v3 + 36), a1, &qword_3B0C50);
}

uint64_t Link.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Link(0);
  return sub_267BC(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_3B8790);
}

uint64_t Link.appEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Link(0);
  return sub_267BC(v1 + *(int *)(v3 + 44), a1, &qword_3B1D10);
}

uint64_t static Link.Presentation.checked.getter()
{
  return 2;
}

uint64_t static Link.Presentation.disabled.getter()
{
  return 4;
}

uint64_t static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter()
{
  return 16;
}

uint64_t static Link.Presentation.textUsesSecondaryTextColor.getter()
{
  return 64;
}

uint64_t Link.init(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _BYTE v32[40];
  uint64_t v33;

  v5 = (int *)type metadata accessor for Link(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[8];
  if (v14)
  {
    v15 = a1[7];
    v16 = a1[1];
    v25 = *a1;
    v26 = a1[9];
    v27 = v15;
    v33 = v2;
    v29 = a2;
    v17 = a1[10];
    v18 = (int *)type metadata accessor for LegacyActionLink(0);
    sub_267BC((uint64_t)a1 + v18[8], (uint64_t)v13, &qword_3BEB70);
    v28 = *((unsigned __int8 *)a1 + v18[9]);
    sub_150C8((uint64_t)(a1 + 2), (uint64_t)v32);
    sub_267BC((uint64_t)a1 + v18[10], (uint64_t)v10, (uint64_t *)&unk_3B8790);
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    *v7 = v25;
    v7[1] = v16;
    v7[2] = v27;
    v7[3] = v14;
    v7[4] = v26;
    v7[5] = v17;
    sub_267BC((uint64_t)v13, (uint64_t)v7 + v5[7], &qword_3BEB70);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v16);
    sub_1459C((uint64_t)v13, &qword_3BEB70);
    *((_BYTE *)v7 + v5[8]) = v28;
    sub_15BD4((uint64_t)v32, (uint64_t)v7 + v5[9], &qword_3B0C50);
    sub_15BD4((uint64_t)v10, (uint64_t)v7 + v5[10], (uint64_t *)&unk_3B8790);
    sub_15BD4((uint64_t)v30, (uint64_t)v7 + v5[11], &qword_3B1D10);
    sub_24F408((uint64_t)v7, v29);
  }
  else
  {
    v19 = type metadata accessor for JSONError(0);
    v20 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v19, v20, 0, 0);
    *v21 = 0x656C746974;
    v21[1] = 0xE500000000000000;
    v21[2] = v5;
    v22 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, enum case for JSONError.missingProperty(_:), v19);
    swift_willThrow(v22);
  }
  return sub_145D8((uint64_t)a1, type metadata accessor for LegacyActionLink);
}

uint64_t sub_24FA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_267BC(v2 + *(int *)(a1 + 36), a2, &qword_3B0C50);
}

uint64_t Link.Presentation.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  return sub_2500E8(a1, a2);
}

uint64_t sub_24FA4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = JSONObject.string.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_24FA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_2500E8(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_24FAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Link.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_24FAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_267BC(v2 + *(int *)(a1 + 28), a2, &qword_3BEB70);
}

uint64_t Link.clickSender.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *boxed_opaque_existential_2Tm;

  a1[3] = type metadata accessor for Link(0);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a1);
  return sub_14510(v1, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for Link);
}

uint64_t sub_24FB38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_2Tm;

  a2[3] = a1;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a2);
  return sub_14510(v2, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for Link);
}

NSObject_optional __swiftcall Link.appEntityAnnotation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Bool v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  NSObject_optional result;

  v1 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Link(0);
  sub_267BC(v0 + *(int *)(v4 + 44), (uint64_t)&v26, &qword_3B1D10);
  if (!v27)
  {
    sub_1459C((uint64_t)&v26, &qword_3B1D10);
    sub_267BC(v0 + *(int *)(v4 + 36), (uint64_t)v28, &qword_3B0C50);
    if (v29)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2E40);
      v16 = type metadata accessor for ChannelPowerSwooshAction(0);
      if ((swift_dynamicCast(&v26, v28, v15, v16, 6) & 1) != 0)
      {
        v17 = v26;
        v18 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelAdamId + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelAdamId);
          v28[0] = _swiftEmptyArrayStorage;
          v20 = sub_F1C0((unint64_t *)&qword_3B1D18, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
          swift_bridgeObjectRetain();
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B1D20);
          v22 = sub_29210();
          dispatch thunk of SetAlgebra.init<A>(_:)(v28, v21, v22, v1, v20);
          v23 = type metadata accessor for ChannelEntity(0);
          v28[0] = v19;
          v28[1] = v18;
          objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
          v24 = sub_F1C0(&qword_3BDFB0, (void (*)(uint64_t))&type metadata accessor for ChannelEntity, (uint64_t)&protocol conformance descriptor for ChannelEntity);
          v13 = AppEntityViewAnnotation.init<A>(entityType:identifier:state:)(v23, v28, v3, v23, v24);
          swift_release(v17);
          goto LABEL_10;
        }
        swift_release(v26);
      }
    }
    else
    {
      sub_1459C((uint64_t)v28, &qword_3B0C50);
    }
    v13 = 0;
    goto LABEL_10;
  }
  sub_F4D8(&v26, (uint64_t)v28);
  v5 = v29;
  v6 = v30;
  v7 = __swift_project_boxed_opaque_existential_1(v28, v29);
  v8 = type metadata accessor for AppEntityViewAnnotation(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v12 + 16))(v11, v7, v5, v9);
  sub_2914C();
  v13 = AppEntityViewAnnotation.__allocating_init<A>(entity:state:)(v11, v3, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v28);
LABEL_10:
  v25 = (objc_class *)v13;
  result.value.isa = v25;
  result.is_nil = v14;
  return result;
}

uint64_t sub_24FE30(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0xD000000000000010)
  {
    v4 = 0x80000000003149D0;
    if (a2 == 0x80000000003149D0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000000003149D0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 1;
  }
  if (a1 == 0x64656B63656863 && a2 == 0xE700000000000000)
  {
    v6 = 0xE700000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64656B63656863, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64656C6261736964, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x80000000003149F0)
  {
    v8 = 0x80000000003149F0;
LABEL_23:
    swift_bridgeObjectRelease(v8);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x80000000003149F0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_23;
  }
  if (a1 == 0xD000000000000021 && a2 == 0x8000000000314A10)
  {
    v9 = 0x8000000000314A10;
LABEL_29:
    swift_bridgeObjectRelease(v9);
    return 16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000021, 0x8000000000314A10, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_29;
  }
  if (a1 == 0xD000000000000014 && a2 == 0x8000000000314A40)
  {
    v10 = 0x8000000000314A40;
LABEL_35:
    swift_bridgeObjectRelease(v10);
    return 32;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000000314A40, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_35;
  }
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000314A60)
  {
    swift_bridgeObjectRelease(0x8000000000314A60);
    return 64;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000000314A60, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 64;
    else
      return 0;
  }
}

uint64_t sub_2500E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4F30);
  __chkstk_darwin(v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JSONArray(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  JSONObject.array.getter(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v20 = JSONArray.compactMap<A>(_:)(sub_24FA4C);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v36[0] = v11;
      v36[1] = v2;
      v37 = a2;
      v38 = a1;
      v39 = _swiftEmptyArrayStorage;
      sub_180768(0, v21, 0);
      v22 = v39;
      v23 = (unint64_t *)(v20 + 40);
      do
      {
        v24 = *(v23 - 1);
        v25 = *v23;
        swift_bridgeObjectRetain();
        v26 = sub_24FE30(v24, v25);
        v39 = v22;
        v28 = v22[2];
        v27 = v22[3];
        if (v28 >= v27 >> 1)
        {
          sub_180768(v27 > 1, v28 + 1, 1);
          v22 = v39;
        }
        v23 += 2;
        v22[2] = v28 + 1;
        *((_BYTE *)v22 + v28 + 32) = v26;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      a2 = v37;
      a1 = v38;
      v11 = (char *)v36[0];
      v29 = v22[2];
      if (v29)
        goto LABEL_9;
    }
    else
    {
      swift_bridgeObjectRelease();
      v22 = _swiftEmptyArrayStorage;
      v29 = _swiftEmptyArrayStorage[2];
      if (v29)
      {
LABEL_9:
        LODWORD(v19) = 0;
        v30 = (unsigned __int8 *)(v22 + 4);
        do
        {
          v32 = *v30++;
          v31 = v32;
          if ((v32 & ~(_DWORD)v19) == 0)
            v31 = 0;
          v19 = v31 | v19;
          --v29;
        }
        while (v29);
        goto LABEL_16;
      }
    }
    v19 = 0;
LABEL_16:
    swift_bridgeObjectRelease();
    v33 = type metadata accessor for JSONContext(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a2, v33);
    v34 = type metadata accessor for JSONObject(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v19;
  }
  sub_1459C((uint64_t)v7, &qword_3B4F30);
  v13 = type metadata accessor for JSONError(0);
  v14 = sub_F1C0((unint64_t *)&qword_3B0CB0, (void (*)(uint64_t))&type metadata accessor for JSONError, (uint64_t)&protocol conformance descriptor for JSONError);
  swift_allocError(v13, v14, 0, 0);
  *v15 = &type metadata for Link.Presentation;
  v15[1] = _swiftEmptyArrayStorage;
  v16 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, enum case for JSONError.malformedDocument(_:), v13);
  swift_willThrow(v16);
  v17 = type metadata accessor for JSONContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  v18 = type metadata accessor for JSONObject(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  return 0;
}

unint64_t sub_25042C()
{
  unint64_t result;

  result = qword_3C3DE0;
  if (!qword_3C3DE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Link.Presentation);
    atomic_store(result, (unint64_t *)&qword_3C3DE0);
  }
  return result;
}

unint64_t sub_250474()
{
  unint64_t result;

  result = qword_3C3DE8;
  if (!qword_3C3DE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Link.Presentation);
    atomic_store(result, (unint64_t *)&qword_3C3DE8);
  }
  return result;
}

unint64_t sub_2504BC()
{
  unint64_t result;

  result = qword_3C3DF0;
  if (!qword_3C3DF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Link.Presentation);
    atomic_store(result, (unint64_t *)&qword_3C3DF0);
  }
  return result;
}

unint64_t sub_250504()
{
  unint64_t result;

  result = qword_3C3DF8;
  if (!qword_3C3DF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Link.Presentation);
    atomic_store(result, (unint64_t *)&qword_3C3DF8);
  }
  return result;
}

uint64_t sub_250548()
{
  return sub_F1C0(&qword_3C3E00, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
}

uint64_t sub_250574(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C3E00, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2505B0(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C1848, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Link(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    v9 = a3[7];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    a1[4] = a2[4];
    a1[5] = v8;
    v12 = type metadata accessor for ArtworkModel(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v16 = a3;
    }
    else
    {
      v18 = v11[1];
      *v10 = *v11;
      v10[1] = v18;
      v19 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain();
      if (v19 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v20 = v11[2];
        v21 = v11[3];
        sub_3D464(v20, v21, v19);
        v10[2] = v20;
        v10[3] = v21;
        *((_BYTE *)v10 + 32) = v19;
      }
      v22 = (int *)v12;
      v16 = a3;
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v23 = (id *)(v11 + 7);
      v24 = *((unsigned __int8 *)v11 + 64);
      if (v24 == 255)
      {
        v10[7] = *v23;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v25 = *v23;
        sub_3D47C(*v23, *((_BYTE *)v11 + 64));
        v10[7] = v25;
        *((_BYTE *)v10 + 64) = v24;
      }
      v26 = (id *)(v11 + 9);
      v27 = *((unsigned __int8 *)v11 + 80);
      if (v27 == 255)
      {
        v10[9] = *v26;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v28 = *v26;
        sub_3D47C(*v26, *((_BYTE *)v11 + 80));
        v10[9] = v28;
        *((_BYTE *)v10 + 80) = v27;
      }
      v29 = (id *)(v11 + 11);
      v30 = *((unsigned __int8 *)v11 + 96);
      if (v30 == 255)
      {
        v10[11] = *v29;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v31 = *v29;
        sub_3D47C(*v29, *((_BYTE *)v11 + 96));
        v10[11] = v31;
        *((_BYTE *)v10 + 96) = v30;
      }
      v32 = (id *)(v11 + 13);
      v33 = *((unsigned __int8 *)v11 + 112);
      if (v33 == 255)
      {
        v10[13] = *v32;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v34 = *v32;
        sub_3D47C(*v32, *((_BYTE *)v11 + 112));
        v10[13] = v34;
        *((_BYTE *)v10 + 112) = v33;
      }
      v35 = (id *)(v11 + 15);
      v36 = *((unsigned __int8 *)v11 + 128);
      if (v36 == 255)
      {
        v10[15] = *v35;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, *((_BYTE *)v11 + 128));
        v10[15] = v37;
        *((_BYTE *)v10 + 128) = v36;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v38 = v22[11];
      v39 = (char *)v10 + v38;
      v40 = (char *)v11 + v38;
      v41 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      v42 = v22[12];
      v43 = (_QWORD *)((char *)v10 + v42);
      v44 = (_QWORD *)((char *)v11 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      *((_BYTE *)v10 + v22[13]) = *((_BYTE *)v11 + v22[13]);
      *((_BYTE *)v10 + v22[14]) = *((_BYTE *)v11 + v22[14]);
      *((_BYTE *)v10 + v22[15]) = *((_BYTE *)v11 + v22[15]);
      v46 = v22[16];
      v47 = (_QWORD *)((char *)v10 + v46);
      v48 = (_QWORD *)((char *)v11 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v10, 0, 1, v22);
    }
    v51 = v16[9];
    *((_BYTE *)v4 + v16[8]) = *((_BYTE *)a2 + v16[8]);
    v52 = (char *)v4 + v51;
    v53 = (char *)a2 + v51;
    v54 = *(_QWORD *)((char *)a2 + v51 + 24);
    if (v54)
    {
      v55 = *((_QWORD *)v53 + 4);
      *((_QWORD *)v52 + 3) = v54;
      *((_QWORD *)v52 + 4) = v55;
      (**(void (***)(void))(v54 - 8))();
    }
    else
    {
      v56 = *((_OWORD *)v53 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v56;
      *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    }
    v57 = v16[10];
    v58 = (char *)v4 + v57;
    v59 = (char *)a2 + v57;
    v60 = type metadata accessor for ImpressionMetrics(0);
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    v63 = v16[11];
    v64 = (char *)v4 + v63;
    v65 = (char *)a2 + v63;
    v66 = *(_QWORD *)((char *)a2 + v63 + 24);
    if (v66)
    {
      v67 = *((_QWORD *)v65 + 4);
      *((_QWORD *)v64 + 3) = v66;
      *((_QWORD *)v64 + 4) = v67;
      (**(void (***)(void))(v66 - 8))();
    }
    else
    {
      v68 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v68;
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
    }
  }
  return v4;
}

_QWORD *destroy for Link(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255)
      sub_3B5BC(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v6);
    v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255)
      sub_3D624(*(id *)(v4 + 56), v7);
    v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255)
      sub_3D624(*(id *)(v4 + 72), v8);
    v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255)
      sub_3D624(*(id *)(v4 + 88), v9);
    v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255)
      sub_3D624(*(id *)(v4 + 104), v10);
    v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255)
      sub_3D624(*(id *)(v4 + 120), v11);
    v12 = v4 + *(int *)(v5 + 44);
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = (_QWORD *)(a1 + a2[9]);
  if (v14[3])
    __swift_destroy_boxed_opaque_existential_1(v14);
  v15 = a1 + a2[10];
  v16 = type metadata accessor for ImpressionMetrics(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  result = (_QWORD *)(a1 + a2[11]);
  if (result[3])
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *initializeWithCopy for Link(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = a3[7];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v15 = a3;
  }
  else
  {
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    v17 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain();
    if (v17 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v18 = v10[2];
      v19 = v10[3];
      sub_3D464(v18, v19, v17);
      v9[2] = v18;
      v9[3] = v19;
      *((_BYTE *)v9 + 32) = v17;
    }
    v15 = a3;
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v20 = (id *)(v10 + 7);
    v21 = *((unsigned __int8 *)v10 + 64);
    if (v21 == 255)
    {
      v9[7] = *v20;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v22 = *v20;
      sub_3D47C(*v20, *((_BYTE *)v10 + 64));
      v9[7] = v22;
      *((_BYTE *)v9 + 64) = v21;
    }
    v23 = (id *)(v10 + 9);
    v24 = *((unsigned __int8 *)v10 + 80);
    if (v24 == 255)
    {
      v9[9] = *v23;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v25 = *v23;
      sub_3D47C(*v23, *((_BYTE *)v10 + 80));
      v9[9] = v25;
      *((_BYTE *)v9 + 80) = v24;
    }
    v26 = (id *)(v10 + 11);
    v27 = *((unsigned __int8 *)v10 + 96);
    if (v27 == 255)
    {
      v9[11] = *v26;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v28 = *v26;
      sub_3D47C(*v26, *((_BYTE *)v10 + 96));
      v9[11] = v28;
      *((_BYTE *)v9 + 96) = v27;
    }
    v29 = (id *)(v10 + 13);
    v30 = *((unsigned __int8 *)v10 + 112);
    if (v30 == 255)
    {
      v9[13] = *v29;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v31 = *v29;
      sub_3D47C(*v29, *((_BYTE *)v10 + 112));
      v9[13] = v31;
      *((_BYTE *)v9 + 112) = v30;
    }
    v32 = (id *)(v10 + 15);
    v33 = *((unsigned __int8 *)v10 + 128);
    if (v33 == 255)
    {
      v9[15] = *v32;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v34 = *v32;
      sub_3D47C(*v32, *((_BYTE *)v10 + 128));
      v9[15] = v34;
      *((_BYTE *)v9 + 128) = v33;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v35 = v11[11];
    v36 = (char *)v9 + v35;
    v37 = (char *)v10 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v11[12];
    v40 = (_QWORD *)((char *)v9 + v39);
    v41 = (_QWORD *)((char *)v10 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v43 = v11[16];
    v44 = (_QWORD *)((char *)v9 + v43);
    v45 = (_QWORD *)((char *)v10 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v9, 0, 1, v11);
  }
  v48 = v15[9];
  *((_BYTE *)a1 + v15[8]) = *((_BYTE *)a2 + v15[8]);
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(_QWORD *)((char *)a2 + v48 + 24);
  if (v51)
  {
    v52 = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 3) = v51;
    *((_QWORD *)v49 + 4) = v52;
    (**(void (***)(void))(v51 - 8))();
  }
  else
  {
    v53 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v53;
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
  }
  v54 = v15[10];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for ImpressionMetrics(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v60 = v15[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = *(_QWORD *)((char *)a2 + v60 + 24);
  if (v63)
  {
    v64 = *((_QWORD *)v62 + 4);
    *((_QWORD *)v61 + 3) = v63;
    *((_QWORD *)v61 + 4) = v64;
    (**(void (***)(void))(v63 - 8))();
  }
  else
  {
    v65 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v65;
    *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
  }
  return a1;
}

_QWORD *assignWithCopy for Link(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  id *v62;
  id *v63;
  int v64;
  id v65;
  void *v66;
  char v67;
  id v68;
  char v69;
  id v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v26 = *((_OWORD *)v8 + 1);
        *(_BYTE *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_3D464(v15, v16, v14);
        *(_QWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 24) = v16;
        *(_BYTE *)(v7 + 32) = v14;
      }
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      v27 = (id *)(v8 + 56);
      v28 = v8[64];
      if (v28 == 255)
      {
        v30 = *v27;
        *(_BYTE *)(v7 + 64) = v8[64];
        *(_QWORD *)(v7 + 56) = v30;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, v8[64]);
        *(_QWORD *)(v7 + 56) = v29;
        *(_BYTE *)(v7 + 64) = v28;
      }
      v31 = (id *)(v8 + 72);
      v32 = v8[80];
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v7 + 80) = v8[80];
        *(_QWORD *)(v7 + 72) = v34;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, v8[80]);
        *(_QWORD *)(v7 + 72) = v33;
        *(_BYTE *)(v7 + 80) = v32;
      }
      v35 = (id *)(v8 + 88);
      v36 = v8[96];
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v7 + 96) = v8[96];
        *(_QWORD *)(v7 + 88) = v38;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, v8[96]);
        *(_QWORD *)(v7 + 88) = v37;
        *(_BYTE *)(v7 + 96) = v36;
      }
      v39 = (id *)(v8 + 104);
      v40 = v8[112];
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v7 + 112) = v8[112];
        *(_QWORD *)(v7 + 104) = v42;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, v8[112]);
        *(_QWORD *)(v7 + 104) = v41;
        *(_BYTE *)(v7 + 112) = v40;
      }
      v43 = (id *)(v8 + 120);
      v44 = v8[128];
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v7 + 128) = v8[128];
        *(_QWORD *)(v7 + 120) = v46;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, v8[128]);
        *(_QWORD *)(v7 + 120) = v45;
        *(_BYTE *)(v7 + 128) = v44;
      }
      *(_BYTE *)(v7 + 129) = v8[129];
      v47 = v9[11];
      v48 = v7 + v47;
      v49 = &v8[v47];
      v50 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      v51 = v9[12];
      v52 = (_QWORD *)(v7 + v51);
      v53 = &v8[v51];
      *v52 = *(_QWORD *)v53;
      v52[1] = *((_QWORD *)v53 + 1);
      *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
      *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
      *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
      v54 = v9[16];
      v55 = (_QWORD *)(v7 + v54);
      v56 = &v8[v54];
      *v55 = *(_QWORD *)v56;
      v55[1] = *((_QWORD *)v56 + 1);
      v57 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_145D8(v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (__int128 *)(v7 + 16);
  v19 = (__int128 *)(v8 + 16);
  v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      v61 = *v19;
      *(_BYTE *)(v7 + 32) = v8[32];
      *v18 = v61;
    }
    else
    {
      v58 = *((_QWORD *)v8 + 2);
      v59 = *((_QWORD *)v8 + 3);
      sub_3D464(v58, v59, v8[32]);
      *(_QWORD *)(v7 + 16) = v58;
      *(_QWORD *)(v7 + 24) = v59;
      *(_BYTE *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E43C(v7 + 16);
    v60 = v8[32];
    *v18 = *v19;
    *(_BYTE *)(v7 + 32) = v60;
  }
  else
  {
    v21 = *((_QWORD *)v8 + 2);
    v22 = *((_QWORD *)v8 + 3);
    sub_3D464(v21, v22, v8[32]);
    v23 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    *(_QWORD *)(v7 + 16) = v21;
    *(_QWORD *)(v7 + 24) = v22;
    v25 = *(_BYTE *)(v7 + 32);
    *(_BYTE *)(v7 + 32) = v20;
    sub_3B5BC(v23, v24, v25);
  }
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v62 = (id *)(v7 + 56);
  v63 = (id *)(v8 + 56);
  v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      v70 = *v63;
      *(_BYTE *)(v7 + 64) = v8[64];
      *v62 = v70;
    }
    else
    {
      v68 = *v63;
      sub_3D47C(*v63, v8[64]);
      *(_QWORD *)(v7 + 56) = v68;
      *(_BYTE *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_3E470(v7 + 56);
    v69 = v8[64];
    *v62 = *v63;
    *(_BYTE *)(v7 + 64) = v69;
  }
  else
  {
    v65 = *v63;
    sub_3D47C(*v63, v8[64]);
    v66 = *(void **)(v7 + 56);
    *(_QWORD *)(v7 + 56) = v65;
    v67 = *(_BYTE *)(v7 + 64);
    *(_BYTE *)(v7 + 64) = v64;
    sub_3D624(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v7 + 80) = v8[80];
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_3D47C(*v72, v8[80]);
      *(_QWORD *)(v7 + 72) = v77;
      *(_BYTE *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_3E470(v7 + 72);
    v78 = v8[80];
    *v71 = *v72;
    *(_BYTE *)(v7 + 80) = v78;
  }
  else
  {
    v74 = *v72;
    sub_3D47C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(_QWORD *)(v7 + 72) = v74;
    v76 = *(_BYTE *)(v7 + 80);
    *(_BYTE *)(v7 + 80) = v73;
    sub_3D624(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v7 + 96) = v8[96];
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_3D47C(*v81, v8[96]);
      *(_QWORD *)(v7 + 88) = v86;
      *(_BYTE *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_3E470(v7 + 88);
    v87 = v8[96];
    *v80 = *v81;
    *(_BYTE *)(v7 + 96) = v87;
  }
  else
  {
    v83 = *v81;
    sub_3D47C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v83;
    v85 = *(_BYTE *)(v7 + 96);
    *(_BYTE *)(v7 + 96) = v82;
    sub_3D624(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v7 + 112) = v8[112];
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_3D47C(*v90, v8[112]);
      *(_QWORD *)(v7 + 104) = v95;
      *(_BYTE *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_3E470(v7 + 104);
    v96 = v8[112];
    *v89 = *v90;
    *(_BYTE *)(v7 + 112) = v96;
  }
  else
  {
    v92 = *v90;
    sub_3D47C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(_QWORD *)(v7 + 104) = v92;
    v94 = *(_BYTE *)(v7 + 112);
    *(_BYTE *)(v7 + 112) = v91;
    sub_3D624(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v7 + 128) = v8[128];
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_3D47C(*v99, v8[128]);
      *(_QWORD *)(v7 + 120) = v104;
      *(_BYTE *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_3E470(v7 + 120);
    v105 = v8[128];
    *v98 = *v99;
    *(_BYTE *)(v7 + 128) = v105;
  }
  else
  {
    v101 = *v99;
    sub_3D47C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(_QWORD *)(v7 + 120) = v101;
    v103 = *(_BYTE *)(v7 + 128);
    *(_BYTE *)(v7 + 128) = v100;
    sub_3D624(v102, v103);
  }
  *(_BYTE *)(v7 + 129) = v8[129];
  v107 = v9[11];
  v108 = v7 + v107;
  v109 = &v8[v107];
  v110 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
  v111 = v9[12];
  v112 = (_QWORD *)(v7 + v111);
  v113 = &v8[v111];
  *v112 = *(_QWORD *)v113;
  v112[1] = *((_QWORD *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[13]) = v8[v9[13]];
  *(_BYTE *)(v7 + v9[14]) = v8[v9[14]];
  *(_BYTE *)(v7 + v9[15]) = v8[v9[15]];
  v114 = v9[16];
  v115 = (_QWORD *)(v7 + v114);
  v116 = &v8[v114];
  *v115 = *(_QWORD *)v116;
  v115[1] = *((_QWORD *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v117 = a3[9];
  v118 = (char *)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = *(_QWORD *)((char *)a2 + v117 + 24);
  if (*(_QWORD *)((char *)a1 + v117 + 24))
  {
    if (v120)
    {
      __swift_assign_boxed_opaque_existential_1(v118, v119);
      goto LABEL_75;
    }
    __swift_destroy_boxed_opaque_existential_1(v118);
  }
  else if (v120)
  {
    *((_QWORD *)v118 + 3) = v120;
    *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
    (**(void (***)(char *, char *))(v120 - 8))(v118, v119);
    goto LABEL_75;
  }
  v121 = *(_OWORD *)v119;
  v122 = *((_OWORD *)v119 + 1);
  *((_QWORD *)v118 + 4) = *((_QWORD *)v119 + 4);
  *(_OWORD *)v118 = v121;
  *((_OWORD *)v118 + 1) = v122;
LABEL_75:
  v123 = a3[10];
  v124 = (char *)a1 + v123;
  v125 = (char *)a2 + v123;
  v126 = type metadata accessor for ImpressionMetrics(0);
  v127 = *(_QWORD *)(v126 - 8);
  v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48);
  v129 = v128(v124, 1, v126);
  v130 = v128(v125, 1, v126);
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v124, v125, v126);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if (v130)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v126);
LABEL_80:
    v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
    goto LABEL_81;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 24))(v124, v125, v126);
LABEL_81:
  v132 = a3[11];
  v133 = (char *)a1 + v132;
  v134 = (char *)a2 + v132;
  v135 = *((_QWORD *)v134 + 3);
  if (!*(_QWORD *)((char *)a1 + v132 + 24))
  {
    if (v135)
    {
      *((_QWORD *)v133 + 3) = v135;
      *((_QWORD *)v133 + 4) = *((_QWORD *)v134 + 4);
      (**(void (***)(char *, char *))(v135 - 8))(v133, v134);
      return a1;
    }
LABEL_87:
    v136 = *(_OWORD *)v134;
    v137 = *((_OWORD *)v134 + 1);
    *((_QWORD *)v133 + 4) = *((_QWORD *)v134 + 4);
    *(_OWORD *)v133 = v136;
    *((_OWORD *)v133 + 1) = v137;
    return a1;
  }
  if (!v135)
  {
    __swift_destroy_boxed_opaque_existential_1(v133);
    goto LABEL_87;
  }
  __swift_assign_boxed_opaque_existential_1(v133, v134);
  return a1;
}

_OWORD *initializeWithTake for Link(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for ImpressionMetrics(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = a3[11];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  return a1;
}

_QWORD *assignWithTake for Link(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  uint64_t v40;
  _OWORD *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  int v48;
  void *v49;
  _QWORD *v50;
  int v51;
  int v52;
  void *v53;
  _QWORD *v54;
  int v55;
  int v56;
  void *v57;
  _QWORD *v58;
  int v59;
  int v60;
  void *v61;
  _QWORD *v62;
  int v63;
  int v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (uint64_t)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v17 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      *(_BYTE *)(v10 + 32) = v11[32];
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
      *(_QWORD *)(v10 + 56) = *((_QWORD *)v11 + 7);
      *(_BYTE *)(v10 + 64) = v11[64];
      *(_OWORD *)(v10 + 113) = *(_OWORD *)(v11 + 113);
      *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
      *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      *(_BYTE *)(v10 + 129) = v11[129];
      v18 = v12[11];
      v19 = v10 + v18;
      v20 = &v11[v18];
      v21 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)(v10 + v12[12]) = *(_OWORD *)&v11[v12[12]];
      *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
      *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
      *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
      *(_OWORD *)(v10 + v12[16]) = *(_OWORD *)&v11[v12[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_145D8(v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v40 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v40;
  swift_bridgeObjectRelease();
  v41 = v11 + 16;
  v42 = *(unsigned __int8 *)(v10 + 32);
  if (v42 != 255)
  {
    v43 = v11[32];
    if (v43 != 255)
    {
      v44 = *(_QWORD *)(v10 + 16);
      v45 = *(_QWORD *)(v10 + 24);
      *(_OWORD *)(v10 + 16) = *v41;
      *(_BYTE *)(v10 + 32) = v43;
      sub_3B5BC(v44, v45, v42);
      goto LABEL_24;
    }
    sub_3E43C(v10 + 16);
  }
  *(_OWORD *)(v10 + 16) = *v41;
  *(_BYTE *)(v10 + 32) = v11[32];
LABEL_24:
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  v46 = v11 + 56;
  v47 = *(unsigned __int8 *)(v10 + 64);
  if (v47 != 255)
  {
    v48 = v11[64];
    if (v48 != 255)
    {
      v49 = *(void **)(v10 + 56);
      *(_QWORD *)(v10 + 56) = *v46;
      *(_BYTE *)(v10 + 64) = v48;
      sub_3D624(v49, v47);
      goto LABEL_29;
    }
    sub_3E470(v10 + 56);
  }
  *(_QWORD *)(v10 + 56) = *v46;
  *(_BYTE *)(v10 + 64) = v11[64];
LABEL_29:
  v50 = v11 + 72;
  v51 = *(unsigned __int8 *)(v10 + 80);
  if (v51 != 255)
  {
    v52 = v11[80];
    if (v52 != 255)
    {
      v53 = *(void **)(v10 + 72);
      *(_QWORD *)(v10 + 72) = *v50;
      *(_BYTE *)(v10 + 80) = v52;
      sub_3D624(v53, v51);
      goto LABEL_34;
    }
    sub_3E470(v10 + 72);
  }
  *(_QWORD *)(v10 + 72) = *v50;
  *(_BYTE *)(v10 + 80) = v11[80];
LABEL_34:
  v54 = v11 + 88;
  v55 = *(unsigned __int8 *)(v10 + 96);
  if (v55 != 255)
  {
    v56 = v11[96];
    if (v56 != 255)
    {
      v57 = *(void **)(v10 + 88);
      *(_QWORD *)(v10 + 88) = *v54;
      *(_BYTE *)(v10 + 96) = v56;
      sub_3D624(v57, v55);
      goto LABEL_39;
    }
    sub_3E470(v10 + 88);
  }
  *(_QWORD *)(v10 + 88) = *v54;
  *(_BYTE *)(v10 + 96) = v11[96];
LABEL_39:
  v58 = v11 + 104;
  v59 = *(unsigned __int8 *)(v10 + 112);
  if (v59 != 255)
  {
    v60 = v11[112];
    if (v60 != 255)
    {
      v61 = *(void **)(v10 + 104);
      *(_QWORD *)(v10 + 104) = *v58;
      *(_BYTE *)(v10 + 112) = v60;
      sub_3D624(v61, v59);
      goto LABEL_44;
    }
    sub_3E470(v10 + 104);
  }
  *(_QWORD *)(v10 + 104) = *v58;
  *(_BYTE *)(v10 + 112) = v11[112];
LABEL_44:
  v62 = v11 + 120;
  v63 = *(unsigned __int8 *)(v10 + 128);
  if (v63 == 255)
  {
LABEL_48:
    *(_QWORD *)(v10 + 120) = *v62;
    *(_BYTE *)(v10 + 128) = v11[128];
    goto LABEL_49;
  }
  v64 = v11[128];
  if (v64 == 255)
  {
    sub_3E470(v10 + 120);
    goto LABEL_48;
  }
  v65 = *(void **)(v10 + 120);
  *(_QWORD *)(v10 + 120) = *v62;
  *(_BYTE *)(v10 + 128) = v64;
  sub_3D624(v65, v63);
LABEL_49:
  *(_BYTE *)(v10 + 129) = v11[129];
  v66 = v12[11];
  v67 = v10 + v66;
  v68 = &v11[v66];
  v69 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
  v70 = v12[12];
  v71 = (_QWORD *)(v10 + v70);
  v72 = &v11[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v12[13]) = v11[v12[13]];
  *(_BYTE *)(v10 + v12[14]) = v11[v12[14]];
  *(_BYTE *)(v10 + v12[15]) = v11[v12[15]];
  v75 = v12[16];
  v76 = (_QWORD *)(v10 + v75);
  v77 = &v11[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
LABEL_7:
  v23 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  if (*(_QWORD *)((char *)a1 + v23 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v23));
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  v27 = a3[10];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for ImpressionMetrics(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_14:
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_15:
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  if (*(_QWORD *)((char *)a1 + v36 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v36));
  v38 = *(_OWORD *)((char *)a2 + v36 + 16);
  *(_OWORD *)v37 = *(_OWORD *)((char *)a2 + v36);
  *((_OWORD *)v37 + 1) = v38;
  *((_QWORD *)v37 + 4) = *(_QWORD *)((char *)a2 + v36 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Link(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_252190);
}

uint64_t sub_252190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Link(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_252244);
}

uint64_t sub_252244(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2522E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = &unk_302460;
  v6[1] = &unk_302460;
  v6[2] = &unk_302478;
  sub_3EE70(319, (unint64_t *)&qword_3B28A0, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v6[4] = (char *)&value witness table for Builtin.Int8 + 64;
    v6[5] = &unk_302490;
    sub_3EE70(319, (unint64_t *)&qword_3B2250, (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_302490;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for Link.Presentation()
{
  return &type metadata for Link.Presentation;
}

uint64_t ToggleCellModel.init(id:keyPath:offName:onName:impressionMetrics:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  if (!a2)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    v23 = a3;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4E78);
    _print_unlocked<A, B>(_:_:)(&v23, &v24, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v17._countAndFlagsBits = 45;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    v18._countAndFlagsBits = a4;
    v18._object = a5;
    String.append(_:)(v18);
    v19._countAndFlagsBits = 45;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    v20._countAndFlagsBits = a6;
    v20._object = a7;
    String.append(_:)(v20);
    a1 = v24;
    a2 = v25;
  }
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  v21 = type metadata accessor for ToggleCellModel(0);
  return sub_23AB8(a8, (uint64_t)a9 + *(int *)(v21 + 32));
}

uint64_t type metadata accessor for ToggleCellModel(uint64_t a1)
{
  uint64_t result;

  result = qword_3C3F10;
  if (!qword_3C3F10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ToggleCellModel);
  return result;
}

uint64_t ToggleCellModel.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ToggleCellModel(0) + 32);
  return sub_23A70(v3, a1);
}

uint64_t sub_252540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23A70(v2 + *(int *)(a1 + 32), a2);
}

BOOL _s8ShelfKit15ToggleCellModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BOOL8 result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;

  v4 = type metadata accessor for ImpressionMetrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v41 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3F58);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v40 - v17;
  v19 = a1[1];
  v20 = a2[1];
  if (*a1 == *a2 && v19 == v20
    || (v21 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v19, *a2, v20, 0), result = 0, (v21 & 1) != 0))
  {
    type metadata accessor for AnyKeyPath(0);
    if ((static AnyKeyPath.== infix(_:_:)(a1[2], a2[2]) & 1) == 0)
      return 0;
    v23 = a1[3];
    v24 = a1[4];
    v25 = a2[3];
    v26 = a2[4];
    if (v23 == v25 && v24 == v26
      || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 0), result = 0, (v27 & 1) != 0))
    {
      if ((v28 = a1[5], v29 = a1[6], v30 = a2[5], v31 = a2[6], v28 == v30) && v29 == v31
        || (v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v30, v31, 0), result = 0, (v32 & 1) != 0))
      {
        v33 = type metadata accessor for ToggleCellModel(0);
        sub_23A70((uint64_t)a1 + *(int *)(v33 + 32), (uint64_t)v18);
        sub_23A70((uint64_t)a2 + *(int *)(v33 + 32), (uint64_t)v15);
        v34 = (uint64_t)&v9[*(int *)(v7 + 48)];
        sub_23A70((uint64_t)v18, (uint64_t)v9);
        sub_23A70((uint64_t)v15, v34);
        v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v35((uint64_t)v9, 1, v4) == 1)
        {
          sub_1459C((uint64_t)v15, (uint64_t *)&unk_3B8790);
          sub_1459C((uint64_t)v18, (uint64_t *)&unk_3B8790);
          if (v35(v34, 1, v4) == 1)
          {
            sub_1459C((uint64_t)v9, (uint64_t *)&unk_3B8790);
            return 1;
          }
        }
        else
        {
          sub_23A70((uint64_t)v9, (uint64_t)v12);
          if (v35(v34, 1, v4) != 1)
          {
            v36 = v41;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v41, v34, v4);
            v37 = sub_F1C0(&qword_3C3F60, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics, (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
            v38 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v36, v4, v37);
            v39 = *(void (**)(char *, uint64_t))(v5 + 8);
            v39(v36, v4);
            sub_1459C((uint64_t)v15, (uint64_t *)&unk_3B8790);
            sub_1459C((uint64_t)v18, (uint64_t *)&unk_3B8790);
            v39(v12, v4);
            sub_1459C((uint64_t)v9, (uint64_t *)&unk_3B8790);
            return (v38 & 1) != 0;
          }
          sub_1459C((uint64_t)v15, (uint64_t *)&unk_3B8790);
          sub_1459C((uint64_t)v18, (uint64_t *)&unk_3B8790);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
        }
        sub_1459C((uint64_t)v9, &qword_3C3F58);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2528E0(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C3EB0, (void (*)(uint64_t))type metadata accessor for ToggleCellModel, (uint64_t)&protocol conformance descriptor for ToggleCellModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25291C()
{
  return sub_F1C0(&qword_3C3EB0, (void (*)(uint64_t))type metadata accessor for ToggleCellModel, (uint64_t)&protocol conformance descriptor for ToggleCellModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToggleCellModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = *(int *)(a3 + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    a1[6] = a2[6];
    v11 = type metadata accessor for ImpressionMetrics(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for ToggleCellModel(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ImpressionMetrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for ToggleCellModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[6] = a2[6];
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

_QWORD *assignWithCopy for ToggleCellModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a1[2];
  a1[2] = a2[2];
  swift_retain();
  swift_release(v6);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for ToggleCellModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a1[2];
  a1[2] = a2[2];
  swift_release(v7);
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_252FB8);
}

uint64_t sub_252FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_253044);
}

uint64_t sub_253044(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_2530BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_3025A0;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_3025A0;
  v4[3] = &unk_3025A0;
  sub_34090(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t static SeparatorStyle.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40)
        return 0;
      return (((a1 & 1) == 0) ^ a2) & 1;
    }
    if (a1 == 128)
    {
      if (a2 == 128)
        return 1;
    }
    else if (a2 == 129)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return (((a1 & 1) == 0) ^ a2) & 1;
  }
  return 0;
}

uint64_t sub_2531B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (!(v2 >> 6))
  {
    if (v3 < 0x40)
      return (((v2 & 1) == 0) ^ v3) & 1;
    return 0;
  }
  if (v2 >> 6 == 1)
  {
    if ((v3 & 0xC0) != 0x40)
      return 0;
    return (((v2 & 1) == 0) ^ v3) & 1;
  }
  if (v2 == 128)
  {
    if (v3 != 128)
      return 0;
  }
  else if (v3 != 129)
  {
    return 0;
  }
  return 1;
}

uint64_t getEnumTagSinglePayload for SeparatorStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SeparatorStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_25330C + 4 * byte_3025BD[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_253340 + 4 * byte_3025B8[v4]))();
}

uint64_t sub_253340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_253348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x253350);
  return result;
}

uint64_t sub_253368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x253370);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_253374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_25337C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_253388(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return v1 & 1 | 2u;
}

_BYTE *sub_2533A4(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = a2 & 1 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for SeparatorStyle()
{
  return &type metadata for SeparatorStyle;
}

BOOL UITraitCollection.interfaceMode.getter()
{
  void *v0;

  return objc_msgSend(v0, "horizontalSizeClass") == (char *)&dword_0 + 2;
}

BOOL static UITraitCollection.interfaceMode.getter()
{
  id v0;
  char *v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = (char *)objc_msgSend(v0, "horizontalSizeClass");

  return v1 == (_BYTE *)&dword_0 + 2;
}

_QWORD *sub_253460(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1807B0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4);
      }
      else
      {
        v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
        swift_retain();
      }
      v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid);
      v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid + 8);
      swift_bridgeObjectRetain();
      swift_release(v5);
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_1807B0(v8 > 1, v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v6;
      v10[5] = v7;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2535D4(_QWORD *a1, unint64_t a2)
{
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;

  v2 = a2;
  if (a2 >> 62)
  {
LABEL_29:
    if (v2 < 0)
      v26 = v2;
    else
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v4)
      goto LABEL_3;
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_33;
LABEL_3:
  v29 = v2;
  v30 = v2 & 0xC000000000000001;
  v5 = 4;
  v28 = v4;
  while (1)
  {
    v7 = v5 - 4;
    if (v30)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4);
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_26;
    }
    else
    {
      v8 = *(_QWORD *)(v2 + 8 * v5);
      swift_retain();
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid);
    v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid + 8);
    v12 = a1[2];
    swift_bridgeObjectRetain();
    if (v12)
    {
      sub_29724(v11, v10);
      if ((v13 & 1) != 0)
      {
        swift_release(v8);
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    v2 = sub_29724(v11, v10);
    v16 = a1[2];
    v17 = (v15 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_27;
    v19 = v15;
    if (a1[3] < v18)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v15 & 1) == 0)
        goto LABEL_22;
    }
    else
    {
      sub_231B94();
      if ((v19 & 1) == 0)
      {
LABEL_22:
        a1[((unint64_t)v2 >> 6) + 8] |= 1 << v2;
        v22 = (uint64_t *)(a1[6] + 16 * v2);
        *v22 = v11;
        v22[1] = v10;
        *(_QWORD *)(a1[7] + 8 * v2) = v8;
        v23 = a1[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_28;
        a1[2] = v25;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
LABEL_4:
    v6 = a1[7];
    swift_release(*(_QWORD *)(v6 + 8 * v2));
    *(_QWORD *)(v6 + 8 * v2) = v8;
LABEL_5:
    swift_release(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v28;
    v2 = v29;
LABEL_6:
    ++v5;
    if (v9 == v4)
      goto LABEL_33;
  }
  sub_22E6A4(v18, isUniquelyReferenced_nonNull_native);
  v20 = sub_29724(v11, v10);
  if ((v19 & 1) == (v21 & 1))
  {
    v2 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_22;
    goto LABEL_4;
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_253854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BYTE v29[24];
  _BYTE v30[72];
  _BYTE v31[72];
  _BYTE v32[72];

  v1 = v0;
  v2 = ((uint64_t (*)(void))EpisodeListSettings.sort.getter)();
  v3 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  v4 = swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v32, 32, 0);
  v5 = EpisodeListSettings.sort.getter(v4);
  swift_endAccess(v32);
  v6 = EpisodeSortType.rawValue.getter(v2);
  v8 = v7;
  v9 = EpisodeSortType.rawValue.getter(v5);
  if (v6 == v9 && v8 == v10)
  {
    v13 = swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease();
    v13 = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      sub_1A0A14(v1 + 176, (uint64_t)v32);
      v14 = swift_beginAccess(v3, v31, 32, 0);
      v15 = EpisodeListSettings.sort.getter(v14);
      swift_endAccess(v31);
      v13 = EpisodeListType.sortTypeFromUserDefaults.setter(v15);
    }
  }
  v16 = EpisodeListSettings.pubDateLimit.getter(v13);
  swift_beginAccess(v3, v31, 32, 0);
  v18 = EpisodeListSettings.pubDateLimit.getter(v17);
  v19 = swift_endAccess(v31);
  if (v16 != v18)
  {
    sub_1A0A14(v1 + 176, (uint64_t)v31);
    swift_beginAccess(v3, v30, 32, 0);
    v21 = EpisodeListSettings.pubDateLimit.getter(v20);
    swift_endAccess(v30);
    v19 = EpisodeListType.pubDateLimit.setter(v21);
  }
  v22 = EpisodeListSettings.hidePlayedEpisodes.getter(v19) & 1;
  swift_beginAccess(v3, v30, 32, 0);
  v24 = EpisodeListSettings.hidePlayedEpisodes.getter(v23) & 1;
  v25 = swift_endAccess(v30);
  if (v22 != v24)
  {
    sub_1A0A14(v1 + 176, (uint64_t)v30);
    swift_beginAccess(v3, v29, 32, 0);
    v27 = EpisodeListSettings.hidePlayedEpisodes.getter(v26);
    swift_endAccess(v29);
    v25 = EpisodeListType.hidePlayedEpisodes.setter(v27 & 1);
  }
  return sub_253A7C(v25);
}

uint64_t sub_253A7C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int8 *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  int8x16_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38[24];

  v1 = v0;
  v2 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v2);
  v4 = (unint64_t *)&v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for HeaderButtonItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)&v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v38[-v10 - 8];
  v12 = &v0->i8[OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar];
  swift_beginAccess(v12, v38, 0, 0);
  v14 = *(void (**)(uint64_t))v12;
  v13 = *((_QWORD *)v12 + 1);
  v15 = swift_retain();
  v14(v15);
  swift_release(v13);
  v16 = v1[15].u8[0];
  if (v16 == 9)
  {
    if (v1[11].i64[0] == 2)
    {
      v25 = vorrq_s8(v1[13], v1[14]);
      if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)) | v1[12].i64[1] | v1[12].i64[0] | v1[11].i64[1]))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8800);
        v27 = *(unsigned __int8 *)(v6 + 80);
        v28 = (v27 + 32) & ~v27;
        v29 = swift_allocObject(v26, v28 + *(_QWORD *)(v6 + 72), v27 | 7);
        *(_OWORD *)(v29 + 16) = xmmword_2EA0D0;
        swift_storeEnumTagMultiPayload(v29 + v28, v5, 10);
        v37 = (_QWORD *)v29;
        CurrentValueSubject.send(_:)();
        return swift_bridgeObjectRelease();
      }
    }
    goto LABEL_8;
  }
  if (v16 != 8
    || (v17 = *(uint64_t *)((char *)v1->i64 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail)) == 0)
  {
LABEL_8:
    sub_25B36C(v4);
    if (*(_QWORD *)(*(unint64_t *)((char *)v4 + *(int *)(v2 + 32)) + 16))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8800);
      v32 = *(unsigned __int8 *)(v6 + 80);
      v33 = (v32 + 32) & ~v32;
      v34 = swift_allocObject(v31, v33 + *(_QWORD *)(v6 + 72), v32 | 7);
      *(_OWORD *)(v34 + 16) = xmmword_2EA0D0;
      v35 = v34 + v33;
      v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B27F8) + 48);
      sub_14510((uint64_t)v4, v35, type metadata accessor for ActionMenu);
      *(_BYTE *)(v35 + v36) = 2;
      swift_storeEnumTagMultiPayload(v35, v5, 6);
      v37 = (_QWORD *)v34;
      CurrentValueSubject.send(_:)();
      swift_bridgeObjectRelease();
      v23 = (uint64_t)v4;
      v24 = type metadata accessor for ActionMenu;
    }
    else
    {
      v37 = _swiftEmptyArrayStorage;
      CurrentValueSubject.send(_:)();
      v24 = type metadata accessor for ActionMenu;
      v23 = (uint64_t)v4;
    }
    return sub_145D8(v23, v24);
  }
  swift_retain();
  v18 = PodcastDetail.lockup.getter();
  v8[3] = type metadata accessor for LibraryShowLockup(0);
  v8[4] = sub_F1C0(&qword_3BF030, (void (*)(uint64_t))type metadata accessor for LibraryShowLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  swift_release(v17);
  *v8 = v18;
  swift_storeEnumTagMultiPayload(v8, v5, 5);
  sub_3C56C((uint64_t)v8, (uint64_t)v11, type metadata accessor for HeaderButtonItem);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8800);
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v19, v21 + *(_QWORD *)(v6 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_2EA0D0;
  sub_14510((uint64_t)v11, v22 + v21, type metadata accessor for HeaderButtonItem);
  v37 = (_QWORD *)v22;
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v11;
  v24 = type metadata accessor for HeaderButtonItem;
  return sub_145D8(v23, v24);
}

uint64_t ModernEpisodesPresenter.pageHeader.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageHeader));
}

uint64_t ModernEpisodesPresenter.dismiss.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t ModernEpisodesPresenter.dismiss.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*ModernEpisodesPresenter.dismiss.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.headerButtonItems.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_headerButtonItems));
}

uint64_t sub_253F14@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess(v3, v8, 0, 0);
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject(&unk_38C7A0, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_3B570;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_253F94(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t (*v7)();
  char v9[24];

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_38C778, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)())(*a2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = v6[1];
  *v6 = sub_3B570;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release(v7);
}

uint64_t ModernEpisodesPresenter.rebuildMenuBar.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t ModernEpisodesPresenter.rebuildMenuBar.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*ModernEpisodesPresenter.rebuildMenuBar.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.refreshControls.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls))
    __asm { BR              X12 }
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls);
  swift_retain();
  return v1;
}

void sub_2541D0(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[27];
  v3 = v1[23];
  v4 = v1[28] | v1[29];
  v5 = v1[26] | v1[25] | v1[24];
  if (v4 | a1 | v2 | v5 | v3)
  {
    if ((v6 = v4 | v2 | v5 | v3, a1 == 1) && !v6 || (a1 & 0xFFFFFFFFFFFFFFFELL) == 2 && !v6)
      JUMPOUT(0x254170);
  }
  JUMPOUT(0x25416CLL);
}

uint64_t ModernEpisodesPresenter.refreshControls.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = a1;
  return swift_release(v2);
}

uint64_t (*ModernEpisodesPresenter.refreshControls.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ModernEpisodesPresenter.refreshControls.getter();
  return sub_25427C;
}

uint64_t sub_25427C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = v2;
  return swift_release(v3);
}

uint64_t ModernEpisodesPresenter.pageContent.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageContent));
}

uint64_t ModernEpisodesPresenter.paginatedPublisher.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t ModernEpisodesPresenter.paginatedPublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*ModernEpisodesPresenter.paginatedPublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.Configuration.episodeListType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_25438C(v1, a1);
}

uint64_t sub_25438C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for EpisodeListType - 1) + 16))(a2, a1);
  return a2;
}

uint64_t ModernEpisodesPresenter.Configuration.episodeListType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2543D0(a1, v1);
}

uint64_t sub_2543D0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for EpisodeListType - 1) + 40))(a2, a1);
  return a2;
}

uint64_t ModernEpisodesPresenter.Configuration.showsPageHeader.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t ModernEpisodesPresenter.Configuration.showsPageHeader.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

void (__swiftcall *ModernEpisodesPresenter.Configuration.showsPageHeader.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

double ModernEpisodesPresenter.Configuration.init(episodeListType:showsPageHeader:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  char v12;

  sub_1A0A14(a1, (uint64_t)v9);
  v5 = v12;
  v6 = v9[1];
  *(_OWORD *)a3 = v9[0];
  *(_OWORD *)(a3 + 16) = v6;
  result = *(double *)&v10;
  v8 = v11;
  *(_OWORD *)(a3 + 32) = v10;
  *(_OWORD *)(a3 + 48) = v8;
  *(_BYTE *)(a3 + 64) = v5;
  *(_BYTE *)(a3 + 65) = a2;
  return result;
}

uint64_t ModernEpisodesPresenter.__allocating_init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  ModernEpisodesPresenter.init(asPartOf:with:)(a1, a2);
  return v5;
}

uint64_t ModernEpisodesPresenter.init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (__swiftcall **v36)();
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _BYTE *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  Swift::String *boxed_opaque_existential_2Tm;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  __int128 v116;
  _BYTE *v117;
  _BYTE v119[12];
  int v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  _BYTE *v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  char *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  void (*v143)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  char v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  char v165;
  Swift::String v166;

  v3 = v2;
  v6 = type metadata accessor for ModernShelf(0);
  v143 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v6 - 8);
  __chkstk_darwin(v6);
  v131 = &v119[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v8);
  v130 = &v119[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v10);
  v129 = &v119[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v12);
  v126 = &v119[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v124);
  v125 = (uint64_t *)&v119[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v15);
  v127 = &v119[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v123 = type metadata accessor for UUID(0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = &v119[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v18);
  v142 = &v119[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v20);
  v128 = &v119[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v141 = type metadata accessor for EpisodeListSettings(0);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = &v119[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B23B8);
  v23 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v25 = &v119[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v26);
  v28 = &v119[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v149 = *(_QWORD *)a2;
  v136 = *(_QWORD *)(a2 + 8);
  v135 = *(_QWORD *)(a2 + 16);
  v144 = *(_QWORD *)(a2 + 24);
  v145 = *(_QWORD *)(a2 + 32);
  v146 = *(_QWORD *)(a2 + 40);
  v148 = *(_QWORD *)(a2 + 48);
  v147 = *(_QWORD **)(a2 + 56);
  v138 = *(unsigned __int8 *)(a2 + 64);
  v120 = *(unsigned __int8 *)(a2 + 65);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty) = 2;
  v29 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageHeader;
  v158 = 0uLL;
  LODWORD(v159) = 0;
  BYTE4(v159) = 5;
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8770);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = CurrentValueSubject.init(_:)(&v158);
  v133 = v29;
  *(_QWORD *)(v3 + v29) = v31;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_hideAllHeaderSeparators) = 1;
  v32 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss;
  LOBYTE(v158) = 0;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B20D0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  *(_QWORD *)(v3 + v32) = CurrentValueSubject.init(_:)(&v158);
  v34 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_headerButtonItems;
  *(_QWORD *)&v158 = _swiftEmptyArrayStorage;
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8780);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  *(_QWORD *)(v3 + v34) = CurrentValueSubject.init(_:)(&v158);
  v36 = (void (__swiftcall **)())(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  *v36 = FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
  v36[1] = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = 0;
  v37 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageContent;
  *v28 = 0;
  swift_storeEnumTagMultiPayload(v28, v26, 0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B27B0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  *(_QWORD *)(v3 + v37) = CurrentValueSubject.init(_:)(v28);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail) = 0;
  v39 = (void (*)(uint64_t, uint64_t, uint64_t, int *))*((_QWORD *)v143 + 7);
  v134 = (int *)v6;
  v143 = v39;
  v39(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf, 1, 1, (int *)v6);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves) = _swiftEmptyArrayStorage;
  v40 = v136;
  v41 = v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter__episodeOrderingFrozen;
  LOBYTE(v158) = 0;
  Published.init(initialValue:)(&v158, &type metadata for Bool);
  v42 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v23 + 32);
  v43 = v149;
  v42(v41, v25, v137);
  *(_QWORD *)(v3 + 16) = a1;
  v44 = type metadata accessor for FreezableContentSubject();
  swift_retain();
  BaseObjectGraph.inject<A>(_:)(&v158, v44, v44);
  *(_QWORD *)(v3 + 24) = v158;
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF760);
  BaseObjectGraph.inject<A>(_:)(&v158, v45, v45);
  *(_OWORD *)(v3 + 32) = v158;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC3F0);
  BaseObjectGraph.inject<A>(_:)(&v158, v46, v46);
  sub_F4D8(&v158, v3 + 48);
  v47 = type metadata accessor for BookmarksController();
  BaseObjectGraph.inject<A>(_:)(&v158, v47, v47);
  *(_QWORD *)(v3 + 88) = v158;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2778);
  BaseObjectGraph.inject<A>(_:)(&v158, v48, v48);
  sub_F4D8(&v158, v3 + 96);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8E00);
  v137 = a1;
  BaseObjectGraph.inject<A>(_:)(&v158, v49, v49);
  sub_F4D8(&v158, v3 + 136);
  *(_QWORD *)&v158 = v43;
  *((_QWORD *)&v158 + 1) = v40;
  v50 = v135;
  v51 = v144;
  v159 = v135;
  v160 = v144;
  v52 = v145;
  v53 = v146;
  v161 = v145;
  v162 = v146;
  v54 = v148;
  v55 = v147;
  v163 = v148;
  v164 = v147;
  LODWORD(v28) = v138;
  v165 = v138;
  v132 = v3 + 176;
  sub_1A0A14((uint64_t)&v158, v3 + 176);
  v56 = v43;
  v57 = v40;
  v58 = v40;
  v59 = v50;
  v60 = v50;
  v61 = v52;
  sub_898F4(v56, v57, v59, v51, v52, v53, v54, (uint64_t)v55, (char)v28);
  v62 = (int)v28;
  v63 = v60;
  v64 = v3;
  v65 = v63;
  v66 = sub_898F4(v149, v58, v63, v51, v61, v53, v54, (uint64_t)v55, (char)v28);
  v67 = EpisodeListType.sortTypeFromUserDefaults.getter(v66);
  v68 = EpisodeListType.pubDateLimit.getter();
  v69 = EpisodeListType.hidePlayedEpisodes.getter();
  v70 = v139;
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(&v158, v67, v68, v69 & 1, 0, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v140 + 32))(v64 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v70, v141);
  EpisodeListType.title.getter();
  if (v72)
  {
    v73 = v71;
    v74 = v72;
    sub_87198(v149, v58, v65, v144, v145, v146, v148, (uint64_t)v147, v62);
    if ((v120 & 1) != 0)
    {
      if (v62)
        v75 = 3;
      else
        v75 = 0;
      v154 = v73;
      v155 = v74;
      v156 = 0;
      v157 = v75;
      swift_bridgeObjectRetain();
      CurrentValueSubject.value.setter(&v154);
      swift_bridgeObjectRelease();
      v76 = v143;
      v77 = v132;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_87198(v149, v58, v65, v144, v145, v146, v148, (uint64_t)v147, v62);
  }
  v76 = v143;
  v77 = v132;
  v154 = 0;
  v155 = 0;
  v156 = 0;
  v157 = 5;
  CurrentValueSubject.value.setter(&v154);
LABEL_10:
  v78 = sub_1A0A14(v77, (uint64_t)&v154);
  v79 = EpisodeListType.libraryShowUUID.getter(v78);
  if (v80)
  {
    v81 = v79;
    v82 = v80;
    v83 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v166._object = (void *)0x8000000000314A80;
    v84._countAndFlagsBits = 0x6C6C754620656553;
    v84._object = (void *)0xED0000776F685320;
    v85._countAndFlagsBits = 0;
    v85._object = (void *)0xE000000000000000;
    v166._countAndFlagsBits = 0xD00000000000001CLL;
    v86 = NSLocalizedString(_:tableName:bundle:value:comment:)(v84, (Swift::String_optional)0, (NSBundle)v83, v85, v166);

    v87 = type metadata accessor for Header(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v142, 1, 1, v87);
    v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
    v89 = swift_allocObject(v88, 72, 7);
    *(_OWORD *)(v89 + 16) = xmmword_2EA0D0;
    v147 = (_QWORD *)(v89 + 32);
    v90 = v121;
    UUID.init()(v89);
    v149 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    v148 = v91;
    (*(void (**)(_BYTE *, uint64_t))(v122 + 8))(v90, v123);
    v92 = type metadata accessor for ArtworkModel(0);
    v93 = (uint64_t)v127;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v127, 1, 1, v92);
    v94 = (uint64_t)v125;
    *v125 = v81;
    *(_QWORD *)(v94 + 8) = v82;
    swift_storeEnumTagMultiPayload(v94, v124, 17);
    LOBYTE(v151) = 0;
    v150 = 0;
    v95 = swift_bridgeObjectRetain();
    v96 = (uint64_t)v126;
    static ActionMetrics.notInstrumented.getter(v95);
    v97 = type metadata accessor for FlowAction(0);
    swift_allocObject(v97, *(unsigned int *)(v97 + 48), *(unsigned __int16 *)(v97 + 52));
    v98 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v94, 0, 0, v86._countAndFlagsBits, (uint64_t)v86._object, (char *)&v151, 0, 48, &v150, v96);
    *((_QWORD *)&v152 + 1) = v97;
    v153 = sub_F1C0((unint64_t *)&qword_3B0C40, (void (*)(uint64_t))type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)&v151 = v98;
    v99 = (int *)type metadata accessor for Link(0);
    *(_QWORD *)(v89 + 56) = v99;
    *(_QWORD *)(v89 + 64) = sub_F1C0(&qword_3B0C48, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
    boxed_opaque_existential_2Tm = (Swift::String *)__swift_allocate_boxed_opaque_existential_2Tm(v147);
    v101 = (char *)boxed_opaque_existential_2Tm + v99[10];
    v102 = type metadata accessor for ImpressionMetrics(0);
    v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56);
    v103(v101, 1, 1, v102);
    v104 = (char *)boxed_opaque_existential_2Tm + v99[11];
    *((_QWORD *)v104 + 4) = 0;
    *(_OWORD *)v104 = 0u;
    *((_OWORD *)v104 + 1) = 0u;
    v105 = v148;
    boxed_opaque_existential_2Tm->_countAndFlagsBits = v149;
    boxed_opaque_existential_2Tm->_object = (void *)v105;
    boxed_opaque_existential_2Tm[1] = v86;
    boxed_opaque_existential_2Tm[2]._countAndFlagsBits = 0;
    boxed_opaque_existential_2Tm[2]._object = 0;
    sub_15BD4(v93, (uint64_t)boxed_opaque_existential_2Tm + v99[7], &qword_3BEB70);
    *((_BYTE *)&boxed_opaque_existential_2Tm->_countAndFlagsBits + v99[8]) = 48;
    sub_15BD4((uint64_t)&v151, (uint64_t)boxed_opaque_existential_2Tm + v99[9], &qword_3B0C50);
    v106 = type metadata accessor for URL(0);
    v107 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56);
    v108 = (uint64_t)v129;
    v107(v129, 1, 1, v106);
    v153 = 0;
    v152 = 0u;
    v151 = 0u;
    v109 = (uint64_t)v130;
    v103(v130, 1, 1, v102);
    v110 = v134;
    v111 = v134[8];
    v112 = v131;
    v131[v111] = 3;
    v113 = (uint64_t)v112 + v110[9];
    v107((_BYTE *)v113, 1, 1, v106);
    *v112 = 0x6B6E694C776F6853;
    v112[1] = 0xE800000000000000;
    sub_15BD4((uint64_t)v142, (uint64_t)v112 + v110[5], &qword_3B0C38);
    v114 = (char *)v112 + v110[6];
    *(_WORD *)v114 = 16;
    *((_WORD *)v114 + 3) = 256;
    *(_DWORD *)(v114 + 2) = 0;
    *((_QWORD *)v114 + 1) = 1;
    *(_QWORD *)((char *)v112 + v110[7]) = v89;
    sub_3C454(v108, v113, &qword_3B4370);
    *((_BYTE *)v112 + v110[10]) = 1;
    *((_BYTE *)v112 + v110[11]) = 0;
    v115 = (uint64_t)v112 + v110[12];
    if (*((_QWORD *)&v152 + 1))
    {
      sub_F4D8(&v151, v115);
    }
    else
    {
      v116 = (unint64_t)v152;
      *(_OWORD *)v115 = v151;
      *(_OWORD *)(v115 + 16) = v116;
      *(_QWORD *)(v115 + 32) = v153;
    }
    sub_15BD4(v109, (uint64_t)v112 + v110[13], (uint64_t *)&unk_3B8790);
    *((_BYTE *)v112 + v111) = 3;
    v117 = v128;
    sub_3C56C((uint64_t)v112, (uint64_t)v128, type metadata accessor for ModernShelf);
    swift_release(v137);
    v143((uint64_t)v117, 0, 1, v110);
    sub_15BD4((uint64_t)v117, v64 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink, &qword_3B8660);
  }
  else
  {
    swift_release(v137);
    v76(v64 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink, 1, 1, v134);
  }
  return v64;
}

uint64_t ModernEpisodesPresenter.interactionContextPage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  swift_beginAccess(v3, v8, 0, 0);
  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  v6 = type metadata accessor for InteractionContext.Page(0);
  return swift_storeEnumTagMultiPayload(a1, v6, 1);
}

Swift::Void __swiftcall ModernEpisodesPresenter.viewDidLoad()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  char v61[24];
  _BYTE v62[72];
  _QWORD v63[8];
  char v64;

  v1 = v0;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3FA8);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v56 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3FB0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3FB8);
  v53 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255A28();
  sub_1A0A14((uint64_t)(v0 + 22), (uint64_t)v62);
  sub_1A0A14((uint64_t)v62, (uint64_t)v63);
  if (v64 == 8)
  {
    v10 = v63[0];
    v11 = v63[1];
    v12 = v1[5];
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 304))(v10, v11, ObjectType, v12);
    v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail);
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail) = v14;
    swift_release(v15);
  }
  sub_253A7C();
  v16 = v1[5];
  v17 = swift_getObjectType();
  v59 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 368))(v62, v17, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 376))(v59, 50, v17, v16);
  v19 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher, v61, 1, 0);
  v20 = *v19;
  *v19 = v18;
  v52 = v18;
  swift_retain();
  swift_release(v20);
  v60[0] = v18;
  KeyPath = swift_getKeyPath(&unk_302630);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEEC0);
  v55 = v22;
  v54 = sub_32914(&qword_3C2BA8, &qword_3BEEC0, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  Publisher.map<A>(_:)(KeyPath, v22, v54);
  swift_release(KeyPath);
  v23 = sub_32914(&qword_3C3FC0, &qword_3C3FB0, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  Publisher<>.removeDuplicates()(v3, v23, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v24 = sub_32914(&qword_3C3FC8, &qword_3C3FB8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v25 = Publisher.eraseToAnyPublisher()(v7, v24);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v7);
  v60[0] = v25;
  v26 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v26 + 16);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3628);
  v28 = sub_32914(&qword_3B3638, &qword_3B3628, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v29 = Publisher<>.sink(receiveValue:)(sub_260390, v26, v27, v28);
  swift_release(v26);
  v30 = (char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions, v60, 33, 0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v53 = v31;
  v51 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v30, v31, v51);
  swift_endAccess(v60);
  swift_release(v29);
  v32 = sub_255C6C((uint64_t)v62, v25);
  v33 = sub_2561A8(v59, v25);
  v35 = v1[20];
  v34 = v1[21];
  __swift_project_boxed_opaque_existential_1(v1 + 17, v35);
  v36 = dispatch thunk of TipProvider.tips.getter(v35, v34);
  v60[0] = v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA850);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3FD0);
  v39 = sub_32914(&qword_3BA860, &qword_3BA850, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v40 = v56;
  Publisher.map<A>(_:)(sub_25668C, 0, v37, v38, v39);
  swift_release(v36);
  v41 = sub_32914(&qword_3C3FD8, &qword_3C3FA8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v42 = v58;
  v43 = Publisher.eraseToAnyPublisher()(v58, v41);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v42);
  v44 = sub_2566C8();
  v45 = v52;
  v60[0] = v52;
  v46 = Publisher.eraseToAnyPublisher()(v55, v54);
  sub_256A10(v32, v43, v44, v46, v33);
  swift_release(v44);
  swift_release(v46);
  v60[0] = ModernEpisodesPresenter.refreshControls.getter();
  v47 = v1[3];
  swift_retain();
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2770);
  v49 = sub_32914(&qword_3B5D68, &qword_3B2770, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v50 = Publisher<>.sink(receiveValue:)(sub_98CB4, v47, v48, v49);
  swift_release(v47);
  swift_release(v60[0]);
  swift_beginAccess(v30, v60, 33, 0);
  AnyCancellable.store<A>(in:)(v30, v53, v51);
  swift_endAccess(v60);
  swift_release(v59);
  swift_release(v45);
  swift_release(v25);
  swift_release(v32);
  swift_release(v33);
  swift_release(v43);
  swift_release(v50);
}

uint64_t sub_255A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v17[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5D70);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)(v0 + 24);
  v6 = type metadata accessor for FreezableContentSubject();
  v7 = sub_F1C0(&qword_3B3ED0, (void (*)(uint64_t))type metadata accessor for FreezableContentSubject, (uint64_t)&protocol conformance descriptor for FreezableContentSubject);
  v8 = sub_7265C();
  Publisher<>.removeDuplicates()(v6, v7, v8);
  v9 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v9 + 16);
  v10 = sub_32914(&qword_3B5D78, &qword_3B5D70, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v11 = Publisher<>.sink(receiveValue:)(sub_262450, v9, v2, v10);
  swift_release(v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions;
  swift_beginAccess(v12, v17, 33, 0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v14 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v12, v13, v14);
  swift_endAccess(v17);
  return swift_release(v11);
}

uint64_t sub_255BD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty);
    *(_BYTE *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty) = v2 == 0;
    if (v6 == 2 || ((v6 & 1) == 0) == (v2 == 0))
      sub_253A7C();
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_255C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;

  v3 = v2;
  v52 = a2;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v61);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA8C8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v11);
  v60 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4300);
  v53 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4308);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4310);
  v58 = *(_QWORD *)(v18 - 8);
  v59 = v18;
  __chkstk_darwin(v18);
  v56 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v21 = EpisodeListType.libraryShowUUID.getter(v20);
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    v25 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 312))(v23, v24, ObjectType, v25);
    swift_bridgeObjectRelease();
    v63 = v27;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4318);
    v29 = sub_32914(&qword_3C4320, &qword_3C4318, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    v30 = (void *)Publisher.makeOptional.getter(v28, v29);
    swift_release(v27);
    v62 = v52;
    v63 = v30;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4328);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3628);
    v33 = sub_32914(&qword_3C4330, &qword_3C4328, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v34 = sub_32914(&qword_3B3638, &qword_3B3628, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.combineLatest<A>(_:)(&v62, v31, v32, v33, v34);
    swift_release(v30);
    v35 = swift_allocObject(&unk_38C908, 81, 7);
    v36 = v54;
    sub_1A0A14(v54, v35 + 16);
    v37 = swift_allocObject(&unk_38C930, 32, 7);
    *(_QWORD *)(v37 + 16) = sub_2623FC;
    *(_QWORD *)(v37 + 24) = v35;
    sub_F3548(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_898F4);
    v38 = sub_32914(&qword_3C4338, &qword_3C4300, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    Publisher.map<A>(_:)(sub_262404, v37, v13, v61, v38);
    swift_release(v37);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v13);
    v39 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
    v63 = (id)static OS_dispatch_queue.main.getter(v39);
    v40 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v41 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v60, 1, 1, v40);
    v42 = sub_32914(&qword_3C4340, &qword_3C4308, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v43 = sub_E50C0((unint64_t *)&qword_3B2B60, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v45 = v56;
    v44 = v57;
    Publisher.receive<A>(on:options:)(&v63, v41, v57, v39, v42, v43);
    sub_1459C(v41, &qword_3B2B18);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v44);
    v46 = sub_32914(&qword_3C4348, &qword_3C4310, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v47 = v59;
    v48 = Publisher.eraseToAnyPublisher()(v59, v46);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v45, v47);
  }
  else
  {
    v49 = type metadata accessor for ModernShelf(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v6, 1, 1, v49);
    Just.init(_:)(v6, v61);
    v50 = sub_32914(&qword_3BA8D0, &qword_3BA8C8, (uint64_t)&protocol conformance descriptor for Just<A>);
    v48 = Publisher.eraseToAnyPublisher()(v7, v50);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v48;
}

uint64_t sub_2561A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[80];

  v45 = a2;
  v40 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4290);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C42A8);
  v47 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v46 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C42B0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C42B8);
  v41 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C42C0);
  v42 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C42C8);
  v43 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v2;
  v19 = sub_1A0A14(v2 + 176, (uint64_t)v54);
  if ((EpisodeListType.showsHidePlayedEpisodesControls.getter(v19) & 1) != 0)
  {
    v53 = v40;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2B90);
    v21 = sub_32914(&qword_3C2B98, &qword_3C2B90, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v22 = sub_F1C0(&qword_3C42D0, (void (*)(uint64_t))&type metadata accessor for EpisodeListSettings, (uint64_t)&protocol conformance descriptor for EpisodeListSettings);
    Publisher<>.removeDuplicates()(v20, v21, v22);
    v23 = swift_allocObject(&unk_38C550, 24, 7);
    swift_weakInit(v23 + 16);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B3628);
    v25 = sub_32914(&qword_3C42D8, &qword_3C42B8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    Publisher.compactMap<A>(_:)(sub_2623B4, v23, v10, v24, v25);
    swift_release(v23);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v10);
    v26 = sub_32914(&qword_3C42E0, &qword_3C42C0, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v27 = sub_32914(&qword_3B3638, &qword_3B3628, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher<>.switchToLatest()(v13, v26, v27);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v13);
    v28 = sub_32914(&qword_3C42E8, &qword_3C42C8, (uint64_t)&protocol conformance descriptor for Publishers.SwitchToLatest<A, B>);
    v29 = Publisher.bufferedMulticast()(v16, v28);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v16);
    v53 = v29;
    v30 = Publisher.eraseToAnyPublisher()(v24, v27);
    swift_release(v29);
    v31 = v46;
    v52 = v45;
    v53 = v30;
    Publisher.combineLatest<A>(_:)(&v52, v24, v24, v27, v27);
    v32 = sub_32914(&qword_3C42F0, &qword_3C42A8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    v34 = v48;
    v33 = v49;
    Publisher.compactMap<A>(_:)(sub_25B358, 0, v49, &type metadata for Bool, v32);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v33);
    v35 = sub_32914(&qword_3C42F8, &qword_3C42B0, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v36 = v51;
    v37 = Publisher.eraseToAnyPublisher()(v51, v35);
    swift_release(v30);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v36);
  }
  else
  {
    LOBYTE(v53) = 0;
    Just.init(_:)(&v53, &type metadata for Bool);
    v38 = sub_32914(&qword_3C4298, &qword_3C4290, (uint64_t)&protocol conformance descriptor for Just<A>);
    v37 = Publisher.eraseToAnyPublisher()(v3, v38);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v37;
}

uint64_t sub_25668C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_2604F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2566C8()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int8x16_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v1 = type metadata accessor for ObserverQueue(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4B48);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4B50);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4290);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0[11].i64[0];
  v14 = v0[11].i64[1];
  v16 = v0[15].u8[0];
  if (v16 == 1)
  {
    v20 = v0[2].i64[1];
    ObjectType = swift_getObjectType();
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 264))(v15, v14, ObjectType, v20);
LABEL_7:
    v25 = v22;
    swift_storeEnumTagMultiPayload(v3, v1, 2);
    v26 = sub_830E4((uint64_t)v3);
    sub_145D8((uint64_t)v3, type metadata accessor for ObserverQueue);
    v38 = v26;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4BB8);
    v28 = sub_32914(&qword_3B4BC0, &qword_3B4BB8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.map<A>(_:)(sub_2588D8, 0, v27, &type metadata for Bool, v28);
    swift_release(v26);
    v29 = sub_32914(&qword_3B4BC8, &qword_3B4B48, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v30 = v35;
    Publisher<>.removeDuplicates()(v35, v29, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v30);
    v31 = sub_32914(&qword_3B4C10, &qword_3B4B50, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v32 = v37;
    v19 = Publisher.eraseToAnyPublisher()(v37, v31);
    swift_release(v25);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v32);
    return v19;
  }
  if (v16 == 9)
  {
    v17 = vorrq_s8(v0[13], v0[14]);
    if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)) | v0[12].i64[1] | v0[12].i64[0] | v14 | v15))
    {
      v23 = v0[2].i64[1];
      v24 = swift_getObjectType();
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 256))(v24, v23);
      goto LABEL_7;
    }
  }
  v39 = 0;
  Just.init(_:)(&v39, &type metadata for Bool);
  v18 = sub_32914(&qword_3C4298, &qword_3C4290, (uint64_t)&protocol conformance descriptor for Just<A>);
  v19 = Publisher.eraseToAnyPublisher()(v10, v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v19;
}

uint64_t sub_256A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97[4];

  v11 = *v5;
  v78 = v5 + 22;
  v89 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  v85 = *(_QWORD *)(v12 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  __chkstk_darwin(v12);
  v80 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ModernShelf(0);
  v83 = *(_QWORD *)(v14 - 8);
  v81 = *(_QWORD *)(v83 + 64);
  __chkstk_darwin(v14);
  v79 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v76 = (char **)((char *)&v71 - v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v18);
  v73 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B24C8);
  __chkstk_darwin(v72);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4248);
  v75 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v71 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4250);
  v84 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v91 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4258);
  v25 = *(_QWORD *)(v24 - 8);
  v87 = v24;
  v88 = v25;
  __chkstk_darwin(v24);
  v77 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92[0] = a1;
  v95 = a3;
  v96 = a2;
  v93 = a5;
  v94 = a4;
  swift_beginAccess((char *)v5 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter__episodeOrderingFrozen, v97, 33, 0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B23B8);
  Published.projectedValue.getter(v27);
  swift_endAccess(v97);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B36F0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4260);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2120);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E38);
  v32 = sub_32914(&qword_3B36F8, &qword_3B36F0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v33 = sub_32914(&qword_3C4268, &qword_3C4260, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v34 = sub_32914(&qword_3B2128, &qword_3B2120, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v35 = sub_32914(&qword_3C2E40, &qword_3C2E38, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v36 = sub_32914(&qword_3BCF28, &qword_3B24C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v37 = v71;
  Publishers.PFCombineLatest6.init(_:_:_:_:_:_:)(v92, &v96, &v95, &v94, &v93, v21, v28, v29, v30, v31, v30, v72, v32, v33, v34, v35, v34, v36);
  v38 = sub_327F8(0, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr);
  v97[0] = (id)static OS_dispatch_queue.main.getter(v38);
  v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v40 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v73, 1, 1, v39);
  v41 = sub_32914(&qword_3C4270, &qword_3C4248, (uint64_t)&protocol conformance descriptor for Publishers.PFCombineLatest6<A, B, C, D, E, F>);
  v42 = sub_E50C0((unint64_t *)&qword_3B2B60, (unint64_t *)&qword_3B8710, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v43 = v74;
  Publisher.receive<A>(on:options:)(v97, v40, v74, v38, v41, v42);
  sub_1459C(v40, &qword_3B2B18);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v43);
  sub_1A0A14((uint64_t)v78, (uint64_t)v97);
  v44 = v90 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink;
  sub_F3548((uint64_t)v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_898F4);
  v45 = v76;
  sub_257204(v76);
  v46 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v46 + 16);
  v47 = v80;
  sub_267BC(v44, v80, &qword_3B8660);
  v48 = v79;
  sub_3C56C((uint64_t)v45, v79, type metadata accessor for ModernShelf);
  v49 = *(unsigned __int8 *)(v85 + 80);
  v50 = (v49 + 24) & ~v49;
  v51 = (v86 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(unsigned __int8 *)(v83 + 80);
  v53 = (v52 + v51 + 65) & ~v52;
  v54 = (v81 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_38C8B8, v54 + 8, v49 | v52 | 7);
  *(_QWORD *)(v55 + 16) = v46;
  sub_15BD4(v47, v55 + v50, &qword_3B8660);
  sub_1A0A14((uint64_t)v97, v55 + v51);
  sub_3C56C(v48, v55 + v53, type metadata accessor for ModernShelf);
  *(_QWORD *)(v55 + v54) = v89;
  v56 = swift_allocObject(&unk_38C8E0, 32, 7);
  *(_QWORD *)(v56 + 16) = sub_262154;
  *(_QWORD *)(v56 + 24) = v55;
  v57 = type metadata accessor for PageContent(0);
  v58 = sub_32914(&qword_3C4278, &qword_3C4250, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v59 = v77;
  v60 = v82;
  v61 = v91;
  Publisher.compactMap<A>(_:)(sub_262244, v56, v82, v57, v58);
  swift_release(v56);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v61, v60);
  v62 = swift_allocObject(&unk_38C550, 24, 7);
  v63 = v90;
  swift_weakInit(v62 + 16);
  v64 = sub_32914(&qword_3C4280, &qword_3C4258, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v65 = v87;
  v66 = Publisher<>.sink(receiveValue:)(sub_26224C, v62, v87, v64);
  swift_release(v62);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v65);
  v67 = v63 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions;
  swift_beginAccess(v63 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions, v92, 33, 0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2088);
  v69 = sub_32914(&qword_3B2090, &qword_3B2088, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v67, v68, v69);
  swift_endAccess(v92);
  return swift_release(v66);
}

uint64_t sub_257204@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf, v14, 0, 0);
  sub_267BC(v9, (uint64_t)v8, &qword_3B8660);
  v10 = type metadata accessor for ModernShelf(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_3C56C((uint64_t)v8, (uint64_t)a1, type metadata accessor for ModernShelf);
  sub_1459C((uint64_t)v8, &qword_3B8660);
  sub_257388(a1);
  sub_14510((uint64_t)a1, (uint64_t)v5, type metadata accessor for ModernShelf);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v13, 33, 0);
  sub_3C454((uint64_t)v5, v9, &qword_3B8660);
  return swift_endAccess(v13);
}

uint64_t sub_257388@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, _QWORD, uint64_t, uint64_t);
  int *v67;
  uint64_t v68;
  _QWORD *boxed_opaque_existential_2Tm;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  uint64_t result;
  __int128 v86;
  char *v87;
  void *object;
  uint64_t countAndFlagsBits;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  _BYTE v104[17];
  __int128 v105;
  uint64_t v106;
  Swift::String v107;

  v97 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v1);
  v101 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ScalarDictionary(0);
  __chkstk_darwin(v3);
  v100 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsData.Configuration(0);
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v8);
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v11);
  v96 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowDestination(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v16);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v18;
  v19 = type metadata accessor for UUID(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v23);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v25;
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000014;
  v107._object = (void *)0xE000000000000000;
  v27._object = (void *)0x8000000000314C40;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v107._countAndFlagsBits = 0;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v107);
  countAndFlagsBits = v29._countAndFlagsBits;
  object = v29._object;

  v30 = type metadata accessor for Header(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v25, 1, 1, v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
  v32 = swift_allocObject(v31, 72, 7);
  v86 = xmmword_2EA0D0;
  v103 = v32;
  *(_OWORD *)(v32 + 16) = xmmword_2EA0D0;
  v93 = (_QWORD *)(v32 + 32);
  UUID.init()(v32);
  v33 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  v94 = v34;
  v95 = v33;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v35 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v18, 1, 1, v35);
  v36 = swift_storeEnumTagMultiPayload(v15, v13, 42);
  v37 = static MetricsTargetID.downloading.getter(v36);
  v39 = v38;
  v40 = static MetricsTargetType.link.getter(v37);
  v42 = v41;
  v43 = type metadata accessor for URL(0);
  v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v91 = v43;
  v44 = (uint64_t)v10;
  v90(v10, 1, 1, v43);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0930);
  v46 = type metadata accessor for MetricsData(0);
  v47 = swift_allocObject(v45, ((*(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v46 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80) | 7);
  *(_OWORD *)(v47 + 16) = v86;
  v48 = static MetricsActionType.navigate.getter();
  v50 = v49;
  static MetricsData.Configuration.podcasts.getter(v48);
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v37, v39, v40, v42, v48, v50, 0, 0, 0, 0, v10, &_swiftEmptyDictionarySingleton, v7);
  swift_bridgeObjectRelease();
  v51 = v7;
  v52 = v97;
  v53 = (uint64_t)v101;
  v54 = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v51, v99);
  v55 = v100;
  ScalarDictionary.init()(v54);
  v56 = (uint64_t)v96;
  ActionMetrics.init(data:custom:)(v47, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v44, &qword_3B4370);
  *(_WORD *)v104 = 0;
  v57 = type metadata accessor for FlowAction(0);
  swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
  v58 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v87, 0, 0, 0, 0, &v104[1], 0, 48, v104, v56);
  *((_QWORD *)&v105 + 1) = v57;
  v106 = sub_F1C0((unint64_t *)&qword_3B0C40, (void (*)(uint64_t))type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
  *(_QWORD *)&v104[1] = v58;
  v59 = static MetricsTargetType.link.getter(v106);
  v61 = v60;
  v62 = object;
  swift_bridgeObjectRetain();
  v63 = countAndFlagsBits;
  v64 = v53;
  static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)(0x64616F6C6E776F44, 0xEB00000000676E69, 0, 0, 0, 0, v59, v61, 0, 0, countAndFlagsBits, v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = type metadata accessor for ImpressionMetrics(0);
  v66 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
  v66(v53, 0, 1, v65);
  v67 = (int *)type metadata accessor for Link(0);
  v68 = v103;
  *(_QWORD *)(v103 + 56) = v67;
  *(_QWORD *)(v68 + 64) = sub_F1C0(&qword_3B0C48, (void (*)(uint64_t))type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v93);
  v70 = (char *)boxed_opaque_existential_2Tm + v67[11];
  *((_QWORD *)v70 + 4) = 0;
  *(_OWORD *)v70 = 0u;
  *((_OWORD *)v70 + 1) = 0u;
  v71 = v94;
  *boxed_opaque_existential_2Tm = v95;
  boxed_opaque_existential_2Tm[1] = v71;
  boxed_opaque_existential_2Tm[2] = v63;
  boxed_opaque_existential_2Tm[3] = v62;
  boxed_opaque_existential_2Tm[4] = 0;
  boxed_opaque_existential_2Tm[5] = 0;
  sub_15BD4((uint64_t)v92, (uint64_t)boxed_opaque_existential_2Tm + v67[7], &qword_3BEB70);
  *((_BYTE *)boxed_opaque_existential_2Tm + v67[8]) = 48;
  sub_15BD4((uint64_t)&v104[1], (uint64_t)boxed_opaque_existential_2Tm + v67[9], &qword_3B0C50);
  sub_15BD4(v53, (uint64_t)boxed_opaque_existential_2Tm + v67[10], (uint64_t *)&unk_3B8790);
  v72 = v44;
  v74 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v90;
  v73 = v91;
  v75 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v90)(v44, 1, 1, v91);
  v106 = 0;
  *(_OWORD *)&v104[1] = 0u;
  v105 = 0u;
  v76 = static MetricsTargetType.swoosh.getter(v75);
  static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)(0x64616F6C6E776F44, 0xEB00000000676E69, 0, 0, 0xD000000000000024, 0x8000000000314C60, v76, v77, 0, 0);
  swift_bridgeObjectRelease();
  v78 = v64;
  v66(v64, 0, 1, v65);
  v79 = (int *)type metadata accessor for ModernShelf(0);
  v80 = v79[8];
  *((_BYTE *)v52 + v80) = 3;
  v81 = (uint64_t)v52 + v79[9];
  v74(v81, 1, 1, v73);
  *v52 = 0xD000000000000024;
  v52[1] = 0x8000000000314C60;
  sub_15BD4((uint64_t)v102, (uint64_t)v52 + v79[5], &qword_3B0C38);
  v82 = (char *)v52 + v79[6];
  *(_WORD *)v82 = 16;
  *((_WORD *)v82 + 3) = 256;
  *(_DWORD *)(v82 + 2) = 0;
  *((_QWORD *)v82 + 1) = 1;
  *(_QWORD *)((char *)v52 + v79[7]) = v103;
  sub_3C454(v72, v81, &qword_3B4370);
  *((_BYTE *)v52 + v79[10]) = 1;
  *((_BYTE *)v52 + v79[11]) = 0;
  v83 = (uint64_t)v52 + v79[12];
  if (*((_QWORD *)&v105 + 1))
  {
    sub_F4D8((__int128 *)&v104[1], v83);
  }
  else
  {
    v84 = (unint64_t)v105;
    *(_OWORD *)v83 = *(_OWORD *)&v104[1];
    *(_OWORD *)(v83 + 16) = v84;
    *(_QWORD *)(v83 + 32) = v106;
  }
  result = sub_15BD4(v78, (uint64_t)v52 + v79[13], (uint64_t *)&unk_3B8790);
  *((_BYTE *)v52 + v80) = 3;
  return result;
}

uint64_t sub_257BD4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_302898);
  v2 = swift_getKeyPath(&unk_3028C0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t ModernEpisodesPresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 88));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 96));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 136));
  sub_87198(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_BYTE *)(v0 + 240));
  v1 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  v2 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageHeader));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_headerButtonItems));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageContent));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail));
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink, &qword_3B8660);
  sub_1459C(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf, &qword_3B8660);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter__episodeOrderingFrozen;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B23B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t ModernEpisodesPresenter.__deallocating_deinit()
{
  uint64_t v0;

  ModernEpisodesPresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_257E08@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = *v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  swift_beginAccess(v3, v8, 0, 0);
  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  v6 = type metadata accessor for InteractionContext.Page(0);
  return swift_storeEnumTagMultiPayload(a1, v6, 1);
}

uint64_t ModernEpisodesPresenter.buildMenuBar(with:)(void *a1)
{
  int8x16_t *v1;
  int8x16_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int8x16_t v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  objc_class *v63;
  unsigned __int8 v64;
  Swift::String v65;
  Swift::String_optional v66;
  UIMenu v67;
  int8x16_t *v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  objc_class *v86;
  unsigned __int8 v87;
  Swift::String v88;
  Swift::String_optional v89;
  UIMenu v90;
  _QWORD *v92;
  _QWORD *v93;
  Swift::OpaquePointer v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *(*v100)(uint64_t);
  _QWORD *v101;
  unint64_t *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  int8x16_t *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  UIMenuIdentifier_optional v112;
  _QWORD aBlock[5];
  uint64_t v114;
  _QWORD *v115;
  UIImage_optional v116;
  UIImage_optional v117;

  v2 = v1;
  v107 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v3);
  v103 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v104);
  v97 = (uint64_t *)((char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v102 = (unint64_t *)((char *)&v95 - v7);
  __chkstk_darwin(v8);
  v96 = (uint64_t *)((char *)&v95 - v9);
  v112.value = (UIMenuIdentifier)type metadata accessor for ActionMenu.Child(0);
  v10 = *((_QWORD *)v112.value - 1);
  __chkstk_darwin(v112.value);
  v111 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v110 = (uint64_t)&v95 - v13;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B66A8);
  v14 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v95 - v18;
  v20 = sub_288454((uint64_t)_swiftEmptyArrayStorage);
  v115 = _swiftEmptyArrayStorage;
  v21 = sub_25EBD8();
  sub_1E4208((uint64_t)v21);
  v22 = sub_25C404(1);
  sub_1E4208((uint64_t)v22);
  if (!v115[2])
    goto LABEL_6;
  if (qword_3B0138 != -1)
    swift_once(&qword_3B0138, sub_143660);
  v23 = qword_3BC000;
  v24 = (_QWORD *)swift_allocObject(&unk_38C578, 40, 7);
  v24[2] = v20;
  v24[3] = &v115;
  v24[4] = v1;
  v25 = swift_allocObject(&unk_38C5A0, 32, 7);
  v100 = sub_2603AC;
  v101 = v24;
  *(_QWORD *)(v25 + 16) = sub_2603AC;
  *(_QWORD *)(v25 + 24) = v24;
  aBlock[4] = sub_2603C8;
  v114 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_39D9C;
  aBlock[3] = &block_descriptor_28;
  v26 = _Block_copy(aBlock);
  v27 = v114;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release(v27);
  objc_msgSend(v107, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", v23, v26);
  _Block_release(v26);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v25, "", 147, 963, 65, 1);
  swift_release(v25);
  if ((v23 & 1) != 0)
  {
    __break(1u);
LABEL_6:
    v100 = 0;
    v101 = 0;
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C3FE0);
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = *(_QWORD *)(v14 + 72);
  v31 = (v29 + 32) & ~v29;
  v32 = swift_allocObject(v28, v31 + 3 * v30, v29 | 7);
  *(_OWORD *)(v32 + 16) = xmmword_2EFAE0;
  v33 = v32 + v31;
  sub_25BDA8(v33);
  v108 = v33;
  v34 = v33 + v30;
  v35 = v2[11].i64[0];
  v36 = v2[11].i64[1];
  v37 = v2[15].u8[0];
  v105 = v20;
  v98 = v32;
  if (v37 == 1)
  {
    sub_25DFD0(v35, v36, v34);
  }
  else if (v37 == 9
         && (v38 = vorrq_s8(v2[13], v2[14]),
             !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)) | v2[12].i64[1] | v2[12].i64[0] | v36 | v35)))
  {
    v39 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    UITraitCollection.interfaceIdiomIsMac.getter(v39);

    sub_25DB40(v34);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, UIMenuIdentifier))(v10 + 56))(v34, 1, 1, v112.value);
  }
  v40 = v108;
  v106 = v2;
  sub_25D258(v108 + 2 * v30);
  v41 = _swiftEmptyArrayStorage;
  v42 = 3;
  v109 = v30;
  do
  {
    sub_267BC(v40, (uint64_t)v19, &qword_3B66A8);
    sub_15BD4((uint64_t)v19, (uint64_t)v16, &qword_3B66A8);
    if ((*(unsigned int (**)(char *, uint64_t, UIMenuIdentifier))(v10 + 48))(v16, 1, v112.value) == 1)
    {
      sub_1459C((uint64_t)v16, &qword_3B66A8);
    }
    else
    {
      v43 = v110;
      sub_3C56C((uint64_t)v16, v110, type metadata accessor for ActionMenu.Child);
      sub_3C56C(v43, v111, type metadata accessor for ActionMenu.Child);
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
        v41 = (_QWORD *)sub_10CAC(0, v41[2] + 1, 1, (unint64_t)v41);
      v45 = v41[2];
      v44 = v41[3];
      if (v45 >= v44 >> 1)
        v41 = (_QWORD *)sub_10CAC(v44 > 1, v45 + 1, 1, (unint64_t)v41);
      v41[2] = v45 + 1;
      sub_3C56C(v111, (uint64_t)v41+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v45, type metadata accessor for ActionMenu.Child);
      v30 = v109;
    }
    v40 += v30;
    --v42;
  }
  while (v42);
  v46 = v98;
  swift_setDeallocating(v98);
  swift_arrayDestroy(v108, *(_QWORD *)(v46 + 16), v99);
  swift_deallocClassInstance(v46, 32, 7);
  if (v41[2])
  {
    v47 = type metadata accessor for ArtworkModel(0);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v49 = (uint64_t)v103;
    v48(v103, 1, 1, v47);
    v50 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v52 = v51;
    v53 = v104;
    v54 = v102;
    v55 = (uint64_t)v102 + *(int *)(v104 + 28);
    v48((char *)v55, 1, 1, v47);
    *v54 = v50;
    v54[1] = v52;
    v54[2] = 0;
    v54[3] = 0xE000000000000000;
    v54[4] = 0;
    v54[5] = 0;
    sub_3C454(v49, v55, &qword_3BEB70);
    *(unint64_t *)((char *)v54 + *(int *)(v53 + 32)) = (unint64_t)v41;
    v56 = v96;
    sub_3C56C((uint64_t)v54, (uint64_t)v96, type metadata accessor for ActionMenu);
    v57 = v56[2];
    v58 = v56[3];
    v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0)
      v59 = v57 & 0xFFFFFFFFFFFFLL;
    v111 = v106[1].i64[0];
    v112.value = (UIMenuIdentifier)(v59 == 0);
    sub_327F8(0, (unint64_t *)&qword_3B9410, UIMenu_ptr);
    v60 = v56[4];
    v61 = (void *)v56[5];
    v62 = (uint64_t)v56 + *(int *)(v53 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = (objc_class *)_s8ShelfKit11SystemGlyphC4load7artworkSo7UIImageCSg18PodcastsFoundation12ArtworkModelVSg_tFZ_0(v62);
    v64 = String._bridgeToObjectiveC()();
    aBlock[0] = v105;
    v92 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(*(_QWORD *)((char *)v56 + *(int *)(v53 + 32)), v111);
    v65._countAndFlagsBits = v57;
    v65._object = (void *)v58;
    v66.value._countAndFlagsBits = v60;
    v66.value._object = v61;
    v116.value.super.isa = v63;
    v116.is_nil = v64;
    v67.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v65, v66, v116, v112, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v92, v94).super.super.isa;
    sub_145D8((uint64_t)v56, type metadata accessor for ActionMenu);
    if (qword_3B0130 != -1)
      swift_once(&qword_3B0130, sub_143610);
    objc_msgSend(v107, "insertSiblingMenu:afterMenuForIdentifier:", v67.super.super.isa, qword_3BBFF8);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v68 = v106;
  v69 = sub_25EDE8();
  if (v69[2])
  {
    v70 = type metadata accessor for ArtworkModel(0);
    v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
    v72 = (uint64_t)v103;
    v71(v103, 1, 1, v70);
    v73 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v75 = v74;
    v76 = v104;
    v77 = v102;
    v78 = (uint64_t)v102 + *(int *)(v104 + 28);
    v71((char *)v78, 1, 1, v70);
    *v77 = v73;
    v77[1] = v75;
    v77[2] = 0;
    v77[3] = 0xE000000000000000;
    v77[4] = 0;
    v77[5] = 0;
    sub_3C454(v72, v78, &qword_3BEB70);
    *(unint64_t *)((char *)v77 + *(int *)(v76 + 32)) = (unint64_t)v69;
    v79 = v97;
    sub_3C56C((uint64_t)v77, (uint64_t)v97, type metadata accessor for ActionMenu);
    v80 = v79[2];
    v81 = v79[3];
    v82 = HIBYTE(v81) & 0xF;
    if ((v81 & 0x2000000000000000) == 0)
      v82 = v80 & 0xFFFFFFFFFFFFLL;
    v111 = v68[1].i64[0];
    v112.value = (UIMenuIdentifier)(v82 == 0);
    v110 = sub_327F8(0, (unint64_t *)&qword_3B9410, UIMenu_ptr);
    v83 = v79[4];
    v84 = (void *)v79[5];
    v85 = (uint64_t)v79 + *(int *)(v76 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v86 = (objc_class *)_s8ShelfKit11SystemGlyphC4load7artworkSo7UIImageCSg18PodcastsFoundation12ArtworkModelVSg_tFZ_0(v85);
    v87 = String._bridgeToObjectiveC()();
    aBlock[0] = v105;
    v93 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(*(_QWORD *)((char *)v79 + *(int *)(v76 + 32)), v111);
    v88._countAndFlagsBits = v80;
    v88._object = (void *)v81;
    v89.value._countAndFlagsBits = v83;
    v89.value._object = v84;
    v117.value.super.isa = v86;
    v117.is_nil = v87;
    v90.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v88, v89, v117, v112, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v93, v94).super.super.isa;
    sub_145D8((uint64_t)v79, type metadata accessor for ActionMenu);
    swift_bridgeObjectRelease();
    if (qword_3B0130 != -1)
      swift_once(&qword_3B0130, sub_143610);
    objc_msgSend(v107, "insertSiblingMenu:afterMenuForIdentifier:", v90.super.super.isa, qword_3BBFF8);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_327A0((uint64_t)v100, (uint64_t)v101);
}

uint64_t (*sub_25883C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_258880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a1 = *v3;
  return swift_retain(v4);
}

_QWORD *sub_2588D8@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_2588EC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W4>, char a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _BYTE *a8@<X8>, char *a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t Strong;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  int *v75;
  int v76;
  _QWORD *v77;
  void (*v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  __int128 *v86;
  int v87;
  _QWORD *v88;
  unint64_t v89;
  void (*v90)(_QWORD, _QWORD, _QWORD);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, unint64_t);
  int *v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void *v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  void *v130;
  id v131;
  char *v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(_BYTE *, _QWORD, uint64_t, uint64_t);
  _BYTE *v167;
  char v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  int *v186;
  _QWORD *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  __int128 *v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  int v222;
  int *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _BYTE *v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  _BYTE v237[32];
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  unint64_t v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  char v246;
  unint64_t v247[8];
  char v248;

  v230 = a7;
  v212 = a4;
  v222 = a3;
  v234 = a2;
  v227 = a1;
  v13 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v13);
  v219 = (uint64_t)&v204 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v15);
  v216 = (uint64_t)&v204 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v17);
  v211 = (char *)&v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v19);
  v214 = (uint64_t)&v204 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = type metadata accessor for TipGroup(0);
  v221 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v217 = (char *)&v204 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v220 = (char *)&v204 - v23;
  v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B35D0);
  __chkstk_darwin(v232);
  v224 = (uint64_t)&v204 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v218 = (uint64_t)&v204 - v26;
  __chkstk_darwin(v27);
  v208 = (uint64_t)&v204 - v28;
  __chkstk_darwin(v29);
  v209 = (uint64_t)&v204 - v30;
  __chkstk_darwin(v31);
  v229 = (uint64_t)&v204 - v32;
  __chkstk_darwin(v33);
  v226 = (uint64_t)&v204 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v35);
  v37 = (char *)&v204 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v40 = (char *)&v204 - v39;
  v235 = type metadata accessor for ModernShelf(0);
  v41 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v223 = (int *)((char *)&v204 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v43);
  v207 = (uint64_t)&v204 - v44;
  __chkstk_darwin(v45);
  v215 = (char *)&v204 - v46;
  __chkstk_darwin(v47);
  v213 = (uint64_t)&v204 - v48;
  __chkstk_darwin(v49);
  v228 = (uint64_t)&v204 - v50;
  __chkstk_darwin(v51);
  v225 = (uint64_t)&v204 - v52;
  v53 = (__int128 *)(a6 + 16);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E50);
  FRPOutput.content.getter(v54);
  v236 = v41;
  if ((a5 & 1) != 0)
  {
    swift_beginAccess(v53, v237, 0, 0);
    Strong = swift_weakLoadStrong(v53);
    if (Strong)
    {
      v56 = Strong;
      v231 = a8;
      v57 = v242;
      *(_QWORD *)&v243 = v242;
      v58 = swift_allocObject(&unk_38C550, 24, 7);
      v210 = v37;
      v59 = v53;
      v60 = v58;
      swift_weakInit(v58 + 16);
      sub_644D8(v57);
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
      v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
      v63 = v61;
      v41 = v236;
      Loadable.map<A>(_:)(v247, sub_262254, v60, v63, v62);
      v64 = v60;
      v53 = v59;
      v37 = v210;
      swift_release(v64);
      v65 = v57;
      a8 = v231;
      sub_64510(v65);
      swift_release(v56);
      v66 = v247[0];
      sub_64510(v242);
      v242 = v66;
    }
  }
  v67 = FRPOutput.hasMore.getter(v54);
  v68 = v242;
  v247[0] = v242;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A38);
  if ((Loadable.notLoaded.getter(v69) & 1) != 0)
  {
    sub_64510(v68);
    goto LABEL_6;
  }
  v206 = v67;
  v231 = a8;
  v210 = a9;
  v241 = 0;
  sub_267BC(v227, (uint64_t)v40, &qword_3B8660);
  v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v75 = (int *)v235;
  v76 = v74(v40, 1, v235);
  v205 = v53;
  if (v76 == 1)
  {
    sub_1459C((uint64_t)v40, &qword_3B8660);
    v77 = _swiftEmptyArrayStorage;
    v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
  }
  else
  {
    v79 = v225;
    sub_3C56C((uint64_t)v40, v225, type metadata accessor for ModernShelf);
    v80 = v79;
    v81 = v226;
    sub_14510(v80, v226, type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v41 + 56))(v81, 0, 2, v75);
    v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
    v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
    Loadable.map<A>(_:)(v247, sub_192A50, 0, v232, v82);
    v83 = v247[0];
    sub_644D8(v247[0]);
    v77 = sub_10E28(0, 1, 1, _swiftEmptyArrayStorage);
    v85 = v77[2];
    v84 = v77[3];
    if (v85 >= v84 >> 1)
      v77 = sub_10E28((_QWORD *)(v84 > 1), v85 + 1, 1, v77);
    v77[2] = v85 + 1;
    v77[v85 + 4] = v83;
    sub_64510(v83);
    sub_1459C(v226, &qword_3B35D0);
    sub_145D8(v225, type metadata accessor for ModernShelf);
    v41 = v236;
  }
  v86 = &v243;
  sub_267BC(v230, (uint64_t)v37, &qword_3B8660);
  v87 = v74(v37, 1, (uint64_t)v75);
  v89 = v233;
  v88 = v234;
  if (v87 == 1)
  {
    sub_1459C((uint64_t)v37, &qword_3B8660);
    v90 = (void (*)(_QWORD, _QWORD, _QWORD))v210;
  }
  else
  {
    v91 = v228;
    sub_3C56C((uint64_t)v37, v228, type metadata accessor for ModernShelf);
    v92 = v91;
    v93 = v229;
    sub_14510(v92, v229, type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v41 + 56))(v93, 0, 2, v75);
    v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
    Loadable.map<A>(_:)(v247, sub_192A50, 0, v78, v94);
    v95 = v247[0];
    sub_644D8(v247[0]);
    if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
      v77 = sub_10E28(0, v77[2] + 1, 1, v77);
    v90 = (void (*)(_QWORD, _QWORD, _QWORD))v210;
    v97 = v77[2];
    v96 = v77[3];
    if (v97 >= v96 >> 1)
      v77 = sub_10E28((_QWORD *)(v96 > 1), v97 + 1, 1, v77);
    v77[2] = v97 + 1;
    v77[v97 + 4] = v95;
    sub_64510(v95);
    sub_1459C(v229, &qword_3B35D0);
    sub_145D8(v228, type metadata accessor for ModernShelf);
    v89 = v233;
    v88 = v234;
  }
  memset(v247, 0, sizeof(v247));
  v248 = 9;
  if ((static EpisodeListType.== infix(_:_:)(v90, v247) & 1) == 0)
  {
    v121 = _swiftEmptyArrayStorage;
    v86 = v205;
    v75 = v223;
    goto LABEL_63;
  }
  v78 = v90;
  v99 = (uint64_t)v220;
  v98 = v221;
  v90 = *(void (**)(_QWORD, _QWORD, _QWORD))(v221 + 104);
  v90(v220, enum case for TipGroup.onlyDownloads(_:), v89);
  if (v88[2] && (v100 = sub_29AE0(v99), (v101 & 1) != 0))
  {
    v102 = v88[7];
    v103 = v89;
    v104 = *(_QWORD *)(v102 + 8 * v100);
    v105 = *(void (**)(uint64_t, unint64_t))(v98 + 8);
    swift_bridgeObjectRetain();
    v105(v99, v103);
    if ((unint64_t)v104 >> 62)
    {
      if (v104 < 0)
        v202 = v104;
      else
        v202 = v104 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v103 = _CocoaArrayWrapper.endIndex.getter(v202);
      swift_bridgeObjectRelease();
      if (v103)
      {
LABEL_25:
        if ((v104 & 0xC000000000000001) != 0)
        {
          v106 = v75;
          v107 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        }
        else
        {
          if (!*(_QWORD *)((char *)&dword_10 + (v104 & 0xFFFFFFFFFFFFF8)))
          {
            __break(1u);
LABEL_108:
            v77 = sub_10E28(0, v77[2] + 1, 1, v77);
LABEL_58:
            v150 = v77[2];
            v149 = v77[3];
            if (v150 >= v149 >> 1)
              v77 = sub_10E28((_QWORD *)(v149 > 1), v150 + 1, 1, v77);
            v77[2] = v150 + 1;
            v77[v150 + 4] = v103;
            sub_64510(v103);
            sub_1459C(v104, &qword_3B35D0);

            v151 = v213;
            goto LABEL_61;
          }
          v106 = v75;
          v107 = *(id *)(v104 + 32);
        }
        v108 = v107;
        swift_bridgeObjectRelease();
        v109 = type metadata accessor for Header(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v214, 1, 1, v109);
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
        v111 = swift_allocObject(v110, 72, 7);
        *(_OWORD *)(v111 + 16) = xmmword_2EA0D0;
        *(_QWORD *)(v111 + 56) = sub_327F8(0, (unint64_t *)&qword_3B7DB0, AMSDialogRequest_ptr);
        *(_QWORD *)(v111 + 64) = sub_E50C0((unint64_t *)&qword_3B8760, (unint64_t *)&qword_3B7DB0, AMSDialogRequest_ptr, (uint64_t)&protocol conformance descriptor for AMSDialogRequest);
        *(_QWORD *)(v111 + 32) = v108;
        v112 = type metadata accessor for URL(0);
        v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56);
        v114 = (uint64_t)v211;
        v113(v211, 1, 1, v112);
        v115 = type metadata accessor for ImpressionMetrics(0);
        v243 = 0u;
        v244 = 0u;
        v245 = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v216, 1, 1, v115);
        v116 = v108;
        v117 = v215;
        v233 = v106[8];
        v215[v233] = 3;
        v118 = (uint64_t)v117 + v106[9];
        v113((char *)v118, 1, 1, v112);
        *v117 = 0xD00000000000001CLL;
        v117[1] = 0x800000000030F840;
        sub_15BD4(v214, (uint64_t)v117 + v106[5], &qword_3B0C38);
        v119 = (char *)v117 + v106[6];
        *(_WORD *)v119 = 53;
        *((_WORD *)v119 + 3) = 256;
        *(_DWORD *)(v119 + 2) = 0;
        *((_QWORD *)v119 + 1) = 1;
        *(_QWORD *)((char *)v117 + v106[7]) = v111;
        v234 = v116;
        sub_3C454(v114, v118, &qword_3B4370);
        *((_BYTE *)v117 + v106[10]) = 1;
        *((_BYTE *)v117 + v106[11]) = 0;
        v120 = (uint64_t)v117 + v106[12];
        if (*((_QWORD *)&v244 + 1))
        {
          sub_F4D8(&v243, v120);
        }
        else
        {
          v141 = (unint64_t)v244;
          *(_OWORD *)v120 = v243;
          *(_OWORD *)(v120 + 16) = v141;
          *(_QWORD *)(v120 + 32) = v245;
        }
        v86 = v205;
        v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
        v75 = v223;
        v90 = (void (*)(_QWORD, _QWORD, _QWORD))v210;
        v142 = v235;
        v143 = v236;
        v144 = v215;
        sub_15BD4(v216, (uint64_t)&v215[*(int *)(v235 + 52)], (uint64_t *)&unk_3B8790);
        v144[v233] = 3;
        v145 = (uint64_t)v144;
        v146 = v213;
        sub_3C56C(v145, v213, type metadata accessor for ModernShelf);
        v147 = v146;
        v104 = v209;
        sub_14510(v147, v209, type metadata accessor for ModernShelf);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v104, 0, 2, v142);
        v148 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
        Loadable.map<A>(_:)(&v243, sub_192A50, 0, v78, v148);
        v103 = v243;
        sub_644D8(v243);
        if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) != 0)
          goto LABEL_58;
        goto LABEL_108;
      }
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v104 & 0xFFFFFFFFFFFFF8)))
    {
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    v89 = v233;
    v88 = v234;
  }
  else
  {
    v105 = *(void (**)(uint64_t, unint64_t))(v98 + 8);
    v105(v99, v89);
  }
  v122 = (uint64_t)v217;
  v90(v217, enum case for TipGroup.downloads(_:), v89);
  if (v88[2] && (v123 = sub_29AE0(v122), (v124 & 1) != 0))
  {
    v125 = v88[7];
    v126 = v89;
    v127 = *(_QWORD *)(v125 + 8 * v123);
    swift_bridgeObjectRetain();
    v105(v122, v126);
    if ((unint64_t)v127 >> 62)
    {
      if (v127 < 0)
        v203 = v127;
      else
        v203 = v127 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v126 = _CocoaArrayWrapper.endIndex.getter(v203);
      swift_bridgeObjectRelease();
      v128 = v236;
      v90 = v78;
      if (v126)
      {
LABEL_36:
        v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
        if ((v127 & 0xC000000000000001) != 0)
        {
          v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        }
        else
        {
          if (!*(_QWORD *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFF8)))
          {
            __break(1u);
            goto LABEL_111;
          }
          v129 = *(id *)(v127 + 32);
        }
        v130 = v129;
        swift_bridgeObjectRelease();
        v131 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
        v132 = (char *)objc_msgSend(v131, "horizontalSizeClass");

        if (v132 != (_BYTE *)&dword_0 + 2)
        {

          swift_bridgeObjectRelease();
LABEL_54:
          v86 = v205;
          v75 = v223;
          if ((v222 & 1) == 0)
            goto LABEL_62;
          goto LABEL_44;
        }
        v133 = _stringCompareWithSmolCheck(_:_:expecting:)(0x72616265646973, 0xE700000000000000, 0x726142626174, 0xE600000000000000, 0);
        swift_bridgeObjectRelease();
        if ((v133 & 1) != 0)
        {

          goto LABEL_54;
        }
        v179 = type metadata accessor for Header(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 56))(v214, 1, 1, v179);
        v180 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
        v181 = swift_allocObject(v180, 72, 7);
        *(_OWORD *)(v181 + 16) = xmmword_2EA0D0;
        *(_QWORD *)(v181 + 56) = sub_327F8(0, (unint64_t *)&qword_3B7DB0, AMSDialogRequest_ptr);
        *(_QWORD *)(v181 + 64) = sub_E50C0((unint64_t *)&qword_3B8760, (unint64_t *)&qword_3B7DB0, AMSDialogRequest_ptr, (uint64_t)&protocol conformance descriptor for AMSDialogRequest);
        *(_QWORD *)(v181 + 32) = v130;
        v182 = type metadata accessor for URL(0);
        v183 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 56);
        v184 = (uint64_t)v211;
        v183(v211, 1, 1, v182);
        v185 = type metadata accessor for ImpressionMetrics(0);
        v243 = 0u;
        v244 = 0u;
        v245 = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 56))(v216, 1, 1, v185);
        v186 = (int *)v235;
        v187 = v215;
        v234 = (id)*(int *)(v235 + 32);
        *((_BYTE *)v234 + (_QWORD)v215) = 3;
        v188 = (uint64_t)v187 + v186[9];
        v183((char *)v188, 1, 1, v182);
        *v187 = 0xD00000000000001CLL;
        v187[1] = 0x800000000030F840;
        sub_15BD4(v214, (uint64_t)v187 + v186[5], &qword_3B0C38);
        v189 = (char *)v187 + v186[6];
        *(_WORD *)v189 = 53;
        *((_WORD *)v189 + 3) = 256;
        *(_DWORD *)(v189 + 2) = 0;
        *((_QWORD *)v189 + 1) = 1;
        *(_QWORD *)((char *)v187 + v186[7]) = v181;
        v127 = v130;
        sub_3C454(v184, v188, &qword_3B4370);
        *((_BYTE *)v187 + v186[10]) = 1;
        *((_BYTE *)v187 + v186[11]) = 0;
        v190 = (uint64_t)v187 + v186[12];
        if (*((_QWORD *)&v244 + 1))
        {
          sub_F4D8(&v243, v190);
        }
        else
        {
          v191 = (unint64_t)v244;
          *(_OWORD *)v190 = v243;
          *(_OWORD *)(v190 + 16) = v191;
          *(_QWORD *)(v190 + 32) = v245;
        }
        v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
        v192 = v236;
        v193 = v215;
        sub_15BD4(v216, (uint64_t)&v215[v186[13]], (uint64_t *)&unk_3B8790);
        *((_BYTE *)v234 + (_QWORD)v193) = 3;
        v194 = (uint64_t)v193;
        v195 = v207;
        sub_3C56C(v194, v207, type metadata accessor for ModernShelf);
        v196 = v195;
        v197 = v208;
        sub_14510(v196, v208, type metadata accessor for ModernShelf);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v192 + 56))(v197, 0, 2, v186);
        v198 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
        Loadable.map<A>(_:)(&v243, sub_192A50, 0, v78, v198);
        v126 = v243;
        sub_644D8(v243);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v77);
        v86 = v205;
        v75 = v223;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_93:
          v90 = (void (*)(_QWORD, _QWORD, _QWORD))v210;
          v201 = v77[2];
          v200 = v77[3];
          if (v201 >= v200 >> 1)
            v77 = sub_10E28((_QWORD *)(v200 > 1), v201 + 1, 1, v77);
          v77[2] = v201 + 1;
          v77[v201 + 4] = v126;
          sub_64510(v126);
          sub_1459C(v208, &qword_3B35D0);

          v151 = v207;
LABEL_61:
          sub_145D8(v151, type metadata accessor for ModernShelf);
          v128 = v236;
          if ((v222 & 1) == 0)
            goto LABEL_62;
          goto LABEL_44;
        }
LABEL_111:
        v77 = sub_10E28(0, v77[2] + 1, 1, v77);
        goto LABEL_93;
      }
    }
    else
    {
      v128 = v236;
      v90 = v78;
      if (*(_QWORD *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    v86 = v205;
    v75 = v223;
  }
  else
  {
    v105(v122, v89);
    v86 = v205;
    v75 = v223;
    v128 = v236;
    v90 = v78;
  }
  v78 = (void (*)(_QWORD, _QWORD, _QWORD))v232;
  if ((v222 & 1) == 0)
  {
LABEL_62:
    v121 = _swiftEmptyArrayStorage;
    goto LABEL_63;
  }
LABEL_44:
  v134 = v218;
  sub_14510(a10, v218, type metadata accessor for ModernShelf);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v128 + 56))(v134, 0, 2, v235);
  v135 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
  Loadable.map<A>(_:)(&v243, sub_192A50, 0, v78, v135);
  v136 = v243;
  sub_644D8(v243);
  v121 = _swiftEmptyArrayStorage;
  if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    v121 = sub_10E28(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
  v138 = v121[2];
  v137 = v121[3];
  if (v138 >= v137 >> 1)
    v121 = sub_10E28((_QWORD *)(v137 > 1), v138 + 1, 1, v121);
  v121[2] = v138 + 1;
  v121[v138 + 4] = v136;
  sub_644D8(v136);
  if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
    v77 = sub_10E28(0, v77[2] + 1, 1, v77);
  v140 = v77[2];
  v139 = v77[3];
  if (v140 >= v139 >> 1)
    v77 = sub_10E28((_QWORD *)(v139 > 1), v140 + 1, 1, v77);
  v77[2] = v140 + 1;
  v77[v140 + 4] = v136;
  sub_64510(v136);
  sub_1459C(v218, &qword_3B35D0);
LABEL_63:
  v152 = v242;
  sub_644D8(v242);
  if ((swift_isUniquelyReferenced_nonNull_native(v121) & 1) == 0)
    v121 = sub_10E28(0, v121[2] + 1, 1, v121);
  v154 = v121[2];
  v153 = v121[3];
  if (v154 >= v153 >> 1)
    v121 = sub_10E28((_QWORD *)(v153 > 1), v154 + 1, 1, v121);
  v121[2] = v154 + 1;
  v121[v154 + 4] = v152;
  sub_644D8(v152);
  if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
    v77 = sub_10E28(0, v77[2] + 1, 1, v77);
  v156 = v77[2];
  v155 = v77[3];
  if (v156 >= v155 >> 1)
    v77 = sub_10E28((_QWORD *)(v155 > 1), v156 + 1, 1, v77);
  v77[2] = v156 + 1;
  v77[v156 + 4] = v152;
  sub_64510(v152);
  if ((v206 & 1) != 0)
  {
    static ModernShelf.loadingShelf(id:)(0x5365726F4D736168, 0xEC000000666C6568, v75);
    v157 = v224;
    sub_14510((uint64_t)v75, v224, type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v236 + 56))(v157, 0, 2, v235);
    v158 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BF7B0);
    Loadable.map<A>(_:)(&v243, sub_192A50, 0, v78, v158);
    v159 = v243;
    sub_644D8(v243);
    v161 = v77[2];
    v160 = v77[3];
    if (v161 >= v160 >> 1)
      v77 = sub_10E28((_QWORD *)(v160 > 1), v161 + 1, 1, v77);
    v77[2] = v161 + 1;
    v77[v161 + 4] = v159;
    sub_64510(v159);
    sub_1459C(v224, &qword_3B35D0);
    sub_145D8((uint64_t)v75, type metadata accessor for ModernShelf);
  }
  v162 = v241;
  LOBYTE(v243) = v241;
  *((_QWORD *)&v243 + 1) = v121;
  *(_QWORD *)&v244 = v77;
  if ((ModernShelfListBuilder.hasImportantContent.getter() & 1) != 0)
  {
    LOBYTE(v243) = v162;
    *((_QWORD *)&v243 + 1) = v121;
    *(_QWORD *)&v244 = v77;
    v163 = ModernShelfListBuilder.buildList()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v164 = v219;
    sub_25A008((uint64_t)v90, v163, v219);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_3B89B0);
    a8 = v231;
    v165 = sub_14510(v164, (uint64_t)v231, type metadata accessor for ModernPage);
    static PageRenderContentTypes.unspecified.getter(v165);
    v70 = type metadata accessor for PageContent(0);
    swift_storeEnumTagMultiPayload(a8, v70, 3);
    sub_145D8(v164, type metadata accessor for ModernPage);
    goto LABEL_77;
  }
  LOBYTE(v243) = v162;
  *((_QWORD *)&v243 + 1) = v121;
  *(_QWORD *)&v244 = v77;
  v169 = ModernShelfListBuilder.areAnyImportantShelvesStillLoading.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v169 & 1) != 0)
  {
    v170 = v231;
    *v231 = 0;
    v70 = type metadata accessor for PageContent(0);
    swift_storeEnumTagMultiPayload(v170, v70, 0);
    v166 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
    v167 = v170;
    return v166(v167, 0, 1, v70);
  }
  swift_beginAccess(v86, &v240, 0, 0);
  v171 = swift_weakLoadStrong(v86);
  a8 = v231;
  if (v171)
  {
    v172 = v171;
    sub_25AA20((uint64_t)v90, v212 & 1, (uint64_t *)&v243);
    swift_release(v172);
    v173 = v244;
    if ((~(_QWORD)v244 & 0xF000000000000007) != 0)
    {
      *(_OWORD *)a8 = v243;
      *((_QWORD *)a8 + 2) = v173;
      v70 = type metadata accessor for PageContent(0);
      v71 = a8;
      v72 = v70;
      v73 = 2;
      goto LABEL_7;
    }
  }
  sub_1A0A14((uint64_t)v90, (uint64_t)&v243);
  if (v246 == 8 && (v222 & 1) != 0)
  {
LABEL_6:
    *a8 = 1;
    v70 = type metadata accessor for PageContent(0);
    v71 = a8;
    v72 = v70;
    v73 = 0;
LABEL_7:
    swift_storeEnumTagMultiPayload(v71, v72, v73);
LABEL_77:
    v166 = *(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
    v167 = a8;
    return v166(v167, 0, 1, v70);
  }
  swift_beginAccess(v86, &v239, 0, 0);
  v174 = swift_weakLoadStrong(v86);
  if (v174)
  {
    v175 = v174;
    v176 = (uint64_t *)(v174 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss);
    swift_beginAccess(v174 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss, &v238, 0, 0);
    v177 = *v176;
    swift_retain();
    swift_release(v175);
    v237[31] = 1;
    CurrentValueSubject.send(_:)();
    swift_release(v177);
  }
  v178 = type metadata accessor for PageContent(0);
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(a8, 1, 1, v178);
}

uint64_t sub_25A008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (**v15)(uint64_t, char *, unint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  Swift::String v95;
  Swift::String v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  Swift::String v118;
  Swift::String v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  Swift::String v144;
  Swift::String v145;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;

  v155 = a2;
  v156 = a3;
  v154 = type metadata accessor for ScalarDictionary(0);
  v4 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v6 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v147 - v8;
  v10 = type metadata accessor for PageMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PageID(0);
  v15 = *(void (***)(uint64_t, char *, unint64_t))(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A0A14(a1, (uint64_t)&v165);
  if (v173 == 5)
  {
    v36 = static MetricsPageType.room.getter(v18);
    v150 = v13;
    v153 = v11;
    v37 = v36;
    v39 = v38;
    v40 = ((uint64_t (*)(void))static MetricsPageID.upNext.getter)();
    v152 = v14;
    v41 = v40;
    v151 = v10;
    v43 = v42;
    v158 = v37;
    v159 = v39;
    v44._countAndFlagsBits = 95;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    v45._countAndFlagsBits = v41;
    v45._object = v43;
    String.append(_:)(v45);
    swift_bridgeObjectRelease();
    v46 = PageID.init(with:)(v158, v159);
    v47 = static MetricsPageID.upNext.getter(v46);
    v49 = v48;
    v50 = static MetricsPageType.room.getter(v47);
    v158 = v47;
    v159 = v49;
    v160 = v50;
    v161 = v51;
    v162 = 0;
    v163 = 0;
    v164 = 0;
    ScalarDictionary.init()(v50);
    v52 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
    v54 = type metadata accessor for PageMetrics.Instruction(0);
    v55 = swift_allocObject(v53, ((*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v54 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) | 7);
    *(_OWORD *)(v55 + 16) = xmmword_2EA080;
    v157 = 0;
    PageMetrics.Instruction.init(eventType:)(&v157);
    v56 = v156;
    v157 = 1;
    PageMetrics.Instruction.init(eventType:)(&v157);
    v57 = MetricsPageFields.metricsFields.getter();
    v58 = v154;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v154);
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v55, v57, v6, v52);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15[4](v56, v17, v152);
    v59 = type metadata accessor for ModernPage(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v56 + *(int *)(v59 + 20), v150, v151);
  }
  else
  {
    v148 = v6;
    v149 = v4;
    v150 = (char *)v15;
    if (v173 != 9)
      goto LABEL_17;
    v19 = v169 | v168 | v167;
    if (v171 | v172 | v165 | v170 | v19 | v166)
    {
      v20 = v171 | v172 | v170 | v19 | v166;
      if (v165 == 1 && !v20)
      {
        v21 = static MetricsPageType.room.getter(v18);
        v22 = v13;
        v153 = v11;
        v23 = v21;
        v25 = v24;
        v26 = ((uint64_t (*)(void))static MetricsPageID.recentlyPlayed.getter)();
        v152 = v14;
        v27 = v26;
        v151 = v10;
        v29 = v28;
        v158 = v23;
        v159 = v25;
        v30._countAndFlagsBits = 95;
        v30._object = (void *)0xE100000000000000;
        String.append(_:)(v30);
        v31._countAndFlagsBits = v27;
        v31._object = v29;
        String.append(_:)(v31);
        v32 = v156;
        swift_bridgeObjectRelease();
        v33 = PageID.init(with:)(v158, v159);
        v34 = static MetricsPageID.recentlyPlayed.getter(v33);
LABEL_12:
        v98 = v34;
        v99 = v35;
        v100 = static MetricsPageType.room.getter(v34);
        v158 = v98;
        v159 = v99;
        v160 = v100;
        v161 = v101;
        v162 = 0;
        v163 = 0;
        v164 = 0;
        v102 = v9;
        ScalarDictionary.init()(v100);
        v103 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
        v104 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
        v105 = type metadata accessor for PageMetrics.Instruction(0);
        v106 = swift_allocObject(v104, ((*(unsigned __int8 *)(*(_QWORD *)(v105 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v105 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v105 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v105 - 8) + 80) | 7);
        *(_OWORD *)(v106 + 16) = xmmword_2EA080;
        v157 = 0;
        PageMetrics.Instruction.init(eventType:)(&v157);
        v157 = 1;
        PageMetrics.Instruction.init(eventType:)(&v157);
        v107 = MetricsPageFields.metricsFields.getter();
        v108 = v149;
        v109 = v148;
        v110 = v154;
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v148, v102, v154);
        PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v106, v107, v109, v103);
        (*(void (**)(char *, uint64_t))(v108 + 8))(v102, v110);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*((void (**)(uint64_t, char *, unint64_t))v150 + 4))(v32, v17, v152);
        v59 = type metadata accessor for ModernPage(0);
        (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v32 + *(int *)(v59 + 20), v22, v151);
        goto LABEL_18;
      }
      if (v165 == 3 && !v20)
      {
        v87 = static MetricsPageType.room.getter(v18);
        v22 = v13;
        v153 = v11;
        v88 = v87;
        v90 = v89;
        v91 = ((uint64_t (*)(void))static MetricsPageID.latestEpisodes.getter)();
        v152 = v14;
        v92 = v91;
        v151 = v10;
        v94 = v93;
        v158 = v88;
        v159 = v90;
        v95._countAndFlagsBits = 95;
        v95._object = (void *)0xE100000000000000;
        String.append(_:)(v95);
        v96._countAndFlagsBits = v92;
        v96._object = v94;
        String.append(_:)(v96);
        v32 = v156;
        swift_bridgeObjectRelease();
        v97 = PageID.init(with:)(v158, v159);
        v34 = static MetricsPageID.latestEpisodes.getter(v97);
        goto LABEL_12;
      }
      if (v165 == 4 && !v20)
      {
        v111 = static MetricsPageType.room.getter(v18);
        v113 = v112;
        v114 = ((uint64_t (*)(void))static MetricsPageID.saved.getter)();
        v115 = v14;
        v117 = v116;
        v158 = v111;
        v159 = v113;
        v118._countAndFlagsBits = 95;
        v118._object = (void *)0xE100000000000000;
        String.append(_:)(v118);
        v119._countAndFlagsBits = v114;
        v119._object = v117;
        String.append(_:)(v119);
        swift_bridgeObjectRelease();
        v120 = PageID.init(with:)(v158, v159);
        v121 = static MetricsPageID.saved.getter(v120);
        v123 = v122;
        v124 = static MetricsPageType.room.getter(v121);
        v158 = v121;
        v159 = v123;
        v160 = v124;
        v161 = v125;
        v162 = 0;
        v163 = 0;
        v164 = 0;
        v126 = v9;
        ScalarDictionary.init()(v124);
        v152 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
        v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
        v128 = *(_QWORD *)(type metadata accessor for PageMetrics.Instruction(0) - 8);
        v129 = v13;
        v153 = v11;
        v130 = *(_QWORD *)(v128 + 72);
        v131 = *(unsigned __int8 *)(v128 + 80);
        v151 = v10;
        v132 = swift_allocObject(v127, ((v131 + 32) & ~v131) + 2 * v130, v131 | 7);
        *(_OWORD *)(v132 + 16) = xmmword_2EA080;
        v133 = v156;
        v157 = 0;
        PageMetrics.Instruction.init(eventType:)(&v157);
        v157 = 1;
        PageMetrics.Instruction.init(eventType:)(&v157);
        v134 = MetricsPageFields.metricsFields.getter();
        v135 = v149;
        v136 = v148;
        v137 = v154;
        (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v148, v126, v154);
        PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v132, v134, v136, v152);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v126, v137);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*((void (**)(uint64_t, char *, uint64_t))v150 + 4))(v133, v17, v115);
        v59 = type metadata accessor for ModernPage(0);
        (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v133 + *(int *)(v59 + 20), v129, v151);
        goto LABEL_18;
      }
LABEL_17:
      v138 = static MetricsPageType.room.getter(v18);
      v140 = v139;
      v141 = static MetricsPageID.unknown.getter();
      v143 = v142;
      v158 = v138;
      v159 = v140;
      v144._countAndFlagsBits = 95;
      v144._object = (void *)0xE100000000000000;
      String.append(_:)(v144);
      v145._countAndFlagsBits = v141;
      v145._object = v143;
      String.append(_:)(v145);
      swift_bridgeObjectRelease();
      PageID.init(with:)(v158, v159);
      v59 = type metadata accessor for ModernPage(0);
      static PageMetrics.notInstrumented.getter(v59);
      goto LABEL_18;
    }
    v60 = static MetricsPageType.room.getter(v18);
    v152 = v14;
    v62 = v61;
    v63 = ((uint64_t (*)(void))static MetricsPageID.downloaded.getter)();
    v64 = v13;
    v153 = v11;
    v65 = v63;
    v67 = v66;
    v158 = v60;
    v159 = v62;
    v68._countAndFlagsBits = 95;
    v68._object = (void *)0xE100000000000000;
    String.append(_:)(v68);
    v69._countAndFlagsBits = v65;
    v69._object = v67;
    String.append(_:)(v69);
    swift_bridgeObjectRelease();
    v70 = PageID.init(with:)(v158, v159);
    v71 = static MetricsPageID.downloaded.getter(v70);
    v73 = v72;
    v74 = static MetricsPageType.room.getter(v71);
    v158 = v71;
    v159 = v73;
    v160 = v74;
    v161 = v75;
    v162 = 0;
    v163 = 0;
    v164 = 0;
    v76 = v9;
    ScalarDictionary.init()(v74);
    v77 = sub_C97A8((uint64_t)_swiftEmptyArrayStorage);
    v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B89A0);
    v79 = type metadata accessor for PageMetrics.Instruction(0);
    v80 = swift_allocObject(v78, ((*(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v79 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v79 - 8) + 80) | 7);
    *(_OWORD *)(v80 + 16) = xmmword_2EA080;
    v157 = 0;
    PageMetrics.Instruction.init(eventType:)(&v157);
    v157 = 1;
    PageMetrics.Instruction.init(eventType:)(&v157);
    v81 = MetricsPageFields.metricsFields.getter();
    v82 = v149;
    v83 = v148;
    v84 = v9;
    v85 = v154;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v148, v84, v154);
    PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v80, v81, v83, v77);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v76, v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v86 = v156;
    (*((void (**)(uint64_t, char *, unint64_t))v150 + 4))(v156, v17, v152);
    v59 = type metadata accessor for ModernPage(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v86 + *(int *)(v59 + 20), v64, v10);
  }
LABEL_18:
  *(_QWORD *)(v156 + *(int *)(v59 + 24)) = v155;
  return swift_bridgeObjectRetain();
}

double sub_25AA20@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  double result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  sub_1A0A14(a1, (uint64_t)&v10);
  if (v18 < 9u)
    goto LABEL_5;
  v6 = v14 | v13 | v12;
  if (!(v16 | v17 | v10 | v15 | v6 | v11))
  {
    v8 = (a2 & 1) == 0;
    v9 = 5;
    goto LABEL_10;
  }
  v7 = v16 | v17 | v15 | v6 | v11;
  if ((unint64_t)(v10 - 1) <= 1 && !v7)
    goto LABEL_5;
  if (v10 == 3 && !v7)
  {
    v8 = (a2 & 1) == 0;
    v9 = 2;
LABEL_10:
    if (!v8)
      ++v9;
    goto LABEL_12;
  }
  if (v10 != 4 || v7)
  {
LABEL_5:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0xF000000000000007;
    return result;
  }
  v9 = a2 & 1;
LABEL_12:
  *a3 = v9;
  result = 0.0;
  *(_OWORD *)(a3 + 1) = xmmword_2EEF60;
  return result;
}

uint64_t sub_25AB00(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))
{
  int *v4;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3C4288);
  return a2(a1, *(_QWORD *)(a1 + v4[12]), *(unsigned __int8 *)(a1 + v4[16]), a1 + v4[20], *(unsigned __int8 *)(a1 + v4[24]), *(unsigned __int8 *)(a1 + v4[28]));
}

uint64_t sub_25AB70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageContent);
    swift_retain(v5);
    swift_release(v4);
    CurrentValueSubject.send(_:)();
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_25ABF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char v60[64];
  char v61;

  v50 = a3;
  v51 = (_QWORD *)a2;
  v56 = a4;
  v5 = (int *)type metadata accessor for ModernShelf(0);
  v55 = *((_QWORD *)v5 - 1);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v8);
  v52 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0C38);
  __chkstk_darwin(v10);
  v53 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8790);
  __chkstk_darwin(v12);
  v54 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for ShowEpisodeCountHeader(0);
  __chkstk_darwin(v49);
  v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4358);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ShowEpisodeCountHeaderData(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (uint64_t *)((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_267BC(a1, (uint64_t)v21, qword_3C4358);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1459C((uint64_t)v21, qword_3C4358);
    v26 = 1;
    v27 = v56;
  }
  else
  {
    sub_3C56C((uint64_t)v21, (uint64_t)v25, type metadata accessor for ShowEpisodeCountHeaderData);
    v28 = *v25;
    v29 = v25[1];
    sub_14510((uint64_t)v25 + *(int *)(v22 + 20), (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v30 = *(uint64_t *)((char *)v25 + *(int *)(v22 + 24));
    sub_1A0A14(v50, (uint64_t)v60);
    if (((v61 - 1) & 0xF8) != 0)
      v31 = 4;
    else
      v31 = 0x4020403040401uLL >> (8 * (v61 - 1));
    LOBYTE(v57) = v31;
    v50 = type metadata accessor for ImpressionMetrics(0);
    v48 = *(void (**)(void))(*(_QWORD *)(v50 - 8) + 56);
    v32 = (uint64_t)v54;
    v48();
    swift_bridgeObjectRetain();
    swift_retain();
    ShowEpisodeCountHeader.init(id:title:artwork:action:libraryEpisodesCount:style:impressionMetrics:)(0, 0, v28, v29, (uint64_t)v16, v30, (uint64_t)v51, (unsigned __int8 *)&v57, v18, v32);
    v33 = type metadata accessor for Header(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v53, 1, 1, v33);
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8750);
    v35 = swift_allocObject(v34, 72, 7);
    *(_OWORD *)(v35 + 16) = xmmword_2EA0D0;
    *(_QWORD *)(v35 + 56) = v49;
    *(_QWORD *)(v35 + 64) = sub_F1C0(&qword_3BB920, (void (*)(uint64_t))type metadata accessor for ShowEpisodeCountHeader, (uint64_t)&protocol conformance descriptor for ShowEpisodeCountHeader);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v35 + 32));
    v51 = v18;
    sub_14510((uint64_t)v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for ShowEpisodeCountHeader);
    v37 = type metadata accessor for URL(0);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
    v39 = (uint64_t)v52;
    v38(v52, 1, 1, v37);
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    v40 = (uint64_t)v54;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v54, 1, 1, v50);
    v41 = v5[8];
    *((_BYTE *)v7 + v41) = 3;
    v42 = (uint64_t)v7 + v5[9];
    v38((char *)v42, 1, 1, v37);
    *v7 = 0xD000000000000027;
    v7[1] = 0x8000000000314C90;
    sub_15BD4(v53, (uint64_t)v7 + v5[5], &qword_3B0C38);
    v43 = (char *)v7 + v5[6];
    *(_WORD *)v43 = 51;
    *((_WORD *)v43 + 3) = 256;
    *(_DWORD *)(v43 + 2) = 0;
    *((_QWORD *)v43 + 1) = 1;
    *(_QWORD *)((char *)v7 + v5[7]) = v35;
    sub_3C454(v39, v42, &qword_3B4370);
    *((_BYTE *)v7 + v5[10]) = 1;
    *((_BYTE *)v7 + v5[11]) = 0;
    v44 = (uint64_t)v7 + v5[12];
    if (*((_QWORD *)&v58 + 1))
    {
      sub_F4D8(&v57, v44);
    }
    else
    {
      v45 = (unint64_t)v58;
      *(_OWORD *)v44 = v57;
      *(_OWORD *)(v44 + 16) = v45;
      *(_QWORD *)(v44 + 32) = v59;
    }
    v27 = v56;
    sub_15BD4(v40, (uint64_t)v7 + v5[13], (uint64_t *)&unk_3B8790);
    *((_BYTE *)v7 + v41) = 3;
    sub_3C56C((uint64_t)v7, v27, type metadata accessor for ModernShelf);
    sub_145D8((uint64_t)v51, type metadata accessor for ShowEpisodeCountHeader);
    sub_145D8((uint64_t)v25, type metadata accessor for ShowEpisodeCountHeaderData);
    v26 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v55 + 56))(v27, v26, 1, v5);
}

uint64_t sub_25B19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v21;
  _QWORD v23[3];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B68D8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EpisodeListSettings(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((EpisodeListSettings.hidePlayedEpisodes.getter(v14) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    EpisodeListSettings.hidePlayedEpisodes.setter(0);
    swift_beginAccess(a2 + 16, v23, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    v16 = Strong;
    if (Strong)
    {
      v17 = *(_QWORD *)(Strong + 32);
      v18 = *(_QWORD *)(Strong + 40);
      swift_unknownObjectRetain(v17);
      swift_release(v16);
      ObjectType = swift_getObjectType();
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 344))(v13, ObjectType, v18);
      swift_unknownObjectRelease(v17);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v23[0] = 0;
    Just.init(_:)(v23, &type metadata for Int);
    v21 = sub_32914((unint64_t *)&unk_3B68E0, &qword_3B68D8, (uint64_t)&protocol conformance descriptor for Just<A>);
    v16 = Publisher.eraseToAnyPublisher()(v6, v21);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *a3 = v16;
  return result;
}

_QWORD *sub_25B358@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result[1] < *result;
  return result;
}

uint64_t sub_25B36C@<X0>(unint64_t *a1@<X8>)
{
  int8x16_t *v1;
  int8x16_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int8x16_t v50;
  id v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t *v100;
  uint64_t v101;
  int8x16_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;

  v2 = v1;
  v100 = a1;
  v104 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v104);
  v4 = (unint64_t *)((char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v5);
  v103 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v99 = (char *)&v94 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B66A8);
  __chkstk_darwin(v9);
  v102 = (int8x16_t *)((char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v94 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v94 - v15;
  v17 = type metadata accessor for ActionMenu.Child(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v98 = (uint64_t)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v97 = (uint64_t)&v94 - v21;
  __chkstk_darwin(v22);
  v96 = (uint64_t)&v94 - v23;
  __chkstk_darwin(v24);
  v95 = (uint64_t)&v94 - v25;
  __chkstk_darwin(v26);
  v101 = (uint64_t)&v94 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v94 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v94 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v94 - v35;
  v107 = _swiftEmptyArrayStorage;
  sub_25BDA8((uint64_t)v16);
  v105 = v18;
  v106 = v17;
  v37 = v17;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v38(v16, 1, v37) == 1)
  {
    sub_1459C((uint64_t)v16, &qword_3B66A8);
  }
  else
  {
    sub_3C56C((uint64_t)v16, (uint64_t)v36, type metadata accessor for ActionMenu.Child);
    sub_14510((uint64_t)v36, (uint64_t)v33, type metadata accessor for ActionMenu.Child);
    v39 = sub_10CAC(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v41 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    if (v41 >= v40 >> 1)
      v39 = sub_10CAC(v40 > 1, v41 + 1, 1, v39);
    *(_QWORD *)(v39 + 16) = v41 + 1;
    sub_3C56C((uint64_t)v33, v39+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v41, type metadata accessor for ActionMenu.Child);
    v107 = (_QWORD *)v39;
    sub_145D8((uint64_t)v36, type metadata accessor for ActionMenu.Child);
  }
  v42 = sub_25C404(0);
  sub_1E4208((uint64_t)v42);
  sub_25D258((uint64_t)v13);
  if (v38(v13, 1, v106) == 1)
  {
    sub_1459C((uint64_t)v13, &qword_3B66A8);
  }
  else
  {
    sub_3C56C((uint64_t)v13, (uint64_t)v30, type metadata accessor for ActionMenu.Child);
    sub_14510((uint64_t)v30, v101, type metadata accessor for ActionMenu.Child);
    v43 = (unint64_t)v107;
    if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
      v43 = sub_10CAC(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
    v45 = *(_QWORD *)(v43 + 16);
    v44 = *(_QWORD *)(v43 + 24);
    if (v45 >= v44 >> 1)
      v43 = sub_10CAC(v44 > 1, v45 + 1, 1, v43);
    *(_QWORD *)(v43 + 16) = v45 + 1;
    sub_3C56C(v101, v43+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v45, type metadata accessor for ActionMenu.Child);
    v107 = (_QWORD *)v43;
    sub_145D8((uint64_t)v30, type metadata accessor for ActionMenu.Child);
  }
  v46 = v2[11].i64[0];
  v47 = v2[11].i64[1];
  v48 = v2[15].u8[0];
  v49 = (uint64_t)v102;
  if (v48 == 1)
  {
    sub_25DFD0(v46, v47, (uint64_t)v102);
  }
  else
  {
    if (v48 != 9
      || (v50 = vorrq_s8(v2[13], v2[14]),
          *(_QWORD *)&vorr_s8(*(int8x8_t *)v50.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL)) | v2[12].i64[1] | v2[12].i64[0] | v47 | v46)
      || (v51 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection"),
          v52 = UITraitCollection.interfaceIdiomIsMac.getter(v51),
          v51,
          (v52 & 1) != 0))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v49, 1, 1, v106);
LABEL_20:
      sub_1459C(v49, &qword_3B66A8);
      goto LABEL_21;
    }
    sub_25DB40(v49);
  }
  if (v38((char *)v49, 1, v106) == 1)
    goto LABEL_20;
  v90 = v95;
  sub_3C56C(v49, v95, type metadata accessor for ActionMenu.Child);
  sub_14510(v90, v96, type metadata accessor for ActionMenu.Child);
  v91 = (unint64_t)v107;
  if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
    v91 = sub_10CAC(0, *(_QWORD *)(v91 + 16) + 1, 1, v91);
  v93 = *(_QWORD *)(v91 + 16);
  v92 = *(_QWORD *)(v91 + 24);
  if (v93 >= v92 >> 1)
    v91 = sub_10CAC(v92 > 1, v93 + 1, 1, v91);
  *(_QWORD *)(v91 + 16) = v93 + 1;
  sub_3C56C(v96, v91+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v93, type metadata accessor for ActionMenu.Child);
  v107 = (_QWORD *)v91;
  sub_145D8(v95, type metadata accessor for ActionMenu.Child);
LABEL_21:
  v53 = sub_25EBD8();
  if (v53[2])
  {
    v102 = v2;
    v54 = type metadata accessor for ArtworkModel(0);
    v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v56 = (uint64_t)v99;
    v55(v99, 1, 1, v54);
    v57 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v59 = v58;
    v60 = v103;
    sub_267BC(v56, v103, &qword_3BEB70);
    v61 = v104;
    v62 = (uint64_t)v4 + *(int *)(v104 + 28);
    v55((char *)v62, 1, 1, v54);
    *v4 = v57;
    v4[1] = v59;
    v4[2] = 0;
    v4[3] = 0xE000000000000000;
    v4[4] = 0;
    v4[5] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v60, v62, &qword_3BEB70);
    *(unint64_t *)((char *)v4 + *(int *)(v61 + 32)) = (unint64_t)v53;
    v63 = v97;
    sub_3C56C((uint64_t)v4, v97, type metadata accessor for ActionMenu);
    swift_storeEnumTagMultiPayload(v63, v106, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C(v56, &qword_3BEB70);
    v64 = (unint64_t)v107;
    if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
      v64 = sub_10CAC(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
    v66 = *(_QWORD *)(v64 + 16);
    v65 = *(_QWORD *)(v64 + 24);
    if (v66 >= v65 >> 1)
      v64 = sub_10CAC(v65 > 1, v66 + 1, 1, v64);
    *(_QWORD *)(v64 + 16) = v66 + 1;
    sub_3C56C(v63, v64+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v66, type metadata accessor for ActionMenu.Child);
    v107 = (_QWORD *)v64;
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = (uint64_t)v99;
  }
  v67 = sub_25EDE8();
  if (v67[2])
  {
    v68 = type metadata accessor for ArtworkModel(0);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
    v69(v56, 1, 1, v68);
    v70 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v72 = v71;
    v73 = v103;
    sub_267BC(v56, v103, &qword_3BEB70);
    v74 = v104;
    v75 = (uint64_t)v4 + *(int *)(v104 + 28);
    v69(v75, 1, 1, v68);
    *v4 = v70;
    v4[1] = v72;
    v4[2] = 0;
    v4[3] = 0xE000000000000000;
    v4[4] = 0;
    v4[5] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v73, v75, &qword_3BEB70);
    *(unint64_t *)((char *)v4 + *(int *)(v74 + 32)) = (unint64_t)v67;
    v76 = v98;
    sub_3C56C((uint64_t)v4, v98, type metadata accessor for ActionMenu);
    swift_storeEnumTagMultiPayload(v76, v106, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C(v56, &qword_3BEB70);
    v77 = (unint64_t)v107;
    if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
      v77 = sub_10CAC(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
    v79 = *(_QWORD *)(v77 + 16);
    v78 = *(_QWORD *)(v77 + 24);
    v80 = v100;
    if (v79 >= v78 >> 1)
      v77 = sub_10CAC(v78 > 1, v79 + 1, 1, v77);
    *(_QWORD *)(v77 + 16) = v79 + 1;
    sub_3C56C(v76, v77+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v79, type metadata accessor for ActionMenu.Child);
    v107 = (_QWORD *)v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    v80 = v100;
  }
  ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x73697370696C6C65, 0xE800000000000000, 0, 0, 0, 0);
  v81 = type metadata accessor for ArtworkModel(0);
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56);
  v82(v56, 0, 1, v81);
  v83 = v107;
  v84 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v86 = v85;
  v87 = v104;
  v88 = (uint64_t)v80 + *(int *)(v104 + 28);
  v82(v88, 1, 1, v81);
  *v80 = v84;
  v80[1] = v86;
  v80[2] = 0;
  v80[3] = 0xE000000000000000;
  v80[4] = 0;
  v80[5] = 0;
  result = sub_3C454(v56, v88, &qword_3BEB70);
  *(unint64_t *)((char *)v80 + *(int *)(v87 + 32)) = (unint64_t)v83;
  return result;
}

uint64_t sub_25BDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v47;
  _BYTE v48[40];
  _QWORD v49[5];
  char v50[80];
  Swift::String v51;

  v3 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v3);
  v5 = (unint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  v15 = sub_1A0A14(v1 + 176, (uint64_t)v50);
  if ((EpisodeListType.showsHidePlayedEpisodesControls.getter(v15) & 1) != 0)
  {
    v47 = a1;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v49, 32, 0);
    v17 = EpisodeListSettings.hidePlayedEpisodes.getter(v16);
    swift_endAccess(v49);
    v18 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v19 = UITraitCollection.interfaceIdiomIsMac.getter(v18);

    if ((v19 & 1) != 0)
    {
      ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x73616C732E657965, 0xE900000000000068, 0, 0, 0, 0);
      v20 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 0, 1, v20);
    }
    else
    {
      v20 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
    }
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v51._object = (void *)0xE000000000000000;
    v24._object = (void *)0x8000000000314BE0;
    v24._countAndFlagsBits = 0xD000000000000014;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v51);
    countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;

    v27 = swift_allocObject(&unk_38C550, 24, 7);
    swift_weakInit(v27 + 16);
    v28 = swift_allocObject(&unk_38C840, 25, 7);
    *(_QWORD *)(v28 + 16) = v27;
    *(_BYTE *)(v28 + 24) = v17 & 1;
    v29 = swift_retain();
    static ActionMetrics.notInstrumented.getter(v29);
    v30 = type metadata accessor for ClosureAction(0);
    v43 = v11;
    v44 = v17;
    v31 = v30;
    swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v32 = sub_213C1C(0, 0, 32, (uint64_t)v8, (uint64_t)sub_26168C, v28);
    swift_release(v27);
    swift_release(v28);
    v49[3] = v31;
    v49[4] = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
    v49[0] = v32;
    v33 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v35 = v34;
    sub_267BC((uint64_t)v14, (uint64_t)v11, &qword_3BEB70);
    sub_267BC((uint64_t)v49, (uint64_t)v48, &qword_3B0C50);
    v36 = (uint64_t)v5 + v3[6];
    type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v36, 1, 1, v20);
    v37 = v3[7];
    *((_BYTE *)v5 + v37) = 2;
    v38 = (uint64_t)v5 + v3[9];
    *(_QWORD *)(v38 + 32) = 0;
    *(_OWORD *)v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    *v5 = v33;
    v5[1] = v35;
    v39 = (unint64_t)object;
    v5[2] = countAndFlagsBits;
    v5[3] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454((uint64_t)v43, v36, &qword_3BEB70);
    *((_BYTE *)v5 + v37) = 2;
    *((_BYTE *)v5 + v3[8]) = (v44 & 1) == 0;
    sub_3C454((uint64_t)v48, v38, &qword_3B0C50);
    v40 = v47;
    sub_3C56C((uint64_t)v5, v47, type metadata accessor for ActionMenu.Item);
    v41 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload(v40, v41, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C((uint64_t)v14, &qword_3BEB70);
    sub_1459C((uint64_t)v49, &qword_3B0C50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  else
  {
    v21 = type metadata accessor for ActionMenu.Child(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
}

uint64_t sub_25C294(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  a1 += 16;
  swift_beginAccess(a1, v21, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v12 = result;
    v13 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    v14 = swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v20, 0, 0);
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
    v15(v10, v13, v4, v14);
    EpisodeListSettings.hidePlayedEpisodes.setter((a2 & 1) == 0);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v15)(v7, v13, v4);
    v16 = swift_beginAccess(v13, v19, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v13, v10, v4, v16);
    swift_endAccess(v19);
    sub_253854();
    v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v17(v10, v4);
    v17(v7, v4);
    return swift_release(v12);
  }
  return result;
}

_QWORD *sub_25C404(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  id v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  void *object;
  uint64_t countAndFlagsBits;
  char *v123;
  uint64_t v124;
  void *v125;
  id v126;
  char *v127;
  uint64_t v128;
  char *v129;
  int *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  _BYTE v135[40];
  _QWORD v136[3];
  uint64_t v137;
  uint64_t v138;
  char v139[40];
  Swift::String v140;
  Swift::String v141;
  Swift::String v142;

  v2 = v1;
  v4 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v7);
  v134 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v117 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v117 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v117 - v19;
  v21 = sub_1A0A14(v1 + 176, (uint64_t)v139);
  v22 = EpisodeListType.availableSortTypes.getter(v21);
  v23 = sub_13968(v22, (uint64_t)&off_375CF8);
  v130 = (int *)v4;
  if ((v23 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_13968(v22, (uint64_t)&off_375D20);
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      return _swiftEmptyArrayStorage;
  }
  v127 = v20;
  v129 = v11;
  v133 = v2;
  v25 = swift_beginAccess(v2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v136, 32, 0);
  v26 = EpisodeListSettings.sort.getter(v25);
  swift_endAccess(v136);
  v27 = EpisodeSortType.rawValue.getter(v26);
  v29 = v28;
  v30 = 1;
  v32 = EpisodeSortType.rawValue.getter(1);
  if (v27 != v32 || v29 != v31)
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v32, v31, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      goto LABEL_8;
    v112 = EpisodeSortType.rawValue.getter(v26);
    v114 = v113;
    v116 = EpisodeSortType.rawValue.getter(3);
    if (v112 != v116 || v114 != v115)
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v112, v114, v116, v115, 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0928);
  v35 = type metadata accessor for ActionMenu.Child(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 72);
  v38 = *(unsigned __int8 *)(v36 + 80);
  v39 = (v38 + 32) & ~v38;
  v132 = v35;
  v131 = v30;
  if ((a1 & 1) != 0)
  {
    v127 = (char *)v37;
    v40 = swift_allocObject(v34, v39 + 2 * v37, v38 | 7);
    v128 = v40;
    *(_OWORD *)(v40 + 16) = xmmword_2EA080;
    v125 = (void *)(v40 + v39);
    v126 = (id)objc_opt_self(NSBundle);
    v41 = objc_msgSend(v126, "mainBundle");
    v140._object = (void *)0xE000000000000000;
    v42._object = (void *)0x8000000000314C20;
    v42._countAndFlagsBits = 0xD000000000000010;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v140._countAndFlagsBits = 0;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v140);
    countAndFlagsBits = v44._countAndFlagsBits;
    object = v44._object;

    v45 = type metadata accessor for ArtworkModel(0);
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
    v47 = (uint64_t)v14;
    v118 = v14;
    v120 = v45;
    v46(v14, 1, 1, v45);
    v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v46;
    v119 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v46;
    v49 = swift_allocObject(&unk_38C550, 24, 7);
    v50 = (uint64_t)v134;
    v51 = v49;
    swift_weakInit(v49 + 16);
    v52 = swift_retain();
    static ActionMetrics.notInstrumented.getter(v52);
    v53 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    v54 = sub_213C1C(0, 0, 32, v50, (uint64_t)sub_2616A4, v51);
    swift_release_n(v51, 2);
    v137 = v53;
    v124 = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
    v138 = v124;
    v136[0] = v54;
    v55 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v57 = v56;
    sub_267BC(v47, (uint64_t)v17, &qword_3BEB70);
    sub_267BC((uint64_t)v136, (uint64_t)v135, &qword_3B0C50);
    v58 = v130;
    v59 = (uint64_t)v6 + v130[6];
    v48(v59, 1, 1, v45);
    v123 = v17;
    v60 = v58[7];
    *((_BYTE *)v6 + v60) = 2;
    v61 = (uint64_t)v6 + v58[9];
    *(_QWORD *)(v61 + 32) = 0;
    *(_OWORD *)v61 = 0u;
    *(_OWORD *)(v61 + 16) = 0u;
    *v6 = v55;
    v6[1] = v57;
    v62 = (unint64_t)object;
    v6[2] = countAndFlagsBits;
    v6[3] = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454((uint64_t)v17, v59, &qword_3BEB70);
    *((_BYTE *)v6 + v60) = 2;
    *((_BYTE *)v6 + v58[8]) = v131 & 1;
    sub_3C454((uint64_t)v135, v61, &qword_3B0C50);
    v63 = v125;
    sub_3C56C((uint64_t)v6, (uint64_t)v125, type metadata accessor for ActionMenu.Item);
    swift_storeEnumTagMultiPayload(v63, v132, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C((uint64_t)v118, &qword_3BEB70);
    sub_1459C((uint64_t)v136, &qword_3B0C50);
    v64 = objc_msgSend(v126, "mainBundle");
    v141._object = (void *)0xE000000000000000;
    v65._object = (void *)0x8000000000314C00;
    v65._countAndFlagsBits = 0xD000000000000010;
    v66._countAndFlagsBits = 0;
    v66._object = (void *)0xE000000000000000;
    v141._countAndFlagsBits = 0;
    v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v141);
    v126 = (id)v67._countAndFlagsBits;

    v68 = (uint64_t)v129;
    v69 = v120;
    v70 = v119;
    v119((uint64_t)v129, 1, 1, v120);
    v127 = &v127[(_QWORD)v63];
    v71 = swift_allocObject(&unk_38C550, 24, 7);
    swift_weakInit(v71 + 16);
    v72 = swift_retain();
    v73 = (uint64_t)v134;
    static ActionMetrics.notInstrumented.getter(v72);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    v74 = sub_213C1C(0, 0, 32, v73, (uint64_t)sub_2616C0, v71);
    swift_release_n(v71, 2);
    v137 = v53;
    v138 = v124;
    v136[0] = v74;
    v75 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v77 = v76;
    v78 = v68;
    v79 = (uint64_t)v123;
    sub_267BC(v78, (uint64_t)v123, &qword_3BEB70);
    sub_267BC((uint64_t)v136, (uint64_t)v135, &qword_3B0C50);
    v80 = (uint64_t)v6 + v58[6];
    v70(v80, 1, 1, v69);
    v81 = v58[7];
    *((_BYTE *)v6 + v81) = 2;
    v82 = (uint64_t)v6 + v58[9];
    *(_QWORD *)(v82 + 32) = 0;
    *(_OWORD *)v82 = 0u;
    *(_OWORD *)(v82 + 16) = 0u;
    *v6 = v75;
    v6[1] = v77;
    v6[2] = (unint64_t)v126;
    v6[3] = (unint64_t)v67._object;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v79, v80, &qword_3BEB70);
    *((_BYTE *)v6 + v81) = 2;
    *((_BYTE *)v6 + v58[8]) = (v131 & 1) == 0;
    sub_3C454((uint64_t)v135, v82, &qword_3B0C50);
    v83 = (uint64_t)v6;
    v84 = (uint64_t)v127;
    sub_3C56C(v83, (uint64_t)v127, type metadata accessor for ActionMenu.Item);
    swift_storeEnumTagMultiPayload(v84, v132, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C((uint64_t)v129, &qword_3BEB70);
  }
  else
  {
    v85 = swift_allocObject(v34, v39 + v37, v38 | 7);
    v128 = v85;
    *(_OWORD *)(v85 + 16) = xmmword_2EA0D0;
    v129 = (char *)(v85 + v39);
    v86 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v142._object = (void *)0xE000000000000000;
    v87._object = (void *)0x8000000000314C00;
    v87._countAndFlagsBits = 0xD000000000000010;
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    v142._countAndFlagsBits = 0;
    v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v142);
    v126 = (id)v89._countAndFlagsBits;
    v90 = (uint64_t)v17;
    v125 = v89._object;

    v91 = type metadata accessor for ArtworkModel(0);
    v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56);
    v93 = (uint64_t)v127;
    v92(v127, 1, 1, v91);
    v94 = swift_allocObject(&unk_38C550, 24, 7);
    swift_weakInit(v94 + 16);
    v95 = swift_allocObject(&unk_38C868, 25, 7);
    *(_QWORD *)(v95 + 16) = v94;
    *(_BYTE *)(v95 + 24) = v30 & 1;
    v96 = swift_retain();
    v97 = (uint64_t)v134;
    static ActionMetrics.notInstrumented.getter(v96);
    v98 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v98, *(unsigned int *)(v98 + 48), *(unsigned __int16 *)(v98 + 52));
    v99 = sub_213C1C(0, 0, 32, v97, (uint64_t)sub_261698, v95);
    swift_release(v94);
    swift_release(v95);
    v137 = v98;
    v138 = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
    v136[0] = v99;
    v100 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v102 = v101;
    v103 = v90;
    sub_267BC(v93, v90, &qword_3BEB70);
    sub_267BC((uint64_t)v136, (uint64_t)v135, &qword_3B0C50);
    v104 = v130;
    v105 = (uint64_t)v6 + v130[6];
    v92((char *)v105, 1, 1, v91);
    v106 = v104[7];
    *((_BYTE *)v6 + v106) = 2;
    v107 = (uint64_t)v6 + v104[9];
    *(_QWORD *)(v107 + 32) = 0;
    *(_OWORD *)v107 = 0u;
    *(_OWORD *)(v107 + 16) = 0u;
    *v6 = v100;
    v6[1] = v102;
    v108 = (unint64_t)v125;
    v6[2] = (unint64_t)v126;
    v6[3] = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v103, v105, &qword_3BEB70);
    *((_BYTE *)v6 + v106) = 2;
    *((_BYTE *)v6 + v104[8]) = (v131 & 1) == 0;
    sub_3C454((uint64_t)v135, v107, &qword_3B0C50);
    v109 = (uint64_t)v6;
    v110 = (uint64_t)v129;
    sub_3C56C(v109, (uint64_t)v129, type metadata accessor for ActionMenu.Item);
    swift_storeEnumTagMultiPayload(v110, v132, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C(v93, &qword_3BEB70);
  }
  sub_1459C((uint64_t)v136, &qword_3B0C50);
  return (_QWORD *)v128;
}

uint64_t sub_25CF78(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v20[-v9 - 8];
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v12 = result;
    v13 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    v14 = swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v21, 0, 0);
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
    v15(v10, v13, v4, v14);
    if ((a2 & 1) != 0)
      v16 = 2;
    else
      v16 = 3;
    EpisodeListSettings.sort.setter(v16);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v15)(v7, v13, v4);
    v17 = swift_beginAccess(v13, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v13, v10, v4, v17);
    swift_endAccess(v20);
    sub_253854();
    v18 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v18(v10, v4);
    v18(v7, v4);
    return swift_release(v12);
  }
  return result;
}

uint64_t sub_25D0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  a1 += 16;
  swift_beginAccess(a1, v21, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v12 = result;
    v13 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    v14 = swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v20, 0, 0);
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
    v15(v10, v13, v4, v14);
    EpisodeListSettings.sort.setter(a2);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v15)(v7, v13, v4);
    v16 = swift_beginAccess(v13, v19, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v13, v10, v4, v16);
    swift_endAccess(v19);
    sub_253854();
    v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v17(v10, v4);
    v17(v7, v4);
    return swift_release(v12);
  }
  return result;
}

uint64_t sub_25D258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *object;
  unint64_t countAndFlagsBits;
  char *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[40];
  _QWORD v61[6];
  Swift::String v62;

  v2 = v1;
  v4 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  if (*(_BYTE *)(v2 + 240) != 6)
    goto LABEL_6;
  v55 = v9;
  v56 = v13;
  v57 = (int *)v4;
  v58 = (uint64_t)&v51 - v12;
  v59 = a1;
  v15 = *(_QWORD *)(v2 + 176);
  v14 = *(_QWORD *)(v2 + 184);
  v16 = *(_QWORD *)(v2 + 192);
  v17 = *(_QWORD *)(v2 + 200);
  object = *(void **)(v2 + 208);
  countAndFlagsBits = v16;
  v18 = *(_QWORD *)(v2 + 216);
  v19 = *(_QWORD *)(v2 + 232);
  v51 = *(_QWORD *)(v2 + 224);
  v52 = v18;
  v21 = *(_QWORD *)(v2 + 72);
  v20 = *(_QWORD *)(v2 + 80);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 48), v21);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 576);
  swift_bridgeObjectRetain();
  if ((v22(v15, v14, v21, v20) & 1) == 0)
  {
    sub_87198(v15, v14, countAndFlagsBits, v17, (uint64_t)object, v52, v51, v19, 6);
    a1 = v59;
LABEL_6:
    v27 = type metadata accessor for ActionMenu.Child(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 1, 1, v27);
  }
  v23 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v24 = UITraitCollection.interfaceIdiomIsMac.getter(v23);

  v25 = v58;
  if ((v24 & 1) != 0)
  {
    v26 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  else
  {
    ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x6B72616D6B6F6F62, 0xEE006873616C732ELL, 0, 0, 0, 0);
    v26 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v62._object = (void *)0xEA00000000006C6CLL;
  v30._countAndFlagsBits = 0x415F455641534E55;
  v30._object = (void *)0xEA00000000004C4CLL;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0x4120657661736E55;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v62);
  object = v32._object;
  countAndFlagsBits = v32._countAndFlagsBits;

  v33 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v33 + 16);
  v34 = (_QWORD *)swift_allocObject(&unk_38C818, 40, 7);
  v34[2] = v33;
  v34[3] = v15;
  v34[4] = v14;
  v35 = swift_retain();
  v36 = (uint64_t)v55;
  static ActionMetrics.notInstrumented.getter(v35);
  v37 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  v38 = sub_213C1C(0, 0, 32, v36, (uint64_t)sub_26165C, (uint64_t)v34);
  swift_release(v33);
  swift_release(v34);
  v61[3] = v37;
  v61[4] = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
  v61[0] = v38;
  v39 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v41 = v40;
  v42 = v56;
  sub_267BC(v25, v56, &qword_3BEB70);
  sub_267BC((uint64_t)v61, (uint64_t)v60, &qword_3B0C50);
  v43 = v57;
  v44 = (uint64_t)v6 + v57[6];
  type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v44, 1, 1, v26);
  v45 = v43[7];
  *((_BYTE *)v6 + v45) = 2;
  v46 = (uint64_t)v6 + v43[9];
  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *v6 = v39;
  v6[1] = v41;
  v47 = (unint64_t)object;
  v6[2] = countAndFlagsBits;
  v6[3] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454(v42, v44, &qword_3BEB70);
  *((_BYTE *)v6 + v45) = 2;
  *((_BYTE *)v6 + v43[8]) = 1;
  sub_3C454((uint64_t)v60, v46, &qword_3B0C50);
  v48 = (uint64_t)v6;
  v49 = v59;
  sub_3C56C(v48, v59, type metadata accessor for ActionMenu.Item);
  v50 = type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload(v49, v50, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v58, &qword_3BEB70);
  sub_1459C((uint64_t)v61, &qword_3B0C50);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
}

uint64_t sub_25D79C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  char v43[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2820);
  __chkstk_darwin(v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v43, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v14 = (_QWORD *)result;
    static Logger.podcastsStatesCoordination.getter(result);
    v15 = swift_bridgeObjectRetain_n(a3, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v19 = swift_slowAlloc(22, -1);
      v40 = v10;
      v20 = v19;
      v39 = swift_slowAlloc(64, -1);
      v42[0] = v39;
      *(_DWORD *)v20 = 136315394;
      swift_bridgeObjectRetain();
      v41 = sub_69298(a2, a3, v42);
      v37 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v20 + 12) = 2080;
      v36 = v20 + 14;
      v21 = objc_msgSend((id)objc_opt_self(NSThread), "callStackSymbols");
      v35 = v18;
      v22 = a2;
      v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String);
      v38 = v9;
      v24 = v23;

      v25 = Array.description.getter(v24, &type metadata for String);
      v27 = v26;
      swift_bridgeObjectRelease();
      v41 = sub_69298(v25, v27, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v37);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, (os_log_type_t)v35, "ModernEpisodePresenter.buildUnsaveAllMenuItem() - Unsaving all bookmarked episodes for podcast UUID %s %s", (uint8_t *)v20, 0x16u);
      v28 = v39;
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v12, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
      v22 = a2;
    }
    v29 = v14[15];
    v30 = v14[16];
    __swift_project_boxed_opaque_existential_1(v14 + 12, v29);
    v31 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v30 + 32))(v22, a3, v29, v30);
    v42[3] = type metadata accessor for ModernEpisodesPresenter(0);
    v42[0] = (uint64_t)v14;
    v32 = type metadata accessor for ClickLocationElement(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v8, 1, 1, v32);
    swift_retain();
    swift_retain();
    v33 = sub_260964(v31, (uint64_t)v42, 0, (uint64_t)v8, (uint64_t)v14);
    swift_release(v31);
    swift_release(v14);
    swift_release(v33);
    sub_1459C((uint64_t)v8, &qword_3B2820);
    sub_1459C((uint64_t)v42, (uint64_t *)&unk_3BC540);
    return swift_release(v31);
  }
  return result;
}

uint64_t sub_25DB40@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v44;
  _BYTE v45[40];
  _QWORD v46[5];
  Swift::String v47;

  v3 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v3);
  v5 = (unint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - v13;
  v15 = v1[9];
  v16 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v15);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 536))(v15, v16) & 1) != 0)
  {
    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v18 = UITraitCollection.interfaceIdiomIsMac.getter(v17);

    if ((v18 & 1) != 0)
    {
      v19 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
    }
    else
    {
      ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x6873617274, 0xE500000000000000, 0, 0, 0, 0);
      v19 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v47._object = (void *)0xE000000000000000;
    v23._object = (void *)0x8000000000314BC0;
    v23._countAndFlagsBits = 0xD000000000000014;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v47._countAndFlagsBits = 0;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v47);
    object = v25._object;
    countAndFlagsBits = v25._countAndFlagsBits;

    v26 = swift_allocObject(&unk_38C550, 24, 7);
    v44 = a1;
    v27 = v26;
    swift_weakInit(v26 + 16);
    v28 = swift_retain();
    static ActionMetrics.notInstrumented.getter(v28);
    v29 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = sub_213C1C(0, 0, 32, (uint64_t)v8, (uint64_t)sub_2614D4, v27);
    swift_release_n(v27, 2);
    v46[3] = v29;
    v46[4] = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
    v46[0] = v30;
    v31 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v33 = v32;
    sub_267BC((uint64_t)v14, (uint64_t)v11, &qword_3BEB70);
    sub_267BC((uint64_t)v46, (uint64_t)v45, &qword_3B0C50);
    v34 = (uint64_t)v5 + v3[6];
    type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v34, 1, 1, v19);
    v35 = (uint64_t)v11;
    v36 = v3[7];
    *((_BYTE *)v5 + v36) = 2;
    v37 = (uint64_t)v5 + v3[9];
    *(_QWORD *)(v37 + 32) = 0;
    *(_OWORD *)v37 = 0u;
    *(_OWORD *)(v37 + 16) = 0u;
    *v5 = v31;
    v5[1] = v33;
    v38 = (unint64_t)object;
    v5[2] = countAndFlagsBits;
    v5[3] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v35, v34, &qword_3BEB70);
    *((_BYTE *)v5 + v36) = 1;
    *((_BYTE *)v5 + v3[8]) = 1;
    sub_3C454((uint64_t)v45, v37, &qword_3B0C50);
    v39 = v44;
    sub_3C56C((uint64_t)v5, v44, type metadata accessor for ActionMenu.Item);
    v40 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload(v39, v40, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C((uint64_t)v14, &qword_3BEB70);
    sub_1459C((uint64_t)v46, &qword_3B0C50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  }
  else
  {
    v20 = type metadata accessor for ActionMenu.Child(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
}

uint64_t sub_25DFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  id v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  _QWORD v59[5];
  Swift::String v60;

  v57 = a3;
  v55 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v55);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  v17 = v3[9];
  v18 = v3[10];
  __swift_project_boxed_opaque_existential_1(v3 + 6, v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 528);
  v56 = a1;
  v20 = a1;
  v21 = a2;
  if ((v19(v20, a2, v17, v18) & 1) != 0)
  {
    v53 = (unint64_t *)v7;
    v54 = v13;
    v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v23 = UITraitCollection.interfaceIdiomIsMac.getter(v22);

    v24 = (uint64_t)v16;
    v26 = (int *)v55;
    v25 = v56;
    if ((v23 & 1) != 0)
    {
      v27 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 1, 1, v27);
    }
    else
    {
      ArtworkModel.init(glyphName:accessibilityTitle:isCustomSymbol:isMulticolorSymbol:)(0x6873617274, 0xE500000000000000, 0, 0, 0, 0);
      v27 = type metadata accessor for ArtworkModel(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
    }
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31._countAndFlagsBits = 0xD00000000000001FLL;
    v60._object = (void *)0x80000000003140A0;
    v31._object = (void *)0x8000000000313760;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v60._countAndFlagsBits = 0xD000000000000010;
    v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v60);
    object = v33._object;
    countAndFlagsBits = v33._countAndFlagsBits;

    v34 = swift_allocObject(&unk_38C550, 24, 7);
    swift_weakInit(v34 + 16);
    v35 = (_QWORD *)swift_allocObject(&unk_38C7F0, 40, 7);
    v35[2] = v34;
    v35[3] = v25;
    v35[4] = v21;
    swift_retain();
    v36 = swift_bridgeObjectRetain();
    static ActionMetrics.notInstrumented.getter(v36);
    v37 = type metadata accessor for ClosureAction(0);
    swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
    v38 = sub_213C1C(0, 0, 32, (uint64_t)v10, (uint64_t)sub_261590, (uint64_t)v35);
    swift_release(v34);
    swift_release(v35);
    v59[3] = v37;
    v59[4] = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
    v59[0] = v38;
    v39 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    v41 = v40;
    v42 = (uint64_t)v54;
    sub_267BC(v24, (uint64_t)v54, &qword_3BEB70);
    sub_267BC((uint64_t)v59, (uint64_t)v58, &qword_3B0C50);
    v43 = v53;
    v44 = (uint64_t)v53 + v26[6];
    type metadata accessor for ArtworkModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v44, 1, 1, v27);
    v45 = v26[7];
    *((_BYTE *)v43 + v45) = 2;
    v46 = (uint64_t)v43 + v26[9];
    *(_QWORD *)(v46 + 32) = 0;
    *(_OWORD *)v46 = 0u;
    *(_OWORD *)(v46 + 16) = 0u;
    *v43 = v39;
    v43[1] = v41;
    v47 = (unint64_t)object;
    v43[2] = countAndFlagsBits;
    v43[3] = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_3C454(v42, v44, &qword_3BEB70);
    *((_BYTE *)v43 + v45) = 1;
    *((_BYTE *)v43 + v26[8]) = 1;
    sub_3C454((uint64_t)v58, v46, &qword_3B0C50);
    v48 = v57;
    sub_3C56C((uint64_t)v43, v57, type metadata accessor for ActionMenu.Item);
    v49 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload(v48, v49, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1459C(v24, &qword_3BEB70);
    sub_1459C((uint64_t)v59, &qword_3B0C50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  else
  {
    v28 = type metadata accessor for ActionMenu.Child(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v57, 1, 1, v28);
  }
}

_QWORD *sub_25E4BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  _BYTE v14[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2820);
  __chkstk_darwin(v2);
  v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v14, 0, 0);
  result = (_QWORD *)swift_weakLoadStrong(a1);
  if (result)
  {
    v6 = (uint64_t)result;
    v7 = result[15];
    v8 = result[16];
    __swift_project_boxed_opaque_existential_1(result + 12, v7);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
    v13[3] = type metadata accessor for ModernEpisodesPresenter(0);
    v13[0] = v6;
    v10 = type metadata accessor for ClickLocationElement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    swift_retain();
    swift_retain();
    v11 = sub_260964(v9, (uint64_t)v13, 0, (uint64_t)v4, v6);
    swift_release(v9);
    swift_release(v6);
    swift_release(v11);
    sub_1459C((uint64_t)v4, &qword_3B2820);
    sub_1459C((uint64_t)v13, (uint64_t *)&unk_3BC540);
    return (_QWORD *)swift_release(v9);
  }
  return result;
}

_QWORD *sub_25E618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  _BYTE v18[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2820);
  __chkstk_darwin(v6);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v18, 0, 0);
  result = (_QWORD *)swift_weakLoadStrong(a1);
  if (result)
  {
    v10 = (uint64_t)result;
    v11 = result[15];
    v12 = result[16];
    __swift_project_boxed_opaque_existential_1(result + 12, v11);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(a2, a3, v11, v12);
    v17[3] = type metadata accessor for ModernEpisodesPresenter(0);
    v17[0] = v10;
    v14 = type metadata accessor for ClickLocationElement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    swift_retain();
    swift_retain();
    v15 = sub_260964(v13, (uint64_t)v17, 0, (uint64_t)v8, v10);
    swift_release(v13);
    swift_release(v10);
    swift_release(v15);
    sub_1459C((uint64_t)v8, &qword_3B2820);
    sub_1459C((uint64_t)v17, (uint64_t *)&unk_3BC540);
    return (_QWORD *)swift_release(v13);
  }
  return result;
}

uint64_t sub_25E788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _BYTE v57[40];
  _QWORD v58[5];

  v54 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v54);
  v7 = (unint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v18 = UITraitCollection.interfaceIdiomIsMac.getter(v17);

  v55 = v13;
  v56 = a3;
  if ((v18 & 1) != 0)
  {
    v19 = (uint64_t)v16;
    EpisodeSortType.imageForSort(with:)(a2, a1, (uint64_t)v16);
  }
  else
  {
    v20 = type metadata accessor for ArtworkModel(0);
    v19 = (uint64_t)v16;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
  }
  v21 = EpisodeSortType.rawValue.getter(a2);
  v23 = v22;
  v25 = EpisodeSortType.rawValue.getter(a1);
  if (v21 == v25 && v23 == v24)
  {
    swift_bridgeObjectRelease_n(v23, 2);
    v26 = 0;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = 0;
    if ((v27 & 1) == 0)
      v26 = EpisodeSortType.baseSortTypeMatches(other:)(a1, a2) ^ 1;
  }
  v53 = v26;
  EpisodeSortType.displayTitle.getter(a1);
  v51 = v29;
  v52 = v28;
  v30 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v30 + 16);
  v31 = swift_allocObject(&unk_38C890, 25, 7);
  *(_QWORD *)(v31 + 16) = v30;
  *(_BYTE *)(v31 + 24) = a1;
  v32 = swift_retain();
  static ActionMetrics.notInstrumented.getter(v32);
  v33 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = sub_213C1C(0, 0, 32, (uint64_t)v10, (uint64_t)sub_2616DC, v31);
  swift_release(v30);
  swift_release(v31);
  v58[3] = v33;
  v58[4] = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
  v58[0] = v34;
  v35 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v37 = v36;
  v50 = v19;
  v38 = (uint64_t)v55;
  sub_267BC(v19, (uint64_t)v55, &qword_3BEB70);
  sub_267BC((uint64_t)v58, (uint64_t)v57, &qword_3B0C50);
  v39 = (int *)v54;
  v40 = (uint64_t)v7 + *(int *)(v54 + 24);
  v41 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v42 = v39[7];
  *((_BYTE *)v7 + v42) = 2;
  v43 = (uint64_t)v7 + v39[9];
  *(_QWORD *)(v43 + 32) = 0;
  *(_OWORD *)v43 = 0u;
  *(_OWORD *)(v43 + 16) = 0u;
  *v7 = v35;
  v7[1] = v37;
  v44 = v51;
  v7[2] = v52;
  v7[3] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454(v38, v40, &qword_3BEB70);
  *((_BYTE *)v7 + v42) = 2;
  *((_BYTE *)v7 + v39[8]) = v53 & 1;
  sub_3C454((uint64_t)v57, v43, &qword_3B0C50);
  v45 = (uint64_t)v7;
  v46 = v56;
  sub_3C56C(v45, v56, type metadata accessor for ActionMenu.Item);
  v47 = type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload(v46, v47, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C(v50, &qword_3BEB70);
  sub_1459C((uint64_t)v58, &qword_3B0C50);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
}

_QWORD *sub_25EBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  _BYTE v22[72];

  v1 = v0;
  v2 = sub_1A0A14(v0 + 176, (uint64_t)v22);
  v3 = EpisodeListType.availableSortTypes.getter(v2);
  if ((sub_13968(v3, (uint64_t)&off_375D48) & 1) != 0 || (sub_13968(v3, (uint64_t)&off_375D70) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  v5 = swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v21, 32, 0);
  v6 = EpisodeListSettings.sort.getter(v5);
  swift_endAccess(v21);
  v7 = *(_QWORD *)(v3 + 16);
  if (v7)
  {
    v21[0] = _swiftEmptyArrayStorage;
    sub_1809FC(0, v7, 0);
    v8 = 0;
    v9 = (_QWORD *)v21[0];
    while (1)
    {
      v10 = *(unsigned __int8 *)(v3 + v8 + 32);
      v11 = EpisodeSortType.rawValue.getter(v10);
      v13 = v12;
      v14 = EpisodeSortType.rawValue.getter(v6);
      if (v11 == v14 && v13 == v15)
      {
        swift_bridgeObjectRelease_n(v13, 2);
      }
      else
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_14;
      }
      LOBYTE(v10) = EpisodeSortType.ascendingSortType.getter(v10);
LABEL_14:
      v21[0] = v9;
      v19 = v9[2];
      v18 = v9[3];
      if (v19 >= v18 >> 1)
      {
        sub_1809FC(v18 > 1, v19 + 1, 1);
        v9 = (_QWORD *)v21[0];
      }
      ++v8;
      v9[2] = v19 + 1;
      *((_BYTE *)v9 + v19 + 32) = v10;
      if (v7 == v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  v9 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_retain();
  v4 = sub_260D3C((uint64_t)v9, v1, v6);
  swift_bridgeObjectRelease();
  swift_release(v1);
  return v4;
}

_QWORD *sub_25EDE8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  id v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v117;
  uint64_t v118;
  void *object;
  unint64_t countAndFlagsBits;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  _BYTE v137[40];
  _QWORD v138[3];
  uint64_t v139;
  uint64_t v140;
  char v141[16];
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  Swift::String v145;

  v1 = v0;
  v2 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v2);
  v4 = (unint64_t *)((char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v8);
  v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v117 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v117 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v117 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v117 - v21;
  v23 = sub_1A0A14(v0 + 176, (uint64_t)v141);
  if ((EpisodeListType.allowsPubDateLimiting.getter(v23) & 1) == 0)
    return _swiftEmptyArrayStorage;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v138, 32, 0);
  v25 = EpisodeListSettings.pubDateLimit.getter(v24);
  v122 = v16;
  v26 = v25;
  v132 = v25;
  swift_endAccess(v138);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0928);
  v136 = type metadata accessor for ActionMenu.Child(0);
  v28 = *(_QWORD *)(v136 - 8);
  v134 = *(_QWORD *)(v28 + 72);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v124 = v10;
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject(v27, v30 + 4 * v134, v29 | 7);
  v121 = v31;
  *(_OWORD *)(v31 + 16) = xmmword_2ED8E0;
  v129 = v31 + v30;
  v133 = (id)objc_opt_self(NSBundle);
  v32 = objc_msgSend(v133, "mainBundle");
  v142._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0x6B6565572031;
  v33._object = (void *)0xE600000000000000;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v142._countAndFlagsBits = 0;
  v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v142);
  countAndFlagsBits = v35._countAndFlagsBits;
  v123 = v13;
  object = v35._object;

  v36 = type metadata accessor for ArtworkModel(0);
  v135 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v125 = v36;
  v135(v22, 1, 1, v36);
  LODWORD(v118) = v26 != 0;
  v37 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v37 + 16);
  v38 = swift_retain();
  v127 = v7;
  static ActionMetrics.notInstrumented.getter(v38);
  v39 = type metadata accessor for ClosureAction(0);
  v131 = v1;
  v40 = *(unsigned int *)(v39 + 48);
  v41 = *(unsigned __int16 *)(v39 + 52);
  v42 = v39;
  v128 = v39;
  swift_allocObject(v39, v40, v41);
  v43 = sub_213C1C(0, 0, 32, (uint64_t)v7, (uint64_t)sub_26159C, v37);
  swift_release_n(v37, 2);
  v139 = v42;
  v130 = sub_F1C0(&qword_3B2768, (void (*)(uint64_t))type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
  v140 = v130;
  v138[0] = v43;
  v44 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v46 = v45;
  sub_267BC((uint64_t)v22, (uint64_t)v19, &qword_3BEB70);
  sub_267BC((uint64_t)v138, (uint64_t)v137, &qword_3B0C50);
  v47 = (uint64_t)v4 + v2[6];
  v135((char *)v47, 1, 1, v36);
  v126 = v19;
  v48 = v2[7];
  v117 = v22;
  *((_BYTE *)v4 + v48) = 2;
  v49 = (uint64_t)v4 + v2[9];
  *(_QWORD *)(v49 + 32) = 0;
  *(_OWORD *)v49 = 0u;
  *(_OWORD *)(v49 + 16) = 0u;
  *v4 = v44;
  v4[1] = v46;
  v50 = (unint64_t)object;
  v4[2] = countAndFlagsBits;
  v4[3] = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454((uint64_t)v19, v47, &qword_3BEB70);
  *((_BYTE *)v4 + v48) = 2;
  *((_BYTE *)v4 + v2[8]) = v118;
  sub_3C454((uint64_t)v137, v49, &qword_3B0C50);
  v51 = v129;
  sub_3C56C((uint64_t)v4, v129, type metadata accessor for ActionMenu.Item);
  swift_storeEnumTagMultiPayload(v51, v136, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v117, &qword_3BEB70);
  sub_1459C((uint64_t)v138, &qword_3B0C50);
  v52 = objc_msgSend(v133, "mainBundle");
  v143._object = (void *)0xE000000000000000;
  v53._countAndFlagsBits = 0x736B6565572032;
  v53._object = (void *)0xE700000000000000;
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  v143._countAndFlagsBits = 0;
  v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v143);
  v118 = v55._countAndFlagsBits;
  v117 = v55._object;

  v56 = (uint64_t)v122;
  v57 = v125;
  v58 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v135;
  v135(v122, 1, 1, v125);
  LODWORD(object) = v132 != 1;
  countAndFlagsBits = v51 + v134;
  v59 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v59 + 16);
  v60 = swift_retain();
  v61 = (uint64_t)v127;
  static ActionMetrics.notInstrumented.getter(v60);
  v62 = v128;
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v63 = sub_213C1C(0, 0, 32, v61, (uint64_t)sub_2615B8, v59);
  swift_release_n(v59, 2);
  v139 = v62;
  v140 = v130;
  v138[0] = v63;
  v64 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v66 = v65;
  v67 = (uint64_t)v126;
  sub_267BC(v56, (uint64_t)v126, &qword_3BEB70);
  sub_267BC((uint64_t)v138, (uint64_t)v137, &qword_3B0C50);
  v68 = (uint64_t)v4 + v2[6];
  v58(v68, 1, 1, v57);
  v69 = v2[7];
  *((_BYTE *)v4 + v69) = 2;
  v70 = (uint64_t)v4 + v2[9];
  *(_QWORD *)(v70 + 32) = 0;
  *(_OWORD *)v70 = 0u;
  *(_OWORD *)(v70 + 16) = 0u;
  *v4 = v64;
  v4[1] = v66;
  v71 = (unint64_t)v117;
  v4[2] = v118;
  v4[3] = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454(v67, v68, &qword_3BEB70);
  *((_BYTE *)v4 + v69) = 2;
  *((_BYTE *)v4 + v2[8]) = (_BYTE)object;
  sub_3C454((uint64_t)v137, v70, &qword_3B0C50);
  v72 = countAndFlagsBits;
  sub_3C56C((uint64_t)v4, countAndFlagsBits, type metadata accessor for ActionMenu.Item);
  swift_storeEnumTagMultiPayload(v72, v136, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v122, &qword_3BEB70);
  sub_1459C((uint64_t)v138, &qword_3B0C50);
  v73 = objc_msgSend(v133, "mainBundle");
  v144._object = (void *)0xE000000000000000;
  v74._countAndFlagsBits = 0x68746E6F4D2031;
  v74._object = (void *)0xE700000000000000;
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  v144._countAndFlagsBits = 0;
  v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, (Swift::String_optional)0, (NSBundle)v73, v75, v144);
  v118 = v76._countAndFlagsBits;
  v117 = v76._object;

  v77 = (uint64_t)v123;
  v78 = v125;
  v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v135;
  v135(v123, 1, 1, v125);
  LODWORD(object) = v132 != 2;
  v122 = (char *)(2 * v134);
  countAndFlagsBits = v129 + 2 * v134;
  v80 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v80 + 16);
  v81 = swift_retain();
  v82 = (uint64_t)v127;
  static ActionMetrics.notInstrumented.getter(v81);
  v83 = v128;
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v84 = sub_213C1C(0, 0, 32, v82, (uint64_t)sub_2615D4, v80);
  swift_release_n(v80, 2);
  v139 = v83;
  v140 = v130;
  v138[0] = v84;
  v85 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v87 = v86;
  v88 = v2;
  v89 = (uint64_t)v126;
  sub_267BC(v77, (uint64_t)v126, &qword_3BEB70);
  sub_267BC((uint64_t)v138, (uint64_t)v137, &qword_3B0C50);
  v90 = (uint64_t)v4 + v88[6];
  v79(v90, 1, 1, v78);
  v91 = v88[7];
  *((_BYTE *)v4 + v91) = 2;
  v92 = (uint64_t)v4 + v88[9];
  *(_QWORD *)(v92 + 32) = 0;
  *(_OWORD *)v92 = 0u;
  *(_OWORD *)(v92 + 16) = 0u;
  *v4 = v85;
  v4[1] = v87;
  v93 = (unint64_t)v117;
  v4[2] = v118;
  v4[3] = v93;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454(v89, v90, &qword_3BEB70);
  *((_BYTE *)v4 + v91) = 2;
  *((_BYTE *)v4 + v88[8]) = (_BYTE)object;
  sub_3C454((uint64_t)v137, v92, &qword_3B0C50);
  v94 = countAndFlagsBits;
  sub_3C56C((uint64_t)v4, countAndFlagsBits, type metadata accessor for ActionMenu.Item);
  swift_storeEnumTagMultiPayload(v94, v136, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v123, &qword_3BEB70);
  sub_1459C((uint64_t)v138, &qword_3B0C50);
  v95 = objc_msgSend(v133, "mainBundle");
  v145._object = (void *)0xE000000000000000;
  v96._countAndFlagsBits = 7105601;
  v96._object = (void *)0xE300000000000000;
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  v145._countAndFlagsBits = 0;
  v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v145);
  v123 = (char *)v98._countAndFlagsBits;
  countAndFlagsBits = (unint64_t)v98._object;

  v99 = (uint64_t)v124;
  v100 = v125;
  v101 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v135;
  v135(v124, 1, 1, v125);
  LODWORD(v133) = v132 != 3;
  v134 += (uint64_t)&v122[v129];
  v102 = swift_allocObject(&unk_38C550, 24, 7);
  swift_weakInit(v102 + 16);
  v103 = swift_retain();
  v104 = (uint64_t)v127;
  static ActionMetrics.notInstrumented.getter(v103);
  v105 = v128;
  swift_allocObject(v128, *(unsigned int *)(v128 + 48), *(unsigned __int16 *)(v128 + 52));
  v106 = sub_213C1C(0, 0, 32, v104, (uint64_t)sub_2615F0, v102);
  swift_release_n(v102, 2);
  v139 = v105;
  v140 = v130;
  v138[0] = v106;
  v107 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v109 = v108;
  v110 = (uint64_t)v126;
  sub_267BC(v99, (uint64_t)v126, &qword_3BEB70);
  sub_267BC((uint64_t)v138, (uint64_t)v137, &qword_3B0C50);
  v111 = (uint64_t)v4 + v88[6];
  v101(v111, 1, 1, v100);
  v112 = v88[7];
  *((_BYTE *)v4 + v112) = 2;
  v113 = (uint64_t)v4 + v88[9];
  *(_QWORD *)(v113 + 32) = 0;
  *(_OWORD *)v113 = 0u;
  *(_OWORD *)(v113 + 16) = 0u;
  *v4 = v107;
  v4[1] = v109;
  v114 = countAndFlagsBits;
  v4[2] = (unint64_t)v123;
  v4[3] = v114;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_3C454(v110, v111, &qword_3BEB70);
  *((_BYTE *)v4 + v112) = 2;
  *((_BYTE *)v4 + v88[8]) = (_BYTE)v133;
  sub_3C454((uint64_t)v137, v113, &qword_3B0C50);
  v115 = v134;
  sub_3C56C((uint64_t)v4, v134, type metadata accessor for ActionMenu.Item);
  swift_storeEnumTagMultiPayload(v115, v136, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1459C((uint64_t)v124, &qword_3BEB70);
  sub_1459C((uint64_t)v138, &qword_3B0C50);
  return (_QWORD *)v121;
}

uint64_t sub_25FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for EpisodeListSettings(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  a1 += 16;
  swift_beginAccess(a1, v21, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v12 = result;
    v13 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    v14 = swift_beginAccess(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v20, 0, 0);
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
    v15(v10, v13, v4, v14);
    EpisodeListSettings.pubDateLimit.setter(a2);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v15)(v7, v13, v4);
    v16 = swift_beginAccess(v13, v19, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v13, v10, v4, v16);
    swift_endAccess(v19);
    sub_253854();
    v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v17(v10, v4);
    v17(v7, v4);
    return swift_release(v12);
  }
  return result;
}

_QWORD *sub_25FC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(a4 + 16);
  v5 = swift_bridgeObjectRetain();
  v6 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(v5, v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_25FCAC(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  BOOL v10;
  _BYTE v11[24];
  _BYTE v12[72];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_1A0A14(result + 176, (uint64_t)v12);
    v6 = sub_F3548((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_898F4);
    v7 = EpisodeListType.supportsEpisodeOrderFreezing.getter(v6);
    sub_F3548((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_87198);
    if ((v7 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_302898);
      v9 = swift_getKeyPath(&unk_3028C0);
      v10 = (v2 & 1) == 0;
      return static Published.subscript.setter(&v10, v5, KeyPath, v9);
    }
    else
    {
      return swift_release(v5);
    }
  }
  return result;
}

uint64_t sub_25FD8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[24];

  v5 = *a1;
  v6 = a2 + 16;
  swift_retain();
  v7 = sub_26225C(v5, a2);
  swift_release(a2);
  swift_beginAccess(v6, v10, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v9 = result;
    *(_QWORD *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves) = v7;
    swift_bridgeObjectRetain();
    swift_release(v9);
    result = swift_bridgeObjectRelease();
  }
  *a3 = v7;
  return result;
}

uint64_t sub_25FE44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char v62[24];
  char v63[24];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8660);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModernShelf(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v54 - v16);
  __chkstk_darwin(v18);
  v59 = (uint64_t)&v54 - v19;
  v20 = a2 + 16;
  swift_beginAccess(v20, v63, 0, 0);
  Strong = swift_weakLoadStrong(v20);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_16:
    sub_1459C((uint64_t)v10, &qword_3B8660);
    return sub_14510((uint64_t)a1, a3, type metadata accessor for ModernShelf);
  }
  v22 = Strong;
  v58 = v14;
  v60 = v11;
  v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves);
  swift_bridgeObjectRetain();
  swift_release(v22);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v55 = v20;
    v56 = v4;
    v57 = a3;
    v25 = v23 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v26 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_14510(v25, (uint64_t)v17, type metadata accessor for ModernShelf);
      v27 = v17[1];
      v28 = a1[1];
      v29 = *v17 == *a1 && v27 == v28;
      if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v27, *a1, v28, 0) & 1) != 0)
        break;
      sub_145D8((uint64_t)v17, type metadata accessor for ModernShelf);
      v25 += v26;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        v30 = 1;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    sub_3C56C((uint64_t)v17, (uint64_t)v10, type metadata accessor for ModernShelf);
    v30 = 0;
LABEL_13:
    a3 = v57;
    v31 = v60;
    v20 = v55;
  }
  else
  {
    v30 = 1;
    v31 = v60;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v30, 1, v31);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v31) == 1)
    goto LABEL_16;
  v33 = v59;
  sub_3C56C((uint64_t)v10, v59, type metadata accessor for ModernShelf);
  v34 = swift_bridgeObjectRetain();
  v35 = sub_20A68C(v34);
  swift_bridgeObjectRelease();
  if (!v35)
  {
    sub_145D8(v33, type metadata accessor for ModernShelf);
    return sub_14510((uint64_t)a1, a3, type metadata accessor for ModernShelf);
  }
  v36 = sub_20A68C(*(_QWORD *)((char *)a1 + *(int *)(v31 + 28)));
  if (!v36)
  {
    sub_145D8(v33, type metadata accessor for ModernShelf);
    swift_bridgeObjectRelease();
    return sub_14510((uint64_t)a1, a3, type metadata accessor for ModernShelf);
  }
  v37 = (unint64_t)v36;
  sub_14510((uint64_t)a1, (uint64_t)v58, type metadata accessor for ModernShelf);
  swift_beginAccess(v20, v62, 0, 0);
  v38 = swift_weakLoadStrong(v20);
  if (v38)
  {
    v39 = v38;
    KeyPath = swift_getKeyPath(&unk_302898);
    v41 = swift_getKeyPath(&unk_3028C0);
    static Published.subscript.getter(&v61, v39, KeyPath, v41);
    swift_release(v39);
    swift_release(KeyPath);
    swift_release(v41);
    if ((v61 & 1) != 0)
    {
      v42 = (_QWORD *)sub_28857C((uint64_t)_swiftEmptyArrayStorage);
      v43 = sub_2535D4(v42, v37);
      v61 = sub_253460((uint64_t)v35);
      v44 = swift_getKeyPath(&unk_3028E8);
      v45 = a3;
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3BC430);
      v47 = sub_32914((unint64_t *)&qword_3B3750, (uint64_t *)&unk_3BC430, (uint64_t)&protocol conformance descriptor for [A]);
      v48 = v46;
      a3 = v45;
      v49 = Sequence.uniqued<A>(by:)(v44, v48, v47, &protocol witness table for String);
      swift_release(v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v50 = sub_260C10(v49, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v43, 2);
      v37 = (unint64_t)v50;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v31 = v60;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v51 = sub_2452E8(v37);
  swift_bridgeObjectRelease();
  sub_145D8(v33, type metadata accessor for ModernShelf);
  v52 = *(int *)(v31 + 28);
  v53 = (uint64_t)v58;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + v52) = v51;
  return sub_3C56C(v53, a3, type metadata accessor for ModernShelf);
}

uint64_t sub_260338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C2E50);
  result = FRPOutput.totalCount.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_26036C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_260390(uint64_t *a1)
{
  uint64_t v1;

  return sub_255BD4(a1, v1);
}

uint64_t sub_260398()
{
  return objectdestroy_2Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

_QWORD *sub_2603AC(uint64_t a1)
{
  uint64_t *v1;

  return sub_25FC54(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2603B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2603C8(uint64_t a1)
{
  uint64_t v1;

  return sub_39D7C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_2603E8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_302898);
  v5 = swift_getKeyPath(&unk_3028C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_260464(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_302898);
  v5 = swift_getKeyPath(&unk_3028C0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_2604D4(uint64_t a1, uint64_t a2)
{
  return MetricsFieldsContext.addChildClickLocation(_:)(a2);
}

uint64_t sub_2604F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _BYTE v39[16];
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t (*v51)(unint64_t, _BYTE *, uint64_t);
  unint64_t v52;
  _BYTE v53[40];
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _QWORD v57[6];
  unint64_t v58;

  v2 = type metadata accessor for TipGroup(0);
  v47 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v46 = &v39[-v6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_3C42A0);
  result = static _DictionaryStorage.copy(original:)(a1);
  v8 = result;
  v9 = 0;
  v48 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v42 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v44 = result + 64;
  v45 = result;
  v41 = v2;
  v40 = v4;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v49 = (v13 - 1) & v13;
  v50 = v9;
  for (i = __clz(__rbit64(v13)) | (v9 << 6); ; i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    v19 = v48;
    v20 = *(_QWORD *)(v48 + 48);
    v21 = v47;
    v52 = *(_QWORD *)(v47 + 72) * i;
    v22 = v46;
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v47 + 16))(v46, v20 + v52, v2);
    v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * i);
    v51 = *(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v21 + 32);
    v51((unint64_t)v4, v22, v2);
    v58 = (unint64_t)_swiftEmptyArrayStorage;
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = v23 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_150C8(v25, (uint64_t)v57);
        sub_150C8((uint64_t)v57, (uint64_t)v53);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BA888);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B09A8);
        if (swift_dynamicCast(&v54, v53, v26, v27, 6))
        {
          v28 = *((_QWORD *)&v55 + 1);
          v29 = v56;
          __swift_project_boxed_opaque_existential_1(&v54, *((uint64_t *)&v55 + 1));
          v30 = dispatch thunk of AMSDialogTip.dialogRequest()(v28, v29);
          __swift_destroy_boxed_opaque_existential_1(&v54);
          v31 = __swift_destroy_boxed_opaque_existential_1(v57);
          if (v30)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
            v33 = *(_QWORD *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFFF8));
            v32 = *(_QWORD *)((char *)&dword_18 + (v58 & 0xFFFFFFFFFFFFFF8));
            if (v33 >= v32 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
            v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
            specialized Array._endMutation()(v34);
          }
        }
        else
        {
          v56 = 0;
          v54 = 0u;
          v55 = 0u;
          sub_1459C((uint64_t)&v54, &qword_3BA890);
          __swift_destroy_boxed_opaque_existential_1(v57);
        }
        v25 += 40;
        --v24;
      }
      while (v24);
      v35 = (_QWORD *)v58;
      v2 = v41;
      v4 = v40;
    }
    else
    {
      swift_bridgeObjectRetain();
      v35 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v44 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v8 = v45;
    result = v51(*(_QWORD *)(v45 + 48) + v52, v4, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * i) = v35;
    v36 = *(_QWORD *)(v8 + 16);
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    *(_QWORD *)(v8 + 16) = v38;
    v13 = v49;
    v9 = v50;
    if (v49)
      goto LABEL_4;
LABEL_5:
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_35;
    if (v15 >= v43)
      return v8;
    v16 = *(_QWORD *)(v42 + 8 * v15);
    v17 = v9 + 1;
    if (!v16)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v43)
        return v8;
      v16 = *(_QWORD *)(v42 + 8 * v17);
      if (!v16)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v43)
          return v8;
        v16 = *(_QWORD *)(v42 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_18:
    v49 = (v16 - 1) & v16;
    v50 = v17;
  }
  v18 = v9 + 4;
  if (v9 + 4 >= v43)
    return v8;
  v16 = *(_QWORD *)(v42 + 8 * v18);
  if (v16)
  {
    v17 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v43)
      return v8;
    v16 = *(_QWORD *)(v42 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_18;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_260964(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD v33[6];
  _QWORD v34[5];

  v31 = a2;
  v32 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2820);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClickLocationElement(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  v34[3] = type metadata accessor for SheetAction(0);
  v34[4] = sub_F1C0(&qword_3B2808, (void (*)(uint64_t))type metadata accessor for SheetAction, (uint64_t)&protocol conformance descriptor for Action);
  v34[0] = a1;
  v18 = *(_QWORD *)(a5 + 16);
  sub_267BC(a4, (uint64_t)v10, &qword_3B2820);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1459C((uint64_t)v10, &qword_3B2820);
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v19(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    v20 = *(unsigned __int8 *)(v12 + 80);
    v21 = (v20 + 16) & ~v20;
    v22 = swift_allocObject(&unk_38C7C8, v21 + v13, v20 | 7);
    v19((char *)(v22 + v21), v14, v11);
    swift_retain_n(v18, 2);
    swift_retain();
    v23 = BaseObjectGraph.transformingMetricsFieldsContext(with:)(sub_26153C, v22);
    swift_release_n(v18, 2);
    swift_release(v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    v18 = v23;
  }
  type metadata accessor for ActionRunnerOptions(0);
  v24 = swift_retain();
  v25 = BaseObjectGraph.__allocating_init(_:)(v24);
  sub_267BC(v31, (uint64_t)v33, (uint64_t *)&unk_3BC540);
  v33[4] = v32;
  v26 = v32;
  v27 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v33);
  sub_1459C((uint64_t)v33, &qword_3B18E8);
  swift_release(v25);
  sub_150C8((uint64_t)v34, (uint64_t)v33);
  v33[5] = v27;
  v28 = ActionPerformer.callAsFunction()();
  swift_release(v18);
  sub_23740(v33);
  __swift_destroy_boxed_opaque_existential_1(v34);
  return v28;
}

_QWORD *sub_260C10(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  result = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain_n(*v6, 2);
        v9 = sub_29724(v7, v8);
        if ((v10 & 1) != 0)
        {
          v11 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v9);
          swift_retain(v11);
          v12 = swift_bridgeObjectRelease_n(v8, 2);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
          v13 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v15);
        }
        else
        {
          swift_bridgeObjectRelease_n(v8, 2);
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_260D3C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;

  v23 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B66A8);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ActionMenu.Child(0);
  v8 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v21 = (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return _swiftEmptyArrayStorage;
  v19 = v3;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = _swiftEmptyArrayStorage;
  v20 = a1;
  do
  {
    sub_25E788(*(unsigned __int8 *)(a1 + v14 + 32), v23, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v22) == 1)
    {
      sub_1459C((uint64_t)v7, &qword_3B66A8);
    }
    else
    {
      sub_3C56C((uint64_t)v7, (uint64_t)v12, type metadata accessor for ActionMenu.Child);
      sub_3C56C((uint64_t)v12, v21, type metadata accessor for ActionMenu.Child);
      if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
        v15 = (_QWORD *)sub_10CAC(0, v15[2] + 1, 1, (unint64_t)v15);
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
        v15 = (_QWORD *)sub_10CAC(v16 > 1, v17 + 1, 1, (unint64_t)v15);
      v15[2] = v17 + 1;
      sub_3C56C(v21, (uint64_t)v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, type metadata accessor for ActionMenu.Child);
      a1 = v20;
    }
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_260F6C(uint64_t a1)
{
  uint64_t result;

  result = sub_F1C0(&qword_3C40A8, (void (*)(uint64_t))type metadata accessor for ModernEpisodesPresenter, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ModernEpisodesPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_3C4108;
  if (!qword_3C4108)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModernEpisodesPresenter);
  return result;
}

uint64_t sub_260FE4()
{
  return sub_F1C0(&qword_3C40D8, (void (*)(uint64_t))type metadata accessor for ModernEpisodesPresenter, (uint64_t)&protocol conformance descriptor for ModernEpisodesPresenter);
}

uint64_t sub_261018@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ModernEpisodesPresenter.refreshControls.getter();
  *a1 = result;
  return result;
}

uint64_t sub_261040(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = v2;
  swift_retain(v2);
  return swift_release(v3);
}

uint64_t sub_261078()
{
  return type metadata accessor for ModernEpisodesPresenter(0);
}

void sub_261080(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[20];
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[2] = &unk_3027F8;
  v8[3] = &unk_302810;
  v8[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[5] = &unk_302810;
  v8[6] = &unk_302810;
  v8[7] = &unk_302828;
  v2 = type metadata accessor for EpisodeListSettings(319);
  if (v3 <= 0x3F)
  {
    v8[8] = *(_QWORD *)(v2 - 8) + 64;
    v8[9] = &unk_302840;
    v8[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[11] = &unk_302858;
    v8[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[13] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[14] = (char *)&value witness table for () + 64;
    v8[15] = &unk_302870;
    v8[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[18] = &unk_302870;
    v8[19] = &unk_302870;
    sub_23F9A4(319);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_36558();
      if (v7 <= 0x3F)
      {
        v12 = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 24, v8, a1 + 80);
      }
    }
  }
}

uint64_t method lookup function for ModernEpisodesPresenter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ModernEpisodesPresenter);
}

uint64_t dispatch thunk of ModernEpisodesPresenter.__allocating_init(asPartOf:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t destroy for ModernEpisodesPresenter.Configuration(uint64_t a1)
{
  return sub_87198(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 64);
  sub_898F4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

uint64_t assignWithCopy for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v22;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v22 = *(_BYTE *)(a2 + 64);
  sub_898F4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v22);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v22;
  sub_87198(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_BYTE *)(a1 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_BYTE *)(a1 + 64) = v4;
  sub_87198(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModernEpisodesPresenter.Configuration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 66))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 65);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModernEpisodesPresenter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 66) = 0;
    if (a2)
      *(_BYTE *)(result + 65) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernEpisodesPresenter.Configuration()
{
  return &type metadata for ModernEpisodesPresenter.Configuration;
}

uint64_t sub_2614B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_2614D4()
{
  uint64_t v0;

  return sub_25E4BC(v0);
}

uint64_t sub_2614DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ClickLocationElement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_26153C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClickLocationElement(0) - 8) + 80);
  return MetricsFieldsContext.addChildClickLocation(_:)(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_26157C()
{
  return objectdestroy_2Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

_QWORD *sub_261590()
{
  uint64_t *v0;

  return sub_25E618(v0[2], v0[3], v0[4]);
}

uint64_t sub_26159C()
{
  uint64_t v0;

  return sub_25FAE8(v0, 0);
}

uint64_t sub_2615B8()
{
  uint64_t v0;

  return sub_25FAE8(v0, 1);
}

uint64_t sub_2615D4()
{
  uint64_t v0;

  return sub_25FAE8(v0, 2);
}

uint64_t sub_2615F0()
{
  uint64_t v0;

  return sub_25FAE8(v0, 3);
}

uint64_t sub_26160C()
{
  return objectdestroy_2Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t objectdestroy_2Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_26165C()
{
  uint64_t v0;

  return sub_25D79C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_261668()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_26168C()
{
  uint64_t v0;

  return sub_25C294(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_261698()
{
  uint64_t v0;

  return sub_25CF78(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2616A4()
{
  uint64_t v0;

  return sub_25D0EC(v0, 2);
}

uint64_t sub_2616C0()
{
  uint64_t v0;

  return sub_25D0EC(v0, 3);
}

uint64_t sub_2616DC()
{
  uint64_t v0;

  return sub_25D0EC(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_2616E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B8660) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for ModernShelf(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7 + 65) & ~v7;
  v105 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v9 = v0 + v3;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(v6 + 48))(v9, 1, v5))
  {
    v103 = (v4 + v7 + 65) & ~v7;
    swift_bridgeObjectRelease();
    v10 = v9 + v5[5];
    v11 = (int *)type metadata accessor for Header(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
    {
      v98 = v2;
      v101 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v10 + v11[9];
      v13 = type metadata accessor for ActionMenu(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v12 + *(int *)(v13 + 28);
        v15 = type metadata accessor for ArtworkModel(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          v16 = *(unsigned __int8 *)(v14 + 32);
          if (v16 != 255)
            sub_3B5BC(*(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), v16);
          v17 = *(unsigned __int8 *)(v14 + 64);
          if (v17 != 255)
            sub_3D624(*(id *)(v14 + 56), v17);
          v18 = *(unsigned __int8 *)(v14 + 80);
          if (v18 != 255)
            sub_3D624(*(id *)(v14 + 72), v18);
          v19 = *(unsigned __int8 *)(v14 + 96);
          if (v19 != 255)
            sub_3D624(*(id *)(v14 + 88), v19);
          v20 = *(unsigned __int8 *)(v14 + 112);
          if (v20 != 255)
            sub_3D624(*(id *)(v14 + 104), v20);
          v21 = *(unsigned __int8 *)(v14 + 128);
          if (v21 != 255)
            sub_3D624(*(id *)(v14 + 120), v21);
          v96 = v14 + *(int *)(v15 + 44);
          v22 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v96, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      v23 = (_QWORD *)(v10 + v11[10]);
      v24 = type metadata accessor for Header.PrimaryAction(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
      {
        if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v25 = (char *)v23 + *(int *)(v13 + 28);
          v26 = type metadata accessor for ArtworkModel(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
          {
            swift_bridgeObjectRelease();
            v27 = v25[32];
            if (v27 != 255)
              sub_3B5BC(*((_QWORD *)v25 + 2), *((_QWORD *)v25 + 3), v27);
            v28 = v25[64];
            if (v28 != 255)
              sub_3D624(*((id *)v25 + 7), v28);
            v29 = v25[80];
            if (v29 != 255)
              sub_3D624(*((id *)v25 + 9), v29);
            v30 = v25[96];
            if (v30 != 255)
              sub_3D624(*((id *)v25 + 11), v30);
            v31 = v25[112];
            if (v31 != 255)
              sub_3D624(*((id *)v25 + 13), v31);
            v32 = v25[128];
            if (v32 != 255)
              sub_3D624(*((id *)v25 + 15), v32);
            v97 = &v25[*(int *)(v26 + 44)];
            v33 = type metadata accessor for ArtworkCrop(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v97, v33);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release(*v23);
        }
      }
      swift_bridgeObjectRelease();
      v34 = v10 + v11[12];
      v35 = type metadata accessor for ArtworkModel(0);
      v2 = v98;
      v7 = v101;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
      {
        swift_bridgeObjectRelease();
        v36 = *(unsigned __int8 *)(v34 + 32);
        if (v36 != 255)
          sub_3B5BC(*(_QWORD *)(v34 + 16), *(_QWORD *)(v34 + 24), v36);
        v37 = *(unsigned __int8 *)(v34 + 64);
        if (v37 != 255)
          sub_3D624(*(id *)(v34 + 56), v37);
        v38 = *(unsigned __int8 *)(v34 + 80);
        if (v38 != 255)
          sub_3D624(*(id *)(v34 + 72), v38);
        v39 = *(unsigned __int8 *)(v34 + 96);
        if (v39 != 255)
          sub_3D624(*(id *)(v34 + 88), v39);
        v40 = *(unsigned __int8 *)(v34 + 112);
        if (v40 != 255)
          sub_3D624(*(id *)(v34 + 104), v40);
        v41 = *(unsigned __int8 *)(v34 + 128);
        if (v41 != 255)
          sub_3D624(*(id *)(v34 + 120), v41);
        v42 = v34 + *(int *)(v35 + 44);
        v43 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    v44 = v9 + v5[9];
    v45 = type metadata accessor for URL(0);
    v46 = *(_QWORD *)(v45 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    v47 = (_QWORD *)(v9 + v5[12]);
    v8 = v103;
    if (v47[3])
      __swift_destroy_boxed_opaque_existential_1(v47);
    v48 = v9 + v5[13];
    v49 = type metadata accessor for ImpressionMetrics(0);
    v50 = *(_QWORD *)(v49 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_87198(*(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + v4 + 16), *(_QWORD *)(v0 + v4 + 24), *(_QWORD *)(v0 + v4 + 32), *(_QWORD *)(v0 + v4 + 40), *(_QWORD *)(v0 + v4 + 48), *(_QWORD *)(v0 + v4 + 56), *(_BYTE *)(v0 + v4 + 64));
  v51 = v0 + v8;
  swift_bridgeObjectRelease();
  v52 = v0 + v8 + v5[5];
  v53 = (int *)type metadata accessor for Header(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v53 - 1) + 48))(v52, 1, v53))
  {
    v102 = v7;
    v104 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v52 + v53[9];
    v55 = type metadata accessor for ActionMenu(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55))
    {
      v99 = v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v56 = v54 + *(int *)(v55 + 28);
      v57 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57))
      {
        swift_bridgeObjectRelease();
        v58 = *(unsigned __int8 *)(v56 + 32);
        if (v58 != 255)
          sub_3B5BC(*(_QWORD *)(v56 + 16), *(_QWORD *)(v56 + 24), v58);
        v59 = *(unsigned __int8 *)(v56 + 64);
        if (v59 != 255)
          sub_3D624(*(id *)(v56 + 56), v59);
        v60 = *(unsigned __int8 *)(v56 + 80);
        if (v60 != 255)
          sub_3D624(*(id *)(v56 + 72), v60);
        v61 = *(unsigned __int8 *)(v56 + 96);
        if (v61 != 255)
          sub_3D624(*(id *)(v56 + 88), v61);
        v62 = *(unsigned __int8 *)(v56 + 112);
        if (v62 != 255)
          sub_3D624(*(id *)(v56 + 104), v62);
        v63 = *(unsigned __int8 *)(v56 + 128);
        if (v63 != 255)
          sub_3D624(*(id *)(v56 + 120), v63);
        v64 = v56 + *(int *)(v57 + 44);
        v65 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v2 = v99;
    }
    v66 = (_QWORD *)(v52 + v53[10]);
    v67 = type metadata accessor for Header.PrimaryAction(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v66, 1, v67))
    {
      if (swift_getEnumCaseMultiPayload(v66, v67) == 1)
      {
        v100 = v2;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v68 = (char *)v66 + *(int *)(v55 + 28);
        v69 = type metadata accessor for ArtworkModel(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69))
        {
          swift_bridgeObjectRelease();
          v70 = v68[32];
          if (v70 != 255)
            sub_3B5BC(*((_QWORD *)v68 + 2), *((_QWORD *)v68 + 3), v70);
          v71 = v68[64];
          if (v71 != 255)
            sub_3D624(*((id *)v68 + 7), v71);
          v72 = v68[80];
          if (v72 != 255)
            sub_3D624(*((id *)v68 + 9), v72);
          v73 = v68[96];
          if (v73 != 255)
            sub_3D624(*((id *)v68 + 11), v73);
          v74 = v68[112];
          if (v74 != 255)
            sub_3D624(*((id *)v68 + 13), v74);
          v75 = v68[128];
          if (v75 != 255)
            sub_3D624(*((id *)v68 + 15), v75);
          v76 = &v68[*(int *)(v69 + 44)];
          v77 = type metadata accessor for ArtworkCrop(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v2 = v100;
      }
      else
      {
        swift_release(*v66);
      }
    }
    swift_bridgeObjectRelease();
    v78 = v52 + v53[12];
    v79 = type metadata accessor for ArtworkModel(0);
    v7 = v102;
    v8 = v104;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79))
    {
      swift_bridgeObjectRelease();
      v80 = *(unsigned __int8 *)(v78 + 32);
      if (v80 != 255)
        sub_3B5BC(*(_QWORD *)(v78 + 16), *(_QWORD *)(v78 + 24), v80);
      v81 = *(unsigned __int8 *)(v78 + 64);
      if (v81 != 255)
        sub_3D624(*(id *)(v78 + 56), v81);
      v82 = *(unsigned __int8 *)(v78 + 80);
      if (v82 != 255)
        sub_3D624(*(id *)(v78 + 72), v82);
      v83 = *(unsigned __int8 *)(v78 + 96);
      if (v83 != 255)
        sub_3D624(*(id *)(v78 + 88), v83);
      v84 = *(unsigned __int8 *)(v78 + 112);
      if (v84 != 255)
        sub_3D624(*(id *)(v78 + 104), v84);
      v85 = *(unsigned __int8 *)(v78 + 128);
      if (v85 != 255)
        sub_3D624(*(id *)(v78 + 120), v85);
      v86 = v78 + *(int *)(v79 + 44);
      v87 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v86, v87);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v88 = v51 + v5[9];
  v89 = type metadata accessor for URL(0);
  v90 = *(_QWORD *)(v89 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v89);
  v91 = (_QWORD *)(v51 + v5[12]);
  if (v91[3])
    __swift_destroy_boxed_opaque_existential_1(v91);
  v92 = v51 + v5[13];
  v93 = type metadata accessor for ImpressionMetrics(0);
  v94 = *(_QWORD *)(v93 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v92, v93);
  return swift_deallocObject(v0, ((v105 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v7 | 7);
}

uint64_t sub_262154@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W4>, char a5@<W5>, _BYTE *a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B8660) - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = (*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
  return sub_2588EC(a1, a2, a3, a4, a5, *(_QWORD *)(v6 + 16), v6 + v14, a6, (char *)(v6 + v15), v6 + ((v15 + *(unsigned __int8 *)(v16 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
}

uint64_t sub_262244(uint64_t a1)
{
  uint64_t v1;

  return sub_25AB00(a1, *(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_26224C(uint64_t a1)
{
  uint64_t v1;

  return sub_25AB70(a1, v1);
}

uint64_t sub_262254@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_25FD8C(a1, v2, a2);
}

_QWORD *sub_26225C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v3 = v2;
  v18 = a2;
  v5 = type metadata accessor for ModernShelf(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_180A20(0, v9, 0);
    v10 = v19;
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v12 = (_QWORD *)(a1 + v11);
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_25FE44(v12, v18, (uint64_t)v8);
      if (v3)
        break;
      v3 = 0;
      v19 = v10;
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_180A20(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      v10[2] = v15 + 1;
      sub_3C56C((uint64_t)v8, (uint64_t)v10 + v11 + v15 * v13, type metadata accessor for ModernShelf);
      v12 = (_QWORD *)((char *)v12 + v13);
      if (!--v9)
        return v10;
    }
    swift_release(v10);
  }
  return v10;
}

uint64_t sub_2623B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_25B19C(a1, v2, a2);
}

uint64_t sub_2623BC()
{
  uint64_t v0;

  sub_87198(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_2623FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_25ABF4(a1, a2, v3 + 16, a3);
}

uint64_t sub_262404(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4350);
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_262450(char *a1)
{
  uint64_t v1;

  return sub_25FCAC(a1, v1);
}

uint64_t PlayEpisodeActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_263A98(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_26247C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C43E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for PendingPlaybackMetadata(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  if (v19 == -1)
    goto LABEL_7;
  if ((v19 & 1) != 0)
  {
    PendingPlaybackMetadata.init(adamId:uuid:)(0, 1, v17, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11))
      goto LABEL_6;
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v14, v6, v11);
  }
  else
  {
    PendingPlaybackMetadata.init(adamId:uuid:)(v17, 0, 0, 0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v6 = v10;
LABEL_6:
      sub_1459C((uint64_t)v6, &qword_3C43E0);
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1(a1);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
    }
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v14, v10, v11);
  }
  v21(a2, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_262678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7[13] = a7;
  v7[14] = v18;
  v7[11] = a5;
  v7[12] = a6;
  v7[10] = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4408);
  v7[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntent(0, v9);
  v7[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[17] = v11;
  v7[18] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v7[19] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[20] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[21] = swift_task_alloc(v14);
  v7[22] = swift_task_alloc(v14);
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v15 = type metadata accessor for ActionOutcome(0);
  v7[25] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v7[26] = v16;
  v7[27] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_2627AC, 0, 0);
}

uint64_t sub_2627AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *boxed_opaque_existential_2Tm;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 8);
  v2 = (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 24))(*(_QWORD *)(v0 + 104), v1);
  if (v4 != 0xFF)
  {
    v5 = v2;
    if ((v4 & 1) != 0)
    {
      v22 = sub_6FB94(v2, v3, v4);
      v23 = static Logger.modernPlayback.getter(v22);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_0, v24, v25, "Thin client only supports playing with AdamIDs", v26, 2u);
        swift_slowDealloc(v26, -1, -1);
      }
      v28 = *(_QWORD *)(v0 + 208);
      v27 = *(_QWORD *)(v0 + 216);
      v30 = *(_QWORD *)(v0 + 192);
      v29 = *(_QWORD *)(v0 + 200);
      v31 = *(_QWORD *)(v0 + 152);
      v32 = *(_QWORD *)(v0 + 160);

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v27, enum case for ActionOutcome.unsupported(_:), v29);
      Promise.resolve(_:)(v27);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
      goto LABEL_12;
    }
    v6 = dispatch thunk of PlaybackController.nowPlayingItem.getter();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = MPModelObject.adamID.getter();
      v10 = v9;

      if ((v10 & 1) == 0 && v8 == v5)
      {
        v11 = (_QWORD *)swift_task_alloc(async function pointer to PlaybackController.togglePlayback()[1]);
        *(_QWORD *)(v0 + 224) = v11;
        *v11 = v0;
        v11[1] = sub_262B10;
        return PlaybackController.togglePlayback()();
      }
    }
  }
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 40) = v16;
  *(_QWORD *)(v0 + 48) = v1;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((_QWORD *)(v0 + 16));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
  sub_263590((_QWORD *)(v0 + 16), v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
  {
    v20 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 200);
    sub_1459C(*(_QWORD *)(v0 + 120), &qword_3C4408);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v19, enum case for ActionOutcome.unsupported(_:), v21);
    Promise.resolve(_:)(v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
LABEL_12:
    v33 = *(_QWORD *)(v0 + 184);
    v34 = *(_QWORD *)(v0 + 192);
    v36 = *(_QWORD *)(v0 + 168);
    v35 = *(_QWORD *)(v0 + 176);
    v37 = *(_QWORD *)(v0 + 144);
    v38 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v34);
    swift_task_dealloc(v33);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  v39 = (_QWORD *)swift_task_alloc(async function pointer to PlaybackController.performIntent(_:)[1]);
  *(_QWORD *)(v0 + 240) = v39;
  *v39 = v0;
  v39[1] = sub_262CAC;
  return PlaybackController.performIntent(_:)(*(_QWORD *)(v0 + 144));
}

uint64_t sub_262B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_2630E8;
  else
    v3 = sub_262BB8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_262BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for ActionOutcome.performed(_:), v3);
  Promise.resolve(_:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_262CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 240);
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_263334;
  else
    v5 = sub_262D5C;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_262D5C()
{
  uint64_t v0;
  id v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v1 = *(id *)(v0 + 248);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 248), "error");
    if (v2)
    {

      static Logger.modernPlayback.getter();
      v1 = v1;
      v3 = Logger.logObject.getter(v1);
      v4 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc(12, -1);
        v6 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v5 = 138412290;
        v7 = objc_msgSend(v1, "error");
        if (v7)
        {
          v8 = _swift_stdlib_bridgeErrorToNSError(v7);
          *(_QWORD *)(v0 + 72) = v8;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
        }
        else
        {
          *(_QWORD *)(v0 + 64) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
          v8 = 0;
        }
        *v6 = v8;

        _os_log_impl(&dword_0, v3, v4, "Unable to play intent %@", v5, 0xCu);
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
        swift_arrayDestroy(v6, 1, v27);
        swift_slowDealloc(v6, -1, -1);
        swift_slowDealloc(v5, -1, -1);
      }
      else
      {

      }
      v21 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v22 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 144);
      v25 = *(_QWORD *)(v0 + 128);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
      v26 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v22 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 144);
      v25 = *(_QWORD *)(v0 + 128);
      v26 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, *v26, v22);
    Promise.resolve(_:)(v20);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    v9 = static Logger.modernPlayback.getter();
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, (os_log_type_t)v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_0, v10, (os_log_type_t)v11, "Unable to play intent, no status", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    v14 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 128);
    v36 = *(_QWORD *)(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v13, enum case for ActionOutcome.unsupported(_:), v15);
    Promise.resolve(_:)(v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v36, v35);
  }
  v28 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 176);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2630E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 232);
  static Logger.modernPlayback.getter();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    swift_errorRetain(v1);
    v7 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 56) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v6 = v7;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "Unable to play intent: %@", v5, 0xCu);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }
  v10 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, enum case for ActionOutcome.unsupported(_:), v11);
  Promise.resolve(_:)(v9);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 144);
  v20 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_263334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  v2 = *(_QWORD *)(v0 + 256);
  static Logger.modernPlayback.getter(v1);
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v2);
    v8 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 56) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    *v7 = v8;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl(&dword_0, v4, v5, "Unable to play intent: %@", v6, 0xCu);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }
  v11 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, enum case for ActionOutcome.unsupported(_:), v12);
  Promise.resolve(_:)(v10);
  swift_errorRelease(v2);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_263590@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3C4410);
  __chkstk_darwin(v4);
  v47 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0CC8);
  v7 = __chkstk_darwin(v6);
  v46 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediaIdentifier(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for PlaybackIntent(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v45 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  if (v21 == 0xFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, 1, 1, v14);
  }
  else
  {
    v22 = v19;
    v23 = v21;
    if ((v21 & 1) != 0)
    {
      v34 = v20;
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B8730);
      v36 = swift_allocObject(v35, 48, 7);
      *(_OWORD *)(v36 + 16) = xmmword_2EA0D0;
      *(_QWORD *)(v36 + 32) = v22;
      *(_QWORD *)(v36 + 40) = v34;
      *v13 = v36;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for MediaIdentifier.localEpisodes(_:), v9);
      v37 = type metadata accessor for EpisodeListSettings(0);
      v38 = v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v46, 1, 1, v37);
      v39 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v40 = v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v47, 1, 1, v39);
      v41 = sub_6BCD0(v22, v34, 1);
      v42 = static Set<>.default.getter(v41);
      v43 = v40;
      v32 = v45;
      PlaybackIntent.init(id:listSettings:initialItem:options:)(v13, v38, v43, v42);
      sub_6FB94(v22, v34, v23);
    }
    else
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0A68);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_2EA0D0;
      *(_QWORD *)(v25 + 32) = v22;
      *v13 = v25;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for MediaIdentifier.episodes(_:), v9);
      v26 = type metadata accessor for EpisodeListSettings(0);
      v27 = v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v46, 1, 1, v26);
      v28 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v29 = v47;
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v47, 1, 1, v28);
      v31 = static Set<>.default.getter(v30);
      v32 = v45;
      PlaybackIntent.init(id:listSettings:initialItem:options:)(v13, v27, v29, v31);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v32, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t sub_263908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_263F68(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1459C((uint64_t)v8, &qword_3B5978);
    v11 = "/System/Library/Frameworks/Security.framework/Security";
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = (char *)(v18 | 0x1000);
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = swift_allocObject(&unk_38CA10, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, (char *)&type metadata for () + 8, &unk_3B8E68, v19);
}

uint64_t sub_263A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *boxed_opaque_existential_2Tm;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;

  v50 = a4;
  v45 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v46 = v9;
  v47 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  __chkstk_darwin(v10);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C43E0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PendingPlaybackMetadata(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PlaybackController(0);
  v21 = type metadata accessor for BaseObjectGraph(0);
  inject<A, B>(_:from:)(v53, v20, a2, v20, v21);
  v22 = v53[0];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C43E8);
  inject<A, B>(_:from:)(v53, v23, a2, v23, v21);
  v51 = a5;
  v24 = *(_QWORD *)(a5 + 8);
  v52[3] = a3;
  v52[4] = v24;
  boxed_opaque_existential_2Tm = (char *)__swift_allocate_boxed_opaque_existential_2Tm(v52);
  v49 = v8;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v27 = v45;
  v26(boxed_opaque_existential_2Tm, v45, a3);
  sub_26247C(v52, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1459C((uint64_t)v15, &qword_3C43E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v28 = v54;
    v29 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)(v19, v28, v29);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BC108);
  v31 = Promise.__allocating_init()(v30);
  v32 = (uint64_t)v48;
  static TaskPriority.userInitiated.getter(v31);
  v33 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
  v34 = v47;
  v26(v47, v27, a3);
  v35 = v49;
  v36 = *(unsigned __int8 *)(v49 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = (v46 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (char *)swift_allocObject(&unk_38C9E8, v39 + 8, v36 | 7);
  *((_QWORD *)v40 + 2) = 0;
  *((_QWORD *)v40 + 3) = 0;
  v41 = v50;
  *((_QWORD *)v40 + 4) = a3;
  *((_QWORD *)v40 + 5) = v41;
  *((_QWORD *)v40 + 6) = v51;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v40[v37], v34, a3);
  *(_QWORD *)&v40[v38] = v22;
  *(_QWORD *)&v40[v39] = v31;
  swift_retain();
  swift_retain();
  v42 = sub_263908(v32, (uint64_t)&unk_3C43F8, (uint64_t)v40);
  swift_release(v22);
  swift_release(v42);
  sub_1459C(v32, &qword_3B5978);
  __swift_destroy_boxed_opaque_existential_1(v53);
  return v31;
}

uint64_t sub_263DEC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t type metadata accessor for PlayEpisodeActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlayEpisodeActionImplementation);
}

uint64_t sub_263E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_263E98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v6;
  v11 = *(_QWORD *)((char *)v1 + v7);
  v12 = *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_3C43F4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_43684;
  return sub_262678(a1, v8, v9, v10, v11, v12, v4);
}

uint64_t sub_263F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_263FB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t View.frameFillAvailableSpace(alignment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  char v6;

  v6 = 0;
  v5 = 1;
  return View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 0, 0, 1, 0x7FF0000000000000, 0, 0, 0, 0, v5, 0x7FF0000000000000, v6, a1, a2, a3, a4);
}

uint64_t sub_264030(_QWORD *a1)
{
  type metadata accessor for ModifiedContent(255, *a1, &type metadata for _FlexFrameLayout);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
}

uint64_t StoreDataCache.fetchCachedListenNowFooter()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t (*)(void))sub_264280(v2, a1, a2);
  v5 = v4;
  v6 = v3();
  swift_release(v5);
  return v6;
}

uint64_t StoreDataCache.setObject(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t))(a4 + 24))(a1, 0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a3);
}

uint64_t StoreDataCache.object(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(a3 + 8))(0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a2);
}

uint64_t StoreDataCache.object<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_264180(v5, a2, a3, a4, a5);
  v8 = v7;
  v9 = v6(0x6F4E6E657473694CLL, 0xEF7265746F6F4677);
  swift_release(v8);
  return v9;
}

uint64_t (*sub_264180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, uint64_t a2)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(a1);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 48) & ~v12;
  v14 = (char *)swift_allocObject(&unk_38CA88, v13 + v10, v12 | 7);
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v11, a2);
  return sub_26439C;
}

uint64_t StoreDataCache.removeObject(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(a3 + 32))(0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a2);
}

uint64_t (*sub_264280(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(&unk_38CAB0, v9 + v6, v8 | 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v7, a2);
  return sub_2644C4;
}

uint64_t dispatch thunk of StoreDataCache.object<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_264344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_26439C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v2[4] + 16))(a1, a2, v2[3], v2[5]);
}

uint64_t sub_2643D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0AD8);
  v8 = sub_14160();
  v9 = sub_264180(a2, a3, v7, a4, v8);
  v11 = v10;
  v12 = v9(0x6F4E6E657473694CLL, 0xEF7265746F6F4677);
  swift_release(v11);
  return v12;
}

uint64_t sub_26446C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_2644C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_2643D8(a1, v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t DependencyBindableView.perform(_:from:in:)(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *boxed_opaque_existential_2Tm;
  Swift::String v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[6];

  v38 = a1;
  v9 = type metadata accessor for ActionOutcome(0);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OSLogger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = dispatch thunk of DependencyBindableView.objectGraph.getter(a4, a5);
  if (v19)
  {
    v20 = v19;
    type metadata accessor for ActionRunnerOptions(0);
    v21 = swift_retain();
    v22 = BaseObjectGraph.__allocating_init(_:)(v21);
    sub_236BC(a2, (uint64_t)v39);
    v39[4] = a3;
    v23 = a3;
    v24 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v39);
    sub_1459C((uint64_t)v39, &qword_3B18E8);
    swift_release(v22);
    sub_150C8((uint64_t)v38, (uint64_t)v39);
    v39[5] = v24;
    v25 = ActionPerformer.callAsFunction()();
    swift_release(v20);
    sub_23740(v39);
  }
  else
  {
    static OSLogger.actions.getter(0);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B0B10);
    v27 = type metadata accessor for LogMessage(0);
    v28 = swift_allocObject(v26, ((*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) | 7);
    *(_OWORD *)(v28 + 16) = xmmword_2EA0D0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 1);
    v29._object = (void *)0x8000000000313E70;
    v29._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    v30 = v38[3];
    v31 = __swift_project_boxed_opaque_existential_1(v38, v30);
    v39[3] = v30;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v39);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(boxed_opaque_existential_2Tm, v31, v30);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v39);
    sub_1459C((uint64_t)v39, (uint64_t *)&unk_3BC540);
    v33._countAndFlagsBits = 0xD000000000000019;
    v33._object = (void *)0x8000000000313E90;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.init(stringInterpolation:)(v14);
    Logger.error(_:)(v28, v15, &protocol witness table for OSLogger);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_3BC108);
    (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v11, enum case for ActionOutcome.unsupported(_:), v37);
    return Promise.__allocating_init(value:)(v11);
  }
  return v25;
}

uint64_t FetchUpNextEpisodesIntentImplementation.perform(_:objectGraph:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v1[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[5] = v4;
  v1[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v1[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[8] = v6;
  v7 = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v1[9] = v7;
  v1[10] = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B68D0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v1[11] = v10;
  *v10 = v1;
  v10[1] = sub_2648B0;
  return BaseObjectGraph.inject<A>(_:)(v1 + 2, v9, v9);
}

uint64_t sub_2648B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_264B90;
  else
    v3 = sub_264914;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_264914()
{
  _QWORD *v0;
  uint64_t ObjectType;
  _QWORD *v2;

  v0[13] = v0[2];
  ObjectType = swift_getObjectType();
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  v2 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
  v0[14] = v2;
  *v2 = v0;
  v2[1] = sub_264994;
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v0[9], ObjectType);
}

uint64_t sub_264994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return swift_task_switch(sub_264A18, 0, 0);
}

uint64_t sub_264A18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = (void *)v0[15];
  v2 = v0[10];
  v4 = v0[5];
  v3 = v0[6];
  v5 = v0[4];
  v6 = swift_allocObject(&unk_38CAD8, 32, 7);
  v0[16] = v6;
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  v7 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v8 = v1;
  v9 = (_QWORD *)swift_task_alloc(v7);
  v0[17] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_3B7970);
  *v9 = v0;
  v9[1] = sub_264AFC;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 3, v0[6], sub_264EB0, v6, v10);
}

uint64_t sub_264AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_264BD0;
  else
    v7 = sub_CAC84;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_264B90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_264BD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_264C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = a2;
    v8 = a1;
    v3 = a3;
    result = sub_264ECC(a1, a2, (SEL *)&selRef_predicateForListenNow, (SEL *)&selRef_sortDescriptorsForListenNow);
    v6 = v5;
    if (v5)
      return result;
    v7 = result;
    if (!(result >> 62))
    {
      if (*(_QWORD *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFF8)))
        goto LABEL_5;
      goto LABEL_24;
    }
  }
  if (v7 < 0)
    v21 = v7;
  else
    v21 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_5:
    if (!((unint64_t)v7 >> 62))
      goto LABEL_6;
    goto LABEL_26;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  result = sub_264ECC(v8, v4, (SEL *)&selRef_predicateForListenNowLatestEpisodes, (SEL *)&selRef_sortDescriptorsForListenNowLatestEpisodes);
  if (v6)
    return result;
  v7 = result;
  if (!(result >> 62))
  {
LABEL_6:
    v10 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    if (v10)
      goto LABEL_7;
LABEL_30:
    result = swift_bridgeObjectRelease();
    *v3 = _swiftEmptyArrayStorage;
    return result;
  }
LABEL_26:
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v10 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_30;
LABEL_7:
  result = sub_1808DC(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      do
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11);
        v14 = _swiftEmptyArrayStorage[2];
        v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1)
          sub_1808DC(v13 > 1, v14 + 1, 1);
        ++v11;
        _swiftEmptyArrayStorage[2] = v14 + 1;
        v15 = &_swiftEmptyArrayStorage[3 * v14];
        v15[4] = v12;
        v15[5] = 0;
        *((_BYTE *)v15 + 48) = 2;
      }
      while (v10 != v11);
    }
    else
    {
      v16 = 0;
      do
      {
        v17 = _swiftEmptyArrayStorage[2];
        v18 = _swiftEmptyArrayStorage[3];
        v19 = *(id *)(v7 + 8 * v16 + 32);
        if (v17 >= v18 >> 1)
          sub_1808DC(v18 > 1, v17 + 1, 1);
        ++v16;
        _swiftEmptyArrayStorage[2] = v17 + 1;
        v20 = &_swiftEmptyArrayStorage[3 * v17];
        v20[4] = v19;
        v20[5] = 0;
        *((_BYTE *)v20 + 48) = 2;
      }
      while (v10 != v16);
    }
    result = swift_bridgeObjectRelease();
    *v3 = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_264E8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_264EB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_264C18(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_264ECC(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  id v7;
  NSString v8;
  id v9;
  void *v10;
  id v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTEpisodeEntityName);
  v7 = objc_allocWithZone((Class)NSFetchRequest);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, "initWithEntityName:", v8);

  v10 = (void *)objc_opt_self(MTEpisode);
  v11 = objc_msgSend(v10, *a3);
  objc_msgSend(v9, "setPredicate:", v11);

  isa = (Class)objc_msgSend(v10, *a4);
  if (!isa)
  {
    v13 = sub_327F8(0, (unint64_t *)&qword_3BE8C0, NSSortDescriptor_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v13);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, "setSortDescriptors:", isa);

  objc_msgSend(v9, "setFetchLimit:", a1);
  objc_msgSend(v9, "setResultType:", 1);
  v14 = sub_327F8(0, (unint64_t *)&unk_3C4440, NSManagedObjectID_ptr);
  v15 = NSManagedObjectContext.fetch<A>(_:)(v9, v14);

  return v15;
}

uint64_t sub_265084(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(dword_3C4424);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_81DB0;
  return FetchUpNextEpisodesIntentImplementation.perform(_:objectGraph:)(a2);
}

ValueMetadata *type metadata accessor for FetchUpNextEpisodesIntentImplementation()
{
  return &type metadata for FetchUpNextEpisodesIntentImplementation;
}

uint64_t ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  __n128 v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void (*v88)(void *, uint64_t, uint64_t);
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  NSObject *v94;
  __n128 v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t OpaqueTypeConformance2;
  char v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  os_log_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  char v188[8];
  uint64_t v189;
  uint64_t v190;

  LODWORD(v171) = a3;
  v175 = a2;
  v176 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B18);
  __chkstk_darwin(v8);
  v157 = (char *)&v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B48);
  v160 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v159 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B50);
  v163 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v162 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B58);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v174 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = type metadata accessor for PreparedArtworkRequest(0);
  v150 = *(_QWORD *)(v151 - 8);
  v13 = __chkstk_darwin(v151);
  v149 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for FileFormat(0, v13);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v146 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for Logger(0);
  v167 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v154 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v177 = (char *)&v141 - v18;
  v180 = type metadata accessor for ArtworkRequest(0);
  v19 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v161 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v168 = (char *)&v141 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v141 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v141 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v141 - v30;
  v158 = v32;
  __chkstk_darwin(v33);
  v183 = (char *)&v141 - v34;
  v35 = type metadata accessor for AssetCaches(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v141 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B40);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v156 = (char *)&v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = v39;
  v41 = __chkstk_darwin(v40);
  v181 = a5;
  v182 = (char *)&v141 - v42;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a5 + 40);
  v178 = v5;
  v44 = v43(a4, a5, v41);
  if (v44)
  {
    v45 = v44;
    AnyCancellable.cancel()();
    v44 = swift_release(v45);
  }
  v46 = static AssetCaches.shared.getter(v44);
  AssetCaches.preparedArtwork.getter(v46);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B5008);
  BaseObjectGraph.inject<A>(_:)(&v187, v47, v47);
  v48 = v183;
  ArtworkRequest.bucketed(with:)(&v187);
  __swift_destroy_boxed_opaque_existential_1(&v187);
  v49 = (*(uint64_t (**)(uint64_t))(v181 + 64))(a4);
  v166 = v49 | v171;
  static Logger.artwork.getter(v49);
  v50 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v51 = v19;
  v52 = v180;
  v50(v31, v48, v180);
  v50(v28, v48, v52);
  v53 = ((uint64_t (*)(char *, char *, uint64_t))v50)(v25, v48, v52);
  v54 = Logger.logObject.getter(v53);
  v56 = static os_log_type_t.debug.getter(v55);
  v57 = os_log_type_enabled(v54, v56);
  v179 = a4;
  v173 = v51;
  v171 = v50;
  if (v57)
  {
    v58 = swift_slowAlloc(32, -1);
    v59 = swift_slowAlloc(8, -1);
    v144 = v54;
    v60 = (_QWORD *)v59;
    v143 = v59;
    v61 = swift_slowAlloc(64, -1);
    v145 = v61;
    v187 = v61;
    *(_DWORD *)v58 = 138412802;
    v62 = ArtworkRequest.key.getter(v61);
    v184 = v62;
    v142 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185);
    *v60 = v62;
    v63 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
    v64 = v63(v31, v52);
    *(_WORD *)(v58 + 12) = 2080;
    v65 = ArtworkRequest.fileName.getter(v64);
    v184 = sub_69298(v65, v66, &v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185);
    swift_bridgeObjectRelease();
    v67 = v63(v28, v52);
    *(_WORD *)(v58 + 22) = 2080;
    v68 = v146;
    v69 = v142;
    v70 = ArtworkRequest.fileFormat.getter(v67);
    v71 = FileFormat.rawValue.getter(v70);
    v73 = v72;
    (*(void (**)(char *, uint64_t))(v147 + 8))(v68, v148);
    v184 = sub_69298(v71, v73, &v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185);
    swift_bridgeObjectRelease();
    v63(v69, v52);
    v54 = v144;
    _os_log_impl(&dword_0, v144, v56, "Starting ArtworkRequest for image view protocol: %@ | %s.%s", (uint8_t *)v58, 0x20u);
    v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    v75 = v143;
    swift_arrayDestroy(v143, 1, v74);
    swift_slowDealloc(v75, -1, -1);
    v76 = v145;
    swift_arrayDestroy(v145, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1, -1);
    v77 = v58;
    v50 = v171;
    swift_slowDealloc(v77, -1, -1);
  }
  else
  {
    v63 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
    v63(v31, v52);
    v63(v28, v52);
    v63(v25, v52);
  }

  v78 = v177;
  v79 = v172;
  v177 = *(char **)(v167 + 8);
  v80 = ((uint64_t (*)(char *, uint64_t))v177)(v78, v172);
  v81 = v52;
  v82 = (uint64_t)v182;
  v83 = v183;
  v84 = v168;
  if ((v166 & 1) != 0
    && (v85 = (uint64_t)v149,
        ArtworkRequest.prepared.getter(v80),
        v86 = (void *)sub_2665A8(v85, v82),
        v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v150 + 8))(v85, v151),
        v86))
  {
    v87 = v181;
    v88 = *(void (**)(void *, uint64_t, uint64_t))(v181 + 24);
    v89 = v86;
    v88(v86, v179, v87);

    v90 = v170;
    v91 = v169;
  }
  else
  {
    v92 = v154;
    static Logger.artwork.getter(v80);
    v93 = ((uint64_t (*)(char *, char *, uint64_t))v50)(v84, v83, v81);
    v94 = Logger.logObject.getter(v93);
    v96 = static os_log_type_t.debug.getter(v95);
    if (os_log_type_enabled(v94, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      v98 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v97 = 138412290;
      v99 = ArtworkRequest.key.getter(v98);
      v187 = v99;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v187, v188);
      *v98 = v99;
      v63(v84, v180);
      _os_log_impl(&dword_0, v94, v96, "Fulfilling request asynchronously: %@", v97, 0xCu);
      v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
      swift_arrayDestroy(v98, 1, v100);
      v101 = v98;
      v81 = v180;
      swift_slowDealloc(v101, -1, -1);
      v102 = v97;
      v79 = v172;
      swift_slowDealloc(v102, -1, -1);
    }
    else
    {
      v63(v84, v81);
    }
    v103 = v179;
    v104 = v153;
    v105 = v152;
    v106 = (void (*)(char *, uint64_t))v177;

    v106(v92, v79);
    (*(void (**)(_QWORD, uint64_t))(v181 + 24))(0, v103);
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BF700);
    BaseObjectGraph.inject<A>(_:)(&v187, v107, v107);
    v108 = v189;
    v109 = v190;
    __swift_project_boxed_opaque_existential_1(&v187, v189);
    v184 = dispatch thunk of ImageProvider.load(artwork:)(v183, v108, v109);
    v110 = sub_676C8();
    v186 = (id)static OS_dispatch_queue.main.getter(v110);
    v111 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v112 = (uint64_t)v157;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v157, 1, 1, v111);
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B6288);
    v114 = sub_32914(&qword_3B6290, &qword_3B6288, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v115 = sub_436CC();
    v116 = v159;
    Publisher.receive<A>(on:options:)(&v186, v112, v113, v110, v114, v115);
    sub_1459C(v112, &qword_3B2B18);

    swift_release(v184);
    __swift_destroy_boxed_opaque_existential_1(&v187);
    v117 = type metadata accessor for PageRenderController(0);
    BaseObjectGraph.optional<A>(_:)(&v187, v117, v117);
    v118 = v187;
    v119 = sub_32914(&qword_3B9B60, &qword_3B9B48, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v120 = v162;
    Publisher.emitPageRenderResourceEvents(using:onScreen:)(v118, 1, v105, v119);
    swift_release(v118);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v116, v105);
    ArtworkRequest.trace.getter(&v187);
    v184 = v105;
    v185 = v119;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v184, &opaque type descriptor for <<opaque return type of Publisher.emitPageRenderResourceEvents(using:onScreen:)>>, 1);
    v122 = static EmitLifecycle.defaultVerbosity.getter(v104, OpaqueTypeConformance2);
    Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(&v187, "ImageView", 9, 2, 1, 0, 0, v122 & 1, v104, OpaqueTypeConformance2);
    sub_1459C((uint64_t)&v187, &qword_3B62A0);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v120, v104);
    v177 = (char *)swift_allocObject(&unk_38CB48, 24, 7);
    swift_unknownObjectWeakInit(v177 + 16, v178);
    v123 = v161;
    v171(v161, v183, v81);
    v91 = v169;
    v124 = v156;
    v125 = v170;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v156, v182, v170);
    v126 = v173;
    v127 = *(unsigned __int8 *)(v173 + 80);
    v128 = (v127 + 32) & ~v127;
    v129 = *(unsigned __int8 *)(v91 + 80);
    v130 = (v158 + v129 + v128) & ~v129;
    v131 = (v155 + v130 + 7) & 0xFFFFFFFFFFFFFFF8;
    v132 = swift_allocObject(&unk_38CB70, v131 + 8, v127 | v129 | 7);
    v133 = v180;
    v134 = v181;
    *(_QWORD *)(v132 + 16) = v179;
    *(_QWORD *)(v132 + 24) = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v126 + 32))(v132 + v128, v123, v133);
    v135 = v132 + v130;
    v90 = v125;
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v135, v124, v125);
    *(_QWORD *)(v132 + v131) = v177;
    v81 = v180;
    v136 = sub_32914(&qword_3B9B68, &qword_3B9B58, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
    v137 = v165;
    v138 = v174;
    v139 = Publisher.sink(receiveCompletion:receiveValue:)(sub_265E68, 0, sub_266464, v132, v165, v136);
    swift_release(v132);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v138, v137);
    v82 = (uint64_t)v182;
    v83 = v183;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v139, v179, v134);
    v63 = *(uint64_t (**)(char *, uint64_t))(v173 + 8);
  }
  v63(v83, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v82, v90);
}

void sub_265E68(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  if (v6)
  {
    v7 = swift_errorRetain(v6);
    static Logger.artwork.getter(v7);
    swift_errorRetain(v6);
    v8 = swift_errorRetain(v6);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v17 = v6;
      v18 = v12;
      *(_DWORD *)v11 = 136315138;
      v16[1] = v11 + 4;
      swift_errorRetain(v6);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2B08);
      v14 = String.init<A>(describing:)(&v17, v13);
      v17 = sub_69298(v14, v15, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
      swift_bridgeObjectRelease();
      swift_errorRelease(v6);
      swift_errorRelease(v6);
      _os_log_impl(&dword_0, v9, v10, "Failed to load artwork for image view: %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

      swift_errorRelease(v6);
    }
    else
    {
      swift_errorRelease(v6);
      swift_errorRelease(v6);
      swift_errorRelease(v6);

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_266064(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v44 = a5;
  v48 = a3;
  v10 = type metadata accessor for PreparedArtworkRequest(0);
  v51 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v49 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkRequest(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v47 = a4 + 16;
  static Logger.artwork.getter(v20);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v50 = a2;
  v22 = v21(v15, a2, v12);
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.debug.getter(v24);
  if (os_log_type_enabled(v23, v25))
  {
    v41 = v23;
    v26 = swift_slowAlloc(12, -1);
    v43 = v10;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc(8, -1);
    v40 = (_QWORD *)v28;
    v42 = v19;
    *(_DWORD *)v27 = 138412290;
    v29 = ArtworkRequest.key.getter(v28);
    v52 = v29;
    v19 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    v30 = v40;
    *v40 = v29;
    v23 = v41;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl(&dword_0, v23, v25, "Received async image for: %@", v27, 0xCu);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
    swift_arrayDestroy(v30, 1, v31);
    swift_slowDealloc(v30, -1, -1);
    v32 = v27;
    v10 = v43;
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v46);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B40);
  v34 = CacheDomain.memory.getter(v33);
  v52 = v19;
  v35 = v49;
  ArtworkRequest.prepared.getter(v34);
  InMemoryAssetCache.store(asset:at:)(&v52, v35);
  swift_release(v34);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v10);
  v36 = v47;
  swift_beginAccess(v47, &v52, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v36);
  if (result)
  {
    v38 = result;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 72))(v19, v44, a6);
    return swift_unknownObjectRelease(v38);
  }
  return result;
}

uint64_t sub_266374()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_266398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for ArtworkRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_266464(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(type metadata accessor for ArtworkRequest(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3B9B40) - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_266064(a1, v1 + v6, v1 + v9, *(_QWORD *)(v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)), v3, v4);
}

void sub_2664F8(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_2665A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  __n128 v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  __n128 v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  __n128 v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4450);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v73 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PreparedArtworkRequest(0);
  v80 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v72 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - v9;
  __chkstk_darwin(v11);
  v76 = (char *)&v72 - v12;
  v13 = type metadata accessor for Logger(0);
  v78 = *(_QWORD *)(v13 - 8);
  v79 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v72 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B9B40);
  v23 = a2;
  v24 = CacheDomain.memory.getter(v22);
  v25 = a1;
  InMemoryAssetCache.asset(at:)(&v81, a1);
  v26 = swift_release(v24);
  v77 = v81;
  if (v81)
  {
    static Logger.artwork.getter(v26);
    v27 = v76;
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16))(v76, v25, v6);
    v29 = Logger.logObject.getter(v28);
    v31 = static os_log_type_t.debug.getter(v30);
    v32 = v6;
    if (os_log_type_enabled(v29, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v33 = 138412290;
      v35 = PreparedArtworkRequest.key.getter();
      v81 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
      *v34 = v35;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v32);
      _os_log_impl(&dword_0, v29, v31, "Found memory-cached value for request: %@", v33, 0xCu);
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
      swift_arrayDestroy(v34, 1, v36);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v6);
    }
    v58 = v78;
    v57 = v79;
    v41 = v77;

    (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v57);
  }
  else
  {
    v37 = v72;
    v38 = v73;
    v76 = v18;
    CacheDomain.disk.getter(v22);
    v39 = v75;
    CacheDomain.DiskCaches.asset(at:)(&v81, v25, v75);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v38, v39);
    v41 = v81;
    if (v81)
    {
      v74 = v22;
      v75 = v23;
      v42 = v76;
      static Logger.artwork.getter(v40);
      v43 = v10;
      v44 = v10;
      v45 = v25;
      v46 = v6;
      v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16))(v44, v25, v6);
      v48 = Logger.logObject.getter(v47);
      v50 = static os_log_type_t.debug.getter(v49);
      if (os_log_type_enabled(v48, v50))
      {
        v51 = swift_slowAlloc(12, -1);
        v77 = v41;
        v52 = (uint8_t *)v51;
        v53 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v52 = 138412290;
        v54 = PreparedArtworkRequest.key.getter();
        v81 = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
        *v53 = v54;
        v42 = v76;
        (*(void (**)(char *, uint64_t))(v80 + 8))(v43, v46);
        _os_log_impl(&dword_0, v48, v50, "Found disk-cached value for request: %@", v52, 0xCu);
        v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
        swift_arrayDestroy(v53, 1, v55);
        swift_slowDealloc(v53, -1, -1);
        v56 = v52;
        v41 = v77;
        swift_slowDealloc(v56, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v80 + 8))(v43, v6);
      }
      v69 = v78;
      v68 = v79;

      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v68);
      v70 = CacheDomain.memory.getter(v74);
      v81 = v41;
      InMemoryAssetCache.store(asset:at:)(&v81, v45);
      swift_release(v70);
    }
    else
    {
      static Logger.artwork.getter(v40);
      v59 = v37;
      v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16))(v37, v25, v6);
      v61 = Logger.logObject.getter(v60);
      v63 = static os_log_type_t.debug.getter(v62);
      if (os_log_type_enabled(v61, (os_log_type_t)v63))
      {
        v64 = (uint8_t *)swift_slowAlloc(12, -1);
        v65 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v64 = 138412290;
        v66 = PreparedArtworkRequest.key.getter();
        v81 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
        *v65 = v66;
        (*(void (**)(char *, uint64_t))(v80 + 8))(v59, v6);
        _os_log_impl(&dword_0, v61, (os_log_type_t)v63, "Unable to find cached value for request: %@", v64, 0xCu);
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3B8E70);
        swift_arrayDestroy(v65, 1, v67);
        swift_slowDealloc(v65, -1, -1);
        swift_slowDealloc(v64, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v6);
      }

      (*(void (**)(char *, uint64_t))(v78 + 8))(v15, v79);
      return 0;
    }
  }
  return v41;
}

uint64_t static String.loadingShelfID.getter()
{
  return 0x53676E6964616F6CLL;
}

unint64_t static String.categoryPageFromYourShowsShelfID.getter()
{
  return 0xD000000000000020;
}

unint64_t static String.listenNowHighlightShelfID.getter()
{
  return 0xD000000000000019;
}

unint64_t static String.pageHighlightShelfID.getter()
{
  return 0xD000000000000014;
}

uint64_t MetricsPageEnterGate.__allocating_init(sender:)(uint64_t a1, uint64_t a2)
{
  return sub_266FAC(a1, a2, sub_F5EB0);
}

uint64_t MetricsPageEnterGate.hasPageMetrics.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_beginAccess(v1 + 34, v13, 1, 0);
  v8 = *(_BYTE *)(v1 + 34);
  *(_BYTE *)(v1 + 34) = a1;
  if ((v8 & 1) == 0 && (a1 & 1) != 0)
  {
    result = swift_beginAccess(v1 + 32, v12, 0, 0);
    if (*(_BYTE *)(v1 + 32) == 1)
    {
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (result)
      {
        v9 = result;
        v10 = *(_QWORD *)(v1 + 24);
        ObjectType = swift_getObjectType(result);
        static PageMetrics.InvocationPoint.pageEnter.getter();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 8))(v6, ObjectType, v10);
        swift_unknownObjectRelease(v9);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.hasAppeared.setter(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = a1 & 1;
  v4 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_beginAccess(v1 + 32, v14, 1, 0);
  v9 = *(unsigned __int8 *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = a1;
  if (v9 != v3)
  {
    result = swift_beginAccess(v1 + 34, v13, 0, 0);
    if (*(_BYTE *)(v1 + 34) == 1 && (a1 & 1) != 0)
    {
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (result)
      {
        v10 = result;
        v11 = *(_QWORD *)(v1 + 24);
        ObjectType = swift_getObjectType(result);
        static PageMetrics.InvocationPoint.pageEnter.getter();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 8))(v7, ObjectType, v11);
        swift_unknownObjectRelease(v10);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.hasExitedWhileAppeared.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_beginAccess(v1 + 33, v13, 1, 0);
  v8 = *(unsigned __int8 *)(v1 + 33);
  *(_BYTE *)(v1 + 33) = a1;
  if (v8 == 1 && (a1 & 1) == 0)
  {
    result = swift_beginAccess(v1 + 34, v12, 0, 0);
    if ((*(_BYTE *)(v1 + 34) & 1) != 0)
    {
      result = swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (result)
      {
        v9 = result;
        v10 = *(_QWORD *)(v1 + 24);
        ObjectType = swift_getObjectType(result);
        static PageMetrics.InvocationPoint.appEnter.getter();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 8))(v6, ObjectType, v10);
        swift_unknownObjectRelease(v9);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.init(sender:)(uint64_t a1, uint64_t a2)
{
  return sub_266FAC(a1, a2, sub_267454);
}

uint64_t sub_266FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;

  ObjectType = swift_getObjectType(a1);
  v8 = a3(a1, v3, ObjectType, a2);
  swift_unknownObjectRelease(a1);
  return v8;
}

void (*MetricsPageEnterGate.hasAppeared.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(_QWORD *)(v5 + 64));
  swift_beginAccess(v1 + 32, v3, 1, 0);
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v1 + 32);
  return sub_267080;
}

void sub_267080(uint64_t a1, char a2)
{
  _QWORD *v2;
  int v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  v2 = *(_QWORD **)a1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v4 = (void *)v2[9];
    MetricsPageEnterGate.hasAppeared.setter(*(_BYTE *)(*(_QWORD *)a1 + 80));
  }
  else
  {
    v5 = v2[6];
    v6 = *(unsigned __int8 *)(v5 + 32);
    *(_BYTE *)(v5 + 32) = v3;
    if (v3 != v6)
    {
      v7 = v2[6];
      swift_beginAccess(v7 + 34, v2 + 3, 0, 0);
      if (v3)
      {
        if ((*(_BYTE *)(v7 + 34) & 1) != 0)
        {
          Strong = swift_unknownObjectWeakLoadStrong(v2[6] + 16);
          if (Strong)
          {
            v9 = Strong;
            v11 = v2[8];
            v10 = v2[9];
            v12 = v2[7];
            v13 = *(_QWORD *)(v2[6] + 24);
            ObjectType = swift_getObjectType();
            static PageMetrics.InvocationPoint.pageEnter.getter(ObjectType);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v10, ObjectType, v13);
            swift_unknownObjectRelease(v9);
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
          }
        }
      }
    }
    v4 = (void *)v2[9];
  }
  free(v4);
  free(v2);
}

void (*MetricsPageEnterGate.hasExitedWhileAppeared.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(_QWORD *)(v5 + 64));
  swift_beginAccess(v1 + 33, v3, 1, 0);
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v1 + 33);
  return sub_2671F4;
}

void sub_2671F4(uint64_t a1, char a2)
{
  _QWORD *v2;
  char v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  v2 = *(_QWORD **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v4 = (void *)v2[9];
    MetricsPageEnterGate.hasExitedWhileAppeared.setter(v3);
  }
  else
  {
    v5 = v2[6];
    v6 = *(unsigned __int8 *)(v5 + 33);
    *(_BYTE *)(v5 + 33) = v3;
    if (v6 == 1 && (v3 & 1) == 0)
    {
      v7 = v2[6];
      swift_beginAccess(v7 + 34, v2 + 3, 0, 0);
      if ((*(_BYTE *)(v7 + 34) & 1) != 0)
      {
        Strong = swift_unknownObjectWeakLoadStrong(v2[6] + 16);
        if (Strong)
        {
          v9 = Strong;
          v11 = v2[8];
          v10 = v2[9];
          v12 = v2[7];
          v13 = *(_QWORD *)(v2[6] + 24);
          ObjectType = swift_getObjectType();
          static PageMetrics.InvocationPoint.appEnter.getter();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v10, ObjectType, v13);
          swift_unknownObjectRelease(v9);
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
        }
      }
    }
    v4 = (void *)v2[9];
  }
  free(v4);
  free(v2);
}

void (*MetricsPageEnterGate.hasPageMetrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = type metadata accessor for PageMetrics.InvocationPoint(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(_QWORD *)(v5 + 64));
  swift_beginAccess(v1 + 34, v3, 1, 0);
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v1 + 34);
  return sub_267364;
}

void sub_267364(uint64_t a1, char a2)
{
  _QWORD *v2;
  int v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  v2 = *(_QWORD **)a1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    v4 = (void *)v2[9];
    MetricsPageEnterGate.hasPageMetrics.setter(v3);
  }
  else
  {
    v5 = v2[6];
    v6 = *(_BYTE *)(v5 + 34);
    *(_BYTE *)(v5 + 34) = v3;
    if ((v6 & 1) == 0)
    {
      if (v3)
      {
        v7 = v2[6];
        swift_beginAccess(v7 + 32, v2 + 3, 0, 0);
        if (*(_BYTE *)(v7 + 32) == 1)
        {
          Strong = swift_unknownObjectWeakLoadStrong(v2[6] + 16);
          if (Strong)
          {
            v9 = Strong;
            v11 = v2[8];
            v10 = v2[9];
            v12 = v2[7];
            v13 = *(_QWORD *)(v2[6] + 24);
            ObjectType = swift_getObjectType();
            static PageMetrics.InvocationPoint.pageEnter.getter(ObjectType);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v10, ObjectType, v13);
            swift_unknownObjectRelease(v9);
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
          }
        }
      }
    }
    v4 = (void *)v2[9];
  }
  free(v4);
  free(v2);
}

uint64_t sub_267454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  *(_QWORD *)(a2 + 24) = 0;
  v7 = swift_unknownObjectWeakInit(a2 + 16, 0);
  *(_WORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 34) = 0;
  *(_QWORD *)(a2 + 24) = a4;
  swift_unknownObjectWeakAssign(v7, a1);
  return a2;
}

uint64_t sub_2674A8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 32, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_2674EC(char *a1)
{
  return MetricsPageEnterGate.hasAppeared.setter(*a1);
}

uint64_t sub_267510@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 33, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 33);
  return result;
}

uint64_t sub_267554(char *a1)
{
  return MetricsPageEnterGate.hasExitedWhileAppeared.setter(*a1);
}

uint64_t sub_267578@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 34, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 34);
  return result;
}

uint64_t sub_2675BC(char *a1)
{
  return MetricsPageEnterGate.hasPageMetrics.setter(*a1);
}

uint64_t type metadata accessor for MetricsPageEnterGate()
{
  return objc_opt_self(_TtC8ShelfKit20MetricsPageEnterGate);
}

uint64_t method lookup function for MetricsPageEnterGate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MetricsPageEnterGate);
}

uint64_t HighlightResource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for HighlightResource(0) + 24);
  return sub_282CC(v3, a1);
}

uint64_t type metadata accessor for HighlightResource(uint64_t a1)
{
  uint64_t result;

  result = qword_3C4580;
  if (!qword_3C4580)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HighlightResource);
  return result;
}

uint64_t HighlightResource.init(id:adamID:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (uint64_t)a5 + *(int *)(type metadata accessor for HighlightResource(0) + 24);
  return sub_B683C(a4, v6);
}

uint64_t sub_2676B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1E1724(*a1, *a2);
}

Swift::Int sub_2676C0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x64496D616461;
  if (v1 != 1)
  {
    v3 = 7107189;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 25705;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE200000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_267748(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x64496D616461;
  if (*v1 != 1)
  {
    v3 = 7107189;
    v2 = 0xE300000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 25705;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE200000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_2677AC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE600000000000000;
  v3 = 0x64496D616461;
  if (v1 != 1)
  {
    v3 = 7107189;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 25705;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE200000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_267830@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_26870C(*a1);
  *a2 = result;
  return result;
}

void sub_26785C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE200000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x64496D616461;
  if (v2 != 1)
  {
    v5 = 7107189;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 25705;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2678A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64496D616461;
  if (*v0 != 1)
    v1 = 7107189;
  if (*v0)
    return v1;
  else
    return 25705;
}

unint64_t sub_2678E8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_26870C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26790C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_267AE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_267934(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_267AE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HighlightResource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[2];
  uint64_t v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4510);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_267AE8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HighlightResource.CodingKeys, &type metadata for HighlightResource.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v21 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v21, v5);
  if (!v2)
  {
    v20 = v3[2];
    v19[1] = 1;
    sub_13E9C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20);
    v14 = (char *)v3 + *(int *)(type metadata accessor for HighlightResource(0) + 24);
    v19[0] = 2;
    v15 = type metadata accessor for URL(0);
    v16 = sub_267DB4(&qword_3B52C8, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v14, v19, v5, v15, v16);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_267AE8()
{
  unint64_t result;

  result = qword_3C4518;
  if (!qword_3C4518)
  {
    result = swift_getWitnessTable(&unk_302CCC);
    atomic_store(result, (unint64_t *)&qword_3C4518);
  }
  return result;
}

uint64_t HighlightResource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[2];
  char v32;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4520);
  v6 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HighlightResource(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_267AE8();
  v28 = v8;
  v15 = v29;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for HighlightResource.CodingKeys, &type metadata for HighlightResource.CodingKeys, v14, v12, v13);
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v16 = v6;
  v32 = 0;
  v17 = v27;
  *v11 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v27);
  v11[1] = v18;
  v31[1] = 1;
  sub_14088();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v30, &type metadata for AdamID);
  v11[2] = v30;
  v19 = type metadata accessor for URL(0);
  v31[0] = 2;
  v20 = sub_267DB4(&qword_3B52E8, (uint64_t)&protocol conformance descriptor for URL);
  v21 = v19;
  v22 = v19;
  v23 = v28;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v21, v31, v17, v22, v20);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v17);
  sub_B683C((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 24));
  sub_267DF4((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_33E40((uint64_t)v11);
}

uint64_t sub_267DB4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    type metadata accessor for URL(255);
    result = swift_getWitnessTable(a2);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_267DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HighlightResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_267E38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HighlightResource.init(from:)(a1, a2);
}

uint64_t sub_267E4C(_QWORD *a1)
{
  return HighlightResource.encode(to:)(a1);
}

uint64_t sub_267E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_4619C(a1, a2, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for HighlightResource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for HighlightResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for HighlightResource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for HighlightResource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for HighlightResource(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2683E4);
}

uint64_t sub_2683E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_268470);
}

uint64_t sub_268470(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B4370);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_2684E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_302BB8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_28C74(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for HighlightResource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2685B4 + 4 * byte_302AF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2685E8 + 4 * byte_302AF0[v4]))();
}

uint64_t sub_2685E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2685F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2685F8);
  return result;
}

uint64_t sub_268604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x26860CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_268610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_268618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HighlightResource.CodingKeys()
{
  return &type metadata for HighlightResource.CodingKeys;
}

unint64_t sub_268638()
{
  unint64_t result;

  result = qword_3C45C0;
  if (!qword_3C45C0)
  {
    result = swift_getWitnessTable(&unk_302CA4);
    atomic_store(result, (unint64_t *)&qword_3C45C0);
  }
  return result;
}

unint64_t sub_268680()
{
  unint64_t result;

  result = qword_3C45C8;
  if (!qword_3C45C8)
  {
    result = swift_getWitnessTable(&unk_302BDC);
    atomic_store(result, (unint64_t *)&qword_3C45C8);
  }
  return result;
}

unint64_t sub_2686C8()
{
  unint64_t result;

  result = qword_3C45D0;
  if (!qword_3C45D0)
  {
    result = swift_getWitnessTable(&unk_302C04);
    atomic_store(result, (unint64_t *)&qword_3C45D0);
  }
  return result;
}

unint64_t sub_26870C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_375D98, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_268754()
{
  qword_3F3FE8 = 0x402C000000000000;
}

uint64_t sub_268764()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for RoundedRectangle(0);
  __swift_allocate_value_buffer(v0, qword_3C45D8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_3C45D8);
  if (qword_3B0210 != -1)
    swift_once(&qword_3B0210, sub_268754);
  v2 = qword_3F3FE8;
  v3 = (char *)v1 + *(int *)(v0 + 20);
  v4 = enum case for RoundedCornerStyle.continuous(_:);
  v5 = type metadata accessor for RoundedCornerStyle(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

uint64_t static HeroContainer.cardShape.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3B0218 != -1)
    swift_once(&qword_3B0218, sub_268764);
  v2 = type metadata accessor for RoundedRectangle(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3C45D8);
  return sub_26887C(v3, a1);
}

uint64_t sub_26887C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2688C0()
{
  qword_3C45F0 = 0x4030000000000000;
}

double static HeroContainer.chinPadding.getter()
{
  return sub_268988(&qword_3B0220, (uint64_t)&qword_3C45F0);
}

double static HeroContainer.chinHeightPercentage.getter()
{
  return 0.44;
}

double static HeroContainer.maxChinHeight(for:)(double a1, double a2)
{
  return a2 * 0.44;
}

double static HeroContainer.shelfCellHeight.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 1.33333333;
  *a1 = xmmword_302D30;
  return result;
}

double static HeroContainer.cardRatioHeightToWidth.getter()
{
  return 1.33333333;
}

double static HeroContainer.cardRatioWidthToHeight.getter()
{
  return 0.75;
}

void sub_268930()
{
  qword_3C45F8 = 0x402C000000000000;
}

double static HeroContainer.spaceBetweenTextAndButtons.getter()
{
  return sub_268988(&qword_3B0228, (uint64_t)&qword_3C45F8);
}

void sub_26895C()
{
  qword_3C4600 = 0x4020000000000000;
}

double static HeroContainer.spaceBetweenPlayButtonAndContextMenu.getter()
{
  return sub_268988(&qword_3B0230, (uint64_t)&qword_3C4600);
}

double sub_268988(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

double sub_2689C0()
{
  double v0;
  double v1;
  double result;

  if (qword_3B0228 != -1)
    swift_once(&qword_3B0228, sub_268930);
  v0 = *(double *)&qword_3C45F8;
  if (qword_3B0220 != -1)
    swift_once(&qword_3B0220, sub_2688C0);
  v1 = *(double *)&qword_3C45F0;
  if (qword_3B0230 != -1)
    swift_once(&qword_3B0230, sub_26895C);
  result = -v1;
  *(double *)&qword_3C4608 = -v0;
  unk_3C4610 = -v1;
  *(double *)&qword_3C4618 = -v1;
  unk_3C4620 = -*(double *)&qword_3C4600;
  return result;
}

double static HeroContainer.playButtonInsets.getter()
{
  if (qword_3B0238 != -1)
    swift_once(&qword_3B0238, sub_2689C0);
  return *(double *)&qword_3C4608;
}

double sub_268ACC()
{
  uint64_t v0;
  double result;

  if (qword_3B0228 != -1)
    swift_once(&qword_3B0228, sub_268930);
  v0 = qword_3C45F8;
  if (qword_3B0220 != -1)
    swift_once(&qword_3B0220, sub_2688C0);
  result = *(double *)&qword_3C45F0;
  qword_3C4628 = v0;
  unk_3C4630 = qword_3C45F0;
  qword_3C4638 = qword_3C45F0;
  unk_3C4640 = qword_3C45F0;
  return result;
}

double static HeroContainer.buttonAreaOutsets.getter()
{
  if (qword_3B0240 != -1)
    swift_once(&qword_3B0240, sub_268ACC);
  return *(double *)&qword_3C4628;
}

id static HeroContainer.contextMenuPreviewParameters(bounds:)(double a1, double a2, double a3, double a4)
{
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v15[5];

  v8 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
  if (qword_3B0218 != -1)
    swift_once(&qword_3B0218, sub_268764);
  v9 = type metadata accessor for RoundedRectangle(0);
  __swift_project_value_buffer(v9, (uint64_t)qword_3C45D8);
  v10 = RoundedRectangle.path(in:)(v15, a1, a2, a3, a4);
  v11 = (void *)Path.cgPath.getter(v10);
  sub_268CF0((uint64_t)v15);
  v12 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithCGPath:", v11);

  objc_msgSend(v8, "setVisiblePath:", v12);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v13);

  return v8;
}

uint64_t sub_268CF0(uint64_t a1)
{
  sub_268D24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_268D24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3)
    return swift_release(result);
  return result;
}

ValueMetadata *type metadata accessor for HeroContainer()
{
  return &type metadata for HeroContainer;
}

uint64_t ObservableObjectAnimator.__allocating_init<A>(_:keyPath:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 48, 7);
  ObservableObjectAnimator.init<A>(_:keyPath:)(a1, a2, a3);
  return v7;
}

_QWORD *ObservableObjectAnimator.init<A>(_:keyPath:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v19 = *v3;
  v8 = *(_QWORD *)(*a2 + class metadata base offset for KeyPath);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, v8);
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v11 = (uint64_t *)((char *)&v19 - v10);
  v3[5] = 0;
  v3[2] = a1;
  v12 = (_QWORD *)swift_allocObject(&unk_38CD68, 40, 7);
  v12[2] = a3;
  v12[3] = a1;
  v12[4] = a2;
  v3[3] = sub_269010;
  v3[4] = v12;
  swift_unknownObjectRetain_n(a1, 2);
  swift_retain();
  dispatch thunk of ObservableObject.objectWillChange.getter(v11, v8, a3);
  v13 = swift_allocObject(&unk_38CD90, 24, 7);
  swift_weakInit(v13 + 16);
  v14 = (_QWORD *)swift_allocObject(&unk_38CDB8, 48, 7);
  v14[2] = *(_QWORD *)(v19 + 80);
  v14[3] = v8;
  v14[4] = a3;
  v14[5] = v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, v8, AssociatedTypeWitness, &protocol requirements base descriptor for ObservableObject, &associated conformance descriptor for ObservableObject.ObservableObject.ObjectWillChangePublisher: Publisher);
  swift_retain();
  v16 = Publisher<>.sink(receiveValue:)(sub_269128, v14, AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_unknownObjectRelease(a1);
  swift_release(a2);
  swift_release(v14);
  (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v11, AssociatedTypeWitness);
  swift_release(v13);
  v17 = v4[5];
  v4[5] = v16;
  swift_release(v17);
  return v4;
}

uint64_t sub_268F90(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  v5 = a1;
  swift_unknownObjectRetain(a1);
  swift_getAtKeyPath(&v5, a2);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_268FE4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_269010()
{
  uint64_t v0;

  return sub_268F90(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_26901C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_269040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[7];
  _BYTE v13[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v7);
  if (result)
  {
    v9 = result;
    __chkstk_darwin(result);
    v12[2] = a4;
    v12[3] = a5;
    v12[4] = v10;
    v11 = static Animation.default.getter(v10);
    withAnimation<A>(_:_:)(v11, sub_2692A8, v12, (char *)&type metadata for () + 8);
    swift_release(v9);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_269104()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_269128(uint64_t a1)
{
  uint64_t *v1;

  return sub_269040(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_269134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for ObservableObjectAnimator(0, *(_QWORD *)(*(_QWORD *)a1 + 80), a3, a4);
  swift_getWitnessTable(&protocol conformance descriptor for ObservableObjectAnimator<A>);
  v5 = ObservableObject<>.objectWillChange.getter(v4);
  ObservableObjectPublisher.send()();
  return swift_release(v5);
}

_QWORD *ObservableObjectAnimator.deinit()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return v0;
}

uint64_t ObservableObjectAnimator.__deallocating_deinit()
{
  uint64_t v0;

  ObservableObjectAnimator.deinit();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_2691EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for ObservableObjectAnimator(0, *(_QWORD *)(a1 + 80), a2, a3);
  result = ObservableObject<>.objectWillChange.getter(v5);
  *a4 = result;
  return result;
}

uint64_t sub_26922C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for () + 64;
  v2[2] = "\b";
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

uint64_t type metadata accessor for ObservableObjectAnimator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableObjectAnimator);
}

uint64_t method lookup function for ObservableObjectAnimator(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ObservableObjectAnimator);
}

uint64_t dispatch thunk of ObservableObjectAnimator.__allocating_init<A>(_:keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_2692A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_269134(v4[4], v4[2], v4[3], a4);
}

uint64_t sub_2692C4()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_2692E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t HeroContainerModifier.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t result;

  *a1 = swift_getKeyPath(&unk_302E20);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  swift_storeEnumTagMultiPayload(a1, v2, 0);
  v3 = (char *)a1 + *(int *)(type metadata accessor for HeroContainerModifier(0) + 20);
  result = swift_getKeyPath(&unk_302E50);
  *(_QWORD *)v3 = result;
  v3[8] = 0;
  return result;
}

uint64_t sub_2693CC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t type metadata accessor for HeroContainerModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_3C4798;
  if (!qword_3C4798)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroContainerModifier);
  return result;
}

uint64_t HeroContainerModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  __n128 v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  uint64_t v80;

  v70 = a1;
  v78 = a2;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46C8);
  __chkstk_darwin(v74);
  v76 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46D0);
  __chkstk_darwin(v75);
  v77 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorScheme(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46E8);
  __chkstk_darwin(v71);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C46F0);
  __chkstk_darwin(v72);
  v73 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_3B0218 != -1)
    swift_once(&qword_3B0218, sub_268764);
  v21 = __swift_project_value_buffer(v18, (uint64_t)qword_3C45D8);
  sub_26887C(v21, (uint64_t)v20);
  v22 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_26887C((uint64_t)v20, v22);
  *(_BYTE *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C46F8) + 36)) = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4700);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v14, v70, v23);
  sub_26A33C((uint64_t)v8);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if ((_DWORD)v24 == enum case for ColorScheme.dark(_:))
  {
    v25 = static Color.white.getter(v24);
    v26 = Color.opacity(_:)(0.2);
    swift_release(v25);
  }
  else
  {
    v27 = static Color.black.getter(v24);
    v26 = Color.opacity(_:)(0.08);
    swift_release(v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v28 = v2 + *(int *)(type metadata accessor for HeroContainerModifier(0) + 20);
  v29 = *(_QWORD *)v28;
  v30 = *(_BYTE *)(v28 + 8);
  sub_A0A18(*(_QWORD *)v28, v30);
  v31 = sub_269FB8(v29, v30);
  sub_A0A6C(v29, v30);
  v32.n128_f64[0] = v31;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v79, 0, 0, _swiftEmptyArrayStorage, v32, 10.0, 0.0);
  sub_26887C((uint64_t)v20, (uint64_t)v11);
  v33 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4708) + 36)];
  v34 = v79[1];
  *(_OWORD *)v33 = v79[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_QWORD *)v33 + 4) = v80;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4710);
  *(_QWORD *)&v11[*(int *)(v35 + 52)] = v26;
  *(_WORD *)&v11[*(int *)(v35 + 56)] = 256;
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4718);
  v40 = (uint64_t *)&v11[*(int *)(v39 + 36)];
  *v40 = v36;
  v40[1] = v38;
  v41 = static Alignment.center.getter(v39);
  v43 = v42;
  v44 = (uint64_t)&v16[*(int *)(v71 + 36)];
  sub_267BC((uint64_t)v11, v44, &qword_3C46D8);
  v45 = (uint64_t *)(v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4720) + 36));
  *v45 = v41;
  v45[1] = v43;
  sub_267BC((uint64_t)v14, (uint64_t)v16, &qword_3C46E0);
  sub_1459C((uint64_t)v11, &qword_3C46D8);
  v46 = sub_1459C((uint64_t)v14, &qword_3C46E0);
  v47 = static Color.black.getter(v46);
  v48 = Color.opacity(_:)(0.3);
  swift_release(v47);
  v49 = v76;
  v50 = sub_26887C((uint64_t)v20, v76);
  v51 = v49 + *(int *)(v74 + 36);
  *(_QWORD *)v51 = v48;
  *(_OWORD *)(v51 + 8) = xmmword_302E10;
  *(_QWORD *)(v51 + 24) = 0x402E000000000000;
  LOBYTE(v47) = static Edge.Set.all.getter(v50);
  v52 = EdgeInsets.init(_all:)(15.0);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v59 = v77;
  sub_267BC(v49, v77, &qword_3C46C8);
  v60 = v59 + *(int *)(v75 + 36);
  *(_BYTE *)v60 = v47;
  *(double *)(v60 + 8) = v52;
  *(_QWORD *)(v60 + 16) = v54;
  *(_QWORD *)(v60 + 24) = v56;
  *(_QWORD *)(v60 + 32) = v58;
  *(_BYTE *)(v60 + 40) = 0;
  v61 = sub_1459C(v49, &qword_3C46C8);
  v62 = static Alignment.center.getter(v61);
  v64 = v63;
  v65 = (uint64_t)v73;
  v66 = (uint64_t)&v73[*(int *)(v72 + 36)];
  sub_267BC(v59, v66, &qword_3C46D0);
  v67 = (uint64_t *)(v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4728) + 36));
  *v67 = v62;
  v67[1] = v64;
  sub_267BC((uint64_t)v16, v65, &qword_3C46E8);
  sub_1459C(v59, &qword_3C46D0);
  sub_1459C((uint64_t)v16, &qword_3C46E8);
  v68 = v78;
  sub_267BC(v65, v78, &qword_3C46F0);
  *(_BYTE *)(v68 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4730) + 36)) = 1;
  sub_1459C(v65, &qword_3C46F0);
  return sub_26A5A4((uint64_t)v20);
}

uint64_t sub_269A44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v17 = v14 + 4;
      v18 = sub_69298(0xD000000000000010, 0x8000000000314DA0, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    sub_A0A5C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_269C20(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_69298(7630409, 0xE300000000000000, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_A0A6C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_269DD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  char v21;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_267BC(v2, (uint64_t)v20, &qword_3B9A10);
  if (v21 == 1)
    return sub_F4D8(v20, a1);
  v10 = *(_QWORD *)&v20[0];
  v11 = static os_log_type_t.fault.getter(v8);
  v12 = static Log.runtimeIssuesLog.getter();
  v13 = v11;
  if (os_log_type_enabled(v12, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v17[1] = a1;
    v16 = v15;
    v19 = v15;
    *(_DWORD *)v14 = 136315138;
    v18 = sub_69298(0xD00000000000001CLL, 0x8000000000314DC0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    _os_log_impl(&dword_0, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, v10);
  swift_release(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_269FB8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  v8 = swift_retain();
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_69298(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_A0A6C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_26A178(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain();
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_69298(0x656A624F65736142, 0xEF68706172477463, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    swift_release(a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_26A33C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_267BC(v2, (uint64_t)v10, &qword_3BBA70);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  }
  else
  {
    v14 = *v10;
    v15 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v16 = static Log.runtimeIssuesLog.getter();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v21[1] = a1;
      v20 = v19;
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      v22 = sub_69298(0x686353726F6C6F43, 0xEB00000000656D65, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl(&dword_0, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v14);
    swift_release(v14);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_26A57C(double *a1@<X8>)
{
  *a1 = EnvironmentValues.pixelLength.getter();
}

uint64_t sub_26A5A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_26A5E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of HeroContainerModifier.body(content:)>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroContainerModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_A0A18(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    v14[8] = v17;
  }
  return a1;
}

uint64_t destroy for HeroContainerModifier(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  return sub_A0A6C(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *((_BYTE *)a1 + *(int *)(a2 + 20) + 8));
}

_QWORD *initializeWithCopy for HeroContainerModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_A0A18(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  return a1;
}

_QWORD *assignWithCopy for HeroContainerModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  if (a1 != a2)
  {
    sub_1459C((uint64_t)a1, &qword_3BBA70);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_A0A18(*(_QWORD *)v13, v15);
  v16 = *(_QWORD *)v12;
  v17 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  sub_A0A6C(v16, v17);
  return a1;
}

char *initializeWithTake for HeroContainerModifier(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v9[8] = v10[8];
  return a1;
}

char *assignWithTake for HeroContainerModifier(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    sub_1459C((uint64_t)a1, &qword_3BBA70);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  v13 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  sub_A0A6C(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeroContainerModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26AAB0);
}

uint64_t sub_26AAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4738);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeroContainerModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26AB3C);
}

uint64_t sub_26AB3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4738);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

void sub_26ABBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1357C4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

unint64_t sub_26AC30()
{
  unint64_t result;

  result = qword_3C47D0;
  if (!qword_3C47D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4730);
    sub_26AC9C();
    sub_26AE40();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C47D0);
  }
  return result;
}

unint64_t sub_26AC9C()
{
  unint64_t result;

  result = qword_3C47D8;
  if (!qword_3C47D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C46F0);
    sub_26AD20();
    sub_32914(&qword_3C4808, &qword_3C4728, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C47D8);
  }
  return result;
}

unint64_t sub_26AD20()
{
  unint64_t result;

  result = qword_3C47E0;
  if (!qword_3C47E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C46E8);
    sub_26ADA4();
    sub_32914(&qword_3C4800, &qword_3C4720, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C47E0);
  }
  return result;
}

unint64_t sub_26ADA4()
{
  unint64_t result;

  result = qword_3C47E8;
  if (!qword_3C47E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C46E0);
    sub_32914(&qword_3C47F0, &qword_3C4700, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_32914(&qword_3C47F8, &qword_3C46F8, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C47E8);
  }
  return result;
}

unint64_t sub_26AE40()
{
  unint64_t result;

  result = qword_3C4810;
  if (!qword_3C4810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_3C4810);
  }
  return result;
}

uint64_t sub_26AE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t WitnessTable;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v8 = v7;
  v24[0] = a6;
  v24[1] = a7;
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for _LayoutRoot(0, v17, v18);
  __chkstk_darwin(v19);
  v21 = (char *)v24 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v8, a3);
  _LayoutRoot.init(_:)(v16, a3, a5);
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v29 = v24[0];
  v30 = a1;
  v31 = a2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _LayoutRoot<A>);
  return _VariadicView.Tree.init(_:content:)(v21, sub_272D2C, v25, v19, a4, WitnessTable);
}

uint64_t sub_26AFB4(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_26B168()
{
  uint64_t v0;
  _WORD v2[8];

  v0 = type metadata accessor for NamedCoordinateSpace(0);
  __swift_allocate_value_buffer(v0, qword_3C4818);
  __swift_project_value_buffer(v0, (uint64_t)qword_3C4818);
  strcpy((char *)v2, "HeroChinCard");
  HIBYTE(v2[6]) = 0;
  v2[7] = -5120;
  return static CoordinateSpaceProtocol<>.named<A>(_:)(v2, &type metadata for String, &protocol witness table for String);
}

uint64_t HeroChin.init(variant:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  sub_3C56C(a1, a6, type metadata accessor for HeroBackgroundVariant);
  result = type metadata accessor for HeroChin(0, a4, a5, v11);
  v13 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for HeroChin(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HeroChin);
}

uint64_t HeroChin.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v49 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4830);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4838);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _FlexFrameLayout);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4840);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4848);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4850);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = sub_32914(&qword_3C4858, &qword_3C4830, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v18 = type metadata accessor for _VariadicView.Tree(0, v4, v16, v17);
  v48 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v45 = (char *)&v44 - v19;
  v20 = type metadata accessor for HeroChinLayout(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_32914(&qword_3C4860, &qword_3C4830, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>);
  v56 = v23;
  v57 = WitnessTable;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>);
  v54 = v18;
  v55 = v25;
  v46 = v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v54, &opaque type descriptor for <<opaque return type of View.coordinateSpace(_:)>>, 0);
  v47 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v44 - v30;
  v32 = v2;
  sub_14510(v2, (uint64_t)v22, type metadata accessor for HeroBackgroundVariant);
  v33 = *(_QWORD *)(a1 + 24);
  v34 = sub_26B63C((uint64_t)v22, v6, v33);
  v36 = v35;
  v37 = (uint64_t)v22;
  v38 = v45;
  sub_145D8(v37, type metadata accessor for HeroChinLayout);
  v51 = v6;
  v52 = v33;
  v53 = v32;
  ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), char *))v34)(sub_26C2D8, v50);
  swift_release(v36);
  if (qword_3B0248 != -1)
    swift_once(&qword_3B0248, sub_26B168);
  v39 = type metadata accessor for NamedCoordinateSpace(0);
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_3C4818);
  v41 = v46;
  View.coordinateSpace(_:)(v40, v18, v46);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v18);
  v54 = v18;
  v55 = v41;
  swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.coordinateSpace(_:)>>, 1);
  sub_135B90((uint64_t)v28, OpaqueTypeMetadata2, (uint64_t)v31);
  v42 = *(void (**)(char *, uint64_t))(v47 + 8);
  v42(v28, OpaqueTypeMetadata2);
  sub_133078((uint64_t)v31, OpaqueTypeMetadata2, v49);
  return ((uint64_t (*)(char *, uint64_t))v42)(v31, OpaqueTypeMetadata2);
}

uint64_t type metadata accessor for HeroChinLayout(uint64_t a1)
{
  uint64_t result;

  result = qword_3C4958;
  if (!qword_3C4958)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroChinLayout);
  return result;
}

uint64_t (*sub_26B63C(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for HeroChinLayout(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  sub_14510(a1, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeroChinLayout);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(&unk_38D018, v10 + v8, v9 | 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  sub_3C56C((uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for HeroChinLayout);
  return sub_272CC4;
}

uint64_t sub_26B70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;

  v8 = type metadata accessor for HeroChinLayout(0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4838);
  v10 = type metadata accessor for ModifiedContent(255, a3, &type metadata for _FlexFrameLayout);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4840);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _PaddingLayout);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4848);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4850);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v9, v17, 0, 0);
  v19 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v20 = sub_F1C0(&qword_3C49E8, (void (*)(uint64_t))type metadata accessor for HeroChinLayout, (uint64_t)&unk_303000);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>);
  return sub_26AE84(a1, a2, v8, v19, v20, WitnessTable, a4);
}

uint64_t sub_26B870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t WitnessTable;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  int v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  char *v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  _QWORD v132[8];
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;

  v104 = a3;
  v129 = a4;
  v128 = type metadata accessor for HeroChinBackground(0);
  __chkstk_darwin(v128);
  v127 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for HeroBackgroundVariant(0);
  __chkstk_darwin(v107);
  v113 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v103 - v9;
  v106 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ModifiedContent(0, a2, &type metadata for _FlexFrameLayout);
  v108 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v103 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4840);
  v105 = v14;
  v18 = type metadata accessor for ModifiedContent(0, v14, v17);
  v110 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v109 = (char *)&v103 - v19;
  v111 = v20;
  v21 = type metadata accessor for ModifiedContent(0, v20, &type metadata for _PaddingLayout);
  v114 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v112 = (char *)&v103 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4848);
  v118 = v21;
  v24 = type metadata accessor for ModifiedContent(0, v21, v23);
  v122 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v120 = (char *)&v103 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4850);
  v123 = v24;
  v115 = type metadata accessor for ModifiedContent(0, v24, v26);
  v124 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v126 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v121 = (char *)&v103 - v29;
  __chkstk_darwin(v30);
  v125 = (uint64_t)&v103 - v31;
  v32 = type metadata accessor for HeroSupplementalArtworkView(0);
  __chkstk_darwin(v32);
  v34 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4838);
  __chkstk_darwin(v35);
  v37 = (char *)&v103 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v40 = (char *)&v103 - v39;
  sub_14510(a1, (uint64_t)v34, type metadata accessor for HeroBackgroundVariant);
  sub_14510((uint64_t)v34, (uint64_t)v37, type metadata accessor for HeroSupplementalArtworkView);
  v116 = v35;
  v37[*(int *)(v35 + 36)] = 0;
  v41 = (uint64_t)v34;
  v42 = v104;
  sub_145D8(v41, type metadata accessor for HeroSupplementalArtworkView);
  v117 = v37;
  v119 = v40;
  v43 = (uint64_t)v40;
  v44 = a1;
  sub_272784((uint64_t)v37, v43);
  v46 = type metadata accessor for HeroChin(0, a2, v42, v45);
  v47 = (*(uint64_t (**)(void))(a1 + *(int *)(v46 + 36)))();
  v48 = static Alignment.leading.getter(v47);
  v49 = v16;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v48, v50, a2, v42);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v13, a2);
  sub_14510(a1, (uint64_t)v10, type metadata accessor for HeroBackgroundVariant);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v107);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v52 = *(_QWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4870) + 48)];
      sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    else
    {
      v52 = *(_QWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_3C4878) + 48)];
      sub_1459C((uint64_t)v10, &qword_3BEB70);
    }
  }
  else
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v52 = *(_QWORD *)&v10[*(int *)(v53 + 64)];
    sub_145D8((uint64_t)&v10[*(int *)(v53 + 48)], (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v54 = v112;
  v55 = v109;
  v137 = v42;
  v138 = &protocol witness table for _FlexFrameLayout;
  v56 = v105;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
  View.accentColor(_:)(v52, v56, WitnessTable);
  swift_release(v52);
  v58 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v49, v56);
  v59 = static Edge.Set.leading.getter(v58);
  v60 = static Edge.Set.bottom.getter();
  v61 = static Edge.Set.trailing.getter();
  v62 = Edge.Set.init(rawValue:)(0);
  v63 = Edge.Set.init(rawValue:)(v62);
  if (Edge.Set.init(rawValue:)(v63 & v59) != v59)
    v62 = Edge.Set.init(rawValue:)(v62 | v59);
  v64 = Edge.Set.init(rawValue:)(v62);
  v65 = v54;
  if (Edge.Set.init(rawValue:)(v64 & v60) != v60)
    v62 = Edge.Set.init(rawValue:)(v62 | v60);
  v67 = (uint64_t)v127;
  v66 = v128;
  v68 = Edge.Set.init(rawValue:)(v62);
  if (Edge.Set.init(rawValue:)(v68 & v61) != v61)
    v62 = Edge.Set.init(rawValue:)(v62 | v61);
  if (qword_3B0220 != -1)
    swift_once(&qword_3B0220, sub_2688C0);
  v69 = qword_3C45F0;
  v70 = sub_32914(&qword_3C49B8, &qword_3C4840, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v135 = WitnessTable;
  v136 = v70;
  v71 = v111;
  v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
  View.padding(_:_:)(v62, v69, 0, v71, v72);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v55, v71);
  v73 = v113;
  sub_14510(v44, v113, type metadata accessor for HeroBackgroundVariant);
  if (qword_3B0248 != -1)
    swift_once(&qword_3B0248, sub_26B168);
  v74 = type metadata accessor for NamedCoordinateSpace(0);
  v75 = __swift_project_value_buffer(v74, (uint64_t)qword_3C4818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v67 + *(int *)(v66 + 20), v75, v74);
  sub_3C56C(v73, v67, type metadata accessor for HeroBackgroundVariant);
  v76 = *(int *)(v66 + 24);
  if (qword_3B0288 != -1)
    swift_once(&qword_3B0288, sub_27F21C);
  v77 = (_QWORD *)(v67 + v76);
  v132[0] = qword_3C4DD8;
  State.init(wrappedValue:)(v132, &type metadata for CGFloat);
  v78 = v134;
  *v77 = v133;
  v77[1] = v78;
  v80 = static Alignment.center.getter(v79);
  v82 = v81;
  v132[6] = v72;
  v132[7] = &protocol witness table for _PaddingLayout;
  v83 = v118;
  v84 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v85 = sub_F1C0(&qword_3C49C0, (void (*)(uint64_t))type metadata accessor for HeroChinBackground, (uint64_t)&unk_3034F0);
  v86 = v120;
  View.background<A>(_:alignment:)(v67, v80, v82, v83, v66, v84, v85);
  sub_145D8(v67, type metadata accessor for HeroChinBackground);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v65, v83);
  LOBYTE(v133) = 1;
  v87 = sub_32914(&qword_3C49C8, &qword_3C4848, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v132[4] = v84;
  v132[5] = v87;
  v88 = v123;
  v89 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v90 = sub_272740();
  v91 = (uint64_t)v121;
  View.layoutValue<A>(key:value:)(&type metadata for HeroChinLayout.Piece, &v133, v88, &type metadata for HeroChinLayout.Piece, v89, v90);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v86, v88);
  v92 = sub_32914(&qword_3C49D0, &qword_3C4850, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v132[2] = v89;
  v132[3] = v92;
  v93 = v115;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v95 = v125;
  sub_135B90(v91, v93, v125);
  v96 = v124;
  v97 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
  v97(v91, v93);
  v98 = (uint64_t)v119;
  v99 = (uint64_t)v117;
  sub_2727CC((uint64_t)v119, (uint64_t)v117);
  v133 = v99;
  v100 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
  v101 = v126;
  v100(v126, v95, v93);
  v134 = v101;
  v132[0] = v116;
  v132[1] = v93;
  v130 = sub_272814();
  v131 = v94;
  sub_26AFB4(&v133, 2uLL, (uint64_t)v132);
  v97(v95, v93);
  sub_1459C(v98, &qword_3C4838);
  v97((uint64_t)v101, v93);
  return sub_1459C(v99, &qword_3C4838);
}

uint64_t sub_26C2D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_26B870(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_26C2E4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of HeroChin.body>>, 1);
}

uint64_t sub_26C31C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for HeroBackgroundVariant(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_26C390(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id *v94;
  int v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  id *v106;
  int v107;
  id v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  id *v129;
  int v130;
  id v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  void (*v144)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v151;
  void (*v152)(char *, char *);
  uint64_t v153;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = (int *)type metadata accessor for ArtworkModel(0);
      v15 = *((_QWORD *)v14 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        v25 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v25 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        }
        else
        {
          v26 = a2[2];
          v27 = a2[3];
          sub_3D464(v26, v27, v25);
          a1[2] = v26;
          a1[3] = v27;
          *((_BYTE *)a1 + 32) = v25;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v117 = (id *)(a2 + 7);
        v118 = *((unsigned __int8 *)a2 + 64);
        if (v118 == 255)
        {
          a1[7] = (uint64_t)*v117;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        }
        else
        {
          v119 = *v117;
          sub_3D47C(*v117, *((_BYTE *)a2 + 64));
          a1[7] = (uint64_t)v119;
          *((_BYTE *)a1 + 64) = v118;
        }
        v120 = (id *)(a2 + 9);
        v121 = *((unsigned __int8 *)a2 + 80);
        if (v121 == 255)
        {
          a1[9] = (uint64_t)*v120;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        }
        else
        {
          v122 = *v120;
          sub_3D47C(*v120, *((_BYTE *)a2 + 80));
          a1[9] = (uint64_t)v122;
          *((_BYTE *)a1 + 80) = v121;
        }
        v123 = (id *)(a2 + 11);
        v124 = *((unsigned __int8 *)a2 + 96);
        if (v124 == 255)
        {
          a1[11] = (uint64_t)*v123;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)a2 + 96));
          a1[11] = (uint64_t)v125;
          *((_BYTE *)a1 + 96) = v124;
        }
        v126 = (id *)(a2 + 13);
        v127 = *((unsigned __int8 *)a2 + 112);
        if (v127 == 255)
        {
          a1[13] = (uint64_t)*v126;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        }
        else
        {
          v128 = *v126;
          sub_3D47C(*v126, *((_BYTE *)a2 + 112));
          a1[13] = (uint64_t)v128;
          *((_BYTE *)a1 + 112) = v127;
        }
        v129 = (id *)(a2 + 15);
        v130 = *((unsigned __int8 *)a2 + 128);
        if (v130 == 255)
        {
          a1[15] = (uint64_t)*v129;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        }
        else
        {
          v131 = *v129;
          sub_3D47C(*v129, *((_BYTE *)a2 + 128));
          a1[15] = (uint64_t)v131;
          *((_BYTE *)a1 + 128) = v130;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v132 = v14[11];
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        v135 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
        v136 = v14[12];
        v137 = (uint64_t *)((char *)a1 + v136);
        v138 = (uint64_t *)((char *)a2 + v136);
        v139 = v138[1];
        *v137 = *v138;
        v137[1] = v139;
        *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
        *((_BYTE *)a1 + v14[14]) = *((_BYTE *)a2 + v14[14]);
        *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
        v140 = v14[16];
        v141 = (uint64_t *)((char *)a1 + v140);
        v142 = (uint64_t *)((char *)a2 + v140);
        v143 = v142[1];
        *v141 = *v142;
        v141[1] = v143;
        v144 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144(a1, 0, 1, v14);
      }
      v145 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(uint64_t *)((char *)a1 + *(int *)(v145 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v145 + 48));
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v10 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v11 = a2[2];
        v12 = a2[3];
        sub_3D464(v11, v12, v10);
        a1[2] = v11;
        a1[3] = v12;
        *((_BYTE *)a1 + 32) = v10;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v21 = (id *)(a2 + 7);
      v22 = *((unsigned __int8 *)a2 + 64);
      if (v22 == 255)
      {
        a1[7] = (uint64_t)*v21;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v23;
        *((_BYTE *)a1 + 64) = v22;
      }
      v31 = (id *)(a2 + 9);
      v32 = *((unsigned __int8 *)a2 + 80);
      if (v32 == 255)
      {
        a1[9] = (uint64_t)*v31;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v33;
        *((_BYTE *)a1 + 80) = v32;
      }
      v37 = (id *)(a2 + 11);
      v38 = *((unsigned __int8 *)a2 + 96);
      if (v38 == 255)
      {
        a1[11] = (uint64_t)*v37;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v39 = *v37;
        sub_3D47C(*v37, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v39;
        *((_BYTE *)a1 + 96) = v38;
      }
      v43 = (id *)(a2 + 13);
      v44 = *((unsigned __int8 *)a2 + 112);
      if (v44 == 255)
      {
        a1[13] = (uint64_t)*v43;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v45;
        *((_BYTE *)a1 + 112) = v44;
      }
      v49 = (id *)(a2 + 15);
      v50 = *((unsigned __int8 *)a2 + 128);
      if (v50 == 255)
      {
        a1[15] = (uint64_t)*v49;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v51 = *v49;
        sub_3D47C(*v49, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v51;
        *((_BYTE *)a1 + 128) = v50;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v55 = (int *)type metadata accessor for ArtworkModel(0);
      v56 = v55[11];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
      v60 = v55[12];
      v61 = (uint64_t *)((char *)a1 + v60);
      v62 = (uint64_t *)((char *)a2 + v60);
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      *((_BYTE *)a1 + v55[13]) = *((_BYTE *)a2 + v55[13]);
      *((_BYTE *)a1 + v55[14]) = *((_BYTE *)a2 + v55[14]);
      *((_BYTE *)a1 + v55[15]) = *((_BYTE *)a2 + v55[15]);
      v64 = v55[16];
      v65 = (uint64_t *)((char *)a1 + v64);
      v66 = (uint64_t *)((char *)a2 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(uint64_t *)((char *)a1 + *(int *)(v68 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v68 + 48));
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 1;
    }
    else
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v19 = a2[2];
        v20 = a2[3];
        sub_3D464(v19, v20, v18);
        a1[2] = v19;
        a1[3] = v20;
        *((_BYTE *)a1 + 32) = v18;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v28 = (id *)(a2 + 7);
      v29 = *((unsigned __int8 *)a2 + 64);
      if (v29 == 255)
      {
        a1[7] = (uint64_t)*v28;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v30 = *v28;
        sub_3D47C(*v28, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v30;
        *((_BYTE *)a1 + 64) = v29;
      }
      v34 = (id *)(a2 + 9);
      v35 = *((unsigned __int8 *)a2 + 80);
      if (v35 == 255)
      {
        a1[9] = (uint64_t)*v34;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v36 = *v34;
        sub_3D47C(*v34, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v36;
        *((_BYTE *)a1 + 80) = v35;
      }
      v40 = (id *)(a2 + 11);
      v41 = *((unsigned __int8 *)a2 + 96);
      if (v41 == 255)
      {
        a1[11] = (uint64_t)*v40;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v42 = *v40;
        sub_3D47C(*v40, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v42;
        *((_BYTE *)a1 + 96) = v41;
      }
      v46 = (id *)(a2 + 13);
      v47 = *((unsigned __int8 *)a2 + 112);
      if (v47 == 255)
      {
        a1[13] = (uint64_t)*v46;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v48 = *v46;
        sub_3D47C(*v46, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v48;
        *((_BYTE *)a1 + 112) = v47;
      }
      v52 = (id *)(a2 + 15);
      v53 = *((unsigned __int8 *)a2 + 128);
      if (v53 == 255)
      {
        a1[15] = (uint64_t)*v52;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v54 = *v52;
        sub_3D47C(*v52, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v54;
        *((_BYTE *)a1 + 128) = v53;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v72 = (int *)type metadata accessor for ArtworkModel(0);
      v73 = v72[11];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      v76 = type metadata accessor for ArtworkCrop(0);
      v152 = *(void (**)(char *, char *))(*(_QWORD *)(v76 - 8) + 16);
      v153 = v76;
      v152(v74, v75);
      v77 = v72[12];
      v78 = (uint64_t *)((char *)a1 + v77);
      v79 = (uint64_t *)((char *)a2 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      *((_BYTE *)a1 + v72[13]) = *((_BYTE *)a2 + v72[13]);
      *((_BYTE *)a1 + v72[14]) = *((_BYTE *)a2 + v72[14]);
      *((_BYTE *)a1 + v72[15]) = *((_BYTE *)a2 + v72[15]);
      v81 = v72[16];
      v82 = (uint64_t *)((char *)a1 + v81);
      v83 = (uint64_t *)((char *)a2 + v81);
      v84 = v83[1];
      *v82 = *v83;
      v82[1] = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v85 = *(int *)(v151 + 48);
      v86 = (char *)a1 + v85;
      v87 = (char *)a2 + v85;
      v88 = *(uint64_t *)((char *)a2 + v85 + 8);
      *(_QWORD *)v86 = *(uint64_t *)((char *)a2 + v85);
      *((_QWORD *)v86 + 1) = v88;
      v89 = *((unsigned __int8 *)a2 + v85 + 32);
      swift_bridgeObjectRetain();
      if (v89 == 255)
      {
        *((_OWORD *)v86 + 1) = *((_OWORD *)v87 + 1);
        v86[32] = v87[32];
      }
      else
      {
        v90 = v6;
        v91 = v7;
        v92 = *((_QWORD *)v87 + 2);
        v93 = *((_QWORD *)v87 + 3);
        sub_3D464(v92, v93, v89);
        *((_QWORD *)v86 + 2) = v92;
        *((_QWORD *)v86 + 3) = v93;
        v7 = v91;
        v6 = v90;
        v86[32] = v89;
      }
      *(_OWORD *)(v86 + 40) = *(_OWORD *)(v87 + 40);
      v94 = (id *)(v87 + 56);
      v95 = v87[64];
      if (v95 == 255)
      {
        *((_QWORD *)v86 + 7) = *v94;
        v86[64] = v87[64];
      }
      else
      {
        v96 = *v94;
        sub_3D47C(*v94, v87[64]);
        *((_QWORD *)v86 + 7) = v96;
        v86[64] = v95;
      }
      v97 = (id *)(v87 + 72);
      v98 = v87[80];
      if (v98 == 255)
      {
        *((_QWORD *)v86 + 9) = *v97;
        v86[80] = v87[80];
      }
      else
      {
        v99 = *v97;
        sub_3D47C(*v97, v87[80]);
        *((_QWORD *)v86 + 9) = v99;
        v86[80] = v98;
      }
      v100 = (id *)(v87 + 88);
      v101 = v87[96];
      if (v101 == 255)
      {
        *((_QWORD *)v86 + 11) = *v100;
        v86[96] = v87[96];
      }
      else
      {
        v102 = *v100;
        sub_3D47C(*v100, v87[96]);
        *((_QWORD *)v86 + 11) = v102;
        v86[96] = v101;
      }
      v103 = (id *)(v87 + 104);
      v104 = v87[112];
      if (v104 == 255)
      {
        *((_QWORD *)v86 + 13) = *v103;
        v86[112] = v87[112];
      }
      else
      {
        v105 = *v103;
        sub_3D47C(*v103, v87[112]);
        *((_QWORD *)v86 + 13) = v105;
        v86[112] = v104;
      }
      v106 = (id *)(v87 + 120);
      v107 = v87[128];
      if (v107 == 255)
      {
        *((_QWORD *)v86 + 15) = *v106;
        v86[128] = v87[128];
      }
      else
      {
        v108 = *v106;
        sub_3D47C(*v106, v87[128]);
        *((_QWORD *)v86 + 15) = v108;
        v86[128] = v107;
      }
      v86[129] = v87[129];
      ((void (*)(char *, char *, uint64_t))v152)(&v86[v72[11]], &v87[v72[11]], v153);
      v109 = v72[12];
      v110 = &v86[v109];
      v111 = &v87[v109];
      v112 = *((_QWORD *)v111 + 1);
      *(_QWORD *)v110 = *(_QWORD *)v111;
      *((_QWORD *)v110 + 1) = v112;
      v86[v72[13]] = v87[v72[13]];
      v86[v72[14]] = v87[v72[14]];
      v86[v72[15]] = v87[v72[15]];
      v113 = v72[16];
      v114 = &v86[v113];
      v115 = &v87[v113];
      v116 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = v116;
      *(uint64_t *)((char *)a1 + *(int *)(v151 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v151 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 0;
    }
    swift_storeEnumTagMultiPayload(v69, v70, v71);
    v146 = *(int *)(v6 + 36);
    v147 = (uint64_t *)((char *)a1 + v146);
    v148 = (uint64_t *)((char *)a2 + v146);
    v149 = v148[1];
    *v147 = *v148;
    v147[1] = v149;
  }
  swift_retain();
  return a1;
}

uint64_t sub_26CDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v25 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(a1, 1, v25))
      {
        swift_bridgeObjectRelease();
        v26 = *(unsigned __int8 *)(a1 + 32);
        if (v26 != 255)
          sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v26);
        v27 = *(unsigned __int8 *)(a1 + 64);
        if (v27 != 255)
          sub_3D624(*(id *)(a1 + 56), v27);
        v28 = *(unsigned __int8 *)(a1 + 80);
        if (v28 != 255)
          sub_3D624(*(id *)(a1 + 72), v28);
        v29 = *(unsigned __int8 *)(a1 + 96);
        if (v29 != 255)
          sub_3D624(*(id *)(a1 + 88), v29);
        v30 = *(unsigned __int8 *)(a1 + 112);
        if (v30 != 255)
          sub_3D624(*(id *)(a1 + 104), v30);
        v31 = *(unsigned __int8 *)(a1 + 128);
        if (v31 != 255)
          sub_3D624(*(id *)(a1 + 120), v31);
        v32 = a1 + *(int *)(v25 + 44);
        v33 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = qword_3C4878;
      goto LABEL_57;
    case 1:
      swift_bridgeObjectRelease();
      v35 = *(unsigned __int8 *)(a1 + 32);
      if (v35 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v35);
      v36 = *(unsigned __int8 *)(a1 + 64);
      if (v36 != 255)
        sub_3D624(*(id *)(a1 + 56), v36);
      v37 = *(unsigned __int8 *)(a1 + 80);
      if (v37 != 255)
        sub_3D624(*(id *)(a1 + 72), v37);
      v38 = *(unsigned __int8 *)(a1 + 96);
      if (v38 != 255)
        sub_3D624(*(id *)(a1 + 88), v38);
      v39 = *(unsigned __int8 *)(a1 + 112);
      if (v39 != 255)
        sub_3D624(*(id *)(a1 + 104), v39);
      v40 = *(unsigned __int8 *)(a1 + 128);
      if (v40 != 255)
        sub_3D624(*(id *)(a1 + 120), v40);
      v41 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
      v42 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = &qword_3C4870;
LABEL_57:
      v24 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v34) + 48);
LABEL_58:
      swift_release(*(_QWORD *)(a1 + *v24));
      return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8));
    case 0:
      swift_bridgeObjectRelease();
      v6 = *(unsigned __int8 *)(a1 + 32);
      if (v6 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v6);
      v7 = *(unsigned __int8 *)(a1 + 64);
      if (v7 != 255)
        sub_3D624(*(id *)(a1 + 56), v7);
      v8 = *(unsigned __int8 *)(a1 + 80);
      if (v8 != 255)
        sub_3D624(*(id *)(a1 + 72), v8);
      v9 = *(unsigned __int8 *)(a1 + 96);
      if (v9 != 255)
        sub_3D624(*(id *)(a1 + 88), v9);
      v10 = *(unsigned __int8 *)(a1 + 112);
      if (v10 != 255)
        sub_3D624(*(id *)(a1 + 104), v10);
      v11 = *(unsigned __int8 *)(a1 + 128);
      if (v11 != 255)
        sub_3D624(*(id *)(a1 + 120), v11);
      v12 = type metadata accessor for ArtworkModel(0);
      v13 = a1 + *(int *)(v12 + 44);
      v14 = type metadata accessor for ArtworkCrop(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v15(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v17 = a1 + *(int *)(v16 + 48);
      swift_bridgeObjectRelease();
      v18 = *(unsigned __int8 *)(v17 + 32);
      if (v18 != 255)
        sub_3B5BC(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
      v19 = *(unsigned __int8 *)(v17 + 64);
      if (v19 != 255)
        sub_3D624(*(id *)(v17 + 56), v19);
      v20 = *(unsigned __int8 *)(v17 + 80);
      if (v20 != 255)
        sub_3D624(*(id *)(v17 + 72), v20);
      v21 = *(unsigned __int8 *)(v17 + 96);
      if (v21 != 255)
        sub_3D624(*(id *)(v17 + 88), v21);
      v22 = *(unsigned __int8 *)(v17 + 112);
      if (v22 != 255)
        sub_3D624(*(id *)(v17 + 104), v22);
      v23 = *(unsigned __int8 *)(v17 + 128);
      if (v23 != 255)
        sub_3D624(*(id *)(v17 + 120), v23);
      v15(v17 + *(int *)(v12 + 44), v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = (int *)(v16 + 64);
      goto LABEL_58;
  }
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8));
}

_QWORD *sub_26D1E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id *v91;
  int v92;
  id v93;
  id *v94;
  int v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  id *v114;
  int v115;
  id v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void (*v141)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;

  v6 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v23 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v24 = a2[2];
        v25 = a2[3];
        sub_3D464(v24, v25, v23);
        a1[2] = v24;
        a1[3] = v25;
        *((_BYTE *)a1 + 32) = v23;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v114 = (id *)(a2 + 7);
      v115 = *((unsigned __int8 *)a2 + 64);
      if (v115 == 255)
      {
        a1[7] = *v114;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v116 = *v114;
        sub_3D47C(*v114, *((_BYTE *)a2 + 64));
        a1[7] = v116;
        *((_BYTE *)a1 + 64) = v115;
      }
      v117 = (id *)(a2 + 9);
      v118 = *((unsigned __int8 *)a2 + 80);
      if (v118 == 255)
      {
        a1[9] = *v117;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v119 = *v117;
        sub_3D47C(*v117, *((_BYTE *)a2 + 80));
        a1[9] = v119;
        *((_BYTE *)a1 + 80) = v118;
      }
      v120 = (id *)(a2 + 11);
      v121 = *((unsigned __int8 *)a2 + 96);
      if (v121 == 255)
      {
        a1[11] = *v120;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v122 = *v120;
        sub_3D47C(*v120, *((_BYTE *)a2 + 96));
        a1[11] = v122;
        *((_BYTE *)a1 + 96) = v121;
      }
      v123 = (id *)(a2 + 13);
      v124 = *((unsigned __int8 *)a2 + 112);
      if (v124 == 255)
      {
        a1[13] = *v123;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v125 = *v123;
        sub_3D47C(*v123, *((_BYTE *)a2 + 112));
        a1[13] = v125;
        *((_BYTE *)a1 + 112) = v124;
      }
      v126 = (id *)(a2 + 15);
      v127 = *((unsigned __int8 *)a2 + 128);
      if (v127 == 255)
      {
        a1[15] = *v126;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v128 = *v126;
        sub_3D47C(*v126, *((_BYTE *)a2 + 128));
        a1[15] = v128;
        *((_BYTE *)a1 + 128) = v127;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v129 = v12[11];
      v130 = (char *)a1 + v129;
      v131 = (char *)a2 + v129;
      v132 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
      v133 = v12[12];
      v134 = (_QWORD *)((char *)a1 + v133);
      v135 = (_QWORD *)((char *)a2 + v133);
      v136 = v135[1];
      *v134 = *v135;
      v134[1] = v136;
      *((_BYTE *)a1 + v12[13]) = *((_BYTE *)a2 + v12[13]);
      *((_BYTE *)a1 + v12[14]) = *((_BYTE *)a2 + v12[14]);
      *((_BYTE *)a1 + v12[15]) = *((_BYTE *)a2 + v12[15]);
      v137 = v12[16];
      v138 = (_QWORD *)((char *)a1 + v137);
      v139 = (_QWORD *)((char *)a2 + v137);
      v140 = v139[1];
      *v138 = *v139;
      v138[1] = v140;
      v141 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v141(a1, 0, 1, v12);
    }
    v142 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v142 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v142 + 48));
    swift_retain();
    v67 = a1;
    v68 = v6;
    v69 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v9 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v10 = a2[2];
      v11 = a2[3];
      sub_3D464(v10, v11, v9);
      a1[2] = v10;
      a1[3] = v11;
      *((_BYTE *)a1 + 32) = v9;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v19 = (id *)(a2 + 7);
    v20 = *((unsigned __int8 *)a2 + 64);
    if (v20 == 255)
    {
      a1[7] = *v19;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)a2 + 64));
      a1[7] = v21;
      *((_BYTE *)a1 + 64) = v20;
    }
    v29 = (id *)(a2 + 9);
    v30 = *((unsigned __int8 *)a2 + 80);
    if (v30 == 255)
    {
      a1[9] = *v29;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v31 = *v29;
      sub_3D47C(*v29, *((_BYTE *)a2 + 80));
      a1[9] = v31;
      *((_BYTE *)a1 + 80) = v30;
    }
    v35 = (id *)(a2 + 11);
    v36 = *((unsigned __int8 *)a2 + 96);
    if (v36 == 255)
    {
      a1[11] = *v35;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v37 = *v35;
      sub_3D47C(*v35, *((_BYTE *)a2 + 96));
      a1[11] = v37;
      *((_BYTE *)a1 + 96) = v36;
    }
    v41 = (id *)(a2 + 13);
    v42 = *((unsigned __int8 *)a2 + 112);
    if (v42 == 255)
    {
      a1[13] = *v41;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v43 = *v41;
      sub_3D47C(*v41, *((_BYTE *)a2 + 112));
      a1[13] = v43;
      *((_BYTE *)a1 + 112) = v42;
    }
    v47 = (id *)(a2 + 15);
    v48 = *((unsigned __int8 *)a2 + 128);
    if (v48 == 255)
    {
      a1[15] = *v47;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v49 = *v47;
      sub_3D47C(*v47, *((_BYTE *)a2 + 128));
      a1[15] = v49;
      *((_BYTE *)a1 + 128) = v48;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v53 = (int *)type metadata accessor for ArtworkModel(0);
    v54 = v53[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    v58 = v53[12];
    v59 = (_QWORD *)((char *)a1 + v58);
    v60 = (_QWORD *)((char *)a2 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    *((_BYTE *)a1 + v53[13]) = *((_BYTE *)a2 + v53[13]);
    *((_BYTE *)a1 + v53[14]) = *((_BYTE *)a2 + v53[14]);
    *((_BYTE *)a1 + v53[15]) = *((_BYTE *)a2 + v53[15]);
    v62 = v53[16];
    v63 = (_QWORD *)((char *)a1 + v62);
    v64 = (_QWORD *)((char *)a2 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
    *(_QWORD *)((char *)a1 + *(int *)(v66 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v66 + 48));
    swift_retain();
    v67 = a1;
    v68 = v6;
    v69 = 1;
  }
  else
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v17 = a2[2];
      v18 = a2[3];
      sub_3D464(v17, v18, v16);
      a1[2] = v17;
      a1[3] = v18;
      *((_BYTE *)a1 + 32) = v16;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v26 = (id *)(a2 + 7);
    v27 = *((unsigned __int8 *)a2 + 64);
    if (v27 == 255)
    {
      a1[7] = *v26;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v28 = *v26;
      sub_3D47C(*v26, *((_BYTE *)a2 + 64));
      a1[7] = v28;
      *((_BYTE *)a1 + 64) = v27;
    }
    v32 = (id *)(a2 + 9);
    v33 = *((unsigned __int8 *)a2 + 80);
    if (v33 == 255)
    {
      a1[9] = *v32;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v34 = *v32;
      sub_3D47C(*v32, *((_BYTE *)a2 + 80));
      a1[9] = v34;
      *((_BYTE *)a1 + 80) = v33;
    }
    v38 = (id *)(a2 + 11);
    v39 = *((unsigned __int8 *)a2 + 96);
    if (v39 == 255)
    {
      a1[11] = *v38;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v40 = *v38;
      sub_3D47C(*v38, *((_BYTE *)a2 + 96));
      a1[11] = v40;
      *((_BYTE *)a1 + 96) = v39;
    }
    v44 = (id *)(a2 + 13);
    v45 = *((unsigned __int8 *)a2 + 112);
    if (v45 == 255)
    {
      a1[13] = *v44;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v46 = *v44;
      sub_3D47C(*v44, *((_BYTE *)a2 + 112));
      a1[13] = v46;
      *((_BYTE *)a1 + 112) = v45;
    }
    v50 = (id *)(a2 + 15);
    v51 = *((unsigned __int8 *)a2 + 128);
    v150 = v6;
    if (v51 == 255)
    {
      a1[15] = *v50;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v52 = *v50;
      sub_3D47C(*v50, v51);
      a1[15] = v52;
      *((_BYTE *)a1 + 128) = v51;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v70 = (int *)type metadata accessor for ArtworkModel(0);
    v71 = v70[11];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = type metadata accessor for ArtworkCrop(0);
    v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
    v149(v72, v73, v74);
    v75 = v70[12];
    v76 = (_QWORD *)((char *)a1 + v75);
    v77 = (_QWORD *)((char *)a2 + v75);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    *((_BYTE *)a1 + v70[13]) = *((_BYTE *)a2 + v70[13]);
    *((_BYTE *)a1 + v70[14]) = *((_BYTE *)a2 + v70[14]);
    *((_BYTE *)a1 + v70[15]) = *((_BYTE *)a2 + v70[15]);
    v79 = v70[16];
    v80 = (_QWORD *)((char *)a1 + v79);
    v81 = (_QWORD *)((char *)a2 + v79);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v83 = *(int *)(v148 + 48);
    v84 = (char *)a1 + v83;
    v85 = (char *)a2 + v83;
    v86 = *(_QWORD *)((char *)a2 + v83 + 8);
    *(_QWORD *)v84 = *(_QWORD *)((char *)a2 + v83);
    *((_QWORD *)v84 + 1) = v86;
    v87 = *((unsigned __int8 *)a2 + v83 + 32);
    swift_bridgeObjectRetain();
    if (v87 == 255)
    {
      *((_OWORD *)v84 + 1) = *((_OWORD *)v85 + 1);
      v84[32] = v85[32];
    }
    else
    {
      v88 = a3;
      v89 = *((_QWORD *)v85 + 2);
      v90 = *((_QWORD *)v85 + 3);
      sub_3D464(v89, v90, v87);
      *((_QWORD *)v84 + 2) = v89;
      *((_QWORD *)v84 + 3) = v90;
      a3 = v88;
      v84[32] = v87;
    }
    *(_OWORD *)(v84 + 40) = *(_OWORD *)(v85 + 40);
    v91 = (id *)(v85 + 56);
    v92 = v85[64];
    if (v92 == 255)
    {
      *((_QWORD *)v84 + 7) = *v91;
      v84[64] = v85[64];
    }
    else
    {
      v93 = *v91;
      sub_3D47C(*v91, v85[64]);
      *((_QWORD *)v84 + 7) = v93;
      v84[64] = v92;
    }
    v94 = (id *)(v85 + 72);
    v95 = v85[80];
    if (v95 == 255)
    {
      *((_QWORD *)v84 + 9) = *v94;
      v84[80] = v85[80];
    }
    else
    {
      v96 = *v94;
      sub_3D47C(*v94, v85[80]);
      *((_QWORD *)v84 + 9) = v96;
      v84[80] = v95;
    }
    v97 = (id *)(v85 + 88);
    v98 = v85[96];
    if (v98 == 255)
    {
      *((_QWORD *)v84 + 11) = *v97;
      v84[96] = v85[96];
    }
    else
    {
      v99 = *v97;
      sub_3D47C(*v97, v85[96]);
      *((_QWORD *)v84 + 11) = v99;
      v84[96] = v98;
    }
    v100 = (id *)(v85 + 104);
    v101 = v85[112];
    if (v101 == 255)
    {
      *((_QWORD *)v84 + 13) = *v100;
      v84[112] = v85[112];
    }
    else
    {
      v102 = *v100;
      sub_3D47C(*v100, v85[112]);
      *((_QWORD *)v84 + 13) = v102;
      v84[112] = v101;
    }
    v103 = (id *)(v85 + 120);
    v104 = v85[128];
    if (v104 == 255)
    {
      *((_QWORD *)v84 + 15) = *v103;
      v84[128] = v85[128];
    }
    else
    {
      v105 = *v103;
      sub_3D47C(*v103, v85[128]);
      *((_QWORD *)v84 + 15) = v105;
      v84[128] = v104;
    }
    v84[129] = v85[129];
    v149(&v84[v70[11]], &v85[v70[11]], v74);
    v106 = v70[12];
    v107 = &v84[v106];
    v108 = &v85[v106];
    v109 = *((_QWORD *)v108 + 1);
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *((_QWORD *)v107 + 1) = v109;
    v84[v70[13]] = v85[v70[13]];
    v84[v70[14]] = v85[v70[14]];
    v84[v70[15]] = v85[v70[15]];
    v110 = v70[16];
    v111 = &v84[v110];
    v112 = &v85[v110];
    v113 = *((_QWORD *)v112 + 1);
    *(_QWORD *)v111 = *(_QWORD *)v112;
    *((_QWORD *)v111 + 1) = v113;
    *(_QWORD *)((char *)a1 + *(int *)(v148 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v148 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v67 = a1;
    v68 = v150;
    v69 = 0;
  }
  swift_storeEnumTagMultiPayload(v67, v68, v69);
  v143 = *(int *)(a3 + 36);
  v144 = (_QWORD *)((char *)a1 + v143);
  v145 = (_QWORD *)((char *)a2 + v143);
  v146 = v145[1];
  *v144 = *v145;
  v144[1] = v146;
  swift_retain();
  return a1;
}

_QWORD *sub_26DC18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  id *v18;
  int v19;
  id v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  id *v25;
  int v26;
  id v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id v52;
  id *v53;
  int v54;
  id v55;
  id v56;
  id *v57;
  int v58;
  id v59;
  id v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  id *v96;
  int v97;
  id v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id v103;
  id *v104;
  int v105;
  id v106;
  id v107;
  id *v108;
  int v109;
  id v110;
  id v111;
  id *v112;
  int v113;
  id v114;
  id v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  id *v123;
  int v124;
  id v125;
  id v126;
  id *v127;
  int v128;
  id v129;
  id v130;
  id *v131;
  int v132;
  id v133;
  id v134;
  id *v135;
  int v136;
  id v137;
  id v138;
  id *v139;
  int v140;
  id v141;
  id v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  void (*v153)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    v6 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = (int *)type metadata accessor for ArtworkModel(0);
      v12 = *((_QWORD *)v11 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v21 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v21 == 255)
        {
          v122 = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          *((_OWORD *)a1 + 1) = v122;
        }
        else
        {
          v22 = a2[2];
          v23 = a2[3];
          sub_3D464(v22, v23, v21);
          a1[2] = v22;
          a1[3] = v23;
          *((_BYTE *)a1 + 32) = v21;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        v123 = (id *)(a2 + 7);
        v124 = *((unsigned __int8 *)a2 + 64);
        if (v124 == 255)
        {
          v126 = *v123;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
          a1[7] = v126;
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)a2 + 64));
          a1[7] = v125;
          *((_BYTE *)a1 + 64) = v124;
        }
        v127 = (id *)(a2 + 9);
        v128 = *((unsigned __int8 *)a2 + 80);
        if (v128 == 255)
        {
          v130 = *v127;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
          a1[9] = v130;
        }
        else
        {
          v129 = *v127;
          sub_3D47C(*v127, *((_BYTE *)a2 + 80));
          a1[9] = v129;
          *((_BYTE *)a1 + 80) = v128;
        }
        v131 = (id *)(a2 + 11);
        v132 = *((unsigned __int8 *)a2 + 96);
        if (v132 == 255)
        {
          v134 = *v131;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
          a1[11] = v134;
        }
        else
        {
          v133 = *v131;
          sub_3D47C(*v131, *((_BYTE *)a2 + 96));
          a1[11] = v133;
          *((_BYTE *)a1 + 96) = v132;
        }
        v135 = (id *)(a2 + 13);
        v136 = *((unsigned __int8 *)a2 + 112);
        if (v136 == 255)
        {
          v138 = *v135;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
          a1[13] = v138;
        }
        else
        {
          v137 = *v135;
          sub_3D47C(*v135, *((_BYTE *)a2 + 112));
          a1[13] = v137;
          *((_BYTE *)a1 + 112) = v136;
        }
        v139 = (id *)(a2 + 15);
        v140 = *((unsigned __int8 *)a2 + 128);
        if (v140 == 255)
        {
          v142 = *v139;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
          a1[15] = v142;
        }
        else
        {
          v141 = *v139;
          sub_3D47C(*v139, *((_BYTE *)a2 + 128));
          a1[15] = v141;
          *((_BYTE *)a1 + 128) = v140;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v143 = v11[11];
        v144 = (char *)a1 + v143;
        v145 = (char *)a2 + v143;
        v146 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
        v147 = v11[12];
        v148 = (_QWORD *)((char *)a1 + v147);
        v149 = (_QWORD *)((char *)a2 + v147);
        *v148 = *v149;
        v148[1] = v149[1];
        *((_BYTE *)a1 + v11[13]) = *((_BYTE *)a2 + v11[13]);
        *((_BYTE *)a1 + v11[14]) = *((_BYTE *)a2 + v11[14]);
        *((_BYTE *)a1 + v11[15]) = *((_BYTE *)a2 + v11[15]);
        v150 = v11[16];
        v151 = (_QWORD *)((char *)a1 + v150);
        v152 = (_QWORD *)((char *)a2 + v150);
        *v151 = *v152;
        v151[1] = v152[1];
        v153 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v153(a1, 0, 1, v11);
      }
      v154 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v154 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v154 + 48));
      swift_retain();
      v73 = a1;
      v74 = v6;
      v75 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v8 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        v17 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v17;
      }
      else
      {
        v9 = a2[2];
        v10 = a2[3];
        sub_3D464(v9, v10, v8);
        a1[2] = v9;
        a1[3] = v10;
        *((_BYTE *)a1 + 32) = v8;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v18 = (id *)(a2 + 7);
      v19 = *((unsigned __int8 *)a2 + 64);
      if (v19 == 255)
      {
        v28 = *v18;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v28;
      }
      else
      {
        v20 = *v18;
        sub_3D47C(*v18, *((_BYTE *)a2 + 64));
        a1[7] = v20;
        *((_BYTE *)a1 + 64) = v19;
      }
      v29 = (id *)(a2 + 9);
      v30 = *((unsigned __int8 *)a2 + 80);
      if (v30 == 255)
      {
        v36 = *v29;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v36;
      }
      else
      {
        v31 = *v29;
        sub_3D47C(*v29, *((_BYTE *)a2 + 80));
        a1[9] = v31;
        *((_BYTE *)a1 + 80) = v30;
      }
      v37 = (id *)(a2 + 11);
      v38 = *((unsigned __int8 *)a2 + 96);
      if (v38 == 255)
      {
        v44 = *v37;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v44;
      }
      else
      {
        v39 = *v37;
        sub_3D47C(*v37, *((_BYTE *)a2 + 96));
        a1[11] = v39;
        *((_BYTE *)a1 + 96) = v38;
      }
      v45 = (id *)(a2 + 13);
      v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        v52 = *v45;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v52;
      }
      else
      {
        v47 = *v45;
        sub_3D47C(*v45, *((_BYTE *)a2 + 112));
        a1[13] = v47;
        *((_BYTE *)a1 + 112) = v46;
      }
      v53 = (id *)(a2 + 15);
      v54 = *((unsigned __int8 *)a2 + 128);
      if (v54 == 255)
      {
        v60 = *v53;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v60;
      }
      else
      {
        v55 = *v53;
        sub_3D47C(*v53, *((_BYTE *)a2 + 128));
        a1[15] = v55;
        *((_BYTE *)a1 + 128) = v54;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v61 = (int *)type metadata accessor for ArtworkModel(0);
      v62 = v61[11];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v66 = v61[12];
      v67 = (_QWORD *)((char *)a1 + v66);
      v68 = (_QWORD *)((char *)a2 + v66);
      *v67 = *v68;
      v67[1] = v68[1];
      *((_BYTE *)a1 + v61[13]) = *((_BYTE *)a2 + v61[13]);
      *((_BYTE *)a1 + v61[14]) = *((_BYTE *)a2 + v61[14]);
      *((_BYTE *)a1 + v61[15]) = *((_BYTE *)a2 + v61[15]);
      v69 = v61[16];
      v70 = (_QWORD *)((char *)a1 + v69);
      v71 = (_QWORD *)((char *)a2 + v69);
      *v70 = *v71;
      v70[1] = v71[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v72 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v72 + 48));
      swift_retain();
      v73 = a1;
      v74 = v6;
      v75 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v14 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v24 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v24;
      }
      else
      {
        v15 = a2[2];
        v16 = a2[3];
        sub_3D464(v15, v16, v14);
        a1[2] = v15;
        a1[3] = v16;
        *((_BYTE *)a1 + 32) = v14;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v25 = (id *)(a2 + 7);
      v26 = *((unsigned __int8 *)a2 + 64);
      if (v26 == 255)
      {
        v32 = *v25;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v32;
      }
      else
      {
        v27 = *v25;
        sub_3D47C(*v25, *((_BYTE *)a2 + 64));
        a1[7] = v27;
        *((_BYTE *)a1 + 64) = v26;
      }
      v33 = (id *)(a2 + 9);
      v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        v40 = *v33;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v40;
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)a2 + 80));
        a1[9] = v35;
        *((_BYTE *)a1 + 80) = v34;
      }
      v41 = (id *)(a2 + 11);
      v42 = *((unsigned __int8 *)a2 + 96);
      if (v42 == 255)
      {
        v48 = *v41;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v48;
      }
      else
      {
        v43 = *v41;
        sub_3D47C(*v41, *((_BYTE *)a2 + 96));
        a1[11] = v43;
        *((_BYTE *)a1 + 96) = v42;
      }
      v49 = (id *)(a2 + 13);
      v50 = *((unsigned __int8 *)a2 + 112);
      if (v50 == 255)
      {
        v56 = *v49;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v56;
      }
      else
      {
        v51 = *v49;
        sub_3D47C(*v49, *((_BYTE *)a2 + 112));
        a1[13] = v51;
        *((_BYTE *)a1 + 112) = v50;
      }
      v57 = (id *)(a2 + 15);
      v58 = *((unsigned __int8 *)a2 + 128);
      if (v58 == 255)
      {
        v76 = *v57;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v76;
      }
      else
      {
        v59 = *v57;
        sub_3D47C(*v57, *((_BYTE *)a2 + 128));
        a1[15] = v59;
        *((_BYTE *)a1 + 128) = v58;
      }
      v163 = v6;
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v77 = (int *)type metadata accessor for ArtworkModel(0);
      v78 = v77[11];
      v79 = (char *)a1 + v78;
      v80 = (char *)a2 + v78;
      v81 = type metadata accessor for ArtworkCrop(0);
      v162 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16);
      v162(v79, v80, v81);
      v82 = v77[12];
      v83 = (_QWORD *)((char *)a1 + v82);
      v84 = (_QWORD *)((char *)a2 + v82);
      *v83 = *v84;
      v83[1] = v84[1];
      *((_BYTE *)a1 + v77[13]) = *((_BYTE *)a2 + v77[13]);
      *((_BYTE *)a1 + v77[14]) = *((_BYTE *)a2 + v77[14]);
      *((_BYTE *)a1 + v77[15]) = *((_BYTE *)a2 + v77[15]);
      v85 = v77[16];
      v86 = (_QWORD *)((char *)a1 + v85);
      v87 = (_QWORD *)((char *)a2 + v85);
      *v86 = *v87;
      v86[1] = v87[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v88 = *(int *)(v161 + 48);
      v89 = (char *)a1 + v88;
      v90 = (char *)a2 + v88;
      *(_QWORD *)v89 = *(_QWORD *)((char *)a2 + v88);
      *((_QWORD *)v89 + 1) = *(_QWORD *)((char *)a2 + v88 + 8);
      v91 = *((unsigned __int8 *)a2 + v88 + 32);
      swift_bridgeObjectRetain();
      if (v91 == 255)
      {
        v95 = *((_OWORD *)v90 + 1);
        v89[32] = v90[32];
        *((_OWORD *)v89 + 1) = v95;
      }
      else
      {
        v92 = a3;
        v93 = *((_QWORD *)v90 + 2);
        v94 = *((_QWORD *)v90 + 3);
        sub_3D464(v93, v94, v91);
        *((_QWORD *)v89 + 2) = v93;
        *((_QWORD *)v89 + 3) = v94;
        a3 = v92;
        v89[32] = v91;
      }
      *((_QWORD *)v89 + 5) = *((_QWORD *)v90 + 5);
      *((_QWORD *)v89 + 6) = *((_QWORD *)v90 + 6);
      v96 = (id *)(v90 + 56);
      v97 = v90[64];
      if (v97 == 255)
      {
        v99 = *v96;
        v89[64] = v90[64];
        *((_QWORD *)v89 + 7) = v99;
      }
      else
      {
        v98 = *v96;
        sub_3D47C(*v96, v90[64]);
        *((_QWORD *)v89 + 7) = v98;
        v89[64] = v97;
      }
      v100 = (id *)(v90 + 72);
      v101 = v90[80];
      if (v101 == 255)
      {
        v103 = *v100;
        v89[80] = v90[80];
        *((_QWORD *)v89 + 9) = v103;
      }
      else
      {
        v102 = *v100;
        sub_3D47C(*v100, v90[80]);
        *((_QWORD *)v89 + 9) = v102;
        v89[80] = v101;
      }
      v104 = (id *)(v90 + 88);
      v105 = v90[96];
      if (v105 == 255)
      {
        v107 = *v104;
        v89[96] = v90[96];
        *((_QWORD *)v89 + 11) = v107;
      }
      else
      {
        v106 = *v104;
        sub_3D47C(*v104, v90[96]);
        *((_QWORD *)v89 + 11) = v106;
        v89[96] = v105;
      }
      v108 = (id *)(v90 + 104);
      v109 = v90[112];
      if (v109 == 255)
      {
        v111 = *v108;
        v89[112] = v90[112];
        *((_QWORD *)v89 + 13) = v111;
      }
      else
      {
        v110 = *v108;
        sub_3D47C(*v108, v90[112]);
        *((_QWORD *)v89 + 13) = v110;
        v89[112] = v109;
      }
      v112 = (id *)(v90 + 120);
      v113 = v90[128];
      if (v113 == 255)
      {
        v115 = *v112;
        v89[128] = v90[128];
        *((_QWORD *)v89 + 15) = v115;
      }
      else
      {
        v114 = *v112;
        sub_3D47C(*v112, v90[128]);
        *((_QWORD *)v89 + 15) = v114;
        v89[128] = v113;
      }
      v89[129] = v90[129];
      v162(&v89[v77[11]], &v90[v77[11]], v81);
      v116 = v77[12];
      v117 = &v89[v116];
      v118 = &v90[v116];
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
      v89[v77[13]] = v90[v77[13]];
      v89[v77[14]] = v90[v77[14]];
      v89[v77[15]] = v90[v77[15]];
      v119 = v77[16];
      v120 = &v89[v119];
      v121 = &v90[v119];
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
      *(_QWORD *)((char *)a1 + *(int *)(v161 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v161 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v73 = a1;
      v74 = v163;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
  }
  v155 = *(int *)(a3 + 36);
  v156 = (_QWORD *)((char *)a1 + v155);
  v157 = (_QWORD *)((char *)a2 + v155);
  v158 = v157[1];
  v159 = v156[1];
  *v156 = *v157;
  v156[1] = v158;
  swift_retain();
  swift_release(v159);
  return a1;
}

_OWORD *sub_26E6F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v18 = (int *)type metadata accessor for ArtworkModel(0);
    v19 = *((_QWORD *)v18 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(a2, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v33 = v18[11];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
      *((_BYTE *)a1 + v18[13]) = *((_BYTE *)a2 + v18[13]);
      *((_BYTE *)a1 + v18[14]) = *((_BYTE *)a2 + v18[14]);
      *((_BYTE *)a1 + v18[15]) = *((_BYTE *)a2 + v18[15]);
      *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)((char *)a2 + v18[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v19 + 56))(a1, 0, 1, v18);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v37 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v37 + 48));
    v15 = a1;
    v16 = v6;
    v17 = 2;
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = (int *)type metadata accessor for ArtworkModel(0);
      v10 = v9[11];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)((char *)a1 + v9[12]) = *(_OWORD *)((char *)a2 + v9[12]);
      *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
      *((_BYTE *)a1 + v9[14]) = *((_BYTE *)a2 + v9[14]);
      *((_BYTE *)a1 + v9[15]) = *((_BYTE *)a2 + v9[15]);
      *(_OWORD *)((char *)a1 + v9[16]) = *(_OWORD *)((char *)a2 + v9[16]);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 48));
      v15 = a1;
      v16 = v6;
      v17 = 1;
    }
    else
    {
      v21 = (int *)type metadata accessor for ArtworkModel(0);
      v22 = v21[11];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for ArtworkCrop(0);
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
      v26(v23, v24, v25);
      *(_OWORD *)((char *)a1 + v21[12]) = *(_OWORD *)((char *)a2 + v21[12]);
      *((_BYTE *)a1 + v21[13]) = *((_BYTE *)a2 + v21[13]);
      *((_BYTE *)a1 + v21[14]) = *((_BYTE *)a2 + v21[14]);
      *((_BYTE *)a1 + v21[15]) = *((_BYTE *)a2 + v21[15]);
      *(_OWORD *)((char *)a1 + v21[16]) = *(_OWORD *)((char *)a2 + v21[16]);
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v28 = *(int *)(v27 + 48);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = *(_OWORD *)((char *)a2 + v28 + 16);
      *(_OWORD *)v29 = *(_OWORD *)((char *)a2 + v28);
      *((_OWORD *)v29 + 1) = v31;
      v29[32] = *((_BYTE *)a2 + v28 + 32);
      *(_OWORD *)(v29 + 40) = *(_OWORD *)((char *)a2 + v28 + 40);
      *((_QWORD *)v29 + 7) = *(_QWORD *)((char *)a2 + v28 + 56);
      v29[64] = *((_BYTE *)a2 + v28 + 64);
      *(_OWORD *)(v29 + 113) = *(_OWORD *)((char *)a2 + v28 + 113);
      *(_OWORD *)(v29 + 104) = *(_OWORD *)((char *)a2 + v28 + 104);
      *(_OWORD *)(v29 + 88) = *(_OWORD *)((char *)a2 + v28 + 88);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)((char *)a2 + v28 + 72);
      v29[129] = *((_BYTE *)a2 + v28 + 129);
      v26((char *)a1 + v28 + v21[11], (char *)a2 + v28 + v21[11], v25);
      *(_OWORD *)&v29[v21[12]] = *(_OWORD *)&v30[v21[12]];
      v29[v21[13]] = v30[v21[13]];
      v29[v21[14]] = v30[v21[14]];
      v29[v21[15]] = v30[v21[15]];
      *(_OWORD *)&v29[v21[16]] = *(_OWORD *)&v30[v21[16]];
      *(_QWORD *)((char *)a1 + *(int *)(v27 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v27 + 64));
      v15 = a1;
      v16 = v6;
      v17 = 0;
    }
  }
  swift_storeEnumTagMultiPayload(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  return a1;
}

_OWORD *sub_26EB40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    v6 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v18 = (int *)type metadata accessor for ArtworkModel(0);
      v19 = *((_QWORD *)v18 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48))(a2, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v33 = v18[11];
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
        *((_BYTE *)a1 + v18[13]) = *((_BYTE *)a2 + v18[13]);
        *((_BYTE *)a1 + v18[14]) = *((_BYTE *)a2 + v18[14]);
        *((_BYTE *)a1 + v18[15]) = *((_BYTE *)a2 + v18[15]);
        *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)((char *)a2 + v18[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v19 + 56))(a1, 0, 1, v18);
      }
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v37 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v37 + 48));
      v15 = a1;
      v16 = v6;
      v17 = 2;
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        v9 = (int *)type metadata accessor for ArtworkModel(0);
        v10 = v9[11];
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        *(_OWORD *)((char *)a1 + v9[12]) = *(_OWORD *)((char *)a2 + v9[12]);
        *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
        *((_BYTE *)a1 + v9[14]) = *((_BYTE *)a2 + v9[14]);
        *((_BYTE *)a1 + v9[15]) = *((_BYTE *)a2 + v9[15]);
        *(_OWORD *)((char *)a1 + v9[16]) = *(_OWORD *)((char *)a2 + v9[16]);
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
        *(_QWORD *)((char *)a1 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v14 + 48));
        v15 = a1;
        v16 = v6;
        v17 = 1;
      }
      else
      {
        v21 = (int *)type metadata accessor for ArtworkModel(0);
        v22 = v21[11];
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = type metadata accessor for ArtworkCrop(0);
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
        v26(v23, v24, v25);
        *(_OWORD *)((char *)a1 + v21[12]) = *(_OWORD *)((char *)a2 + v21[12]);
        *((_BYTE *)a1 + v21[13]) = *((_BYTE *)a2 + v21[13]);
        *((_BYTE *)a1 + v21[14]) = *((_BYTE *)a2 + v21[14]);
        *((_BYTE *)a1 + v21[15]) = *((_BYTE *)a2 + v21[15]);
        *(_OWORD *)((char *)a1 + v21[16]) = *(_OWORD *)((char *)a2 + v21[16]);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
        v28 = *(int *)(v27 + 48);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = *(_OWORD *)((char *)a2 + v28 + 16);
        *(_OWORD *)v29 = *(_OWORD *)((char *)a2 + v28);
        *((_OWORD *)v29 + 1) = v31;
        v29[32] = *((_BYTE *)a2 + v28 + 32);
        *(_OWORD *)(v29 + 40) = *(_OWORD *)((char *)a2 + v28 + 40);
        *((_QWORD *)v29 + 7) = *(_QWORD *)((char *)a2 + v28 + 56);
        v29[64] = *((_BYTE *)a2 + v28 + 64);
        *(_OWORD *)(v29 + 113) = *(_OWORD *)((char *)a2 + v28 + 113);
        *(_OWORD *)(v29 + 104) = *(_OWORD *)((char *)a2 + v28 + 104);
        *(_OWORD *)(v29 + 88) = *(_OWORD *)((char *)a2 + v28 + 88);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)((char *)a2 + v28 + 72);
        v29[129] = *((_BYTE *)a2 + v28 + 129);
        v26((char *)a1 + v28 + v21[11], (char *)a2 + v28 + v21[11], v25);
        *(_OWORD *)&v29[v21[12]] = *(_OWORD *)&v30[v21[12]];
        v29[v21[13]] = v30[v21[13]];
        v29[v21[14]] = v30[v21[14]];
        v29[v21[15]] = v30[v21[15]];
        *(_OWORD *)&v29[v21[16]] = *(_OWORD *)&v30[v21[16]];
        *(_QWORD *)((char *)a1 + *(int *)(v27 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v27 + 64));
        v15 = a1;
        v16 = v6;
        v17 = 0;
      }
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  v38 = *(int *)(a3 + 36);
  v39 = *(_QWORD *)((char *)a1 + v38 + 8);
  *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
  swift_release(v39);
  return a1;
}

uint64_t sub_26EFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_26EFBC);
}

uint64_t sub_26EFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for HeroBackgroundVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_26F038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_26F044);
}

uint64_t sub_26F044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for HeroBackgroundVariant(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_26F0BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4830);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4838);
  v4 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _FlexFrameLayout);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4840);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _PaddingLayout);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4848);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4850);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v14 = sub_32914(&qword_3C4858, &qword_3C4830, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v15 = type metadata accessor for _VariadicView.Tree(255, v2, v13, v14);
  v17[2] = sub_32914(&qword_3C4860, &qword_3C4830, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v17[3] = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>);
  v17[0] = v15;
  v17[1] = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>);
  return swift_getOpaqueTypeConformance2(v17, &opaque type descriptor for <<opaque return type of View.coordinateSpace(_:)>>, 1);
}

uint64_t storeEnumTagSinglePayload for HeroChinLayout.Piece(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_26F294 + 4 * byte_302F15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_26F2C8 + 4 * byte_302F10[v4]))();
}

uint64_t sub_26F2C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_26F2D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x26F2D8);
  return result;
}

uint64_t sub_26F2E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x26F2ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_26F2F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_26F2F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeroChinLayout.Piece()
{
  return &type metadata for HeroChinLayout.Piece;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroBackground(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id *v48;
  int v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  id *v91;
  int v92;
  id v93;
  id *v94;
  int v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  id *v114;
  int v115;
  id v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void (*v141)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v142;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = (int *)type metadata accessor for ArtworkModel(0);
      v14 = *((_QWORD *)v13 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v14 + 48))(a2, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        v24 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v24 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        }
        else
        {
          v25 = a2[2];
          v26 = a2[3];
          sub_3D464(v25, v26, v24);
          a1[2] = v25;
          a1[3] = v26;
          *((_BYTE *)a1 + 32) = v24;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v114 = (id *)(a2 + 7);
        v115 = *((unsigned __int8 *)a2 + 64);
        if (v115 == 255)
        {
          a1[7] = (uint64_t)*v114;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        }
        else
        {
          v116 = *v114;
          sub_3D47C(*v114, *((_BYTE *)a2 + 64));
          a1[7] = (uint64_t)v116;
          *((_BYTE *)a1 + 64) = v115;
        }
        v117 = (id *)(a2 + 9);
        v118 = *((unsigned __int8 *)a2 + 80);
        if (v118 == 255)
        {
          a1[9] = (uint64_t)*v117;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        }
        else
        {
          v119 = *v117;
          sub_3D47C(*v117, *((_BYTE *)a2 + 80));
          a1[9] = (uint64_t)v119;
          *((_BYTE *)a1 + 80) = v118;
        }
        v120 = (id *)(a2 + 11);
        v121 = *((unsigned __int8 *)a2 + 96);
        if (v121 == 255)
        {
          a1[11] = (uint64_t)*v120;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        }
        else
        {
          v122 = *v120;
          sub_3D47C(*v120, *((_BYTE *)a2 + 96));
          a1[11] = (uint64_t)v122;
          *((_BYTE *)a1 + 96) = v121;
        }
        v123 = (id *)(a2 + 13);
        v124 = *((unsigned __int8 *)a2 + 112);
        if (v124 == 255)
        {
          a1[13] = (uint64_t)*v123;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)a2 + 112));
          a1[13] = (uint64_t)v125;
          *((_BYTE *)a1 + 112) = v124;
        }
        v126 = (id *)(a2 + 15);
        v127 = *((unsigned __int8 *)a2 + 128);
        if (v127 == 255)
        {
          a1[15] = (uint64_t)*v126;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        }
        else
        {
          v128 = *v126;
          sub_3D47C(*v126, *((_BYTE *)a2 + 128));
          a1[15] = (uint64_t)v128;
          *((_BYTE *)a1 + 128) = v127;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v129 = v13[11];
        v130 = (char *)a1 + v129;
        v131 = (char *)a2 + v129;
        v132 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
        v133 = v13[12];
        v134 = (uint64_t *)((char *)a1 + v133);
        v135 = (uint64_t *)((char *)a2 + v133);
        v136 = v135[1];
        *v134 = *v135;
        v134[1] = v136;
        *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
        *((_BYTE *)a1 + v13[14]) = *((_BYTE *)a2 + v13[14]);
        *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
        v137 = v13[16];
        v138 = (uint64_t *)((char *)a1 + v137);
        v139 = (uint64_t *)((char *)a2 + v137);
        v140 = v139[1];
        *v138 = *v139;
        v138[1] = v140;
        v141 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v141(a1, 0, 1, v13);
      }
      v142 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(uint64_t *)((char *)a1 + *(int *)(v142 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v142 + 48));
      swift_retain();
      v68 = a1;
      v69 = v6;
      v70 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v10 = a2[2];
        v11 = a2[3];
        sub_3D464(v10, v11, v9);
        a1[2] = v10;
        a1[3] = v11;
        *((_BYTE *)a1 + 32) = v9;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v20 = (id *)(a2 + 7);
      v21 = *((unsigned __int8 *)a2 + 64);
      if (v21 == 255)
      {
        a1[7] = (uint64_t)*v20;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v22 = *v20;
        sub_3D47C(*v20, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v22;
        *((_BYTE *)a1 + 64) = v21;
      }
      v30 = (id *)(a2 + 9);
      v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        a1[9] = (uint64_t)*v30;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v32;
        *((_BYTE *)a1 + 80) = v31;
      }
      v36 = (id *)(a2 + 11);
      v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        a1[11] = (uint64_t)*v36;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v38 = *v36;
        sub_3D47C(*v36, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v38;
        *((_BYTE *)a1 + 96) = v37;
      }
      v42 = (id *)(a2 + 13);
      v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        a1[13] = (uint64_t)*v42;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v44 = *v42;
        sub_3D47C(*v42, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v44;
        *((_BYTE *)a1 + 112) = v43;
      }
      v48 = (id *)(a2 + 15);
      v49 = *((unsigned __int8 *)a2 + 128);
      if (v49 == 255)
      {
        a1[15] = (uint64_t)*v48;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v50 = *v48;
        sub_3D47C(*v48, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v50;
        *((_BYTE *)a1 + 128) = v49;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v54 = (int *)type metadata accessor for ArtworkModel(0);
      v55 = v54[11];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      v58 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
      v59 = v54[12];
      v60 = (uint64_t *)((char *)a1 + v59);
      v61 = (uint64_t *)((char *)a2 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *((_BYTE *)a1 + v54[13]) = *((_BYTE *)a2 + v54[13]);
      *((_BYTE *)a1 + v54[14]) = *((_BYTE *)a2 + v54[14]);
      *((_BYTE *)a1 + v54[15]) = *((_BYTE *)a2 + v54[15]);
      v63 = v54[16];
      v64 = (uint64_t *)((char *)a1 + v63);
      v65 = (uint64_t *)((char *)a2 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(uint64_t *)((char *)a1 + *(int *)(v67 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v67 + 48));
      swift_retain();
      v68 = a1;
      v69 = v6;
      v70 = 1;
    }
    else
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      v17 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v18 = a2[2];
        v19 = a2[3];
        sub_3D464(v18, v19, v17);
        a1[2] = v18;
        a1[3] = v19;
        *((_BYTE *)a1 + 32) = v17;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v27 = (id *)(a2 + 7);
      v28 = *((unsigned __int8 *)a2 + 64);
      if (v28 == 255)
      {
        a1[7] = (uint64_t)*v27;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v29;
        *((_BYTE *)a1 + 64) = v28;
      }
      v33 = (id *)(a2 + 9);
      v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        a1[9] = (uint64_t)*v33;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v35;
        *((_BYTE *)a1 + 80) = v34;
      }
      v39 = (id *)(a2 + 11);
      v40 = *((unsigned __int8 *)a2 + 96);
      if (v40 == 255)
      {
        a1[11] = (uint64_t)*v39;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v41;
        *((_BYTE *)a1 + 96) = v40;
      }
      v45 = (id *)(a2 + 13);
      v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        a1[13] = (uint64_t)*v45;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v47 = *v45;
        sub_3D47C(*v45, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v47;
        *((_BYTE *)a1 + 112) = v46;
      }
      v51 = (id *)(a2 + 15);
      v52 = *((unsigned __int8 *)a2 + 128);
      if (v52 == 255)
      {
        a1[15] = (uint64_t)*v51;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v53 = *v51;
        sub_3D47C(*v51, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v53;
        *((_BYTE *)a1 + 128) = v52;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v71 = (int *)type metadata accessor for ArtworkModel(0);
      v72 = v71[11];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      v75 = type metadata accessor for ArtworkCrop(0);
      v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
      v145(v73, v74, v75);
      v76 = v71[12];
      v77 = (uint64_t *)((char *)a1 + v76);
      v78 = (uint64_t *)((char *)a2 + v76);
      v79 = v78[1];
      *v77 = *v78;
      v77[1] = v79;
      *((_BYTE *)a1 + v71[13]) = *((_BYTE *)a2 + v71[13]);
      *((_BYTE *)a1 + v71[14]) = *((_BYTE *)a2 + v71[14]);
      *((_BYTE *)a1 + v71[15]) = *((_BYTE *)a2 + v71[15]);
      v80 = v71[16];
      v81 = (uint64_t *)((char *)a1 + v80);
      v82 = (uint64_t *)((char *)a2 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v84 = *(int *)(v144 + 48);
      v85 = (char *)a1 + v84;
      v86 = (char *)a2 + v84;
      v87 = *(uint64_t *)((char *)a2 + v84 + 8);
      *(_QWORD *)v85 = *(uint64_t *)((char *)a2 + v84);
      *((_QWORD *)v85 + 1) = v87;
      v88 = *((unsigned __int8 *)a2 + v84 + 32);
      swift_bridgeObjectRetain();
      if (v88 == 255)
      {
        *((_OWORD *)v85 + 1) = *((_OWORD *)v86 + 1);
        v85[32] = v86[32];
      }
      else
      {
        v89 = *((_QWORD *)v86 + 2);
        v90 = *((_QWORD *)v86 + 3);
        sub_3D464(v89, v90, v88);
        *((_QWORD *)v85 + 2) = v89;
        *((_QWORD *)v85 + 3) = v90;
        v85[32] = v88;
      }
      *(_OWORD *)(v85 + 40) = *(_OWORD *)(v86 + 40);
      v91 = (id *)(v86 + 56);
      v92 = v86[64];
      if (v92 == 255)
      {
        *((_QWORD *)v85 + 7) = *v91;
        v85[64] = v86[64];
      }
      else
      {
        v93 = *v91;
        sub_3D47C(*v91, v86[64]);
        *((_QWORD *)v85 + 7) = v93;
        v85[64] = v92;
      }
      v94 = (id *)(v86 + 72);
      v95 = v86[80];
      if (v95 == 255)
      {
        *((_QWORD *)v85 + 9) = *v94;
        v85[80] = v86[80];
      }
      else
      {
        v96 = *v94;
        sub_3D47C(*v94, v86[80]);
        *((_QWORD *)v85 + 9) = v96;
        v85[80] = v95;
      }
      v97 = (id *)(v86 + 88);
      v98 = v86[96];
      if (v98 == 255)
      {
        *((_QWORD *)v85 + 11) = *v97;
        v85[96] = v86[96];
      }
      else
      {
        v99 = *v97;
        sub_3D47C(*v97, v86[96]);
        *((_QWORD *)v85 + 11) = v99;
        v85[96] = v98;
      }
      v100 = (id *)(v86 + 104);
      v101 = v86[112];
      if (v101 == 255)
      {
        *((_QWORD *)v85 + 13) = *v100;
        v85[112] = v86[112];
      }
      else
      {
        v102 = *v100;
        sub_3D47C(*v100, v86[112]);
        *((_QWORD *)v85 + 13) = v102;
        v85[112] = v101;
      }
      v103 = (id *)(v86 + 120);
      v104 = v86[128];
      if (v104 == 255)
      {
        *((_QWORD *)v85 + 15) = *v103;
        v85[128] = v86[128];
      }
      else
      {
        v105 = *v103;
        sub_3D47C(*v103, v86[128]);
        *((_QWORD *)v85 + 15) = v105;
        v85[128] = v104;
      }
      v85[129] = v86[129];
      v145(&v85[v71[11]], &v86[v71[11]], v75);
      v106 = v71[12];
      v107 = &v85[v106];
      v108 = &v86[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v85[v71[13]] = v86[v71[13]];
      v85[v71[14]] = v86[v71[14]];
      v85[v71[15]] = v86[v71[15]];
      v110 = v71[16];
      v111 = &v85[v110];
      v112 = &v86[v110];
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v113;
      *(uint64_t *)((char *)a1 + *(int *)(v144 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v144 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v68 = a1;
      v69 = v6;
      v70 = 0;
    }
    swift_storeEnumTagMultiPayload(v68, v69, v70);
  }
  return a1;
}

uint64_t destroy for HeroBackground(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int *v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for HeroBackgroundVariant(0);
  result = swift_getEnumCaseMultiPayload(a1, v2);
  if ((_DWORD)result == 2)
  {
    v23 = type metadata accessor for ArtworkModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(a1, 1, v23))
    {
      swift_bridgeObjectRelease();
      v24 = *(unsigned __int8 *)(a1 + 32);
      if (v24 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v24);
      v25 = *(unsigned __int8 *)(a1 + 64);
      if (v25 != 255)
        sub_3D624(*(id *)(a1 + 56), v25);
      v26 = *(unsigned __int8 *)(a1 + 80);
      if (v26 != 255)
        sub_3D624(*(id *)(a1 + 72), v26);
      v27 = *(unsigned __int8 *)(a1 + 96);
      if (v27 != 255)
        sub_3D624(*(id *)(a1 + 88), v27);
      v28 = *(unsigned __int8 *)(a1 + 112);
      if (v28 != 255)
        sub_3D624(*(id *)(a1 + 104), v28);
      v29 = *(unsigned __int8 *)(a1 + 128);
      if (v29 != 255)
        sub_3D624(*(id *)(a1 + 120), v29);
      v30 = a1 + *(int *)(v23 + 44);
      v31 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v32 = qword_3C4878;
    goto LABEL_57;
  }
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v33 = *(unsigned __int8 *)(a1 + 32);
    if (v33 != 255)
      sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v33);
    v34 = *(unsigned __int8 *)(a1 + 64);
    if (v34 != 255)
      sub_3D624(*(id *)(a1 + 56), v34);
    v35 = *(unsigned __int8 *)(a1 + 80);
    if (v35 != 255)
      sub_3D624(*(id *)(a1 + 72), v35);
    v36 = *(unsigned __int8 *)(a1 + 96);
    if (v36 != 255)
      sub_3D624(*(id *)(a1 + 88), v36);
    v37 = *(unsigned __int8 *)(a1 + 112);
    if (v37 != 255)
      sub_3D624(*(id *)(a1 + 104), v37);
    v38 = *(unsigned __int8 *)(a1 + 128);
    if (v38 != 255)
      sub_3D624(*(id *)(a1 + 120), v38);
    v39 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
    v40 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = &qword_3C4870;
LABEL_57:
    v22 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v32) + 48);
    return swift_release(*(_QWORD *)(a1 + *v22));
  }
  if ((_DWORD)result)
    return result;
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255)
    sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255)
    sub_3D624(*(id *)(a1 + 56), v5);
  v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255)
    sub_3D624(*(id *)(a1 + 72), v6);
  v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255)
    sub_3D624(*(id *)(a1 + 88), v7);
  v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255)
    sub_3D624(*(id *)(a1 + 104), v8);
  v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255)
    sub_3D624(*(id *)(a1 + 120), v9);
  v10 = type metadata accessor for ArtworkModel(0);
  v11 = a1 + *(int *)(v10 + 44);
  v12 = type metadata accessor for ArtworkCrop(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
  v15 = a1 + *(int *)(v14 + 48);
  swift_bridgeObjectRelease();
  v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16 != 255)
    sub_3B5BC(*(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v16);
  v17 = *(unsigned __int8 *)(v15 + 64);
  if (v17 != 255)
    sub_3D624(*(id *)(v15 + 56), v17);
  v18 = *(unsigned __int8 *)(v15 + 80);
  if (v18 != 255)
    sub_3D624(*(id *)(v15 + 72), v18);
  v19 = *(unsigned __int8 *)(v15 + 96);
  if (v19 != 255)
    sub_3D624(*(id *)(v15 + 88), v19);
  v20 = *(unsigned __int8 *)(v15 + 112);
  if (v20 != 255)
    sub_3D624(*(id *)(v15 + 104), v20);
  v21 = *(unsigned __int8 *)(v15 + 128);
  if (v21 != 255)
    sub_3D624(*(id *)(v15 + 120), v21);
  v13(v15 + *(int *)(v10 + 44), v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = (int *)(v14 + 64);
  return swift_release(*(_QWORD *)(a1 + *v22));
}

_QWORD *initializeWithCopy for HeroBackground(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  int v18;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id *v48;
  int v49;
  id v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id *v89;
  int v90;
  id v91;
  id *v92;
  int v93;
  id v94;
  id *v95;
  int v96;
  id v97;
  id *v98;
  int v99;
  id v100;
  id *v101;
  int v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  id *v112;
  int v113;
  id v114;
  id *v115;
  int v116;
  id v117;
  id *v118;
  int v119;
  id v120;
  id *v121;
  int v122;
  id v123;
  id *v124;
  int v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  void (*v139)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v140;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = (int *)type metadata accessor for ArtworkModel(0);
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v21 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v22 = a2[2];
        v23 = a2[3];
        sub_3D464(v22, v23, v21);
        a1[2] = v22;
        a1[3] = v23;
        *((_BYTE *)a1 + 32) = v21;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v112 = (id *)(a2 + 7);
      v113 = *((unsigned __int8 *)a2 + 64);
      if (v113 == 255)
      {
        a1[7] = *v112;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v114 = *v112;
        sub_3D47C(*v112, *((_BYTE *)a2 + 64));
        a1[7] = v114;
        *((_BYTE *)a1 + 64) = v113;
      }
      v115 = (id *)(a2 + 9);
      v116 = *((unsigned __int8 *)a2 + 80);
      if (v116 == 255)
      {
        a1[9] = *v115;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v117 = *v115;
        sub_3D47C(*v115, *((_BYTE *)a2 + 80));
        a1[9] = v117;
        *((_BYTE *)a1 + 80) = v116;
      }
      v118 = (id *)(a2 + 11);
      v119 = *((unsigned __int8 *)a2 + 96);
      if (v119 == 255)
      {
        a1[11] = *v118;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v120 = *v118;
        sub_3D47C(*v118, *((_BYTE *)a2 + 96));
        a1[11] = v120;
        *((_BYTE *)a1 + 96) = v119;
      }
      v121 = (id *)(a2 + 13);
      v122 = *((unsigned __int8 *)a2 + 112);
      if (v122 == 255)
      {
        a1[13] = *v121;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v123 = *v121;
        sub_3D47C(*v121, *((_BYTE *)a2 + 112));
        a1[13] = v123;
        *((_BYTE *)a1 + 112) = v122;
      }
      v124 = (id *)(a2 + 15);
      v125 = *((unsigned __int8 *)a2 + 128);
      if (v125 == 255)
      {
        a1[15] = *v124;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v126 = *v124;
        sub_3D47C(*v124, *((_BYTE *)a2 + 128));
        a1[15] = v126;
        *((_BYTE *)a1 + 128) = v125;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v127 = v10[11];
      v128 = (char *)a1 + v127;
      v129 = (char *)a2 + v127;
      v130 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
      v131 = v10[12];
      v132 = (_QWORD *)((char *)a1 + v131);
      v133 = (_QWORD *)((char *)a2 + v131);
      v134 = v133[1];
      *v132 = *v133;
      v132[1] = v134;
      *((_BYTE *)a1 + v10[13]) = *((_BYTE *)a2 + v10[13]);
      *((_BYTE *)a1 + v10[14]) = *((_BYTE *)a2 + v10[14]);
      *((_BYTE *)a1 + v10[15]) = *((_BYTE *)a2 + v10[15]);
      v135 = v10[16];
      v136 = (_QWORD *)((char *)a1 + v135);
      v137 = (_QWORD *)((char *)a2 + v135);
      v138 = v137[1];
      *v136 = *v137;
      v136[1] = v138;
      v139 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v139(a1, 0, 1, v10);
    }
    v140 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v140 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v140 + 48));
    swift_retain();
    v65 = a1;
    v66 = v4;
    v67 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v7 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v8 = a2[2];
      v9 = a2[3];
      sub_3D464(v8, v9, v7);
      a1[2] = v8;
      a1[3] = v9;
      *((_BYTE *)a1 + 32) = v7;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v17 = (id *)(a2 + 7);
    v18 = *((unsigned __int8 *)a2 + 64);
    if (v18 == 255)
    {
      a1[7] = *v17;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v19 = *v17;
      sub_3D47C(*v17, *((_BYTE *)a2 + 64));
      a1[7] = v19;
      *((_BYTE *)a1 + 64) = v18;
    }
    v27 = (id *)(a2 + 9);
    v28 = *((unsigned __int8 *)a2 + 80);
    if (v28 == 255)
    {
      a1[9] = *v27;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v29 = *v27;
      sub_3D47C(*v27, *((_BYTE *)a2 + 80));
      a1[9] = v29;
      *((_BYTE *)a1 + 80) = v28;
    }
    v33 = (id *)(a2 + 11);
    v34 = *((unsigned __int8 *)a2 + 96);
    if (v34 == 255)
    {
      a1[11] = *v33;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v35 = *v33;
      sub_3D47C(*v33, *((_BYTE *)a2 + 96));
      a1[11] = v35;
      *((_BYTE *)a1 + 96) = v34;
    }
    v39 = (id *)(a2 + 13);
    v40 = *((unsigned __int8 *)a2 + 112);
    if (v40 == 255)
    {
      a1[13] = *v39;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v41 = *v39;
      sub_3D47C(*v39, *((_BYTE *)a2 + 112));
      a1[13] = v41;
      *((_BYTE *)a1 + 112) = v40;
    }
    v45 = (id *)(a2 + 15);
    v46 = *((unsigned __int8 *)a2 + 128);
    if (v46 == 255)
    {
      a1[15] = *v45;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v47 = *v45;
      sub_3D47C(*v45, *((_BYTE *)a2 + 128));
      a1[15] = v47;
      *((_BYTE *)a1 + 128) = v46;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v51 = (int *)type metadata accessor for ArtworkModel(0);
    v52 = v51[11];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v55 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = v51[12];
    v57 = (_QWORD *)((char *)a1 + v56);
    v58 = (_QWORD *)((char *)a2 + v56);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    *((_BYTE *)a1 + v51[13]) = *((_BYTE *)a2 + v51[13]);
    *((_BYTE *)a1 + v51[14]) = *((_BYTE *)a2 + v51[14]);
    *((_BYTE *)a1 + v51[15]) = *((_BYTE *)a2 + v51[15]);
    v60 = v51[16];
    v61 = (_QWORD *)((char *)a1 + v60);
    v62 = (_QWORD *)((char *)a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
    *(_QWORD *)((char *)a1 + *(int *)(v64 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v64 + 48));
    swift_retain();
    v65 = a1;
    v66 = v4;
    v67 = 1;
  }
  else
  {
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v14 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v15 = a2[2];
      v16 = a2[3];
      sub_3D464(v15, v16, v14);
      a1[2] = v15;
      a1[3] = v16;
      *((_BYTE *)a1 + 32) = v14;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v24 = (id *)(a2 + 7);
    v25 = *((unsigned __int8 *)a2 + 64);
    if (v25 == 255)
    {
      a1[7] = *v24;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v26 = *v24;
      sub_3D47C(*v24, *((_BYTE *)a2 + 64));
      a1[7] = v26;
      *((_BYTE *)a1 + 64) = v25;
    }
    v30 = (id *)(a2 + 9);
    v31 = *((unsigned __int8 *)a2 + 80);
    if (v31 == 255)
    {
      a1[9] = *v30;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v32 = *v30;
      sub_3D47C(*v30, *((_BYTE *)a2 + 80));
      a1[9] = v32;
      *((_BYTE *)a1 + 80) = v31;
    }
    v36 = (id *)(a2 + 11);
    v37 = *((unsigned __int8 *)a2 + 96);
    if (v37 == 255)
    {
      a1[11] = *v36;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v38 = *v36;
      sub_3D47C(*v36, *((_BYTE *)a2 + 96));
      a1[11] = v38;
      *((_BYTE *)a1 + 96) = v37;
    }
    v42 = (id *)(a2 + 13);
    v43 = *((unsigned __int8 *)a2 + 112);
    if (v43 == 255)
    {
      a1[13] = *v42;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v44 = *v42;
      sub_3D47C(*v42, *((_BYTE *)a2 + 112));
      a1[13] = v44;
      *((_BYTE *)a1 + 112) = v43;
    }
    v48 = (id *)(a2 + 15);
    v49 = *((unsigned __int8 *)a2 + 128);
    if (v49 == 255)
    {
      a1[15] = *v48;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v50 = *v48;
      sub_3D47C(*v48, *((_BYTE *)a2 + 128));
      a1[15] = v50;
      *((_BYTE *)a1 + 128) = v49;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v68 = (int *)type metadata accessor for ArtworkModel(0);
    v69 = v68[11];
    v70 = (char *)a1 + v69;
    v71 = (char *)a2 + v69;
    v72 = type metadata accessor for ArtworkCrop(0);
    v143 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
    v143(v70, v71, v72);
    v73 = v68[12];
    v74 = (_QWORD *)((char *)a1 + v73);
    v75 = (_QWORD *)((char *)a2 + v73);
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    *((_BYTE *)a1 + v68[13]) = *((_BYTE *)a2 + v68[13]);
    *((_BYTE *)a1 + v68[14]) = *((_BYTE *)a2 + v68[14]);
    *((_BYTE *)a1 + v68[15]) = *((_BYTE *)a2 + v68[15]);
    v77 = v68[16];
    v78 = (_QWORD *)((char *)a1 + v77);
    v79 = (_QWORD *)((char *)a2 + v77);
    v80 = v79[1];
    *v78 = *v79;
    v78[1] = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v81 = *(int *)(v142 + 48);
    v82 = (char *)a1 + v81;
    v83 = (char *)a2 + v81;
    v84 = *(_QWORD *)((char *)a2 + v81 + 8);
    *(_QWORD *)v82 = *(_QWORD *)((char *)a2 + v81);
    *((_QWORD *)v82 + 1) = v84;
    v85 = *((unsigned __int8 *)a2 + v81 + 32);
    swift_bridgeObjectRetain();
    if (v85 == 255)
    {
      *((_OWORD *)v82 + 1) = *((_OWORD *)v83 + 1);
      v82[32] = v83[32];
    }
    else
    {
      v86 = v4;
      v87 = *((_QWORD *)v83 + 2);
      v88 = *((_QWORD *)v83 + 3);
      sub_3D464(v87, v88, v85);
      *((_QWORD *)v82 + 2) = v87;
      *((_QWORD *)v82 + 3) = v88;
      v4 = v86;
      v82[32] = v85;
    }
    *(_OWORD *)(v82 + 40) = *(_OWORD *)(v83 + 40);
    v89 = (id *)(v83 + 56);
    v90 = v83[64];
    if (v90 == 255)
    {
      *((_QWORD *)v82 + 7) = *v89;
      v82[64] = v83[64];
    }
    else
    {
      v91 = *v89;
      sub_3D47C(*v89, v83[64]);
      *((_QWORD *)v82 + 7) = v91;
      v82[64] = v90;
    }
    v92 = (id *)(v83 + 72);
    v93 = v83[80];
    if (v93 == 255)
    {
      *((_QWORD *)v82 + 9) = *v92;
      v82[80] = v83[80];
    }
    else
    {
      v94 = *v92;
      sub_3D47C(*v92, v83[80]);
      *((_QWORD *)v82 + 9) = v94;
      v82[80] = v93;
    }
    v95 = (id *)(v83 + 88);
    v96 = v83[96];
    if (v96 == 255)
    {
      *((_QWORD *)v82 + 11) = *v95;
      v82[96] = v83[96];
    }
    else
    {
      v97 = *v95;
      sub_3D47C(*v95, v83[96]);
      *((_QWORD *)v82 + 11) = v97;
      v82[96] = v96;
    }
    v98 = (id *)(v83 + 104);
    v99 = v83[112];
    if (v99 == 255)
    {
      *((_QWORD *)v82 + 13) = *v98;
      v82[112] = v83[112];
    }
    else
    {
      v100 = *v98;
      sub_3D47C(*v98, v83[112]);
      *((_QWORD *)v82 + 13) = v100;
      v82[112] = v99;
    }
    v101 = (id *)(v83 + 120);
    v102 = v83[128];
    if (v102 == 255)
    {
      *((_QWORD *)v82 + 15) = *v101;
      v82[128] = v83[128];
    }
    else
    {
      v103 = *v101;
      sub_3D47C(*v101, v83[128]);
      *((_QWORD *)v82 + 15) = v103;
      v82[128] = v102;
    }
    v82[129] = v83[129];
    v143(&v82[v68[11]], &v83[v68[11]], v72);
    v104 = v68[12];
    v105 = &v82[v104];
    v106 = &v83[v104];
    v107 = *((_QWORD *)v106 + 1);
    *(_QWORD *)v105 = *(_QWORD *)v106;
    *((_QWORD *)v105 + 1) = v107;
    v82[v68[13]] = v83[v68[13]];
    v82[v68[14]] = v83[v68[14]];
    v82[v68[15]] = v83[v68[15]];
    v108 = v68[16];
    v109 = &v82[v108];
    v110 = &v83[v108];
    v111 = *((_QWORD *)v110 + 1);
    *(_QWORD *)v109 = *(_QWORD *)v110;
    *((_QWORD *)v109 + 1) = v111;
    *(_QWORD *)((char *)a1 + *(int *)(v142 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v142 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v65 = a1;
    v66 = v4;
    v67 = 0;
  }
  swift_storeEnumTagMultiPayload(v65, v66, v67);
  return a1;
}

_QWORD *assignWithCopy for HeroBackground(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  id *v16;
  int v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  id *v23;
  int v24;
  id v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  id v54;
  id *v55;
  int v56;
  id v57;
  id v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  id *v94;
  int v95;
  id v96;
  id v97;
  id *v98;
  int v99;
  id v100;
  id v101;
  id *v102;
  int v103;
  id v104;
  id v105;
  id *v106;
  int v107;
  id v108;
  id v109;
  id *v110;
  int v111;
  id v112;
  id v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  __int128 v120;
  id *v121;
  int v122;
  id v123;
  id v124;
  id *v125;
  int v126;
  id v127;
  id v128;
  id *v129;
  int v130;
  id v131;
  id v132;
  id *v133;
  int v134;
  id v135;
  id v136;
  id *v137;
  int v138;
  id v139;
  id v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  void (*v151)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v152;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    v4 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 2)
    {
      v9 = (int *)type metadata accessor for ArtworkModel(0);
      v10 = *((_QWORD *)v9 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v19 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v19 == 255)
        {
          v120 = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          *((_OWORD *)a1 + 1) = v120;
        }
        else
        {
          v20 = a2[2];
          v21 = a2[3];
          sub_3D464(v20, v21, v19);
          a1[2] = v20;
          a1[3] = v21;
          *((_BYTE *)a1 + 32) = v19;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        v121 = (id *)(a2 + 7);
        v122 = *((unsigned __int8 *)a2 + 64);
        if (v122 == 255)
        {
          v124 = *v121;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
          a1[7] = v124;
        }
        else
        {
          v123 = *v121;
          sub_3D47C(*v121, *((_BYTE *)a2 + 64));
          a1[7] = v123;
          *((_BYTE *)a1 + 64) = v122;
        }
        v125 = (id *)(a2 + 9);
        v126 = *((unsigned __int8 *)a2 + 80);
        if (v126 == 255)
        {
          v128 = *v125;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
          a1[9] = v128;
        }
        else
        {
          v127 = *v125;
          sub_3D47C(*v125, *((_BYTE *)a2 + 80));
          a1[9] = v127;
          *((_BYTE *)a1 + 80) = v126;
        }
        v129 = (id *)(a2 + 11);
        v130 = *((unsigned __int8 *)a2 + 96);
        if (v130 == 255)
        {
          v132 = *v129;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
          a1[11] = v132;
        }
        else
        {
          v131 = *v129;
          sub_3D47C(*v129, *((_BYTE *)a2 + 96));
          a1[11] = v131;
          *((_BYTE *)a1 + 96) = v130;
        }
        v133 = (id *)(a2 + 13);
        v134 = *((unsigned __int8 *)a2 + 112);
        if (v134 == 255)
        {
          v136 = *v133;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
          a1[13] = v136;
        }
        else
        {
          v135 = *v133;
          sub_3D47C(*v133, *((_BYTE *)a2 + 112));
          a1[13] = v135;
          *((_BYTE *)a1 + 112) = v134;
        }
        v137 = (id *)(a2 + 15);
        v138 = *((unsigned __int8 *)a2 + 128);
        if (v138 == 255)
        {
          v140 = *v137;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
          a1[15] = v140;
        }
        else
        {
          v139 = *v137;
          sub_3D47C(*v137, *((_BYTE *)a2 + 128));
          a1[15] = v139;
          *((_BYTE *)a1 + 128) = v138;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v141 = v9[11];
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        v144 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
        v145 = v9[12];
        v146 = (_QWORD *)((char *)a1 + v145);
        v147 = (_QWORD *)((char *)a2 + v145);
        *v146 = *v147;
        v146[1] = v147[1];
        *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
        *((_BYTE *)a1 + v9[14]) = *((_BYTE *)a2 + v9[14]);
        *((_BYTE *)a1 + v9[15]) = *((_BYTE *)a2 + v9[15]);
        v148 = v9[16];
        v149 = (_QWORD *)((char *)a1 + v148);
        v150 = (_QWORD *)((char *)a2 + v148);
        *v149 = *v150;
        v149[1] = v150[1];
        v151 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v10 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v151(a1, 0, 1, v9);
      }
      v152 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v152 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v152 + 48));
      swift_retain();
      v71 = a1;
      v72 = v4;
      v73 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v6 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v6 == 255)
      {
        v15 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v15;
      }
      else
      {
        v7 = a2[2];
        v8 = a2[3];
        sub_3D464(v7, v8, v6);
        a1[2] = v7;
        a1[3] = v8;
        *((_BYTE *)a1 + 32) = v6;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v16 = (id *)(a2 + 7);
      v17 = *((unsigned __int8 *)a2 + 64);
      if (v17 == 255)
      {
        v26 = *v16;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v26;
      }
      else
      {
        v18 = *v16;
        sub_3D47C(*v16, *((_BYTE *)a2 + 64));
        a1[7] = v18;
        *((_BYTE *)a1 + 64) = v17;
      }
      v27 = (id *)(a2 + 9);
      v28 = *((unsigned __int8 *)a2 + 80);
      if (v28 == 255)
      {
        v34 = *v27;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v34;
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)a2 + 80));
        a1[9] = v29;
        *((_BYTE *)a1 + 80) = v28;
      }
      v35 = (id *)(a2 + 11);
      v36 = *((unsigned __int8 *)a2 + 96);
      if (v36 == 255)
      {
        v42 = *v35;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v42;
      }
      else
      {
        v37 = *v35;
        sub_3D47C(*v35, *((_BYTE *)a2 + 96));
        a1[11] = v37;
        *((_BYTE *)a1 + 96) = v36;
      }
      v43 = (id *)(a2 + 13);
      v44 = *((unsigned __int8 *)a2 + 112);
      if (v44 == 255)
      {
        v50 = *v43;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v50;
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, *((_BYTE *)a2 + 112));
        a1[13] = v45;
        *((_BYTE *)a1 + 112) = v44;
      }
      v51 = (id *)(a2 + 15);
      v52 = *((unsigned __int8 *)a2 + 128);
      if (v52 == 255)
      {
        v58 = *v51;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v58;
      }
      else
      {
        v53 = *v51;
        sub_3D47C(*v51, *((_BYTE *)a2 + 128));
        a1[15] = v53;
        *((_BYTE *)a1 + 128) = v52;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v59 = (int *)type metadata accessor for ArtworkModel(0);
      v60 = v59[11];
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      v64 = v59[12];
      v65 = (_QWORD *)((char *)a1 + v64);
      v66 = (_QWORD *)((char *)a2 + v64);
      *v65 = *v66;
      v65[1] = v66[1];
      *((_BYTE *)a1 + v59[13]) = *((_BYTE *)a2 + v59[13]);
      *((_BYTE *)a1 + v59[14]) = *((_BYTE *)a2 + v59[14]);
      *((_BYTE *)a1 + v59[15]) = *((_BYTE *)a2 + v59[15]);
      v67 = v59[16];
      v68 = (_QWORD *)((char *)a1 + v67);
      v69 = (_QWORD *)((char *)a2 + v67);
      *v68 = *v69;
      v68[1] = v69[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v70 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v70 + 48));
      swift_retain();
      v71 = a1;
      v72 = v4;
      v73 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v12 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v12 == 255)
      {
        v22 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v22;
      }
      else
      {
        v13 = a2[2];
        v14 = a2[3];
        sub_3D464(v13, v14, v12);
        a1[2] = v13;
        a1[3] = v14;
        *((_BYTE *)a1 + 32) = v12;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v23 = (id *)(a2 + 7);
      v24 = *((unsigned __int8 *)a2 + 64);
      if (v24 == 255)
      {
        v30 = *v23;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v30;
      }
      else
      {
        v25 = *v23;
        sub_3D47C(*v23, *((_BYTE *)a2 + 64));
        a1[7] = v25;
        *((_BYTE *)a1 + 64) = v24;
      }
      v31 = (id *)(a2 + 9);
      v32 = *((unsigned __int8 *)a2 + 80);
      if (v32 == 255)
      {
        v38 = *v31;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v38;
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, *((_BYTE *)a2 + 80));
        a1[9] = v33;
        *((_BYTE *)a1 + 80) = v32;
      }
      v39 = (id *)(a2 + 11);
      v40 = *((unsigned __int8 *)a2 + 96);
      if (v40 == 255)
      {
        v46 = *v39;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v46;
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, *((_BYTE *)a2 + 96));
        a1[11] = v41;
        *((_BYTE *)a1 + 96) = v40;
      }
      v47 = (id *)(a2 + 13);
      v48 = *((unsigned __int8 *)a2 + 112);
      if (v48 == 255)
      {
        v54 = *v47;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v54;
      }
      else
      {
        v49 = *v47;
        sub_3D47C(*v47, *((_BYTE *)a2 + 112));
        a1[13] = v49;
        *((_BYTE *)a1 + 112) = v48;
      }
      v55 = (id *)(a2 + 15);
      v56 = *((unsigned __int8 *)a2 + 128);
      if (v56 == 255)
      {
        v74 = *v55;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v74;
      }
      else
      {
        v57 = *v55;
        sub_3D47C(*v55, *((_BYTE *)a2 + 128));
        a1[15] = v57;
        *((_BYTE *)a1 + 128) = v56;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v75 = (int *)type metadata accessor for ArtworkModel(0);
      v76 = v75[11];
      v77 = (char *)a1 + v76;
      v78 = (char *)a2 + v76;
      v79 = type metadata accessor for ArtworkCrop(0);
      v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
      v155(v77, v78, v79);
      v80 = v75[12];
      v81 = (_QWORD *)((char *)a1 + v80);
      v82 = (_QWORD *)((char *)a2 + v80);
      *v81 = *v82;
      v81[1] = v82[1];
      *((_BYTE *)a1 + v75[13]) = *((_BYTE *)a2 + v75[13]);
      *((_BYTE *)a1 + v75[14]) = *((_BYTE *)a2 + v75[14]);
      *((_BYTE *)a1 + v75[15]) = *((_BYTE *)a2 + v75[15]);
      v83 = v75[16];
      v84 = (_QWORD *)((char *)a1 + v83);
      v85 = (_QWORD *)((char *)a2 + v83);
      *v84 = *v85;
      v84[1] = v85[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v86 = *(int *)(v154 + 48);
      v87 = (char *)a1 + v86;
      v88 = (char *)a2 + v86;
      *(_QWORD *)v87 = *(_QWORD *)((char *)a2 + v86);
      *((_QWORD *)v87 + 1) = *(_QWORD *)((char *)a2 + v86 + 8);
      v89 = *((unsigned __int8 *)a2 + v86 + 32);
      swift_bridgeObjectRetain();
      if (v89 == 255)
      {
        v93 = *((_OWORD *)v88 + 1);
        v87[32] = v88[32];
        *((_OWORD *)v87 + 1) = v93;
      }
      else
      {
        v90 = v4;
        v91 = *((_QWORD *)v88 + 2);
        v92 = *((_QWORD *)v88 + 3);
        sub_3D464(v91, v92, v89);
        *((_QWORD *)v87 + 2) = v91;
        *((_QWORD *)v87 + 3) = v92;
        v4 = v90;
        v87[32] = v89;
      }
      *((_QWORD *)v87 + 5) = *((_QWORD *)v88 + 5);
      *((_QWORD *)v87 + 6) = *((_QWORD *)v88 + 6);
      v94 = (id *)(v88 + 56);
      v95 = v88[64];
      if (v95 == 255)
      {
        v97 = *v94;
        v87[64] = v88[64];
        *((_QWORD *)v87 + 7) = v97;
      }
      else
      {
        v96 = *v94;
        sub_3D47C(*v94, v88[64]);
        *((_QWORD *)v87 + 7) = v96;
        v87[64] = v95;
      }
      v98 = (id *)(v88 + 72);
      v99 = v88[80];
      if (v99 == 255)
      {
        v101 = *v98;
        v87[80] = v88[80];
        *((_QWORD *)v87 + 9) = v101;
      }
      else
      {
        v100 = *v98;
        sub_3D47C(*v98, v88[80]);
        *((_QWORD *)v87 + 9) = v100;
        v87[80] = v99;
      }
      v102 = (id *)(v88 + 88);
      v103 = v88[96];
      if (v103 == 255)
      {
        v105 = *v102;
        v87[96] = v88[96];
        *((_QWORD *)v87 + 11) = v105;
      }
      else
      {
        v104 = *v102;
        sub_3D47C(*v102, v88[96]);
        *((_QWORD *)v87 + 11) = v104;
        v87[96] = v103;
      }
      v106 = (id *)(v88 + 104);
      v107 = v88[112];
      if (v107 == 255)
      {
        v109 = *v106;
        v87[112] = v88[112];
        *((_QWORD *)v87 + 13) = v109;
      }
      else
      {
        v108 = *v106;
        sub_3D47C(*v106, v88[112]);
        *((_QWORD *)v87 + 13) = v108;
        v87[112] = v107;
      }
      v110 = (id *)(v88 + 120);
      v111 = v88[128];
      if (v111 == 255)
      {
        v113 = *v110;
        v87[128] = v88[128];
        *((_QWORD *)v87 + 15) = v113;
      }
      else
      {
        v112 = *v110;
        sub_3D47C(*v110, v88[128]);
        *((_QWORD *)v87 + 15) = v112;
        v87[128] = v111;
      }
      v87[129] = v88[129];
      v155(&v87[v75[11]], &v88[v75[11]], v79);
      v114 = v75[12];
      v115 = &v87[v114];
      v116 = &v88[v114];
      *(_QWORD *)v115 = *(_QWORD *)v116;
      *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
      v87[v75[13]] = v88[v75[13]];
      v87[v75[14]] = v88[v75[14]];
      v87[v75[15]] = v88[v75[15]];
      v117 = v75[16];
      v118 = &v87[v117];
      v119 = &v88[v117];
      *(_QWORD *)v118 = *(_QWORD *)v119;
      *((_QWORD *)v118 + 1) = *((_QWORD *)v119 + 1);
      *(_QWORD *)((char *)a1 + *(int *)(v154 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v154 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v71 = a1;
      v72 = v4;
      v73 = 0;
    }
    swift_storeEnumTagMultiPayload(v71, v72, v73);
  }
  return a1;
}

_OWORD *initializeWithTake for HeroBackground(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
  if (EnumCaseMultiPayload == 2)
  {
    v16 = (int *)type metadata accessor for ArtworkModel(0);
    v17 = *((_QWORD *)v16 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(a2, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v31 = v16[11];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)((char *)a1 + v16[12]) = *(_OWORD *)((char *)a2 + v16[12]);
      *((_BYTE *)a1 + v16[13]) = *((_BYTE *)a2 + v16[13]);
      *((_BYTE *)a1 + v16[14]) = *((_BYTE *)a2 + v16[14]);
      *((_BYTE *)a1 + v16[15]) = *((_BYTE *)a2 + v16[15]);
      *(_OWORD *)((char *)a1 + v16[16]) = *(_OWORD *)((char *)a2 + v16[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v35 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v35 + 48));
    v13 = a1;
    v14 = v4;
    v15 = 2;
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = (int *)type metadata accessor for ArtworkModel(0);
      v8 = v7[11];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
      *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
      *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
      v13 = a1;
      v14 = v4;
      v15 = 1;
    }
    else
    {
      v19 = (int *)type metadata accessor for ArtworkModel(0);
      v20 = v19[11];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for ArtworkCrop(0);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24(v21, v22, v23);
      *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
      *((_BYTE *)a1 + v19[13]) = *((_BYTE *)a2 + v19[13]);
      *((_BYTE *)a1 + v19[14]) = *((_BYTE *)a2 + v19[14]);
      *((_BYTE *)a1 + v19[15]) = *((_BYTE *)a2 + v19[15]);
      *(_OWORD *)((char *)a1 + v19[16]) = *(_OWORD *)((char *)a2 + v19[16]);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v26 = *(int *)(v25 + 48);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = *(_OWORD *)((char *)a2 + v26 + 16);
      *(_OWORD *)v27 = *(_OWORD *)((char *)a2 + v26);
      *((_OWORD *)v27 + 1) = v29;
      v27[32] = *((_BYTE *)a2 + v26 + 32);
      *(_OWORD *)(v27 + 40) = *(_OWORD *)((char *)a2 + v26 + 40);
      *((_QWORD *)v27 + 7) = *(_QWORD *)((char *)a2 + v26 + 56);
      v27[64] = *((_BYTE *)a2 + v26 + 64);
      *(_OWORD *)(v27 + 113) = *(_OWORD *)((char *)a2 + v26 + 113);
      *(_OWORD *)(v27 + 104) = *(_OWORD *)((char *)a2 + v26 + 104);
      *(_OWORD *)(v27 + 88) = *(_OWORD *)((char *)a2 + v26 + 88);
      *(_OWORD *)(v27 + 72) = *(_OWORD *)((char *)a2 + v26 + 72);
      v27[129] = *((_BYTE *)a2 + v26 + 129);
      v24((char *)a1 + v26 + v19[11], (char *)a2 + v26 + v19[11], v23);
      *(_OWORD *)&v27[v19[12]] = *(_OWORD *)&v28[v19[12]];
      v27[v19[13]] = v28[v19[13]];
      v27[v19[14]] = v28[v19[14]];
      v27[v19[15]] = v28[v19[15]];
      *(_OWORD *)&v27[v19[16]] = *(_OWORD *)&v28[v19[16]];
      *(_QWORD *)((char *)a1 + *(int *)(v25 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 64));
      v13 = a1;
      v14 = v4;
      v15 = 0;
    }
  }
  swift_storeEnumTagMultiPayload(v13, v14, v15);
  return a1;
}

_OWORD *assignWithTake for HeroBackground(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    v4 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v4);
    if (EnumCaseMultiPayload == 2)
    {
      v16 = (int *)type metadata accessor for ArtworkModel(0);
      v17 = *((_QWORD *)v16 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(a2, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v31 = v16[11];
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        *(_OWORD *)((char *)a1 + v16[12]) = *(_OWORD *)((char *)a2 + v16[12]);
        *((_BYTE *)a1 + v16[13]) = *((_BYTE *)a2 + v16[13]);
        *((_BYTE *)a1 + v16[14]) = *((_BYTE *)a2 + v16[14]);
        *((_BYTE *)a1 + v16[15]) = *((_BYTE *)a2 + v16[15]);
        *(_OWORD *)((char *)a1 + v16[16]) = *(_OWORD *)((char *)a2 + v16[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v17 + 56))(a1, 0, 1, v16);
      }
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v35 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v35 + 48));
      v13 = a1;
      v14 = v4;
      v15 = 2;
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        v7 = (int *)type metadata accessor for ArtworkModel(0);
        v8 = v7[11];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)((char *)a2 + v7[12]);
        *((_BYTE *)a1 + v7[13]) = *((_BYTE *)a2 + v7[13]);
        *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
        *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
        *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
        *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
        v13 = a1;
        v14 = v4;
        v15 = 1;
      }
      else
      {
        v19 = (int *)type metadata accessor for ArtworkModel(0);
        v20 = v19[11];
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = type metadata accessor for ArtworkCrop(0);
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v24(v21, v22, v23);
        *(_OWORD *)((char *)a1 + v19[12]) = *(_OWORD *)((char *)a2 + v19[12]);
        *((_BYTE *)a1 + v19[13]) = *((_BYTE *)a2 + v19[13]);
        *((_BYTE *)a1 + v19[14]) = *((_BYTE *)a2 + v19[14]);
        *((_BYTE *)a1 + v19[15]) = *((_BYTE *)a2 + v19[15]);
        *(_OWORD *)((char *)a1 + v19[16]) = *(_OWORD *)((char *)a2 + v19[16]);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
        v26 = *(int *)(v25 + 48);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = *(_OWORD *)((char *)a2 + v26 + 16);
        *(_OWORD *)v27 = *(_OWORD *)((char *)a2 + v26);
        *((_OWORD *)v27 + 1) = v29;
        v27[32] = *((_BYTE *)a2 + v26 + 32);
        *(_OWORD *)(v27 + 40) = *(_OWORD *)((char *)a2 + v26 + 40);
        *((_QWORD *)v27 + 7) = *(_QWORD *)((char *)a2 + v26 + 56);
        v27[64] = *((_BYTE *)a2 + v26 + 64);
        *(_OWORD *)(v27 + 113) = *(_OWORD *)((char *)a2 + v26 + 113);
        *(_OWORD *)(v27 + 104) = *(_OWORD *)((char *)a2 + v26 + 104);
        *(_OWORD *)(v27 + 88) = *(_OWORD *)((char *)a2 + v26 + 88);
        *(_OWORD *)(v27 + 72) = *(_OWORD *)((char *)a2 + v26 + 72);
        v27[129] = *((_BYTE *)a2 + v26 + 129);
        v24((char *)a1 + v26 + v19[11], (char *)a2 + v26 + v19[11], v23);
        *(_OWORD *)&v27[v19[12]] = *(_OWORD *)&v28[v19[12]];
        v27[v19[13]] = v28[v19[13]];
        v27[v19[14]] = v28[v19[14]];
        v27[v19[15]] = v28[v19[15]];
        *(_OWORD *)&v27[v19[16]] = *(_OWORD *)&v28[v19[16]];
        *(_QWORD *)((char *)a1 + *(int *)(v25 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 64));
        v13 = a1;
        v14 = v4;
        v15 = 0;
      }
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_271E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_271EA0);
}

uint64_t sub_271EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_271EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_271EE8);
}

uint64_t sub_271EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_271F28(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for HeroBackgroundVariant(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_271F90@<X0>(int a1@<W0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26)(unsigned __int8 *, _QWORD);
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  unint64_t v29;
  char *v30;
  char *v31;
  int v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);
  char *v34;
  uint64_t v35;
  char *v36;
  unsigned __int8 v37[32];

  v32 = a1;
  v31 = a2;
  v3 = type metadata accessor for LayoutSubview(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C00);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LayoutSubviews(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C49A0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v10;
  v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v33(v12, v2, v9, v14);
  v17 = sub_F1C0(&qword_3C49A8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v34 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v17);
  v18 = &v16[*(int *)(v13 + 36)];
  v19 = sub_F1C0((unint64_t *)&qword_3B7D98, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v20 = *(_QWORD *)v18;
  dispatch thunk of Collection.endIndex.getter(v37, v9, v19);
  if (v20 == *(_QWORD *)v37)
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_3:
    v21(v8, 1, 1, v3);
  }
  else
  {
    v32 = v32;
    while (1)
    {
      v26 = (void (*)(unsigned __int8 *, _QWORD))dispatch thunk of Collection.subscript.read(v37, v18, v9, v19);
      (*(void (**)(char *))(v4 + 16))(v8);
      v26(v37, 0);
      v27 = v34;
      ((void (*)(char *, char *, uint64_t))v33)(v34, v16, v9);
      dispatch thunk of Collection.formIndex(after:)(v18, v9, v19);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v9);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v21(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
        break;
      v28 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v28(v36, v8, v3);
      v29 = sub_272740();
      LayoutSubview.subscript.getter(v37, &type metadata for HeroChinLayout.Piece, &type metadata for HeroChinLayout.Piece, v29);
      if (v37[0] != 2 && ((v37[0] ^ v32) & 1) == 0)
      {
        sub_1459C((uint64_t)v16, &qword_3C49A0);
        v30 = v31;
        v28(v31, v36, v3);
        v22 = v30;
        v23 = 0;
        return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v22, v23, 1, v3);
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v36, v3);
      v25 = *(_QWORD *)v18;
      dispatch thunk of Collection.endIndex.getter(v37, v9, v19);
      if (v25 == *(_QWORD *)v37)
        goto LABEL_3;
    }
  }
  sub_1459C((uint64_t)v16, &qword_3C49A0);
  v22 = v31;
  v23 = 1;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v21)(v22, v23, 1, v3);
}

double sub_2722FC(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t sub_27231C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_272474(a1, a2, a3, a4);
}

uint64_t sub_272328()
{
  return sub_F1C0(&qword_3C4990, (void (*)(uint64_t))type metadata accessor for HeroChinLayout, (uint64_t)&unk_302FB0);
}

unint64_t sub_272358()
{
  unint64_t result;

  result = qword_3C4998;
  if (!qword_3C4998)
  {
    result = swift_getWitnessTable(&unk_3030E8);
    atomic_store(result, (unint64_t *)&qword_3C4998);
  }
  return result;
}

uint64_t sub_27239C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))__chkstk_darwin(v6);
  v11 = (char *)&v14 - v10;
  v9();
  sub_135B90((uint64_t)v8, a2, (uint64_t)v11);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_133078((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_272474(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double MinX;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v32;
  double v33;
  double v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  CGRect v44;
  CGRect v45;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3B2C00);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = type metadata accessor for LayoutSubview(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - v19;
  sub_271F90(1, v13);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    v22 = (uint64_t)v13;
    return sub_1459C(v22, &qword_3B2C00);
  }
  v37 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v37(v20, v13, v14);
  v43 = 0;
  v42 = 0;
  v23 = LayoutSubview.sizeThatFits(_:)(*(_QWORD *)&a3);
  v25 = v24;
  v44.origin.x = a1;
  v44.origin.y = a2;
  v44.size.width = a3;
  v44.size.height = a4;
  MinX = CGRectGetMinX(v44);
  v45.origin.x = a1;
  v45.origin.y = a2;
  v45.size.width = a3;
  v45.size.height = a4;
  v27 = CGRectGetMaxY(v45) - v25;
  v29 = static UnitPoint.topLeading.getter(v28);
  v41 = 0;
  v40 = 0;
  LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v23, 0, *(_QWORD *)&v25, 0, MinX, v27, v29, v30);
  sub_271F90(0, v10);
  if (v21(v10, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v22 = (uint64_t)v10;
    return sub_1459C(v22, &qword_3B2C00);
  }
  v32 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v17, v10, v14);
  v33 = static UnitPoint.topLeading.getter(v32);
  v39 = 0;
  v38 = 0;
  ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double))LayoutSubview.place(at:anchor:proposal:))(*(_QWORD *)&a3, 0, v27 - a2, 0, a1, a2, v33, v34);
  v35 = *(void (**)(char *, uint64_t))(v15 + 8);
  v35(v17, v14);
  return ((uint64_t (*)(char *, uint64_t))v35)(v20, v14);
}

unint64_t sub_272740()
{
  unint64_t result;

  result = qword_3C49B0;
  if (!qword_3C49B0)
  {
    result = swift_getWitnessTable(&unk_303078);
    atomic_store(result, (unint64_t *)&qword_3C49B0);
  }
  return result;
}

uint64_t sub_272784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2727CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_272814()
{
  unint64_t result;

  result = qword_3C49D8;
  if (!qword_3C49D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4838);
    sub_F1C0(&qword_3C49E0, (void (*)(uint64_t))type metadata accessor for HeroSupplementalArtworkView, (uint64_t)&unk_30316C);
    sub_32914(&qword_3C49D0, &qword_3C4850, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C49D8);
  }
  return result;
}

uint64_t sub_2728B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int *v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(type metadata accessor for HeroChinLayout(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v3, v6);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v27 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v0 + v3, 1, v27))
      {
        swift_bridgeObjectRelease();
        v28 = *(unsigned __int8 *)(v5 + 32);
        if (v28 != 255)
          sub_3B5BC(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v28);
        v29 = *(unsigned __int8 *)(v5 + 64);
        if (v29 != 255)
          sub_3D624(*(id *)(v5 + 56), v29);
        v30 = *(unsigned __int8 *)(v5 + 80);
        if (v30 != 255)
          sub_3D624(*(id *)(v5 + 72), v30);
        v31 = *(unsigned __int8 *)(v5 + 96);
        if (v31 != 255)
          sub_3D624(*(id *)(v5 + 88), v31);
        v32 = *(unsigned __int8 *)(v5 + 112);
        if (v32 != 255)
          sub_3D624(*(id *)(v5 + 104), v32);
        v33 = *(unsigned __int8 *)(v5 + 128);
        if (v33 != 255)
          sub_3D624(*(id *)(v5 + 120), v33);
        v34 = v5 + *(int *)(v27 + 44);
        v35 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v36 = qword_3C4878;
      goto LABEL_57;
    case 1:
      swift_bridgeObjectRelease();
      v37 = *(unsigned __int8 *)(v5 + 32);
      if (v37 != 255)
        sub_3B5BC(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v37);
      v38 = *(unsigned __int8 *)(v5 + 64);
      if (v38 != 255)
        sub_3D624(*(id *)(v5 + 56), v38);
      v39 = *(unsigned __int8 *)(v5 + 80);
      if (v39 != 255)
        sub_3D624(*(id *)(v5 + 72), v39);
      v40 = *(unsigned __int8 *)(v5 + 96);
      if (v40 != 255)
        sub_3D624(*(id *)(v5 + 88), v40);
      v41 = *(unsigned __int8 *)(v5 + 112);
      if (v41 != 255)
        sub_3D624(*(id *)(v5 + 104), v41);
      v42 = *(unsigned __int8 *)(v5 + 128);
      if (v42 != 255)
        sub_3D624(*(id *)(v5 + 120), v42);
      v43 = v5 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
      v44 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = &qword_3C4870;
LABEL_57:
      v26 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v36) + 48);
LABEL_58:
      swift_release(*(_QWORD *)(v5 + *v26));
      return swift_deallocObject(v0, v3 + v4, v2 | 7);
    case 0:
      swift_bridgeObjectRelease();
      v8 = *(unsigned __int8 *)(v5 + 32);
      if (v8 != 255)
        sub_3B5BC(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v8);
      v9 = *(unsigned __int8 *)(v5 + 64);
      if (v9 != 255)
        sub_3D624(*(id *)(v5 + 56), v9);
      v10 = *(unsigned __int8 *)(v5 + 80);
      if (v10 != 255)
        sub_3D624(*(id *)(v5 + 72), v10);
      v11 = *(unsigned __int8 *)(v5 + 96);
      if (v11 != 255)
        sub_3D624(*(id *)(v5 + 88), v11);
      v12 = *(unsigned __int8 *)(v5 + 112);
      if (v12 != 255)
        sub_3D624(*(id *)(v5 + 104), v12);
      v13 = *(unsigned __int8 *)(v5 + 128);
      if (v13 != 255)
        sub_3D624(*(id *)(v5 + 120), v13);
      v14 = type metadata accessor for ArtworkModel(0);
      v15 = v5 + *(int *)(v14 + 44);
      v16 = type metadata accessor for ArtworkCrop(0);
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v19 = v5 + *(int *)(v18 + 48);
      swift_bridgeObjectRelease();
      v20 = *(unsigned __int8 *)(v19 + 32);
      if (v20 != 255)
        sub_3B5BC(*(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 24), v20);
      v21 = *(unsigned __int8 *)(v19 + 64);
      if (v21 != 255)
        sub_3D624(*(id *)(v19 + 56), v21);
      v22 = *(unsigned __int8 *)(v19 + 80);
      if (v22 != 255)
        sub_3D624(*(id *)(v19 + 72), v22);
      v23 = *(unsigned __int8 *)(v19 + 96);
      if (v23 != 255)
        sub_3D624(*(id *)(v19 + 88), v23);
      v24 = *(unsigned __int8 *)(v19 + 112);
      if (v24 != 255)
        sub_3D624(*(id *)(v19 + 104), v24);
      v25 = *(unsigned __int8 *)(v19 + 128);
      if (v25 != 255)
        sub_3D624(*(id *)(v19 + 120), v25);
      v17(v19 + *(int *)(v14 + 44), v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (int *)(v18 + 64);
      goto LABEL_58;
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_272CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + 16);
  type metadata accessor for HeroChinLayout(0);
  return sub_26B70C(a1, a2, v7, a3);
}

uint64_t sub_272D2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_27239C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_272D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_272D48);
}

uint64_t sub_272D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for HeroBackgroundVariant);
}

uint64_t sub_272D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_272D60);
}

uint64_t sub_272D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for HeroBackgroundVariant);
}

uint64_t type metadata accessor for HeroSupplementalArtworkView(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C4AD8, (uint64_t)&nominal type descriptor for HeroSupplementalArtworkView);
}

uint64_t sub_272D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2744F4(a1, a2, a3, type metadata accessor for HeroBackgroundVariant);
}

uint64_t sub_272D8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_344E28, 1);
}

uint64_t sub_272D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v64 = a1;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4B10);
  __chkstk_darwin(v65);
  v54 = (uint64_t)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v2);
  v55 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v56 = (uint64_t)&v54 - v5;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4B18);
  __chkstk_darwin(v61);
  v63 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4B20);
  __chkstk_darwin(v58);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4B28);
  __chkstk_darwin(v62);
  v59 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HeroShowArtworkIcon(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4B30);
  __chkstk_darwin(v57);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - v16;
  v18 = type metadata accessor for ArtworkModel(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v54 - v23;
  v25 = type metadata accessor for HeroBackgroundVariant(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14510(v60, (uint64_t)v27, v28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v25);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      swift_release(*(_QWORD *)&v27[*(int *)(v30 + 48)]);
      swift_storeEnumTagMultiPayload(v8, v58, 1);
      v31 = sub_273480();
      v32 = (uint64_t)v59;
      _ConditionalContent<>.init(storage:)(v8, v57, &type metadata for EmptyView, v31, &protocol witness table for EmptyView);
      v33 = v63;
      sub_267BC(v32, v63, &qword_3C4B28);
      swift_storeEnumTagMultiPayload(v33, v61, 0);
      v34 = sub_273414();
      v35 = sub_27351C();
      _ConditionalContent<>.init(storage:)(v33, v62, v65, v34, v35);
      sub_1459C(v32, &qword_3C4B28);
      return sub_145D8((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    else
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      swift_release(*(_QWORD *)&v27[*(int *)(v45 + 48)]);
      v46 = v56;
      sub_15BD4((uint64_t)v27, v56, &qword_3BEB70);
      v47 = v55;
      sub_267BC(v46, v55, &qword_3BEB70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v47, 1, v18) == 1)
      {
        sub_1459C(v47, &qword_3BEB70);
        v48 = type metadata accessor for HeroShowArtworkView(0);
        v49 = v54;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v54, 1, 1, v48);
      }
      else
      {
        sub_14614(v47, (uint64_t)v21);
        v49 = v54;
        sub_14614((uint64_t)v21, v54);
        v50 = type metadata accessor for HeroShowArtworkView(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
      }
      v51 = v63;
      sub_267BC(v49, v63, &qword_3C4B10);
      swift_storeEnumTagMultiPayload(v51, v61, 1);
      v52 = sub_273414();
      v53 = sub_27351C();
      _ConditionalContent<>.init(storage:)(v51, v62, v65, v52, v53);
      sub_1459C(v49, &qword_3C4B10);
      return sub_1459C(v46, &qword_3BEB70);
    }
  }
  else
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v38 = (uint64_t)&v27[*(int *)(v37 + 48)];
    swift_release(*(_QWORD *)&v27[*(int *)(v37 + 64)]);
    sub_14614(v38, (uint64_t)v24);
    sub_14510((uint64_t)v24, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_14510((uint64_t)v12, (uint64_t)v14, type metadata accessor for HeroShowArtworkIcon);
    v39 = v57;
    *(_QWORD *)&v14[*(int *)(v57 + 36)] = 0x3FF0000000000000;
    sub_145D8((uint64_t)v12, type metadata accessor for HeroShowArtworkIcon);
    sub_15BD4((uint64_t)v14, (uint64_t)v17, &qword_3C4B30);
    sub_267BC((uint64_t)v17, (uint64_t)v8, &qword_3C4B30);
    swift_storeEnumTagMultiPayload(v8, v58, 0);
    v40 = sub_273480();
    v41 = (uint64_t)v59;
    _ConditionalContent<>.init(storage:)(v8, v39, &type metadata for EmptyView, v40, &protocol witness table for EmptyView);
    v42 = v63;
    sub_267BC(v41, v63, &qword_3C4B28);
    swift_storeEnumTagMultiPayload(v42, v61, 0);
    v43 = sub_273414();
    v44 = sub_27351C();
    _ConditionalContent<>.init(storage:)(v42, v62, v65, v43, v44);
    sub_1459C(v41, &qword_3C4B28);
    sub_1459C((uint64_t)v17, &qword_3C4B30);
    sub_145D8((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    return sub_145D8((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
}

uint64_t type metadata accessor for HeroShowArtworkIcon(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C4C58, (uint64_t)&nominal type descriptor for HeroShowArtworkIcon);
}

uint64_t type metadata accessor for HeroShowArtworkView(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C4BC8, (uint64_t)&nominal type descriptor for HeroShowArtworkView);
}

unint64_t sub_273414()
{
  unint64_t result;

  result = qword_3C4B38;
  if (!qword_3C4B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4B28);
    sub_273480();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4B38);
  }
  return result;
}

unint64_t sub_273480()
{
  unint64_t result;

  result = qword_3C4B40;
  if (!qword_3C4B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4B30);
    sub_F1C0(&qword_3C4B48, (void (*)(uint64_t))type metadata accessor for HeroShowArtworkIcon, (uint64_t)&unk_303244);
    sub_32914(&qword_3C4B50, &qword_3C4B58, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4B40);
  }
  return result;
}

unint64_t sub_27351C()
{
  unint64_t result;

  result = qword_3C4B60;
  if (!qword_3C4B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4B10);
    sub_F1C0(&qword_3C4B68, (void (*)(uint64_t))type metadata accessor for HeroShowArtworkView, (uint64_t)&unk_3031F4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?);
    atomic_store(result, (unint64_t *)&qword_3C4B60);
  }
  return result;
}

uint64_t sub_2735B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2735BC);
}

uint64_t sub_2735BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
}

uint64_t sub_2735C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2735D4);
}

uint64_t sub_2735D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
}

uint64_t sub_2735E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2744F4(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
}

uint64_t sub_2735EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  int v13;
  id v14;
  id *v15;
  int v16;
  id v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v4 = type metadata accessor for ArtworkModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_3D464(v9, v10, v8);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v12 = (id *)(a2 + 7);
    v13 = *((unsigned __int8 *)a2 + 64);
    if (v13 == 255)
    {
      *(_QWORD *)(a1 + 56) = *v12;
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v14 = *v12;
      sub_3D47C(*v12, *((_BYTE *)a2 + 64));
      *(_QWORD *)(a1 + 56) = v14;
      *(_BYTE *)(a1 + 64) = v13;
    }
    v15 = (id *)(a2 + 9);
    v16 = *((unsigned __int8 *)a2 + 80);
    if (v16 == 255)
    {
      *(_QWORD *)(a1 + 72) = *v15;
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v17 = *v15;
      sub_3D47C(*v15, *((_BYTE *)a2 + 80));
      *(_QWORD *)(a1 + 72) = v17;
      *(_BYTE *)(a1 + 80) = v16;
    }
    v18 = (id *)(a2 + 11);
    v19 = *((unsigned __int8 *)a2 + 96);
    if (v19 == 255)
    {
      *(_QWORD *)(a1 + 88) = *v18;
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v20 = *v18;
      sub_3D47C(*v18, *((_BYTE *)a2 + 96));
      *(_QWORD *)(a1 + 88) = v20;
      *(_BYTE *)(a1 + 96) = v19;
    }
    v21 = (id *)(a2 + 13);
    v22 = *((unsigned __int8 *)a2 + 112);
    if (v22 == 255)
    {
      *(_QWORD *)(a1 + 104) = *v21;
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v23 = *v21;
      sub_3D47C(*v21, *((_BYTE *)a2 + 112));
      *(_QWORD *)(a1 + 104) = v23;
      *(_BYTE *)(a1 + 112) = v22;
    }
    v24 = (id *)(a2 + 15);
    v25 = *((unsigned __int8 *)a2 + 128);
    if (v25 == 255)
    {
      *(_QWORD *)(a1 + 120) = *v24;
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v26 = *v24;
      sub_3D47C(*v24, *((_BYTE *)a2 + 128));
      *(_QWORD *)(a1 + 120) = v26;
      *(_BYTE *)(a1 + 128) = v25;
    }
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    v27 = v6[11];
    v28 = a1 + v27;
    v29 = (uint64_t)a2 + v27;
    v30 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v31 = v6[12];
    v32 = (_QWORD *)(a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(_BYTE *)(a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *(_BYTE *)(a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *(_BYTE *)(a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v35 = v6[16];
    v36 = (_QWORD *)(a1 + v35);
    v37 = (uint64_t *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_27387C(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255)
    sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    sub_3D624(*(id *)(a1 + 56), v3);
  v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255)
    sub_3D624(*(id *)(a1 + 72), v4);
  v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255)
    sub_3D624(*(id *)(a1 + 88), v5);
  v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255)
    sub_3D624(*(id *)(a1 + 104), v6);
  v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255)
    sub_3D624(*(id *)(a1 + 120), v7);
  v8 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
  v9 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_27396C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  int v9;
  id v10;
  id *v11;
  int v12;
  id v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_3D464(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = (id *)(a2 + 56);
  v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v8;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v10 = *v8;
    sub_3D47C(*v8, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = v9;
  }
  v11 = (id *)(a2 + 72);
  v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v11;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v13 = *v11;
    sub_3D47C(*v11, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v13;
    *(_BYTE *)(a1 + 80) = v12;
  }
  v14 = (id *)(a2 + 88);
  v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v14;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v16 = *v14;
    sub_3D47C(*v14, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v16;
    *(_BYTE *)(a1 + 96) = v15;
  }
  v17 = (id *)(a2 + 104);
  v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v17;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v19 = *v17;
    sub_3D47C(*v17, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v19;
    *(_BYTE *)(a1 + 112) = v18;
  }
  v20 = (id *)(a2 + 120);
  v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v20;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v22 = *v20;
    sub_3D47C(*v20, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v22;
    *(_BYTE *)(a1 + 128) = v21;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v23 = (int *)type metadata accessor for ArtworkModel(0);
  v24 = v23[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  v28 = v23[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_BYTE *)(a1 + v23[13]) = *(_BYTE *)(a2 + v23[13]);
  *(_BYTE *)(a1 + v23[14]) = *(_BYTE *)(a2 + v23[14]);
  *(_BYTE *)(a1 + v23[15]) = *(_BYTE *)(a2 + v23[15]);
  v32 = v23[16];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_273BD0(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  id *v16;
  id *v17;
  int v18;
  id v19;
  void *v20;
  char v21;
  id v22;
  char v23;
  id v24;
  id *v25;
  id *v26;
  int v27;
  id v28;
  void *v29;
  char v30;
  id v31;
  char v32;
  id v33;
  id *v34;
  id *v35;
  int v36;
  id v37;
  void *v38;
  char v39;
  id v40;
  char v41;
  id v42;
  id *v43;
  id *v44;
  int v45;
  id v46;
  void *v47;
  char v48;
  id v49;
  char v50;
  id v51;
  id *v52;
  id *v53;
  int v54;
  id v55;
  void *v56;
  char v57;
  id v58;
  char v59;
  id v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v4 = v15;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_3D464(v12, v13, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_3E43C(a1 + 16);
    v14 = *(_BYTE *)(a2 + 32);
    *v4 = *v5;
    *(_BYTE *)(a1 + 32) = v14;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    sub_3D464(v7, v8, *(_BYTE *)(a2 + 32));
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    v11 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v6;
    sub_3B5BC(v9, v10, v11);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v16 = (id *)(a1 + 56);
  v17 = (id *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      v24 = *v17;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v16 = v24;
    }
    else
    {
      v22 = *v17;
      sub_3D47C(*v17, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v22;
      *(_BYTE *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_3E470(a1 + 56);
    v23 = *(_BYTE *)(a2 + 64);
    *v16 = *v17;
    *(_BYTE *)(a1 + 64) = v23;
  }
  else
  {
    v19 = *v17;
    sub_3D47C(*v17, *(_BYTE *)(a2 + 64));
    v20 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v19;
    v21 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v18;
    sub_3D624(v20, v21);
  }
  v25 = (id *)(a1 + 72);
  v26 = (id *)(a2 + 72);
  v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      v33 = *v26;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v25 = v33;
    }
    else
    {
      v31 = *v26;
      sub_3D47C(*v26, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v31;
      *(_BYTE *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_3E470(a1 + 72);
    v32 = *(_BYTE *)(a2 + 80);
    *v25 = *v26;
    *(_BYTE *)(a1 + 80) = v32;
  }
  else
  {
    v28 = *v26;
    sub_3D47C(*v26, *(_BYTE *)(a2 + 80));
    v29 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v28;
    v30 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v27;
    sub_3D624(v29, v30);
  }
  v34 = (id *)(a1 + 88);
  v35 = (id *)(a2 + 88);
  v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      v42 = *v35;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v34 = v42;
    }
    else
    {
      v40 = *v35;
      sub_3D47C(*v35, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v40;
      *(_BYTE *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_3E470(a1 + 88);
    v41 = *(_BYTE *)(a2 + 96);
    *v34 = *v35;
    *(_BYTE *)(a1 + 96) = v41;
  }
  else
  {
    v37 = *v35;
    sub_3D47C(*v35, *(_BYTE *)(a2 + 96));
    v38 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v37;
    v39 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v36;
    sub_3D624(v38, v39);
  }
  v43 = (id *)(a1 + 104);
  v44 = (id *)(a2 + 104);
  v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      v51 = *v44;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v43 = v51;
    }
    else
    {
      v49 = *v44;
      sub_3D47C(*v44, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v49;
      *(_BYTE *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_3E470(a1 + 104);
    v50 = *(_BYTE *)(a2 + 112);
    *v43 = *v44;
    *(_BYTE *)(a1 + 112) = v50;
  }
  else
  {
    v46 = *v44;
    sub_3D47C(*v44, *(_BYTE *)(a2 + 112));
    v47 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v46;
    v48 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v45;
    sub_3D624(v47, v48);
  }
  v52 = (id *)(a1 + 120);
  v53 = (id *)(a2 + 120);
  v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      v60 = *v53;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v52 = v60;
    }
    else
    {
      v58 = *v53;
      sub_3D47C(*v53, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v58;
      *(_BYTE *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_3E470(a1 + 120);
    v59 = *(_BYTE *)(a2 + 128);
    *v52 = *v53;
    *(_BYTE *)(a1 + 128) = v59;
  }
  else
  {
    v55 = *v53;
    sub_3D47C(*v53, *(_BYTE *)(a2 + 128));
    v56 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v55;
    v57 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v54;
    sub_3D624(v56, v57);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v61 = (int *)type metadata accessor for ArtworkModel(0);
  v62 = v61[11];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  v66 = v61[12];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v61[13]) = *(_BYTE *)(a2 + v61[13]);
  *(_BYTE *)(a1 + v61[14]) = *(_BYTE *)(a2 + v61[14]);
  *(_BYTE *)(a1 + v61[15]) = *(_BYTE *)(a2 + v61[15]);
  v69 = v61[16];
  v70 = (_QWORD *)(a1 + v69);
  v71 = (_QWORD *)(a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_274088(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v5 = (int *)type metadata accessor for ArtworkModel(0);
  v6 = v5[11];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  return a1;
}

uint64_t sub_274180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  int v12;
  void *v13;
  _QWORD *v14;
  int v15;
  int v16;
  void *v17;
  _QWORD *v18;
  int v19;
  int v20;
  void *v21;
  _QWORD *v22;
  int v23;
  int v24;
  void *v25;
  _QWORD *v26;
  int v27;
  int v28;
  void *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(_BYTE *)(a1 + 32) = v7;
      sub_3B5BC(v8, v9, v6);
      goto LABEL_6;
    }
    sub_3E43C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      v13 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v10;
      *(_BYTE *)(a1 + 64) = v12;
      sub_3D624(v13, v11);
      goto LABEL_11;
    }
    sub_3E470(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v14 = (_QWORD *)(a2 + 72);
  v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      v17 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v14;
      *(_BYTE *)(a1 + 80) = v16;
      sub_3D624(v17, v15);
      goto LABEL_16;
    }
    sub_3E470(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v14;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v18 = (_QWORD *)(a2 + 88);
  v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      v21 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v18;
      *(_BYTE *)(a1 + 96) = v20;
      sub_3D624(v21, v19);
      goto LABEL_21;
    }
    sub_3E470(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v18;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v22 = (_QWORD *)(a2 + 104);
  v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      v25 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v22;
      *(_BYTE *)(a1 + 112) = v24;
      sub_3D624(v25, v23);
      goto LABEL_26;
    }
    sub_3E470(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v22;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v26 = (_QWORD *)(a2 + 120);
  v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 == 255)
  {
LABEL_30:
    *(_QWORD *)(a1 + 120) = *v26;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    goto LABEL_31;
  }
  v28 = *(unsigned __int8 *)(a2 + 128);
  if (v28 == 255)
  {
    sub_3E470(a1 + 120);
    goto LABEL_30;
  }
  v29 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *v26;
  *(_BYTE *)(a1 + 128) = v28;
  sub_3D624(v29, v27);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v30 = (int *)type metadata accessor for ArtworkModel(0);
  v31 = v30[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = v30[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v30[13]) = *(_BYTE *)(a2 + v30[13]);
  *(_BYTE *)(a1 + v30[14]) = *(_BYTE *)(a2 + v30[14]);
  *(_BYTE *)(a1 + v30[15]) = *(_BYTE *)(a2 + v30[15]);
  v40 = v30[16];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_274448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_274454);
}

uint64_t sub_274454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_27449C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2744A8);
}

uint64_t sub_2744A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_2744F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v7, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_274560()
{
  unint64_t result;

  result = qword_3C4C90;
  if (!qword_3C4C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4C98);
    sub_273414();
    sub_27351C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4C90);
  }
  return result;
}

uint64_t sub_2745CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_344E78, 1);
}

uint64_t sub_2745DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;

  v2 = v1;
  v47 = a1;
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3C4CA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v43);
  *(_QWORD *)&v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4CA8);
  __chkstk_darwin(v44);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4CB0);
  __chkstk_darwin(v45);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14510(v2, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  v14 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  if (qword_3B0250 != -1)
    swift_once(&qword_3B0250, sub_274A58);
  v15 = xmmword_3C49F0;
  v16 = (int *)type metadata accessor for Artwork.Configuration(0);
  v17 = &v9[v16[7]];
  v18 = type metadata accessor for CropCode(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v20 = static Alignment.top.getter(v19);
  v21 = &v9[v16[5]];
  *(_OWORD *)v21 = v15;
  v21[16] = 0;
  v22 = (uint64_t *)&v9[v16[6]];
  *v22 = v20;
  v22[1] = v23;
  v9[v16[8]] = 1;
  v24 = &v9[*(int *)(v7 + 20)];
  *(_QWORD *)v24 = sub_2AA724;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 0;
  if (qword_3B0258 != -1)
    swift_once(&qword_3B0258, sub_274A70);
  v25 = __swift_project_value_buffer(v43, (uint64_t)qword_3C4A00);
  v26 = v46;
  v27 = sub_14510(v25, v46, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v28 = static Color.black.getter(v27);
  v29 = Color.opacity(_:)(0.12);
  swift_release(v28);
  sub_14510(v26, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v30 = &v5[v3[9]];
  *(_QWORD *)v30 = v29;
  *(_OWORD *)(v30 + 8) = xmmword_303120;
  *((_QWORD *)v30 + 3) = 0x4000000000000000;
  v31 = &v5[v3[10]];
  *(_QWORD *)v31 = swift_getKeyPath(&unk_303298);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  v33 = &v5[v3[11]];
  *(_QWORD *)v33 = swift_getKeyPath(&unk_3032C8);
  v33[8] = 0;
  sub_14510((uint64_t)v9, (uint64_t)v11, type metadata accessor for Artwork);
  sub_15BD4((uint64_t)v5, (uint64_t)&v11[*(int *)(v44 + 36)], &qword_3C4CA0);
  sub_145D8(v26, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v34 = sub_145D8((uint64_t)v9, type metadata accessor for Artwork);
  if (qword_3B0260 != -1)
    v34 = swift_once(&qword_3B0260, sub_274A7C);
  v46 = xmmword_3C4A18;
  v35 = xmmword_3C4A28;
  v36 = static Edge.Set.all.getter(v34);
  sub_267BC((uint64_t)v11, (uint64_t)v13, &qword_3C4CA8);
  v37 = &v13[*(int *)(v45 + 36)];
  *v37 = v36;
  *(_OWORD *)(v37 + 8) = v46;
  *(_OWORD *)(v37 + 24) = v35;
  v37[40] = 0;
  v38 = sub_1459C((uint64_t)v11, &qword_3C4CA8);
  v39 = static Alignment.bottomLeading.getter(v38);
  sub_278CFC(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v47, 0.0, 1, INFINITY, 0, v39, v40);
  return sub_1459C((uint64_t)v13, &qword_3C4CB0);
}

int64x2_t sub_274A58()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_3C49F0 = (__int128)result;
  return result;
}

double sub_274A70(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_274FD4(a1, qword_3C4A00).n128_u64[0];
  return result;
}

double sub_274A7C()
{
  double result;

  if (qword_3B0220 != -1)
    swift_once(&qword_3B0220, sub_2688C0);
  *(_QWORD *)&xmmword_3C4A18 = 0;
  *((_QWORD *)&xmmword_3C4A18 + 1) = qword_3C45F0;
  result = 10.0;
  xmmword_3C4A28 = xmmword_303130;
  return result;
}

uint64_t sub_274ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v46 = a1;
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3C4CA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v42);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4CA8);
  __chkstk_darwin(v43);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4CB8);
  __chkstk_darwin(v44);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4CC0);
  __chkstk_darwin(v45);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14510(v2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  v17 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
  v18 = (int *)type metadata accessor for Artwork.Configuration(0);
  v19 = &v10[v18[7]];
  v20 = type metadata accessor for CropCode(0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v22 = static Alignment.top.getter(v21);
  v23 = &v10[v18[5]];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 2;
  v24 = (uint64_t *)&v10[v18[6]];
  *v24 = v22;
  v24[1] = v25;
  v10[v18[8]] = 1;
  v26 = &v10[*(int *)(v8 + 20)];
  *(_QWORD *)v26 = sub_2AA724;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 0;
  if (qword_3B0268 != -1)
    swift_once(&qword_3B0268, sub_274FC8);
  v27 = __swift_project_value_buffer(v42, (uint64_t)qword_3C4A38);
  v28 = sub_14510(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v29 = static Color.black.getter(v28);
  v30 = Color.opacity(_:)(0.12);
  swift_release(v29);
  sub_14510((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v31 = &v5[v3[9]];
  *(_QWORD *)v31 = v30;
  *(_OWORD *)(v31 + 8) = xmmword_303120;
  *((_QWORD *)v31 + 3) = 0x4000000000000000;
  v32 = &v5[v3[10]];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_303298);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BBA70);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v5[v3[11]];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_3032C8);
  v34[8] = 0;
  sub_14510((uint64_t)v10, (uint64_t)v12, type metadata accessor for Artwork);
  sub_15BD4((uint64_t)v5, (uint64_t)&v12[*(int *)(v43 + 36)], &qword_3C4CA0);
  sub_145D8((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_145D8((uint64_t)v10, type metadata accessor for Artwork);
  sub_267BC((uint64_t)v12, (uint64_t)v14, &qword_3C4CA8);
  v35 = &v14[*(int *)(v44 + 36)];
  *(_QWORD *)v35 = 0;
  *((_WORD *)v35 + 4) = 1;
  v36 = sub_1459C((uint64_t)v12, &qword_3C4CA8);
  if (qword_3B0270 != -1)
    v36 = swift_once(&qword_3B0270, sub_275058);
  v44 = xmmword_3C4A50;
  v37 = qword_3C4A60;
  v38 = qword_3C4A68;
  v39 = static Edge.Set.all.getter(v36);
  sub_267BC((uint64_t)v14, (uint64_t)v16, &qword_3C4CB8);
  v40 = &v16[*(int *)(v45 + 36)];
  *v40 = v39;
  *(_OWORD *)(v40 + 8) = v44;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v38;
  v40[40] = 0;
  sub_1459C((uint64_t)v14, &qword_3C4CB8);
  if (qword_3B0278 != -1)
    swift_once(&qword_3B0278, sub_2750B8);
  sub_278F20(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v46, 0.0, 1, INFINITY, 0, qword_3C4A70, *(uint64_t *)algn_3C4A78);
  return sub_1459C((uint64_t)v16, &qword_3C4CC0);
}

double sub_274FC8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = sub_274FD4(a1, qword_3C4A38).n128_u64[0];
  return result;
}

__n128 sub_274FD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  __n128 *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = type metadata accessor for RoundedRectangle(0);
  __swift_allocate_value_buffer(v3, a2);
  v4 = (__n128 *)__swift_project_value_buffer(v3, (uint64_t)a2);
  v5 = (char *)v4 + *(int *)(v3 + 20);
  v6 = enum case for RoundedCornerStyle.continuous(_:);
  v7 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  __asm { FMOV            V0.2D, #5.0 }
  *v4 = result;
  return result;
}

double sub_275058()
{
  double result;

  if (qword_3B0220 != -1)
    swift_once(&qword_3B0220, sub_2688C0);
  result = *(double *)&qword_3C45F0;
  *(_QWORD *)&xmmword_3C4A50 = 0x403C000000000000;
  *((_QWORD *)&xmmword_3C4A50 + 1) = qword_3C45F0;
  qword_3C4A60 = 0x4032000000000000;
  qword_3C4A68 = qword_3C45F0;
  return result;
}

uint64_t sub_2750B8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = static Alignment.center.getter(a1);
  qword_3C4A70 = result;
  *(_QWORD *)algn_3C4A78 = v2;
  return result;
}

uint64_t sub_2750DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_344E50, 1);
}

unint64_t sub_275100()
{
  unint64_t result;

  result = qword_3C4CC8;
  if (!qword_3C4CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4CD0);
    sub_27516C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4CC8);
  }
  return result;
}

unint64_t sub_27516C()
{
  unint64_t result;

  result = qword_3C4CD8;
  if (!qword_3C4CD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4CB0);
    sub_2751D8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4CD8);
  }
  return result;
}

unint64_t sub_2751D8()
{
  unint64_t result;

  result = qword_3C4CE0;
  if (!qword_3C4CE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4CA8);
    sub_F1C0(&qword_3C4CE8, (void (*)(uint64_t))type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    sub_32914(&qword_3C4CF0, &qword_3C4CA0, (uint64_t)&protocol conformance descriptor for ArtworkStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4CE0);
  }
  return result;
}

unint64_t sub_275278()
{
  unint64_t result;

  result = qword_3C4CF8;
  if (!qword_3C4CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4D00);
    sub_2752E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4CF8);
  }
  return result;
}

unint64_t sub_2752E4()
{
  unint64_t result;

  result = qword_3C4D08;
  if (!qword_3C4D08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4CC0);
    sub_275350();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4D08);
  }
  return result;
}

unint64_t sub_275350()
{
  unint64_t result;

  result = qword_3C4D10;
  if (!qword_3C4D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4CB8);
    sub_2751D8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4D10);
  }
  return result;
}

uint64_t ThinClientUnbookmarkEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_2753D4, 0, 0);
}

uint64_t sub_2753D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t **v2;

  v1 = UnbookmarkEpisodeIntent.episodeIdentifiers.getter();
  v0[4] = v1;
  v2 = (uint64_t **)swift_task_alloc(dword_3BE8FC);
  v0[5] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_230C8;
  return ThinClientToggleBookmarkEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(0, v1, v0[3]);
}

uint64_t sub_275438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_275454, 0, 0);
}

uint64_t sub_275454()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t **v2;

  v1 = UnbookmarkEpisodeIntent.episodeIdentifiers.getter();
  v0[5] = v1;
  v2 = (uint64_t **)swift_task_alloc(dword_3BE8FC);
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_23254;
  return ThinClientToggleBookmarkEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(0, v1, v0[4]);
}

ValueMetadata *type metadata accessor for ThinClientUnbookmarkEpisodeIntentImplementation()
{
  return &type metadata for ThinClientUnbookmarkEpisodeIntentImplementation;
}

uint64_t HeroBackgroundVariant.init(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v70 = a2;
  v69 = type metadata accessor for HeroBackgroundVariant(0);
  v3 = __chkstk_darwin(v69);
  v67 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Color.RGBColorSpace(0, v3);
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  v6 = __chkstk_darwin(v5);
  v63 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for JoeColorCandidates(0, v6);
  v71 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v10);
  v66 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - v13;
  __chkstk_darwin(v15);
  v65 = (uint64_t)&v60 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v60 - v21;
  v23 = type metadata accessor for ArtworkModel(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (uint64_t *)((char *)&v60 - v27);
  __chkstk_darwin(v29);
  v31 = (char *)&v60 - v30;
  LegacyEpisodeLockup.dedupedEpisodeArtwork.getter((uint64_t)v22);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v32(v22, 1, v23) == 1)
  {
    sub_59040((uint64_t)v22);
  }
  else
  {
    sub_3C56C((uint64_t)v22, (uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_14554(a1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, (uint64_t)v19);
    if (v32(v19, 1, v23) == 1)
    {
      sub_145D8((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      sub_59040((uint64_t)v19);
    }
    else
    {
      sub_3C56C((uint64_t)v19, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      v33 = *((_QWORD *)v31 + 1);
      v34 = v28[1];
      if ((*(_QWORD *)v31 != *v28 || v33 != v34)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v31, v33, *v28, v34, 0) & 1) == 0
        && *((double *)v31 + 5) > 200.0
        && *((double *)v31 + 6) > 200.0)
      {
        v35 = v65;
        sub_BE440((uint64_t)v31, v65);
        v36 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
        static JoeColorCandidates.all.getter(v36);
        v37 = sub_275F00(v35, (uint64_t)v9);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v68);
        sub_59040(v35);
        if (!v37)
        {
          v38 = v63;
          (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, enum case for Color.RGBColorSpace.sRGB(_:), v62);
          v37 = Color.init(_:white:opacity:)(v38, 0.2, 1.0);
        }
        swift_release(a1);
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
        v40 = v70;
        v41 = v70 + *(int *)(v39 + 48);
        v42 = *(int *)(v39 + 64);
        sub_3C56C((uint64_t)v31, v70, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        sub_3C56C((uint64_t)v28, v41, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
        *(_QWORD *)(v40 + v42) = v37;
        return swift_storeEnumTagMultiPayload(v40, v69, 0);
      }
      sub_145D8((uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      sub_145D8((uint64_t)v31, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
  }
  v44 = v70;
  v45 = v68;
  sub_14554(a1 + OBJC_IVAR____TtC8ShelfKit19LegacyEpisodeLockup_showUberArtwork, (uint64_t)v14);
  if (v32(v14, 1, v23) == 1)
  {
    sub_59040((uint64_t)v14);
    v46 = v69;
    v47 = (uint64_t)v67;
    v48 = v71;
  }
  else
  {
    v49 = (uint64_t)v14;
    v50 = v64;
    sub_3C56C(v49, v64, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v51 = v65;
    sub_BE440(v50, v65);
    v52 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v51, 0, 1, v23);
    static JoeColorCandidates.background.getter(v52);
    v53 = sub_275F00(v51, (uint64_t)v9);
    v48 = v71;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v45);
    sub_59040(v51);
    if (v53)
    {
      swift_release(a1);
      v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4870) + 48);
      sub_3C56C(v50, v44, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      *(_QWORD *)(v44 + v54) = v53;
      return swift_storeEnumTagMultiPayload(v44, v69, 1);
    }
    sub_145D8(v50, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v46 = v69;
    v47 = (uint64_t)v67;
  }
  v55 = v66;
  v56 = sub_14554(a1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, v66);
  static JoeColorCandidates.all.getter(v56);
  v57 = sub_275F00(v55, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v45);
  v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_3C4878) + 48);
  sub_14554(v55, v47);
  if (!v57)
  {
    v59 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, enum case for Color.RGBColorSpace.sRGB(_:), v62);
    v57 = Color.init(_:white:opacity:)(v59, 0.333333333, 1.0);
  }
  swift_release(a1);
  sub_59040(v55);
  *(_QWORD *)(v47 + v58) = v57;
  swift_storeEnumTagMultiPayload(v47, v46, 2);
  return sub_3C56C(v47, v44, type metadata accessor for HeroBackgroundVariant);
}

uint64_t type metadata accessor for HeroBackgroundVariant(uint64_t a1)
{
  uint64_t result;

  result = qword_3C4DA0;
  if (!qword_3C4DA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeroBackgroundVariant);
  return result;
}

uint64_t HeroBackgroundVariant.init(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = a2;
  v4 = type metadata accessor for Color.RGBColorSpace(0, a3);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for HeroBackgroundVariant(0);
  v6 = __chkstk_darwin(v46);
  v45 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for JoeColorCandidates(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v12);
  v44 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - v18;
  v20 = type metadata accessor for ArtworkModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ShowHero(0);
  v25 = *(int *)(v24 + 36);
  v48 = a1;
  sub_14554(a1 + v25, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_59040((uint64_t)v19);
  }
  else
  {
    sub_3C56C((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_BE440((uint64_t)v23, (uint64_t)v16);
    v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    static JoeColorCandidates.background.getter(v26);
    v27 = sub_275F00((uint64_t)v16, (uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_59040((uint64_t)v16);
    if (v27)
    {
      sub_145D8(v48, type metadata accessor for ShowHero);
      v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4870) + 48);
      v29 = v47;
      sub_3C56C((uint64_t)v23, v47, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      *(_QWORD *)(v29 + v28) = v27;
      return swift_storeEnumTagMultiPayload(v29, v46, 1);
    }
    sub_145D8((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v31 = v48;
  v32 = v48 + *(int *)(v24 + 32);
  v33 = v44;
  v34 = sub_14554(v32, v44);
  static JoeColorCandidates.all.getter(v34);
  v35 = sub_275F00(v33, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_3C4878) + 48);
  v37 = v45;
  sub_14554(v33, v45);
  if (!v35)
  {
    v38 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v43, enum case for Color.RGBColorSpace.sRGB(_:), v42);
    v35 = Color.init(_:white:opacity:)(v38, 0.333333333, 1.0);
  }
  sub_145D8(v31, type metadata accessor for ShowHero);
  sub_59040(v33);
  v39 = v46;
  v40 = v47;
  *(_QWORD *)(v37 + v36) = v35;
  swift_storeEnumTagMultiPayload(v37, v39, 2);
  return sub_3C56C(v37, v40, type metadata accessor for HeroBackgroundVariant);
}

id sub_275EC8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  qword_3C4D28 = (uint64_t)result;
  return result;
}

uint64_t sub_275F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v4);
  v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14554(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_59040((uint64_t)v6);
    return 0;
  }
  else
  {
    sub_3C56C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    if (qword_3B0280 != -1)
      swift_once(&qword_3B0280, sub_275EC8);
    v12 = qword_3C4D28;
    v15[3] = type metadata accessor for JoeColorClampBrightnessAlgorithm(0);
    v15[4] = &protocol witness table for JoeColorClampBrightnessAlgorithm;
    __swift_allocate_boxed_opaque_existential_2Tm(v15);
    static JoeColorAlgorithm<>.clampBrightness.getter();
    v11 = ArtworkModel.joeColor(contrasting:using:selecting:)(v12, v15, a2);
    __swift_destroy_boxed_opaque_existential_1(v15);
    if (v11)
      v11 = Color.init(uiColor:)(v11);
    sub_145D8((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroBackgroundVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id *v42;
  int v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id *v48;
  int v49;
  id v50;
  id *v51;
  int v52;
  id v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  id *v91;
  int v92;
  id v93;
  id *v94;
  int v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  id *v114;
  int v115;
  id v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void (*v141)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v142;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = (int *)type metadata accessor for ArtworkModel(0);
      v14 = *((_QWORD *)v13 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v14 + 48))(a2, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        v24 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v24 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        }
        else
        {
          v25 = a2[2];
          v26 = a2[3];
          sub_3D464(v25, v26, v24);
          a1[2] = v25;
          a1[3] = v26;
          *((_BYTE *)a1 + 32) = v24;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v114 = (id *)(a2 + 7);
        v115 = *((unsigned __int8 *)a2 + 64);
        if (v115 == 255)
        {
          a1[7] = (uint64_t)*v114;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        }
        else
        {
          v116 = *v114;
          sub_3D47C(*v114, *((_BYTE *)a2 + 64));
          a1[7] = (uint64_t)v116;
          *((_BYTE *)a1 + 64) = v115;
        }
        v117 = (id *)(a2 + 9);
        v118 = *((unsigned __int8 *)a2 + 80);
        if (v118 == 255)
        {
          a1[9] = (uint64_t)*v117;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        }
        else
        {
          v119 = *v117;
          sub_3D47C(*v117, *((_BYTE *)a2 + 80));
          a1[9] = (uint64_t)v119;
          *((_BYTE *)a1 + 80) = v118;
        }
        v120 = (id *)(a2 + 11);
        v121 = *((unsigned __int8 *)a2 + 96);
        if (v121 == 255)
        {
          a1[11] = (uint64_t)*v120;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        }
        else
        {
          v122 = *v120;
          sub_3D47C(*v120, *((_BYTE *)a2 + 96));
          a1[11] = (uint64_t)v122;
          *((_BYTE *)a1 + 96) = v121;
        }
        v123 = (id *)(a2 + 13);
        v124 = *((unsigned __int8 *)a2 + 112);
        if (v124 == 255)
        {
          a1[13] = (uint64_t)*v123;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        }
        else
        {
          v125 = *v123;
          sub_3D47C(*v123, *((_BYTE *)a2 + 112));
          a1[13] = (uint64_t)v125;
          *((_BYTE *)a1 + 112) = v124;
        }
        v126 = (id *)(a2 + 15);
        v127 = *((unsigned __int8 *)a2 + 128);
        if (v127 == 255)
        {
          a1[15] = (uint64_t)*v126;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        }
        else
        {
          v128 = *v126;
          sub_3D47C(*v126, *((_BYTE *)a2 + 128));
          a1[15] = (uint64_t)v128;
          *((_BYTE *)a1 + 128) = v127;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v129 = v13[11];
        v130 = (char *)a1 + v129;
        v131 = (char *)a2 + v129;
        v132 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
        v133 = v13[12];
        v134 = (uint64_t *)((char *)a1 + v133);
        v135 = (uint64_t *)((char *)a2 + v133);
        v136 = v135[1];
        *v134 = *v135;
        v134[1] = v136;
        *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
        *((_BYTE *)a1 + v13[14]) = *((_BYTE *)a2 + v13[14]);
        *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
        v137 = v13[16];
        v138 = (uint64_t *)((char *)a1 + v137);
        v139 = (uint64_t *)((char *)a2 + v137);
        v140 = v139[1];
        *v138 = *v139;
        v138[1] = v140;
        v141 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v141(a1, 0, 1, v13);
      }
      v142 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(uint64_t *)((char *)a1 + *(int *)(v142 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v142 + 48));
      swift_retain();
      v68 = a1;
      v69 = a3;
      v70 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v10 = a2[2];
        v11 = a2[3];
        sub_3D464(v10, v11, v9);
        a1[2] = v10;
        a1[3] = v11;
        *((_BYTE *)a1 + 32) = v9;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v20 = (id *)(a2 + 7);
      v21 = *((unsigned __int8 *)a2 + 64);
      if (v21 == 255)
      {
        a1[7] = (uint64_t)*v20;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v22 = *v20;
        sub_3D47C(*v20, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v22;
        *((_BYTE *)a1 + 64) = v21;
      }
      v30 = (id *)(a2 + 9);
      v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        a1[9] = (uint64_t)*v30;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v32;
        *((_BYTE *)a1 + 80) = v31;
      }
      v36 = (id *)(a2 + 11);
      v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        a1[11] = (uint64_t)*v36;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v38 = *v36;
        sub_3D47C(*v36, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v38;
        *((_BYTE *)a1 + 96) = v37;
      }
      v42 = (id *)(a2 + 13);
      v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        a1[13] = (uint64_t)*v42;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v44 = *v42;
        sub_3D47C(*v42, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v44;
        *((_BYTE *)a1 + 112) = v43;
      }
      v48 = (id *)(a2 + 15);
      v49 = *((unsigned __int8 *)a2 + 128);
      if (v49 == 255)
      {
        a1[15] = (uint64_t)*v48;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v50 = *v48;
        sub_3D47C(*v48, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v50;
        *((_BYTE *)a1 + 128) = v49;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v54 = (int *)type metadata accessor for ArtworkModel(0);
      v55 = v54[11];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      v58 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
      v59 = v54[12];
      v60 = (uint64_t *)((char *)a1 + v59);
      v61 = (uint64_t *)((char *)a2 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *((_BYTE *)a1 + v54[13]) = *((_BYTE *)a2 + v54[13]);
      *((_BYTE *)a1 + v54[14]) = *((_BYTE *)a2 + v54[14]);
      *((_BYTE *)a1 + v54[15]) = *((_BYTE *)a2 + v54[15]);
      v63 = v54[16];
      v64 = (uint64_t *)((char *)a1 + v63);
      v65 = (uint64_t *)((char *)a2 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(uint64_t *)((char *)a1 + *(int *)(v67 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v67 + 48));
      swift_retain();
      v68 = a1;
      v69 = a3;
      v70 = 1;
    }
    else
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      v17 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v18 = a2[2];
        v19 = a2[3];
        sub_3D464(v18, v19, v17);
        a1[2] = v18;
        a1[3] = v19;
        *((_BYTE *)a1 + 32) = v17;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v27 = (id *)(a2 + 7);
      v28 = *((unsigned __int8 *)a2 + 64);
      if (v28 == 255)
      {
        a1[7] = (uint64_t)*v27;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v29 = *v27;
        sub_3D47C(*v27, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v29;
        *((_BYTE *)a1 + 64) = v28;
      }
      v33 = (id *)(a2 + 9);
      v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        a1[9] = (uint64_t)*v33;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v35;
        *((_BYTE *)a1 + 80) = v34;
      }
      v39 = (id *)(a2 + 11);
      v40 = *((unsigned __int8 *)a2 + 96);
      if (v40 == 255)
      {
        a1[11] = (uint64_t)*v39;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v41 = *v39;
        sub_3D47C(*v39, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v41;
        *((_BYTE *)a1 + 96) = v40;
      }
      v45 = (id *)(a2 + 13);
      v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        a1[13] = (uint64_t)*v45;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v47 = *v45;
        sub_3D47C(*v45, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v47;
        *((_BYTE *)a1 + 112) = v46;
      }
      v51 = (id *)(a2 + 15);
      v52 = *((unsigned __int8 *)a2 + 128);
      if (v52 == 255)
      {
        a1[15] = (uint64_t)*v51;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v53 = *v51;
        sub_3D47C(*v51, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v53;
        *((_BYTE *)a1 + 128) = v52;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v71 = (int *)type metadata accessor for ArtworkModel(0);
      v72 = v71[11];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      v75 = type metadata accessor for ArtworkCrop(0);
      v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
      v145(v73, v74, v75);
      v76 = v71[12];
      v77 = (uint64_t *)((char *)a1 + v76);
      v78 = (uint64_t *)((char *)a2 + v76);
      v79 = v78[1];
      *v77 = *v78;
      v77[1] = v79;
      *((_BYTE *)a1 + v71[13]) = *((_BYTE *)a2 + v71[13]);
      *((_BYTE *)a1 + v71[14]) = *((_BYTE *)a2 + v71[14]);
      *((_BYTE *)a1 + v71[15]) = *((_BYTE *)a2 + v71[15]);
      v80 = v71[16];
      v81 = (uint64_t *)((char *)a1 + v80);
      v82 = (uint64_t *)((char *)a2 + v80);
      v83 = v82[1];
      *v81 = *v82;
      v81[1] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v84 = *(int *)(v144 + 48);
      v85 = (char *)a1 + v84;
      v86 = (char *)a2 + v84;
      v87 = *(uint64_t *)((char *)a2 + v84 + 8);
      *(_QWORD *)v85 = *(uint64_t *)((char *)a2 + v84);
      *((_QWORD *)v85 + 1) = v87;
      v88 = *((unsigned __int8 *)a2 + v84 + 32);
      swift_bridgeObjectRetain();
      if (v88 == 255)
      {
        *((_OWORD *)v85 + 1) = *((_OWORD *)v86 + 1);
        v85[32] = v86[32];
      }
      else
      {
        v89 = *((_QWORD *)v86 + 2);
        v90 = *((_QWORD *)v86 + 3);
        sub_3D464(v89, v90, v88);
        *((_QWORD *)v85 + 2) = v89;
        *((_QWORD *)v85 + 3) = v90;
        v85[32] = v88;
      }
      *(_OWORD *)(v85 + 40) = *(_OWORD *)(v86 + 40);
      v91 = (id *)(v86 + 56);
      v92 = v86[64];
      if (v92 == 255)
      {
        *((_QWORD *)v85 + 7) = *v91;
        v85[64] = v86[64];
      }
      else
      {
        v93 = *v91;
        sub_3D47C(*v91, v86[64]);
        *((_QWORD *)v85 + 7) = v93;
        v85[64] = v92;
      }
      v94 = (id *)(v86 + 72);
      v95 = v86[80];
      if (v95 == 255)
      {
        *((_QWORD *)v85 + 9) = *v94;
        v85[80] = v86[80];
      }
      else
      {
        v96 = *v94;
        sub_3D47C(*v94, v86[80]);
        *((_QWORD *)v85 + 9) = v96;
        v85[80] = v95;
      }
      v97 = (id *)(v86 + 88);
      v98 = v86[96];
      if (v98 == 255)
      {
        *((_QWORD *)v85 + 11) = *v97;
        v85[96] = v86[96];
      }
      else
      {
        v99 = *v97;
        sub_3D47C(*v97, v86[96]);
        *((_QWORD *)v85 + 11) = v99;
        v85[96] = v98;
      }
      v100 = (id *)(v86 + 104);
      v101 = v86[112];
      if (v101 == 255)
      {
        *((_QWORD *)v85 + 13) = *v100;
        v85[112] = v86[112];
      }
      else
      {
        v102 = *v100;
        sub_3D47C(*v100, v86[112]);
        *((_QWORD *)v85 + 13) = v102;
        v85[112] = v101;
      }
      v103 = (id *)(v86 + 120);
      v104 = v86[128];
      if (v104 == 255)
      {
        *((_QWORD *)v85 + 15) = *v103;
        v85[128] = v86[128];
      }
      else
      {
        v105 = *v103;
        sub_3D47C(*v103, v86[128]);
        *((_QWORD *)v85 + 15) = v105;
        v85[128] = v104;
      }
      v85[129] = v86[129];
      v145(&v85[v71[11]], &v86[v71[11]], v75);
      v106 = v71[12];
      v107 = &v85[v106];
      v108 = &v86[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v85[v71[13]] = v86[v71[13]];
      v85[v71[14]] = v86[v71[14]];
      v85[v71[15]] = v86[v71[15]];
      v110 = v71[16];
      v111 = &v85[v110];
      v112 = &v86[v110];
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v113;
      *(uint64_t *)((char *)a1 + *(int *)(v144 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v144 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v68 = a1;
      v69 = a3;
      v70 = 0;
    }
    swift_storeEnumTagMultiPayload(v68, v69, v70);
  }
  return a1;
}

uint64_t destroy for HeroBackgroundVariant(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int *v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v23 = type metadata accessor for ArtworkModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(a1, 1, v23))
    {
      swift_bridgeObjectRelease();
      v24 = *(unsigned __int8 *)(a1 + 32);
      if (v24 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v24);
      v25 = *(unsigned __int8 *)(a1 + 64);
      if (v25 != 255)
        sub_3D624(*(id *)(a1 + 56), v25);
      v26 = *(unsigned __int8 *)(a1 + 80);
      if (v26 != 255)
        sub_3D624(*(id *)(a1 + 72), v26);
      v27 = *(unsigned __int8 *)(a1 + 96);
      if (v27 != 255)
        sub_3D624(*(id *)(a1 + 88), v27);
      v28 = *(unsigned __int8 *)(a1 + 112);
      if (v28 != 255)
        sub_3D624(*(id *)(a1 + 104), v28);
      v29 = *(unsigned __int8 *)(a1 + 128);
      if (v29 != 255)
        sub_3D624(*(id *)(a1 + 120), v29);
      v30 = a1 + *(int *)(v23 + 44);
      v31 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v32 = qword_3C4878;
    goto LABEL_57;
  }
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v33 = *(unsigned __int8 *)(a1 + 32);
    if (v33 != 255)
      sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v33);
    v34 = *(unsigned __int8 *)(a1 + 64);
    if (v34 != 255)
      sub_3D624(*(id *)(a1 + 56), v34);
    v35 = *(unsigned __int8 *)(a1 + 80);
    if (v35 != 255)
      sub_3D624(*(id *)(a1 + 72), v35);
    v36 = *(unsigned __int8 *)(a1 + 96);
    if (v36 != 255)
      sub_3D624(*(id *)(a1 + 88), v36);
    v37 = *(unsigned __int8 *)(a1 + 112);
    if (v37 != 255)
      sub_3D624(*(id *)(a1 + 104), v37);
    v38 = *(unsigned __int8 *)(a1 + 128);
    if (v38 != 255)
      sub_3D624(*(id *)(a1 + 120), v38);
    v39 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
    v40 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = &qword_3C4870;
LABEL_57:
    v22 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v32) + 48);
    return swift_release(*(_QWORD *)(a1 + *v22));
  }
  if ((_DWORD)result)
    return result;
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255)
    sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255)
    sub_3D624(*(id *)(a1 + 56), v5);
  v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255)
    sub_3D624(*(id *)(a1 + 72), v6);
  v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255)
    sub_3D624(*(id *)(a1 + 88), v7);
  v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255)
    sub_3D624(*(id *)(a1 + 104), v8);
  v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255)
    sub_3D624(*(id *)(a1 + 120), v9);
  v10 = type metadata accessor for ArtworkModel(0);
  v11 = a1 + *(int *)(v10 + 44);
  v12 = type metadata accessor for ArtworkCrop(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
  v15 = a1 + *(int *)(v14 + 48);
  swift_bridgeObjectRelease();
  v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16 != 255)
    sub_3B5BC(*(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v16);
  v17 = *(unsigned __int8 *)(v15 + 64);
  if (v17 != 255)
    sub_3D624(*(id *)(v15 + 56), v17);
  v18 = *(unsigned __int8 *)(v15 + 80);
  if (v18 != 255)
    sub_3D624(*(id *)(v15 + 72), v18);
  v19 = *(unsigned __int8 *)(v15 + 96);
  if (v19 != 255)
    sub_3D624(*(id *)(v15 + 88), v19);
  v20 = *(unsigned __int8 *)(v15 + 112);
  if (v20 != 255)
    sub_3D624(*(id *)(v15 + 104), v20);
  v21 = *(unsigned __int8 *)(v15 + 128);
  if (v21 != 255)
    sub_3D624(*(id *)(v15 + 120), v21);
  v13(v15 + *(int *)(v10 + 44), v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = (int *)(v14 + 64);
  return swift_release(*(_QWORD *)(a1 + *v22));
}

_QWORD *initializeWithCopy for HeroBackgroundVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  int v19;
  id v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id *v90;
  int v91;
  id v92;
  id *v93;
  int v94;
  id v95;
  id *v96;
  int v97;
  id v98;
  id *v99;
  int v100;
  id v101;
  id *v102;
  int v103;
  id v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  id *v113;
  int v114;
  id v115;
  id *v116;
  int v117;
  id v118;
  id *v119;
  int v120;
  id v121;
  id *v122;
  int v123;
  id v124;
  id *v125;
  int v126;
  id v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  void (*v140)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v141;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = (int *)type metadata accessor for ArtworkModel(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      v22 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v22 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v23 = a2[2];
        v24 = a2[3];
        sub_3D464(v23, v24, v22);
        a1[2] = v23;
        a1[3] = v24;
        *((_BYTE *)a1 + 32) = v22;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v113 = (id *)(a2 + 7);
      v114 = *((unsigned __int8 *)a2 + 64);
      if (v114 == 255)
      {
        a1[7] = *v113;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v115 = *v113;
        sub_3D47C(*v113, *((_BYTE *)a2 + 64));
        a1[7] = v115;
        *((_BYTE *)a1 + 64) = v114;
      }
      v116 = (id *)(a2 + 9);
      v117 = *((unsigned __int8 *)a2 + 80);
      if (v117 == 255)
      {
        a1[9] = *v116;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v118 = *v116;
        sub_3D47C(*v116, *((_BYTE *)a2 + 80));
        a1[9] = v118;
        *((_BYTE *)a1 + 80) = v117;
      }
      v119 = (id *)(a2 + 11);
      v120 = *((unsigned __int8 *)a2 + 96);
      if (v120 == 255)
      {
        a1[11] = *v119;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v121 = *v119;
        sub_3D47C(*v119, *((_BYTE *)a2 + 96));
        a1[11] = v121;
        *((_BYTE *)a1 + 96) = v120;
      }
      v122 = (id *)(a2 + 13);
      v123 = *((unsigned __int8 *)a2 + 112);
      if (v123 == 255)
      {
        a1[13] = *v122;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v124 = *v122;
        sub_3D47C(*v122, *((_BYTE *)a2 + 112));
        a1[13] = v124;
        *((_BYTE *)a1 + 112) = v123;
      }
      v125 = (id *)(a2 + 15);
      v126 = *((unsigned __int8 *)a2 + 128);
      if (v126 == 255)
      {
        a1[15] = *v125;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v127 = *v125;
        sub_3D47C(*v125, *((_BYTE *)a2 + 128));
        a1[15] = v127;
        *((_BYTE *)a1 + 128) = v126;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v128 = v11[11];
      v129 = (char *)a1 + v128;
      v130 = (char *)a2 + v128;
      v131 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
      v132 = v11[12];
      v133 = (_QWORD *)((char *)a1 + v132);
      v134 = (_QWORD *)((char *)a2 + v132);
      v135 = v134[1];
      *v133 = *v134;
      v133[1] = v135;
      *((_BYTE *)a1 + v11[13]) = *((_BYTE *)a2 + v11[13]);
      *((_BYTE *)a1 + v11[14]) = *((_BYTE *)a2 + v11[14]);
      *((_BYTE *)a1 + v11[15]) = *((_BYTE *)a2 + v11[15]);
      v136 = v11[16];
      v137 = (_QWORD *)((char *)a1 + v136);
      v138 = (_QWORD *)((char *)a2 + v136);
      v139 = v138[1];
      *v137 = *v138;
      v137[1] = v139;
      v140 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v140(a1, 0, 1, v11);
    }
    v141 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v141 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v141 + 48));
    swift_retain();
    v66 = a1;
    v67 = v3;
    v68 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_3D464(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((_BYTE *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v18 = (id *)(a2 + 7);
    v19 = *((unsigned __int8 *)a2 + 64);
    if (v19 == 255)
    {
      a1[7] = *v18;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v20 = *v18;
      sub_3D47C(*v18, *((_BYTE *)a2 + 64));
      a1[7] = v20;
      *((_BYTE *)a1 + 64) = v19;
    }
    v28 = (id *)(a2 + 9);
    v29 = *((unsigned __int8 *)a2 + 80);
    if (v29 == 255)
    {
      a1[9] = *v28;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v30 = *v28;
      sub_3D47C(*v28, *((_BYTE *)a2 + 80));
      a1[9] = v30;
      *((_BYTE *)a1 + 80) = v29;
    }
    v34 = (id *)(a2 + 11);
    v35 = *((unsigned __int8 *)a2 + 96);
    if (v35 == 255)
    {
      a1[11] = *v34;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v36 = *v34;
      sub_3D47C(*v34, *((_BYTE *)a2 + 96));
      a1[11] = v36;
      *((_BYTE *)a1 + 96) = v35;
    }
    v40 = (id *)(a2 + 13);
    v41 = *((unsigned __int8 *)a2 + 112);
    if (v41 == 255)
    {
      a1[13] = *v40;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v42 = *v40;
      sub_3D47C(*v40, *((_BYTE *)a2 + 112));
      a1[13] = v42;
      *((_BYTE *)a1 + 112) = v41;
    }
    v46 = (id *)(a2 + 15);
    v47 = *((unsigned __int8 *)a2 + 128);
    if (v47 == 255)
    {
      a1[15] = *v46;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v48 = *v46;
      sub_3D47C(*v46, *((_BYTE *)a2 + 128));
      a1[15] = v48;
      *((_BYTE *)a1 + 128) = v47;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v52 = (int *)type metadata accessor for ArtworkModel(0);
    v53 = v52[11];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    v57 = v52[12];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    *((_BYTE *)a1 + v52[13]) = *((_BYTE *)a2 + v52[13]);
    *((_BYTE *)a1 + v52[14]) = *((_BYTE *)a2 + v52[14]);
    *((_BYTE *)a1 + v52[15]) = *((_BYTE *)a2 + v52[15]);
    v61 = v52[16];
    v62 = (_QWORD *)((char *)a1 + v61);
    v63 = (_QWORD *)((char *)a2 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
    *(_QWORD *)((char *)a1 + *(int *)(v65 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v65 + 48));
    swift_retain();
    v66 = a1;
    v67 = v3;
    v68 = 1;
  }
  else
  {
    v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    v15 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v16 = a2[2];
      v17 = a2[3];
      sub_3D464(v16, v17, v15);
      a1[2] = v16;
      a1[3] = v17;
      *((_BYTE *)a1 + 32) = v15;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v25 = (id *)(a2 + 7);
    v26 = *((unsigned __int8 *)a2 + 64);
    if (v26 == 255)
    {
      a1[7] = *v25;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v27 = *v25;
      sub_3D47C(*v25, *((_BYTE *)a2 + 64));
      a1[7] = v27;
      *((_BYTE *)a1 + 64) = v26;
    }
    v31 = (id *)(a2 + 9);
    v32 = *((unsigned __int8 *)a2 + 80);
    if (v32 == 255)
    {
      a1[9] = *v31;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v33 = *v31;
      sub_3D47C(*v31, *((_BYTE *)a2 + 80));
      a1[9] = v33;
      *((_BYTE *)a1 + 80) = v32;
    }
    v37 = (id *)(a2 + 11);
    v38 = *((unsigned __int8 *)a2 + 96);
    if (v38 == 255)
    {
      a1[11] = *v37;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v39 = *v37;
      sub_3D47C(*v37, *((_BYTE *)a2 + 96));
      a1[11] = v39;
      *((_BYTE *)a1 + 96) = v38;
    }
    v43 = (id *)(a2 + 13);
    v44 = *((unsigned __int8 *)a2 + 112);
    if (v44 == 255)
    {
      a1[13] = *v43;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v45 = *v43;
      sub_3D47C(*v43, *((_BYTE *)a2 + 112));
      a1[13] = v45;
      *((_BYTE *)a1 + 112) = v44;
    }
    v49 = (id *)(a2 + 15);
    v50 = *((unsigned __int8 *)a2 + 128);
    if (v50 == 255)
    {
      a1[15] = *v49;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v51 = *v49;
      sub_3D47C(*v49, *((_BYTE *)a2 + 128));
      a1[15] = v51;
      *((_BYTE *)a1 + 128) = v50;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v69 = (int *)type metadata accessor for ArtworkModel(0);
    v70 = v69[11];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v73 = type metadata accessor for ArtworkCrop(0);
    v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
    v144(v71, v72, v73);
    v74 = v69[12];
    v75 = (_QWORD *)((char *)a1 + v74);
    v76 = (_QWORD *)((char *)a2 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    *((_BYTE *)a1 + v69[13]) = *((_BYTE *)a2 + v69[13]);
    *((_BYTE *)a1 + v69[14]) = *((_BYTE *)a2 + v69[14]);
    *((_BYTE *)a1 + v69[15]) = *((_BYTE *)a2 + v69[15]);
    v78 = v69[16];
    v79 = (_QWORD *)((char *)a1 + v78);
    v80 = (_QWORD *)((char *)a2 + v78);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v82 = *(int *)(v143 + 48);
    v83 = (char *)a1 + v82;
    v84 = (char *)a2 + v82;
    v85 = *(_QWORD *)((char *)a2 + v82 + 8);
    *(_QWORD *)v83 = *(_QWORD *)((char *)a2 + v82);
    *((_QWORD *)v83 + 1) = v85;
    v86 = *((unsigned __int8 *)a2 + v82 + 32);
    swift_bridgeObjectRetain();
    if (v86 == 255)
    {
      *((_OWORD *)v83 + 1) = *((_OWORD *)v84 + 1);
      v83[32] = v84[32];
    }
    else
    {
      v87 = v3;
      v88 = *((_QWORD *)v84 + 2);
      v89 = *((_QWORD *)v84 + 3);
      sub_3D464(v88, v89, v86);
      *((_QWORD *)v83 + 2) = v88;
      *((_QWORD *)v83 + 3) = v89;
      v3 = v87;
      v83[32] = v86;
    }
    *(_OWORD *)(v83 + 40) = *(_OWORD *)(v84 + 40);
    v90 = (id *)(v84 + 56);
    v91 = v84[64];
    if (v91 == 255)
    {
      *((_QWORD *)v83 + 7) = *v90;
      v83[64] = v84[64];
    }
    else
    {
      v92 = *v90;
      sub_3D47C(*v90, v84[64]);
      *((_QWORD *)v83 + 7) = v92;
      v83[64] = v91;
    }
    v93 = (id *)(v84 + 72);
    v94 = v84[80];
    if (v94 == 255)
    {
      *((_QWORD *)v83 + 9) = *v93;
      v83[80] = v84[80];
    }
    else
    {
      v95 = *v93;
      sub_3D47C(*v93, v84[80]);
      *((_QWORD *)v83 + 9) = v95;
      v83[80] = v94;
    }
    v96 = (id *)(v84 + 88);
    v97 = v84[96];
    if (v97 == 255)
    {
      *((_QWORD *)v83 + 11) = *v96;
      v83[96] = v84[96];
    }
    else
    {
      v98 = *v96;
      sub_3D47C(*v96, v84[96]);
      *((_QWORD *)v83 + 11) = v98;
      v83[96] = v97;
    }
    v99 = (id *)(v84 + 104);
    v100 = v84[112];
    if (v100 == 255)
    {
      *((_QWORD *)v83 + 13) = *v99;
      v83[112] = v84[112];
    }
    else
    {
      v101 = *v99;
      sub_3D47C(*v99, v84[112]);
      *((_QWORD *)v83 + 13) = v101;
      v83[112] = v100;
    }
    v102 = (id *)(v84 + 120);
    v103 = v84[128];
    if (v103 == 255)
    {
      *((_QWORD *)v83 + 15) = *v102;
      v83[128] = v84[128];
    }
    else
    {
      v104 = *v102;
      sub_3D47C(*v102, v84[128]);
      *((_QWORD *)v83 + 15) = v104;
      v83[128] = v103;
    }
    v83[129] = v84[129];
    v144(&v83[v69[11]], &v84[v69[11]], v73);
    v105 = v69[12];
    v106 = &v83[v105];
    v107 = &v84[v105];
    v108 = *((_QWORD *)v107 + 1);
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *((_QWORD *)v106 + 1) = v108;
    v83[v69[13]] = v84[v69[13]];
    v83[v69[14]] = v84[v69[14]];
    v83[v69[15]] = v84[v69[15]];
    v109 = v69[16];
    v110 = &v83[v109];
    v111 = &v84[v109];
    v112 = *((_QWORD *)v111 + 1);
    *(_QWORD *)v110 = *(_QWORD *)v111;
    *((_QWORD *)v110 + 1) = v112;
    *(_QWORD *)((char *)a1 + *(int *)(v143 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v143 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v66 = a1;
    v67 = v3;
    v68 = 0;
  }
  swift_storeEnumTagMultiPayload(v66, v67, v68);
  return a1;
}

_QWORD *assignWithCopy for HeroBackgroundVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  id *v17;
  int v18;
  id v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id *v24;
  int v25;
  id v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  id v47;
  id *v48;
  int v49;
  id v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  id v55;
  id *v56;
  int v57;
  id v58;
  id v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  id *v95;
  int v96;
  id v97;
  id v98;
  id *v99;
  int v100;
  id v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  id v106;
  id *v107;
  int v108;
  id v109;
  id v110;
  id *v111;
  int v112;
  id v113;
  id v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 v121;
  id *v122;
  int v123;
  id v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  id v129;
  id *v130;
  int v131;
  id v132;
  id v133;
  id *v134;
  int v135;
  id v136;
  id v137;
  id *v138;
  int v139;
  id v140;
  id v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  void (*v152)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v153;
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = (int *)type metadata accessor for ArtworkModel(0);
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v20 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          v121 = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          *((_OWORD *)a1 + 1) = v121;
        }
        else
        {
          v21 = a2[2];
          v22 = a2[3];
          sub_3D464(v21, v22, v20);
          a1[2] = v21;
          a1[3] = v22;
          *((_BYTE *)a1 + 32) = v20;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        v122 = (id *)(a2 + 7);
        v123 = *((unsigned __int8 *)a2 + 64);
        if (v123 == 255)
        {
          v125 = *v122;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
          a1[7] = v125;
        }
        else
        {
          v124 = *v122;
          sub_3D47C(*v122, *((_BYTE *)a2 + 64));
          a1[7] = v124;
          *((_BYTE *)a1 + 64) = v123;
        }
        v126 = (id *)(a2 + 9);
        v127 = *((unsigned __int8 *)a2 + 80);
        if (v127 == 255)
        {
          v129 = *v126;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
          a1[9] = v129;
        }
        else
        {
          v128 = *v126;
          sub_3D47C(*v126, *((_BYTE *)a2 + 80));
          a1[9] = v128;
          *((_BYTE *)a1 + 80) = v127;
        }
        v130 = (id *)(a2 + 11);
        v131 = *((unsigned __int8 *)a2 + 96);
        if (v131 == 255)
        {
          v133 = *v130;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
          a1[11] = v133;
        }
        else
        {
          v132 = *v130;
          sub_3D47C(*v130, *((_BYTE *)a2 + 96));
          a1[11] = v132;
          *((_BYTE *)a1 + 96) = v131;
        }
        v134 = (id *)(a2 + 13);
        v135 = *((unsigned __int8 *)a2 + 112);
        if (v135 == 255)
        {
          v137 = *v134;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
          a1[13] = v137;
        }
        else
        {
          v136 = *v134;
          sub_3D47C(*v134, *((_BYTE *)a2 + 112));
          a1[13] = v136;
          *((_BYTE *)a1 + 112) = v135;
        }
        v138 = (id *)(a2 + 15);
        v139 = *((unsigned __int8 *)a2 + 128);
        if (v139 == 255)
        {
          v141 = *v138;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
          a1[15] = v141;
        }
        else
        {
          v140 = *v138;
          sub_3D47C(*v138, *((_BYTE *)a2 + 128));
          a1[15] = v140;
          *((_BYTE *)a1 + 128) = v139;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v142 = v10[11];
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        v145 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v143, v144, v145);
        v146 = v10[12];
        v147 = (_QWORD *)((char *)a1 + v146);
        v148 = (_QWORD *)((char *)a2 + v146);
        *v147 = *v148;
        v147[1] = v148[1];
        *((_BYTE *)a1 + v10[13]) = *((_BYTE *)a2 + v10[13]);
        *((_BYTE *)a1 + v10[14]) = *((_BYTE *)a2 + v10[14]);
        *((_BYTE *)a1 + v10[15]) = *((_BYTE *)a2 + v10[15]);
        v149 = v10[16];
        v150 = (_QWORD *)((char *)a1 + v149);
        v151 = (_QWORD *)((char *)a2 + v149);
        *v150 = *v151;
        v150[1] = v151[1];
        v152 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v152(a1, 0, 1, v10);
      }
      v153 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v153 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v153 + 48));
      swift_retain();
      v72 = a1;
      v73 = a3;
      v74 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v7 == 255)
      {
        v16 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v16;
      }
      else
      {
        v8 = a2[2];
        v9 = a2[3];
        sub_3D464(v8, v9, v7);
        a1[2] = v8;
        a1[3] = v9;
        *((_BYTE *)a1 + 32) = v7;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v17 = (id *)(a2 + 7);
      v18 = *((unsigned __int8 *)a2 + 64);
      if (v18 == 255)
      {
        v27 = *v17;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v27;
      }
      else
      {
        v19 = *v17;
        sub_3D47C(*v17, *((_BYTE *)a2 + 64));
        a1[7] = v19;
        *((_BYTE *)a1 + 64) = v18;
      }
      v28 = (id *)(a2 + 9);
      v29 = *((unsigned __int8 *)a2 + 80);
      if (v29 == 255)
      {
        v35 = *v28;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v35;
      }
      else
      {
        v30 = *v28;
        sub_3D47C(*v28, *((_BYTE *)a2 + 80));
        a1[9] = v30;
        *((_BYTE *)a1 + 80) = v29;
      }
      v36 = (id *)(a2 + 11);
      v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        v43 = *v36;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v43;
      }
      else
      {
        v38 = *v36;
        sub_3D47C(*v36, *((_BYTE *)a2 + 96));
        a1[11] = v38;
        *((_BYTE *)a1 + 96) = v37;
      }
      v44 = (id *)(a2 + 13);
      v45 = *((unsigned __int8 *)a2 + 112);
      if (v45 == 255)
      {
        v51 = *v44;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v51;
      }
      else
      {
        v46 = *v44;
        sub_3D47C(*v44, *((_BYTE *)a2 + 112));
        a1[13] = v46;
        *((_BYTE *)a1 + 112) = v45;
      }
      v52 = (id *)(a2 + 15);
      v53 = *((unsigned __int8 *)a2 + 128);
      if (v53 == 255)
      {
        v59 = *v52;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v59;
      }
      else
      {
        v54 = *v52;
        sub_3D47C(*v52, *((_BYTE *)a2 + 128));
        a1[15] = v54;
        *((_BYTE *)a1 + 128) = v53;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v60 = (int *)type metadata accessor for ArtworkModel(0);
      v61 = v60[11];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      v64 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = v60[12];
      v66 = (_QWORD *)((char *)a1 + v65);
      v67 = (_QWORD *)((char *)a2 + v65);
      *v66 = *v67;
      v66[1] = v67[1];
      *((_BYTE *)a1 + v60[13]) = *((_BYTE *)a2 + v60[13]);
      *((_BYTE *)a1 + v60[14]) = *((_BYTE *)a2 + v60[14]);
      *((_BYTE *)a1 + v60[15]) = *((_BYTE *)a2 + v60[15]);
      v68 = v60[16];
      v69 = (_QWORD *)((char *)a1 + v68);
      v70 = (_QWORD *)((char *)a2 + v68);
      *v69 = *v70;
      v69[1] = v70[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v71 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v71 + 48));
      swift_retain();
      v72 = a1;
      v73 = a3;
      v74 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v13 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        v23 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v23;
      }
      else
      {
        v14 = a2[2];
        v15 = a2[3];
        sub_3D464(v14, v15, v13);
        a1[2] = v14;
        a1[3] = v15;
        *((_BYTE *)a1 + 32) = v13;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v24 = (id *)(a2 + 7);
      v25 = *((unsigned __int8 *)a2 + 64);
      if (v25 == 255)
      {
        v31 = *v24;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v31;
      }
      else
      {
        v26 = *v24;
        sub_3D47C(*v24, *((_BYTE *)a2 + 64));
        a1[7] = v26;
        *((_BYTE *)a1 + 64) = v25;
      }
      v32 = (id *)(a2 + 9);
      v33 = *((unsigned __int8 *)a2 + 80);
      if (v33 == 255)
      {
        v39 = *v32;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v39;
      }
      else
      {
        v34 = *v32;
        sub_3D47C(*v32, *((_BYTE *)a2 + 80));
        a1[9] = v34;
        *((_BYTE *)a1 + 80) = v33;
      }
      v40 = (id *)(a2 + 11);
      v41 = *((unsigned __int8 *)a2 + 96);
      if (v41 == 255)
      {
        v47 = *v40;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v47;
      }
      else
      {
        v42 = *v40;
        sub_3D47C(*v40, *((_BYTE *)a2 + 96));
        a1[11] = v42;
        *((_BYTE *)a1 + 96) = v41;
      }
      v48 = (id *)(a2 + 13);
      v49 = *((unsigned __int8 *)a2 + 112);
      if (v49 == 255)
      {
        v55 = *v48;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v55;
      }
      else
      {
        v50 = *v48;
        sub_3D47C(*v48, *((_BYTE *)a2 + 112));
        a1[13] = v50;
        *((_BYTE *)a1 + 112) = v49;
      }
      v56 = (id *)(a2 + 15);
      v57 = *((unsigned __int8 *)a2 + 128);
      if (v57 == 255)
      {
        v75 = *v56;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v75;
      }
      else
      {
        v58 = *v56;
        sub_3D47C(*v56, *((_BYTE *)a2 + 128));
        a1[15] = v58;
        *((_BYTE *)a1 + 128) = v57;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v76 = (int *)type metadata accessor for ArtworkModel(0);
      v77 = v76[11];
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      v80 = type metadata accessor for ArtworkCrop(0);
      v156 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
      v156(v78, v79, v80);
      v81 = v76[12];
      v82 = (_QWORD *)((char *)a1 + v81);
      v83 = (_QWORD *)((char *)a2 + v81);
      *v82 = *v83;
      v82[1] = v83[1];
      *((_BYTE *)a1 + v76[13]) = *((_BYTE *)a2 + v76[13]);
      *((_BYTE *)a1 + v76[14]) = *((_BYTE *)a2 + v76[14]);
      *((_BYTE *)a1 + v76[15]) = *((_BYTE *)a2 + v76[15]);
      v84 = v76[16];
      v85 = (_QWORD *)((char *)a1 + v84);
      v86 = (_QWORD *)((char *)a2 + v84);
      *v85 = *v86;
      v85[1] = v86[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v87 = *(int *)(v155 + 48);
      v88 = (char *)a1 + v87;
      v89 = (char *)a2 + v87;
      *(_QWORD *)v88 = *(_QWORD *)((char *)a2 + v87);
      *((_QWORD *)v88 + 1) = *(_QWORD *)((char *)a2 + v87 + 8);
      v90 = *((unsigned __int8 *)a2 + v87 + 32);
      swift_bridgeObjectRetain();
      if (v90 == 255)
      {
        v94 = *((_OWORD *)v89 + 1);
        v88[32] = v89[32];
        *((_OWORD *)v88 + 1) = v94;
      }
      else
      {
        v91 = a3;
        v92 = *((_QWORD *)v89 + 2);
        v93 = *((_QWORD *)v89 + 3);
        sub_3D464(v92, v93, v90);
        *((_QWORD *)v88 + 2) = v92;
        *((_QWORD *)v88 + 3) = v93;
        a3 = v91;
        v88[32] = v90;
      }
      *((_QWORD *)v88 + 5) = *((_QWORD *)v89 + 5);
      *((_QWORD *)v88 + 6) = *((_QWORD *)v89 + 6);
      v95 = (id *)(v89 + 56);
      v96 = v89[64];
      if (v96 == 255)
      {
        v98 = *v95;
        v88[64] = v89[64];
        *((_QWORD *)v88 + 7) = v98;
      }
      else
      {
        v97 = *v95;
        sub_3D47C(*v95, v89[64]);
        *((_QWORD *)v88 + 7) = v97;
        v88[64] = v96;
      }
      v99 = (id *)(v89 + 72);
      v100 = v89[80];
      if (v100 == 255)
      {
        v102 = *v99;
        v88[80] = v89[80];
        *((_QWORD *)v88 + 9) = v102;
      }
      else
      {
        v101 = *v99;
        sub_3D47C(*v99, v89[80]);
        *((_QWORD *)v88 + 9) = v101;
        v88[80] = v100;
      }
      v103 = (id *)(v89 + 88);
      v104 = v89[96];
      if (v104 == 255)
      {
        v106 = *v103;
        v88[96] = v89[96];
        *((_QWORD *)v88 + 11) = v106;
      }
      else
      {
        v105 = *v103;
        sub_3D47C(*v103, v89[96]);
        *((_QWORD *)v88 + 11) = v105;
        v88[96] = v104;
      }
      v107 = (id *)(v89 + 104);
      v108 = v89[112];
      if (v108 == 255)
      {
        v110 = *v107;
        v88[112] = v89[112];
        *((_QWORD *)v88 + 13) = v110;
      }
      else
      {
        v109 = *v107;
        sub_3D47C(*v107, v89[112]);
        *((_QWORD *)v88 + 13) = v109;
        v88[112] = v108;
      }
      v111 = (id *)(v89 + 120);
      v112 = v89[128];
      if (v112 == 255)
      {
        v114 = *v111;
        v88[128] = v89[128];
        *((_QWORD *)v88 + 15) = v114;
      }
      else
      {
        v113 = *v111;
        sub_3D47C(*v111, v89[128]);
        *((_QWORD *)v88 + 15) = v113;
        v88[128] = v112;
      }
      v88[129] = v89[129];
      v156(&v88[v76[11]], &v89[v76[11]], v80);
      v115 = v76[12];
      v116 = &v88[v115];
      v117 = &v89[v115];
      *(_QWORD *)v116 = *(_QWORD *)v117;
      *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
      v88[v76[13]] = v89[v76[13]];
      v88[v76[14]] = v89[v76[14]];
      v88[v76[15]] = v89[v76[15]];
      v118 = v76[16];
      v119 = &v88[v118];
      v120 = &v89[v118];
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
      *(_QWORD *)((char *)a1 + *(int *)(v155 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v155 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v72 = a1;
      v73 = a3;
      v74 = 0;
    }
    swift_storeEnumTagMultiPayload(v72, v73, v74);
  }
  return a1;
}

_OWORD *initializeWithTake for HeroBackgroundVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v17 = (int *)type metadata accessor for ArtworkModel(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(a2, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v32 = v17[11];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
      *((_BYTE *)a1 + v17[13]) = *((_BYTE *)a2 + v17[13]);
      *((_BYTE *)a1 + v17[14]) = *((_BYTE *)a2 + v17[14]);
      *((_BYTE *)a1 + v17[15]) = *((_BYTE *)a2 + v17[15]);
      *(_OWORD *)((char *)a1 + v17[16]) = *(_OWORD *)((char *)a2 + v17[16]);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v18 + 56))(a1, 0, 1, v17);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v36 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v36 + 48));
    v14 = a1;
    v15 = a3;
    v16 = 2;
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for ArtworkModel(0);
      v9 = v8[11];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
      *((_BYTE *)a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
      *((_BYTE *)a1 + v8[14]) = *((_BYTE *)a2 + v8[14]);
      *((_BYTE *)a1 + v8[15]) = *((_BYTE *)a2 + v8[15]);
      *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
      v14 = a1;
      v15 = a3;
      v16 = 1;
    }
    else
    {
      v20 = (int *)type metadata accessor for ArtworkModel(0);
      v21 = v20[11];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for ArtworkCrop(0);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v25(v22, v23, v24);
      *(_OWORD *)((char *)a1 + v20[12]) = *(_OWORD *)((char *)a2 + v20[12]);
      *((_BYTE *)a1 + v20[13]) = *((_BYTE *)a2 + v20[13]);
      *((_BYTE *)a1 + v20[14]) = *((_BYTE *)a2 + v20[14]);
      *((_BYTE *)a1 + v20[15]) = *((_BYTE *)a2 + v20[15]);
      *(_OWORD *)((char *)a1 + v20[16]) = *(_OWORD *)((char *)a2 + v20[16]);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v27 = *(int *)(v26 + 48);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = *(_OWORD *)((char *)a2 + v27 + 16);
      *(_OWORD *)v28 = *(_OWORD *)((char *)a2 + v27);
      *((_OWORD *)v28 + 1) = v30;
      v28[32] = *((_BYTE *)a2 + v27 + 32);
      *(_OWORD *)(v28 + 40) = *(_OWORD *)((char *)a2 + v27 + 40);
      *((_QWORD *)v28 + 7) = *(_QWORD *)((char *)a2 + v27 + 56);
      v28[64] = *((_BYTE *)a2 + v27 + 64);
      *(_OWORD *)(v28 + 113) = *(_OWORD *)((char *)a2 + v27 + 113);
      *(_OWORD *)(v28 + 104) = *(_OWORD *)((char *)a2 + v27 + 104);
      *(_OWORD *)(v28 + 88) = *(_OWORD *)((char *)a2 + v27 + 88);
      *(_OWORD *)(v28 + 72) = *(_OWORD *)((char *)a2 + v27 + 72);
      v28[129] = *((_BYTE *)a2 + v27 + 129);
      v25((char *)a1 + v27 + v20[11], (char *)a2 + v27 + v20[11], v24);
      *(_OWORD *)&v28[v20[12]] = *(_OWORD *)&v29[v20[12]];
      v28[v20[13]] = v29[v20[13]];
      v28[v20[14]] = v29[v20[14]];
      v28[v20[15]] = v29[v20[15]];
      *(_OWORD *)&v28[v20[16]] = *(_OWORD *)&v29[v20[16]];
      *(_QWORD *)((char *)a1 + *(int *)(v26 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v26 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
    }
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  return a1;
}

_OWORD *assignWithTake for HeroBackgroundVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = (int *)type metadata accessor for ArtworkModel(0);
      v18 = *((_QWORD *)v17 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(a2, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v32 = v17[11];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
        *((_BYTE *)a1 + v17[13]) = *((_BYTE *)a2 + v17[13]);
        *((_BYTE *)a1 + v17[14]) = *((_BYTE *)a2 + v17[14]);
        *((_BYTE *)a1 + v17[15]) = *((_BYTE *)a2 + v17[15]);
        *(_OWORD *)((char *)a1 + v17[16]) = *(_OWORD *)((char *)a2 + v17[16]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v18 + 56))(a1, 0, 1, v17);
      }
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v36 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v36 + 48));
      v14 = a1;
      v15 = a3;
      v16 = 2;
    }
    else
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        v8 = (int *)type metadata accessor for ArtworkModel(0);
        v9 = v8[11];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
        *((_BYTE *)a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
        *((_BYTE *)a1 + v8[14]) = *((_BYTE *)a2 + v8[14]);
        *((_BYTE *)a1 + v8[15]) = *((_BYTE *)a2 + v8[15]);
        *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
        *(_QWORD *)((char *)a1 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v13 + 48));
        v14 = a1;
        v15 = a3;
        v16 = 1;
      }
      else
      {
        v20 = (int *)type metadata accessor for ArtworkModel(0);
        v21 = v20[11];
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = type metadata accessor for ArtworkCrop(0);
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
        v25(v22, v23, v24);
        *(_OWORD *)((char *)a1 + v20[12]) = *(_OWORD *)((char *)a2 + v20[12]);
        *((_BYTE *)a1 + v20[13]) = *((_BYTE *)a2 + v20[13]);
        *((_BYTE *)a1 + v20[14]) = *((_BYTE *)a2 + v20[14]);
        *((_BYTE *)a1 + v20[15]) = *((_BYTE *)a2 + v20[15]);
        *(_OWORD *)((char *)a1 + v20[16]) = *(_OWORD *)((char *)a2 + v20[16]);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
        v27 = *(int *)(v26 + 48);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = *(_OWORD *)((char *)a2 + v27 + 16);
        *(_OWORD *)v28 = *(_OWORD *)((char *)a2 + v27);
        *((_OWORD *)v28 + 1) = v30;
        v28[32] = *((_BYTE *)a2 + v27 + 32);
        *(_OWORD *)(v28 + 40) = *(_OWORD *)((char *)a2 + v27 + 40);
        *((_QWORD *)v28 + 7) = *(_QWORD *)((char *)a2 + v27 + 56);
        v28[64] = *((_BYTE *)a2 + v27 + 64);
        *(_OWORD *)(v28 + 113) = *(_OWORD *)((char *)a2 + v27 + 113);
        *(_OWORD *)(v28 + 104) = *(_OWORD *)((char *)a2 + v27 + 104);
        *(_OWORD *)(v28 + 88) = *(_OWORD *)((char *)a2 + v27 + 88);
        *(_OWORD *)(v28 + 72) = *(_OWORD *)((char *)a2 + v27 + 72);
        v28[129] = *((_BYTE *)a2 + v27 + 129);
        v25((char *)a1 + v27 + v20[11], (char *)a2 + v27 + v20[11], v24);
        *(_OWORD *)&v28[v20[12]] = *(_OWORD *)&v29[v20[12]];
        v28[v20[13]] = v29[v20[13]];
        v28[v20[14]] = v29[v20[14]];
        v28[v20[15]] = v29[v20[15]];
        *(_OWORD *)&v28[v20[16]] = *(_OWORD *)&v29[v20[16]];
        *(_QWORD *)((char *)a1 + *(int *)(v26 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v26 + 64));
        v14 = a1;
        v15 = a3;
        v16 = 0;
      }
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void sub_278BD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[32];
  _BYTE v8[32];
  _BYTE v9[32];
  _QWORD v10[3];

  v2 = type metadata accessor for ArtworkModel(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_getTupleTypeLayout3(v9, v4, v4, (char *)&value witness table for Builtin.NativeObject + 64);
    v10[0] = v9;
    swift_getTupleTypeLayout2(v8, v4, (char *)&value witness table for Builtin.NativeObject + 64);
    v10[1] = v8;
    sub_5971C(319);
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v7, *(_QWORD *)(v5 - 8) + 64, (char *)&value witness table for Builtin.NativeObject + 64);
      v10[2] = v7;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v10);
    }
  }
}

double sub_278CA4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_278D54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3C1DA0, &qword_3C1DA8).n128_u64[0];
  return result;
}

double sub_278CFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_278D54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3C4CB0, &qword_3C4CD0).n128_u64[0];
  return result;
}

__n128 sub_278D54@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_267BC(v18, v19, a16);
  v41 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_278F20@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_278D54(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_3C4CC0, &qword_3C4D00).n128_u64[0];
  return result;
}

__n128 sub_278F78@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &dword_0, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C5278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C5280) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

uint64_t HeroBackground.init(variant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3C56C(a1, a2, type metadata accessor for HeroBackgroundVariant);
}

uint64_t HeroBackground.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;

  v86 = a1;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E00);
  __chkstk_darwin(v72);
  v74 = (uint64_t)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E08);
  __chkstk_darwin(v71);
  v73 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E10);
  __chkstk_darwin(v85);
  v76 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  __chkstk_darwin(v4);
  v75 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for HeroShowUberArtworkBackground(0);
  __chkstk_darwin(v68);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E18);
  __chkstk_darwin(v80);
  v69 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v67 - v10;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E20);
  __chkstk_darwin(v82);
  v84 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E28);
  __chkstk_darwin(v78);
  v79 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E30);
  __chkstk_darwin(v83);
  v81 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HeroEpisodeArtworkBackground(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4E38);
  __chkstk_darwin(v77);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - v20;
  v22 = type metadata accessor for ArtworkModel(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for HeroBackgroundVariant(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14510((uint64_t)v87, (uint64_t)v28, v29);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v26);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v31 = *(_QWORD *)&v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3C4870) + 48)];
      sub_3C56C((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      sub_14510((uint64_t)v25, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      v32 = (uint64_t)v69;
      *(_QWORD *)&v7[*(int *)(v68 + 20)] = v31;
      v33 = v80;
      v34 = v32 + *(int *)(v80 + 36);
      sub_14510((uint64_t)v25, v34, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
      sub_14510((uint64_t)v7, v32, type metadata accessor for HeroShowUberArtworkBackground);
      swift_retain();
      sub_145D8((uint64_t)v7, type metadata accessor for HeroShowUberArtworkBackground);
      v35 = v32;
      v36 = v70;
      sub_15BD4(v35, v70, &qword_3C4E18);
      v37 = v79;
      sub_267BC(v36, v79, &qword_3C4E18);
      swift_storeEnumTagMultiPayload(v37, v78, 1);
      v38 = sub_279A1C();
      v39 = sub_279ACC();
      v40 = (uint64_t)v81;
      _ConditionalContent<>.init(storage:)(v37, v77, v33, v38, v39);
      v41 = v84;
      sub_267BC(v40, v84, &qword_3C4E30);
      swift_storeEnumTagMultiPayload(v41, v82, 0);
      v42 = sub_2799F8();
      v43 = sub_279B68();
      _ConditionalContent<>.init(storage:)(v41, v83, v85, v42, v43);
      swift_release(v31);
      sub_1459C(v40, &qword_3C4E30);
      sub_1459C(v36, &qword_3C4E18);
      return sub_145D8((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    }
    else
    {
      v56 = *(_QWORD *)&v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_3C4878) + 48)];
      v57 = v75;
      sub_15BD4((uint64_t)v28, v75, &qword_3BEB70);
      if (qword_3B0218 != -1)
        swift_once(&qword_3B0218, sub_268764);
      v58 = type metadata accessor for RoundedRectangle(0);
      v59 = __swift_project_value_buffer(v58, (uint64_t)qword_3C45D8);
      v60 = v74;
      sub_14510(v59, v74, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v61 = v73;
      *(_WORD *)(v60 + *(int *)(v72 + 36)) = 256;
      sub_267BC(v60, (uint64_t)v61 + *(int *)(v71 + 36), &qword_3C4E00);
      *v61 = v56;
      swift_retain();
      sub_1459C(v60, &qword_3C4E00);
      v62 = v85;
      v63 = (uint64_t)v76;
      sub_267BC(v57, (uint64_t)&v76[*(int *)(v85 + 36)], &qword_3BEB70);
      sub_15BD4((uint64_t)v61, v63, &qword_3C4E08);
      v64 = v84;
      sub_267BC(v63, v84, &qword_3C4E10);
      swift_storeEnumTagMultiPayload(v64, v82, 1);
      v65 = sub_2799F8();
      v66 = sub_279B68();
      _ConditionalContent<>.init(storage:)(v64, v83, v62, v65, v66);
      swift_release(v56);
      sub_1459C(v63, &qword_3C4E10);
      return sub_1459C(v57, &qword_3BEB70);
    }
  }
  else
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v87 = &v28[*(int *)(v45 + 48)];
    v46 = *(_QWORD *)&v28[*(int *)(v45 + 64)];
    sub_3C56C((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_14510((uint64_t)v25, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    *(_QWORD *)&v16[*(int *)(v14 + 20)] = v46;
    v47 = v77;
    v48 = (uint64_t)&v18[*(int *)(v77 + 36)];
    sub_14510((uint64_t)v25, v48, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v48, 0, 1, v22);
    sub_14510((uint64_t)v16, (uint64_t)v18, type metadata accessor for HeroEpisodeArtworkBackground);
    swift_retain();
    sub_145D8((uint64_t)v16, type metadata accessor for HeroEpisodeArtworkBackground);
    sub_15BD4((uint64_t)v18, (uint64_t)v21, &qword_3C4E38);
    v49 = v79;
    sub_267BC((uint64_t)v21, v79, &qword_3C4E38);
    swift_storeEnumTagMultiPayload(v49, v78, 0);
    v50 = sub_279A1C();
    v51 = sub_279ACC();
    v52 = (uint64_t)v81;
    _ConditionalContent<>.init(storage:)(v49, v47, v80, v50, v51);
    v53 = v84;
    sub_267BC(v52, v84, &qword_3C4E30);
    swift_storeEnumTagMultiPayload(v53, v82, 0);
    v54 = sub_2799F8();
    v55 = sub_279B68();
    _ConditionalContent<>.init(storage:)(v53, v83, v85, v54, v55);
    swift_release(v46);
    sub_1459C(v52, &qword_3C4E30);
    sub_1459C((uint64_t)v21, &qword_3C4E38);
    sub_145D8((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    return sub_145D8((uint64_t)v87, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
}

uint64_t type metadata accessor for HeroShowUberArtworkBackground(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C5010, (uint64_t)&nominal type descriptor for HeroShowUberArtworkBackground);
}

uint64_t type metadata accessor for HeroEpisodeArtworkBackground(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C4F80, (uint64_t)&nominal type descriptor for HeroEpisodeArtworkBackground);
}

uint64_t sub_2799F8()
{
  return sub_279D60(&qword_3C4E40, &qword_3C4E30, (void (*)(void))sub_279A1C, (void (*)(void))sub_279ACC);
}

unint64_t sub_279A1C()
{
  unint64_t result;

  result = qword_3C4E48;
  if (!qword_3C4E48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4E38);
    sub_F1C0(&qword_3C4E50, (void (*)(uint64_t))type metadata accessor for HeroEpisodeArtworkBackground, (uint64_t)&unk_3035E0);
    sub_F1C0(&qword_3C4E58, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView, (uint64_t)&unk_303590);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4E48);
  }
  return result;
}

uint64_t type metadata accessor for HeroJoeColorDebugView(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C50A0, (uint64_t)&nominal type descriptor for HeroJoeColorDebugView);
}

unint64_t sub_279ACC()
{
  unint64_t result;

  result = qword_3C4E60;
  if (!qword_3C4E60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4E18);
    sub_F1C0(&qword_3C4E68, (void (*)(uint64_t))type metadata accessor for HeroShowUberArtworkBackground, (uint64_t)&unk_303540);
    sub_F1C0(&qword_3C4E58, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView, (uint64_t)&unk_303590);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4E60);
  }
  return result;
}

unint64_t sub_279B68()
{
  unint64_t result;

  result = qword_3C4E70;
  if (!qword_3C4E70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4E10);
    sub_279BEC();
    sub_F1C0(&qword_3C4E58, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView, (uint64_t)&unk_303590);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4E70);
  }
  return result;
}

unint64_t sub_279BEC()
{
  unint64_t result;

  result = qword_3C4E78;
  if (!qword_3C4E78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3C4E08);
    sub_32914(&qword_3C4E80, &qword_3C4E00, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>);
    atomic_store(result, (unint64_t *)&qword_3C4E78);
  }
  return result;
}

uint64_t sub_279C70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of HeroBackground.body>>, 1);
}

uint64_t getEnumTagSinglePayload for HeroBackground(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_279C90);
}

uint64_t sub_279C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HeroBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_279CD8);
}

uint64_t sub_279CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HeroBackground(uint64_t a1)
{
  return sub_1F9D4(a1, qword_3C4EE0, (uint64_t)&nominal type descriptor for HeroBackground);
}

uint64_t sub_279D2C()
{
  return sub_279D60(&qword_3C4F18, &qword_3C4F20, (void (*)(void))sub_2799F8, (void (*)(void))sub_279B68);
}

uint64_t sub_279D60(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_279DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm);
}

uint64_t sub_279DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm);
}

_QWORD *sub_279E0C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  int v13;
  id v14;
  id *v15;
  int v16;
  id v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)v4 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_3D464(v9, v10, v8);
      v4[2] = v9;
      v4[3] = v10;
      *((_BYTE *)v4 + 32) = v8;
    }
    *(_OWORD *)(v4 + 5) = *(_OWORD *)(a2 + 5);
    v12 = (id *)(a2 + 7);
    v13 = *((unsigned __int8 *)a2 + 64);
    if (v13 == 255)
    {
      v4[7] = *v12;
      *((_BYTE *)v4 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v14 = *v12;
      sub_3D47C(*v12, *((_BYTE *)a2 + 64));
      v4[7] = v14;
      *((_BYTE *)v4 + 64) = v13;
    }
    v15 = (id *)(a2 + 9);
    v16 = *((unsigned __int8 *)a2 + 80);
    if (v16 == 255)
    {
      v4[9] = *v15;
      *((_BYTE *)v4 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v17 = *v15;
      sub_3D47C(*v15, *((_BYTE *)a2 + 80));
      v4[9] = v17;
      *((_BYTE *)v4 + 80) = v16;
    }
    v18 = (id *)(a2 + 11);
    v19 = *((unsigned __int8 *)a2 + 96);
    if (v19 == 255)
    {
      v4[11] = *v18;
      *((_BYTE *)v4 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v20 = *v18;
      sub_3D47C(*v18, *((_BYTE *)a2 + 96));
      v4[11] = v20;
      *((_BYTE *)v4 + 96) = v19;
    }
    v21 = (id *)(a2 + 13);
    v22 = *((unsigned __int8 *)a2 + 112);
    if (v22 == 255)
    {
      v4[13] = *v21;
      *((_BYTE *)v4 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v23 = *v21;
      sub_3D47C(*v21, *((_BYTE *)a2 + 112));
      v4[13] = v23;
      *((_BYTE *)v4 + 112) = v22;
    }
    v24 = (id *)(a2 + 15);
    v25 = *((unsigned __int8 *)a2 + 128);
    if (v25 == 255)
    {
      v4[15] = *v24;
      *((_BYTE *)v4 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v26 = *v24;
      sub_3D47C(*v24, *((_BYTE *)a2 + 128));
      v4[15] = v26;
      *((_BYTE *)v4 + 128) = v25;
    }
    *((_BYTE *)v4 + 129) = *((_BYTE *)a2 + 129);
    v27 = (int *)type metadata accessor for ArtworkModel(0);
    v28 = v27[11];
    v29 = (char *)v4 + v28;
    v30 = (uint64_t)a2 + v28;
    v31 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v27[12];
    v33 = (_QWORD *)((char *)v4 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *((_BYTE *)v4 + v27[13]) = *((_BYTE *)a2 + v27[13]);
    *((_BYTE *)v4 + v27[14]) = *((_BYTE *)a2 + v27[14]);
    *((_BYTE *)v4 + v27[15]) = *((_BYTE *)a2 + v27[15]);
    v36 = v27[16];
    v37 = (_QWORD *)((char *)v4 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_27A0B0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 != 255)
    sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 != 255)
    sub_3D624(*(id *)(a1 + 56), v5);
  v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 != 255)
    sub_3D624(*(id *)(a1 + 72), v6);
  v7 = *(unsigned __int8 *)(a1 + 96);
  if (v7 != 255)
    sub_3D624(*(id *)(a1 + 88), v7);
  v8 = *(unsigned __int8 *)(a1 + 112);
  if (v8 != 255)
    sub_3D624(*(id *)(a1 + 104), v8);
  v9 = *(unsigned __int8 *)(a1 + 128);
  if (v9 != 255)
    sub_3D624(*(id *)(a1 + 120), v9);
  v10 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
  v11 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_27A1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  int v11;
  id v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    sub_3D464(v8, v9, v7);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v7;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = (id *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    *(_QWORD *)(a1 + 56) = *v10;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v12 = *v10;
    sub_3D47C(*v10, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v11;
  }
  v13 = (id *)(a2 + 72);
  v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 == 255)
  {
    *(_QWORD *)(a1 + 72) = *v13;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  }
  else
  {
    v15 = *v13;
    sub_3D47C(*v13, *(_BYTE *)(a2 + 80));
    *(_QWORD *)(a1 + 72) = v15;
    *(_BYTE *)(a1 + 80) = v14;
  }
  v16 = (id *)(a2 + 88);
  v17 = *(unsigned __int8 *)(a2 + 96);
  if (v17 == 255)
  {
    *(_QWORD *)(a1 + 88) = *v16;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v18 = *v16;
    sub_3D47C(*v16, *(_BYTE *)(a2 + 96));
    *(_QWORD *)(a1 + 88) = v18;
    *(_BYTE *)(a1 + 96) = v17;
  }
  v19 = (id *)(a2 + 104);
  v20 = *(unsigned __int8 *)(a2 + 112);
  if (v20 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v19;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v21 = *v19;
    sub_3D47C(*v19, *(_BYTE *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v21;
    *(_BYTE *)(a1 + 112) = v20;
  }
  v22 = (id *)(a2 + 120);
  v23 = *(unsigned __int8 *)(a2 + 128);
  if (v23 == 255)
  {
    *(_QWORD *)(a1 + 120) = *v22;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  }
  else
  {
    v24 = *v22;
    sub_3D47C(*v22, *(_BYTE *)(a2 + 128));
    *(_QWORD *)(a1 + 120) = v24;
    *(_BYTE *)(a1 + 128) = v23;
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v25 = (int *)type metadata accessor for ArtworkModel(0);
  v26 = v25[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v30 = v25[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  *(_BYTE *)(a1 + v25[13]) = *(_BYTE *)(a2 + v25[13]);
  *(_BYTE *)(a1 + v25[14]) = *(_BYTE *)(a2 + v25[14]);
  *(_BYTE *)(a1 + v25[15]) = *(_BYTE *)(a2 + v25[15]);
  v34 = v25[16];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_27A42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v6;
  __int128 *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  id *v18;
  id *v19;
  int v20;
  id v21;
  void *v22;
  char v23;
  id v24;
  char v25;
  id v26;
  id *v27;
  id *v28;
  int v29;
  id v30;
  void *v31;
  char v32;
  id v33;
  char v34;
  id v35;
  id *v36;
  id *v37;
  int v38;
  id v39;
  void *v40;
  char v41;
  id v42;
  char v43;
  id v44;
  id *v45;
  id *v46;
  int v47;
  id v48;
  void *v49;
  char v50;
  id v51;
  char v52;
  id v53;
  id *v54;
  id *v55;
  int v56;
  id v57;
  void *v58;
  char v59;
  id v60;
  char v61;
  id v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 16);
  v7 = (__int128 *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v8 == 255)
    {
      v17 = *v7;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v6 = v17;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + 16);
      v15 = *(_QWORD *)(a2 + 24);
      sub_3D464(v14, v15, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v15;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_3E43C(a1 + 16);
    v16 = *(_BYTE *)(a2 + 32);
    *v6 = *v7;
    *(_BYTE *)(a1 + 32) = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_3D464(v9, v10, *(_BYTE *)(a2 + 32));
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    v13 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v8;
    sub_3B5BC(v11, v12, v13);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v18 = (id *)(a1 + 56);
  v19 = (id *)(a2 + 56);
  v20 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v20 == 255)
    {
      v26 = *v19;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v18 = v26;
    }
    else
    {
      v24 = *v19;
      sub_3D47C(*v19, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v24;
      *(_BYTE *)(a1 + 64) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_3E470(a1 + 56);
    v25 = *(_BYTE *)(a2 + 64);
    *v18 = *v19;
    *(_BYTE *)(a1 + 64) = v25;
  }
  else
  {
    v21 = *v19;
    sub_3D47C(*v19, *(_BYTE *)(a2 + 64));
    v22 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v21;
    v23 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v20;
    sub_3D624(v22, v23);
  }
  v27 = (id *)(a1 + 72);
  v28 = (id *)(a2 + 72);
  v29 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v29 == 255)
    {
      v35 = *v28;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v27 = v35;
    }
    else
    {
      v33 = *v28;
      sub_3D47C(*v28, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v33;
      *(_BYTE *)(a1 + 80) = v29;
    }
  }
  else if (v29 == 255)
  {
    sub_3E470(a1 + 72);
    v34 = *(_BYTE *)(a2 + 80);
    *v27 = *v28;
    *(_BYTE *)(a1 + 80) = v34;
  }
  else
  {
    v30 = *v28;
    sub_3D47C(*v28, *(_BYTE *)(a2 + 80));
    v31 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v30;
    v32 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v29;
    sub_3D624(v31, v32);
  }
  v36 = (id *)(a1 + 88);
  v37 = (id *)(a2 + 88);
  v38 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v38 == 255)
    {
      v44 = *v37;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v36 = v44;
    }
    else
    {
      v42 = *v37;
      sub_3D47C(*v37, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v42;
      *(_BYTE *)(a1 + 96) = v38;
    }
  }
  else if (v38 == 255)
  {
    sub_3E470(a1 + 88);
    v43 = *(_BYTE *)(a2 + 96);
    *v36 = *v37;
    *(_BYTE *)(a1 + 96) = v43;
  }
  else
  {
    v39 = *v37;
    sub_3D47C(*v37, *(_BYTE *)(a2 + 96));
    v40 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v39;
    v41 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v38;
    sub_3D624(v40, v41);
  }
  v45 = (id *)(a1 + 104);
  v46 = (id *)(a2 + 104);
  v47 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v47 == 255)
    {
      v53 = *v46;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v45 = v53;
    }
    else
    {
      v51 = *v46;
      sub_3D47C(*v46, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v51;
      *(_BYTE *)(a1 + 112) = v47;
    }
  }
  else if (v47 == 255)
  {
    sub_3E470(a1 + 104);
    v52 = *(_BYTE *)(a2 + 112);
    *v45 = *v46;
    *(_BYTE *)(a1 + 112) = v52;
  }
  else
  {
    v48 = *v46;
    sub_3D47C(*v46, *(_BYTE *)(a2 + 112));
    v49 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v48;
    v50 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v47;
    sub_3D624(v49, v50);
  }
  v54 = (id *)(a1 + 120);
  v55 = (id *)(a2 + 120);
  v56 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v56 == 255)
    {
      v62 = *v55;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v54 = v62;
    }
    else
    {
      v60 = *v55;
      sub_3D47C(*v55, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v60;
      *(_BYTE *)(a1 + 128) = v56;
    }
  }
  else if (v56 == 255)
  {
    sub_3E470(a1 + 120);
    v61 = *(_BYTE *)(a2 + 128);
    *v54 = *v55;
    *(_BYTE *)(a1 + 128) = v61;
  }
  else
  {
    v57 = *v55;
    sub_3D47C(*v55, *(_BYTE *)(a2 + 128));
    v58 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v57;
    v59 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v56;
    sub_3D624(v58, v59);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v63 = (int *)type metadata accessor for ArtworkModel(0);
  v64 = v63[11];
  v65 = a1 + v64;
  v66 = a2 + v64;
  v67 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 24))(v65, v66, v67);
  v68 = v63[12];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (_QWORD *)(a2 + v68);
  *v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v63[13]) = *(_BYTE *)(a2 + v63[13]);
  *(_BYTE *)(a1 + v63[14]) = *(_BYTE *)(a2 + v63[14]);
  *(_BYTE *)(a1 + v63[15]) = *(_BYTE *)(a2 + v63[15]);
  v71 = v63[16];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)(a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v74 = *(int *)(a3 + 20);
  v75 = *(_QWORD *)(a2 + v74);
  v76 = *(_QWORD *)(a1 + v74);
  *(_QWORD *)(a1 + v74) = v75;
  swift_retain();
  swift_release(v76);
  return a1;
}

uint64_t sub_27A904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v7 = (int *)type metadata accessor for ArtworkModel(0);
  v8 = v7[11];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  *(_BYTE *)(a1 + v7[15]) = *(_BYTE *)(a2 + v7[15]);
  *(_OWORD *)(a1 + v7[16]) = *(_OWORD *)(a2 + v7[16]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_27AA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  int v14;
  void *v15;
  _QWORD *v16;
  int v17;
  int v18;
  void *v19;
  _QWORD *v20;
  int v21;
  int v22;
  void *v23;
  _QWORD *v24;
  int v25;
  int v26;
  void *v27;
  _QWORD *v28;
  int v29;
  int v30;
  void *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a1 + 32);
  if (v8 != 255)
  {
    v9 = *(unsigned __int8 *)(a2 + 32);
    if (v9 != 255)
    {
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v7;
      *(_BYTE *)(a1 + 32) = v9;
      sub_3B5BC(v10, v11, v8);
      goto LABEL_6;
    }
    sub_3E43C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v12 = (_QWORD *)(a2 + 56);
  v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 != 255)
  {
    v14 = *(unsigned __int8 *)(a2 + 64);
    if (v14 != 255)
    {
      v15 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v12;
      *(_BYTE *)(a1 + 64) = v14;
      sub_3D624(v15, v13);
      goto LABEL_11;
    }
    sub_3E470(a1 + 56);
  }
  *(_QWORD *)(a1 + 56) = *v12;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v16 = (_QWORD *)(a2 + 72);
  v17 = *(unsigned __int8 *)(a1 + 80);
  if (v17 != 255)
  {
    v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 != 255)
    {
      v19 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v16;
      *(_BYTE *)(a1 + 80) = v18;
      sub_3D624(v19, v17);
      goto LABEL_16;
    }
    sub_3E470(a1 + 72);
  }
  *(_QWORD *)(a1 + 72) = *v16;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_16:
  v20 = (_QWORD *)(a2 + 88);
  v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      v23 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v20;
      *(_BYTE *)(a1 + 96) = v22;
      sub_3D624(v23, v21);
      goto LABEL_21;
    }
    sub_3E470(a1 + 88);
  }
  *(_QWORD *)(a1 + 88) = *v20;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_21:
  v24 = (_QWORD *)(a2 + 104);
  v25 = *(unsigned __int8 *)(a1 + 112);
  if (v25 != 255)
  {
    v26 = *(unsigned __int8 *)(a2 + 112);
    if (v26 != 255)
    {
      v27 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v24;
      *(_BYTE *)(a1 + 112) = v26;
      sub_3D624(v27, v25);
      goto LABEL_26;
    }
    sub_3E470(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v24;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_26:
  v28 = (_QWORD *)(a2 + 120);
  v29 = *(unsigned __int8 *)(a1 + 128);
  if (v29 == 255)
  {
LABEL_30:
    *(_QWORD *)(a1 + 120) = *v28;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    goto LABEL_31;
  }
  v30 = *(unsigned __int8 *)(a2 + 128);
  if (v30 == 255)
  {
    sub_3E470(a1 + 120);
    goto LABEL_30;
  }
  v31 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *v28;
  *(_BYTE *)(a1 + 128) = v30;
  sub_3D624(v31, v29);
LABEL_31:
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v32 = (int *)type metadata accessor for ArtworkModel(0);
  v33 = v32[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  v37 = v32[12];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v32[13]) = *(_BYTE *)(a2 + v32[13]);
  *(_BYTE *)(a1 + v32[14]) = *(_BYTE *)(a2 + v32[14]);
  *(_BYTE *)(a1 + v32[15]) = *(_BYTE *)(a2 + v32[15]);
  v42 = v32[16];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  v47 = *(int *)(a3 + 20);
  v48 = *(_QWORD *)(a1 + v47);
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  swift_release(v48);
  return a1;
}

uint64_t sub_27ACEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_27ACF8);
}

uint64_t __swift_get_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ArtworkModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_27AD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_27AD84);
}

uint64_t __swift_store_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ArtworkModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_27AE00(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ArtworkModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_27AE74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  id v15;
  id *v16;
  int v17;
  id v18;
  id *v19;
  int v20;
  id v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(uint64_t *, _QWORD, uint64_t, int *);

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)type metadata accessor for ArtworkModel(0);
    v7 = *((_QWORD *)v6 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v10 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v11 = a2[2];
        v12 = a2[3];
        sub_3D464(v11, v12, v10);
        a1[2] = v11;
        a1[3] = v12;
        *((_BYTE *)a1 + 32) = v10;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v13 = (id *)(a2 + 7);
      v14 = *((unsigned __int8 *)a2 + 64);
      if (v14 == 255)
      {
        a1[7] = (uint64_t)*v13;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v15 = *v13;
        sub_3D47C(*v13, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v15;
        *((_BYTE *)a1 + 64) = v14;
      }
      v16 = (id *)(a2 + 9);
      v17 = *((unsigned __int8 *)a2 + 80);
      if (v17 == 255)
      {
        a1[9] = (uint64_t)*v16;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v18 = *v16;
        sub_3D47C(*v16, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v18;
        *((_BYTE *)a1 + 80) = v17;
      }
      v19 = (id *)(a2 + 11);
      v20 = *((unsigned __int8 *)a2 + 96);
      if (v20 == 255)
      {
        a1[11] = (uint64_t)*v19;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v21 = *v19;
        sub_3D47C(*v19, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v21;
        *((_BYTE *)a1 + 96) = v20;
      }
      v22 = (id *)(a2 + 13);
      v23 = *((unsigned __int8 *)a2 + 112);
      if (v23 == 255)
      {
        a1[13] = (uint64_t)*v22;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v24 = *v22;
        sub_3D47C(*v22, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v24;
        *((_BYTE *)a1 + 112) = v23;
      }
      v25 = (id *)(a2 + 15);
      v26 = *((unsigned __int8 *)a2 + 128);
      if (v26 == 255)
      {
        a1[15] = (uint64_t)*v25;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v27 = *v25;
        sub_3D47C(*v25, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v27;
        *((_BYTE *)a1 + 128) = v26;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v28 = v6[11];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      v32 = v6[12];
      v33 = (uint64_t *)((char *)a1 + v32);
      v34 = (uint64_t *)((char *)a2 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      *((_BYTE *)a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
      *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
      *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
      v36 = v6[16];
      v37 = (uint64_t *)((char *)a1 + v36);
      v38 = (uint64_t *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_27B160(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for ArtworkModel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 != 255)
      sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
    v5 = *(unsigned __int8 *)(a1 + 64);
    if (v5 != 255)
      sub_3D624(*(id *)(a1 + 56), v5);
    v6 = *(unsigned __int8 *)(a1 + 80);
    if (v6 != 255)
      sub_3D624(*(id *)(a1 + 72), v6);
    v7 = *(unsigned __int8 *)(a1 + 96);
    if (v7 != 255)
      sub_3D624(*(id *)(a1 + 88), v7);
    v8 = *(unsigned __int8 *)(a1 + 112);
    if (v8 != 255)
      sub_3D624(*(id *)(a1 + 104), v8);
    v9 = *(unsigned __int8 *)(a1 + 128);
    if (v9 != 255)
      sub_3D624(*(id *)(a1 + 120), v9);
    v10 = a1 + *(int *)(v2 + 44);
    v11 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_27B27C(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  int v12;
  id v13;
  id *v14;
  int v15;
  id v16;
  id *v17;
  int v18;
  id v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t, int *);

  v4 = (int *)type metadata accessor for ArtworkModel(0);
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_3D464(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((_BYTE *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v11 = (id *)(a2 + 7);
    v12 = *((unsigned __int8 *)a2 + 64);
    if (v12 == 255)
    {
      a1[7] = *v11;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v13 = *v11;
      sub_3D47C(*v11, *((_BYTE *)a2 + 64));
      a1[7] = v13;
      *((_BYTE *)a1 + 64) = v12;
    }
    v14 = (id *)(a2 + 9);
    v15 = *((unsigned __int8 *)a2 + 80);
    if (v15 == 255)
    {
      a1[9] = *v14;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v16 = *v14;
      sub_3D47C(*v14, *((_BYTE *)a2 + 80));
      a1[9] = v16;
      *((_BYTE *)a1 + 80) = v15;
    }
    v17 = (id *)(a2 + 11);
    v18 = *((unsigned __int8 *)a2 + 96);
    if (v18 == 255)
    {
      a1[11] = *v17;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v19 = *v17;
      sub_3D47C(*v17, *((_BYTE *)a2 + 96));
      a1[11] = v19;
      *((_BYTE *)a1 + 96) = v18;
    }
    v20 = (id *)(a2 + 13);
    v21 = *((unsigned __int8 *)a2 + 112);
    if (v21 == 255)
    {
      a1[13] = *v20;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v22 = *v20;
      sub_3D47C(*v20, *((_BYTE *)a2 + 112));
      a1[13] = v22;
      *((_BYTE *)a1 + 112) = v21;
    }
    v23 = (id *)(a2 + 15);
    v24 = *((unsigned __int8 *)a2 + 128);
    if (v24 == 255)
    {
      a1[15] = *v23;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v25 = *v23;
      sub_3D47C(*v23, *((_BYTE *)a2 + 128));
      a1[15] = v25;
      *((_BYTE *)a1 + 128) = v24;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v26 = v4[11];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    v30 = v4[12];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *((_BYTE *)a1 + v4[13]) = *((_BYTE *)a2 + v4[13]);
    *((_BYTE *)a1 + v4[14]) = *((_BYTE *)a2 + v4[14]);
    *((_BYTE *)a1 + v4[15]) = *((_BYTE *)a2 + v4[15]);
    v34 = v4[16];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v5 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_27B540(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, int *);
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  __int128 v21;
  id *v22;
  int v23;
  id v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  void (*v52)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  id *v57;
  id *v58;
  int v59;
  id v60;
  void *v61;
  char v62;
  id v63;
  char v64;
  id v65;
  id *v66;
  id *v67;
  int v68;
  id v69;
  void *v70;
  char v71;
  id v72;
  char v73;
  id v74;
  id *v75;
  id *v76;
  int v77;
  id v78;
  void *v79;
  char v80;
  id v81;
  char v82;
  id v83;
  id *v84;
  id *v85;
  int v86;
  id v87;
  void *v88;
  char v89;
  id v90;
  char v91;
  id v92;
  id *v93;
  id *v94;
  int v95;
  id v96;
  void *v97;
  char v98;
  id v99;
  char v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;

  v4 = (int *)type metadata accessor for ArtworkModel(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v9 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        v21 = *(_OWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v21;
      }
      else
      {
        v10 = *(_QWORD *)(a2 + 16);
        v11 = *(_QWORD *)(a2 + 24);
        sub_3D464(v10, v11, v9);
        *(_QWORD *)(a1 + 16) = v10;
        *(_QWORD *)(a1 + 24) = v11;
        *(_BYTE *)(a1 + 32) = v9;
      }
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v22 = (id *)(a2 + 56);
      v23 = *(unsigned __int8 *)(a2 + 64);
      if (v23 == 255)
      {
        v25 = *v22;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v25;
      }
      else
      {
        v24 = *v22;
        sub_3D47C(*v22, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 56) = v24;
        *(_BYTE *)(a1 + 64) = v23;
      }
      v26 = (id *)(a2 + 72);
      v27 = *(unsigned __int8 *)(a2 + 80);
      if (v27 == 255)
      {
        v29 = *v26;
        *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = v29;
      }
      else
      {
        v28 = *v26;
        sub_3D47C(*v26, *(_BYTE *)(a2 + 80));
        *(_QWORD *)(a1 + 72) = v28;
        *(_BYTE *)(a1 + 80) = v27;
      }
      v30 = (id *)(a2 + 88);
      v31 = *(unsigned __int8 *)(a2 + 96);
      if (v31 == 255)
      {
        v33 = *v30;
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = v33;
      }
      else
      {
        v32 = *v30;
        sub_3D47C(*v30, *(_BYTE *)(a2 + 96));
        *(_QWORD *)(a1 + 88) = v32;
        *(_BYTE *)(a1 + 96) = v31;
      }
      v34 = (id *)(a2 + 104);
      v35 = *(unsigned __int8 *)(a2 + 112);
      if (v35 == 255)
      {
        v37 = *v34;
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v37;
      }
      else
      {
        v36 = *v34;
        sub_3D47C(*v34, *(_BYTE *)(a2 + 112));
        *(_QWORD *)(a1 + 104) = v36;
        *(_BYTE *)(a1 + 112) = v35;
      }
      v38 = (id *)(a2 + 120);
      v39 = *(unsigned __int8 *)(a2 + 128);
      if (v39 == 255)
      {
        v41 = *v38;
        *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v41;
      }
      else
      {
        v40 = *v38;
        sub_3D47C(*v38, *(_BYTE *)(a2 + 128));
        *(_QWORD *)(a1 + 120) = v40;
        *(_BYTE *)(a1 + 128) = v39;
      }
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      v42 = v4[11];
      v43 = a1 + v42;
      v44 = a2 + v42;
      v45 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      v46 = v4[12];
      v47 = (_QWORD *)(a1 + v46);
      v48 = (_QWORD *)(a2 + v46);
      *v47 = *v48;
      v47[1] = v48[1];
      *(_BYTE *)(a1 + v4[13]) = *(_BYTE *)(a2 + v4[13]);
      *(_BYTE *)(a1 + v4[14]) = *(_BYTE *)(a2 + v4[14]);
      *(_BYTE *)(a1 + v4[15]) = *(_BYTE *)(a2 + v4[15]);
      v49 = v4[16];
      v50 = (_QWORD *)(a1 + v49);
      v51 = (_QWORD *)(a2 + v49);
      *v50 = *v51;
      v50[1] = v51[1];
      v52 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v5 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(a1, 0, 1, v4);
      return a1;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_145D8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (__int128 *)(a1 + 16);
  v14 = (__int128 *)(a2 + 16);
  v15 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v15 == 255)
    {
      v56 = *v14;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v13 = v56;
    }
    else
    {
      v53 = *(_QWORD *)(a2 + 16);
      v54 = *(_QWORD *)(a2 + 24);
      sub_3D464(v53, v54, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v53;
      *(_QWORD *)(a1 + 24) = v54;
      *(_BYTE *)(a1 + 32) = v15;
    }
  }
  else if (v15 == 255)
  {
    sub_3E43C(a1 + 16);
    v55 = *(_BYTE *)(a2 + 32);
    *v13 = *v14;
    *(_BYTE *)(a1 + 32) = v55;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(a2 + 24);
    sub_3D464(v16, v17, *(_BYTE *)(a2 + 32));
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v17;
    v20 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v15;
    sub_3B5BC(v18, v19, v20);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v57 = (id *)(a1 + 56);
  v58 = (id *)(a2 + 56);
  v59 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v59 == 255)
    {
      v65 = *v58;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *v57 = v65;
    }
    else
    {
      v63 = *v58;
      sub_3D47C(*v58, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 56) = v63;
      *(_BYTE *)(a1 + 64) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_3E470(a1 + 56);
    v64 = *(_BYTE *)(a2 + 64);
    *v57 = *v58;
    *(_BYTE *)(a1 + 64) = v64;
  }
  else
  {
    v60 = *v58;
    sub_3D47C(*v58, *(_BYTE *)(a2 + 64));
    v61 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v60;
    v62 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v59;
    sub_3D624(v61, v62);
  }
  v66 = (id *)(a1 + 72);
  v67 = (id *)(a2 + 72);
  v68 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v68 == 255)
    {
      v74 = *v67;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v66 = v74;
    }
    else
    {
      v72 = *v67;
      sub_3D47C(*v67, *(_BYTE *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v72;
      *(_BYTE *)(a1 + 80) = v68;
    }
  }
  else if (v68 == 255)
  {
    sub_3E470(a1 + 72);
    v73 = *(_BYTE *)(a2 + 80);
    *v66 = *v67;
    *(_BYTE *)(a1 + 80) = v73;
  }
  else
  {
    v69 = *v67;
    sub_3D47C(*v67, *(_BYTE *)(a2 + 80));
    v70 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v69;
    v71 = *(_BYTE *)(a1 + 80);
    *(_BYTE *)(a1 + 80) = v68;
    sub_3D624(v70, v71);
  }
  v75 = (id *)(a1 + 88);
  v76 = (id *)(a2 + 88);
  v77 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v77 == 255)
    {
      v83 = *v76;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v75 = v83;
    }
    else
    {
      v81 = *v76;
      sub_3D47C(*v76, *(_BYTE *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v81;
      *(_BYTE *)(a1 + 96) = v77;
    }
  }
  else if (v77 == 255)
  {
    sub_3E470(a1 + 88);
    v82 = *(_BYTE *)(a2 + 96);
    *v75 = *v76;
    *(_BYTE *)(a1 + 96) = v82;
  }
  else
  {
    v78 = *v76;
    sub_3D47C(*v76, *(_BYTE *)(a2 + 96));
    v79 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v78;
    v80 = *(_BYTE *)(a1 + 96);
    *(_BYTE *)(a1 + 96) = v77;
    sub_3D624(v79, v80);
  }
  v84 = (id *)(a1 + 104);
  v85 = (id *)(a2 + 104);
  v86 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v86 == 255)
    {
      v92 = *v85;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v84 = v92;
    }
    else
    {
      v90 = *v85;
      sub_3D47C(*v85, *(_BYTE *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v90;
      *(_BYTE *)(a1 + 112) = v86;
    }
  }
  else if (v86 == 255)
  {
    sub_3E470(a1 + 104);
    v91 = *(_BYTE *)(a2 + 112);
    *v84 = *v85;
    *(_BYTE *)(a1 + 112) = v91;
  }
  else
  {
    v87 = *v85;
    sub_3D47C(*v85, *(_BYTE *)(a2 + 112));
    v88 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v87;
    v89 = *(_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 112) = v86;
    sub_3D624(v88, v89);
  }
  v93 = (id *)(a1 + 120);
  v94 = (id *)(a2 + 120);
  v95 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v95 == 255)
    {
      v101 = *v94;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *v93 = v101;
    }
    else
    {
      v99 = *v94;
      sub_3D47C(*v94, *(_BYTE *)(a2 + 128));
      *(_QWORD *)(a1 + 120) = v99;
      *(_BYTE *)(a1 + 128) = v95;
    }
  }
  else if (v95 == 255)
  {
    sub_3E470(a1 + 120);
    v100 = *(_BYTE *)(a2 + 128);
    *v93 = *v94;
    *(_BYTE *)(a1 + 128) = v100;
  }
  else
  {
    v96 = *v94;
    sub_3D47C(*v94, *(_BYTE *)(a2 + 128));
    v97 = *(void **)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v96;
    v98 = *(_BYTE *)(a1 + 128);
    *(_BYTE *)(a1 + 128) = v95;
    sub_3D624(v97, v98);
  }
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v102 = v4[11];
  v103 = a1 + v102;
  v104 = a2 + v102;
  v105 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v103, v104, v105);
  v106 = v4[12];
  v107 = (_QWORD *)(a1 + v106);
  v108 = (_QWORD *)(a2 + v106);
  *v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v4[13]) = *(_BYTE *)(a2 + v4[13]);
  *(_BYTE *)(a1 + v4[14]) = *(_BYTE *)(a2 + v4[14]);
  *(_BYTE *)(a1 + v4[15]) = *(_BYTE *)(a2 + v4[15]);
  v109 = v4[16];
  v110 = (_QWORD *)(a1 + v109);
  v111 = (_QWORD *)(a2 + v109);
  *v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_27BCCC(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = (int *)type metadata accessor for ArtworkModel(0);
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v8 = v4[11];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *((_BYTE *)a1 + v4[13]) = *((_BYTE *)a2 + v4[13]);
    *((_BYTE *)a1 + v4[14]) = *((_BYTE *)a2 + v4[14]);
    *((_BYTE *)a1 + v4[15]) = *((_BYTE *)a2 + v4[15]);
    *(_OWORD *)((char *)a1 + v4[16]) = *(_OWORD *)((char *)a2 + v4[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_27BE1C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, int *);
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _OWORD *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  int v24;
  void *v25;
  _QWORD *v26;
  int v27;
  int v28;
  void *v29;
  _QWORD *v30;
  int v31;
  int v32;
  void *v33;
  _QWORD *v34;
  int v35;
  int v36;
  void *v37;
  _QWORD *v38;
  int v39;
  int v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  v4 = (int *)type metadata accessor for ArtworkModel(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_145D8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
      goto LABEL_6;
    }
    v16 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v16;
    swift_bridgeObjectRelease();
    v17 = (_OWORD *)(a2 + 16);
    v18 = *(unsigned __int8 *)(a1 + 32);
    if (v18 != 255)
    {
      v19 = *(unsigned __int8 *)(a2 + 32);
      if (v19 != 255)
      {
        v20 = *(_QWORD *)(a1 + 16);
        v21 = *(_QWORD *)(a1 + 24);
        *(_OWORD *)(a1 + 16) = *v17;
        *(_BYTE *)(a1 + 32) = v19;
        sub_3B5BC(v20, v21, v18);
        goto LABEL_13;
      }
      sub_3E43C(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *v17;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v22 = (_QWORD *)(a2 + 56);
    v23 = *(unsigned __int8 *)(a1 + 64);
    if (v23 != 255)
    {
      v24 = *(unsigned __int8 *)(a2 + 64);
      if (v24 != 255)
      {
        v25 = *(void **)(a1 + 56);
        *(_QWORD *)(a1 + 56) = *v22;
        *(_BYTE *)(a1 + 64) = v24;
        sub_3D624(v25, v23);
        goto LABEL_18;
      }
      sub_3E470(a1 + 56);
    }
    *(_QWORD *)(a1 + 56) = *v22;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_18:
    v26 = (_QWORD *)(a2 + 72);
    v27 = *(unsigned __int8 *)(a1 + 80);
    if (v27 != 255)
    {
      v28 = *(unsigned __int8 *)(a2 + 80);
      if (v28 != 255)
      {
        v29 = *(void **)(a1 + 72);
        *(_QWORD *)(a1 + 72) = *v26;
        *(_BYTE *)(a1 + 80) = v28;
        sub_3D624(v29, v27);
        goto LABEL_23;
      }
      sub_3E470(a1 + 72);
    }
    *(_QWORD *)(a1 + 72) = *v26;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
LABEL_23:
    v30 = (_QWORD *)(a2 + 88);
    v31 = *(unsigned __int8 *)(a1 + 96);
    if (v31 != 255)
    {
      v32 = *(unsigned __int8 *)(a2 + 96);
      if (v32 != 255)
      {
        v33 = *(void **)(a1 + 88);
        *(_QWORD *)(a1 + 88) = *v30;
        *(_BYTE *)(a1 + 96) = v32;
        sub_3D624(v33, v31);
        goto LABEL_28;
      }
      sub_3E470(a1 + 88);
    }
    *(_QWORD *)(a1 + 88) = *v30;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_28:
    v34 = (_QWORD *)(a2 + 104);
    v35 = *(unsigned __int8 *)(a1 + 112);
    if (v35 != 255)
    {
      v36 = *(unsigned __int8 *)(a2 + 112);
      if (v36 != 255)
      {
        v37 = *(void **)(a1 + 104);
        *(_QWORD *)(a1 + 104) = *v34;
        *(_BYTE *)(a1 + 112) = v36;
        sub_3D624(v37, v35);
        goto LABEL_33;
      }
      sub_3E470(a1 + 104);
    }
    *(_QWORD *)(a1 + 104) = *v34;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_33:
    v38 = (_QWORD *)(a2 + 120);
    v39 = *(unsigned __int8 *)(a1 + 128);
    if (v39 != 255)
    {
      v40 = *(unsigned __int8 *)(a2 + 128);
      if (v40 != 255)
      {
        v41 = *(void **)(a1 + 120);
        *(_QWORD *)(a1 + 120) = *v38;
        *(_BYTE *)(a1 + 128) = v40;
        sub_3D624(v41, v39);
LABEL_38:
        *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
        v42 = v4[11];
        v43 = a1 + v42;
        v44 = a2 + v42;
        v45 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
        v46 = v4[12];
        v47 = (_QWORD *)(a1 + v46);
        v48 = (uint64_t *)(a2 + v46);
        v50 = *v48;
        v49 = v48[1];
        *v47 = v50;
        v47[1] = v49;
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + v4[13]) = *(_BYTE *)(a2 + v4[13]);
        *(_BYTE *)(a1 + v4[14]) = *(_BYTE *)(a2 + v4[14]);
        *(_BYTE *)(a1 + v4[15]) = *(_BYTE *)(a2 + v4[15]);
        v51 = v4[16];
        v52 = (_QWORD *)(a1 + v51);
        v53 = (uint64_t *)(a2 + v51);
        v55 = *v53;
        v54 = v53[1];
        *v52 = v55;
        v52[1] = v54;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_3E470(a1 + 120);
    }
    *(_QWORD *)(a1 + 120) = *v38;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    goto LABEL_38;
  }
  if (v8)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v10 = v4[11];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)(a1 + v4[12]) = *(_OWORD *)(a2 + v4[12]);
  *(_BYTE *)(a1 + v4[13]) = *(_BYTE *)(a2 + v4[13]);
  *(_BYTE *)(a1 + v4[14]) = *(_BYTE *)(a2 + v4[14]);
  *(_BYTE *)(a1 + v4[15]) = *(_BYTE *)(a2 + v4[15]);
  *(_OWORD *)(a1 + v4[16]) = *(_OWORD *)(a2 + v4[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_27C224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_27C230);
}

uint64_t sub_27C230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_27C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_27C27C);
}

uint64_t sub_27C27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_27C2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2744F4(a1, a2, a3, (uint64_t (*)(uint64_t))sub_5971C);
}

uint64_t *sub_27C2CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id *v40;
  int v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id *v46;
  int v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id *v52;
  int v53;
  id v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id *v93;
  int v94;
  id v95;
  id *v96;
  int v97;
  id v98;
  id *v99;
  int v100;
  id v101;
  id *v102;
  int v103;
  id v104;
  id *v105;
  int v106;
  id v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  id *v116;
  int v117;
  id v118;
  id *v119;
  int v120;
  id v121;
  id *v122;
  int v123;
  id v124;
  id *v125;
  int v126;
  id v127;
  id *v128;
  int v129;
  id v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  void (*v143)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v154;
  void (*v155)(char *, char *);
  uint64_t v156;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = (int *)type metadata accessor for ArtworkModel(0);
      v15 = *((_QWORD *)v14 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        v25 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v25 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        }
        else
        {
          v26 = a2[2];
          v27 = a2[3];
          sub_3D464(v26, v27, v25);
          a1[2] = v26;
          a1[3] = v27;
          *((_BYTE *)a1 + 32) = v25;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        v116 = (id *)(a2 + 7);
        v117 = *((unsigned __int8 *)a2 + 64);
        if (v117 == 255)
        {
          a1[7] = (uint64_t)*v116;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        }
        else
        {
          v118 = *v116;
          sub_3D47C(*v116, *((_BYTE *)a2 + 64));
          a1[7] = (uint64_t)v118;
          *((_BYTE *)a1 + 64) = v117;
        }
        v119 = (id *)(a2 + 9);
        v120 = *((unsigned __int8 *)a2 + 80);
        if (v120 == 255)
        {
          a1[9] = (uint64_t)*v119;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        }
        else
        {
          v121 = *v119;
          sub_3D47C(*v119, *((_BYTE *)a2 + 80));
          a1[9] = (uint64_t)v121;
          *((_BYTE *)a1 + 80) = v120;
        }
        v122 = (id *)(a2 + 11);
        v123 = *((unsigned __int8 *)a2 + 96);
        if (v123 == 255)
        {
          a1[11] = (uint64_t)*v122;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        }
        else
        {
          v124 = *v122;
          sub_3D47C(*v122, *((_BYTE *)a2 + 96));
          a1[11] = (uint64_t)v124;
          *((_BYTE *)a1 + 96) = v123;
        }
        v125 = (id *)(a2 + 13);
        v126 = *((unsigned __int8 *)a2 + 112);
        if (v126 == 255)
        {
          a1[13] = (uint64_t)*v125;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        }
        else
        {
          v127 = *v125;
          sub_3D47C(*v125, *((_BYTE *)a2 + 112));
          a1[13] = (uint64_t)v127;
          *((_BYTE *)a1 + 112) = v126;
        }
        v128 = (id *)(a2 + 15);
        v129 = *((unsigned __int8 *)a2 + 128);
        if (v129 == 255)
        {
          a1[15] = (uint64_t)*v128;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        }
        else
        {
          v130 = *v128;
          sub_3D47C(*v128, *((_BYTE *)a2 + 128));
          a1[15] = (uint64_t)v130;
          *((_BYTE *)a1 + 128) = v129;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v131 = v14[11];
        v132 = (char *)a1 + v131;
        v133 = (char *)a2 + v131;
        v134 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v132, v133, v134);
        v135 = v14[12];
        v136 = (uint64_t *)((char *)a1 + v135);
        v137 = (uint64_t *)((char *)a2 + v135);
        v138 = v137[1];
        *v136 = *v137;
        v136[1] = v138;
        *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
        *((_BYTE *)a1 + v14[14]) = *((_BYTE *)a2 + v14[14]);
        *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
        v139 = v14[16];
        v140 = (uint64_t *)((char *)a1 + v139);
        v141 = (uint64_t *)((char *)a2 + v139);
        v142 = v141[1];
        *v140 = *v141;
        v140[1] = v142;
        v143 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v143(a1, 0, 1, v14);
      }
      v144 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(uint64_t *)((char *)a1 + *(int *)(v144 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v144 + 48));
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v10 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v11 = a2[2];
        v12 = a2[3];
        sub_3D464(v11, v12, v10);
        a1[2] = v11;
        a1[3] = v12;
        *((_BYTE *)a1 + 32) = v10;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v21 = (id *)(a2 + 7);
      v22 = *((unsigned __int8 *)a2 + 64);
      if (v22 == 255)
      {
        a1[7] = (uint64_t)*v21;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v23 = *v21;
        sub_3D47C(*v21, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v23;
        *((_BYTE *)a1 + 64) = v22;
      }
      v31 = (id *)(a2 + 9);
      v32 = *((unsigned __int8 *)a2 + 80);
      if (v32 == 255)
      {
        a1[9] = (uint64_t)*v31;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v33 = *v31;
        sub_3D47C(*v31, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v33;
        *((_BYTE *)a1 + 80) = v32;
      }
      v37 = (id *)(a2 + 11);
      v38 = *((unsigned __int8 *)a2 + 96);
      if (v38 == 255)
      {
        a1[11] = (uint64_t)*v37;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v39 = *v37;
        sub_3D47C(*v37, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v39;
        *((_BYTE *)a1 + 96) = v38;
      }
      v43 = (id *)(a2 + 13);
      v44 = *((unsigned __int8 *)a2 + 112);
      if (v44 == 255)
      {
        a1[13] = (uint64_t)*v43;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v45 = *v43;
        sub_3D47C(*v43, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v45;
        *((_BYTE *)a1 + 112) = v44;
      }
      v49 = (id *)(a2 + 15);
      v50 = *((unsigned __int8 *)a2 + 128);
      if (v50 == 255)
      {
        a1[15] = (uint64_t)*v49;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v51 = *v49;
        sub_3D47C(*v49, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v51;
        *((_BYTE *)a1 + 128) = v50;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v55 = (int *)type metadata accessor for ArtworkModel(0);
      v56 = v55[11];
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
      v60 = v55[12];
      v61 = (uint64_t *)((char *)a1 + v60);
      v62 = (uint64_t *)((char *)a2 + v60);
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      *((_BYTE *)a1 + v55[13]) = *((_BYTE *)a2 + v55[13]);
      *((_BYTE *)a1 + v55[14]) = *((_BYTE *)a2 + v55[14]);
      *((_BYTE *)a1 + v55[15]) = *((_BYTE *)a2 + v55[15]);
      v64 = v55[16];
      v65 = (uint64_t *)((char *)a1 + v64);
      v66 = (uint64_t *)((char *)a2 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(uint64_t *)((char *)a1 + *(int *)(v68 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v68 + 48));
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 1;
    }
    else
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v19 = a2[2];
        v20 = a2[3];
        sub_3D464(v19, v20, v18);
        a1[2] = v19;
        a1[3] = v20;
        *((_BYTE *)a1 + 32) = v18;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v28 = (id *)(a2 + 7);
      v29 = *((unsigned __int8 *)a2 + 64);
      if (v29 == 255)
      {
        a1[7] = (uint64_t)*v28;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v30 = *v28;
        sub_3D47C(*v28, *((_BYTE *)a2 + 64));
        a1[7] = (uint64_t)v30;
        *((_BYTE *)a1 + 64) = v29;
      }
      v34 = (id *)(a2 + 9);
      v35 = *((unsigned __int8 *)a2 + 80);
      if (v35 == 255)
      {
        a1[9] = (uint64_t)*v34;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v36 = *v34;
        sub_3D47C(*v34, *((_BYTE *)a2 + 80));
        a1[9] = (uint64_t)v36;
        *((_BYTE *)a1 + 80) = v35;
      }
      v40 = (id *)(a2 + 11);
      v41 = *((unsigned __int8 *)a2 + 96);
      if (v41 == 255)
      {
        a1[11] = (uint64_t)*v40;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v42 = *v40;
        sub_3D47C(*v40, *((_BYTE *)a2 + 96));
        a1[11] = (uint64_t)v42;
        *((_BYTE *)a1 + 96) = v41;
      }
      v46 = (id *)(a2 + 13);
      v47 = *((unsigned __int8 *)a2 + 112);
      if (v47 == 255)
      {
        a1[13] = (uint64_t)*v46;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v48 = *v46;
        sub_3D47C(*v46, *((_BYTE *)a2 + 112));
        a1[13] = (uint64_t)v48;
        *((_BYTE *)a1 + 112) = v47;
      }
      v52 = (id *)(a2 + 15);
      v53 = *((unsigned __int8 *)a2 + 128);
      if (v53 == 255)
      {
        a1[15] = (uint64_t)*v52;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v54 = *v52;
        sub_3D47C(*v52, *((_BYTE *)a2 + 128));
        a1[15] = (uint64_t)v54;
        *((_BYTE *)a1 + 128) = v53;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v72 = (int *)type metadata accessor for ArtworkModel(0);
      v73 = v72[11];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      v76 = type metadata accessor for ArtworkCrop(0);
      v155 = *(void (**)(char *, char *))(*(_QWORD *)(v76 - 8) + 16);
      v156 = v76;
      v155(v74, v75);
      v77 = v72[12];
      v78 = (uint64_t *)((char *)a1 + v77);
      v79 = (uint64_t *)((char *)a2 + v77);
      v80 = v79[1];
      *v78 = *v79;
      v78[1] = v80;
      *((_BYTE *)a1 + v72[13]) = *((_BYTE *)a2 + v72[13]);
      *((_BYTE *)a1 + v72[14]) = *((_BYTE *)a2 + v72[14]);
      *((_BYTE *)a1 + v72[15]) = *((_BYTE *)a2 + v72[15]);
      v81 = v72[16];
      v82 = (uint64_t *)((char *)a1 + v81);
      v83 = (uint64_t *)((char *)a2 + v81);
      v84 = v83[1];
      *v82 = *v83;
      v82[1] = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v85 = *(int *)(v154 + 48);
      v86 = (char *)a1 + v85;
      v87 = (char *)a2 + v85;
      v88 = *(uint64_t *)((char *)a2 + v85 + 8);
      *(_QWORD *)v86 = *(uint64_t *)((char *)a2 + v85);
      *((_QWORD *)v86 + 1) = v88;
      v89 = *((unsigned __int8 *)a2 + v85 + 32);
      swift_bridgeObjectRetain();
      if (v89 == 255)
      {
        *((_OWORD *)v86 + 1) = *((_OWORD *)v87 + 1);
        v86[32] = v87[32];
      }
      else
      {
        v90 = v7;
        v91 = *((_QWORD *)v87 + 2);
        v92 = *((_QWORD *)v87 + 3);
        sub_3D464(v91, v92, v89);
        *((_QWORD *)v86 + 2) = v91;
        *((_QWORD *)v86 + 3) = v92;
        v7 = v90;
        v86[32] = v89;
      }
      *(_OWORD *)(v86 + 40) = *(_OWORD *)(v87 + 40);
      v93 = (id *)(v87 + 56);
      v94 = v87[64];
      if (v94 == 255)
      {
        *((_QWORD *)v86 + 7) = *v93;
        v86[64] = v87[64];
      }
      else
      {
        v95 = *v93;
        sub_3D47C(*v93, v87[64]);
        *((_QWORD *)v86 + 7) = v95;
        v86[64] = v94;
      }
      v96 = (id *)(v87 + 72);
      v97 = v87[80];
      if (v97 == 255)
      {
        *((_QWORD *)v86 + 9) = *v96;
        v86[80] = v87[80];
      }
      else
      {
        v98 = *v96;
        sub_3D47C(*v96, v87[80]);
        *((_QWORD *)v86 + 9) = v98;
        v86[80] = v97;
      }
      v99 = (id *)(v87 + 88);
      v100 = v87[96];
      if (v100 == 255)
      {
        *((_QWORD *)v86 + 11) = *v99;
        v86[96] = v87[96];
      }
      else
      {
        v101 = *v99;
        sub_3D47C(*v99, v87[96]);
        *((_QWORD *)v86 + 11) = v101;
        v86[96] = v100;
      }
      v102 = (id *)(v87 + 104);
      v103 = v87[112];
      if (v103 == 255)
      {
        *((_QWORD *)v86 + 13) = *v102;
        v86[112] = v87[112];
      }
      else
      {
        v104 = *v102;
        sub_3D47C(*v102, v87[112]);
        *((_QWORD *)v86 + 13) = v104;
        v86[112] = v103;
      }
      v105 = (id *)(v87 + 120);
      v106 = v87[128];
      if (v106 == 255)
      {
        *((_QWORD *)v86 + 15) = *v105;
        v86[128] = v87[128];
      }
      else
      {
        v107 = *v105;
        sub_3D47C(*v105, v87[128]);
        *((_QWORD *)v86 + 15) = v107;
        v86[128] = v106;
      }
      v86[129] = v87[129];
      ((void (*)(char *, char *, uint64_t))v155)(&v86[v72[11]], &v87[v72[11]], v156);
      v108 = v72[12];
      v109 = &v86[v108];
      v110 = &v87[v108];
      v111 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = v111;
      v86[v72[13]] = v87[v72[13]];
      v86[v72[14]] = v87[v72[14]];
      v86[v72[15]] = v87[v72[15]];
      v112 = v72[16];
      v113 = &v86[v112];
      v114 = &v87[v112];
      v115 = *((_QWORD *)v114 + 1);
      *(_QWORD *)v113 = *(_QWORD *)v114;
      *((_QWORD *)v113 + 1) = v115;
      *(uint64_t *)((char *)a1 + *(int *)(v154 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v154 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v69 = a1;
      v70 = v7;
      v71 = 0;
    }
    swift_storeEnumTagMultiPayload(v69, v70, v71);
    v145 = *(int *)(a3 + 20);
    v146 = (char *)a1 + v145;
    v147 = (char *)a2 + v145;
    v148 = type metadata accessor for NamedCoordinateSpace(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v146, v147, v148);
    v149 = *(int *)(a3 + 24);
    v150 = (uint64_t *)((char *)a1 + v149);
    v151 = (uint64_t *)((char *)a2 + v149);
    v152 = v151[1];
    *v150 = *v151;
    v150[1] = v152;
  }
  swift_retain();
  return a1;
}

uint64_t sub_27CD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v25 = type metadata accessor for ArtworkModel(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(a1, 1, v25))
      {
        swift_bridgeObjectRelease();
        v26 = *(unsigned __int8 *)(a1 + 32);
        if (v26 != 255)
          sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v26);
        v27 = *(unsigned __int8 *)(a1 + 64);
        if (v27 != 255)
          sub_3D624(*(id *)(a1 + 56), v27);
        v28 = *(unsigned __int8 *)(a1 + 80);
        if (v28 != 255)
          sub_3D624(*(id *)(a1 + 72), v28);
        v29 = *(unsigned __int8 *)(a1 + 96);
        if (v29 != 255)
          sub_3D624(*(id *)(a1 + 88), v29);
        v30 = *(unsigned __int8 *)(a1 + 112);
        if (v30 != 255)
          sub_3D624(*(id *)(a1 + 104), v30);
        v31 = *(unsigned __int8 *)(a1 + 128);
        if (v31 != 255)
          sub_3D624(*(id *)(a1 + 120), v31);
        v32 = a1 + *(int *)(v25 + 44);
        v33 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = qword_3C4878;
      goto LABEL_57;
    case 1:
      swift_bridgeObjectRelease();
      v35 = *(unsigned __int8 *)(a1 + 32);
      if (v35 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v35);
      v36 = *(unsigned __int8 *)(a1 + 64);
      if (v36 != 255)
        sub_3D624(*(id *)(a1 + 56), v36);
      v37 = *(unsigned __int8 *)(a1 + 80);
      if (v37 != 255)
        sub_3D624(*(id *)(a1 + 72), v37);
      v38 = *(unsigned __int8 *)(a1 + 96);
      if (v38 != 255)
        sub_3D624(*(id *)(a1 + 88), v38);
      v39 = *(unsigned __int8 *)(a1 + 112);
      if (v39 != 255)
        sub_3D624(*(id *)(a1 + 104), v39);
      v40 = *(unsigned __int8 *)(a1 + 128);
      if (v40 != 255)
        sub_3D624(*(id *)(a1 + 120), v40);
      v41 = a1 + *(int *)(type metadata accessor for ArtworkModel(0) + 44);
      v42 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = &qword_3C4870;
LABEL_57:
      v24 = (int *)(__swift_instantiateConcreteTypeFromMangledName(v34) + 48);
LABEL_58:
      swift_release(*(_QWORD *)(a1 + *v24));
      break;
    case 0:
      swift_bridgeObjectRelease();
      v6 = *(unsigned __int8 *)(a1 + 32);
      if (v6 != 255)
        sub_3B5BC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v6);
      v7 = *(unsigned __int8 *)(a1 + 64);
      if (v7 != 255)
        sub_3D624(*(id *)(a1 + 56), v7);
      v8 = *(unsigned __int8 *)(a1 + 80);
      if (v8 != 255)
        sub_3D624(*(id *)(a1 + 72), v8);
      v9 = *(unsigned __int8 *)(a1 + 96);
      if (v9 != 255)
        sub_3D624(*(id *)(a1 + 88), v9);
      v10 = *(unsigned __int8 *)(a1 + 112);
      if (v10 != 255)
        sub_3D624(*(id *)(a1 + 104), v10);
      v11 = *(unsigned __int8 *)(a1 + 128);
      if (v11 != 255)
        sub_3D624(*(id *)(a1 + 120), v11);
      v12 = type metadata accessor for ArtworkModel(0);
      v13 = a1 + *(int *)(v12 + 44);
      v14 = type metadata accessor for ArtworkCrop(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v15(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v17 = a1 + *(int *)(v16 + 48);
      swift_bridgeObjectRelease();
      v18 = *(unsigned __int8 *)(v17 + 32);
      if (v18 != 255)
        sub_3B5BC(*(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), v18);
      v19 = *(unsigned __int8 *)(v17 + 64);
      if (v19 != 255)
        sub_3D624(*(id *)(v17 + 56), v19);
      v20 = *(unsigned __int8 *)(v17 + 80);
      if (v20 != 255)
        sub_3D624(*(id *)(v17 + 72), v20);
      v21 = *(unsigned __int8 *)(v17 + 96);
      if (v21 != 255)
        sub_3D624(*(id *)(v17 + 88), v21);
      v22 = *(unsigned __int8 *)(v17 + 112);
      if (v22 != 255)
        sub_3D624(*(id *)(v17 + 104), v22);
      v23 = *(unsigned __int8 *)(v17 + 128);
      if (v23 != 255)
        sub_3D624(*(id *)(v17 + 120), v23);
      v15(v17 + *(int *)(v12 + 44), v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = (int *)(v16 + 64);
      goto LABEL_58;
  }
  v43 = a1 + *(int *)(a2 + 20);
  v44 = type metadata accessor for NamedCoordinateSpace(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *sub_27D164(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  int v20;
  id v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id *v38;
  int v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id *v44;
  int v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id *v50;
  int v51;
  id v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id *v91;
  int v92;
  id v93;
  id *v94;
  int v95;
  id v96;
  id *v97;
  int v98;
  id v99;
  id *v100;
  int v101;
  id v102;
  id *v103;
  int v104;
  id v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  id *v114;
  int v115;
  id v116;
  id *v117;
  int v118;
  id v119;
  id *v120;
  int v121;
  id v122;
  id *v123;
  int v124;
  id v125;
  id *v126;
  int v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void (*v141)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;

  v6 = type metadata accessor for HeroBackgroundVariant(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v23 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v24 = a2[2];
        v25 = a2[3];
        sub_3D464(v24, v25, v23);
        a1[2] = v24;
        a1[3] = v25;
        *((_BYTE *)a1 + 32) = v23;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      v114 = (id *)(a2 + 7);
      v115 = *((unsigned __int8 *)a2 + 64);
      if (v115 == 255)
      {
        a1[7] = *v114;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v116 = *v114;
        sub_3D47C(*v114, *((_BYTE *)a2 + 64));
        a1[7] = v116;
        *((_BYTE *)a1 + 64) = v115;
      }
      v117 = (id *)(a2 + 9);
      v118 = *((unsigned __int8 *)a2 + 80);
      if (v118 == 255)
      {
        a1[9] = *v117;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
      }
      else
      {
        v119 = *v117;
        sub_3D47C(*v117, *((_BYTE *)a2 + 80));
        a1[9] = v119;
        *((_BYTE *)a1 + 80) = v118;
      }
      v120 = (id *)(a2 + 11);
      v121 = *((unsigned __int8 *)a2 + 96);
      if (v121 == 255)
      {
        a1[11] = *v120;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      }
      else
      {
        v122 = *v120;
        sub_3D47C(*v120, *((_BYTE *)a2 + 96));
        a1[11] = v122;
        *((_BYTE *)a1 + 96) = v121;
      }
      v123 = (id *)(a2 + 13);
      v124 = *((unsigned __int8 *)a2 + 112);
      if (v124 == 255)
      {
        a1[13] = *v123;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
      }
      else
      {
        v125 = *v123;
        sub_3D47C(*v123, *((_BYTE *)a2 + 112));
        a1[13] = v125;
        *((_BYTE *)a1 + 112) = v124;
      }
      v126 = (id *)(a2 + 15);
      v127 = *((unsigned __int8 *)a2 + 128);
      if (v127 == 255)
      {
        a1[15] = *v126;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
      }
      else
      {
        v128 = *v126;
        sub_3D47C(*v126, *((_BYTE *)a2 + 128));
        a1[15] = v128;
        *((_BYTE *)a1 + 128) = v127;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v129 = v12[11];
      v130 = (char *)a1 + v129;
      v131 = (char *)a2 + v129;
      v132 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
      v133 = v12[12];
      v134 = (_QWORD *)((char *)a1 + v133);
      v135 = (_QWORD *)((char *)a2 + v133);
      v136 = v135[1];
      *v134 = *v135;
      v134[1] = v136;
      *((_BYTE *)a1 + v12[13]) = *((_BYTE *)a2 + v12[13]);
      *((_BYTE *)a1 + v12[14]) = *((_BYTE *)a2 + v12[14]);
      *((_BYTE *)a1 + v12[15]) = *((_BYTE *)a2 + v12[15]);
      v137 = v12[16];
      v138 = (_QWORD *)((char *)a1 + v137);
      v139 = (_QWORD *)((char *)a2 + v137);
      v140 = v139[1];
      *v138 = *v139;
      v138[1] = v140;
      v141 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v141(a1, 0, 1, v12);
    }
    v142 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
    *(_QWORD *)((char *)a1 + *(int *)(v142 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v142 + 48));
    swift_retain();
    v67 = a1;
    v68 = v6;
    v69 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v9 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v10 = a2[2];
      v11 = a2[3];
      sub_3D464(v10, v11, v9);
      a1[2] = v10;
      a1[3] = v11;
      *((_BYTE *)a1 + 32) = v9;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v19 = (id *)(a2 + 7);
    v20 = *((unsigned __int8 *)a2 + 64);
    if (v20 == 255)
    {
      a1[7] = *v19;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v21 = *v19;
      sub_3D47C(*v19, *((_BYTE *)a2 + 64));
      a1[7] = v21;
      *((_BYTE *)a1 + 64) = v20;
    }
    v29 = (id *)(a2 + 9);
    v30 = *((unsigned __int8 *)a2 + 80);
    if (v30 == 255)
    {
      a1[9] = *v29;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v31 = *v29;
      sub_3D47C(*v29, *((_BYTE *)a2 + 80));
      a1[9] = v31;
      *((_BYTE *)a1 + 80) = v30;
    }
    v35 = (id *)(a2 + 11);
    v36 = *((unsigned __int8 *)a2 + 96);
    if (v36 == 255)
    {
      a1[11] = *v35;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v37 = *v35;
      sub_3D47C(*v35, *((_BYTE *)a2 + 96));
      a1[11] = v37;
      *((_BYTE *)a1 + 96) = v36;
    }
    v41 = (id *)(a2 + 13);
    v42 = *((unsigned __int8 *)a2 + 112);
    if (v42 == 255)
    {
      a1[13] = *v41;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v43 = *v41;
      sub_3D47C(*v41, *((_BYTE *)a2 + 112));
      a1[13] = v43;
      *((_BYTE *)a1 + 112) = v42;
    }
    v47 = (id *)(a2 + 15);
    v48 = *((unsigned __int8 *)a2 + 128);
    if (v48 == 255)
    {
      a1[15] = *v47;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v49 = *v47;
      sub_3D47C(*v47, *((_BYTE *)a2 + 128));
      a1[15] = v49;
      *((_BYTE *)a1 + 128) = v48;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v53 = (int *)type metadata accessor for ArtworkModel(0);
    v54 = v53[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    v58 = v53[12];
    v59 = (_QWORD *)((char *)a1 + v58);
    v60 = (_QWORD *)((char *)a2 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    *((_BYTE *)a1 + v53[13]) = *((_BYTE *)a2 + v53[13]);
    *((_BYTE *)a1 + v53[14]) = *((_BYTE *)a2 + v53[14]);
    *((_BYTE *)a1 + v53[15]) = *((_BYTE *)a2 + v53[15]);
    v62 = v53[16];
    v63 = (_QWORD *)((char *)a1 + v62);
    v64 = (_QWORD *)((char *)a2 + v62);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
    *(_QWORD *)((char *)a1 + *(int *)(v66 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v66 + 48));
    swift_retain();
    v67 = a1;
    v68 = v6;
    v69 = 1;
  }
  else
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    }
    else
    {
      v17 = a2[2];
      v18 = a2[3];
      sub_3D464(v17, v18, v16);
      a1[2] = v17;
      a1[3] = v18;
      *((_BYTE *)a1 + 32) = v16;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    v26 = (id *)(a2 + 7);
    v27 = *((unsigned __int8 *)a2 + 64);
    if (v27 == 255)
    {
      a1[7] = *v26;
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    }
    else
    {
      v28 = *v26;
      sub_3D47C(*v26, *((_BYTE *)a2 + 64));
      a1[7] = v28;
      *((_BYTE *)a1 + 64) = v27;
    }
    v32 = (id *)(a2 + 9);
    v33 = *((unsigned __int8 *)a2 + 80);
    if (v33 == 255)
    {
      a1[9] = *v32;
      *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    }
    else
    {
      v34 = *v32;
      sub_3D47C(*v32, *((_BYTE *)a2 + 80));
      a1[9] = v34;
      *((_BYTE *)a1 + 80) = v33;
    }
    v38 = (id *)(a2 + 11);
    v39 = *((unsigned __int8 *)a2 + 96);
    if (v39 == 255)
    {
      a1[11] = *v38;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    }
    else
    {
      v40 = *v38;
      sub_3D47C(*v38, *((_BYTE *)a2 + 96));
      a1[11] = v40;
      *((_BYTE *)a1 + 96) = v39;
    }
    v44 = (id *)(a2 + 13);
    v45 = *((unsigned __int8 *)a2 + 112);
    if (v45 == 255)
    {
      a1[13] = *v44;
      *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
    }
    else
    {
      v46 = *v44;
      sub_3D47C(*v44, *((_BYTE *)a2 + 112));
      a1[13] = v46;
      *((_BYTE *)a1 + 112) = v45;
    }
    v50 = (id *)(a2 + 15);
    v51 = *((unsigned __int8 *)a2 + 128);
    v154 = v6;
    if (v51 == 255)
    {
      a1[15] = *v50;
      *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
    }
    else
    {
      v52 = *v50;
      sub_3D47C(*v50, v51);
      a1[15] = v52;
      *((_BYTE *)a1 + 128) = v51;
    }
    *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
    v70 = (int *)type metadata accessor for ArtworkModel(0);
    v71 = v70[11];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = type metadata accessor for ArtworkCrop(0);
    v153 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
    v153(v72, v73, v74);
    v75 = v70[12];
    v76 = (_QWORD *)((char *)a1 + v75);
    v77 = (_QWORD *)((char *)a2 + v75);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    *((_BYTE *)a1 + v70[13]) = *((_BYTE *)a2 + v70[13]);
    *((_BYTE *)a1 + v70[14]) = *((_BYTE *)a2 + v70[14]);
    *((_BYTE *)a1 + v70[15]) = *((_BYTE *)a2 + v70[15]);
    v79 = v70[16];
    v80 = (_QWORD *)((char *)a1 + v79);
    v81 = (_QWORD *)((char *)a2 + v79);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
    v83 = *(int *)(v152 + 48);
    v84 = (char *)a1 + v83;
    v85 = (char *)a2 + v83;
    v86 = *(_QWORD *)((char *)a2 + v83 + 8);
    *(_QWORD *)v84 = *(_QWORD *)((char *)a2 + v83);
    *((_QWORD *)v84 + 1) = v86;
    v87 = *((unsigned __int8 *)a2 + v83 + 32);
    swift_bridgeObjectRetain();
    if (v87 == 255)
    {
      *((_OWORD *)v84 + 1) = *((_OWORD *)v85 + 1);
      v84[32] = v85[32];
    }
    else
    {
      v88 = a3;
      v89 = *((_QWORD *)v85 + 2);
      v90 = *((_QWORD *)v85 + 3);
      sub_3D464(v89, v90, v87);
      *((_QWORD *)v84 + 2) = v89;
      *((_QWORD *)v84 + 3) = v90;
      a3 = v88;
      v84[32] = v87;
    }
    *(_OWORD *)(v84 + 40) = *(_OWORD *)(v85 + 40);
    v91 = (id *)(v85 + 56);
    v92 = v85[64];
    if (v92 == 255)
    {
      *((_QWORD *)v84 + 7) = *v91;
      v84[64] = v85[64];
    }
    else
    {
      v93 = *v91;
      sub_3D47C(*v91, v85[64]);
      *((_QWORD *)v84 + 7) = v93;
      v84[64] = v92;
    }
    v94 = (id *)(v85 + 72);
    v95 = v85[80];
    if (v95 == 255)
    {
      *((_QWORD *)v84 + 9) = *v94;
      v84[80] = v85[80];
    }
    else
    {
      v96 = *v94;
      sub_3D47C(*v94, v85[80]);
      *((_QWORD *)v84 + 9) = v96;
      v84[80] = v95;
    }
    v97 = (id *)(v85 + 88);
    v98 = v85[96];
    if (v98 == 255)
    {
      *((_QWORD *)v84 + 11) = *v97;
      v84[96] = v85[96];
    }
    else
    {
      v99 = *v97;
      sub_3D47C(*v97, v85[96]);
      *((_QWORD *)v84 + 11) = v99;
      v84[96] = v98;
    }
    v100 = (id *)(v85 + 104);
    v101 = v85[112];
    if (v101 == 255)
    {
      *((_QWORD *)v84 + 13) = *v100;
      v84[112] = v85[112];
    }
    else
    {
      v102 = *v100;
      sub_3D47C(*v100, v85[112]);
      *((_QWORD *)v84 + 13) = v102;
      v84[112] = v101;
    }
    v103 = (id *)(v85 + 120);
    v104 = v85[128];
    if (v104 == 255)
    {
      *((_QWORD *)v84 + 15) = *v103;
      v84[128] = v85[128];
    }
    else
    {
      v105 = *v103;
      sub_3D47C(*v103, v85[128]);
      *((_QWORD *)v84 + 15) = v105;
      v84[128] = v104;
    }
    v84[129] = v85[129];
    v153(&v84[v70[11]], &v85[v70[11]], v74);
    v106 = v70[12];
    v107 = &v84[v106];
    v108 = &v85[v106];
    v109 = *((_QWORD *)v108 + 1);
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *((_QWORD *)v107 + 1) = v109;
    v84[v70[13]] = v85[v70[13]];
    v84[v70[14]] = v85[v70[14]];
    v84[v70[15]] = v85[v70[15]];
    v110 = v70[16];
    v111 = &v84[v110];
    v112 = &v85[v110];
    v113 = *((_QWORD *)v112 + 1);
    *(_QWORD *)v111 = *(_QWORD *)v112;
    *((_QWORD *)v111 + 1) = v113;
    *(_QWORD *)((char *)a1 + *(int *)(v152 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v152 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v67 = a1;
    v68 = v154;
    v69 = 0;
  }
  swift_storeEnumTagMultiPayload(v67, v68, v69);
  v143 = *(int *)(a3 + 20);
  v144 = (char *)a1 + v143;
  v145 = (char *)a2 + v143;
  v146 = type metadata accessor for NamedCoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
  v147 = *(int *)(a3 + 24);
  v148 = (_QWORD *)((char *)a1 + v147);
  v149 = (_QWORD *)((char *)a2 + v147);
  v150 = v149[1];
  *v148 = *v149;
  v148[1] = v150;
  swift_retain();
  return a1;
}

_QWORD *sub_27DBC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  id *v18;
  int v19;
  id v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  id *v25;
  int v26;
  id v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id v52;
  id *v53;
  int v54;
  id v55;
  id v56;
  id *v57;
  int v58;
  id v59;
  id v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  id *v97;
  int v98;
  id v99;
  id v100;
  id *v101;
  int v102;
  id v103;
  id v104;
  id *v105;
  int v106;
  id v107;
  id v108;
  id *v109;
  int v110;
  id v111;
  id v112;
  id *v113;
  int v114;
  id v115;
  id v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  id *v124;
  int v125;
  id v126;
  id v127;
  id *v128;
  int v129;
  id v130;
  id v131;
  id *v132;
  int v133;
  id v134;
  id v135;
  id *v136;
  int v137;
  id v138;
  id v139;
  id *v140;
  int v141;
  id v142;
  id v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  void (*v154)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v165;
  void (*v166)(char *, char *);
  uint64_t v167;

  if (a1 != a2)
  {
    sub_145D8((uint64_t)a1, type metadata accessor for HeroBackgroundVariant);
    v6 = type metadata accessor for HeroBackgroundVariant(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = (int *)type metadata accessor for ArtworkModel(0);
      v12 = *((_QWORD *)v11 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3BEB70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v21 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v21 == 255)
        {
          v123 = *((_OWORD *)a2 + 1);
          *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
          *((_OWORD *)a1 + 1) = v123;
        }
        else
        {
          v22 = a2[2];
          v23 = a2[3];
          sub_3D464(v22, v23, v21);
          a1[2] = v22;
          a1[3] = v23;
          *((_BYTE *)a1 + 32) = v21;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        v124 = (id *)(a2 + 7);
        v125 = *((unsigned __int8 *)a2 + 64);
        if (v125 == 255)
        {
          v127 = *v124;
          *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
          a1[7] = v127;
        }
        else
        {
          v126 = *v124;
          sub_3D47C(*v124, *((_BYTE *)a2 + 64));
          a1[7] = v126;
          *((_BYTE *)a1 + 64) = v125;
        }
        v128 = (id *)(a2 + 9);
        v129 = *((unsigned __int8 *)a2 + 80);
        if (v129 == 255)
        {
          v131 = *v128;
          *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
          a1[9] = v131;
        }
        else
        {
          v130 = *v128;
          sub_3D47C(*v128, *((_BYTE *)a2 + 80));
          a1[9] = v130;
          *((_BYTE *)a1 + 80) = v129;
        }
        v132 = (id *)(a2 + 11);
        v133 = *((unsigned __int8 *)a2 + 96);
        if (v133 == 255)
        {
          v135 = *v132;
          *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
          a1[11] = v135;
        }
        else
        {
          v134 = *v132;
          sub_3D47C(*v132, *((_BYTE *)a2 + 96));
          a1[11] = v134;
          *((_BYTE *)a1 + 96) = v133;
        }
        v136 = (id *)(a2 + 13);
        v137 = *((unsigned __int8 *)a2 + 112);
        if (v137 == 255)
        {
          v139 = *v136;
          *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
          a1[13] = v139;
        }
        else
        {
          v138 = *v136;
          sub_3D47C(*v136, *((_BYTE *)a2 + 112));
          a1[13] = v138;
          *((_BYTE *)a1 + 112) = v137;
        }
        v140 = (id *)(a2 + 15);
        v141 = *((unsigned __int8 *)a2 + 128);
        if (v141 == 255)
        {
          v143 = *v140;
          *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
          a1[15] = v143;
        }
        else
        {
          v142 = *v140;
          sub_3D47C(*v140, *((_BYTE *)a2 + 128));
          a1[15] = v142;
          *((_BYTE *)a1 + 128) = v141;
        }
        *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
        v144 = v11[11];
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        v147 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
        v148 = v11[12];
        v149 = (_QWORD *)((char *)a1 + v148);
        v150 = (_QWORD *)((char *)a2 + v148);
        *v149 = *v150;
        v149[1] = v150[1];
        *((_BYTE *)a1 + v11[13]) = *((_BYTE *)a2 + v11[13]);
        *((_BYTE *)a1 + v11[14]) = *((_BYTE *)a2 + v11[14]);
        *((_BYTE *)a1 + v11[15]) = *((_BYTE *)a2 + v11[15]);
        v151 = v11[16];
        v152 = (_QWORD *)((char *)a1 + v151);
        v153 = (_QWORD *)((char *)a2 + v151);
        *v152 = *v153;
        v152[1] = v153[1];
        v154 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v154(a1, 0, 1, v11);
      }
      v155 = __swift_instantiateConcreteTypeFromMangledName(qword_3C4878);
      *(_QWORD *)((char *)a1 + *(int *)(v155 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v155 + 48));
      swift_retain();
      v73 = a1;
      v74 = v6;
      v75 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v8 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        v17 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v17;
      }
      else
      {
        v9 = a2[2];
        v10 = a2[3];
        sub_3D464(v9, v10, v8);
        a1[2] = v9;
        a1[3] = v10;
        *((_BYTE *)a1 + 32) = v8;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v18 = (id *)(a2 + 7);
      v19 = *((unsigned __int8 *)a2 + 64);
      if (v19 == 255)
      {
        v28 = *v18;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v28;
      }
      else
      {
        v20 = *v18;
        sub_3D47C(*v18, *((_BYTE *)a2 + 64));
        a1[7] = v20;
        *((_BYTE *)a1 + 64) = v19;
      }
      v29 = (id *)(a2 + 9);
      v30 = *((unsigned __int8 *)a2 + 80);
      if (v30 == 255)
      {
        v36 = *v29;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v36;
      }
      else
      {
        v31 = *v29;
        sub_3D47C(*v29, *((_BYTE *)a2 + 80));
        a1[9] = v31;
        *((_BYTE *)a1 + 80) = v30;
      }
      v37 = (id *)(a2 + 11);
      v38 = *((unsigned __int8 *)a2 + 96);
      if (v38 == 255)
      {
        v44 = *v37;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v44;
      }
      else
      {
        v39 = *v37;
        sub_3D47C(*v37, *((_BYTE *)a2 + 96));
        a1[11] = v39;
        *((_BYTE *)a1 + 96) = v38;
      }
      v45 = (id *)(a2 + 13);
      v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        v52 = *v45;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v52;
      }
      else
      {
        v47 = *v45;
        sub_3D47C(*v45, *((_BYTE *)a2 + 112));
        a1[13] = v47;
        *((_BYTE *)a1 + 112) = v46;
      }
      v53 = (id *)(a2 + 15);
      v54 = *((unsigned __int8 *)a2 + 128);
      if (v54 == 255)
      {
        v60 = *v53;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v60;
      }
      else
      {
        v55 = *v53;
        sub_3D47C(*v53, *((_BYTE *)a2 + 128));
        a1[15] = v55;
        *((_BYTE *)a1 + 128) = v54;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v61 = (int *)type metadata accessor for ArtworkModel(0);
      v62 = v61[11];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
      v66 = v61[12];
      v67 = (_QWORD *)((char *)a1 + v66);
      v68 = (_QWORD *)((char *)a2 + v66);
      *v67 = *v68;
      v67[1] = v68[1];
      *((_BYTE *)a1 + v61[13]) = *((_BYTE *)a2 + v61[13]);
      *((_BYTE *)a1 + v61[14]) = *((_BYTE *)a2 + v61[14]);
      *((_BYTE *)a1 + v61[15]) = *((_BYTE *)a2 + v61[15]);
      v69 = v61[16];
      v70 = (_QWORD *)((char *)a1 + v69);
      v71 = (_QWORD *)((char *)a2 + v69);
      *v70 = *v71;
      v70[1] = v71[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4870);
      *(_QWORD *)((char *)a1 + *(int *)(v72 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v72 + 48));
      swift_retain();
      v73 = a1;
      v74 = v6;
      v75 = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v14 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        v24 = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_OWORD *)a1 + 1) = v24;
      }
      else
      {
        v15 = a2[2];
        v16 = a2[3];
        sub_3D464(v15, v16, v14);
        a1[2] = v15;
        a1[3] = v16;
        *((_BYTE *)a1 + 32) = v14;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      v25 = (id *)(a2 + 7);
      v26 = *((unsigned __int8 *)a2 + 64);
      if (v26 == 255)
      {
        v32 = *v25;
        *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
        a1[7] = v32;
      }
      else
      {
        v27 = *v25;
        sub_3D47C(*v25, *((_BYTE *)a2 + 64));
        a1[7] = v27;
        *((_BYTE *)a1 + 64) = v26;
      }
      v33 = (id *)(a2 + 9);
      v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        v40 = *v33;
        *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
        a1[9] = v40;
      }
      else
      {
        v35 = *v33;
        sub_3D47C(*v33, *((_BYTE *)a2 + 80));
        a1[9] = v35;
        *((_BYTE *)a1 + 80) = v34;
      }
      v41 = (id *)(a2 + 11);
      v42 = *((unsigned __int8 *)a2 + 96);
      if (v42 == 255)
      {
        v48 = *v41;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[11] = v48;
      }
      else
      {
        v43 = *v41;
        sub_3D47C(*v41, *((_BYTE *)a2 + 96));
        a1[11] = v43;
        *((_BYTE *)a1 + 96) = v42;
      }
      v49 = (id *)(a2 + 13);
      v50 = *((unsigned __int8 *)a2 + 112);
      if (v50 == 255)
      {
        v56 = *v49;
        *((_BYTE *)a1 + 112) = *((_BYTE *)a2 + 112);
        a1[13] = v56;
      }
      else
      {
        v51 = *v49;
        sub_3D47C(*v49, *((_BYTE *)a2 + 112));
        a1[13] = v51;
        *((_BYTE *)a1 + 112) = v50;
      }
      v57 = (id *)(a2 + 15);
      v58 = *((unsigned __int8 *)a2 + 128);
      if (v58 == 255)
      {
        v76 = *v57;
        *((_BYTE *)a1 + 128) = *((_BYTE *)a2 + 128);
        a1[15] = v76;
      }
      else
      {
        v59 = *v57;
        sub_3D47C(*v57, *((_BYTE *)a2 + 128));
        a1[15] = v59;
        *((_BYTE *)a1 + 128) = v58;
      }
      *((_BYTE *)a1 + 129) = *((_BYTE *)a2 + 129);
      v77 = (int *)type metadata accessor for ArtworkModel(0);
      v78 = v77[11];
      v79 = (char *)a1 + v78;
      v80 = (char *)a2 + v78;
      v81 = type metadata accessor for ArtworkCrop(0);
      v166 = *(void (**)(char *, char *))(*(_QWORD *)(v81 - 8) + 16);
      v167 = v81;
      v166(v79, v80);
      v82 = v77[12];
      v83 = (_QWORD *)((char *)a1 + v82);
      v84 = (_QWORD *)((char *)a2 + v82);
      *v83 = *v84;
      v83[1] = v84[1];
      *((_BYTE *)a1 + v77[13]) = *((_BYTE *)a2 + v77[13]);
      *((_BYTE *)a1 + v77[14]) = *((_BYTE *)a2 + v77[14]);
      *((_BYTE *)a1 + v77[15]) = *((_BYTE *)a2 + v77[15]);
      v85 = v77[16];
      v86 = (_QWORD *)((char *)a1 + v85);
      v87 = (_QWORD *)((char *)a2 + v85);
      *v86 = *v87;
      v86[1] = v87[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_3C4868);
      v88 = *(int *)(v165 + 48);
      v89 = (char *)a1 + v88;
      v90 = (char *)a2 + v88;
      *(_QWORD *)v89 = *(_QWORD *)((char *)a2 + v88);
      *((_QWORD *)v89 + 1) = *(_QWORD *)((char *)a2 + v88 + 8);
      v91 = *((unsigned __int8 *)a2 + v88 + 32);
      swift_bridgeObjectRetain();
      if (v91 == 255)
      {
        v96 = *((_OWORD *)v90 + 1);
        v89[32] = v90[32];
        *((_OWORD *)v89 + 1) = v96;
      }
      else
      {
        v92 = a3;
        v93 = v6;
        v94 = *((_QWORD *)v90 + 2);
        v95 = *((_QWORD *)v90 + 3);
        sub_3D464(v94, v95, v91);
        *((_QWORD *)v89 + 2) = v94;
        *((_QWORD *)v89 + 3) = v95;
        v6 = v93;
        a3 = v92;
        v89[32] = v91;
      }
      *((_QWORD *)v89 + 5) = *((_QWORD *)v90 + 5);
      *((_QWORD *)v89 + 6) = *((_QWORD *)v90 + 6);
      v97 = (id *)(v90 + 56);
      v98 = v90[64];
      if (v98 == 255)
      {
        v100 = *v97;
        v89[64] = v90[64];
        *((_QWORD *)v89 + 7) = v100;
      }
      else
      {
        v99 = *v97;
        sub_3D47C(*v97, v90[64]);
        *((_QWORD *)v89 + 7) = v99;
        v89[64] = v98;
      }
      v101 = (id *)(v90 + 72);
      v102 = v90[80];
      if (v102 == 255)
      {
        v104 = *v101;
        v89[80] = v90[80];
        *((_QWORD *)v89 + 9) = v104;
      }
      else
      {
        v103 = *v101;
        sub_3D47C(*v101, v90[80]);
        *((_QWORD *)v89 + 9) = v103;
        v89[80] = v102;
      }
      v105 = (id *)(v90 + 88);
      v106 = v90[96];
      if (v106 == 255)
      {
        v108 = *v105;
        v89[96] = v90[96];
        *((_QWORD *)v89 + 11) = v108;
      }
      else
      {
        v107 = *v105;
        sub_3D47C(*v105, v90[96]);
        *((_QWORD *)v89 + 11) = v107;
        v89[96] = v106;
      }
      v109 = (id *)(v90 + 104);
      v110 = v90[112];
      if (v110 == 255)
      {
        v112 = *v109;
        v89[112] = v90[112];
        *((_QWORD *)v89 + 13) = v112;
      }
      else
      {
        v111 = *v109;
        sub_3D47C(*v109, v90[112]);
        *((_QWORD *)v89 + 13) = v111;
        v89[112] = v110;
      }
      v113 = (id *)(v90 + 120);
      v114 = v90[128];
      if (v114 == 255)
      {
        v116 = *v113;
        v89[128] = v90[128];
        *((_QWORD *)v89 + 15) = v116;
      }
      else
      {
        v115 = *v113;
        sub_3D47C(*v113, v90[128]);
        *((_QWORD *)v89 + 15) = v115;
        v89[128] = v114;
      }
      v89[129] = v90[129];
      ((void (*)(char *, char *, uint64_t))v166)(&v89[v77[11]], &v90[v77[11]], v167);
      v117 = v77[12];
      v118 = &v89[v117];
      v119 = &v90[v117];
      *(_QWORD *)v118 = *(_QWORD *)v119;
      *((_QWORD *)v118 + 1) = *((_QWORD *)v119 + 1);
      v89[v77[13]] = v90[v77[13]];
      v89[v77[14]] = v90[v77[14]];
      v89[v77[15]] = v90[v77[15]];
      v120 = v77[16];
      v121 = &v89[v120];
      v122 = &v90[v120];
      *(_QWORD *)v121 = *(_QWORD *)v122;
      *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
      *(_QWORD *)((char *)a1 + *(int *)(v165 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v165 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v73 = a1;
      v74 = v6;
      v75 = 0;
    }
    swift_storeEnumTagMultiPayload(v73, v74, v75);
  }
  v156 = *(int *)(a3 + 20);
  v157 = (char *)a1 + v156;
  v158 = (char *)a2 + v156;
  v159 = type metadata accessor for NamedCoordinateSpace(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 24))(v157, v158, v159);
  v160 = *(int *)(a3 + 24);
  v161 = (_QWORD *)((char *)a1 + v160);
  v162 = (_QWORD *)((char *)a2 + v160);
  *v161 = *v162;
  v163 = v161[1];
  v161[1] = v162[1];
  swift_retain();
  swift_release(v163);
  return a1;
}

