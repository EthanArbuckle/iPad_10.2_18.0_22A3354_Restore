void sub_100262A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  NSString v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v45 = a5;
  v49 = a4;
  v50 = a3;
  v47 = a1;
  v48 = a2;
  v5 = sub_10003F544(&qword_10055B788);
  __chkstk_darwin(v5);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544(&qword_10055B790);
  __chkstk_darwin(v7);
  v43 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediaIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char **)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for PlaybackIntent(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10003F544(&qword_10055A550);
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PendingPlaybackMetadata(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v22) & 1) != 0)
  {
    v25 = v48;
    v41 = v16;
    v42 = v14;
    v27 = v43;
    v26 = v44;
    v28 = v49;
    if (v49)
    {
      *v12 = v47;
      v12[1] = v25;
      v12[2] = v50;
      v12[3] = v28;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for MediaIdentifier.station(_:), v9);
      v29 = type metadata accessor for EpisodeListSettings(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 1, 1, v29);
      v30 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v26, 1, 1, v30);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v25);
      v32 = static Set<>.default.getter(v31);
      v33 = (uint64_t)v41;
      PlaybackIntent.init(id:listSettings:initialItem:options:)(v12, v27, v26, v32);
      sub_10025F104(v33, 0, 1, 0, v45);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v13);
    }
  }
  else
  {
    v34 = String._bridgeToObjectiveC()();
    if (v49)
    {
      v35 = v49;
      v36 = String._bridgeToObjectiveC()();
    }
    else
    {
      v35 = 0;
      v36 = 0;
    }
    v37 = objc_msgSend((id)objc_opt_self(MTPlaybackQueueFactory), "playStationUuid:episodeUuid:", v34, v36);

    if (v37)
    {
      v38 = swift_bridgeObjectRetain(v35);
      PendingPlaybackMetadata.init(adamId:uuid:)(0, 1, v50, v35, v38);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
      {
        sub_100007A28((uint64_t)v19, &qword_10055A550);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v19, v20);
        v39 = v46[13];
        v40 = v46[14];
        sub_10003A834(v46 + 10, v39);
        dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)(v24, v39, v40);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
      }
      sub_10025F5DC(v37, 3, 1, v50, v35, 0, 1, v45);

    }
  }
}

uint64_t sub_100262DD8(uint64_t a1, uint64_t a2, void *a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  int v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t ObjectType;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  int v79;
  unsigned __int8 v80;
  uint64_t v81;
  char *v82;
  int v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  Swift::String v100;
  uint64_t v101;
  _QWORD *v102;
  Swift::String v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  Swift::String v111;
  uint64_t v112;
  _QWORD *v113;
  Swift::String v114;
  uint64_t v115;
  __n128 v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  _BYTE v139[32];
  _QWORD v140[3];
  uint64_t v141;
  uint64_t v142;
  _OWORD v143[2];

  v138 = a4;
  v134 = a2;
  v5 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v5);
  v120 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for OSLogger(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v8);
  v131 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for FlowDestinationPageHeader(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v130 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for FlowPresentationContext(0);
  v127 = *(_QWORD *)(v128 - 8);
  v11 = __chkstk_darwin(v128);
  v132 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v126 = (char *)&v118 - v13;
  v14 = type metadata accessor for FlowDestination(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v118 - v18;
  v20 = type metadata accessor for PreviewingPresentationHint(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ActionMetricsBehavior(0);
  __chkstk_darwin(v24);
  v137 = v26;
  v27 = *(void (**)(void))(v26 + 104);
  v136 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = v28;
  v27();
  type metadata accessor for ActionRunnerOptions(0);
  v29 = swift_retain();
  v30 = BaseObjectGraph.__allocating_init(_:)(v29);
  memset(v143, 0, sizeof(v143));
  v31 = objc_msgSend(a3, "view");
  sub_100007A64((uint64_t)v143, (uint64_t)v139, (uint64_t *)&unk_100552300);
  v32 = v31;
  ActionOrigin.init(sender:view:)(v140, v139, v31);
  v33 = ActionRunnerOptions.withActionOrigin(_:)(v140);
  sub_100007A28((uint64_t)v140, (uint64_t *)&unk_100557CB0);
  swift_release(v30);

  sub_100007A28((uint64_t)v143, (uint64_t *)&unk_100552300);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v138, v20);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  v135 = v33;
  if ((_DWORD)v34 == enum case for PreviewingPresentationHint.inferTab(_:))
  {
    v35 = v19;
    v36 = v126;
    v37 = v129;
    Strong = swift_unknownObjectWeakLoadStrong(v129 + 16);
    if (Strong
      && (v40 = Strong,
          v41 = *(_QWORD *)(v37 + 24),
          v42 = swift_getObjectType(Strong, v39),
          v43 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(v42, v41),
          v45 = v44,
          Strong = swift_unknownObjectRelease(v40),
          v43))
    {
      v138 = v45;
      v46 = sub_10003F544(&qword_1005612A0);
      v47 = swift_allocObject(v46, 72, 7);
      *(_OWORD *)(v47 + 16) = xmmword_1003CA200;
      static FlowDestination.page(_:)(v134);
      v48 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v127 + 104))(v36, enum case for FlowPresentationContext.pushDetail(_:), v128);
      v49 = static Link.Presentation.textFollowsTintColor.getter(v48);
      v50 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v51 = Link.Presentation.init(rawValue:)(0);
      v52 = Link.Presentation.init(rawValue:)(v51);
      if (Link.Presentation.init(rawValue:)(v52 & v49) != v49)
        v51 = Link.Presentation.init(rawValue:)(v51 | v49);
      v53 = Link.Presentation.init(rawValue:)(v51);
      v54 = Link.Presentation.init(rawValue:)(v53 & v50);
      v55 = v122;
      v56 = v121;
      if (v54 != v50)
        v51 = Link.Presentation.init(rawValue:)(v51 | v50);
      v57 = v130;
      v58 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v56 + 104))(v130, enum case for FlowDestinationPageHeader.standard(_:), v55);
      v59 = v131;
      static ActionMetrics.notInstrumented.getter(v58);
      v60 = type metadata accessor for FlowAction(0);
      swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
      v61 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v35, 0, 0, 0, 0, v36, 0, v51, v57, v59);
      *(_QWORD *)(v47 + 56) = v60;
      *(_QWORD *)(v47 + 64) = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)(v47 + 32) = v61;
      v62 = Link.Presentation.init(rawValue:)(0);
      LOBYTE(v61) = v62;
      static ActionMetrics.notInstrumented.getter(v62);
      v63 = type metadata accessor for TabChangeAction(0);
      swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
      LOBYTE(v117) = v61;
      v64 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 9, v47, 0, 0, 0, 0, v117, v59);
      ObjectType = swift_getObjectType(v43, v65);
      v141 = v63;
      v142 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
      v140[0] = v64;
      swift_retain();
      v68 = v135;
      v67 = v136;
      v69 = ActionRunner.perform(_:withMetrics:asPartOf:)(v140, v136, v135, ObjectType, v138);
      swift_release(v64);
      swift_unknownObjectRelease(v43);
      swift_release(v68);
      swift_release(v69);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v67, v133);
      return sub_10003D380(v140);
    }
    else
    {
      v95 = v123;
      static OSLogger.actions.getter(Strong);
      v96 = sub_10003F544(&qword_100557CA8);
      v97 = type metadata accessor for LogMessage(0);
      v98 = swift_allocObject(v96, ((*(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v97 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80) | 7);
      *(_OWORD *)(v98 + 16) = xmmword_1003CA200;
      v99 = v120;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(57, 1);
      v100._countAndFlagsBits = 0xD00000000000001FLL;
      v100._object = (void *)0x8000000100437FD0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v100);
      v101 = type metadata accessor for URL(0);
      v141 = v101;
      v102 = sub_1000242A8(v140);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v102, v134, v101);
      LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v140);
      sub_100007A28((uint64_t)v140, (uint64_t *)&unk_100552300);
      v103._object = (void *)0x8000000100437FF0;
      v103._countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v103);
      LogMessage.init(stringInterpolation:)(v99);
      v104 = v125;
      Logger.error(_:)(v98, v125, &protocol witness table for OSLogger);
      swift_release(v135);
      v105 = swift_bridgeObjectRelease(v98);
      (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v95, v104, v105);
      return (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v136, v133);
    }
  }
  else
  {
    v126 = v23;
    v119 = v21;
    v129 = v20;
    v138 = v17;
    v71 = UIResponder.nearestActionRunner.getter(v34);
    if (v71)
    {
      v73 = v71;
      v74 = v72;
      static FlowDestination.page(_:)(v134);
      v75 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v127 + 104))(v132, enum case for FlowPresentationContext.infer(_:), v128);
      v76 = static Link.Presentation.textFollowsTintColor.getter(v75);
      v77 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v78 = Link.Presentation.init(rawValue:)(0);
      v79 = Link.Presentation.init(rawValue:)(v78);
      v80 = Link.Presentation.init(rawValue:)(v79 & v76);
      v81 = v129;
      v82 = v126;
      if (v80 != v76)
        v78 = Link.Presentation.init(rawValue:)(v78 | v76);
      v83 = Link.Presentation.init(rawValue:)(v78);
      if (Link.Presentation.init(rawValue:)(v83 & v77) != v77)
        v78 = Link.Presentation.init(rawValue:)(v78 | v77);
      v84 = v133;
      v85 = v130;
      v86 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v121 + 104))(v130, enum case for FlowDestinationPageHeader.standard(_:), v122);
      v87 = v131;
      static ActionMetrics.notInstrumented.getter(v86);
      v88 = type metadata accessor for FlowAction(0);
      swift_allocObject(v88, *(unsigned int *)(v88 + 48), *(unsigned __int16 *)(v88 + 52));
      v89 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v138, 0, 0, 0, 0, v132, 0, v78, v85, v87);
      v91 = swift_getObjectType(v73, v90);
      v141 = v88;
      v142 = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
      v140[0] = v89;
      swift_retain();
      v93 = v135;
      v92 = v136;
      v94 = ActionRunner.perform(_:withMetrics:asPartOf:)(v140, v136, v135, v91, v74);
      swift_release(v89);
      swift_unknownObjectRelease(v73);
      swift_release(v93);
      swift_release(v94);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v92, v84);
      sub_10003D380(v140);
      return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v82, v81);
    }
    else
    {
      v106 = v123;
      static OSLogger.actions.getter(0);
      v107 = sub_10003F544(&qword_100557CA8);
      v108 = type metadata accessor for LogMessage(0);
      v109 = swift_allocObject(v107, ((*(unsigned __int8 *)(*(_QWORD *)(v108 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v108 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v108 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v108 - 8) + 80) | 7);
      *(_OWORD *)(v109 + 16) = xmmword_1003CA200;
      v110 = v120;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(57, 1);
      v111._countAndFlagsBits = 0xD00000000000001FLL;
      v111._object = (void *)0x8000000100437FD0;
      LogMessage.StringInterpolation.appendLiteral(_:)(v111);
      v112 = type metadata accessor for URL(0);
      v141 = v112;
      v113 = sub_1000242A8(v140);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v113, v134, v112);
      LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v140);
      sub_100007A28((uint64_t)v140, (uint64_t *)&unk_100552300);
      v114._object = (void *)0x8000000100437FF0;
      v114._countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v114);
      LogMessage.init(stringInterpolation:)(v110);
      v115 = v125;
      Logger.error(_:)(v109, v125, &protocol witness table for OSLogger);
      swift_release(v135);
      v116 = swift_bridgeObjectRelease(v109);
      (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v106, v115, v116);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v133);
      return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v126, v129);
    }
  }
}

uint64_t sub_10026396C(uint64_t a1, uint64_t a2, void *a3, char *a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  _DWORD v23[2];
  uint64_t v24;

  v24 = a1;
  v8 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v23 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void *)sub_10025C034();
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    return sub_100007A28((uint64_t)v13, (uint64_t *)&unk_100553DC0);
  }
  v19 = v18;
  v23[1] = a5;
  v20 = objc_msgSend(v18, "episodeShareUrl");

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, v21, 1, v14);
  sub_10003DC78((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_100553DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_100007A28((uint64_t)v13, (uint64_t *)&unk_100553DC0);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  sub_100262DD8(v24, (uint64_t)v17, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_100263B58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  int v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjectType;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  unsigned __int8 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  __n128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  Swift::String v106;
  Swift::String v107;
  uint64_t v108;
  __n128 v109;
  int v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE v134[32];
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  _OWORD v139[2];

  v133 = a5;
  v128 = a2;
  v129 = a3;
  v6 = type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin(v6);
  v113 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for OSLogger(0);
  v116 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v115 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v9);
  v127 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for FlowDestinationPageHeader(0);
  v114 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v126 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for FlowPresentationContext(0);
  v124 = *(_QWORD *)(v125 - 8);
  v12 = __chkstk_darwin(v125);
  v120 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v119 = (char *)&v111 - v14;
  v122 = type metadata accessor for FlowDestination(0);
  v121 = *(_QWORD *)(v122 - 8);
  v15 = __chkstk_darwin(v122);
  v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v111 - v18;
  v20 = type metadata accessor for PreviewingPresentationHint(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ActionMetricsBehavior(0);
  __chkstk_darwin(v24);
  v131 = v26;
  v27 = *(void (**)(void))(v26 + 104);
  v130 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = v28;
  v27();
  type metadata accessor for ActionRunnerOptions(0);
  v29 = swift_retain();
  v30 = BaseObjectGraph.__allocating_init(_:)(v29);
  memset(v139, 0, sizeof(v139));
  v31 = objc_msgSend(a4, "view");
  sub_100007A64((uint64_t)v139, (uint64_t)v134, (uint64_t *)&unk_100552300);
  v32 = v31;
  ActionOrigin.init(sender:view:)(&v135, v134, v31);
  v33 = ActionRunnerOptions.withActionOrigin(_:)(&v135);
  sub_100007A28((uint64_t)&v135, (uint64_t *)&unk_100557CB0);
  swift_release(v30);

  sub_100007A28((uint64_t)v139, (uint64_t *)&unk_100552300);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v133, v20);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if ((_DWORD)v34 == enum case for PreviewingPresentationHint.inferTab(_:))
  {
    v35 = v119;
    v36 = v123;
    Strong = swift_unknownObjectWeakLoadStrong(v123 + 16);
    if (Strong
      && (v39 = Strong,
          v40 = *(_QWORD *)(v36 + 24),
          v41 = swift_getObjectType(Strong, v38),
          v42 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(v41, v40),
          v44 = v43,
          Strong = swift_unknownObjectRelease(v39),
          v42))
    {
      v133 = v33;
      v45 = sub_10003F544(&qword_1005612A0);
      v46 = swift_allocObject(v45, 72, 7);
      *(_OWORD *)(v46 + 16) = xmmword_1003CA200;
      v47 = v129;
      *(_QWORD *)v19 = v128;
      *((_QWORD *)v19 + 1) = v47;
      *((_QWORD *)v19 + 3) = 0;
      *((_QWORD *)v19 + 4) = 0;
      *((_QWORD *)v19 + 2) = 0;
      v19[40] = 1;
      *((_QWORD *)v19 + 6) = 0;
      v19[56] = 1;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v19, enum case for FlowDestination.episodeDetails(_:), v122);
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v35, enum case for FlowPresentationContext.pushDetail(_:), v125);
      swift_bridgeObjectRetain(v47);
      v49 = static Link.Presentation.textFollowsTintColor.getter(v48);
      v50 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v51 = Link.Presentation.init(rawValue:)(0);
      v52 = Link.Presentation.init(rawValue:)(v51);
      if (Link.Presentation.init(rawValue:)(v52 & v49) != v49)
        v51 = Link.Presentation.init(rawValue:)(v51 | v49);
      v53 = Link.Presentation.init(rawValue:)(v51);
      if (Link.Presentation.init(rawValue:)(v53 & v50) != v50)
        v51 = Link.Presentation.init(rawValue:)(v51 | v50);
      v54 = v126;
      v55 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v114 + 104))(v126, enum case for FlowDestinationPageHeader.standard(_:), v117);
      v56 = v127;
      static ActionMetrics.notInstrumented.getter(v55);
      v57 = type metadata accessor for FlowAction(0);
      swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
      v58 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v19, 0, 0, 0, 0, v35, 0, v51, v54, v56);
      *(_QWORD *)(v46 + 56) = v57;
      *(_QWORD *)(v46 + 64) = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
      *(_QWORD *)(v46 + 32) = v58;
      v59 = Link.Presentation.init(rawValue:)(0);
      LOBYTE(v58) = v59;
      static ActionMetrics.notInstrumented.getter(v59);
      v60 = type metadata accessor for TabChangeAction(0);
      swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
      LOBYTE(v110) = v58;
      v61 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 10, v46, 0, 0, 0, 0, v110, v56);
      ObjectType = swift_getObjectType(v42, v62);
      v137 = (void *)v60;
      v138 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
      v135 = v61;
      swift_retain();
      v64 = v130;
      v65 = v133;
      v66 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v135, v130, v133, ObjectType, v44);
      swift_release(v61);
      swift_unknownObjectRelease(v42);
      swift_release(v65);
      swift_release(v66);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v64, v132);
      return sub_10003D380(&v135);
    }
    else
    {
      v92 = v115;
      static OSLogger.actions.getter(Strong);
      v93 = sub_10003F544(&qword_100557CA8);
      v94 = type metadata accessor for LogMessage(0);
      v95 = swift_allocObject(v93, ((*(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v94 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v94 - 8) + 80) | 7);
      *(_OWORD *)(v95 + 16) = xmmword_1003CA200;
      v96 = v113;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(71, 1);
      v97._countAndFlagsBits = 0xD00000000000002DLL;
      v97._object = (void *)0x8000000100438040;
      LogMessage.StringInterpolation.appendLiteral(_:)(v97);
      v137 = &type metadata for String;
      v135 = v128;
      v136 = v129;
      swift_bridgeObjectRetain(v129);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v135);
      sub_100007A28((uint64_t)&v135, (uint64_t *)&unk_100552300);
      v98._object = (void *)0x8000000100437FF0;
      v98._countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v98);
      LogMessage.init(stringInterpolation:)(v96);
      v99 = v118;
      Logger.error(_:)(v95, v118, &protocol witness table for OSLogger);
      swift_release(v33);
      v100 = swift_bridgeObjectRelease(v95);
      (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v92, v99, v100);
      return (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v130, v132);
    }
  }
  else
  {
    v68 = v120;
    v123 = v20;
    v69 = UIResponder.nearestActionRunner.getter(v34);
    if (v69)
    {
      v71 = v69;
      v72 = v70;
      v133 = v33;
      v73 = v129;
      *(_QWORD *)v17 = v128;
      *((_QWORD *)v17 + 1) = v73;
      *((_QWORD *)v17 + 3) = 0;
      *((_QWORD *)v17 + 4) = 0;
      *((_QWORD *)v17 + 2) = 0;
      v17[40] = 1;
      *((_QWORD *)v17 + 6) = 0;
      v17[56] = 1;
      (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v17, enum case for FlowDestination.episodeDetails(_:), v122);
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v68, enum case for FlowPresentationContext.infer(_:), v125);
      swift_bridgeObjectRetain(v73);
      v75 = static Link.Presentation.textFollowsTintColor.getter(v74);
      v76 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v77 = Link.Presentation.init(rawValue:)(0);
      v78 = Link.Presentation.init(rawValue:)(v77);
      if (Link.Presentation.init(rawValue:)(v78 & v75) != v75)
        v77 = Link.Presentation.init(rawValue:)(v77 | v75);
      v79 = Link.Presentation.init(rawValue:)(v77);
      v80 = Link.Presentation.init(rawValue:)(v79 & v76);
      v112 = v23;
      v81 = v72;
      if (v80 != v76)
        v77 = Link.Presentation.init(rawValue:)(v77 | v76);
      v82 = v126;
      v83 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v114 + 104))(v126, enum case for FlowDestinationPageHeader.standard(_:), v117);
      v84 = v127;
      static ActionMetrics.notInstrumented.getter(v83);
      v85 = type metadata accessor for FlowAction(0);
      swift_allocObject(v85, *(unsigned int *)(v85 + 48), *(unsigned __int16 *)(v85 + 52));
      v86 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v17, 0, 0, 0, 0, v68, 0, v77, v82, v84);
      v88 = swift_getObjectType(v71, v87);
      v137 = (void *)v85;
      v138 = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
      v135 = v86;
      swift_retain();
      v89 = v130;
      v90 = v133;
      v91 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v135, v130, v133, v88, v81);
      swift_release(v86);
      swift_unknownObjectRelease(v71);
      swift_release(v90);
      swift_release(v91);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v89, v132);
      sub_10003D380(&v135);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v112, v123);
    }
    else
    {
      v101 = v115;
      static OSLogger.actions.getter(0);
      v102 = sub_10003F544(&qword_100557CA8);
      v103 = type metadata accessor for LogMessage(0);
      v104 = swift_allocObject(v102, ((*(unsigned __int8 *)(*(_QWORD *)(v103 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v103 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v103 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v103 - 8) + 80) | 7);
      *(_OWORD *)(v104 + 16) = xmmword_1003CA200;
      v105 = v113;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(71, 1);
      v106._countAndFlagsBits = 0xD00000000000002DLL;
      v106._object = (void *)0x8000000100438040;
      LogMessage.StringInterpolation.appendLiteral(_:)(v106);
      v137 = &type metadata for String;
      v135 = v128;
      v136 = v129;
      swift_bridgeObjectRetain(v129);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v135);
      sub_100007A28((uint64_t)&v135, (uint64_t *)&unk_100552300);
      v107._object = (void *)0x8000000100437FF0;
      v107._countAndFlagsBits = 0xD00000000000001ALL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v107);
      LogMessage.init(stringInterpolation:)(v105);
      v108 = v118;
      Logger.error(_:)(v104, v118, &protocol witness table for OSLogger);
      swift_release(v33);
      v109 = swift_bridgeObjectRelease(v104);
      (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v101, v108, v109);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v123);
    }
  }
}

uint64_t sub_100264720(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v23;

  v23 = a5;
  v9 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v23 - v17;
  v19 = objc_msgSend((id)objc_opt_self(MTURLResolver), "episodeUrlForPodcastStoreId:episodeStoreId:", a3, a2);
  if (v19)
  {
    v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v21(v11, v16, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v21(v18, v11, v12);
      sub_100262DD8(a1, (uint64_t)v18, a4, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  return sub_100007A28((uint64_t)v11, (uint64_t *)&unk_100553DC0);
}

uint64_t sub_1002648EC(uint64_t a1, uint64_t a2, void *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v22;

  v8 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v22 - v16;
  v18 = objc_msgSend((id)objc_opt_self(MTURLResolver), "podcastUrlForStoreId:", a2);
  if (v18)
  {
    v19 = v18;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

    v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v10, v15, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v20(v17, v10, v11);
      sub_100262DD8(a1, (uint64_t)v17, a3, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  return sub_100007A28((uint64_t)v10, (uint64_t *)&unk_100553DC0);
}

uint64_t sub_100264AB8(void *a1, uint64_t a2, uint64_t a3, void *a4, char *a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[5];
  char *v51;
  char v52[32];

  v44 = a6;
  v43 = a5;
  v45 = a3;
  v46 = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PreviewingPresentationHint(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v52, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v19 = result;
    if (a1)
    {
      sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
      v42 = v8;
      v20 = a1;
      v41 = static OS_dispatch_queue.main.getter(v21);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v43, v14);
      v22 = *(unsigned __int8 *)(v15 + 80);
      v23 = (v22 + 48) & ~v22;
      v24 = v23 + v16;
      v25 = (char *)swift_allocObject(&unk_1004B8EE0, v24 + 1, v22 | 7);
      v40 = v13;
      v26 = v45;
      *((_QWORD *)v25 + 2) = v19;
      *((_QWORD *)v25 + 3) = v26;
      v43 = v10;
      v27 = v46;
      *((_QWORD *)v25 + 4) = v20;
      *((_QWORD *)v25 + 5) = v27;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v25[v23], v17, v14);
      v25[v24] = v44 & 1;
      aBlock[4] = sub_10026FE08;
      v51 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027AF8;
      aBlock[3] = &unk_1004B8EF8;
      v28 = _Block_copy(aBlock);
      v29 = v51;
      v30 = v20;
      swift_retain();
      swift_retain();
      v31 = v27;
      v32 = swift_release(v29);
      v33 = v40;
      static DispatchQoS.unspecified.getter(v32);
      aBlock[0] = _swiftEmptyArrayStorage;
      v34 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v35 = sub_10003F544((uint64_t *)&unk_10055B200);
      v36 = sub_10002F9C8((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200, (uint64_t)&protocol conformance descriptor for [A]);
      v37 = v42;
      v38 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v36, v42, v34);
      v39 = (void *)v41;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v33, v38, v28);
      _Block_release(v28);
      swift_release(v19);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v33, v48);
    }
    else
    {
      return swift_release(result);
    }
  }
  return result;
}

uint64_t sub_100264DDC(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (**v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  char v28;
  uint64_t result;
  unsigned int *v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t Strong;
  uint64_t v41;
  void *v42;
  uint64_t (**v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t ObjectType;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String v90;
  __n128 v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  Swift::String v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  Swift::String v102;
  __n128 v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  Swift::String v109;
  __n128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t (**v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  _BYTE v128[32];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  _OWORD v134[3];

  LODWORD(v123) = a5;
  v125 = a4;
  v126 = a3;
  v127 = a2;
  v124 = a1;
  v5 = type metadata accessor for LogMessage.StringInterpolation(0);
  v6 = __chkstk_darwin(v5);
  v113 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v115 = (uint64_t (**)(char *, uint64_t))((char *)&v111 - v8);
  v120 = type metadata accessor for OSLogger(0);
  v121 = *(_QWORD *)(v120 - 8);
  v9 = __chkstk_darwin(v120);
  v112 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v114 = (char *)&v111 - v11;
  v12 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v12);
  v119 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for FlowPresentationContext(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v118 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PreviewingPresentationHint(0);
  v16 = *(void (***)(char *, uint64_t, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ActionMetricsBehavior(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchPredicate(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (uint64_t *)((char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  *v26 = static OS_dispatch_queue.main.getter(v27);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  v28 = _dispatchPreconditionTest(_:)(v26);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v30 = (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:);
  v122 = v20;
  v31 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
  if ((v123 & 1) == 0)
    v30 = (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:);
  v32 = v19;
  v31(v22, *v30, v19);
  type metadata accessor for ActionRunnerOptions(0);
  v33 = swift_retain();
  v34 = BaseObjectGraph.__allocating_init(_:)(v33);
  memset(v134, 0, 32);
  v35 = objc_msgSend(v126, "view");
  sub_100007A64((uint64_t)v134, (uint64_t)v128, (uint64_t *)&unk_100552300);
  v36 = v35;
  ActionOrigin.init(sender:view:)(&v129, v128, v35);
  v124 = ActionRunnerOptions.withActionOrigin(_:)(&v129);
  sub_100007A28((uint64_t)&v129, (uint64_t *)&unk_100557CB0);
  swift_release(v34);

  sub_100007A28((uint64_t)v134, (uint64_t *)&unk_100552300);
  v16[2](v18, v125, v15);
  v37 = ((uint64_t (*)(char *, uint64_t))v16[11])(v18, v15);
  v125 = v32;
  v38 = v22;
  if ((_DWORD)v37 != enum case for PreviewingPresentationHint.inferTab(_:))
  {
    v114 = v18;
    v115 = (uint64_t (**)(char *, uint64_t))v16;
    v123 = v15;
    v69 = UIResponder.nearestActionRunner.getter(v37);
    v71 = v127;
    v72 = v113;
    v73 = v112;
    if (v69)
    {
      v74 = v69;
      v75 = v70;
      v76 = v38;
      v77 = type metadata accessor for FlowAction(0);
      v78 = (uint64_t)v118;
      (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v118, enum case for FlowPresentationContext.infer(_:), v117);
      v79 = v71;
      v80 = (uint64_t)v119;
      static ActionMetrics.notInstrumented.getter(v79);
      v81 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v79, v78, v80);
      if (v81)
      {
        v83 = v81;
        ObjectType = swift_getObjectType(v74, v82);
        v132 = (void *)v77;
        v133 = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
        v129 = v83;
        swift_retain();
        v85 = v124;
        v86 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v129, v76, v124, ObjectType, v75);
        swift_release(v83);
        swift_unknownObjectRelease(v74);
        swift_release(v85);
        swift_release(v86);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v76, v125);
        sub_10003D380(&v129);
        return v115[1](v114, v123);
      }
      v69 = swift_unknownObjectRelease(v74);
      v38 = v76;
    }
    static OSLogger.actions.getter(v69);
    v87 = sub_10003F544(&qword_100557CA8);
    v88 = type metadata accessor for LogMessage(0);
    v89 = swift_allocObject(v87, ((*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v88 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v88 - 8) + 80) | 7);
    *(_OWORD *)(v89 + 16) = xmmword_1003CA200;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(71, 1);
    v90._countAndFlagsBits = 0xD00000000000002DLL;
    v90._object = (void *)0x8000000100438010;
    LogMessage.StringInterpolation.appendLiteral(_:)(v90);
    v92 = MTPodcast.adamId.getter(v91);
    if ((v93 & 1) != 0)
    {
      v92 = 0;
      v130 = 0;
      v131 = 0;
      v132 = 0;
    }
    else
    {
      v132 = &type metadata for AdamID;
    }
    v94 = v122;
    v95 = v120;
    v96 = v125;
    v129 = v92;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v129);
    sub_100007A28((uint64_t)&v129, (uint64_t *)&unk_100552300);
    v97._object = (void *)0x8000000100437FF0;
    v97._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v97);
    LogMessage.init(stringInterpolation:)(v72);
    Logger.error(_:)(v89, v95, &protocol witness table for OSLogger);
    swift_release(v124);
    v98 = swift_bridgeObjectRelease(v89);
    (*(void (**)(char *, uint64_t, __n128))(v121 + 8))(v73, v95, v98);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v38, v96);
    return v115[1](v114, v123);
  }
  v39 = v111;
  Strong = swift_unknownObjectWeakLoadStrong(v111 + 16);
  v42 = v127;
  v43 = v115;
  v44 = v114;
  if (Strong)
  {
    v45 = Strong;
    v46 = *(_QWORD *)(v39 + 24);
    v47 = swift_getObjectType(Strong, v41);
    v48 = dispatch thunk of ActionRunnerProvider.actionRunner.getter(v47, v46);
    v50 = v49;
    Strong = swift_unknownObjectRelease(v45);
    if (v48)
    {
      v51 = type metadata accessor for FlowAction(0);
      v52 = (uint64_t)v118;
      (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v118, enum case for FlowPresentationContext.pushDetail(_:), v117);
      v53 = v42;
      v54 = (uint64_t)v119;
      static ActionMetrics.notInstrumented.getter(v53);
      v55 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v53, v52, v54);
      if (v55)
      {
        v56 = v55;
        sub_100005EC8(0, (unint64_t *)&qword_100561290, UITraitCollection_ptr);
        if ((static UITraitCollection.interfaceMode.getter() & 1) != 0)
          v57 = 1;
        else
          v57 = 7;
        v58 = sub_10003F544(&qword_1005612A0);
        v59 = swift_allocObject(v58, 72, 7);
        *(_OWORD *)(v59 + 16) = xmmword_1003CA200;
        *(_QWORD *)(v59 + 56) = v51;
        *(_QWORD *)(v59 + 64) = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
        *(_QWORD *)(v59 + 32) = v56;
        swift_retain();
        v60 = Link.Presentation.init(rawValue:)(0);
        v61 = v38;
        v62 = v60;
        static ActionMetrics.notInstrumented.getter(v60);
        v63 = type metadata accessor for TabChangeAction(0);
        v64 = v124;
        swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
        v65 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v57, v59, 0, 0, 0, 0, v62, v54);
        v67 = swift_getObjectType(v48, v66);
        v132 = (void *)v63;
        v133 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
        v129 = v65;
        swift_retain();
        v68 = ActionRunner.perform(_:withMetrics:asPartOf:)(&v129, v61, v64, v67, v50);
        swift_release(v56);
        swift_release(v65);
        swift_unknownObjectRelease(v48);
        swift_release(v64);
        swift_release(v68);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v61, v125);
        return sub_10003D380(&v129);
      }
      Strong = swift_unknownObjectRelease(v48);
    }
  }
  static OSLogger.actions.getter(Strong);
  v99 = sub_10003F544(&qword_100557CA8);
  v100 = type metadata accessor for LogMessage(0);
  v101 = swift_allocObject(v99, ((*(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v100 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v100 - 8) + 80) | 7);
  *(_OWORD *)(v101 + 16) = xmmword_1003CA200;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(71, 1);
  v102._countAndFlagsBits = 0xD00000000000002DLL;
  v102._object = (void *)0x8000000100438010;
  LogMessage.StringInterpolation.appendLiteral(_:)(v102);
  v104 = MTPodcast.adamId.getter(v103);
  if ((v105 & 1) != 0)
  {
    v104 = 0;
    v130 = 0;
    v131 = 0;
    v132 = 0;
  }
  else
  {
    v132 = &type metadata for AdamID;
  }
  v106 = v122;
  v107 = v120;
  v108 = v125;
  v129 = v104;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v129);
  sub_100007A28((uint64_t)&v129, (uint64_t *)&unk_100552300);
  v109._object = (void *)0x8000000100437FF0;
  v109._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v109);
  LogMessage.init(stringInterpolation:)(v43);
  Logger.error(_:)(v101, v107, &protocol witness table for OSLogger);
  swift_release(v124);
  v110 = swift_bridgeObjectRelease(v101);
  (*(void (**)(char *, uint64_t, __n128))(v121 + 8))(v44, v107, v110);
  return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v38, v108);
}

uint64_t sub_10026583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, void (*)(char *, uint64_t, uint64_t), uint64_t, __n128);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  void (*v157)(_QWORD, _QWORD);
  int v158;
  uint64_t v159;
  char *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __n128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t, uint64_t);
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  __n128 v206;
  int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(uint64_t, uint64_t, uint64_t);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  unsigned __int8 v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(char *, uint64_t, uint64_t);
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  void (*v254)(_QWORD, _QWORD);
  uint64_t v255;
  _QWORD v256[2];
  _QWORD v257[5];
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unsigned __int8 v264;

  v246 = a5;
  v245 = a4;
  v244 = a3;
  v247 = a1;
  v6 = sub_10003F544(&qword_10055D1A0);
  __chkstk_darwin(v6);
  v229 = (char *)&v227 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = type metadata accessor for ShowOffer(0);
  v233 = *(_QWORD *)(v234 - 8);
  __chkstk_darwin(v234);
  v230 = (char *)&v227 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v231);
  v232 = (char **)((char *)&v227 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10003F544(qword_1005542D8);
  v11 = __chkstk_darwin(v10);
  v235 = (uint64_t)&v227 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v239 = (char *)&v227 - v13;
  v241 = type metadata accessor for InteractionContext(0);
  v243 = *(_QWORD *)(v241 - 8);
  v14 = __chkstk_darwin(v241);
  v236 = (char *)&v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v238 = (char *)&v227 - v16;
  v240 = type metadata accessor for PresentationSource(0);
  v237 = *(_QWORD *)(v240 - 8);
  __chkstk_darwin(v240);
  v253 = (uint64_t)&v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10003F544(&qword_100555C48);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v227 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v242 = (uint64_t)&v227 - v22;
  v23 = type metadata accessor for EpisodeOffer(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v227 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v227 - v29;
  __chkstk_darwin(v28);
  v32 = (char *)&v227 - v31;
  v33 = type metadata accessor for PreviewingPresentationHint(0);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v227 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v248 = v37;
  v38 = *(void (**)(void))(v37 + 104);
  v249 = (void (*)(char *, uint64_t, uint64_t))((char *)&v227 - v39);
  v250 = v40;
  v38();
  v41 = a2;
  sub_10000A520(a2, (uint64_t)&v258);
  v42 = sub_10003F544(&qword_100554A30);
  v43 = type metadata accessor for LegacyEpisodeLockup(0);
  if (swift_dynamicCast(v257, &v258, v42, v43, 6))
  {
    v44 = (char *)v257[0];
    v45 = _swiftEmptyArrayStorage;
    v256[0] = _swiftEmptyArrayStorage;
    v46 = v244;
    v47 = *(_QWORD *)(v244 + 16);
    if (v47)
    {
      v48 = v250;
      v49 = v244 + 32;
      swift_bridgeObjectRetain(v244);
      do
      {
        sub_10000A520(v49, (uint64_t)&v258);
        sub_10000A520((uint64_t)&v258, (uint64_t)v257);
        if ((swift_dynamicCast(&v255, v257, v42, v43, 6) & 1) == 0)
          v255 = 0;
        v51 = sub_10003D380(&v258);
        v52 = v255;
        if (v255)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
          v54 = *(_QWORD *)((v256[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v53 = *(_QWORD *)((v256[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v54 >= v53 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
          v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
          specialized Array._endMutation()(v50);
        }
        v49 += 40;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease(v46);
      v45 = (_QWORD *)v256[0];
    }
    else
    {
      v48 = v250;
    }
    v80 = v249;
    sub_10026E6F8(v247, v44, (uint64_t)v45, v245, v246, v249);
    v82 = v81;
    swift_release(v44);
    v83 = swift_bridgeObjectRelease(v45);
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))(v248 + 8))(v80, v48, v83);
    return v82;
  }
  v252 = v30;
  v254 = (void (*)(_QWORD, _QWORD))v27;
  v228 = v32;
  v227 = v36;
  sub_10000A520(v41, (uint64_t)&v258);
  v55 = v242;
  v56 = swift_dynamicCast(v242, &v258, v42, v23, 6);
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v58 = v41;
  if (!v56)
  {
    v57(v55, 1, 1, v23);
    sub_100007A28(v55, &qword_100555C48);
    sub_10000A520(v41, (uint64_t)&v258);
    v70 = type metadata accessor for LibraryShowLockup(0, v69);
    if (swift_dynamicCast(v257, &v258, v42, v70, 6))
    {
      v71 = v257[0];
      v72 = swift_retain();
      v73 = dispatch thunk of LegacyLockup.contextAction.getter(v72);
      v233 = v71;
      swift_release(v71);
      v228 = (char *)v70;
      if (v73)
      {
        v75 = type metadata accessor for LibraryPodcastContextAction(0);
        if (swift_dynamicCastClass(v73, v75))
        {
          LibraryPodcastContextAction.groupedEpisodeListType.getter(&v258);
          v254 = (void (*)(_QWORD, _QWORD))v258;
          v76 = v259;
          v251 = *((_QWORD *)&v258 + 1);
          v244 = *((_QWORD *)&v259 + 1);
          v77 = v260;
          v242 = v261;
          v234 = v262;
          v78 = v263;
          v79 = v264;
        }
        else
        {
          v254 = 0;
          v251 = 0;
          v76 = 0;
          v244 = 0;
          v77 = 0;
          v242 = 0;
          v234 = 0;
          v78 = 0;
          v79 = 255;
        }
        v159 = v248;
        v160 = v227;
        v161 = v232;
        v162 = v231;
        v252 = (char *)v77;
        v253 = v78;
        swift_release(v73);
        v157 = v254;
        v158 = v79;
      }
      else
      {
        v157 = 0;
        v251 = 0;
        v76 = 0;
        v244 = 0;
        v252 = 0;
        v242 = 0;
        v234 = 0;
        v253 = 0;
        v158 = 255;
        v159 = v248;
        v160 = v227;
        v161 = v232;
        v162 = v231;
      }
      v232 = (_QWORD *)v76;
      *v161 = LibraryShowLockup.uuid.getter(v74);
      v161[1] = v179;
      swift_storeEnumTagMultiPayload(v161, v162, 0);
      v230 = *(char **)(v159 + 16);
      ((void (*)(char *, _QWORD, uint64_t))v230)(v160, v249, v250);
      v180 = type metadata accessor for PodcastContextActionData(0);
      v181 = swift_allocObject(v180, *(unsigned int *)(v180 + 48), *(unsigned __int16 *)(v180 + 52));
      v182 = (void *)objc_opt_self(MTDB);
      LODWORD(v231) = v158;
      v226 = v158;
      v254 = v157;
      v183 = (uint64_t)v157;
      v184 = v251;
      v185 = v76;
      v186 = v244;
      v187 = (uint64_t)v252;
      v188 = v242;
      v189 = v234;
      v190 = v253;
      sub_10004AE48(v183, v251, v185, v244, (uint64_t)v252, v242, v234, v253, v226);
      *(_QWORD *)(v181 + 16) = objc_msgSend(v182, "sharedInstance");
      sub_10014FDF8((uint64_t)v161, v181 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
      v191 = v160;
      v192 = v160;
      v193 = v250;
      ((void (*)(uint64_t, char *, uint64_t))v230)(v181 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint, v192, v250);
      v194 = v181 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
      *(_QWORD *)v194 = v254;
      *(_QWORD *)(v194 + 8) = v184;
      *(_QWORD *)(v194 + 16) = v232;
      *(_QWORD *)(v194 + 24) = v186;
      *(_QWORD *)(v194 + 32) = v187;
      *(_QWORD *)(v194 + 40) = v188;
      *(_QWORD *)(v194 + 48) = v189;
      *(_QWORD *)(v194 + 56) = v190;
      *(_BYTE *)(v194 + 64) = v231;
      sub_1001E3294();
      v248 = *(_QWORD *)(v248 + 8);
      ((void (*)(char *, uint64_t))v248)(v191, v193);
      sub_10003F970((uint64_t)v161, type metadata accessor for PodcastContextActionDataType);
      v195 = v237;
      v196 = (uint64_t)v239;
      v197 = v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v239, v245, v240);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v195 + 56))(v196, 0, 1, v197);
      v257[3] = v228;
      v257[4] = sub_100026844(&qword_10055D1A8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryShowLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
      v198 = v233;
      v257[0] = v233;
      v199 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      v200 = v238;
      v201 = v241;
      v199(v238, v246, v241);
      v202 = type metadata accessor for PodcastContextActionConfiguration(0);
      *(_QWORD *)(swift_allocObject(v202, *(unsigned int *)(v202 + 48), *(unsigned __int16 *)(v202 + 52))
                + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource) = v181;
      v203 = v235;
      sub_100007A64(v196, v235, qword_1005542D8);
      sub_100007A64((uint64_t)v257, (uint64_t)v256, &qword_100557C78);
      v204 = (uint64_t)v236;
      v199(v236, (uint64_t)v200, v201);
      v205 = v247;
      swift_retain();
      swift_retain();
      v82 = sub_1001B6894(v205, v203, (uint64_t)v256, v204);
      (*(void (**)(char *, uint64_t))(v243 + 8))(v200, v201);
      sub_100007A28((uint64_t)v257, &qword_100557C78);
      sub_100007A28(v196, qword_1005542D8);
      swift_release(v198);
      sub_1001930D0((uint64_t)v254, v251, (uint64_t)v232, v244, (uint64_t)v252, v242, v234, v253, v231);
      ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))v248)(v249, v250, v206);
      return v82;
    }
    v85 = v229;
    sub_100267400(v41, v229);
    v86 = v233;
    v87 = v234;
    v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v233 + 48))(v85, 1, v234);
    v89 = v241;
    if (v88 != 1)
    {
      v136 = v230;
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v230, v85, v87);
      v137 = (uint64_t)v232;
      (*(void (**)(_QWORD *, char *, uint64_t))(v86 + 16))(v232, v136, v87);
      swift_storeEnumTagMultiPayload(v137, v231, 1);
      v138 = v250;
      v139 = v248;
      v140 = v58;
      v141 = *(void (**)(char *, char *, uint64_t))(v248 + 16);
      v142 = v227;
      v141(v227, (char *)v249, v250);
      v143 = type metadata accessor for PodcastContextActionData(0);
      v144 = swift_allocObject(v143, *(unsigned int *)(v143 + 48), *(unsigned __int16 *)(v143 + 52));
      *(_QWORD *)(v144 + 16) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
      sub_10014FDF8(v137, v144 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
      v141((char *)(v144 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), v142, v138);
      v145 = v144 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
      *(_OWORD *)v145 = 0u;
      *(_OWORD *)(v145 + 16) = 0u;
      *(_OWORD *)(v145 + 32) = 0u;
      *(_OWORD *)(v145 + 48) = 0u;
      *(_BYTE *)(v145 + 64) = -1;
      sub_1001E3294();
      v254 = *(void (**)(_QWORD, _QWORD))(v139 + 8);
      v254(v142, v138);
      sub_10003F970(v137, type metadata accessor for PodcastContextActionDataType);
      v146 = v237;
      v147 = (uint64_t)v239;
      v148 = v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v239, v245, v240);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v146 + 56))(v147, 0, 1, v148);
      sub_10000A520(v140, (uint64_t)&v258);
      v149 = v243;
      v150 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      v151 = v238;
      v150(v238, v246, v89);
      v152 = type metadata accessor for PodcastContextActionConfiguration(0);
      *(_QWORD *)(swift_allocObject(v152, *(unsigned int *)(v152 + 48), *(unsigned __int16 *)(v152 + 52))
                + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource) = v144;
      v153 = v235;
      sub_100007A64(v147, v235, qword_1005542D8);
      sub_100007A64((uint64_t)&v258, (uint64_t)v257, &qword_100557C78);
      v154 = (uint64_t)v236;
      v150(v236, (uint64_t)v151, v89);
      swift_retain();
      v82 = sub_1001B6894(v155, v153, (uint64_t)v257, v154);
      (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v89);
      sub_100007A28((uint64_t)&v258, &qword_100557C78);
      sub_100007A28(v147, qword_1005542D8);
      (*(void (**)(char *, uint64_t))(v233 + 8))(v230, v234);
      ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))v254)(v249, v138, v156);
      return v82;
    }
    sub_100007A28((uint64_t)v85, &qword_10055D1A0);
    sub_10000A520(v41, (uint64_t)&v258);
    v90 = type metadata accessor for LegacyChannelLockup(0);
    if (swift_dynamicCast(v257, &v258, v42, v90, 6))
    {
      v91 = v257[0];
      v92 = v237;
      v93 = (uint64_t)v239;
      v94 = v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v239, v245, v240);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v94);
      v95 = v247;
      swift_retain();
      v96 = swift_retain();
      v97 = LegacyLockup.adamId.getter(v96);
      swift_release(v91);
      *(_QWORD *)&v258 = v97;
      v98 = sub_100030584();
      v99 = BinaryInteger.description.getter(&type metadata for UInt64, v98);
      v101 = v100;
      swift_retain();
      v104 = LegacyLockup.title.getter(v102, v103);
      v105 = v89;
      v107 = v106;
      swift_release(v91);
      v108 = (uint64_t)v238;
      (*(void (**)(char *, uint64_t, uint64_t))(v243 + 16))(v238, v246, v105);
      v109 = sub_10026B554(v95, v93, v99, v101, v104, v107, v91, v108, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyChannelLockup, &qword_10055D1B8, (uint64_t)&protocol conformance descriptor for LegacyLockup);
    }
    else
    {
      sub_10000A520(v41, (uint64_t)&v258);
      v163 = type metadata accessor for ChannelPowerSwooshAction(0);
      v164 = swift_dynamicCast(v257, &v258, v42, v163, 6);
      v165 = (uint64_t)v239;
      v166 = (uint64_t)v238;
      v167 = v237;
      if (!v164)
      {
        sub_10000A520(v58, (uint64_t)&v258);
        v208 = swift_dynamicCast(v257, &v258, v42, &type metadata for AdamID, 6);
        v209 = v240;
        if (v208)
        {
          v210 = v257[0];
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v165, v245, v240);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v165, 0, 1, v209);
          v211 = v243;
          v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16);
          v212(v166, v246, v89);
          v213 = type metadata accessor for CategoryContextActionConfiguration(0);
          *(_QWORD *)(swift_allocObject(v213, *(unsigned int *)(v213 + 48), *(unsigned __int16 *)(v213 + 52))
                    + OBJC_IVAR____TtC8Podcasts34CategoryContextActionConfiguration_categoryAdamID) = v210;
          v214 = v235;
          sub_100007A64(v165, v235, qword_1005542D8);
          v260 = 0;
          v258 = 0u;
          v259 = 0u;
          v215 = (uint64_t)v236;
          v212((uint64_t)v236, v166, v89);
          swift_retain();
          v82 = sub_1001B6894(v216, v214, (uint64_t)&v258, v215);
          (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v166, v89);
          sub_100007A28(v165, qword_1005542D8);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v165, v245, v240);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v165, 0, 1, v209);
          sub_10000A520(v58, (uint64_t)&v258);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16))(v166, v246, v89);
          v217 = type metadata accessor for OtherContextActionConfiguration(0);
          v218 = (uint64_t *)swift_allocObject(v217, *(unsigned int *)(v217 + 48), *(unsigned __int16 *)(v217 + 52));
          v219 = *((_QWORD *)&v259 + 1);
          v220 = v260;
          v221 = sub_100038DEC((uint64_t)&v258, *((uint64_t *)&v259 + 1));
          __chkstk_darwin(v221);
          v223 = (char *)&v227 - ((v222 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v224 + 16))(v223);
          swift_retain();
          v82 = (uint64_t)sub_1001B7FE4(v225, v165, (uint64_t)v223, v166, v218, v219, v220);
          sub_10003D380(&v258);
        }
        goto LABEL_40;
      }
      v168 = v257[0];
      v169 = v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v239, v245, v240);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v165, 0, 1, v169);
      v170 = v247;
      v171 = swift_retain();
      v172 = ChannelPowerSwooshAction.channelAdamId.getter(v171);
      v174 = v173;
      v175 = ChannelPowerSwooshAction.channelName.getter();
      v176 = v89;
      v178 = v177;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16))(v166, v246, v176);
      v109 = sub_10026B554(v170, v165, v172, v174, v175, v178, v168, v166, (uint64_t (*)(uint64_t))&type metadata accessor for ChannelPowerSwooshAction, &qword_10055D1C0, (uint64_t)&protocol conformance descriptor for Action);
    }
    v82 = v109;
LABEL_40:
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))(v248 + 8))(v249, v250, v110);
    return v82;
  }
  v235 = v41;
  v57(v55, 0, 1, v23);
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  v60 = v228;
  v59(v228, v55, v23);
  v61 = *(_QWORD *)(v244 + 16);
  v251 = v24;
  if (v61)
  {
    v62 = v244 + 32;
    swift_bridgeObjectRetain(v244);
    v63 = (char *)_swiftEmptyArrayStorage;
    v64 = v253;
    do
    {
      sub_10000A520(v62, (uint64_t)&v258);
      sub_10000A520((uint64_t)&v258, (uint64_t)v257);
      v65 = swift_dynamicCast(v21, v257, v42, v23, 6);
      v57((uint64_t)v21, v65 ^ 1u, 1, v23);
      sub_10003D380(&v258);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
      {
        sub_100007A28((uint64_t)v21, &qword_100555C48);
      }
      else
      {
        v66 = (uint64_t)v252;
        v59(v252, (uint64_t)v21, v23);
        v59((char *)v254, v66, v23);
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
          v63 = (char *)sub_10027BD48(0, *((_QWORD *)v63 + 2) + 1, 1, (unint64_t)v63);
        v68 = *((_QWORD *)v63 + 2);
        v67 = *((_QWORD *)v63 + 3);
        if (v68 >= v67 >> 1)
          v63 = (char *)sub_10027BD48(v67 > 1, v68 + 1, 1, (unint64_t)v63);
        *((_QWORD *)v63 + 2) = v68 + 1;
        v24 = v251;
        v59(&v63[((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v251 + 72) * v68], (uint64_t)v254, v23);
        v64 = v253;
      }
      v62 += 40;
      --v61;
    }
    while (v61);
    v84 = swift_bridgeObjectRelease(v244);
  }
  else
  {
    v111 = sub_10003F544(&qword_1005548E8);
    v112 = *(_QWORD *)(v24 + 72);
    v113 = *(unsigned __int8 *)(v24 + 80);
    v114 = v24;
    v115 = (v113 + 32) & ~v113;
    v63 = (char *)swift_allocObject(v111, v115 + v112, v113 | 7);
    *((_OWORD *)v63 + 1) = xmmword_1003CA200;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(&v63[v115], v60, v23);
    v64 = v253;
  }
  v116 = v248;
  v117 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))(v248 + 16);
  v118 = v227;
  v119 = v250;
  v117(v227, v249, v250, v84);
  v120 = type metadata accessor for EpisodeContextActionData(0);
  v121 = swift_allocObject(v120, *(unsigned int *)(v120 + 48), *(unsigned __int16 *)(v120 + 52));
  v122 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  *(_QWORD *)(v121 + v122) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  *(_QWORD *)(v121 + 16) = v63;
  *(_QWORD *)(v121 + 24) = 0;
  *(_BYTE *)(v121 + 32) = 1;
  ((void (*)(uint64_t, char *, uint64_t))v117)(v121 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v118, v119);
  *(_BYTE *)(v121 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
  sub_100369110();
  v254 = *(void (**)(_QWORD, _QWORD))(v116 + 8);
  v254(v118, v119);
  v123 = v237;
  v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16);
  v125 = v64;
  v126 = v64;
  v127 = v240;
  v124(v125, v245, v240);
  sub_10000A520(v235, (uint64_t)&v258);
  v128 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
  v129 = v238;
  v130 = v241;
  v128(v238, v246, v241);
  v131 = type metadata accessor for EpisodeContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v131, *(unsigned int *)(v131 + 48), *(unsigned __int16 *)(v131 + 52))
            + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource) = v121;
  v132 = (uint64_t)v239;
  v124((uint64_t)v239, v126, v127);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56))(v132, 0, 1, v127);
  sub_100007A64((uint64_t)&v258, (uint64_t)v257, &qword_100557C78);
  v133 = (uint64_t)v236;
  v128(v236, (uint64_t)v129, v130);
  swift_retain();
  v82 = sub_1001B6894(v134, v132, (uint64_t)v257, v133);
  (*(void (**)(char *, uint64_t))(v243 + 8))(v129, v130);
  sub_100007A28((uint64_t)&v258, &qword_100557C78);
  (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v253, v127);
  (*(void (**)(char *, uint64_t))(v251 + 8))(v228, v23);
  ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))v254)(v249, v250, v135);
  return v82;
}

char *sub_100266FA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  void *ObjCClassFromMetadata;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  v4 = v3;
  v8 = swift_allocObject(&unk_1004B8DF0, 32, 7);
  *(_BYTE *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = swift_allocObject(&unk_1004B8E18, 32, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v4);
  v23 = sub_10026FC34;
  v24 = v8;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10026B4A4;
  v22 = &unk_1004B8E30;
  v11 = _Block_copy(&v19);
  v12 = v24;
  swift_retain_n(a1, 2);
  swift_retain();
  swift_release(v12);
  v23 = sub_10026FC74;
  v24 = v9;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_10026B4DC;
  v22 = &unk_1004B8E58;
  v13 = _Block_copy(&v19);
  v14 = v24;
  swift_retain();
  swift_release(v14);
  v15 = (char *)objc_msgSend(ObjCClassFromMetadata, "configurationWithIdentifier:previewProvider:actionProvider:", 0, v11, v13);
  swift_release(v8);
  swift_release(v9);
  _Block_release(v13);
  _Block_release(v11);
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration_config];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration_config] = a1;
  swift_retain();
  v17 = v15;
  swift_release(v16);
  objc_msgSend(v17, "setPreferredMenuElementOrder:", 2);

  swift_release(a1);
  return v17;
}

void *sub_100267178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSString *v16;
  NSString *v17;
  NSString *v18;
  NSString *v19;
  NSString *v20;
  NSString *v21;
  id v22;
  Class isa;

  v5 = sub_10026583C(a1, a2, a3, a4, a5);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = ContextActionsConfiguration.firstShareAction()();
  if (!v7)
  {
    swift_release(v6);
    return 0;
  }
  v9 = v7;
  v10 = v8;
  ObjectType = swift_getObjectType(v7, v8);
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
  swift_unknownObjectRelease(v9);
  if (v12)
  {
    v13 = sub_10003F544((uint64_t *)&unk_1005629A0);
    v14 = swift_allocObject(v13, 96, 7);
    *(_OWORD *)(v14 + 16) = xmmword_1003D0BF0;
    *(_QWORD *)(v14 + 32) = UIActivityTypePrint;
    *(_QWORD *)(v14 + 40) = UIActivityTypeAssignToContact;
    *(_QWORD *)(v14 + 48) = UIActivityTypeAddToReadingList;
    *(_QWORD *)(v14 + 56) = UIActivityTypePostToFlickr;
    *(_QWORD *)(v14 + 64) = UIActivityTypePostToVimeo;
    *(_QWORD *)(v14 + 72) = UIActivityTypeSaveToCameraRoll;
    v15 = (void *)UIActivityTypeCreateReminder;
    *(_QWORD *)(v14 + 80) = UIActivityTypeCreateReminder;
    v16 = UIActivityTypePrint;
    v17 = UIActivityTypeAssignToContact;
    v18 = UIActivityTypeAddToReadingList;
    v19 = UIActivityTypePostToFlickr;
    v20 = UIActivityTypePostToVimeo;
    v21 = UIActivityTypeSaveToCameraRoll;
    v22 = v15;
    *(_QWORD *)(v14 + 88) = String._bridgeToObjectiveC()();
    type metadata accessor for ActivityType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v12, "pui_setExcludedActivityTypes:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);
    swift_release(v6);

  }
  else
  {
    swift_release(v6);
  }
  return v12;
}

id sub_10026731C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;

  v6 = sub_10026583C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, a3, a4);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = ContextActionsConfiguration.swipeActions(leadingSwipe:)(a5 & 1);
  sub_100005EC8(0, &qword_10055D1D0, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  objc_msgSend(v10, "setPerformsFirstActionWithFullSwipe:", 1);
  objc_msgSend(v10, "_setSwipeActionsStyle:", 1);
  swift_release(v7);
  return v10;
}

uint64_t sub_100267400@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  _BYTE v49[40];

  v47 = a2;
  v3 = sub_10003F544(&qword_10055D1C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ShowHero(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544(&qword_10055D1A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ShowOffer(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A520(a1, (uint64_t)v49);
  v17 = sub_10003F544(&qword_100554A30);
  v18 = swift_dynamicCast(v12, v49, v17, v13, 6);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v20 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56);
    v19((uint64_t)v12, 0, 1, v13);
    v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v21(v16, v12, v13);
    v22 = v47;
    v21(v47, v16, v13);
    return v20((uint64_t)v22, 0, 1, v13);
  }
  v44 = v5;
  v45 = v7;
  v43 = v9;
  v24 = v47;
  v46 = v19;
  v19((uint64_t)v12, 1, 1, v13);
  sub_100007A28((uint64_t)v12, &qword_10055D1A0);
  sub_10000A520(a1, (uint64_t)v49);
  v25 = type metadata accessor for LegacyLockup(0);
  if ((swift_dynamicCast(&v48, v49, v17, v25, 6) & 1) == 0)
  {
LABEL_9:
    v31 = v6;
    v33 = (uint64_t)v44;
    v32 = v45;
    sub_10000A520(a1, (uint64_t)v49);
    v34 = swift_dynamicCast(v33, v49, v17, v31, 6);
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if ((v34 & 1) == 0)
    {
      v41 = 1;
      v35(v33, 1, 1, v31);
      sub_100007A28(v33, &qword_10055D1C8);
      v30 = v24;
      return v46((uint64_t)v30, v41, 1, v13);
    }
    v35(v33, 0, 1, v31);
    v36 = (uint64_t)v43;
    v37 = sub_10026FBCC(v33, (uint64_t)v43);
    v38 = ShowHero.contextAction.getter(v37);
    v30 = v24;
    if (v38)
    {
      v39 = v38;
      v40 = type metadata accessor for PodcastContextAction(0);
      if (swift_dynamicCastClass(v39, v40))
      {
        PodcastContextAction.podcastOffer.getter();
        swift_release(v39);
        sub_10003F970(v36, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
        goto LABEL_13;
      }
      swift_release(v39);
    }
    sub_10003F970(v36, (uint64_t (*)(_QWORD))&type metadata accessor for ShowHero);
    v41 = 1;
    return v46((uint64_t)v30, v41, 1, v13);
  }
  v26 = v48;
  v27 = dispatch thunk of LegacyLockup.contextAction.getter();
  if (!v27)
  {
LABEL_8:
    swift_release(v26);
    goto LABEL_9;
  }
  v28 = v27;
  v29 = type metadata accessor for PodcastContextAction(0);
  if (!swift_dynamicCastClass(v28, v29))
  {
    swift_release(v28);
    goto LABEL_8;
  }
  v30 = v24;
  PodcastContextAction.podcastOffer.getter();
  swift_release(v28);
  swift_release(v26);
LABEL_13:
  v41 = 0;
  return v46((uint64_t)v30, v41, 1, v13);
}

_QWORD *sub_100267788(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_31;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v34 = v1 & 0xC000000000000001;
    v3 = _swiftEmptyArrayStorage;
    v4 = 4;
    v35 = _swiftEmptyArrayStorage;
    v32 = v1;
    v33 = v2;
    while (1)
    {
      v6 = v4 - 4;
      if (!v34)
        break;
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1);
      v8 = v4 - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_30;
LABEL_12:
      v9 = swift_retain();
      v10 = dispatch thunk of LegacyLockup.buttonAction.getter(v9);
      swift_release(v7);
      if (!v10)
      {
        swift_bridgeObjectRelease(v3);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v1);
        swift_release(v7);
        return 0;
      }
      v11 = type metadata accessor for LibraryStationEpisodeOfferAction(0);
      if (swift_dynamicCastClass(v10, v11))
      {
        v12 = swift_retain();
        v13 = LibraryEpisodeOfferAction.episodeUuid.getter(v12);
        v15 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_10027AE00(0, v3[2] + 1, 1, v3);
        v17 = v3[2];
        v16 = v3[3];
        if (v17 >= v16 >> 1)
          v3 = sub_10027AE00((_QWORD *)(v16 > 1), v17 + 1, 1, v3);
        v3[2] = v17 + 1;
        v18 = &v3[2 * v17];
        v18[4] = v13;
        v18[5] = v15;
        v19 = LibraryStationEpisodeOfferAction.stationUuid.getter();
        v21 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) != 0)
        {
          v1 = v32;
          v22 = v35;
        }
        else
        {
          v22 = sub_10027AE00(0, v35[2] + 1, 1, v35);
          v1 = v32;
        }
        v24 = v22[2];
        v23 = v22[3];
        if (v24 >= v23 >> 1)
          v22 = sub_10027AE00((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
        v22[2] = v24 + 1;
        v35 = v22;
        v5 = &v22[2 * v24];
      }
      else
      {
        v25 = type metadata accessor for LibraryEpisodeOfferAction();
        if (!swift_dynamicCastClass(v10, v25))
          goto LABEL_6;
        v26 = swift_retain();
        v19 = LibraryEpisodeOfferAction.episodeUuid.getter(v26);
        v21 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_10027AE00(0, v3[2] + 1, 1, v3);
        v29 = v3[2];
        v28 = v3[3];
        if (v29 >= v28 >> 1)
          v3 = sub_10027AE00((_QWORD *)(v28 > 1), v29 + 1, 1, v3);
        v3[2] = v29 + 1;
        v5 = &v3[2 * v29];
      }
      v5[4] = v19;
      v5[5] = v21;
      swift_release(v10);
      v2 = v33;
LABEL_6:
      swift_release(v10);
      swift_release(v7);
      ++v4;
      if (v8 == v2)
        goto LABEL_36;
    }
    v7 = *(_QWORD *)(v1 + 8 * v4);
    swift_retain();
    v8 = v4 - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_12;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v1 < 0)
      v30 = v1;
    else
      v30 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  v3 = _swiftEmptyArrayStorage;
  v35 = _swiftEmptyArrayStorage;
LABEL_36:
  swift_bridgeObjectRelease(v1);
  if (!v3[2])
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v35);
    return 0;
  }
  return v3;
}

_QWORD *sub_100267AC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v21 = type metadata accessor for EpisodeOffer(0);
  v2 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease(a1);
    v6 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
      return v6;
    goto LABEL_26;
  }
LABEL_21:
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v5)
    goto LABEL_25;
LABEL_3:
  v22 = a1 & 0xC000000000000001;
  v6 = _swiftEmptyArrayStorage;
  v7 = 4;
  v20 = v5;
  do
  {
    v8 = v7 - 4;
    if (v22)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
      v10 = v7 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_20;
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 8 * v7);
      swift_retain();
      v10 = v7 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    v11 = swift_retain();
    v12 = dispatch thunk of LegacyLockup.buttonAction.getter(v11);
    swift_release(v9);
    if (!v12)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(a1);
      swift_release(v9);
      return 0;
    }
    v13 = type metadata accessor for EpisodeOfferAction(0);
    if (swift_dynamicCastClass(v12, v13))
    {
      v14 = swift_retain();
      EpisodeOfferAction.episodeOffer.getter(v14);
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = (_QWORD *)sub_10027BD48(0, v6[2] + 1, 1, (unint64_t)v6);
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
        v6 = (_QWORD *)sub_10027BD48(v15 > 1, v16 + 1, 1, (unint64_t)v6);
      v6[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v16, v4, v21);
      swift_release(v12);
      v5 = v20;
    }
    swift_release(v12);
    swift_release(v9);
    ++v7;
  }
  while (v10 != v5);
  swift_bridgeObjectRelease(a1);
  if (v6[2])
    return v6;
LABEL_26:
  swift_bridgeObjectRelease(v6);
  return 0;
}

void sub_100267D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[40];

  v32 = a1;
  v30 = a6;
  v31 = a7;
  v28 = a2;
  v29 = a3;
  v11 = type metadata accessor for PreviewingPresentationHint(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject(&unk_1004B8CD8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a3);
  v16 = swift_allocObject(&unk_1004B8D00, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  sub_100007A64(a5, (uint64_t)v33, &qword_100557C78);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject(&unk_1004B8DA0, v20 + 40, v17 | 7);
  *((_QWORD *)v21 + 2) = v16;
  *((_QWORD *)v21 + 3) = v15;
  v22 = v31;
  *((_QWORD *)v21 + 4) = v30;
  *((_QWORD *)v21 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[v18], v14, v11);
  *(_QWORD *)&v21[v19] = v32;
  sub_10003DC78((uint64_t)v33, (uint64_t)&v21[v20], &qword_100557C78);
  swift_retain();
  swift_retain();
  swift_retain();
  v23 = swift_retain();
  v24 = v28;
  v25 = v29;
  v26 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)(v29, sub_10026BCD0, v21, v23);
  swift_release(v15);
  swift_release(v16);
  swift_release(v21);
  sub_100268774(v24, v25, (uint64_t)v26);

}

void *sub_100267F14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD **__return_ptr, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t Strong;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  _QWORD *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  __n128 v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(_QWORD **__return_ptr, uint64_t);
  uint64_t v113;
  _BYTE v114[40];
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  char v120[24];
  char v121[8];

  v109 = a7;
  v103 = a6;
  v111 = a5;
  v112 = a4;
  v11 = type metadata accessor for PreviewingPresentationHint(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v15);
  v106 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for InteractionContext(0);
  v107 = *(_QWORD *)(v108 - 8);
  v17 = __chkstk_darwin(v108);
  v104 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v105 = (char *)&v95 - v19;
  v20 = type metadata accessor for StationShowContextActionData(0);
  v21 = __chkstk_darwin(v20);
  v101 = (uint64_t)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v100 = (char *)&v95 - v23;
  v24 = sub_10003F544(&qword_10055A350);
  __chkstk_darwin(v24);
  v26 = (uint64_t *)((char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for PresentationSource(0);
  v113 = *(_QWORD *)(v27 - 8);
  v28 = __chkstk_darwin(v27);
  v110 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v31 = (char *)&v95 - v30;
  a2 += 16;
  swift_beginAccess(a2, v121, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v33 = (void *)Strong;
  v34 = a3 + 16;
  swift_beginAccess(v34, v120, 0, 0);
  v35 = (void *)swift_unknownObjectWeakLoadStrong(v34);
  if (v35)
  {
    v97 = a8;
    v99 = v27;
    v36 = v33;
    v37 = v35;
    objc_msgSend(v37, "bounds");
    v102 = v37;
    *v26 = v37;
    v26[1] = v38;
    v26[2] = v39;
    v26[3] = v40;
    v26[4] = v41;
    v42 = enum case for PresentationSource.Position.view(_:);
    v43 = type metadata accessor for PresentationSource.Position(0);
    v44 = *(_QWORD *)(v43 - 8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v44 + 104))(v26, v42, v43);
    v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56);
    v46 = v31;
    v45(v26, 0, 1, v43);
    v98 = v36;
    v47 = PresentationSource.init(viewController:position:)(v36, v26);
    v112(&v115, v47);
    v48 = v116;
    v49 = v117;
    v50 = v119;
    if (v115)
    {
      v51 = 0;
      v52 = v116;
      v48 = v115;
LABEL_8:
      swift_bridgeObjectRelease(v52);
      v53 = swift_bridgeObjectRelease(v50);
      v54 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
      v54(v14, v103, v11, v53);
      v55 = type metadata accessor for EpisodeContextActionData(0);
      v56 = swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
      v57 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
      *(_QWORD *)(v56 + v57) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
      *(_QWORD *)(v56 + 16) = v48;
      *(_QWORD *)(v56 + 24) = v49;
      *(_BYTE *)(v56 + 32) = v51;
      ((void (*)(uint64_t, char *, uint64_t))v54)(v56 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v14, v11);
      *(_BYTE *)(v56 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
      sub_100369110();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v58 = v113;
      v59 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
      v60 = v110;
      v96 = v31;
      v61 = v31;
      v62 = v99;
      v59(v110, v61, v99);
      sub_100007A64(v97, (uint64_t)&v115, &qword_100557C78);
      v63 = v109;
      v64 = swift_retain();
      v65 = v105;
      UIView.interactionContext.getter(v64);
      v66 = type metadata accessor for EpisodeContextActionConfiguration(0);
      *(_QWORD *)(swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52))
                + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource) = v56;
      v67 = (uint64_t)v106;
      v59(v106, v60, v62);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v67, 0, 1, v62);
      sub_100007A64((uint64_t)&v115, (uint64_t)v114, &qword_100557C78);
      v68 = v107;
      v69 = (uint64_t)v104;
      v70 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v65, v108);
      v35 = (void *)sub_1001B6894(v63, v67, (uint64_t)v114, v69);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v70);
      sub_100007A28((uint64_t)&v115, &qword_100557C78);
      v71 = *(void (**)(char *, uint64_t))(v58 + 8);
      v71(v60, v62);

      v71(v96, v62);
      return v35;
    }
    if (v116)
    {
      v51 = 1;
      v52 = v117;
      v49 = 0;
      goto LABEL_8;
    }
    if (v117)
    {
      if (v117[2])
      {
        v72 = v118;
        v74 = v117[4];
        v73 = v117[5];
        swift_bridgeObjectRetain(v73);
        v75 = swift_bridgeObjectRelease(v49);
        if (v50)
        {
          v76 = v100;
          (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(&v100[*(int *)(v20 + 24)], v103, v11, v75);
          *v76 = v74;
          v76[1] = v73;
          v76[2] = v72;
          v76[3] = v50;
          *((_BYTE *)v76 + *(int *)(v20 + 28)) = 1;
          v77 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
          v78 = v113;
          v79 = v110;
          v80 = v99;
          v77(v110, v46, v99);
          v81 = v101;
          sub_10014FDF8((uint64_t)v76, v101, type metadata accessor for StationShowContextActionData);
          sub_100007A64(v97, (uint64_t)&v115, &qword_100557C78);
          v82 = v109;
          v83 = swift_retain();
          v84 = v105;
          UIView.interactionContext.getter(v83);
          v85 = type metadata accessor for StationShowContextActionConfiguration(0);
          v86 = swift_allocObject(v85, *(unsigned int *)(v85 + 48), *(unsigned __int16 *)(v85 + 52));
          sub_10014FDF8(v81, v86 + OBJC_IVAR____TtC8Podcasts37StationShowContextActionConfiguration_dataSource, type metadata accessor for StationShowContextActionData);
          v87 = (uint64_t)v106;
          v77(v106, v79, v80);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v87, 0, 1, v80);
          sub_100007A64((uint64_t)&v115, (uint64_t)v114, &qword_100557C78);
          v88 = v107;
          v89 = (uint64_t)v104;
          v90 = v108;
          (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v84, v108);
          v35 = (void *)sub_1001B6894(v82, v87, (uint64_t)v114, v89);
          (*(void (**)(char *, uint64_t))(v88 + 8))(v84, v90);
          sub_100007A28((uint64_t)&v115, &qword_100557C78);
          sub_10003F970(v101, type metadata accessor for StationShowContextActionData);
          v91 = *(void (**)(char *, uint64_t))(v113 + 8);
          v91(v110, v80);

          sub_10003F970((uint64_t)v76, type metadata accessor for StationShowContextActionData);
          v91(v46, v80);
          return v35;
        }
        (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v46, v99, v75);
        swift_bridgeObjectRelease(v73);

        return 0;
      }

      swift_bridgeObjectRelease(v49);
    }
    else
    {

    }
    v92 = v113;
    v93 = swift_bridgeObjectRelease(v50);
    (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v46, v99, v93);
    return 0;
  }

  return v35;
}

void sub_100268774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  id v8;
  id v9;
  id v10;

  v7 = objc_msgSend(*(id *)(v3 + 136), "objectForKey:", a1);

  if (!v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 5, 0);
    objc_msgSend(*(id *)(v3 + 136), "setObject:forKey:", v8, a1);

  }
  v9 = objc_msgSend(*(id *)(v3 + 136), "objectForKey:", a1);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setObject:forKey:", a3, a2);

  }
}

void sub_100268878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __n128 v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[40];
  _BYTE v63[48];

  v61 = a2;
  v56 = a7;
  v57 = a3;
  v55 = a1;
  v60 = type metadata accessor for InteractionContext(0);
  v58 = *(_QWORD *)(v60 - 8);
  v10 = __chkstk_darwin(v60);
  v59 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v53 = (char *)&v52 - v12;
  v13 = sub_10003F544(qword_1005542D8);
  v14 = __chkstk_darwin(v13);
  v54 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v52 - v16;
  v18 = type metadata accessor for PreviewingPresentationHint(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v24 = a4;
  v24[1] = a5;
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v26(v21, a6, v18);
  v27 = type metadata accessor for PodcastContextActionData(0);
  v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v29 = (void *)objc_opt_self(MTDB);
  *(_QWORD *)(v28 + 16) = objc_msgSend(v29, "sharedInstance", swift_bridgeObjectRetain(a5).n128_f64[0]);
  sub_10014FDF8((uint64_t)v24, v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  v26((char *)(v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v21, v18);
  v30 = v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 48) = 0u;
  *(_BYTE *)(v30 + 64) = -1;
  sub_1001E3294();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_10003F970((uint64_t)v24, type metadata accessor for PodcastContextActionDataType);
  v31 = type metadata accessor for PresentationSource(0);
  v32 = (uint64_t)v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
  sub_100007A64(v56, (uint64_t)v63, &qword_100557C78);
  v33 = v55;
  swift_retain();
  v34 = swift_retain();
  v35 = v53;
  v36 = v57;
  UIView.interactionContext.getter(v34);
  v37 = type metadata accessor for PodcastContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52))
            + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource) = v28;
  v38 = v54;
  sub_100007A64((uint64_t)v17, v54, qword_1005542D8);
  sub_100007A64((uint64_t)v63, (uint64_t)v62, &qword_100557C78);
  v39 = v58;
  v40 = (uint64_t)v59;
  v41 = v35;
  v42 = v35;
  v43 = v60;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v59, v41, v60);
  v44 = sub_1001B6894(v33, v38, (uint64_t)v62, v40);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v43);
  sub_100007A28((uint64_t)v63, &qword_100557C78);
  sub_100007A28(v32, qword_1005542D8);
  v45 = swift_allocObject(&unk_1004B8CD8, 24, 7);
  v46 = v36;
  swift_unknownObjectWeakInit(v45 + 16, v36);
  v47 = swift_allocObject(&unk_1004B8D00, 24, 7);
  v48 = v61;
  swift_unknownObjectWeakInit(v47 + 16, v61);
  v49 = (_QWORD *)swift_allocObject(&unk_1004B8D78, 40, 7);
  v49[2] = v47;
  v49[3] = v45;
  v49[4] = v44;
  swift_retain();
  swift_retain();
  v50 = swift_retain();
  v51 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)(v46, sub_100270618, v49, v50);
  swift_release(v45);
  swift_release(v47);
  swift_release(v49);
  sub_100268774(v48, v46, (uint64_t)v51);
  swift_release(v28);
  swift_release(v44);

}

void sub_100268CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  __n128 v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[40];
  _BYTE v60[48];

  v58 = a2;
  v53 = a6;
  v54 = a3;
  v52 = a1;
  v8 = type metadata accessor for InteractionContext(0);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = __chkstk_darwin(v8);
  v55 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - v11;
  v13 = sub_10003F544(qword_1005542D8);
  v14 = __chkstk_darwin(v13);
  v51 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v51 - v16;
  v18 = type metadata accessor for PreviewingPresentationHint(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ShowOffer(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, a4, v25);
  swift_storeEnumTagMultiPayload(v24, v22, 1);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v26(v21, a5, v18);
  v27 = type metadata accessor for PodcastContextActionData(0);
  v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  *(_QWORD *)(v28 + 16) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  sub_10014FDF8((uint64_t)v24, v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  v26((char *)(v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint), (uint64_t)v21, v18);
  v29 = v28 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = 0u;
  *(_BYTE *)(v29 + 64) = -1;
  sub_1001E3294();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_10003F970((uint64_t)v24, type metadata accessor for PodcastContextActionDataType);
  v30 = type metadata accessor for PresentationSource(0);
  v31 = (uint64_t)v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 1, 1, v30);
  sub_100007A64(v53, (uint64_t)v60, &qword_100557C78);
  v32 = v52;
  swift_retain();
  v33 = swift_retain();
  v34 = v12;
  v35 = v54;
  UIView.interactionContext.getter(v33);
  v36 = type metadata accessor for PodcastContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52))
            + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource) = v28;
  v37 = v51;
  sub_100007A64((uint64_t)v17, v51, qword_1005542D8);
  sub_100007A64((uint64_t)v60, (uint64_t)v59, &qword_100557C78);
  v39 = (uint64_t)v55;
  v38 = v56;
  v40 = v34;
  v41 = v34;
  v42 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v40, v57);
  v43 = sub_1001B6894(v32, v37, (uint64_t)v59, v39);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v42);
  sub_100007A28((uint64_t)v60, &qword_100557C78);
  sub_100007A28(v31, qword_1005542D8);
  v44 = swift_allocObject(&unk_1004B8CD8, 24, 7);
  v45 = v35;
  swift_unknownObjectWeakInit(v44 + 16, v35);
  v46 = swift_allocObject(&unk_1004B8D00, 24, 7);
  v47 = v58;
  swift_unknownObjectWeakInit(v46 + 16, v58);
  v48 = (_QWORD *)swift_allocObject(&unk_1004B8D50, 40, 7);
  v48[2] = v46;
  v48[3] = v44;
  v48[4] = v43;
  swift_retain();
  swift_retain();
  v49 = swift_retain();
  v50 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)(v45, sub_100270618, v48, v49);
  swift_release(v44);
  swift_release(v46);
  swift_release(v48);
  sub_100268774(v47, v45, (uint64_t)v50);
  swift_release(v28);
  swift_release(v43);

}

uint64_t sub_100269178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  void *v30;
  _QWORD v32[2];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v9 = type metadata accessor for InteractionContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v12);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007A64(a4, (uint64_t)&v33, &qword_100557C78);
  if (!v34)
    return sub_100007A28((uint64_t)&v33, &qword_100557C78);
  v32[1] = v4;
  sub_10002099C(&v33, (uint64_t)v36);
  v15 = type metadata accessor for PresentationSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_10000A520((uint64_t)v36, (uint64_t)&v33);
  v16 = swift_retain();
  UIView.interactionContext.getter(v16);
  v17 = type metadata accessor for OtherContextActionConfiguration(0);
  v18 = (uint64_t *)swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = v34;
  v20 = v35;
  v21 = sub_100038DEC((uint64_t)&v33, v34);
  __chkstk_darwin(v21);
  v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v25 = sub_1001B7FE4(a1, (uint64_t)v14, (uint64_t)v23, (uint64_t)v11, v18, v19, v20);
  sub_10003D380(&v33);
  if (v25)
  {
    v26 = swift_allocObject(&unk_1004B8CD8, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, a3);
    v27 = swift_allocObject(&unk_1004B8D00, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, a2);
    v28 = (_QWORD *)swift_allocObject(&unk_1004B8D28, 40, 7);
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = v25;
    swift_retain();
    swift_retain();
    v29 = swift_retain();
    v30 = (void *)UIViewController.registerForPreviewing(sourceView:handler:)(a3, sub_10026BBD8, v28, v29);
    swift_release(v26);
    swift_release(v27);
    swift_release(v28);
    sub_100268774(a2, a3, (uint64_t)v30);
    swift_release(v25);

  }
  return sub_10003D380(v36);
}

uint64_t sub_100269434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  id v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v7 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544(&qword_10055A350);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for PresentationSource(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v18 = (void *)Strong;
  v19 = a3 + 16;
  swift_beginAccess(v19, v34, 0, 0);
  v20 = swift_unknownObjectWeakLoadStrong(v19);
  if (!v20)
  {

    return 0;
  }
  v21 = (void *)v20;
  v33 = v18;
  v22 = v21;
  objc_msgSend(v22, "bounds");
  *v12 = v22;
  v12[1] = v23;
  v12[2] = v24;
  v12[3] = v25;
  v12[4] = v26;
  v27 = enum case for PresentationSource.Position.view(_:);
  v28 = type metadata accessor for PresentationSource.Position(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v29 + 104))(v12, v27, v28);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v12, 0, 1, v28);
  v30 = v33;
  PresentationSource.init(viewController:position:)(v33, v12);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  (*(void (**)(char *))(*(_QWORD *)a4 + 128))(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_retain();
  return a4;
}

void sub_100269668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v4 = objc_msgSend(*(id *)(v2 + 136), "objectForKey:", a1);
  if (v4)
  {
    v8 = v4;
    v5 = objc_msgSend(v4, "objectForKey:", a2);
    if (v5)
    {
      v6 = v5;
      UIViewController.unregisterForPreviewing(registration:)();
      objc_msgSend(v8, "removeObjectForKey:", a2);

      v7 = v6;
    }
    else
    {
      v7 = v8;
    }

  }
}

void sub_10026971C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  _BYTE v15[32];

  v2 = v1;
  v4 = objc_msgSend(*(id *)(v2 + 136), "objectForKey:", a1);
  if (v4)
  {
    v13 = v4;
    v5 = objc_msgSend(v4, "objectEnumerator");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "allObjects");

      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, (char *)&type metadata for Any + 8);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = v8 + 32;
        while (1)
        {
          sub_10003D344(v10, (uint64_t)v15);
          v11 = type metadata accessor for ContextActionsPresentationRegistration(0);
          if (!swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v11, 6))
            break;
          v12 = v14;
          UIViewController.unregisterForPreviewing(registration:)(v14);

          v10 += 32;
          if (!--v9)
            goto LABEL_7;
        }
        swift_bridgeObjectRelease(v8);
      }
      else
      {
LABEL_7:
        objc_msgSend(*(id *)(v2 + 136), "removeObjectForKey:", a1, swift_bridgeObjectRelease(v8).n128_f64[0]);
      }

    }
    else
    {

    }
  }
}

uint64_t sub_100269880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 104) = v18;
  *(_OWORD *)(v8 + 88) = v17;
  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a8;
  *(_BYTE *)(v8 + 241) = a7;
  *(_BYTE *)(v8 + 240) = a6;
  *(_QWORD *)(v8 + 64) = a4;
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 112) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackController.QueueCommand(0);
  *(_QWORD *)(v8 + 136) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 144) = v12;
  *(_QWORD *)(v8 + 152) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PlaybackIntent(0);
  *(_QWORD *)(v8 + 160) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 168) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 176) = swift_task_alloc(v15);
  *(_QWORD *)(v8 + 184) = swift_task_alloc(v15);
  return swift_task_switch(sub_10026995C, 0, 0);
}

uint64_t sub_10026995C()
{
  uint64_t v0;
  char v1;
  void (*v2)(uint64_t, _QWORD, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  void *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v1 = *(_BYTE *)(v0 + 240);
  v2 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 16);
  v2(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 160));
  if ((v1 & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = sub_10003F544(&qword_10055B7A0);
    v6 = type metadata accessor for PlaybackIntent.Option(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = *(unsigned __int8 *)(v7 + 80);
    v10 = (v9 + 32) & ~v9;
    v11 = swift_allocObject(v5, v10 + 2 * v8, v9 | 7);
    *(_OWORD *)(v11 + 16) = xmmword_1003CA220;
    v12 = v11 + v10;
    v13 = *(void (**)(void))(v7 + 104);
    ((void (*)(uint64_t, _QWORD, uint64_t))v13)(v12, enum case for PlaybackIntent.Option.startPlayback(_:), v6);
    *(_QWORD *)(v12 + v8) = v4;
    v13();
    v14 = sub_10013BB7C(v11);
    swift_setDeallocating(v11);
    swift_arrayDestroy(v12, 2, v6);
    swift_deallocClassInstance(v11, 32, 7);
    PlaybackIntent.withOptions(_:)(v14);
    v15 = swift_bridgeObjectRelease(v14);
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v25, v24, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v25, v23, v24);
  }
  if (*(_BYTE *)(v0 + 241) == 1)
  {
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v2(v16, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, enum case for PlaybackController.QueueCommand.replace(_:), v18);
    *(_QWORD *)(v0 + 40) = v18;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
    v19 = sub_1000242A8((_QWORD *)(v0 + 16));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 16))(v19, v16, v18);
    v26 = (char *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
        + async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:);
    v20 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)
                                     + 1));
    *(_QWORD *)(v0 + 192) = v20;
    *v20 = v0;
    v20[1] = sub_100269BCC;
    return ((uint64_t (*)(uint64_t, _QWORD, double))v26)(v0 + 16, 0, 5.0);
  }
  else
  {
    v22 = (_QWORD *)swift_task_alloc(async function pointer to PlaybackController.performIntent(_:)[1]);
    *(_QWORD *)(v0 + 208) = v22;
    *v22 = v0;
    v22[1] = sub_100269CCC;
    return PlaybackController.performIntent(_:)(*(_QWORD *)(v0 + 184));
  }
}

uint64_t sub_100269BCC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 192);
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100269E54;
  }
  else
  {

    sub_10003D380((_QWORD *)(v4 + 16));
    v6 = sub_100269C4C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100269C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100269CCC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 208);
  *(_QWORD *)(*(_QWORD *)v2 + 216) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10026A078;
  }
  else
  {

    v5 = sub_100269D38;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100269D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100269DA0()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;

  v1 = (void **)v0[28];
  v2 = v0[13];
  swift_release(v0[29]);
  sub_10025D5CC(v1, v2);
  return swift_task_switch(sub_100269DF4, 0, 0);
}

uint64_t sub_100269DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_errorRelease(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100269E54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[23];
  v2 = v0[20];
  v3 = v0[21];
  (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_10003D380(v0 + 2);
  v4 = v0[25];
  v0[28] = v4;
  v5 = (_QWORD *)v0[11];
  v6 = v5[3];
  v7 = v5[4];
  sub_10003A834(v5, v6);
  v8 = dispatch thunk of PendingPlaybackControllerProtocol.reset()(v6, v7);
  static Logger.modernPlayback.getter(v8);
  swift_errorRetain(v4);
  v9 = swift_errorRetain(v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v4);
    v14 = _swift_stdlib_bridgeErrorToNSError(v4);
    v0[7] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v12 + 4, v12 + 12);
    *v13 = v14;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unable to play intent: %@", v12, 0xCu);
    v15 = sub_10003F544((uint64_t *)&unk_100556480);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
  }
  v17 = v0[15];
  v16 = v0[16];
  v18 = v0[14];

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = type metadata accessor for MainActor(0);
  v0[29] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  return swift_task_switch(sub_100269DA0, v21, v22);
}

uint64_t sub_10026A078()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[23], v0[20]);
  v1 = v0[27];
  v0[28] = v1;
  v2 = (_QWORD *)v0[11];
  v3 = v2[3];
  v4 = v2[4];
  sub_10003A834(v2, v3);
  v5 = dispatch thunk of PendingPlaybackControllerProtocol.reset()(v3, v4);
  static Logger.modernPlayback.getter(v5);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v1);
    v11 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[7] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to play intent: %@", v9, 0xCu);
    v12 = sub_10003F544((uint64_t *)&unk_100556480);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }
  v14 = v0[15];
  v13 = v0[16];
  v15 = v0[14];

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v16 = type metadata accessor for MainActor(0);
  v0[29] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  return swift_task_switch(sub_100269DA0, v18, v19);
}

uint64_t sub_10026A278(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _OWORD v15[2];

  v2 = type metadata accessor for PlaybackIntent(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v7 = sub_10003F544(&qword_10055B7A0);
    v8 = type metadata accessor for PlaybackIntent.Option(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject(v7, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
    *(_OWORD *)(v12 + 16) = xmmword_1003CA200;
    v13 = v12 + v11;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v13, enum case for PlaybackIntent.Option.forceLocalPlayback(_:), v8);
    v14 = sub_10013BB7C(v12);
    swift_setDeallocating(v12);
    swift_arrayDestroy(v13, 1, v8);
    swift_deallocClassInstance(v12, 32, 7);
    PlaybackIntent.addingOptions(_:)(v14);
    swift_bridgeObjectRelease(v14);
    memset(v15, 0, sizeof(v15));
    sub_10025F104((uint64_t)v6, 0, 1, 0, (uint64_t)v15);
    sub_100007A28((uint64_t)v15, (uint64_t *)&unk_100552300);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_10026A3FC()
{
  uint64_t v0;

  sub_100152110(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_10003D380((_QWORD *)(v0 + 40));
  sub_10003D380((_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));

  return swift_deallocClassInstance(v0, 144, 7);
}

void sub_10026A450()
{
  sub_10025D230();
}

void sub_10026A470()
{
  sub_10025E3B4();
}

uint64_t sub_10026A490(double a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_10003F544((uint64_t *)&unk_10055FF00);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  static TaskPriority.userInitiated.getter(v4);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v9 = *(_QWORD *)(v7 + 120);
  v10 = swift_allocObject(&unk_1004B9340, 56, 7);
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = v9;
  *(double *)(v10 + 40) = a1;
  *(_QWORD *)(v10 + 48) = v7;
  swift_retain();
  swift_retain();
  v11 = sub_10025E21C((uint64_t)v6, (uint64_t)&unk_10055D248, v10);
  swift_release(v11);
  return sub_100007A28((uint64_t)v6, (uint64_t *)&unk_10055FF00);
}

uint64_t sub_10026A594(uint64_t a1, uint64_t a2)
{
  return sub_10026A5BC(a1, a2, (uint64_t)&unk_1004B9318, (uint64_t)&unk_10055D238);
}

uint64_t sub_10026A5A8(uint64_t a1, uint64_t a2)
{
  return sub_10026A5BC(a1, a2, (uint64_t)&unk_1004B92F0, (uint64_t)&unk_10055D228);
}

uint64_t sub_10026A5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v7 = sub_10003F544((uint64_t *)&unk_10055FF00);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v4;
  static TaskPriority.userInitiated.getter(v8);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v13 = *(_QWORD *)(v11 + 120);
  v14 = (_QWORD *)swift_allocObject(a3, 48, 7);
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v13;
  v14[5] = v11;
  swift_retain();
  swift_retain();
  v15 = sub_10025E21C((uint64_t)v10, a4, (uint64_t)v14);
  swift_release(v15);
  return sub_100007A28((uint64_t)v10, (uint64_t *)&unk_10055FF00);
}

uint64_t sub_10026A6AC()
{
  id v1;
  id v2;

  if ((static Podcasts.isBlueMoonEnabled()() & 1) != 0)
    return dispatch thunk of PlaybackController.isPlaying.getter() & 1;
  v1 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v2 = objc_msgSend(v1, "isTargetPlaying");

  return (uint64_t)v2;
}

uint64_t sub_10026A71C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  sub_10003A834((_QWORD *)(*(_QWORD *)v1 + 80), v3);
  return dispatch thunk of PendingPlaybackControllerProtocol.preflight(_:)(a1, v3, v4);
}

void sub_10026A768(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, char a13)
{
  sub_10025EB28(a1, a2, a3, a4, a5, a6, a7, a8 & 1, a9, a10 & 1, a11, a12 & 1, a13);
}

void sub_10026A7C4(uint64_t a1, uint64_t a2)
{
  sub_1002614F8(a1, 0, 0, 1, a2);
}

void sub_10026A7F4(uint64_t a1, _QWORD *a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1002614F8(a1, a2, a3, a4 & 1, a5);
}

void sub_10026A818(uint64_t a1, uint64_t a2)
{
  sub_100262274(a1, 0, 1, a2);
}

void sub_10026A844(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100262274(a1, a2, a3 & 1, a4);
}

void sub_10026A868(uint64_t a1, uint64_t a2)
{
  sub_1002626F8(a1, a2);
}

void sub_10026A888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100262A04(a1, a2, a3, a4, a5);
}

uint64_t sub_10026A8B0(uint64_t a1, uint64_t a2, void *a3, char *a4)
{
  return sub_100262DD8(a1, a2, a3, a4);
}

uint64_t sub_10026A8D0(uint64_t a1, uint64_t a2, void *a3, char *a4, int a5)
{
  return sub_10026396C(a1, a2, a3, a4, a5);
}

uint64_t sub_10026A8F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  return sub_100263B58(a1, a2, a3, a4, a5);
}

uint64_t sub_10026A910(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  return sub_100264720(a1, a2, a3, a4, a5);
}

uint64_t sub_10026A930(uint64_t a1, uint64_t a2, void *a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  char *v16;

  v16 = a4;
  v6 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowOffer.storeUrl.getter(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100007A28((uint64_t)v8, (uint64_t *)&unk_100553DC0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_100262DD8(a1, (uint64_t)v13, a3, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_10026AA74(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  __n128 v21;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a6;
  v25 = a2;
  v26 = a3;
  v10 = type metadata accessor for PreviewingPresentationHint(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v6;
  type metadata accessor for CoreDataFetcher(0);
  v15 = swift_allocObject(&unk_1004B8E90, 24, 7);
  swift_weakInit(v15 + 16, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a5, v10);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = v17 + v12;
  v19 = (char *)swift_allocObject(&unk_1004B8EB8, v17 + v12 + 1, v16 | 7);
  *((_QWORD *)v19 + 2) = v15;
  *((_QWORD *)v19 + 3) = a1;
  *((_QWORD *)v19 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v17], v13, v10);
  v19[v18] = v24;
  swift_retain();
  swift_retain();
  v20 = a4;
  static CoreDataFetcher.fetchPodcast(with:completion:)(v25, v26, sub_10026FD28, v19, v21);
  swift_release(v15);
  return swift_release(v19);
}

uint64_t sub_10026ABD0(uint64_t a1, uint64_t a2, void *a3, char *a4)
{
  return sub_1002648EC(a1, a2, a3, a4);
}

uint64_t sub_10026ABF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  __n128 v12;
  _QWORD v14[5];
  char v15;
  uint64_t v16;
  char v17;

  v14[0] = a2;
  v14[1] = a3;
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a6;
  v15 = a7 & 1;
  v16 = a8;
  v17 = a9 & 1;
  objc_allocWithZone((Class)sub_10003F544(&qword_10055D1D8));
  swift_bridgeObjectRetain(a5);
  swift_retain();
  v12 = swift_bridgeObjectRetain(a3);
  return ModernPageViewController.init(asPartOf:with:)(a1, v14, v12);
}

BOOL sub_10026AC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for InteractionContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PresentationSource(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static PresentationSource.topmostPresentationSource.getter(v10);
  static InteractionContext.none.getter(v13);
  v14 = sub_10026583C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v12, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v14)
    swift_release(v14);
  return v14 != 0;
}

char *sub_10026ADB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  char *result;
  uint64_t v10;

  result = (char *)sub_10026583C(a1, a2, a3, a4, a5);
  if (result)
  {
    v10 = (uint64_t)result;
    type metadata accessor for ContextActionsMenuConfiguration();
    swift_bridgeObjectRetain(a7);
    return sub_100266FA0(v10, a7, (a6 & 1) == 0);
  }
  return result;
}

_QWORD *sub_10026AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10026583C(a1, a2, (uint64_t)_swiftEmptyArrayStorage, a3, a4);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v5 = v4;
  isa = ContextActionsConfiguration.menu(extraContextMenuElements:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
  v7 = -[objc_class children](isa, "children");

  v8 = sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);
  swift_release(v5);

  return (_QWORD *)v9;
}

void *sub_10026AECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100267178(a1, a2, a3, a4, a5);
}

id sub_10026AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_10026731C(a1, a2, a3, a4, a5);
}

uint64_t sub_10026AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v6;
  unint64_t v7;

  result = sub_10026583C(a1, a2, a3, a4, a5);
  if (result)
  {
    v6 = result;
    v7 = (unint64_t)ContextActionsConfiguration.shareSheet()();
    swift_release(v6);
    return v7;
  }
  return result;
}

void *sub_10026AF50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v16 = sub_10003F544((uint64_t *)&unk_1005588B0);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  swift_bridgeObjectRetain(a3);
  v18 = sub_10026F2E0(a1, v17, 0, 0, a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease(v17);
  return v18;
}

void *sub_10026B01C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v14 = sub_10003F544(&qword_1005548E8);
  v15 = type metadata accessor for EpisodeOffer(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(v14, v18 + *(_QWORD *)(v16 + 72), v17 | 7);
  *(_OWORD *)(v19 + 16) = xmmword_1003CA200;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19 + v18, a2, v15);
  v20 = sub_10026F2E0(a1, v19, 0, 1u, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease(v19);
  return v20;
}

uint64_t sub_10026B11C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  return sub_10026F574(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

uint64_t sub_10026B128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, double a19, char a20)
{
  return sub_10026F880(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1, a19,
           a20 & 1);
}

void sub_10026B158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100267D30(a1, a2, a3, a4, a5, a6, a7);
}

void sub_10026B178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_100268878(a1, a2, a3, a4, a5, a6, a7);
}

void sub_10026B198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100268CF4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10026B1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100269178(a1, a2, a3, a4);
}

void sub_10026B1D8(uint64_t a1, uint64_t a2)
{
  sub_100269668(a1, a2);
}

void sub_10026B1F8(uint64_t a1)
{
  sub_10026971C(a1);
}

Class sub_10026B218(uint64_t a1, UIMenuElementSize a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  UIMenu v7;
  uint64_t v8;
  Swift::OpaquePointer v9;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::OpaquePointer v17;
  UIImage_optional v18;

  v3 = sub_10003F544((uint64_t *)&unk_100553780);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003CA250;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < UIMenuElementSizeSmall)
      v12 = a2;
    else
      v12 = a2 & 0xFFFFFFFFFFFFFF8;
    v13 = sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
    swift_bridgeObjectRetain(a2);
    v14 = _bridgeCocoaArray<A>(_:)(v12, v13);
    swift_bridgeObjectRelease(a2);
    a2 = v14;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v5);
    sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
  }
  sub_100005EC8(0, &qword_10055B058, UIMenu_ptr);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v18.value.super.isa = 0;
  v18.is_nil = 0;
  v7.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v18, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, a2, v17).super.super.isa;
  *(UIMenu *)(v4 + 32) = v7;
  specialized Array._endMutation()(v7.super.super.isa);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v15 = v4;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    v16 = sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v4);
    v9._rawValue = (void *)_bridgeCocoaArray<A>(_:)(v15, v16);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
    v9._rawValue = (void *)v4;
  }
  swift_bridgeObjectRelease(v4);
  isa = ContextActionsConfiguration.menu(extraContextMenuElements:)(v9).super.super.isa;
  swift_bridgeObjectRelease(v9._rawValue);
  return isa;
}

id sub_10026B440()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionsMenuConfiguration();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextActionsMenuConfiguration()
{
  return objc_opt_self(_TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration);
}

id sub_10026B4A4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

id sub_10026B4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain();
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

uint64_t sub_10026B554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), unint64_t *a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD **v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  __n128 v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  _QWORD v43[6];

  v40 = a8;
  v41 = a2;
  v35 = a3;
  v36 = a5;
  v39 = a1;
  v14 = type metadata accessor for InteractionContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = a9(0);
  v37 = a10;
  v38 = a11;
  v43[4] = sub_100026844(a10, a9, a11);
  v43[0] = a7;
  v21 = type metadata accessor for ChannelContextActionConfiguration(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = (uint64_t *)v22;
  if (a4)
  {
    v24 = (_QWORD *)(v22 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelAdamId);
    *v24 = v35;
    v24[1] = a4;
    v25 = (_QWORD *)(v22 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelName);
    *v25 = v36;
    v25[1] = a6;
    v26 = v40;
    sub_100007A64(v41, (uint64_t)v20, qword_1005542D8);
    sub_10000A520((uint64_t)v43, (uint64_t)v42);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v26, v14);
    v27 = sub_100038DEC((uint64_t)v42, v42[3]);
    __chkstk_darwin(v27);
    v29 = (_QWORD **)((char *)&v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(_QWORD **))(v30 + 16))(v29);
    a4 = sub_10026B7E8(v39, (uint64_t)v20, *v29, (uint64_t)v17, v23, a9, v37, v38);
    sub_10003D380(v42);
    v31 = *(void (**)(uint64_t, uint64_t, __n128))(v15 + 8);
    v32 = swift_retain();
    v31(v26, v14, v32);
    sub_10003D380(v43);
    sub_100007A28(v41, qword_1005542D8);
    if (a4)
      swift_release(a4);
  }
  else
  {
    swift_release(v39);
    v33 = swift_bridgeObjectRelease(a6);
    (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v40, v14, v33);
    sub_10003D380(v43);
    sub_100007A28(v41, qword_1005542D8);
    swift_deallocPartialClassInstance(v23, v21, *(unsigned int *)(*v23 + 48), *(unsigned __int16 *)(*v23 + 52));
  }
  return a4;
}

uint64_t sub_10026B7E8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[40];
  _QWORD v62[6];

  v59 = a4;
  v60 = a2;
  v57 = *a5;
  v58 = a1;
  v13 = type metadata accessor for InteractionContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v55 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v16);
  v54 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10003F544(&qword_100557C70);
  __chkstk_darwin(v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10003F544((uint64_t *)&unk_100562990);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v53 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v56 = (uint64_t)&v52 - v25;
  v62[3] = a6(0);
  v62[4] = sub_100026844(a7, a6, a8);
  v62[0] = a3;
  swift_retain();
  v26 = sub_10026BD34(a3, a7, a6, a8);
  if (v26)
  {
    v52 = v13;
    swift_release(v26);
    sub_1001B7110((uint64_t)v62, (uint64_t)v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
    {
      v31 = *(int *)(v21 + 48);
      v32 = v56;
      v33 = (_QWORD *)(v56 + v31);
      v34 = &v20[v31];
      v35 = type metadata accessor for URL(0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
      v37(v32, v20, v35);
      v39 = *(_QWORD *)v34;
      v38 = *((_QWORD *)v34 + 1);
      *v33 = v39;
      v33[1] = v38;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      v41 = v53;
      v40(v53, v32, v35);
      v42 = (uint64_t)a5 + OBJC_IVAR____TtC8Podcasts31OtherContextActionConfiguration_sharableInfo;
      v37((uint64_t)a5 + OBJC_IVAR____TtC8Podcasts31OtherContextActionConfiguration_sharableInfo, v41, v35);
      v43 = (_QWORD *)(v42 + *(int *)(v21 + 48));
      *v43 = v39;
      v43[1] = v38;
      swift_bridgeObjectRetain(v38);
      swift_release(a5);
      v44 = v60;
      v45 = v54;
      sub_100007A64(v60, v54, qword_1005542D8);
      sub_10000A520((uint64_t)v62, (uint64_t)v61);
      v46 = v14;
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v48 = (uint64_t)v55;
      v49 = v59;
      v50 = v52;
      v47(v55, v59, v52);
      v30 = sub_1001B6894(v58, v45, (uint64_t)v61, v48);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v50);
      sub_10003D380(v62);
      sub_100007A28(v44, qword_1005542D8);
      sub_100007A28(v56, (uint64_t *)&unk_100562990);
      return v30;
    }
    swift_release(v58);
    swift_release(a5);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v59, v52);
    sub_10003D380(v62);
    sub_100007A28(v60, qword_1005542D8);
    v27 = &qword_100557C70;
    v28 = (uint64_t)v20;
  }
  else
  {
    swift_release(v58);
    swift_release(a5);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v59, v13);
    sub_10003D380(v62);
    v27 = qword_1005542D8;
    v28 = v60;
  }
  sub_100007A28(v28, v27);
  v29 = type metadata accessor for OtherContextActionConfiguration(0);
  swift_deallocPartialClassInstance(a5, v29, *(unsigned int *)(*a5 + 48), *(unsigned __int16 *)(*a5 + 52));
  return 0;
}

uint64_t sub_10026BBB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026BBD8(uint64_t a1)
{
  uint64_t *v1;

  return sub_100269434(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10026BBEC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026BC20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PreviewingPresentationHint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_release(*(_QWORD *)&v0[v5]);
  if (*(_QWORD *)&v0[v6 + 24])
    sub_10003D380(&v0[v6]);
  return swift_deallocObject(v0, v6 + 40, v3 | 7);
}

void *sub_10026BCD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for PreviewingPresentationHint(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100267F14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD **__return_ptr, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10026BD34(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[5];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v24[3] = *a1;
  v24[4] = sub_100026844(a2, a3, a4);
  v24[0] = a1;
  sub_10000A520((uint64_t)v24, (uint64_t)v21);
  swift_retain();
  v5 = sub_10003F544(&qword_100554A30);
  v6 = type metadata accessor for FlowAction(0);
  if (!swift_dynamicCast(v20, v21, v5, v6, 6))
  {
    sub_10000A520((uint64_t)v24, (uint64_t)v20);
    v8 = sub_10003F544(&qword_100557C98);
    if ((swift_dynamicCast(&v17, v20, v5, v8, 6) & 1) != 0)
    {
      sub_10002099C(&v17, (uint64_t)v21);
      v9 = v22;
      v10 = v23;
      sub_10003A834(v21, v22);
      v7 = dispatch thunk of CustomPreviewActionModel.previewAction.getter(v9, v10);
      sub_10003D380(v21);
      if (v7)
        goto LABEL_15;
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      sub_100007A28((uint64_t)&v17, &qword_100557CA0);
    }
    sub_10000A520((uint64_t)v24, (uint64_t)v20);
    v11 = sub_10003F544(&qword_100557C80);
    if (swift_dynamicCast(&v17, v20, v5, v11, 6))
    {
      sub_10002099C(&v17, (uint64_t)v21);
      v12 = v22;
      v13 = v23;
      sub_10003A834(v21, v22);
      dispatch thunk of ClickableModel.clickAction.getter(v20, v12, v13);
      if (v20[3])
      {
        v14 = sub_10003F544(&qword_100554920);
        v15 = type metadata accessor for Action(0);
        if ((swift_dynamicCast(&v17, v20, v14, v15, 6) & 1) != 0)
        {
          v7 = v17;
          sub_10003D380(v21);
          goto LABEL_15;
        }
      }
      else
      {
        sub_100007A28((uint64_t)v20, (uint64_t *)&unk_100554FF0);
      }
      sub_10003D380(v21);
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      sub_100007A28((uint64_t)&v17, &qword_100557C88);
    }
    v7 = 0;
    goto LABEL_15;
  }
  v7 = v20[0];
LABEL_15:
  sub_10003D380(v24);
  return v7;
}

uint64_t sub_10026BF58(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t result;
  void *v36;
  NSString v37;
  id v38;
  uint64_t (*v39)();
  void *v40;
  char *v41;
  id v42;
  unint64_t v43;
  id v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[3];
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  id v58;

  v52 = a3;
  v7 = type metadata accessor for EpisodeListSettings(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (char *)&v47 - v12;
  v13 = sub_10003F544(&qword_10055B790);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v47 - v17;
  v19 = type metadata accessor for Podcasts(0);
  v54 = (void *)v19;
  v55 = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v20 = sub_1000242A8(aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, enum case for Podcasts.queueUpNextEpisodes(_:), v19);
  LOBYTE(v19) = isFeatureEnabled(_:)(aBlock);
  sub_10003D380(aBlock);
  if ((v19 & 1) == 0)
  {
    v36 = (void *)objc_opt_self(MTPlaybackQueueFactory);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "playEpisodeUuid:context:sortType:limit:pubDateLimit:", v37, 6, 0, 0, 3);
    goto LABEL_7;
  }
  v51 = a1;
  v49 = a2;
  if ((a4 & 1) == 0)
  {
    v39 = 0;
    v29 = 0;
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v52, v7);
    v44 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest(0));
    v45 = v49;
    swift_bridgeObjectRetain(v49);
    v46 = sub_10028A328(v51, v45, (uint64_t)v11);
    v38 = v46;
    if (v46)
      objc_msgSend(v46, "setPreserveOriginalEpisodeOrdering:", 1);
    sub_10002CA30((uint64_t)v39, (uint64_t)v29);
    return (uint64_t)v38;
  }
  v48 = v7;
  v58 = 0;
  v21 = type metadata accessor for CoreDataFetcher(0);
  __chkstk_darwin(v21);
  *(&v47 - 2) = (uint64_t)&v58;
  static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)(v18, v51, a2, sub_100270354, &v47 - 4, v13);
  v22 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v23 = objc_msgSend(v22, "mainOrPrivateContext");

  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTEpisodeEntityName);
  v25 = v24;
  v26 = objc_allocWithZone((Class)NSFetchRequest);
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "initWithEntityName:", v27, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v28, "setPredicate:", v58);
  objc_msgSend(v28, "setFetchLimit:", 1);
  v57 = 0;
  v29 = (_QWORD *)swift_allocObject(&unk_1004B9278, 40, 7);
  v29[2] = &v57;
  v29[3] = v23;
  v29[4] = v28;
  v30 = swift_allocObject(&unk_1004B92A0, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_100270388;
  *(_QWORD *)(v30 + 24) = v29;
  v55 = (uint64_t)sub_100029B3C;
  v56 = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100029B1C;
  v54 = &unk_1004B92B8;
  v31 = _Block_copy(aBlock);
  v32 = v56;
  v33 = v23;
  v34 = v28;
  swift_retain();
  swift_release(v32);
  objc_msgSend(v33, "performBlockAndWait:", v31);
  _Block_release(v31);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v30, "", 87, 313, 36, 1);
  result = swift_release(v30);
  if ((v31 & 1) == 0)
  {
    sub_100007A64((uint64_t)v18, (uint64_t)v16, &qword_10055B790);
    v7 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v48) == 1)
    {
      sub_100007A28((uint64_t)v18, &qword_10055B790);

LABEL_12:
      sub_100007A28((uint64_t)v16, &qword_10055B790);

      v39 = sub_100270388;
      goto LABEL_13;
    }
    v40 = v34;
    v41 = v50;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v50, v16, v7);
    if (v57 != 1)
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v7);
      v16 = v18;
      goto LABEL_12;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v41, v7);
    v42 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest(0));
    v43 = v49;
    swift_bridgeObjectRetain(v49);
    v38 = sub_10028A328(v51, v43, (uint64_t)v11);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v7);
    sub_100007A28((uint64_t)v18, &qword_10055B790);
    v37 = v58;
    swift_release(v29);
LABEL_7:

    return (uint64_t)v38;
  }
  __break(1u);
  return result;
}

id sub_10026C500(uint64_t a1, unint64_t a2, uint64_t a3, int a4, int a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  id v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  NSString v39;
  id v40;
  id v41;
  uint64_t v43;
  int v44;
  int v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD v49[9];
  _BYTE v50[80];

  v44 = a5;
  v45 = a4;
  v48 = a1;
  v9 = sub_10003F544(&qword_10055B790);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v47 = (uint64_t *)((char *)&v43 - v14);
  __chkstk_darwin(v13);
  v16 = (char *)&v43 - v15;
  v17 = type metadata accessor for EpisodeListSettings(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v46 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v43 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v43 - v25;
  if (!MTPlaybackContinuousPlaybackEnabled(v24, v27) || (a6 & 1) != 0)
  {
    v33 = objc_allocWithZone((Class)MTEpisodeManifest);
    swift_bridgeObjectRetain(a2);
    v34 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v33, "initWithEpisodeUuid:", v34, swift_bridgeObjectRelease(a2).n128_f64[0]);

  }
  else
  {
    sub_100007A64(a3, (uint64_t)v16, &qword_10055B790);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v28(v16, 1, v17) == 1)
    {
      sub_100007A28((uint64_t)v16, &qword_10055B790);
      v50[0] = 0;
      v29 = type metadata accessor for CoreDataFetcher(0);
      __chkstk_darwin(v29);
      *(&v43 - 2) = (uint64_t)v50;
      v30 = v47;
      v31 = v48;
      static CoreDataFetcher.performAndWaitOnEpisode<A>(with:block:)(v47, v48, a2, sub_10027034C, &v43 - 4, v9);
      sub_100007A64((uint64_t)v30, (uint64_t)v12, &qword_10055B790);
      if (v28(v12, 1, v17) == 1)
      {
        sub_100007A28((uint64_t)v30, &qword_10055B790);
        sub_100007A28((uint64_t)v12, &qword_10055B790);
        return 0;
      }
      else
      {
        v37 = v46;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v46, v12, v17);
        if ((v45 & 1) != 0 && v50[0] == 1)
        {
          v38 = objc_allocWithZone((Class)MTEpisodeManifest);
          swift_bridgeObjectRetain(a2);
          v39 = String._bridgeToObjectiveC()();
          v32 = objc_msgSend(v38, "initWithEpisodeUuid:", v39, swift_bridgeObjectRelease(a2).n128_f64[0]);

        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v37, v17);
          v41 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest(0));
          swift_bridgeObjectRetain(a2);
          v32 = sub_10028A328(v31, a2, (uint64_t)v23);
        }
        (*(void (**)(char *, uint64_t))(v18 + 8))(v37, v17);
        sub_100007A28((uint64_t)v30, &qword_10055B790);
      }
    }
    else
    {
      v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v26, v16, v17);
      EpisodeListSettings.listType.getter(v49, v35);
      sub_10016965C((uint64_t)v49, (uint64_t)v50);
      if (v50[64] == 5)
      {
        v36 = sub_10026BF58(v48, a2, (uint64_t)v26, v44 & 1);
      }
      else
      {
        sub_10003F450((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10003F49C);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v26, v17);
        v40 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest(0));
        swift_bridgeObjectRetain(a2);
        v36 = (uint64_t)sub_10028A328(v48, a2, (uint64_t)v23);
      }
      v32 = (id)v36;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
    }
  }
  return v32;
}

uint64_t sub_10026C93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for PlaybackIntent.Option(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v17 = a2;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v14(v8, v12, v4);
      sub_10035D13C((uint64_t)v10, (uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v12 += v13;
      --v11;
    }
    while (v11);
    return v17;
  }
  return a2;
}

_QWORD *sub_10026CA40(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];

  v2 = v1;
  v2[3] = 0;
  swift_unknownObjectWeakInit(v2 + 2, 0);
  v2[17] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 5, 0);
  v2[4] = a1;
  v4 = sub_10003F544((uint64_t *)&unk_100555120);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v8, v4, v4);
  sub_10002099C(v8, (uint64_t)(v2 + 5));
  v5 = type metadata accessor for PlaybackController(0);
  BaseObjectGraph.inject<A>(_:)(v8, v5, v5);
  v2[15] = *(_QWORD *)&v8[0];
  v6 = sub_10003F544((uint64_t *)&unk_10055C400);
  BaseObjectGraph.inject<A>(_:)(v8, v6, v6);
  sub_10002099C(v8, (uint64_t)(v2 + 10));
  v2[16] = objc_msgSend(objc_allocWithZone((Class)PFCoreAnalyticsChannel), "init");
  return v2;
}

void sub_10026CB44(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  void *v18;
  NSString v19;
  id v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void **v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint8_t *v45;
  void *v46;
  _QWORD v47[3];
  _BYTE v48[8];
  void **aBlock;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, void *);
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544(&qword_10055D210);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007A64(a2, (uint64_t)&aBlock, (uint64_t *)&unk_100552300);
  if (!v52)
  {
    sub_100007A28((uint64_t)&aBlock, (uint64_t *)&unk_100552300);
    return;
  }
  v11 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
  if ((swift_dynamicCast(&v55, &aBlock, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
  {
    v12 = (void *)v55;
    aBlock = a1;
    swift_errorRetain(a1);
    v13 = sub_10003F544((uint64_t *)&unk_10055A340);
    v14 = type metadata accessor for PlaybackIntent.ValidationError(0);
    v15 = swift_dynamicCast(v10, &aBlock, v13, v14, 6);
    v16 = *(_QWORD *)(v14 - 8);
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    if (v15)
    {
      v17(v10, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v10, v14) == enum case for PlaybackIntent.ValidationError.unentitled(_:))
      {
        v18 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
        v19 = String._bridgeToObjectiveC()();
        v20 = objc_msgSend(v18, "longStringForUnavailableReason:podcastTitle:", 7, v19);

        if (!v20)
        {
LABEL_18:
          v34 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
          static OS_os_log.carPlay.getter(v34);
          swift_errorRetain(a1);
          v35 = swift_errorRetain(a1);
          v36 = Logger.logObject.getter(v35);
          v37 = static os_log_type_t.error.getter(v36);
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc(12, -1);
            v39 = (void **)swift_slowAlloc(32, -1);
            aBlock = v39;
            v46 = v12;
            *(_DWORD *)v38 = 136446210;
            v45 = v38 + 4;
            swift_getErrorValue(a1, v48, v47);
            v40 = Error.localizedDescription.getter(v47[1], v47[2]);
            v42 = v41;
            v55 = sub_10003D274(v40, v41, (uint64_t *)&aBlock);
            v12 = v46;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v45, v38 + 12);
            swift_bridgeObjectRelease(v42);
            swift_errorRelease(a1);
            swift_errorRelease(a1);
            _os_log_impl((void *)&_mh_execute_header, v36, v37, "Playback failed with status %{public}s and a reason string could not be created.", v38, 0xCu);
            swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v39, -1, -1);
            swift_slowDealloc(v38, -1, -1);
          }
          else
          {
            swift_errorRelease(a1);
            swift_errorRelease(a1);
          }

          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          v53 = UInt64.int64Representation.getter;
          v54 = 0;
          aBlock = _NSConcreteStackBlock;
          v50 = 1107296256;
          v51 = sub_100153D50;
          v52 = &unk_1004B9010;
          v43 = _Block_copy(&aBlock);
          objc_msgSend(v12, "popTemplateAnimated:completion:", 1, v43);

          _Block_release(v43);
          return;
        }
LABEL_15:
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v29 = v28;

        aBlock = (void **)v27;
        v50 = v29;
        v30 = sub_10016DD80();
        if ((Collection.isNotEmpty.getter(&type metadata for String, v30, v31) & 1) != 0)
        {
          v32 = (_QWORD *)swift_allocObject(&unk_1004B9048, 32, 7);
          v32[2] = a1;
          v32[3] = v12;
          swift_errorRetain(a1);
          v33 = v12;
          CPInterfaceController.showAlert(with:completion:)(v27, v29, (void (*)(uint64_t))sub_100270190, v32);
          swift_bridgeObjectRelease(v29);
          swift_release(v32);

          return;
        }
        swift_bridgeObjectRelease(v29);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v14);
    }
    else
    {
      v17(v10, 1, 1, v14);
      sub_100007A28((uint64_t)v10, &qword_10055D210);
    }
    v21 = objc_msgSend((id)objc_opt_self(MTReachability), "sharedInstance");
    if (!v21)
    {
      __break(1u);
      return;
    }
    v22 = v21;
    v23 = objc_msgSend(v21, "isReachable");

    if ((v23 & 1) != 0)
    {
      v24 = static EpisodeUnavailableReason.Translator.episodeUnavailableReason(for:)(a1);
      v25 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
      v26 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend(v25, "longStringForUnavailableReason:podcastTitle:", v24, v26);

      if (!v20)
        goto LABEL_18;
    }
    else
    {
      v20 = objc_msgSend((id)objc_opt_self(MTEpisodeUnavailableUtil), "longReasonTextForNoInternet");
    }
    goto LABEL_15;
  }
}

void sub_10026D0B8(void **a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  unsigned __int8 v30;
  void *v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void *v44;
  void **aBlock;
  _QWORD v46[5];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == (void **)1)
    return;
  if (a1 == (void **)9)
  {
    v10 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "longStringForUnavailableReason:podcastTitle:", 7, v11);
  }
  else
  {
    v13 = objc_msgSend(a2, "currentItem");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "episode");

      if (v15)
      {
        v16 = objc_msgSend(a2, "currentItem");
        if (v16)
        {
          v17 = v16;
          v18 = objc_msgSend(v16, "album");

          if (v18)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
            v20 = v19;

            v21 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
            v22 = objc_msgSend(v21, "unavailableReasonForEpisode:", v15);
            v23 = String._bridgeToObjectiveC()();
            v24 = objc_msgSend(v21, "longStringForUnavailableReason:podcastTitle:", v22, v23, swift_bridgeObjectRelease(v20).n128_f64[0]);

            if (v24)
            {
              v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
              v27 = v26;

LABEL_18:
              aBlock = (void **)v25;
              v46[0] = v27;
              v35 = sub_10016DD80();
              if ((Collection.isNotEmpty.getter(&type metadata for String, v35, v36) & 1) != 0)
              {
                v37 = (_QWORD *)swift_allocObject(&unk_1004B91B0, 32, 7);
                v37[2] = a1;
                v37[3] = a3;
                v38 = a3;
                CPInterfaceController.showAlert(with:completion:)(v25, v27, (void (*)(uint64_t))sub_1002702B0, v37);
                swift_bridgeObjectRelease(v27);
                swift_release(v37);
                return;
              }
              swift_bridgeObjectRelease(v27);
              goto LABEL_21;
            }

            goto LABEL_21;
          }
        }

      }
    }
    v28 = objc_msgSend((id)objc_opt_self(MTReachability), "sharedInstance");
    if (!v28)
    {
      __break(1u);
      return;
    }
    v29 = v28;
    v30 = objc_msgSend(v28, "isReachable");

    v31 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
    v32 = v31;
    if ((v30 & 1) == 0)
    {
      v33 = objc_msgSend(v31, "longReasonTextForNoInternet");
      v15 = v33;
      goto LABEL_17;
    }
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v32, "longStringForUnavailableReason:podcastTitle:", 5, v11);
  }
  v15 = v12;

  if (v15)
  {
    v33 = v15;
LABEL_17:
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v27 = v34;
    goto LABEL_18;
  }
LABEL_21:
  v39 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v40 = static OS_os_log.carPlay.getter(v39);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v43 = 134349056;
    aBlock = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v46, v43 + 4, v43 + 12);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Playback failed with status %{public}ld and a reason string could not be created.", v43, 0xCu);
    swift_slowDealloc(v43, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v46[3] = j___ss6UInt64V8PodcastsE19int64Representations5Int64Vvg;
  v46[4] = 0;
  aBlock = _NSConcreteStackBlock;
  v46[0] = 1107296256;
  v46[1] = sub_100153D50;
  v46[2] = &unk_1004B9178;
  v44 = _Block_copy(&aBlock);
  objc_msgSend(a3, "popTemplateAnimated:completion:", 1, v44);
  _Block_release(v44);
}

void sub_10026D514(uint64_t a1)
{
  char v1;
  uint64_t v2;
  id v3;

  v1 = a1;
  if (os_feature_enabled_red_sun(a1))
  {
    if (qword_100573060)
    {
      v2 = *(_QWORD *)(qword_100573060 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap);
      if (v2)
      {
        swift_retain();
        sub_1001A7128(v1 & 1, 0, 0);
        swift_release(v2);
      }
    }
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    objc_msgSend(v3, "presentNowPlayingAnimated:", v1 & 1);

  }
}

void sub_10026D5D4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = a1;
  v6 = os_feature_enabled_red_sun(a1);
  if ((_DWORD)v6)
  {
    if (qword_100573060)
    {
      v7 = *(_QWORD *)(qword_100573060 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap);
      if (v7)
      {
        swift_retain();
        sub_1001A7308(v5 & 1, a2, a3);
        swift_release(v7);
      }
    }
  }
  else if (os_feature_enabled_bluemoon(v6))
  {
    if (a2)
      ((void (*)(void))a2)();
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    if (a2)
    {
      v10[4] = a2;
      v11 = a3;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_100027AF8;
      v10[3] = &unk_1004B8F20;
      a2 = (void (*)(uint64_t))_Block_copy(v10);
      v9 = v11;
      swift_retain();
      swift_release(v9);
    }
    objc_msgSend(v8, "dismissNowPlayingAnimated:completion:", v5 & 1, a2);
    _Block_release(a2);

  }
}

uint64_t sub_10026D720(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _BYTE v28[40];
  _OWORD v29[2];
  uint64_t v30;

  v26 = a3;
  v27 = a2;
  v6 = type metadata accessor for InteractionContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v25 - v11;
  v13 = sub_10003F544(qword_1005542D8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v25 - v17;
  v19 = type metadata accessor for PresentationSource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  swift_retain();
  v20 = swift_retain();
  UIView.interactionContext.getter(v20);
  v21 = type metadata accessor for PodcastContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52))
            + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource) = a4;
  sub_100007A64((uint64_t)v18, (uint64_t)v16, qword_1005542D8);
  sub_100007A64((uint64_t)v29, (uint64_t)v28, &qword_100557C78);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v22 = sub_1001B6894(a1, (uint64_t)v16, (uint64_t)v28, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  sub_100007A28((uint64_t)v29, &qword_100557C78);
  sub_100007A28((uint64_t)v18, qword_1005542D8);
  v23 = v26;
  objc_msgSend(v26, "bounds");
  UIViewController.presentShareSheet(from:sourceRect:configuration:)(v23, v22);
  return swift_release(v22);
}

uint64_t sub_10026D93C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = type metadata accessor for PreviewingPresentationHint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ShowOffer(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, a4, v15);
  swift_storeEnumTagMultiPayload(v14, v12, 1);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for PreviewingPresentationHint.none(_:), v8);
  v16 = type metadata accessor for PodcastContextActionData(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_QWORD *)(v17 + 16) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  sub_10014FDF8((uint64_t)v14, v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint, v11, v8);
  v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_BYTE *)(v18 + 64) = -1;
  sub_1001E3294();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_10003F970((uint64_t)v14, type metadata accessor for PodcastContextActionDataType);
  sub_10026D720(a1, a2, a3, v17);
  return swift_release(v17);
}

uint64_t sub_10026DB24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  void *v24;

  v24 = a3;
  v11 = type metadata accessor for PreviewingPresentationHint(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a4;
  v17[1] = a5;
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for PreviewingPresentationHint.none(_:), v11);
  v19 = type metadata accessor for PodcastContextActionData(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v21 = (void *)objc_opt_self(MTDB);
  swift_bridgeObjectRetain(a5);
  sub_10003F450(a6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_10004AE48);
  *(_QWORD *)(v20 + 16) = objc_msgSend(v21, "sharedInstance");
  sub_10014FDF8((uint64_t)v17, v20 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, type metadata accessor for PodcastContextActionDataType);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v20 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_presentationHint, v14, v11);
  sub_10003DC78(a6, v20 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType, (uint64_t *)&unk_100562EB0);
  sub_1001E3294();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_10003F970((uint64_t)v17, type metadata accessor for PodcastContextActionDataType);
  sub_10026D720(a1, a2, v24, v20);
  return swift_release(v20);
}

uint64_t sub_10026DD18(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  id v61;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _BYTE v76[40];
  _OWORD v77[2];
  uint64_t v78;

  v67 = a4;
  v70 = a1;
  v6 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v6);
  v71 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for InteractionContext(0);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  v9 = __chkstk_darwin(v8);
  v72 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v69 = (char *)&v63 - v11;
  v12 = type metadata accessor for PreviewingPresentationHint(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544(&qword_10055A350);
  __chkstk_darwin(v16);
  v18 = (id *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for PresentationSource(0);
  v65 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  v20 = __chkstk_darwin(v19);
  v75 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v63 - v22;
  v24 = a2;
  v68 = v24;
  v25 = a3;
  objc_msgSend(v25, "bounds");
  *v18 = v25;
  v63 = v25;
  v18[1] = v26;
  v18[2] = v27;
  v18[3] = v28;
  v18[4] = v29;
  v30 = enum case for PresentationSource.Position.view(_:);
  v31 = type metadata accessor for PresentationSource.Position(0);
  v32 = *(_QWORD *)(v31 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v32 + 104))(v18, v30, v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v18, 0, 1, v31);
  v64 = v23;
  PresentationSource.init(viewController:position:)(v24, v18);
  v33 = sub_10003F544(&qword_1005548E8);
  v34 = type metadata accessor for EpisodeOffer(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 + 32) & ~v36;
  v38 = swift_allocObject(v33, v37 + *(_QWORD *)(v35 + 72), v36 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_1003CA200;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v38 + v37, v67, v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for PreviewingPresentationHint.none(_:), v12);
  v39 = type metadata accessor for EpisodeContextActionData(0);
  v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v41 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  *(_QWORD *)(v40 + v41) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  *(_QWORD *)(v40 + 16) = v38;
  *(_QWORD *)(v40 + 24) = 0;
  *(_BYTE *)(v40 + 32) = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v40 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v15, v12);
  *(_BYTE *)(v40 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 0;
  sub_100369110();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v42 = v65;
  v43 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v44 = v75;
  v45 = v23;
  v46 = v66;
  v43(v75, v45, v66);
  v78 = 0;
  memset(v77, 0, sizeof(v77));
  v47 = v70;
  swift_retain();
  v48 = swift_retain();
  v49 = v69;
  UIView.interactionContext.getter(v48);
  v50 = type metadata accessor for EpisodeContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52))
            + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource) = v40;
  v51 = (uint64_t)v71;
  v43(v71, v44, v46);
  v52 = v42;
  v53 = v46;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v51, 0, 1, v46);
  sub_100007A64((uint64_t)v77, (uint64_t)v76, &qword_100557C78);
  v55 = (uint64_t)v72;
  v54 = v73;
  v56 = v49;
  v57 = v49;
  v58 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v56, v74);
  v59 = sub_1001B6894(v47, v51, (uint64_t)v76, v55);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v58);
  sub_100007A28((uint64_t)v77, &qword_100557C78);
  v60 = *(void (**)(char *, uint64_t))(v52 + 8);
  v60(v75, v53);
  v61 = v63;
  objc_msgSend(v63, "bounds");
  UIViewController.presentShareSheet(from:sourceRect:configuration:)(v61, v59);
  swift_release(v40);
  swift_release(v59);
  return ((uint64_t (*)(char *, uint64_t))v60)(v64, v53);
}

uint64_t sub_10026E1E4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  id v60;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  id v76;
  char *v77;
  _BYTE v78[40];
  _OWORD v79[2];
  uint64_t v80;

  v63 = a7;
  v62 = a6;
  v65 = a5;
  *(_QWORD *)&v64 = a4;
  v74 = a1;
  v9 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v9);
  v73 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InteractionContext(0);
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  v12 = __chkstk_darwin(v11);
  v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v69 = (char *)&v62 - v14;
  v15 = type metadata accessor for PreviewingPresentationHint(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10003F544(&qword_10055A350);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for PresentationSource(0);
  v67 = *(_QWORD *)(v22 - 8);
  v68 = v22;
  v23 = __chkstk_darwin(v22);
  v77 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v62 - v25;
  v27 = a2;
  v28 = a3;
  objc_msgSend(v28, "bounds");
  v76 = v28;
  *v21 = v28;
  v21[1] = v29;
  v21[2] = v30;
  v21[3] = v31;
  v21[4] = v32;
  v33 = enum case for PresentationSource.Position.view(_:);
  v34 = type metadata accessor for PresentationSource.Position(0);
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v35 + 104))(v21, v33, v34);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v21, 0, 1, v34);
  v75 = v26;
  v36 = v63;
  v66 = v27;
  PresentationSource.init(viewController:position:)(v27, v21);
  v37 = sub_10003F544((uint64_t *)&unk_1005588B0);
  v38 = swift_allocObject(v37, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1003CA200;
  v39 = v65;
  *(_QWORD *)(v38 + 32) = v64;
  *(_QWORD *)(v38 + 40) = v39;
  if (v36)
  {
    v64 = xmmword_1003CA200;
    v40 = swift_allocObject(v37, 48, 7);
    *(_OWORD *)(v40 + 16) = v64;
    *(_QWORD *)(v40 + 32) = v62;
    *(_QWORD *)(v40 + 40) = v36;
  }
  else
  {
    v40 = 0;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for PreviewingPresentationHint.none(_:), v15);
  v41 = type metadata accessor for EpisodeContextActionData(0);
  v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v43 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  v44 = (void *)objc_opt_self(MTDB);
  swift_bridgeObjectRetain(v39);
  *(_QWORD *)(v42 + v43) = objc_msgSend(v44, "sharedInstance", swift_bridgeObjectRetain(v36).n128_f64[0]);
  *(_QWORD *)(v42 + 16) = v38;
  *(_QWORD *)(v42 + 24) = v40;
  *(_BYTE *)(v42 + 32) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v42 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v18, v15);
  *(_BYTE *)(v42 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 0;
  sub_100369110();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v45 = v68;
  v46 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v47 = v67;
  v48 = v77;
  v46(v77, v75, v68);
  v80 = 0;
  memset(v79, 0, sizeof(v79));
  v49 = v74;
  swift_retain();
  v50 = swift_retain();
  v51 = v69;
  UIView.interactionContext.getter(v50);
  v52 = type metadata accessor for EpisodeContextActionConfiguration(0);
  *(_QWORD *)(swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52))
            + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource) = v42;
  v53 = (uint64_t)v73;
  v46(v73, v48, v45);
  v54 = v47;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v53, 0, 1, v45);
  sub_100007A64((uint64_t)v79, (uint64_t)v78, &qword_100557C78);
  v56 = (uint64_t)v70;
  v55 = v71;
  v57 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v51, v72);
  v58 = sub_1001B6894(v49, v53, (uint64_t)v78, v56);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v57);
  sub_100007A28((uint64_t)v79, &qword_100557C78);
  v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v77, v45);
  v60 = v76;
  objc_msgSend(v76, "bounds");
  UIViewController.presentShareSheet(from:sourceRect:configuration:)(v60, v58);
  swift_release(v42);
  swift_release(v58);
  return ((uint64_t (*)(char *, uint64_t))v59)(v75, v45);
}

void sub_10026E6F8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _BYTE v91[40];
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;

  v83 = a6;
  v84 = a4;
  v85 = a5;
  v81 = type metadata accessor for StationShowContextActionData(0);
  v9 = __chkstk_darwin(v81);
  v80 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v79 = (uint64_t *)((char *)&v76 - v11);
  v12 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v12);
  v88 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for InteractionContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v86 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v87 = (char *)&v76 - v18;
  v19 = type metadata accessor for PresentationSource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v89 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for PreviewingPresentationHint(0);
  v22 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    v90 = v15;
    if (v27)
      goto LABEL_3;
  }
  else
  {
    v25 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v90 = v15;
    if (v25)
    {
LABEL_3:
      swift_bridgeObjectRetain(a3);
      goto LABEL_9;
    }
  }
  v28 = sub_10003F544((uint64_t *)&unk_100553780);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1003CA250;
  *(_QWORD *)(v29 + 32) = a2;
  v92[0] = v29;
  specialized Array._endMutation()(v29);
  a3 = v92[0];
  swift_retain();
LABEL_9:
  v30 = sub_100267788(a3);
  if (v30)
  {
    v32 = v30;
    v33 = v31;
    v80 = v14;
    v78 = v19;
    v79 = (uint64_t *)a2;
    v81 = a1;
    v34 = swift_bridgeObjectRelease(a3);
    v35 = 0;
LABEL_13:
    v37 = v22;
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 16);
    v39 = v82;
    ((void (*)(char *, void (*)(char *, uint64_t, uint64_t), uint64_t, __n128))v38)(v24, v83, v82, v34);
    v40 = type metadata accessor for EpisodeContextActionData(0);
    v41 = swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
    v42 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
    *(_QWORD *)(v41 + v42) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
    *(_QWORD *)(v41 + 16) = v32;
    *(_QWORD *)(v41 + 24) = v33;
    *(_BYTE *)(v41 + 32) = v35;
    v38(v41 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v24, v39);
    *(_BYTE *)(v41 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
    sub_100369110();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v39);
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v44 = v20;
    v45 = v89;
    v46 = v78;
    v43(v89, v84, v78);
    v93 = type metadata accessor for LegacyEpisodeLockup(0);
    v94 = sub_100026844(&qword_10055D1B0, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
    v92[0] = v79;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
    v48 = v87;
    v49 = v80;
    v47(v87, v85, v80);
    v50 = type metadata accessor for EpisodeContextActionConfiguration(0);
    *(_QWORD *)(swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52))
              + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource) = v41;
    v51 = (uint64_t)v88;
    v43(v88, (uint64_t)v45, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v51, 0, 1, v46);
    sub_100007A64((uint64_t)v92, (uint64_t)v91, &qword_100557C78);
    v52 = (uint64_t)v86;
    v47(v86, (uint64_t)v48, v49);
    swift_retain();
    swift_retain();
    sub_1001B6894(v53, v51, (uint64_t)v91, v52);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v48, v49);
    sub_100007A28((uint64_t)v92, &qword_100557C78);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    return;
  }
  v36 = sub_100267AC4(a3);
  if (v36)
  {
    v32 = v36;
    v80 = v14;
    v78 = v19;
    v79 = (uint64_t *)a2;
    v81 = a1;
    v34 = swift_bridgeObjectRelease(a3);
    v33 = 0;
    v35 = 1;
    goto LABEL_13;
  }
  if (!((unint64_t)a3 >> 62))
  {
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_16;
LABEL_28:
    swift_bridgeObjectRelease(a3);
    return;
  }
  if (a3 < 0)
    v74 = a3;
  else
    v74 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v75 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease(a3);
  if (!v75)
    goto LABEL_28;
LABEL_16:
  if ((a3 & 0xC000000000000001) != 0)
  {
    v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
  }
  else
  {
    if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v54 = *(_QWORD *)(a3 + 32);
    swift_retain();
  }
  v55 = swift_bridgeObjectRelease(a3);
  v56 = dispatch thunk of LegacyLockup.buttonAction.getter(v55);
  swift_release(v54);
  if (v56)
  {
    v57 = type metadata accessor for StationShowContextAction(0);
    if (swift_dynamicCastClass(v56, v57))
    {
      v77 = StationShowContextAction.stationUuid.getter();
      v76 = v58;
      v59 = StationShowContextAction.stationShowUuid.getter();
      v78 = v56;
      v61 = v60;
      v62 = v81;
      v63 = v79;
      (*(void (**)(char *, _QWORD, uint64_t))(v22 + 16))((char *)v79 + *(int *)(v81 + 24), v83, v82);
      v64 = v76;
      *v63 = v77;
      v63[1] = v64;
      v63[2] = v59;
      v63[3] = v61;
      *((_BYTE *)v63 + *(int *)(v62 + 28)) = 1;
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
      v65 = v89;
      v83(v89, v84, v19);
      v66 = v80;
      sub_10014FDF8((uint64_t)v63, v80, type metadata accessor for StationShowContextActionData);
      v93 = type metadata accessor for LegacyEpisodeLockup(0);
      v94 = sub_100026844(&qword_10055D1B0, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
      v92[0] = a2;
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
      v81 = a1;
      v68 = v87;
      v67(v87, v85, v14);
      v69 = type metadata accessor for StationShowContextActionConfiguration(0);
      v70 = swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
      sub_10014FDF8(v66, v70 + OBJC_IVAR____TtC8Podcasts37StationShowContextActionConfiguration_dataSource, type metadata accessor for StationShowContextActionData);
      v71 = (uint64_t)v88;
      v83(v88, (uint64_t)v65, v19);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v71, 0, 1, v19);
      sub_100007A64((uint64_t)v92, (uint64_t)v91, &qword_100557C78);
      v72 = (uint64_t)v86;
      v67(v86, (uint64_t)v68, v14);
      swift_retain();
      swift_retain();
      sub_1001B6894(v73, v71, (uint64_t)v91, v72);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v14);
      sub_100007A28((uint64_t)v92, &qword_100557C78);
      sub_10003F970(v80, type metadata accessor for StationShowContextActionData);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v89, v19);
      swift_release(v78);
      sub_10003F970((uint64_t)v63, type metadata accessor for StationShowContextActionData);
    }
    else
    {
      swift_release(v56);
    }
  }
}

uint64_t sub_10026EEA4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  id v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  v4 = type metadata accessor for ContextActionsMenuConfiguration();
  result = swift_dynamicCastClass(a1, v4);
  if (result)
  {
    v6 = *(_QWORD *)(result
                   + OBJC_IVAR____TtC8PodcastsP33_1E0FAAAEE761D84EC15F0A371F0F292131ContextActionsMenuConfiguration_config);
    if (v6)
    {
      v7 = *(uint64_t (**)(__n128))(*(_QWORD *)v6 + 200);
      v8 = a1;
      v9 = swift_retain();
      objc_msgSend(a2, "setPreferredCommitStyle:", v7(v9));
      v12[4] = sub_10026FBC0;
      v13 = v6;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_100027AF8;
      v12[3] = &unk_1004B8DB8;
      v10 = _Block_copy(v12);
      v11 = v13;
      swift_retain();
      swift_release(v11);
      objc_msgSend(a2, "addCompletion:", v10);
      _Block_release(v10);

      return swift_release(v6);
    }
  }
  return result;
}

void sub_10026EFB4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  double v14;
  char v15;
  double v16;
  double v17;
  double v18;
  char v19;
  void *v20;
  float v21;
  id v22;
  uint64_t v23;
  void *v24;
  NSArray v25;
  double v26;
  char v27;
  double v28;
  double v29;
  double v30;
  char v31;
  void *v32;
  double v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;

  v37 = a2;
  v2 = type metadata accessor for PresentationSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = (Class)type metadata accessor for EpisodeOffer(0);
  v7 = *((_QWORD *)isa - 1);
  __chkstk_darwin(isa);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShareSheetContentSource(0);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  ShareSheetAction.shareSheetContentSource.getter(v11);
  if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
  {
    v7 = *v13;
    sub_100005EC8(0, (unint64_t *)&qword_10055AAA8, UIActivity_ptr);
    v13 = (uint64_t *)(id)v7;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = COERCE_DOUBLE(ShareSheetAction.referenceTime.getter());
    v16 = 0.0;
    if ((v15 & 1) != 0)
      v17 = 0.0;
    else
      v17 = v14;
    v18 = COERCE_DOUBLE(ShareSheetAction.playerTime.getter());
    if ((v19 & 1) == 0)
      v16 = v18;
    v20 = (void *)objc_opt_self(MTShareUtil);
    objc_msgSend(v13, "playhead");
    v22 = objc_msgSend(v20, "shareViewControllerWithEpisode:applicationActivities:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:", v13, isa, v17, v16, v21);

    if (v22)
      goto LABEL_17;
    __break(1u);
  }
  (*(void (**)(char *, uint64_t *, Class))(v7 + 32))(v9, v13, isa);
  v23 = sub_10025C034();
  if (v23)
  {
    v24 = (void *)v23;
    sub_100005EC8(0, (unint64_t *)&qword_10055AAA8, UIActivity_ptr);
    v13 = v24;
    v25.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v26 = COERCE_DOUBLE(ShareSheetAction.referenceTime.getter());
    v28 = 0.0;
    if ((v27 & 1) != 0)
      v29 = 0.0;
    else
      v29 = v26;
    v30 = COERCE_DOUBLE(ShareSheetAction.playerTime.getter());
    if ((v31 & 1) == 0)
      v28 = v30;
    v32 = (void *)objc_opt_self(MTShareUtil);
    objc_msgSend(v13, "playhead");
    v22 = objc_msgSend(v32, "shareViewControllerWithPlayerItem:applicationActivities:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:", v13, v25.super.isa, v29, v28, v33);

    if (v22)
    {
      (*(void (**)(char *, Class))(v7 + 8))(v9, isa);
LABEL_17:
      v34 = v37;

      v35 = v34;
      PresentationSource.init(view:)(v34);
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v22, 1, 15, 1, 0, 0);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, Class))(v7 + 8))(v9, isa);
  }
}

void *sub_10026F2E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *rawValue;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD v44[5];

  v40 = a6;
  v41 = a8;
  v39 = a7;
  v42 = a1;
  v43 = a5;
  v13 = type metadata accessor for InteractionContext(0);
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  __chkstk_darwin(v13);
  v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for PresentationSource(0);
  v15 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PreviewingPresentationHint(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for PreviewingPresentationHint.push(_:), v17);
  v21 = type metadata accessor for EpisodeContextActionData(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v23 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
  v24 = (void *)objc_opt_self(MTDB);
  sub_100198BD4(a2, a3, a4);
  *(_QWORD *)(v22 + v23) = objc_msgSend(v24, "sharedInstance");
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  *(_BYTE *)(v22 + 32) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v22 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v20, v17);
  *(_BYTE *)(v22 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = 1;
  sub_100369110();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v26 = (uint64_t)v34;
  v25(v34, v39, v35);
  sub_10000A520(v40, (uint64_t)v44);
  v27 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v41, v38);
  v28 = type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = v42;
  swift_retain();
  swift_retain();
  v30 = sub_1001B6A84(v29, v26, v22, (uint64_t)v43, v44, v27, a9);
  rawValue = ContextActionsConfiguration.transcriptSelectionActions()()._0._rawValue;
  swift_release(v30);
  swift_release(v22);
  return rawValue;
}

uint64_t sub_10026F574(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  double v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v10 = sub_10003F544(&qword_1005522F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ShowOffer(0);
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v45 - v20;
  v22 = (void *)sub_10025C034();
  if ((a4 & 1) != 0)
    v23 = 0.0;
  else
    v23 = *(double *)&a3;
  if ((a6 & 1) != 0)
    v24 = 0.0;
  else
    v24 = *(double *)&a5;
  v25 = objc_msgSend(objc_allocWithZone((Class)MTShareUtilDataSource), "initWithPlayerItem:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:", v22, v23, v24, 0.0);

  if (v25)
  {
    v26 = objc_msgSend(v25, "shareURL");
    if (v26)
    {
      v27 = v26;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v19, 0, 1, v28);
    }
    else
    {
      v31 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v19, 1, 1, v31);
    }
    v30 = sub_10003DC78((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_100553DC0);
  }
  else
  {
    v29 = type metadata accessor for URL(0);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v21, 1, 1, v29);
  }
  v32 = EpisodeOffer.title.getter(v30);
  v34 = v33;
  v35 = EpisodeOffer.showOffer.getter(v32);
  v36 = ShowOffer.title.getter(v35);
  v38 = v37;
  v39 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v15, v48);
  v40 = EpisodeOffer.releaseDate.getter(v39);
  if (v40)
  {
    v41 = v40;
    LazyDate.value.getter(v40);
    swift_release(v41);
  }
  else
  {
    v42 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 1, 1, v42);
  }
  v43 = sub_1002E1C18(v46, v32, v34, v36, v38, (uint64_t)v12, (uint64_t)v21, 200);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v38);
  sub_100007A28((uint64_t)v12, &qword_1005522F0);

  sub_100007A28((uint64_t)v21, (uint64_t *)&unk_100553DC0);
  return v43;
}

uint64_t sub_10026F880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, double a19, char a20)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  NSString v22;
  id v23;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v39 = a7;
  v40 = a8;
  v38 = a5;
  v15 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v37 - v19;
  v21 = (void *)objc_opt_self(MTBaseEpisodeListManifest);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "mediaItemForEpisodeWithUUID:", v22);

  if ((a18 & 1) != 0)
    a17 = 0.0;
  if ((a20 & 1) != 0)
    a19 = 0.0;
  v26 = objc_msgSend(objc_allocWithZone((Class)MTShareUtilDataSource), "initWithPlayerItem:selectedReferenceTime:selectedPlayerTime:currentPlayerTime:", v23, a17, a19, 0.0);
  if (v26)
  {
    swift_bridgeObjectRetain(a4);
    v27 = objc_msgSend(v26, "shareURL", swift_bridgeObjectRetain(a6).n128_f64[0]);
    if (v27)
    {
      v28 = v27;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v27);

      v29 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 0, 1, v29);
    }
    else
    {
      v31 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v18, 1, 1, v31);
    }
    sub_10003DC78((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_100553DC0);
  }
  else
  {
    v30 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v20, 1, 1, v30);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
  }
  if (a6)
    v32 = a6;
  else
    v32 = 0xE000000000000000;
  if (a6)
    v33 = v38;
  else
    v33 = 0;
  if (a4)
  {
    v34 = a3;
  }
  else
  {
    a4 = 0xE000000000000000;
    v34 = 0;
  }
  v35 = sub_1002E1C18(v40, v34, a4, v33, v32, v39, (uint64_t)v20, 200);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v32);

  sub_100007A28((uint64_t)v20, (uint64_t *)&unk_100553DC0);
  return v35;
}

void sub_10026FB04(char a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  if (qword_100573060)
  {
    v1 = *(_QWORD *)(qword_100573060 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap);
    if (v1)
    {
      v3 = swift_retain(*(_QWORD *)(qword_100573060 + OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap));
      RepublishingValueSubject.value.getter(&v6, v3);
      v4 = v6;
      if (v6)
      {
        v5 = objc_msgSend(v6, "view");

        if (v5)
        {
          objc_msgSend(v5, "setHidden:", a1 & 1);
          swift_release(v1);

        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_release(v1);
      }
    }
  }
}

uint64_t sub_10026FBC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_10026FBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShowHero(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026FC10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10026FC34()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
    return (unint64_t)ContextActionsConfiguration.previewViewController()();
  else
    return 0;
}

uint64_t sub_10026FC68()
{
  return sub_100270314((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

Class sub_10026FC74(uint64_t a1)
{
  uint64_t v1;

  return sub_10026B218(a1, *(UIMenuElementSize *)(v1 + 16));
}

uint64_t sub_10026FC7C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026FCA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PreviewingPresentationHint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10026FD28(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for PreviewingPresentationHint(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100264AB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), (char *)(v1 + v4), *(unsigned __int8 *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t sub_10026FD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PreviewingPresentationHint(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10026FE08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for PreviewingPresentationHint(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100264DDC(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_10026FE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for PlaybackIntent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v5));
  sub_10003D380((_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  if (*(_QWORD *)(v0 + v8 + 24))
    sub_10003D380((_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 32, v3 | 7);
}

uint64_t sub_10026FF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v3 = *(_QWORD *)(type metadata accessor for PlaybackIntent(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 17) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 16);
  v8 = v1 + v4;
  v9 = v1 + v5;
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 9);
  v13 = *(_QWORD *)(v1 + v6);
  v14 = (_QWORD *)swift_task_alloc(dword_10055D1E4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10023A498;
  return sub_100269880(a1, v16, v7, v8, v10, v11, v12, v13);
}

uint64_t sub_100270030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100565EDC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100191178;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100565ED8 + dword_100565ED8))(a1, v4);
}

uint64_t sub_1002700A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PlaybackIntent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100270114(char a1)
{
  type metadata accessor for PlaybackIntent(0);
  return sub_10026A278(a1);
}

uint64_t sub_100270158(uint64_t a1)
{
  uint64_t v1;

  return sub_100260E90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_100270164()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100270190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100260A6C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100270198()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1002701C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002609F4(a1, *(_QWORD **)(v1 + 16), *(uint64_t (**)(uint64_t, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_1002701D4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[8]);
  if (v0[12])
    sub_10003D380(v0 + 9);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100270218(uint64_t a1)
{
  uint64_t v1;

  return sub_100260514(a1, *(_QWORD **)(v1 + 16), *(uint64_t (**)(uint64_t, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), v1 + 72);
}

uint64_t sub_10027024C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100270280(void **a1)
{
  uint64_t v1;

  return sub_10026043C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10027028C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002702B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100260CE0(a1, a2, *(void ***)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1002702B8(void *a1)
{
  uint64_t v1;

  sub_100260630(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002702C4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[7])
    sub_10003D380(v0 + 4);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002702F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100270308()
{
  return sub_100270314((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100270314(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_100270344(void *a1)
{
  uint64_t v1;

  sub_10025F324(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10027034C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10025FAB4(a1, *(BOOL **)(v2 + 16), a2);
}

uint64_t sub_100270354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10025FC4C(a1, *(void ***)(v2 + 16), a2);
}

uint64_t sub_10027035C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100270388()
{
  uint64_t v0;

  return sub_100260034(*(BOOL **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100270394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002703A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10055D224);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10023A498;
  *(_OWORD *)(v2 + 88) = v3;
  return swift_task_switch(sub_10025EA7C, 0, 0);
}

uint64_t sub_10027040C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10055D234);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10023A498;
  *(_OWORD *)(v2 + 88) = v3;
  return swift_task_switch(sub_10025E9B8, 0, 0);
}

uint64_t sub_10027046C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002704A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc(dword_10055D244);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10023A498;
  v5[13] = v4;
  v5[12] = v3;
  v5[11] = v2;
  return swift_task_switch(sub_10025E744, 0, 0);
}

uint64_t sub_10027051C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10055D254);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10023A498;
  *(_OWORD *)(v2 + 88) = v3;
  return swift_task_switch(sub_10025E508, 0, 0);
}

uint64_t sub_100270580()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002705B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10055D264);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_100191178;
  *(_OWORD *)(v2 + 88) = v3;
  return swift_task_switch(sub_10025D380, 0, 0);
}

void sub_100270674()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  _QWORD v18[5];
  uint64_t v19;

  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v1 = objc_msgSend((id)objc_opt_self(MTPlaylist), "topLevelPlaylistsExcludingFoldersPredicate");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPlaylistEntityName);
  v3 = v2;
  v4 = objc_allocWithZone((Class)MTUuidQueryObserver);
  v5 = v1;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v7 = objc_msgSend(v4, "initWithEntityName:predicate:", v6, v5);

  if (v7)
  {
    *(_QWORD *)(v0 + 16) = v7;
    objc_msgSend(v7, "startObserving");
    v8 = objc_msgSend(*(id *)(v0 + 16), "uuids");
    if (v8)
    {
      v9 = v8;
      v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v11 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease(v10);
      *(_QWORD *)(v0 + 24) = v11;
      v12 = *(void **)(v0 + 16);
      v13 = swift_allocObject(&unk_1004B9610, 24, 7);
      swift_weakInit(v13 + 16, v0);
      v18[4] = sub_100270CD8;
      v19 = v13;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_100023698;
      v18[3] = &unk_1004B9628;
      v14 = _Block_copy(v18);
      v15 = v19;
      v16 = v12;
      swift_release(v15);
      v17 = objc_msgSend(v16, "addResultsChangedHandler:", v14);

      _Block_release(v14);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10027085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t, __n128);
  uint64_t v12;
  __n128 v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_QWORD *)Strong;
    swift_beginAccess(v3, v15, 0, 0);
    v6 = swift_weakLoadStrong(v3);
    v7 = v6;
    if (v6)
    {
      v8 = *(id *)(v6 + 16);
      swift_release(v7);
      v9 = objc_msgSend(v8, "uuids");

      if (!v9)
      {
        __break(1u);
        return;
      }
      v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v7 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease(v10);
    }
    v5[3] = v7;
    swift_beginAccess(v5 + 4, v14, 0, 0);
    v11 = (void (*)(uint64_t, __n128))v5[4];
    if (v11)
    {
      v12 = v5[5];
      v13 = swift_retain(v12);
      v11(v7, v13);
      sub_10002CA30((uint64_t)v11, v12);
    }
    swift_release(v5);
  }
}

uint64_t sub_100270984()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "stop");

  sub_10002CA30(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for StationCountObserver()
{
  return objc_opt_self(_TtC8Podcasts20StationCountObserver);
}

void *sub_1002709E0()
{
  return &protocol witness table for UInt;
}

void sub_1002709EC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 24);
}

uint64_t (*sub_1002709FC())(_QWORD *)
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _BYTE v7[24];

  v1 = *v0;
  swift_beginAccess(v1 + 32, v7, 0, 0);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  if (v2)
  {
    v4 = swift_allocObject(&unk_1004B95E8, 32, 7);
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = sub_100176EE8;
  }
  else
  {
    v5 = 0;
  }
  sub_10002CA20(v2, v3);
  return v5;
}

uint64_t sub_100270A88(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_100270AAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  if (a1)
  {
    v5 = swift_allocObject(&unk_1004B95C0, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_100176EFC;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *v2;
  swift_beginAccess(v7 + 32, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  return sub_10002CA30(v8, v9);
}

uint64_t sub_100270B34(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

void (*sub_100270B64(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess(v4 + 32, v3, 33, 0);
  v5 = *(_QWORD *)(v4 + 32);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 40);
    v7 = swift_allocObject(&unk_1004B9598, 32, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_100176B90;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_100270C00;
}

void sub_100270C00(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    if ((a2 & 1) != 0)
      v4 = sub_100176B60;
    else
      v4 = sub_100176EFC;
    if ((a2 & 1) != 0)
      v5 = &unk_1004B9548;
    else
      v5 = &unk_1004B9570;
    v6 = v2[4];
    v7 = swift_allocObject(v5, 32, 7);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v6;
  }
  else
  {
    v4 = 0;
    v7 = 0;
  }
  v8 = v2[5];
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v7;
  swift_endAccess(v2);
  free(v2);
}

uint64_t sub_100270C90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100270CB4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100270CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10027085C(a1, a2, v2);
}

uint64_t sub_100270CF0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD **v19;
  __n128 v20;
  _QWORD *v21;
  void (*v22)(__n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[32];
  _QWORD v70[5];
  _QWORD v71[4];
  char v72[32];

  v1 = v0;
  v62 = *v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v60 - v7;
  v9 = type metadata accessor for OSLogger(0);
  v61 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionMetricsBehavior(0);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  __chkstk_darwin(v12);
  v65 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for ActionMetrics(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD **)((char *)v1 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration);
  v20 = swift_beginAccess((char *)v1 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration, v72, 0, 0);
  v21 = *v19;
  if (v21)
  {
    v60 = v2;
    v22 = *(void (**)(__n128))(*v21 + 120);
    v68 = v21[2];
    swift_retain();
    v23 = swift_retain();
    v22(v23);
    swift_release(v21);
    v24 = type metadata accessor for PresentationSource(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24) == 1)
    {
      sub_100007A28((uint64_t)v18, qword_1005542D8);
    }
    else
    {
      v32 = (void *)PresentationSource.viewController.getter();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
      if (v32)
      {
        v33 = v32;
        v34 = UIResponder.nearestActionRunner.getter(v33);
        v36 = v35;

        if (v34)
        {
          type metadata accessor for ActionRunnerOptions(0);
          v38 = v36;
          v39 = v68;
          v40 = swift_retain();
          v41 = BaseObjectGraph.__allocating_init(_:)(v40);
          v71[3] = v62;
          v71[0] = v1;
          v42 = objc_msgSend(v33, "view", swift_retain().n128_f64[0]);
          sub_10020C738((uint64_t)v71, (uint64_t)v69);
          v43 = v42;
          ActionOrigin.init(sender:view:)(v70, v69, v42);
          v44 = ActionRunnerOptions.withActionOrigin(_:)(v70);
          sub_100007A28((uint64_t)v70, (uint64_t *)&unk_100557CB0);

          swift_release(v41);
          sub_100007A28((uint64_t)v71, (uint64_t *)&unk_100552300);
          ObjectType = swift_getObjectType(v34, v45);
          v47 = type metadata accessor for FlowAction(0);
          static ActionMetrics.notInstrumented.getter(v47);
          v48 = static FlowAction.manageCategoriesPage(actionMetrics:)(v15);
          (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v64);
          v70[3] = v47;
          v70[4] = sub_100271670();
          v70[0] = v48;
          v50 = v65;
          v49 = v66;
          v51 = v67;
          (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, enum case for ActionMetricsBehavior.notProcessed(_:), v67);
          v52 = ActionRunner.perform(_:withMetrics:asPartOf:)(v70, v50, v44, ObjectType, v38);

          swift_release(v39);
          swift_unknownObjectRelease(v34);
          swift_release(v44);
          swift_release(v52);
          (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
          return sub_10003D380(v70);
        }
        else
        {
          static OSLogger.actions.getter(v37);
          v57 = sub_10003F544(&qword_100557CA8);
          v58 = type metadata accessor for LogMessage(0);
          v59 = swift_allocObject(v57, ((*(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v58 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80) | 7);
          *(_OWORD *)(v59 + 16) = xmmword_1003CA200;
          LogMessage.init(stringLiteral:)(0xD000000000000046, 0x80000001004381F0);
          Logger.error(_:)(v59, v9, &protocol witness table for OSLogger);

          swift_release(v68);
          swift_bridgeObjectRelease(v59);
          return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v11, v9);
        }
      }
    }
    v53 = static Logger.interests.getter(v26);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unable to navigate to Manage Categories page without a view controller.", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
      swift_release(v68);

    }
    else
    {

      swift_release(v68);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v60);
  }
  else
  {
    v27 = static Logger.interests.getter(v20);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to navigate to Manage Categories page without an object graph.", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_1002712D4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10027133C()
{
  return type metadata accessor for FavoriteCategoriesContextAction(0);
}

uint64_t type metadata accessor for FavoriteCategoriesContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055D390;
  if (!qword_10055D390)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FavoriteCategoriesContextAction);
  return result;
}

uint64_t sub_100271380(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_1003D0F40;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1003D0F58;
    v4[4] = &unk_1003D0F70;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100271418()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000019;
  v5._object = (void *)0x8000000100435590;
  v1._object = (void *)0x8000000100435570;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD000000000000013;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002714C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1002714D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100271514()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_contextActionType);
}

BOOL sub_100271524()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 result;
  _BYTE v5[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration, v5, 0, 0);
  v2 = *v1;
  result = 0;
  if (v2)
  {
    v3 = type metadata accessor for CategoryContextActionConfiguration(0);
    if (swift_dynamicCastClass(v2, v3))
      return 1;
  }
  return result;
}

uint64_t sub_100271594()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1002715DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_10027162C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts31FavoriteCategoriesContextAction_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t sub_100271670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055B7D0;
  if (!qword_10055B7D0)
  {
    v1 = type metadata accessor for FlowAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10055B7D0);
  }
  return result;
}

void *sub_1002716B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  id v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  id v67;
  void *v68;
  uint64_t v69;
  char **v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  void *v88;
  id v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unsigned __int8 v104;
  __int16 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  unsigned int v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  id v139;

  v4 = v3;
  v8 = sub_10003F544((uint64_t *)&unk_10055B5E0);
  __chkstk_darwin(v8);
  v137 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v11 = __chkstk_darwin(v10);
  v133 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v107 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v107 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v107 - v19;
  v21 = sub_10003F544(&qword_1005522F0);
  v22 = __chkstk_darwin(v21);
  v136 = (uint64_t)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v107 - v24;
  v26 = sub_10003F544(&qword_10055D840);
  v27 = __chkstk_darwin(v26);
  v135 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v134 = (uint64_t)&v107 - v30;
  __chkstk_darwin(v29);
  v32 = (char *)&v107 - v31;
  v33 = objc_msgSend(a1, "uuid");
  v34 = v33;
  if (!v33)
  {
    v48 = a3;
LABEL_9:
    swift_bridgeObjectRelease(v48);

    return v34;
  }
  v138 = a3;
  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v139 = objc_msgSend(a1, "podcast");
  if (v139)
  {
    v131 = v36;
    v37 = objc_msgSend(a1, "podcastUuid");
    v34 = v37;
    if (v37)
    {
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v126 = v39;
      v127 = v38;

      v40 = objc_msgSend(a1, "duration");
      v42 = v41;
      v125 = MTEpisode.contentId.getter(v40);
      v115 = v43;
      v44 = objc_msgSend(a1, "bestTitle");
      if (v44)
      {
        v45 = v44;
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v123 = v47;
        v124 = v46;

      }
      else
      {
        v123 = 0xE000000000000000;
        v124 = 0;
      }
      v49 = objc_msgSend(a1, "numberedTitle");
      if (v49)
      {
        v50 = v49;
        v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v121 = v52;

      }
      else
      {
        v51 = 0;
        v121 = 0xE000000000000000;
      }
      v53 = objc_msgSend(a1, "podcast");
      if (v53)
      {
        v54 = v53;
        MTPodcast.artworkModel.getter();

      }
      else
      {
        v55 = type metadata accessor for ArtworkModel(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v32, 1, 1, v55);
      }
      v128 = a2;
      v129 = v4;
      v120 = objc_msgSend(a1, "isExplicit");
      v56 = objc_msgSend(a1, "bestSummary");
      if (v56)
      {
        v57 = v56;
        v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v60 = v59;

        v61 = objc_allocWithZone((Class)type metadata accessor for LanguageAwareString(0));
        v119 = LanguageAwareString.init(_:baseParagraphStyle:generateAttributedString:)(v58, v60, 0, 0);
      }
      else
      {
        v119 = 0;
      }
      objc_msgSend(a1, "pubDate");
      if (v62 <= 0.0)
      {
        v65 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v25, 1, 1, v65);
      }
      else
      {
        objc_msgSend(a1, "pubDate");
        Date.init(timeIntervalSinceReferenceDate:)(v63);
        v64 = type metadata accessor for Date(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v25, 0, 1, v64);
      }
      if ((objc_msgSend(a1, "isVideo") & 1) != 0)
      {
        v66 = 1;
      }
      else if (objc_msgSend(a1, "isExternalType"))
      {
        v66 = 2;
      }
      else
      {
        v66 = 0;
      }
      v118 = v66;
      v67 = objc_msgSend(v139, "title");
      if (v67)
      {
        v68 = v67;
        v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v116 = v69;

      }
      else
      {
        v117 = 0;
        v116 = 0;
      }
      v70 = &selRef_newKVSGetAllTransactionSinceDomainVersion_;
      v71 = objc_msgSend(a1, "podcast");
      v111 = v71;
      if (v71)
      {
        v72 = v71;
        v73 = (uint64_t)objc_msgSend(v71, "storeCollectionId");

        v114 = AdamID.init(rawValue:)(v73 & ~(v73 >> 63));
      }
      else
      {
        v114 = 0;
      }
      v74 = objc_msgSend(a1, "assetURL");
      v130 = v32;
      if (v74)
      {
        v75 = v74;
        v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
        v78 = v77;

        URL.init(string:)(v76, v78);
        swift_bridgeObjectRelease(v78);
        v79 = type metadata accessor for URL(0);
        v80 = *(_QWORD *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v18, 1, v79) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v20, v18, v79);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v20, 0, 1, v79);
          v32 = v130;
          v70 = &selRef_newKVSGetAllTransactionSinceDomainVersion_;
          goto LABEL_39;
        }
        sub_100007A28((uint64_t)v18, (uint64_t *)&unk_100553DC0);
        v32 = v130;
        v70 = &selRef_newKVSGetAllTransactionSinceDomainVersion_;
      }
      v81 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v20, 1, 1, v81);
LABEL_39:
      v115 &= 1u;
      v113 = objc_msgSend(a1, "entitlementState");
      v82 = objc_msgSend(a1, v70[328]);
      if (v82
        && (v83 = v82, v84 = objc_msgSend(v82, "channel"), v83, v84)
        && (v85 = objc_msgSend(v84, "subscriptionName"), v84, v85))
      {
        v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
        v109 = v86;

      }
      else
      {
        v110 = 0;
        v109 = 0;
      }
      v112 = objc_msgSend(a1, "storeTrackId");
      v87 = objc_msgSend(a1, v70[328]);
      v122 = v51;
      if (v87
        && (v88 = v87, v89 = objc_msgSend(v87, "channel"), v88, v89))
      {
        v90 = (uint64_t)v32;
        v91 = v15;
        v92 = (uint64_t)v25;
        v93 = (uint64_t)v133;
        v94 = objc_msgSend(v89, "name");

        if (v94)
        {
          v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
          v107 = v95;

LABEL_50:
          LODWORD(v133) = v111 == 0;
          v96 = v134;
          v97 = sub_100007A64(v90, v134, &qword_10055D840);
          v98 = v135;
          MTEpisode.artworkModel.getter(v97);
          v99 = v136;
          sub_100007A64(v92, v136, &qword_1005522F0);
          v100 = type metadata accessor for URL(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v91, 1, 1, v100);
          v101 = v93;
          sub_100007A64((uint64_t)v20, v93, (uint64_t *)&unk_100553DC0);
          v102 = type metadata accessor for EpisodeListenNowReason(0);
          v103 = v137;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v137, 1, 1, v102);
          v104 = objc_msgSend(a1, "hasFreeVersion");
          objc_msgSend(a1, "upNextScore");
          HIBYTE(v106) = v120;
          LOBYTE(v106) = v118;
          v34 = (void *)dispatch thunk of StationEpisode.__allocating_init(title:numberedTitle:uuid:podcastUuid:podcastAdamId:stationUuid:adamId:channelAdamId:channelName:artwork:episodeArtwork:author:summary:releaseDate:streamUrl:assetUrl:mediaType:isExplicit:guid:duration:seasonNumber:episodeNumber:episodeType:showTitle:showTypeIsSerial:showTypeSetting:listenNowReason:episodeEntitlementState:hasFreeVersion:subscriptionName:storeTrackId:upNextScore:)(v124, v123, v122, v121, v132, v131, v127, v126, v114, (_BYTE)v133, v128, v138, v125, (_BYTE)v115, 0, 1, v108, v107, v96,
                          v98,
                          v117,
                          v116,
                          v119,
                          v99,
                          v91,
                          v101,
                          v106,
                          0,
                          0,
                          v42,
                          0,
                          0,
                          1,
                          0,
                          257,
                          0,
                          0,
                          0,
                          0,
                          1,
                          v103,
                          v113,
                          v104,
                          v110,
                          v109,
                          v112,
                          0);

          sub_100007A28((uint64_t)v20, (uint64_t *)&unk_100553DC0);
          sub_100007A28(v92, &qword_1005522F0);
          sub_100007A28((uint64_t)v130, &qword_10055D840);
          return v34;
        }
      }
      else
      {
        v90 = (uint64_t)v32;
        v91 = v15;
        v92 = (uint64_t)v25;
        v93 = (uint64_t)v133;
      }
      v108 = 0;
      v107 = 0;
      goto LABEL_50;
    }
    swift_bridgeObjectRelease(v131);

    v48 = v138;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v138);

  return 0;
}

void sub_100272110(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD v21[5];
  uint64_t v22;

  v4 = a2 & 1;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPodcastEntityName);
  v6 = v5;
  v7 = sub_1002EF640(a1, v4);
  v8 = objc_allocWithZone((Class)MTUuidQueryObserver);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v10 = objc_msgSend(v8, "initWithEntityName:predicate:", v9, v7);

  if (v10)
  {
    *(_QWORD *)(v2 + 16) = v10;
    objc_msgSend(v10, "startObserving");
    v11 = objc_msgSend(*(id *)(v2 + 16), "uuids");
    if (v11)
    {
      v12 = v11;
      v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v14 = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRelease(v13);
      *(_QWORD *)(v2 + 24) = v14;
      v15 = *(void **)(v2 + 16);
      v16 = swift_allocObject(&unk_1004B9828, 24, 7);
      swift_weakInit(v16 + 16, v2);
      v21[4] = sub_1002726C8;
      v22 = v16;
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 1107296256;
      v21[2] = sub_100023698;
      v21[3] = &unk_1004B9840;
      v17 = _Block_copy(v21);
      v18 = v22;
      v19 = v15;
      swift_release(v18);
      v20 = objc_msgSend(v19, "addResultsChangedHandler:", v17);
      _Block_release(v17);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002722E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, __n128);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  v5 = Strong;
  if (Strong)
  {
    v6 = *(id *)(Strong + 16);
    swift_release(v5);
    v7 = objc_msgSend(v6, "uuids");

    if (!v7)
    {
      __break(1u);
      return;
    }
    v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

    v5 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRelease(v8);
  }
  swift_beginAccess(v3, v18, 0, 0);
  v9 = swift_weakLoadStrong(v3);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 24), swift_release(v9), v5 != v10))
  {
    swift_beginAccess(v3, v17, 0, 0);
    v11 = swift_weakLoadStrong(v3);
    if (v11)
    {
      v12 = v11;
      *(_QWORD *)(v11 + 24) = v5;
      swift_beginAccess(v11 + 32, &v16, 0, 0);
      v13 = *(void (**)(uint64_t, __n128))(v12 + 32);
      if (v13)
      {
        v14 = *(_QWORD *)(v12 + 40);
        v15 = swift_retain(v14);
        v13(v5, v15);
        sub_10002CA30((uint64_t)v13, v14);
      }
      swift_release(v12);
    }
  }
}

uint64_t (*sub_100272438())(_QWORD *)
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _BYTE v7[24];

  v1 = *v0;
  swift_beginAccess(v1 + 32, v7, 0, 0);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  if (v2)
  {
    v4 = swift_allocObject(&unk_1004B9800, 32, 7);
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = sub_1002726E4;
  }
  else
  {
    v5 = 0;
  }
  sub_10002CA20(v2, v3);
  return v5;
}

uint64_t sub_1002724C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  if (a1)
  {
    v5 = swift_allocObject(&unk_1004B97D8, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_1002726E0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *v2;
  swift_beginAccess(v7 + 32, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  return sub_10002CA30(v8, v9);
}

void (*sub_10027254C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess(v4 + 32, v3, 33, 0);
  v5 = *(_QWORD *)(v4 + 32);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 40);
    v7 = swift_allocObject(&unk_1004B97B0, 32, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_1001D07D4;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1002725E8;
}

void sub_1002725E8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    if ((a2 & 1) != 0)
      v4 = sub_10027269C;
    else
      v4 = (uint64_t (*)(uint64_t))sub_1002726E0;
    if ((a2 & 1) != 0)
      v5 = &unk_1004B9760;
    else
      v5 = &unk_1004B9788;
    v6 = v2[4];
    v7 = swift_allocObject(v5, 32, 7);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v6;
  }
  else
  {
    v4 = 0;
    v7 = 0;
  }
  v8 = v2[5];
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v7;
  swift_endAccess(v2);
  free(v2);
}

uint64_t sub_100272678()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10027269C(uint64_t a1)
{
  uint64_t v1;

  return sub_100270B34(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1002726A4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002726C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002722E0(a1, a2, v2);
}

void sub_1002726E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  char v17;
  void *v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[2];
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  int v35;
  __int128 v36;

  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (_QWORD *)((char *)&v30[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) != 0)
  {
    type metadata accessor for CoreDataFetcher(0);
    v18 = (void *)objc_opt_self(MTPodcast);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v18, "predicateForPodcastUUID:", v19);

    __chkstk_darwin(v21);
    *(&v29 - 6) = a1;
    *(&v29 - 5) = a2;
    *(&v29 - 4) = a3;
    *(&v29 - 3) = a4;
    *(&v29 - 2) = a5;
    static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)(v30, v20, sub_100272C6C, &v29 - 8, &type metadata for ShowSettings);

    v22 = v30[1];
    v23 = v31;
    v24 = v32;
    v25 = v33;
    v26 = v34;
    v27 = v35;
    v28 = v36;
    *(_QWORD *)a6 = v30[0];
    *(_QWORD *)(a6 + 8) = v22;
    *(_BYTE *)(a6 + 16) = v23;
    *(_BYTE *)(a6 + 17) = v24;
    *(_BYTE *)(a6 + 18) = v25;
    *(_QWORD *)(a6 + 24) = v26;
    *(_DWORD *)(a6 + 32) = v27;
    *(_OWORD *)(a6 + 40) = v28;
  }
  else
  {
    __break(1u);
  }
}

void sub_1002728B4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t ObjectType;
  id v11;
  id v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unsigned int v21;
  int v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  unint64_t v27;
  unsigned __int8 v28;

  v5 = a1;
  if (a1)
  {
    v8 = *(unsigned __int8 *)(a2 + 18);
    if ((_DWORD)v8 == 1)
    {
      ObjectType = swift_getObjectType(a3, a2);
      v11 = v5;
      dispatch thunk of MTNotificationManagerProtocol.requestNotificationPermissionsIfNeeded()(ObjectType, a4);
    }
    else
    {
      v20 = a1;
    }
    objc_msgSend(v5, "setNotifications:", v8);
    objc_msgSend(v5, "setShowTypeSetting:", *(_QWORD *)(a2 + 24));
    objc_msgSend(v5, "setHidesPlayedEpisodes:", *(unsigned int *)(a2 + 32));
    objc_msgSend(v5, "setEpisodeLimit:", *(_QWORD *)(a2 + 40));
    objc_msgSend(v5, "setDeletePlayedEpisodes:", *(_QWORD *)(a2 + 48));
    v21 = objc_msgSend(v5, "subscribed");
    v22 = *(unsigned __int8 *)(a2 + 17);
    if (v21 != v22)
      sub_100272F04(v5, v22);
    v23 = objc_msgSend(v5, "managedObjectContext");
    objc_msgSend(v23, "saveInCurrentBlock");

    v24 = v5;
    v28 = objc_msgSend(v24, "notifications");
    v25 = objc_msgSend(v24, "title");
    if (v25)
    {
      v26 = v25;
      v5 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v17 = v27;

    }
    else
    {
      v5 = 0;
      v17 = 0xE000000000000000;
    }
    v13 = objc_msgSend(v24, "isSerialShowTypeInFeed");
    v14 = objc_msgSend(v24, "subscribed");
    v19 = (uint64_t)objc_msgSend(v24, "showTypeSetting");
    v16 = objc_msgSend(v24, "hidesPlayedEpisodes");
    v12 = objc_msgSend(v24, "episodeLimit");
    v18 = (uint64_t)objc_msgSend(v24, "deletePlayedEpisodes");

    v15 = v28;
  }
  else
  {
    v12 = (id)MTPodcastEpisodeLimit.intValue.getter(0);
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0xE000000000000000;
    v18 = 0xFFFFFFFFLL;
    v19 = 1;
  }
  *(_QWORD *)a5 = v5;
  *(_QWORD *)(a5 + 8) = v17;
  *(_BYTE *)(a5 + 16) = v13;
  *(_BYTE *)(a5 + 17) = v14;
  *(_BYTE *)(a5 + 18) = v15;
  *(_QWORD *)(a5 + 24) = v19;
  *(_DWORD *)(a5 + 32) = v16;
  *(_QWORD *)(a5 + 40) = v12;
  *(_QWORD *)(a5 + 48) = v18;
}

__n128 sub_100272B18@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  int v13;
  __n128 result;
  __int128 v15;
  _BYTE v16[16];
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  int v25;
  __n128 v26;

  v3 = *v1;
  v4 = v1[3];
  type metadata accessor for CoreDataFetcher(0);
  v5 = (void *)objc_opt_self(MTPodcast);
  v15 = *(_OWORD *)(v1 + 1);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "predicateForPodcastUUID:", v6);

  v17 = v3;
  v18 = v15;
  v19 = v4;
  static CoreDataFetcher.performAndWaitOnPodcast<A>(with:block:)(v20, v7, sub_100273294, v16, &type metadata for ShowSettings);

  v8 = v20[1];
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = v24;
  v13 = v25;
  result = v26;
  *(_QWORD *)a1 = v20[0];
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v10;
  *(_BYTE *)(a1 + 18) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_DWORD *)(a1 + 32) = v13;
  *(__n128 *)(a1 + 40) = result;
  return result;
}

double sub_100272C1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_1002726E8(a1, *v2, v2[1], v2[2], v2[3], (uint64_t)v6);
  v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  result = *(double *)&v7;
  *(_OWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  return result;
}

void sub_100272C6C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_1002728B4(a1, v2[2], v2[5], v2[6], a2);
}

void sub_100272C7C(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;

  v2 = sub_100005EC8(0, (unint64_t *)&unk_10055BCD0, &off_1004A4568);
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "sharedInstance");
  sub_100214BDC(a1);
  v5 = v4;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "reportWithType:userInfo:location:reason:", 4, isa, CFSTR("psst"), 0, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

void sub_100272D3C(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v5;
  unsigned __int8 v6;
  id v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned int v17;
  id v18;
  void *v19;
  unint64_t v20;
  unsigned int v21;

  if (a1)
  {
    v5 = a1;
    v6 = objc_msgSend(v5, "notifications");
    if ((a2 & 1) != 0)
    {
      LOBYTE(v21) = v6;
    }
    else
    {
      v16 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
      v17 = objc_msgSend(v16, "BOOLForKey:", kMTDidPromptForNotificationsPermissionsKey);

      v21 = objc_msgSend(v5, "notifications") & v17;
    }
    v18 = objc_msgSend(v5, "title");
    if (v18)
    {
      v19 = v18;
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v13 = v20;

    }
    else
    {
      v8 = 0;
      v13 = 0xE000000000000000;
    }
    v9 = objc_msgSend(v5, "isSerialShowTypeInFeed");
    v10 = objc_msgSend(v5, "subscribed");
    v15 = (uint64_t)objc_msgSend(v5, "showTypeSetting");
    v12 = objc_msgSend(v5, "hidesPlayedEpisodes");
    v7 = objc_msgSend(v5, "episodeLimit");
    v14 = (uint64_t)objc_msgSend(v5, "deletePlayedEpisodes");

    v11 = v21;
  }
  else
  {
    v7 = (id)MTPodcastEpisodeLimit.intValue.getter(0);
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0xE000000000000000;
    v14 = 0xFFFFFFFFLL;
    v15 = 1;
  }
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v13;
  *(_BYTE *)(a3 + 16) = v9;
  *(_BYTE *)(a3 + 17) = v10;
  *(_BYTE *)(a3 + 18) = v11;
  *(_QWORD *)(a3 + 24) = v15;
  *(_DWORD *)(a3 + 32) = v12;
  *(_QWORD *)(a3 + 40) = v7;
  *(_QWORD *)(a3 + 48) = v14;
}

void sub_100272F04(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  NSString v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  _BYTE v30[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "managedObjectContext");
  if (v11)
  {
    v12 = v11;
    if ((a2 & 1) != 0)
    {
      if (qword_1005520B8 != -1)
        swift_once(&qword_1005520B8, sub_10004AB18);
      swift_beginAccess(&static PodcastsStateCoordinator.shared, v30, 0, 0);
      v13 = (id)static PodcastsStateCoordinator.shared;
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v13, "unsafeEnableSubscriptionOnPodcastUUID:from:context:", v14, 3, v12);

      objc_msgSend(a1, "markPlaylistsForUpdate");
      v15 = objc_msgSend(a1, "dictionaryRepresentation");
      v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
      v18 = (void *)static OS_dispatch_queue.main.getter(v17);
      v19 = swift_allocObject(&unk_1004B98D0, 24, 7);
      *(_QWORD *)(v19 + 16) = v16;
      aBlock[4] = sub_10027328C;
      v29 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027AF8;
      aBlock[3] = &unk_1004B98E8;
      v20 = _Block_copy(aBlock);
      v21 = swift_release(v29);
      static DispatchQoS.unspecified.getter(v21);
      aBlock[0] = _swiftEmptyArrayStorage;
      v22 = sub_10017F258();
      v23 = sub_10003F544((uint64_t *)&unk_10055B200);
      v24 = sub_100026534();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v4, v22);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v20);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      if (qword_1005520B8 != -1)
        swift_once(&qword_1005520B8, sub_10004AB18);
      swift_beginAccess(&static PodcastsStateCoordinator.shared, aBlock, 0, 0);
      v25 = (id)static PodcastsStateCoordinator.shared;
      v26 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "disableSubscriptionOnPodcastUUID:from:context:", v26, 3, v12);

    }
  }
}

uint64_t sub_100273268()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10027328C()
{
  uint64_t v0;

  sub_100272C7C(*(_QWORD *)(v0 + 16));
}

double sub_100273294@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_100272D3C(a1, 0, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t destroy for ShowSettingsController(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for ShowSettingsController(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for ShowSettingsController(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[3] = v7;
  return a1;
}

_QWORD *assignWithTake for ShowSettingsController(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease(v5);
  a1[3] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for ShowSettingsController()
{
  return &type metadata for ShowSettingsController;
}

BOOL sub_100273420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(__n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  char v20;
  _BYTE v23[24];
  _QWORD v24[5];
  _BYTE v25[16];
  uint64_t v26;
  _BYTE v27[40];
  _BYTE v28[16];
  unint64_t v29;

  v1 = v0;
  v2 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for InteractionContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v0 + 24, v23, 0, 0);
  v12 = *(_QWORD *)(v0 + 24);
  if (v12)
  {
    v13 = *(void (**)(__n128))(*(_QWORD *)v12 + 168);
    v14 = swift_retain();
    v13(v14);
    v15 = swift_release(v12);
    InteractionContext.page.getter(v15);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v17 = InteractionContext.Page.isRecentlyUnfollowedPage.getter(v16);
    sub_10003F970((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    if ((v17 & 1) != 0)
      return 0;
  }
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  sub_1002745B8(v24);
  sub_10003DC78((uint64_t)v24, (uint64_t)v25, &qword_1005542D0);
  if (v26 != 3)
  {
    sub_10016E874((uint64_t)v25, (uint64_t)v27);
    sub_10016E874((uint64_t)v27, (uint64_t)v28);
    if (v29 < 3)
    {
      sub_10016E8B0((uint64_t)v24);
      return 1;
    }
    v20 = v28[0];
    sub_10016E8B0((uint64_t)v24);
    return (v20 & 1) == 0;
  }
  sub_100273BBC((uint64_t)v4);
  v18 = type metadata accessor for URL(0);
  v19 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v4, 1, v18) != 1;
  sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
  return v19;
}

uint64_t sub_10027364C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v23[5];
  _BYTE v24[16];
  uint64_t v25;
  _BYTE v26[40];
  _BYTE v27[8];
  uint64_t v28;
  unint64_t v29;

  v1 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v1);
  v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002745B8(v23);
  result = sub_10003DC78((uint64_t)v23, (uint64_t)v24, &qword_1005542D0);
  if (v25 != 3)
  {
    sub_10016E874((uint64_t)v24, (uint64_t)v26);
    sub_10016E874((uint64_t)v26, (uint64_t)v27);
    v5 = v29;
    if (v29 < 3 || (v27[0] & 1) != 0)
    {
      v6 = sub_100274228();
      v7 = v0[7];
      v8 = v0[8];
      sub_10003A834(v0 + 4, v7);
      sub_100273BBC((uint64_t)v3);
      v9 = sub_100274078();
      v11 = v10 & 1;
      v12 = sub_100273A08();
      v14 = v13;
      v15 = sub_1002737F4();
      v16 = dispatch thunk of LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(v3, v9, v11, v12, v14, v6 & 1, v15 & 1, v7, v8);
      swift_release(v16);
      swift_bridgeObjectRelease(v14);
      sub_10016E8B0((uint64_t)v23);
      return sub_100007A28((uint64_t)v3, (uint64_t *)&unk_100553DC0);
    }
    else
    {
      v17 = v28;
      v18 = v0[7];
      v19 = v0[8];
      sub_10003A834(v0 + 4, v18);
      v20 = sub_1002737F4();
      v21 = dispatch thunk of LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)(v17, v5, v20 & 1, v18, v19);
      swift_release(v21);
      return sub_10016E8B0((uint64_t)v23);
    }
  }
  return result;
}

uint64_t sub_1002737F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v27;
  uint64_t v28;
  _BYTE v29[24];

  v1 = v0;
  v2 = type metadata accessor for InteractionContext(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v0 + 24, v29, 0, 0);
  v9 = *(_QWORD *)(v0 + 24);
  if (!v9)
    goto LABEL_9;
  v10 = *(void (**)(__n128))(*(_QWORD *)v9 + 168);
  v11 = swift_retain();
  v10(v11);
  v12 = swift_release(v9);
  InteractionContext.page.getter(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 3)
  {
    sub_10003F970((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)v8;
  v14 = v8[8];
  swift_bridgeObjectRelease(*((_QWORD *)v8 + 3));
  v15 = sub_10003F544((uint64_t *)&unk_100554730);
  sub_100007A28((uint64_t)&v8[*(int *)(v15 + 64)], &qword_10055B790);
  if ((v14 & 1) != 0)
  {
LABEL_9:
    v25 = 1;
    return v25 & 1;
  }
  v28 = v13;
  v16 = sub_100030584();
  v17 = BinaryInteger.description.getter(&type metadata for UInt64, v16);
  v19 = v18;
  v20 = *(_QWORD *)(v1 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease(v18);
    goto LABEL_9;
  }
  v21 = v17;
  swift_retain();
  v22 = sub_1001E2F48();
  v24 = v23;
  swift_release(v20);
  if (v21 == v22 && v19 == v24)
  {
    swift_bridgeObjectRelease_n(v19, 2);
    v25 = 0;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v19, v22, v24, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v24);
    v25 = v27 ^ 1;
  }
  return v25 & 1;
}

uint64_t sub_100273A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v20[24];

  v1 = type metadata accessor for ShowOffer(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for PodcastContextActionDataType(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v6);
  v11 = &v20[-v10 - 8];
  __chkstk_darwin(v9);
  v13 = &v20[-v12 - 8];
  v14 = *(_QWORD *)(v0 + 16);
  if (!v14)
    return 0;
  v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v20, 0, 0);
  sub_10016E904(v15, (uint64_t)v11);
  sub_10016E948((uint64_t)v11, (uint64_t)v13);
  sub_10016E904((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v5) != 1)
  {
    sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
    return 0;
  }
  v16.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  v17 = ShowOffer.dzcPageLocation.getter(v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  return v17;
}

uint64_t sub_100273BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  char isEscapingClosureAtFileLocation;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v39;
  char v40[24];

  v3 = type metadata accessor for ShowOffer(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v7);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PodcastContextActionDataType(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&aBlock[-1] - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&aBlock[-1] - v17;
  v19 = *(_QWORD *)(v1 + 16);
  if (v19)
  {
    v20 = v19 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess(v19 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v40, 0, 0);
    sub_10016E904(v20, (uint64_t)v16);
    sub_10016E948((uint64_t)v16, (uint64_t)v18);
    sub_10016E904((uint64_t)v18, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
    {
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
      ShowOffer.feedUrl.getter(v21);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return sub_10003F970((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
    }
    else
    {
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
      v24 = sub_1001E2CF0();
      if (v24)
      {
        v25 = (void *)v24;
        v26 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
        v27 = objc_msgSend(v25, "managedObjectContext");
        if (v27)
        {
          v28 = v27;
          v29 = swift_allocObject(&unk_1004B9B00, 32, 7);
          *(_QWORD *)(v29 + 16) = v25;
          *(_QWORD *)(v29 + 24) = v9;
          v30 = swift_allocObject(&unk_1004B9B28, 32, 7);
          *(_QWORD *)(v30 + 16) = sub_100274A10;
          *(_QWORD *)(v30 + 24) = v29;
          aBlock[4] = sub_1001529CC;
          v39 = v30;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100029B1C;
          aBlock[3] = &unk_1004B9B40;
          v31 = _Block_copy(aBlock);
          v32 = v39;
          v33 = v28;
          v34 = v25;
          swift_retain();
          swift_release(v32);
          objc_msgSend(v33, "performBlockAndWait:", v31);
          _Block_release(v31);

          sub_10003F970((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 122, 145, 37, 1);
          result = swift_release(v30);
          if ((isEscapingClosureAtFileLocation & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            sub_10003DC78((uint64_t)v9, a1, (uint64_t *)&unk_100553DC0);
            return swift_release(v29);
          }
        }
        else
        {
          sub_10003F970((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);

          return sub_10003DC78((uint64_t)v9, a1, (uint64_t *)&unk_100553DC0);
        }
      }
      else
      {
        sub_10003F970((uint64_t)v18, type metadata accessor for PodcastContextActionDataType);
        v36 = type metadata accessor for URL(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 1, 1, v36);
      }
    }
  }
  else
  {
    v23 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
  return result;
}

id sub_100273FB8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, "feedURL");
  if (result)
  {
    v8 = result;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v11 = v10;

    URL.init(string:)(v9, v11);
    swift_bridgeObjectRelease(v11);
    return (id)sub_1001C99E0((uint64_t)v6, a2);
  }
  return result;
}

uint64_t sub_100274078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v1 = type metadata accessor for ShowOffer(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for PodcastContextActionDataType(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v6);
  v11 = &v20[-v10 - 8];
  __chkstk_darwin(v9);
  v13 = &v20[-v12 - 8];
  v14 = *(_QWORD *)(v0 + 16);
  if (!v14)
    return 0;
  v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v20, 0, 0);
  sub_10016E904(v15, (uint64_t)v11);
  sub_10016E948((uint64_t)v11, (uint64_t)v13);
  sub_10016E904((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v5) != 1)
  {
    sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
    return 0;
  }
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  v17 = ShowOffer.adamId.getter(v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  return v17;
}

uint64_t sub_100274228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;
  char v42;
  char v43[24];

  v1 = type metadata accessor for ShowOffer(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PodcastContextActionDataType(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)aBlock - v10;
  __chkstk_darwin(v9);
  v13 = (char *)aBlock - v12;
  v14 = *(_QWORD *)(v0 + 16);
  if (!v14)
    goto LABEL_18;
  v15 = v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v43, 0, 0);
  sub_10016E904(v15, (uint64_t)v11);
  sub_10016E948((uint64_t)v11, (uint64_t)v13);
  sub_10016E904((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v5) == 1)
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    v17 = ShowOffer.contentRating.getter(v16);
    if (v17 == 2)
    {
      v19 = 0;
    }
    else
    {
      v32 = ContentRating.rawValue.getter(v17 & 1);
      v34 = v33;
      v19 = 1;
      v35 = ContentRating.rawValue.getter(1);
      v37 = v32 == v35 && v34 == v36;
      v38 = v34;
      if (!v37)
      {
        v39 = v36;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v35, v36, 0);
        v38 = v39;
      }
      swift_bridgeObjectRelease(v34);
      v18 = swift_bridgeObjectRelease(v38);
    }
    (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v18);
    sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
    return v19 & 1;
  }
  swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
  v20 = (void *)sub_1001E2CF0();
  if (!v20)
  {
    sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
LABEL_18:
    v19 = 0;
    return v19 & 1;
  }
  v21 = v20;
  v42 = 0;
  v22 = objc_msgSend(v20, "managedObjectContext");
  if (!v22)
  {
    sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);

    goto LABEL_18;
  }
  v23 = v22;
  v24 = swift_allocObject(&unk_1004B9A88, 32, 7);
  *(_QWORD *)(v24 + 16) = &v42;
  *(_QWORD *)(v24 + 24) = v21;
  v25 = swift_allocObject(&unk_1004B9AB0, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_1002749B0;
  *(_QWORD *)(v25 + 24) = v24;
  aBlock[4] = sub_100029B3C;
  v41 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100029B1C;
  aBlock[3] = &unk_1004B9AC8;
  v26 = _Block_copy(aBlock);
  v27 = v41;
  v28 = v23;
  v29 = v21;
  swift_retain();
  swift_release(v27);
  objc_msgSend(v28, "performBlockAndWait:", v26);
  _Block_release(v26);

  sub_10003F970((uint64_t)v13, type metadata accessor for PodcastContextActionDataType);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 122, 183, 37, 1);
  result = swift_release(v25);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v19 = v42;
    swift_release(v24);
    return v19 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002745B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = type metadata accessor for ShowOffer(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for PodcastContextActionDataType(0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)&v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __chkstk_darwin(v8);
  v13 = &v32[-v12 - 8];
  result = __chkstk_darwin(v11);
  v16 = &v32[-v15 - 8];
  v17 = *(_QWORD *)(v1 + 16);
  if (v17)
  {
    v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess(v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v32, 0, 0);
    sub_10016E904(v18, (uint64_t)v13);
    sub_10016E948((uint64_t)v13, (uint64_t)v16);
    sub_10016E904((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload(v10, v7) == 1)
    {
      v19 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v10, v3);
      v20 = ShowOffer.adamId.getter(v19);
      v38 = 0;
      v39 = 0;
      v41 = 0;
      v42 = 0;
      v40 = 2;
      v21 = dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(v20, &v38);
      dispatch thunk of PodcastStateMachine.currentState.getter(&v33, v21);
      v22 = v33;
      v23 = v34;
      v24 = v35;
      v25 = v36;
      v31 = v3;
      v26 = v37;
      swift_release(v21);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    }
    else
    {
      v27 = *v10;
      v28 = v10[1];
      v38 = 0;
      v39 = 0;
      v41 = 0;
      v42 = 0;
      v40 = 2;
      v29 = dispatch thunk of PodcastStateController.stateMachine(for:initialState:)(v27, v28, &v38);
      swift_bridgeObjectRelease(v28);
      dispatch thunk of PodcastStateMachine.currentState.getter(&v33, v30);
      v22 = v33;
      v23 = v34;
      v24 = v35;
      v25 = v36;
      v26 = v37;
      swift_release(v29);
    }
    result = sub_10003F970((uint64_t)v16, type metadata accessor for PodcastContextActionDataType);
  }
  else
  {
    v22 = 0;
    v23 = 0;
    v25 = 0;
    v26 = 0;
    v24 = 3;
  }
  *a1 = v22;
  a1[1] = v23;
  a1[2] = v24;
  a1[3] = v25;
  a1[4] = v26;
  return result;
}

uint64_t sub_1002747FC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_10003D380(v0 + 4);
  swift_release(v0[9]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts29SubscribePodcastContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10027486C()
{
  return type metadata accessor for SubscribePodcastContextAction(0);
}

uint64_t type metadata accessor for SubscribePodcastContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055D558;
  if (!qword_10055D558)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SubscribePodcastContextAction);
  return result;
}

uint64_t sub_1002748B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1003D10F8;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100274940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts29SubscribePodcastContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10027498C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1002749B0()
{
  uint64_t v0;
  _BYTE *v1;
  id result;

  v1 = *(_BYTE **)(v0 + 16);
  result = objc_msgSend(*(id *)(v0 + 24), "isExplicit");
  *v1 = (_BYTE)result;
  return result;
}

uint64_t sub_1002749DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002749EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100274A10()
{
  uint64_t v0;

  return sub_100273FB8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100274A18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100274A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v1 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100036A44(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL, (uint64_t)v3);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)v6 == 1)
  {
    v7 = sub_100007A28((uint64_t)v3, (uint64_t *)&unk_100553DC0);
    static ASKConstants.PodcastCatalogUrl.getter(v7);
    v9 = v8;
LABEL_9:
    swift_bridgeObjectRelease(v9);
    v17 = 0;
    return v17 & 1;
  }
  v10 = URL.absoluteString.getter(v6);
  v12 = v11;
  v13 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  v14 = static ASKConstants.PodcastCatalogUrl.getter(v13);
  v9 = v15;
  if (!v12)
    goto LABEL_9;
  if (v10 == v14 && v12 == v15)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    v17 = 1;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v15, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v9);
  }
  return v17 & 1;
}

uint64_t (*sub_100274B7C())(uint64_t a1)
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);

  v1 = (uint64_t (**)(uint64_t))(v0
                                        + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler + 8);
  if (v2)
  {
    v4 = *(uint64_t (**)(uint64_t))(v0
                                           + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  }
  else
  {
    v5 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject);
    v4 = sub_100181074;
    *v1 = sub_100181074;
    v1[1] = v5;
    swift_retain_n(v5, 2);
    sub_10002CA30(0, v3);
  }
  sub_10002CA20(v2, v3);
  return v4;
}

uint64_t sub_100274C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];

  v1 = v0;
  v2 = sub_10003F544((uint64_t *)&unk_100555140);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544((uint64_t *)&unk_1005588E0);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544(&qword_100555150);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v16 = static OS_os_log.carPlay.getter(v15);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "CarPlayStoreProvider: Fetch content called.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v47[0] = StorePageProvider.pageContent.getter(v20);
  v21 = swift_allocObject(&unk_1004B9BB8, 24, 7);
  swift_weakInit(v21 + 16, v1);
  v22 = sub_10003F544(&qword_100552190);
  v23 = sub_10003F544(&qword_100553E70);
  v24 = sub_10002F9C8((unint64_t *)&unk_100555170, &qword_100552190, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher.compactMap<A>(_:)(sub_100276CD4, v21, v22, v23, v24);
  swift_release(v21);
  swift_release(v47[0]);
  v25 = sub_10002F9C8((unint64_t *)&unk_1005588F0, (uint64_t *)&unk_100555140, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v26 = v42;
  Publisher.removeDuplicates(by:)(sub_1001CEEF4, 0, v42, v25);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v26);
  v47[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_updatePlayStateSubject);
  v27 = sub_10003F544((uint64_t *)&unk_100555110);
  v28 = sub_10002F9C8((unint64_t *)&unk_100555180, (uint64_t *)&unk_1005588E0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v29 = sub_10002F9C8(&qword_1005564C0, (uint64_t *)&unk_100555110, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v30 = v44;
  Publisher.combineLatest<A>(_:)(v47, v44, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v30);
  v31 = swift_allocObject(&unk_1004B9BB8, 24, 7);
  swift_weakInit(v31 + 16, v1);
  v32 = swift_allocObject(&unk_1004B9BE0, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_100276CDC;
  *(_QWORD *)(v32 + 24) = v31;
  v33 = sub_10002F9C8(&qword_100555198, &qword_100555150, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v34 = v46;
  v35 = Publisher<>.sink(receiveValue:)(sub_100176B90, v32, v46, v33);
  swift_release(v32);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v34);
  v36 = v1 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_subscriptions;
  swift_beginAccess(v36, v47, 33, 0);
  v37 = sub_10003F544((uint64_t *)&unk_100556450);
  v38 = sub_10002F9C8(qword_1005551D0, (uint64_t *)&unk_100556450, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v36, v37, v38);
  swift_endAccess(v47);
  return swift_release(v35);
}

void sub_10027507C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int EnumCaseMultiPayload;
  char *v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  void (*v47)(char *, char *, uint64_t, __n128);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  void *object;
  id v70;
  Swift::String v71;
  Swift::String v72;
  void *v73;
  id v74;
  NSString v75;
  NSString v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  unint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t inited;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  char *v97;
  Class isa;
  id v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t Strong;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  __int128 v114;
  _QWORD v115[3];
  char v116[8];
  char v117[40];
  uint64_t aBlock[5];
  uint64_t v119;
  uint64_t v120;
  _BYTE v121[16];
  Swift::String v122;
  Swift::String v123;

  v6 = sub_10003F544((uint64_t *)&unk_100555310);
  __chkstk_darwin(v6);
  v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Logger(0);
  v103 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v102 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v114 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for ModernShelf(0);
  v13 = *(_QWORD *)(v107 - 8);
  v14 = __chkstk_darwin(v107);
  v106 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v102 - v16;
  v18 = type metadata accessor for ModernPage(0);
  __chkstk_darwin(v18);
  v105 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PageContent(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v121, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
  {
    *a3 = 0;
    return;
  }
  v104 = a3;
  sub_100186174(a1, (uint64_t)v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v20);
  v24 = v22;
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)&v114 = v8;
    v51 = *(_QWORD *)v22;
    swift_release(*((_QWORD *)v22 + 2));
    v52 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v53 = v102;
    static OS_os_log.carPlay.getter(v52);
    swift_errorRetain(v51);
    v54 = swift_errorRetain(v51);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = swift_slowAlloc(32, -1);
      aBlock[0] = v58;
      *(_DWORD *)v57 = 136315138;
      swift_getErrorValue(v51, v116, v115);
      v59 = Error.localizedDescription.getter(v115[1], v115[2]);
      v61 = v60;
      v120 = sub_10003D274(v59, v60, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121, v57 + 4, v57 + 12);
      swift_bridgeObjectRelease(v61);
      swift_errorRelease(v51);
      swift_errorRelease(v51);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to load Browse store page with error: %s", v57, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);
    }
    else
    {
      swift_errorRelease(v51);
      swift_errorRelease(v51);
    }

    (*(void (**)(char *, uint64_t))(v103 + 8))(v53, v108);
    v62 = v104;
    v65 = (void *)objc_opt_self(NSBundle);
    v66 = objc_msgSend(v65, "mainBundle");
    v122._object = (void *)0xEE0064616F6C206FLL;
    v67._countAndFlagsBits = 0x545F44454C494146;
    v67._object = (void *)0xEE0044414F4C5F4FLL;
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v122._countAndFlagsBits = 0x742064656C696146;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, v122)._object;

    v70 = objc_msgSend(v65, "mainBundle");
    v123._object = (void *)0xEC00000079727465;
    v71._countAndFlagsBits = 0x525F4F545F504154;
    v71._object = (void *)0xEC00000059525445;
    v72._countAndFlagsBits = 0;
    v72._object = (void *)0xE000000000000000;
    v123._countAndFlagsBits = 0x72206F7420706154;
    v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, (Swift::String_optional)0, (NSBundle)v70, v72, v123)._object;

    v74 = objc_allocWithZone((Class)CPListItem);
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v76 = String._bridgeToObjectiveC()();
    v77 = objc_msgSend(v74, "initWithText:detailText:", v75, v76, swift_bridgeObjectRelease(v73).n128_f64[0]);

    aBlock[4] = (uint64_t)sub_1002777DC;
    v78 = Strong;
    v119 = Strong;
    v120 = (uint64_t)v77;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10017FEAC;
    aBlock[3] = (uint64_t)&unk_1004B9C20;
    v79 = _Block_copy(aBlock);
    v80 = v119;
    swift_retain();
    v81 = v77;
    swift_release(v80);
    objc_msgSend(v81, "setHandler:", v79);
    _Block_release(v79);

    v82 = v110;
    v83 = v112;
    swift_storeEnumTagMultiPayload(v110, v112, 11);
    v84 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)), "init");
    v85 = (uint64_t)v82;
    v86 = v114;
    sub_10013BE30(v85, v114, type metadata accessor for CarPlayTemplateInfo.TemplateType);
    (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v111 + 56))(v86, 0, 1, v83);
    v87 = (uint64_t)&v84[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
    swift_beginAccess(&v84[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type], aBlock, 33, 0);
    sub_10017FE64(v86, v87);
    swift_endAccess(aBlock);
    v84[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
    sub_100005EC8(0, &qword_100554ED0, NSString_ptr);
    v88 = (void *)NSString.init(stringLiteral:)("templateInfo", 12, 2);
    v89 = v84;
    sub_10017FF38((uint64_t)v88, (uint64_t)v84);

    v90 = sub_10003F544((uint64_t *)&unk_100553780);
    v91 = swift_allocObject(v90, 40, 7);
    v114 = xmmword_1003CA250;
    *(_OWORD *)(v91 + 16) = xmmword_1003CA250;
    inited = swift_initStackObject(v90, v117);
    *(_OWORD *)(inited + 16) = v114;
    v93 = (void *)v120;
    *(_QWORD *)(inited + 32) = v120;
    aBlock[0] = inited;
    specialized Array._endMutation()(inited);
    v94 = aBlock[0];
    v95 = objc_allocWithZone((Class)CPListSection);
    v96 = v93;
    v97 = sub_100180784(v94);
    swift_bridgeObjectRelease(v94);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v99 = objc_msgSend(v95, "initWithItems:", isa, swift_bridgeObjectRelease(v97).n128_f64[0]);

    *(_QWORD *)(v91 + 32) = v99;
    aBlock[0] = v91;
    specialized Array._endMutation()(v100);
    v101 = aBlock[0];
    PassthroughSubject.send(_:)(aBlock);
    swift_errorRelease(v51);
    swift_release(v78);

    swift_bridgeObjectRelease(v101);
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload != 3)
  {
    swift_release(Strong);
    sub_10003F970((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for PageContent);
    v62 = v104;
LABEL_29:
    *v62 = 0;
    return;
  }
  v25 = v105;
  sub_10013BE30((uint64_t)v22, v105, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
  v26 = *(char **)(v25 + *(int *)(v18 + 24));
  v27 = _swiftEmptyArrayStorage;
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = *((_QWORD *)v26 + 2);
  v108 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_unsupportedSectionIds;
  v103 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_supportedItemModelTypes;
  swift_bridgeObjectRetain(v26);
  v29 = Strong;
  v30 = swift_retain();
  v111 = v28;
  if (v28)
  {
    v102 = v24;
    v31 = 0;
    v32 = v107;
    v110 = v26;
    while (v31 < *((_QWORD *)v26 + 2))
    {
      v33 = *(_QWORD *)(v13 + 72);
      v112 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v34 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v13 + 16))(v17, &v26[v112 + v33 * v31], v32, v30);
      if ((ModernShelf.hideFromCarPlay.getter(v34) & 1) != 0
        || (v35 = *(_QWORD *)(v29 + v108),
            v36 = ModernShelf.id.getter(),
            v38 = v37,
            LOBYTE(v35) = sub_10029113C(v36, v37, v35),
            swift_bridgeObjectRelease(v38),
            (v35 & 1) != 0)
        || (v39 = *(_QWORD *)(v29 + v103), (v40 = *(_QWORD *)(v39 + 16)) == 0))
      {
LABEL_14:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v32);
      }
      else
      {
        v41 = swift_bridgeObjectRetain(*(_QWORD *)(v29 + v103));
        v42 = 32;
        while (1)
        {
          v43 = *(_QWORD *)(v39 + v42);
          v44.n128_f64[0] = ModernShelf.itemPresentation.getter(v41);
          v45 = ModernShelf.ItemPresentation.itemKind.getter(v44);
          (*(void (**)(char *, _QWORD))(v113 + 8))(v12, v114);
          if (v43 == ModernShelf.ItemKind.modelType.getter(v45))
            break;
          v42 += 16;
          if (!--v40)
          {
            swift_bridgeObjectRelease(v39);
            v29 = Strong;
            v32 = v107;
            goto LABEL_14;
          }
        }
        v46 = swift_bridgeObjectRelease(v39);
        v47 = *(void (**)(char *, char *, uint64_t, __n128))(v13 + 32);
        v32 = v107;
        v47(v106, v17, v107, v46);
        v48 = aBlock[0];
        if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
        {
          sub_10017B234(0, *(_QWORD *)(v48 + 16) + 1, 1);
          v48 = aBlock[0];
        }
        v50 = *(_QWORD *)(v48 + 16);
        v49 = *(_QWORD *)(v48 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_10017B234(v49 > 1, v50 + 1, 1);
          v48 = aBlock[0];
        }
        *(_QWORD *)(v48 + 16) = v50 + 1;
        ((void (*)(unint64_t, char *, uint64_t))v47)(v48 + v112 + v50 * v33, v106, v32);
        aBlock[0] = v48;
        v29 = Strong;
      }
      ++v31;
      v26 = v110;
      if (v31 == v111)
      {
        v27 = (_QWORD *)aBlock[0];
        v24 = v102;
        goto LABEL_26;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease(v26);
    v63 = *(int *)(sub_10003F544((uint64_t *)&unk_100555340) + 48);
    swift_release(v29);
    sub_10003F970(v105, (uint64_t (*)(_QWORD))&type metadata accessor for ModernPage);
    swift_release(v29);
    *v104 = v27;
    v64 = type metadata accessor for PageRenderContentTypes(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(&v24[v63], v64);
  }
}

void sub_100275BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = sub_100274A30();
    swift_retain();
    if ((v6 & 1) != 0)
    {
      swift_bridgeObjectRetain(a1);
      sub_100276D08(v7, v5, v5, a1);
      swift_release_n(v5, 2);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      sub_1002772A8(a1, v5, v5);
      swift_release_n(v5, 2);
    }
  }
}

double sub_100275CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  Class isa;
  id v38;
  uint64_t v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _swiftEmptyArrayStorage;
  v47 = (uint64_t)_swiftEmptyArrayStorage;
  if (a1)
  {
    v11 = swift_unknownObjectRetain(a1);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, a1);
    specialized Array._endMutation()(v14);
  }
  v45 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v43 = v7;
    v16 = v6;
    v17 = *(_QWORD *)(type metadata accessor for ModernShelf(0) - 8);
    v18 = a3 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v19 = *(_QWORD *)(v17 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v21 = sub_100276318(v18, a2);
      if (v21)
      {
        v22 = v21;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
        v24 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized Array._endMutation()(v20);
      }
      v18 += v19;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(a3);
    v10 = (_QWORD *)v45;
    v6 = v16;
    v7 = v43;
  }
  sub_1001734C4((uint64_t)v10);
  v25 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v25);
  v26 = v47;
  v27 = swift_bridgeObjectRetain_n(v47, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v30 = 134217984;
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v42 = v26;
      else
        v42 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v31 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v31 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v26);
    v45 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "CarPlayStoreProvider: Browse root section total items count is %ld.", v30, 0xCu);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v26, 2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v32 = sub_10003F544((uint64_t *)&unk_100553780);
  v33 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_1003CA250;
  swift_beginAccess(&v47, &v45, 0, 0);
  v34 = v47;
  v35 = objc_allocWithZone((Class)CPListSection);
  v36 = sub_100180784(v34);
  swift_bridgeObjectRelease(v34);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v38 = objc_msgSend(v35, "initWithItems:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  *(_QWORD *)(v33 + 32) = v38;
  v44 = v33;
  specialized Array._endMutation()(v39);
  v40 = v44;
  PassthroughSubject.send(_:)(&v44);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
  return result;
}

double sub_100276064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v6);
  v7 = swift_bridgeObjectRetain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v22 = a1;
      else
        v22 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v11 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v24 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "CarPlayStoreProvider: Non-Browse root section total items count is %ld.", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = sub_10003F544((uint64_t *)&unk_100553780);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1003CA250;
  v14 = objc_allocWithZone((Class)CPListSection);
  swift_bridgeObjectRetain(a1);
  v16 = sub_100180784(v15);
  swift_bridgeObjectRelease(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v14, "initWithItems:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  *(_QWORD *)(v13 + 32) = v18;
  v24 = v13;
  specialized Array._endMutation()(v19);
  v20 = v24;
  PassthroughSubject.send(_:)(&v24);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  return result;
}

void sub_1002762DC(void *a1)
{
  id v1;
  void *v2;

  v2 = a1;
  v1 = a1;
  PassthroughSubject.send(_:)(&v2);

}

id sub_100276318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];

  v42[1] = a2;
  v2 = sub_10003F544((uint64_t *)&unk_10055D860);
  __chkstk_darwin(v2);
  v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544(&qword_100553DD8);
  __chkstk_darwin(v5);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Header(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.n128_f64[0] = ModernShelf.itemPresentation.getter(v16);
  v18 = ModernShelf.ItemPresentation.itemKind.getter(v17);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = ModernShelf.ItemKind.rawValue.getter(v18);
  v21 = v20;
  v22 = ModernShelf.ItemKind.rawValue.getter(28);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
  }
  else
  {
    v25 = v23;
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
    swift_bridgeObjectRelease(v21);
    v27 = swift_bridgeObjectRelease(v25);
    if ((v26 & 1) == 0)
    {
      ModernShelf.header.getter(v27);
      v28 = v9;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_100007A28((uint64_t)v7, &qword_100553DD8);
      }
      else
      {
        v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        v32 = Header.title.getter(v31);
        if (v33)
        {
          v34 = v33;
          v42[0] = v32;
          Header.primaryAction.getter();
          v35 = type metadata accessor for Header.PrimaryAction(0);
          v36 = *(_QWORD *)(v35 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v4, 1, v35) == 1)
          {
            swift_bridgeObjectRelease(v34);
            sub_100007A28((uint64_t)v4, (uint64_t *)&unk_10055D860);
          }
          else
          {
            v37 = Header.PrimaryAction.action.getter();
            (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v35);
            if (v37)
            {
              v38 = type metadata accessor for FlowAction(0);
              if (swift_dynamicCastClass(v37, v38))
              {
                v39 = sub_100274B7C();
                v41 = v40;
                v29 = sub_10017F460(v42[0], v34, 0, 0, 0, (uint64_t)v39, v40);
                swift_release(v37);
                swift_bridgeObjectRelease(v34);
                swift_release(v41);
                (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
                return v29;
              }
              swift_release(v37);
            }
            swift_bridgeObjectRelease(v34);
            v28 = v9;
          }
        }
        (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
      }
    }
  }
  return 0;
}

uint64_t sub_100276658()
{
  uint64_t v0;

  sub_100007A28(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL, (uint64_t *)&unk_100553DC0);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storePageProvider));
  sub_10003D380((_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_playStateController));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_downloadStateController));
  sub_10003D380((_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeSectionsSubject));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_unsupportedSectionIds));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_supportedItemModelTypes));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_updatePlayStateSubject));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_subscriptions));
  sub_10002CA30(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler + 8));
  return v0;
}

uint64_t sub_100276748()
{
  uint64_t v0;

  sub_100276658();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10027676C()
{
  return type metadata accessor for CarPlayStoreProvider(0);
}

uint64_t type metadata accessor for CarPlayStoreProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_10055D728;
  if (!qword_10055D728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarPlayStoreProvider);
  return result;
}

void sub_1002767B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  sub_1000048DC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "0";
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_1003D1180;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = &unk_1003D1180;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = &unk_1003D1198;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

uint64_t sub_100276860(uint64_t a1, uint64_t a2)
{
  return sub_1001D0228(a1, a2, (uint64_t)&OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeSectionsSubject, &qword_100555100, &qword_100555108);
}

uint64_t sub_10027687C(uint64_t a1, uint64_t a2)
{
  return sub_1001D0228(a1, a2, (uint64_t)&OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject, (uint64_t *)&unk_1005550F0, &qword_100554FB0);
}

void sub_100276898()
{
  StorePageProvider.reload(ignoreCache:)(1);
}

uint64_t sub_1002768C8()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_1002768F4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  __int128 v47[2];
  _BYTE v48[64];

  v5 = v4;
  v8 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeSectionsSubject;
  v12 = sub_10003F544(&qword_100555100);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)(v4 + v11) = PassthroughSubject.init()(v13);
  v14 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject;
  v15 = sub_10003F544((uint64_t *)&unk_1005550F0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)(v4 + v14) = PassthroughSubject.init()(v16);
  v17 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_unsupportedSectionIds;
  v18 = sub_10003F544((uint64_t *)&unk_1005588B0);
  inited = swift_initStackObject(v18, v48);
  *(_OWORD *)(inited + 16) = xmmword_1003CA220;
  *(_QWORD *)(inited + 32) = static String.pageHighlightShelfID.getter();
  *(_QWORD *)(inited + 40) = v20;
  *(_QWORD *)(inited + 48) = static String.loadingShelfID.getter();
  *(_QWORD *)(inited + 56) = v21;
  v22 = sub_10013B9DC(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, &type metadata for String);
  *(_QWORD *)(v5 + v17) = v22;
  v23 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_supportedItemModelTypes;
  v24 = sub_10003F544((uint64_t *)&unk_10055D820);
  v25 = swift_allocObject(v24, 80, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1003CA240;
  v26 = type metadata accessor for LegacyEpisodeLockup(0);
  v27 = sub_100026844(&qword_1005588C8, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v27;
  v28 = type metadata accessor for LegacyLockup(0);
  v29 = sub_100026844(&qword_10055D830, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  *(_QWORD *)(v25 + 48) = v28;
  *(_QWORD *)(v25 + 56) = v29;
  v30 = type metadata accessor for Showcase(0);
  v31 = sub_100026844(&qword_10055D838, (uint64_t (*)(uint64_t))&type metadata accessor for Showcase, (uint64_t)&protocol conformance descriptor for Showcase);
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 72) = v31;
  *(_QWORD *)(v5 + v23) = v25;
  v32 = OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_updatePlayStateSubject;
  v33 = sub_10003F544((uint64_t *)&unk_100555110);
  v34 = swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  *(_QWORD *)(v5 + v32) = CurrentValueSubject.init(_:)(v34);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_subscriptions) = _swiftEmptyArrayStorage;
  v35 = (_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider____lazy_storage___itemHandler);
  *v35 = 0;
  v35[1] = 0;
  sub_100036A44(a2, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_pageURL);
  v36 = (_OWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
  v37 = a4[1];
  *v36 = *a4;
  v36[1] = v37;
  v36[2] = a4[2];
  sub_100036A44(a2, (uint64_t)v10);
  v38 = type metadata accessor for StorePageProvider(0);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  swift_retain();
  v39 = swift_retain();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storePageProvider) = StorePageProvider.init(asPartOf:pageURL:page:)(v39);
  v40 = sub_10003F544((uint64_t *)&unk_100555120);
  BaseObjectGraph.inject<A>(_:)(v47, v40, v40);
  sub_10002099C(v47, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider);
  v41 = sub_10003F544(&qword_100553720);
  BaseObjectGraph.inject<A>(_:)(v47, v41, v41);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_playStateController) = *(_QWORD *)&v47[0];
  v42 = sub_10003F544((uint64_t *)&unk_100555130);
  BaseObjectGraph.inject<A>(_:)(v47, v42, v42);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_downloadStateController) = *(_QWORD *)&v47[0];
  v43 = sub_10003F544((uint64_t *)&unk_1005588D0);
  BaseObjectGraph.inject<A>(_:)(v47, v43, v43);
  sub_10002099C(v47, v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
  v44 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storePageProvider);
  swift_retain();
  StorePageProvider.viewDidLoad()();
  swift_release(v44);
  sub_100274C08();
  sub_100007A28(a2, (uint64_t *)&unk_100553DC0);
  return v5;
}

uint64_t sub_100276CB0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100276CD4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_10027507C(a1, v2, a2);
}

void sub_100276CDC(uint64_t a1)
{
  uint64_t v1;

  sub_100275BFC(a1, v1);
}

uint64_t sub_100276CE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100276D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(char *, uint64_t, uint64_t, __n128);
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __n128 v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t i;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  __int128 v66;
  _QWORD *v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];
  Swift::String v82;

  v8 = sub_10003F544(&qword_10055D840);
  __chkstk_darwin(v8);
  v77 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v79 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModernShelf(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v76 = (char *)&v71 - v18;
  v19 = swift_allocObject(&unk_1004B9C08, 32, 7);
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
  {
    swift_retain();
    swift_bridgeObjectRetain(a4);
    goto LABEL_32;
  }
  v71 = a2;
  v21 = a4;
  v22 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v23 = a3;
  v24 = *(_QWORD *)(v14 + 72);
  v78 = v14;
  v25 = *(double (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  v73 = v19;
  v74 = v23;
  swift_retain();
  v75 = v21;
  swift_bridgeObjectRetain(v21);
  v72 = a1;
  v26 = swift_bridgeObjectRetain(a1);
  while (1)
  {
    v27.n128_f64[0] = v25(v17, v22, v13, v26);
    v28.n128_f64[0] = ModernShelf.itemPresentation.getter(v27);
    v29 = ModernShelf.ItemPresentation.itemKind.getter(v28);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v12, v80);
    v30 = ModernShelf.ItemKind.rawValue.getter(v29);
    v32 = v31;
    v34 = ModernShelf.ItemKind.rawValue.getter(28);
    v35 = v33;
    if (v30 == v34 && v32 == v33)
    {
      swift_bridgeObjectRelease(v72);
      swift_bridgeObjectRelease(v32);
      goto LABEL_11;
    }
    v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v33, 0);
    swift_bridgeObjectRelease(v32);
    v37 = swift_bridgeObjectRelease(v35);
    if ((v36 & 1) != 0)
      break;
    (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v17, v13, v37);
    v22 += v24;
    if (!--v20)
    {
      swift_bridgeObjectRelease(v72);
      v19 = v73;
      a3 = v74;
      a4 = v75;
      goto LABEL_32;
    }
  }
  v32 = v72;
LABEL_11:
  v38 = swift_bridgeObjectRelease(v32);
  v39 = v78;
  v40 = v76;
  v41 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v78 + 32))(v76, v17, v13, v38);
  v42 = ModernShelf.items.getter(v41);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v13);
  v43 = (uint64_t)sub_10034F53C(v42);
  swift_bridgeObjectRelease(v42);
  v19 = v73;
  a3 = v74;
  a4 = v75;
  v44 = (uint64_t)v77;
  if (!v43)
    goto LABEL_32;
  *(_QWORD *)&v81[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v43 >> 62))
  {
    v45 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v45)
      goto LABEL_14;
LABEL_28:
    swift_bridgeObjectRelease(v43);
    v54 = _swiftEmptyArrayStorage;
LABEL_29:
    *(_QWORD *)&v81[0] = v54;
    v56 = sub_10003F544(&qword_10055D848);
    v57 = sub_10002F9C8((unint64_t *)&unk_10055D850, &qword_10055D848, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v56, v57, v58) & 1) != 0)
    {
      v59 = v71;
      v60 = *(_QWORD *)(v71 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_didSelectItemSubject);
      v61 = (void *)objc_opt_self(NSBundle);
      v62 = objc_msgSend(v61, "mainBundle", swift_retain().n128_f64[0]);
      v82._object = (void *)0xE000000000000000;
      v63._countAndFlagsBits = 0x6465727574616546;
      v63._object = (void *)0xE800000000000000;
      v64._countAndFlagsBits = 0;
      v64._object = (void *)0xE000000000000000;
      v82._countAndFlagsBits = 0;
      v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v82);

      v66 = *(_OWORD *)(v59 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
      v81[0] = *(_OWORD *)(v59 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
      v81[1] = v66;
      v81[2] = *(_OWORD *)(v59 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
      v67 = (_QWORD *)(v59 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
      v68 = sub_100274B7C();
      v70 = v69;
      sub_10030FC34(v65._countAndFlagsBits, (uint64_t)v65._object, (uint64_t)v81, v67, (uint64_t)v68, v69, (uint64_t)sub_1002777D4, v60, (uint64_t)sub_1002777CC, v19, (uint64_t)v54);
      swift_release(v19);
      swift_release(v54);
      swift_release(v60);
      swift_bridgeObjectRelease(v65._object);
      v19 = v70;
LABEL_33:
      swift_release(v19);
      return;
    }
    swift_release(v54);
LABEL_32:
    sub_100275CB0(0, a3, a4);
    goto LABEL_33;
  }
  if (v43 >= 0)
    v55 = v43 & 0xFFFFFFFFFFFFFF8;
  else
    v55 = v43;
  swift_bridgeObjectRetain(v43);
  v45 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v43);
  if (!v45)
    goto LABEL_28;
LABEL_14:
  if (v45 >= 1)
  {
    for (i = 0; i != v45; ++i)
    {
      if ((v43 & 0xC000000000000001) != 0)
      {
        v47 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v43);
      }
      else
      {
        v47 = *(_QWORD *)(v43 + 8 * i + 32);
        v48 = swift_retain();
      }
      Showcase.showArtwork.getter(v48);
      v49 = type metadata accessor for ArtworkModel(0);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v44, 1, v49);
      v51 = sub_100007A28(v44, &qword_10055D840);
      if (v50 == 1)
      {
        swift_release(v47);
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v51);
        v52 = *(_QWORD *)(*(_QWORD *)&v81[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v52);
        v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v47);
        specialized ContiguousArray._endMutation()(v53);
      }
    }
    swift_bridgeObjectRelease(v43);
    v54 = *(_QWORD **)&v81[0];
    a3 = v74;
    a4 = v75;
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t sub_1002772A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  __int128 v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[40];
  uint64_t v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v6 = type metadata accessor for ModernShelf(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 2;
  swift_retain_n(a3, 2);
  if ((sub_100274A30() & 1) == 0)
  {
    v62 = a3;
    v11 = _swiftEmptyArrayStorage;
    *(_QWORD *)&v66 = _swiftEmptyArrayStorage;
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
    {
      v61 = a2;
      v13 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v14 = *(_QWORD *)(v7 + 72);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
      v16 = swift_bridgeObjectRetain(a1);
      do
      {
        v17 = v15(v9, v13, v6, v16);
        v18 = ModernShelf.items.getter(v17);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        sub_100173A40(v18);
        v13 += v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease(a1);
      v19 = (_QWORD *)v66;
      a2 = v61;
      a3 = v62;
      v11 = _swiftEmptyArrayStorage;
    }
    else
    {
      v19 = _swiftEmptyArrayStorage;
      a3 = v62;
    }
    *(_QWORD *)&v66 = v19;
    v20 = sub_10003F544(&qword_10055D870);
    v21 = sub_10002F9C8(&qword_10055D878, &qword_10055D870, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v20, v21, v22) & 1) != 0)
    {
      v65 = (unint64_t)_swiftEmptyArrayStorage;
      v23 = v19[2];
      if (v23)
      {
        v24 = (uint64_t)(v19 + 4);
        swift_bridgeObjectRetain(v19);
        v25 = v23;
        do
        {
          sub_10000A520(v24, (uint64_t)&v66);
          sub_10000A520((uint64_t)&v66, (uint64_t)v63);
          v27 = sub_10003F544(&qword_1005545F0);
          v28 = type metadata accessor for LegacyEpisodeLockup(0);
          if ((swift_dynamicCast(&v64, v63, v27, v28, 6) & 1) == 0)
            v64 = 0;
          v29 = sub_10003D380(&v66);
          v30 = v64;
          if (v64)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
            v32 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v31 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v32 >= v31 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
            v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
            specialized Array._endMutation()(v26);
          }
          v24 += 40;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease(v19);
        v33 = (_QWORD *)v65;
        a3 = v62;
      }
      else
      {
        v33 = _swiftEmptyArrayStorage;
      }
      *(_QWORD *)&v66 = v33;
      v34 = sub_10003F544((uint64_t *)&unk_100558910);
      v35 = sub_10002F9C8((unint64_t *)&unk_100554510, (uint64_t *)&unk_100558910, (uint64_t)&protocol conformance descriptor for [A]);
      if ((Collection.isNotEmpty.getter(v34, v35, v36) & 1) != 0)
      {
        swift_bridgeObjectRelease(v19);
        v37 = a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider;
        v38 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_playStateController);
        v39 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_downloadStateController);
        v40 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
        v41 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
        v66 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
        v67 = v41;
        v68 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
        v42 = sub_100274B7C();
        v44 = v43;
        swift_retain();
        sub_1002FDB58(v37, v38, v39, v40, &v66, (uint64_t)v42, v44, (uint64_t)v33, a3);
        swift_release(v44);
        swift_bridgeObjectRelease(v33);
      }
      else
      {
        swift_bridgeObjectRelease(v33);
        v65 = (unint64_t)_swiftEmptyArrayStorage;
        if (v23)
        {
          v45 = (uint64_t)(v19 + 4);
          swift_bridgeObjectRetain(v19);
          do
          {
            sub_10000A520(v45, (uint64_t)&v66);
            sub_10000A520((uint64_t)&v66, (uint64_t)v63);
            v47 = sub_10003F544(&qword_1005545F0);
            v48 = type metadata accessor for LegacyLockup(0);
            if ((swift_dynamicCast(&v64, v63, v47, v48, 6) & 1) == 0)
              v64 = 0;
            v49 = sub_10003D380(&v66);
            v50 = v64;
            if (v64)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
              v52 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v51 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v52 >= v51 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
              v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
              specialized Array._endMutation()(v46);
            }
            v45 += 40;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease(v19);
          v11 = (_QWORD *)v65;
        }
        swift_bridgeObjectRelease(v19);
        v53 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_storeDataProvider);
        v54 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_imageProvider);
        v55 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 16);
        v66 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo);
        v67 = v55;
        v68 = *(_OWORD *)(a2 + OBJC_IVAR____TtC8Podcasts20CarPlayStoreProvider_deviceInfo + 32);
        v56 = sub_100274B7C();
        v58 = v57;
        swift_retain();
        sub_1002FEE7C(v53, v54, &v66, (uint64_t)v56, v58, (uint64_t)v11, a3);
        swift_bridgeObjectRelease(v11);
        swift_release(v58);
      }
      v10 = 3;
    }
    else
    {
      swift_bridgeObjectRelease(v19);
      sub_100276064((uint64_t)_swiftEmptyArrayStorage);
      v10 = 2;
    }
  }
  return swift_release_n(a3, v10);
}

uint64_t sub_1002777A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1002777CC(uint64_t a1)
{
  uint64_t v1;

  return sub_100275CB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1002777D4(void *a1)
{
  sub_1002762DC(a1);
}

uint64_t sub_1002777DC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_100274B7C();
  v6 = v5;
  v4(a1);
  v7 = swift_release(v6);
  return a2(v7);
}

uint64_t sub_10027782C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  _QWORD aBlock[5];
  _QWORD *v8;
  char v9[24];

  v1 = objc_msgSend((id)objc_opt_self(IMURLBag), "sharedInstance");
  swift_beginAccess(v0 + 24, v9, 0, 0);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_allocObject(&unk_1004B9D40, 40, 7);
  v3[2] = v2;
  v3[3] = sub_100223118;
  v3[4] = 0;
  aBlock[4] = sub_100277BAC;
  v8 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10034F9E4;
  aBlock[3] = &unk_1004B9D58;
  v4 = _Block_copy(aBlock);
  v5 = v8;
  swift_retain_n(v2, 2);
  swift_release(v5);
  objc_msgSend(v1, "reportAConcernURLWithCompletion:", v4);
  _Block_release(v4);

  return swift_release(v2);
}

uint64_t sub_100277938()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts26ReportPodcastContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100277998()
{
  return type metadata accessor for ReportPodcastContextAction(0);
}

uint64_t type metadata accessor for ReportPodcastContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055D8A8;
  if (!qword_10055D8A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReportPodcastContextAction);
  return result;
}

uint64_t sub_1002779DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100277A64()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._countAndFlagsBits = 0xD000000000000025;
  v5._object = (void *)0x8000000100438350;
  v1._object = (void *)0x8000000100438330;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

unint64_t sub_100277B14()
{
  return 0xD000000000000016;
}

uint64_t sub_100277B30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts26ReportPodcastContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100277B74()
{
  return 44;
}

uint64_t sub_100277B80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100277BAC(uint64_t a1)
{
  uint64_t v1;

  return sub_10028C6F0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_100277BB8()
{
  sub_100277D38();
}

void sub_100277BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;

  v5 = (uint64_t *)(swift_isaMask & *(_QWORD *)v4);
  v6 = &v4[v5[51]];
  v7 = type metadata accessor for OperationResult(0, v5[46], a3, a4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(char *))(*(_QWORD *)(v5[48] - 8) + 8))(&v4[*(_QWORD *)((swift_isaMask & *(_QWORD *)v4)
                                                                                 + 0x1A0)]);
  swift_release(*(_QWORD *)&v4[*(_QWORD *)((swift_isaMask & *(_QWORD *)v4) + 0x1A8) + 8]);

}

id sub_100277C8C()
{
  _QWORD *v0;
  uint64_t v1;
  __int128 v2;
  objc_class *v3;
  _OWORD v5[2];
  uint64_t v6;
  objc_super v7;

  v1 = *(_QWORD *)((swift_isaMask & *v0) + 0x190);
  v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x180);
  v5[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x170);
  v5[1] = v2;
  v6 = v1;
  v3 = (objc_class *)type metadata accessor for StorageOperation(0, (uint64_t)v5);
  v7.receiver = v0;
  v7.super_class = v3;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_100277CE8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100277D0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100277D38()
{
  _swift_stdlib_reportUnimplementedInitializer("Podcasts.StorageOperation", 25, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_100277D64()
{
  uint64_t v0;
  char v1;
  objc_class *v2;
  unint64_t v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v1 & 1) != 0)
  {
    v3 = 0xD00000000000001CLL;
    v11 = 0x8000000100438490;
    v4 = 0x8000000100438470;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0xD00000000000001CLL;
  }
  else
  {
    v11 = 0x80000001004384D0;
    v4 = 0x80000001004384B0;
    v3 = 0xD000000000000011;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0xD000000000000011;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_100277E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for QueueModelSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v3) & 1) == 0)
    return;
  v6 = *(_QWORD *)(v0 + 16);
  if (!v6 || *(_BYTE *)(v6 + 32) != 3)
    return;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v17 = v7 & 0xFFFFFFFFFFFFFF8;
    else
      v17 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain(v7);
    if (_CocoaArrayWrapper.endIndex.getter(v17))
      goto LABEL_6;
LABEL_17:
    sub_100198C1C(v7, v8, 3u);
    return;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (!v9)
    goto LABEL_17;
LABEL_6:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v10 = *(id *)(v7 + 32);
  }
  v11 = v10;
  sub_100198C1C(v7, v8, 3u);
  v12 = *(_BYTE *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);
  swift_retain();
  v15 = dispatch thunk of PlaybackController.queueController.getter(v14);
  swift_release(v13);
  v16 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  if ((v12 & 1) != 0)
  {
    v16(v5, enum case for QueueModelSection.softQueue(_:), v1);
    dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)(v5, v11);
    swift_release(v15);

  }
  else
  {
    v16(v5, enum case for QueueModelSection.hardQueue(_:), v1);
    dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)(v5, v11);

    swift_release(v15);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

void sub_100278030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((static Podcasts.isBlueMoonEnabled()(a1) & 1) == 0)
    return;
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2 || *(_BYTE *)(v2 + 32) != 3)
    return;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v15 = v3 & 0xFFFFFFFFFFFFFF8;
    else
      v15 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain(v3);
    if (_CocoaArrayWrapper.endIndex.getter(v15))
      goto LABEL_6;
LABEL_15:
    sub_100198C1C(v3, v4, 3u);
    return;
  }
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v5)
    goto LABEL_15;
LABEL_6:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 32);
LABEL_9:
    v7 = v6;
    sub_100198C1C(v3, v4, 3u);
    v8 = *(_QWORD *)(v1 + 40);
    swift_retain();
    v10 = dispatch thunk of PlaybackController.queueController.getter(v9);
    swift_release(v8);
    v11 = objc_msgSend(v7, "contentItemIdentifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)(v12, v14);
    swift_release(v10);
    swift_bridgeObjectRelease(v14);
    return;
  }
  __break(1u);
}

uint64_t sub_100278190()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for RemoveFromQueueContextAction()
{
  return objc_opt_self(_TtC8Podcasts28RemoveFromQueueContextAction);
}

uint64_t storeEnumTagSinglePayload for RemoveFromQueueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100278238 + 4 * byte_1003D1305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10027826C + 4 * byte_1003D1300[v4]))();
}

uint64_t sub_10027826C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100278274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10027827CLL);
  return result;
}

uint64_t sub_100278288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100278290);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100278294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027829C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoveFromQueueType()
{
  return &type metadata for RemoveFromQueueType;
}

unint64_t sub_1002782BC()
{
  unint64_t result;

  result = qword_10055DBC0;
  if (!qword_10055DBC0)
  {
    result = swift_getWitnessTable(&unk_1003D13C4, &type metadata for RemoveFromQueueType);
    atomic_store(result, (unint64_t *)&qword_10055DBC0);
  }
  return result;
}

uint64_t sub_100278304()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_10027830C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t sub_100278338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *(unsigned __int8 *)(v1 + 32);
  v4 = type metadata accessor for MetricsLabel(0);
  v5 = (unsigned int *)&enum case for MetricsLabel.removeFromSoftQueue(_:);
  if (!v3)
    v5 = (unsigned int *)&enum case for MetricsLabel.removeFromHardQueue(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

uint64_t sub_10027838C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32))
    return 47;
  else
    return 46;
}

BOOL sub_1002783A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41[24];
  char v42[24];

  v1 = v0;
  v2 = sub_10003F544(&qword_100560500);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PodcastStateModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for InteractionContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + 104, v42, 0, 0);
  v18 = *(uint64_t **)(v0 + 104);
  if (!v18)
    goto LABEL_12;
  v19 = *v18;
  v40 = v14;
  v20 = v10;
  v21 = v1;
  v22 = v4;
  v23 = v6;
  v24 = v5;
  v25 = *(void (**)(__n128))(v19 + 168);
  v26 = swift_retain();
  v25(v26);
  v5 = v24;
  v6 = v23;
  v4 = v22;
  v1 = v21;
  v10 = v20;
  v27 = swift_release(v18);
  InteractionContext.page.getter(v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v40);
  v29 = InteractionContext.Page.isRecentlyUnfollowedPage.getter(v28);
  sub_10003F970((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for InteractionContext.Page);
  if ((v29 & 1) == 0)
  {
LABEL_12:
    v30 = *(_QWORD *)(v1 + 96);
    if (v30)
    {
      v31 = v30 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
      swift_beginAccess(v30 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v41, 0, 0);
      sub_10016E904(v31, (uint64_t)v10);
      v32 = (void *)sub_1001E2CF0();
      sub_10003F970((uint64_t)v10, type metadata accessor for PodcastContextActionDataType);
      if (v32)
      {
        v33 = v32;
        PodcastStateModel.init(podcast:)(v32);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v35 = v39;
          v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v39, v4, v5);
          v37 = PodcastStateModel.sanitizedState()(v36);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);

          return v37 == 1;
        }

        sub_100007A28((uint64_t)v4, &qword_100560500);
      }
    }
  }
  return 0;
}

uint64_t sub_1002786B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  os_log_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  __n128 v47;
  os_log_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[24];
  char v59[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PresentationSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PodcastContextActionDataType(0);
  result = __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = v1[12];
  if (!v17)
    return result;
  v55 = v2;
  v18 = v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v59, 0, 0);
  sub_10016E904(v18, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v16, v13) == 1)
    return sub_10003F970((uint64_t)v16, type metadata accessor for PodcastContextActionDataType);
  v20 = *v16;
  v19 = v16[1];
  v21 = swift_beginAccess(v1 + 13, v58, 0, 0);
  v22 = v1[13];
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v21);
    goto LABEL_9;
  }
  v54 = v20;
  v23 = *(void (**)(__n128))(*(_QWORD *)v22 + 120);
  v24 = swift_retain();
  v23(v24);
  swift_release(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease(v19);
    return sub_100007A28((uint64_t)v8, qword_1005542D8);
  }
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  static Logger.podcastsStatesCoordination.getter(v25);
  v26 = swift_bridgeObjectRetain_n(v19, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc(22, -1);
    v53 = swift_slowAlloc(64, -1);
    v57 = v53;
    *(_DWORD *)v30 = 136315394;
    v52 = v29;
    swift_bridgeObjectRetain(v19);
    v56 = sub_10003D274(v54, v19, &v57);
    v51 = &v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease_n(v19, 3);
    *(_WORD *)(v30 + 12) = 2080;
    v49 = (uint8_t *)v30;
    v50 = v30 + 14;
    v31 = objc_msgSend((id)objc_opt_self(NSThread), "callStackSymbols");
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, &type metadata for String);
    v48 = v27;
    v33 = v32;

    v34 = Array.description.getter(v33, &type metadata for String);
    v36 = v35;
    swift_bridgeObjectRelease(v33);
    v37 = sub_10003D274(v34, v36, &v57);
    v38 = v49;
    v56 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v51, v50, v49 + 22);
    swift_bridgeObjectRelease(v36);
    v39 = v48;
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v52, "RemovePodcastContextAction.handler() - removing podcast %s %s", v38, 0x16u);
    v40 = v53;
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    v41 = v5;
    v42 = v54;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v55);
  }
  else
  {

    swift_bridgeObjectRelease_n(v19, 2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v55);
    v42 = v54;
  }
  v43 = v1 + 2;
  v45 = v1[5];
  v44 = v1[6];
  sub_10003A834(v43, v45);
  v46 = (void *)dispatch thunk of LibraryRemovalControllerProtocol.removeShowFromLibraryAlertController(uuid:)(v42, v19, v45, v44);
  v47 = swift_bridgeObjectRelease(v19);
  if (v46)
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v46, 1, 15, 1, 0, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v47);
}

uint64_t sub_100278B44()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  sub_10003D380(v0 + 2);
  sub_10003D380(v0 + 7);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_bridgeObjectRelease(v0[16]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100278BBC()
{
  return type metadata accessor for RemovePodcastContextAction(0);
}

uint64_t type metadata accessor for RemovePodcastContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055DBF0;
  if (!qword_10055DBF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemovePodcastContextAction);
  return result;
}

uint64_t sub_100278C00(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_1003D1498;
  v4[3] = &unk_1003D1498;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = &unk_1003D14B0;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    v4[7] = &unk_1003D14C8;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100278CA4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 96));
}

uint64_t sub_100278CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 96) = a1;
  return swift_release(v2);
}

uint64_t sub_100278CBC()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0xA9000000000000A6;
  v1._countAndFlagsBits = 0x455F45564F4D4552;
  v1._object = (void *)0xEF53495350494C4CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x80E265766F6D6552;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100278D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100278DB4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts26RemovePodcastContextAction_contextActionType);
}

uint64_t sub_100278DCC()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 104, v2, 0, 0);
  return swift_retain(*(_QWORD *)(v0 + 104));
}

uint64_t sub_100278E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 104, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 104) = a1;
  return swift_release(v3);
}

uint64_t (*sub_100278E44(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 104, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100278E80()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100278EE8()
{
  return type metadata accessor for AddToQueueEpisodeContextAction(0);
}

uint64_t type metadata accessor for AddToQueueEpisodeContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055DD20;
  if (!qword_10055DD20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddToQueueEpisodeContextAction);
  return result;
}

uint64_t sub_100278F2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100278FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts30AddToQueueEpisodeContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100278FF8()
{
  return 9;
}

void sub_100279000(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemOrangeColor");
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x51206F7420646441;
  v4._object = (void *)0xEC00000065756575;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v7);

  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0xD000000000000028;
  *(_QWORD *)(a1 + 16) = 0x80000001004341E0;
  *(Swift::String *)(a1 + 24) = v6;
}

uint64_t sub_1002790EC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1936484398;
  else
    v3 = 0x7261646E6174732ELL;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1936484398;
  else
    v5 = 0x7261646E6174732ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10027918C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000018;
  v3 = 0x800000010042E160;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x656C62616E457369;
    else
      v5 = 1701667182;
    if (v4 == 1)
      v6 = 0xE900000000000064;
    else
      v6 = 0xE400000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000018;
  v6 = 0x800000010042E160;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x656C62616E457369;
    else
      v2 = 1701667182;
    if (v7 == 1)
      v3 = 0xE900000000000064;
    else
      v3 = 0xE400000000000000;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    v8 = 1;
    v3 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v2, v3, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  return v8 & 1;
}

uint64_t sub_100279290(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  char v7;

  v2 = 0x6C6172656E6567;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6B63616279616C70;
    else
      v3 = 0x6465636E61766461;
    v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1)
        v2 = 0x6B63616279616C70;
      else
        v2 = 0x6465636E61766461;
      v6 = 0xE800000000000000;
      if (v3 != v2)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6C6172656E6567;
    v5 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v3 != 0x6C6172656E6567)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v2, v6, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v6)
    goto LABEL_15;
  v7 = 1;
  v6 = v4;
LABEL_16:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1002793A8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6F65646976;
  else
    v2 = 0x6F69647561;
  if ((a2 & 1) != 0)
    v3 = 0x6F65646976;
  else
    v3 = 0x6F69647561;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE500000000000000, v3, 0xE500000000000000, 0);
  swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  return v4 & 1;
}

void sub_10027941C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10027946C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1002794D0 + 4 * byte_1003D15C4[a2]))(0x7972617262696CLL);
}

uint64_t sub_1002794D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7972617262696CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7972617262696CLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_100279578(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0xD000000000000012;
  if (v2)
    v4 = 0x800000010042E0E0;
  else
    v4 = 0x800000010042E100;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0xD000000000000012;
  if ((a2 & 1) != 0)
    v6 = 0x800000010042E100;
  else
    v6 = 0x800000010042E0E0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10027961C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x800000010042E120;
  else
    v4 = 0x800000010042E140;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x800000010042E140;
  else
    v6 = 0x800000010042E120;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1002796C4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_100279710(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100279770 + 4 * byte_1003D15CC[a2]))(0xD00000000000002DLL);
}

uint64_t sub_100279770(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x800000010042DE50;
  if (a1 == 0xD00000000000002DLL && v1 == 0x800000010042DE50)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD00000000000002DLL, 0x800000010042DE50, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_100279808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Podcasts22PreferencesWindowState__toolbarItemType;
  v2 = sub_10003F544(&qword_10055DF28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10027985C()
{
  return type metadata accessor for PreferencesWindowState(0);
}

uint64_t type metadata accessor for PreferencesWindowState(uint64_t a1)
{
  uint64_t result;

  result = qword_10055DE50;
  if (!qword_10055DE50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PreferencesWindowState);
  return result;
}

void sub_1002798A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_10027990C();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_10027990C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10055DE60)
  {
    v0 = type metadata accessor for Published(0, &type metadata for PreferencesWindowState.ToolbarItemType);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10055DE60);
  }
}

uint64_t storeEnumTagSinglePayload for PreferencesWindowState.ToolbarItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002799AC + 4 * byte_1003D15D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002799E0 + 4 * byte_1003D15D0[v4]))();
}

uint64_t sub_1002799E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002799E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002799F0);
  return result;
}

uint64_t sub_1002799FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100279A04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100279A08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100279A10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreferencesWindowState.ToolbarItemType()
{
  return &type metadata for PreferencesWindowState.ToolbarItemType;
}

unint64_t sub_100279A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055DF10;
  if (!qword_10055DF10)
  {
    v1 = sub_10003CA40(&qword_10055DF18);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10055DF10);
  }
  return result;
}

uint64_t sub_100279A7C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for PreferencesWindowState(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100279AB8(char *a1, unsigned __int8 *a2)
{
  return sub_100279290(*a1, *a2);
}

Swift::Int sub_100279AC4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = 0x6B63616279616C70;
  if (v1 != 1)
    v2 = 0x6465636E61766461;
  if (v1)
    v3 = v2;
  else
    v3 = 0x6C6172656E6567;
  if (v1)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100279B64(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = 0x6B63616279616C70;
  if (*v1 != 1)
    v2 = 0x6465636E61766461;
  if (*v1)
    v3 = v2;
  else
    v3 = 0x6C6172656E6567;
  if (*v1)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_100279BE0(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = 0x6B63616279616C70;
  if (v2 != 1)
    v3 = 0x6465636E61766461;
  if (v2)
    v4 = v3;
  else
    v4 = 0x6C6172656E6567;
  if (v2)
    v5 = 0xE800000000000000;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100279C7C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100279D6C(*a1);
  *a2 = result;
  return result;
}

void sub_100279CA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x6B63616279616C70;
  if (v2 != 1)
    v4 = 0x6465636E61766461;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6C6172656E6567;
  if (!v5)
    v3 = 0xE800000000000000;
  *a1 = v6;
  a1[1] = v3;
}

void sub_100279D08(_QWORD *a1@<X8>)
{
  *a1 = &off_1004AD120;
}

unint64_t sub_100279D1C()
{
  unint64_t result;

  result = qword_10055DF20;
  if (!qword_10055DF20)
  {
    result = swift_getWitnessTable(&unk_1003D16C8, &type metadata for PreferencesWindowState.ToolbarItemType);
    atomic_store(result, (unint64_t *)&qword_10055DF20);
  }
  return result;
}

void *sub_100279D60()
{
  return &protocol witness table for ObservableObjectPublisher;
}

unint64_t sub_100279D6C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004AD0B8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void MTPodcast.lockupString(with:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = type metadata accessor for ShowLockupStyle.LockupStyleOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v38 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v38 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v38 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v38 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v38 - v21;
  if (!objc_msgSend(v2, "subscribed"))
  {
    v27 = objc_msgSend(v2, "newEpisodesCount");
    if (!v27)
    {
      v27 = objc_msgSend(v2, "newTrailersCount");
      if (!v27)
      {
        v31 = ShowLockupStyle.LockupStyleOptions.unfollowedShowFallbackStyle.getter();
        v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v33 = v32(v14, a1, v4);
        if (v31 == 16)
        {
          v31 = ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter(v33);
          v34 = v32(v11, (uint64_t)v14, v4);
          if (v31 == 16)
            v31 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v34);
          v35 = *(void (**)(char *, uint64_t))(v5 + 8);
          v35(v11, v4);
        }
        else
        {
          v35 = *(void (**)(char *, uint64_t))(v5 + 8);
        }
        v35(v14, v4);
        v29 = v31;
        goto LABEL_14;
      }
    }
    v25 = ShowLockupStyle.LockupStyleOptions.unfollowedShowStyle.getter(v27);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    if (v25 == 16)
      v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v28);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_13:
    v29 = v25;
LABEL_14:
    MTPodcast.lockupString(with:)(v29);
    return;
  }
  v23 = objc_msgSend(v2, "showTypeInFeedResolvedValue");
  v24 = objc_msgSend(v2, "newEpisodesCount");
  if (v23 == (id)2)
  {
    if (v24 || objc_msgSend(v2, "newTrailersCount"))
    {
      v25 = ShowLockupStyle.LockupStyleOptions.followedSerialShowStyle.getter();
      v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v20, a1, v4);
      if (v25 == 16)
        v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v26);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
    }
    else
    {
      v25 = ShowLockupStyle.LockupStyleOptions.followedSerialShowFallbackStyle.getter();
      v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v22, a1, v4);
      if (v25 == 16)
        v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v36);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
    }
    goto LABEL_13;
  }
  if (!v24)
  {
    v24 = objc_msgSend(v2, "newTrailersCount");
    if (!v24)
    {
      v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowFallbackStyle.getter();
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v17, a1, v4);
      if (v25 == 16)
        v25 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v37);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
      goto LABEL_13;
    }
  }
  v30 = ShowLockupStyle.LockupStyleOptions.followedEpisodicShowStyle.getter(v24);
  MTPodcast.lockupString(with:)(v30);
}

void MTPodcast.lockupString(with:)(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Date(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

_QWORD *sub_10027A1AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  objc_msgSend(v20, "latestEpisodeAvailabilityTime");
  if (v26 <= 0.0)
    return _swiftEmptyArrayStorage;
  v27 = objc_msgSend(v20, "latestEpisodeAvailabilityTime");
  v29 = v28;
  v30 = Date.init()(v27);
  Date.init()(v30);
  v31 = ((uint64_t (*)(uint64_t, uint64_t, double))static AbbreviatedTimeIntervalFormatter.string(from:relativeTo:currentYearReferenceDate:))(v22, v23, v29);
  v33 = v32;
  v34 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v34(v23, v21);
  v34(v22, v21);
  v35 = sub_10003F544((uint64_t *)&unk_1005588B0);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v25 - 160) = xmmword_1003CA200;
  *(_OWORD *)(v36 + 16) = xmmword_1003CA200;
  v37._countAndFlagsBits = 0xD000000000000016;
  v37._object = (void *)0x8000000100438670;
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = PFLocalizedString(_:comment:)(v37, v38);
  v40 = sub_10003F544(&qword_1005559A0);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = *(_OWORD *)(v25 - 160);
  *(_QWORD *)(v41 + 56) = &type metadata for String;
  *(_QWORD *)(v41 + 64) = sub_10003E198();
  *(_QWORD *)(v41 + 32) = v31;
  *(_QWORD *)(v41 + 40) = v33;
  v42 = static String.localizedStringWithFormat(_:_:)(v39._countAndFlagsBits, v39._object, v41);
  v44 = v43;
  swift_bridgeObjectRelease(v39._object);
  swift_bridgeObjectRelease(v41);
  *(_QWORD *)(v36 + 32) = v42;
  *(_QWORD *)(v36 + 40) = v44;
  return (_QWORD *)v36;
}

uint64_t sub_10027ADEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DF88, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
}

_QWORD *sub_10027AE00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544((uint64_t *)&unk_1005588B0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C104(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027AF0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFD0, (uint64_t (*)(_QWORD))&type metadata accessor for GroupedSearchResultsPage.Result);
}

uint64_t sub_10027AF20(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10003F544(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10027CBE0(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_10027B12C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544((uint64_t *)&unk_100554A10);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C1F4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10027B238(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B4AC(a1, a2, a3, a4, &qword_100553CD8, &qword_100553CF0);
}

_QWORD *sub_10027B24C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B9A8(a1, a2, a3, a4, &qword_100554960);
}

_QWORD *sub_10027B258(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_1005548E0);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C2FC(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10027B364(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027BC1C(a1, a2, a3, a4, &qword_100554948, (uint64_t)&type metadata for ModernEpisodeDownloadState);
}

uint64_t sub_10027B378(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100555648, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

_QWORD *sub_10027B38C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544((uint64_t *)&unk_1005549A0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C5E0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10027B498(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B4AC(a1, a2, a3, a4, (uint64_t *)&unk_1005549B0, &qword_1005545F8);
}

_QWORD *sub_10027B4AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10003F544(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10027C4D8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027B5D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFC8, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonItem);
}

_QWORD *sub_10027B5EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B4AC(a1, a2, a3, a4, (uint64_t *)&unk_100554A40, &qword_1005545F0);
}

uint64_t sub_10027B600(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100553EA8, (uint64_t (*)(_QWORD))&type metadata accessor for ModernShelf);
}

_QWORD *sub_10027B614(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_10055DF58);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C6D0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10027B720(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003D90C(a1, a2, a3, a4, &qword_10055DF48, &qword_10055DF50);
}

_QWORD *sub_10027B734(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_100554978);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10027C3E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027B854(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100557DC8, (uint64_t (*)(_QWORD))&type metadata accessor for MediaRequest.IncludeExtendTypes);
}

_QWORD *sub_10027B868(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_10055DF78);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C7D8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027B974(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100558B30, (uint64_t (*)(_QWORD))&type metadata accessor for ActionMenu.Child);
}

uint64_t sub_10027B988(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFC0, (uint64_t (*)(_QWORD))&type metadata accessor for RemoteInterest);
}

_QWORD *sub_10027B99C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B9A8(a1, a2, a3, a4, &qword_100554958);
}

_QWORD *sub_10027B9A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10003F544(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v9 + 4])
          memmove(v15, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C2FC(0, v9, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027BAB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFB8, (uint64_t (*)(_QWORD))&type metadata accessor for DownloadedAsset);
}

_QWORD *sub_10027BAC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_10055DF68);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10027C8E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027BBE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFB0, (uint64_t (*)(_QWORD))&type metadata accessor for RemoteNonFollowedShow);
}

uint64_t sub_10027BBF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100554938, (uint64_t (*)(_QWORD))&type metadata accessor for MediaLibraryPid);
}

uint64_t sub_10027BC08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFA8, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkRequest);
}

_QWORD *sub_10027BC1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10003F544(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 24 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 24);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[3 * v11 + 4])
          memmove(v16, a4 + 4, 24 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10027C9D4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10027BD48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_1005548E8, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodeOffer);
}

_QWORD *sub_10027BD5C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003D90C(a1, a2, a3, a4, &qword_10055DF98, &qword_10055DF50);
}

uint64_t sub_10027BD70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DFA0, (uint64_t (*)(_QWORD))&type metadata accessor for FeedUpdateRequest);
}

_QWORD *sub_10027BD84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10027B4AC(a1, a2, a3, a4, (uint64_t *)&unk_100559FC0, &qword_1005545A0);
}

uint64_t sub_10027BD98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_100555608, (uint64_t (*)(_QWORD))&type metadata accessor for MetricsData);
}

uint64_t sub_10027BDAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10003F544(&qword_100554928);
  v11 = *(_QWORD *)(sub_10003F544(&qword_100554930) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_10003F544(&qword_100554930);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10027CAC4(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_10027BFBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10003F544(&qword_10055DF90);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10027C2FC(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10027C0C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003D90C(a1, a2, a3, a4, (uint64_t *)&unk_100565930, &qword_10055DF30);
}

uint64_t sub_10027C0DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DF40, (uint64_t (*)(_QWORD))&type metadata accessor for URLTrackIdentifier);
}

uint64_t sub_10027C0F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10027AF20(a1, a2, a3, a4, &qword_10055DF38, (uint64_t (*)(_QWORD))&type metadata accessor for MediaIdentifier);
}

uint64_t sub_10027C104(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3, v5, v4, &type metadata for String);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10027C1F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      v8 = sub_10003F544(&qword_100553D30);
      swift_arrayInitWithCopy(a3, v6, v4, v8);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10027C2FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10027C3E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3, v5, v4, &type metadata for PresentableError);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10027C4D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v7 = a4 + 40 * a1 + 32;
  v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    v10 = sub_10003F544(a5);
    swift_arrayInitWithCopy(a3, v7, v5, v10);
    return v8;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10027C5E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3, v5, v4, &_s7EpisodeVN);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10027C6D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      v8 = sub_10003F544(&qword_10055DF60);
      swift_arrayInitWithCopy(a3, v6, v4, v8);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10027C7D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      v8 = sub_10003F544(&qword_10055DF80);
      swift_arrayInitWithCopy(a3, v6, v4, v8);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10027C8E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3, v5, v4, &_s17NewEpisodeSectionC13DBPodcastInfoVN);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10027C9D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v5;
  if (v6 >= v7 || v6 + 24 * v5 <= a3)
  {
    swift_arrayInitWithCopy(a3, v6, v5, a5);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10027CAC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = sub_10003F544(&qword_100554930);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v4;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3, v12, v4, v8);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10027CBE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 72);
  v13 = a4 + ((v11 + 32) & ~v11) + v12 * a1;
  v14 = v12 * v5;
  v15 = a3 + v14;
  v16 = v13 + v14;
  if (v13 >= v15 || v16 <= a3)
  {
    swift_arrayInitWithCopy(a3, v13, v5, v9);
    return v15;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10027CCF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int EnumCaseMultiPayload;
  unint64_t v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  _QWORD v19[3];
  _BYTE v20[8];
  unint64_t v21;
  unint64_t v22;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MoveOperationError(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10027E33C(v0, (uint64_t)v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v9 = 0xD000000000000012;
      sub_10027E0CC((uint64_t)v7);
    }
    else
    {
      v14 = *v7;
      v21 = 0;
      v22 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease(v22);
      v21 = 0xD000000000000013;
      v22 = 0x8000000100438930;
      swift_getErrorValue(v14, v20, v19);
      v15._countAndFlagsBits = Error.localizedDescription.getter(v19[1], v19[2]);
      object = v15._object;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(object);
      v17._countAndFlagsBits = 46;
      v17._object = (void *)0xE100000000000000;
      String.append(_:)(v17);
      swift_errorRelease(v14);
      return v21;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
    v21 = 0;
    v22 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(v22);
    v21 = 0xD00000000000002ALL;
    v22 = 0x8000000100438970;
    v11._countAndFlagsBits = URL.path.getter(v10);
    v12 = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v12);
    v13._countAndFlagsBits = 46;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v9 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

void sub_10027CF04()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(id *, __n128);
  uint64_t v7;
  __n128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  double v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  NSObject *v60;
  char *v61;
  os_log_type_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  NSString v95;
  double v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  NSURL *v104;
  void *v105;
  void *v106;
  NSURL *v107;
  void *v108;
  void *v109;
  unsigned int v110;
  id v111;
  void (*v112)(id *);
  uint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  os_log_type_t v126;
  char *v127;
  uint8_t *v128;
  NSObject *v129;
  void *v130;
  __n128 v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  NSObject *v145;
  uint64_t v146;
  id v147;
  char *v148;
  char *v149;
  uint64_t v150;
  _QWORD v151[3];
  char v152[23];
  char v153;
  id v154;
  char v155;
  uint64_t v156;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source];
  v3 = &v0[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_destination];
  v4 = type metadata accessor for URL(0);
  v5 = sub_100026844(&qword_10055E068, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v2, v3, v4, v5) & 1) != 0)
  {
    v6 = *(void (**)(id *, __n128))&v0[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    if (v6)
    {
      v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
      v156 = sub_10003F544(&qword_10055A088);
      v154 = 0;
      v155 = 0;
      v8 = swift_retain();
      v6(&v154, v8);
      sub_10002CA30((uint64_t)v6, v7);
      sub_10003D380(&v154);
    }
LABEL_4:
    sub_100044BF0();
    return;
  }
  v153 = 0;
  if (!URL.isPackagedMedia()())
  {
    v9 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL.path.getter(v9);
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    LODWORD(v11) = objc_msgSend(v9, "fileExistsAtPath:isDirectory:", v12, &v153, swift_bridgeObjectRelease(v11).n128_f64[0]);

    if (!(_DWORD)v11 || (v153 & 1) != 0)
    {
      v14 = static os_log_type_t.error.getter(v13);
      v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log];
      v16 = sub_10003F544(&qword_1005559A0);
      v17 = swift_allocObject(v16, 72, 7);
      *(_OWORD *)(v17 + 16) = xmmword_1003CA200;
      v18 = URL.path.getter(v17);
      v20 = v19;
      *(_QWORD *)(v17 + 56) = &type metadata for String;
      *(_QWORD *)(v17 + 64) = sub_10003E198();
      *(_QWORD *)(v17 + 32) = v18;
      *(_QWORD *)(v17 + 40) = v20;
      os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v15, "Serious error. URLSession returned a directory instead of file %{public}s", 73, 2, v17);
      swift_bridgeObjectRelease(v17);
      v21 = type metadata accessor for MoveOperationError(0);
      v22 = sub_100026844(&qword_10055E070, type metadata accessor for MoveOperationError, (uint64_t)&unk_1003D1808);
      v23 = swift_allocError(v21, v22, 0, 0);
      v25 = v24;
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v24, v2, v4);
      swift_storeEnumTagMultiPayload(v25, v21, 0);
      v26 = v23;
LABEL_30:
      sub_10037B65C(v26, 1);
      goto LABEL_31;
    }
  }
  v27 = (void *)objc_opt_self(NSFileManager);
  v28 = objc_msgSend(v27, "defaultManager");
  URL.path.getter(v28);
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  LODWORD(v30) = objc_msgSend(v28, "fileExistsAtPath:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v149 = v2;
  v147 = v27;
  if ((_DWORD)v30)
  {
    v33 = static os_log_type_t.error.getter(v32);
    v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log];
    v35 = sub_10003F544(&qword_1005559A0);
    v36 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1003CA200;
    v37 = URL.path.getter(v36);
    v39 = v38;
    *(_QWORD *)(v36 + 56) = &type metadata for String;
    v40 = sub_10003E198();
    *(_QWORD *)(v36 + 64) = v40;
    *(_QWORD *)(v36 + 32) = v37;
    *(_QWORD *)(v36 + 40) = v39;
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Invalid state. File already exists at the destination %{public}s", 64, 2, v36);
    swift_bridgeObjectRelease(v36);
    v41 = static os_log_type_t.default.getter();
    v144 = v35;
    v42 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v42 + 16) = xmmword_1003CA200;
    v43 = URL.path.getter(v42);
    *(_QWORD *)(v42 + 56) = &type metadata for String;
    *(_QWORD *)(v42 + 64) = v40;
    *(_QWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 40) = v44;
    os_log(_:dso:log:_:_:)(v41, &_mh_execute_header, v34, "Attempt to delete existing file at %{public}s", 45, 2, v42);
    v45 = objc_msgSend(v27, "defaultManager", swift_bridgeObjectRelease(v42).n128_f64[0]);
    URL.path.getter(v45);
    v47 = v46;
    v48 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v49 = swift_bridgeObjectRelease(v47).n128_u64[0];
    v154 = 0;
    LODWORD(v39) = objc_msgSend(v45, "removeItemAtPath:error:", v48, &v154, v49);

    v50 = v154;
    if ((_DWORD)v39)
    {
      v51 = v154;
    }
    else
    {
      v52 = v154;
      _convertNSErrorToError(_:)(v50);

      v54 = swift_willThrow(v53);
      v55 = static os_log_type_t.error.getter(v54);
      v56 = swift_allocObject(v144, 72, 7);
      *(_OWORD *)(v56 + 16) = xmmword_1003CA200;
      v57 = URL.path.getter(v56);
      *(_QWORD *)(v56 + 56) = &type metadata for String;
      *(_QWORD *)(v56 + 64) = v40;
      *(_QWORD *)(v56 + 32) = v57;
      *(_QWORD *)(v56 + 40) = v58;
      os_log(_:dso:log:_:_:)(v55, &_mh_execute_header, v34, "Failed to delete existing file at %{public}s", 44, 2, v56);
      swift_bridgeObjectRelease(v56);
      swift_errorRelease();
    }
    v2 = v149;
  }
  v59 = static os_log_type_t.default.getter();
  v60 = *(NSObject **)&v1[OBJC_IVAR____TtC8Podcasts17MoveFileOperation_log];
  v61 = v1;
  v62 = v59;
  v148 = v61;
  if (os_log_type_enabled(v60, v59))
  {
    v145 = v60;
    v63 = v61;
    v64 = swift_slowAlloc(22, -1);
    v65 = (void *)swift_slowAlloc(64, -1);
    v154 = v65;
    *(_DWORD *)v64 = 136315394;
    v66 = ((uint64_t (*)(void))URL.description.getter)();
    v68 = v67;
    v150 = sub_10003D274(v66, v67, (uint64_t *)&v154);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v64 + 4, v64 + 12);

    v69 = swift_bridgeObjectRelease(v68);
    *(_WORD *)(v64 + 12) = 2080;
    v70 = URL.description.getter(v69);
    v72 = v71;
    v150 = sub_10003D274(v70, v71, (uint64_t *)&v154);
    v2 = v149;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v64 + 14, v64 + 22);

    v60 = v145;
    swift_bridgeObjectRelease(v72);
    _os_log_impl((void *)&_mh_execute_header, v145, v62, "Copy file from %s to destination %s.", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v64, -1, -1);
  }
  else
  {

  }
  v73 = sub_1001431C0();
  if ((v74 & 1) != 0)
  {
    v126 = static os_log_type_t.error.getter(v73);
    if (os_log_type_enabled(v60, v126))
    {
      v127 = v61;
      v128 = (uint8_t *)swift_slowAlloc(12, -1);
      v129 = v60;
      v130 = (void *)swift_slowAlloc(32, -1);
      v154 = v130;
      v131.n128_u64[0] = 136446210;
      *(_DWORD *)v128 = 136446210;
      v132 = URL.description.getter(v131);
      v134 = v133;
      v150 = sub_10003D274(v132, v133, (uint64_t *)&v154);
      v2 = v149;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v128 + 4, v128 + 12);

      swift_bridgeObjectRelease(v134);
      _os_log_impl((void *)&_mh_execute_header, v129, v126, "Failed to copy file to destination %{public}s", v128, 0xCu);
      swift_arrayDestroy(v130, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v130, -1, -1);
      swift_slowDealloc(v128, -1, -1);
    }
    v135 = type metadata accessor for MoveOperationError(0);
    v136 = sub_100026844(&qword_10055E070, type metadata accessor for MoveOperationError, (uint64_t)&unk_1003D1808);
    v137 = swift_allocError(v135, v136, 0, 0);
    v139 = v138;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v138, v2, v4);
    swift_storeEnumTagMultiPayload(v139, v135, 1);
    v26 = v137;
    goto LABEL_30;
  }
  v99 = v73;
  v100 = static os_log_type_t.default.getter();
  v101 = sub_10003F544(&qword_1005559A0);
  v102 = swift_allocObject(v101, 72, 7);
  *(_OWORD *)(v102 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v102 + 56) = &type metadata for UInt64;
  *(_QWORD *)(v102 + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(v102 + 32) = v99;
  os_log(_:dso:log:_:_:)(v100, &_mh_execute_header, v60, "File of size %{iec-bytes}d to be copied.", 40, 2, v102);
  v103 = objc_msgSend(v147, "defaultManager", swift_bridgeObjectRelease(v102).n128_f64[0]);
  URL._bridgeToObjectiveC()(v104);
  v106 = v105;
  URL._bridgeToObjectiveC()(v107);
  v109 = v108;
  v154 = 0;
  v110 = objc_msgSend(v103, "moveItemAtURL:toURL:error:", v106, v108, &v154);

  v111 = v154;
  if (v110)
  {
    v112 = *(void (**)(id *))&v148[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
    if (v112)
    {
      v113 = *(_QWORD *)&v148[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
      v156 = sub_10003F544(&qword_10055A088);
      v154 = 0;
      v155 = 0;
      v114 = v111;
      sub_10002CA20((uint64_t)v112, v113);
      v112(&v154);
      sub_10002CA30((uint64_t)v112, v113);
      sub_10003D380(&v154);
    }
    else
    {
      v143 = v154;
    }
    goto LABEL_4;
  }
  v140 = v154;
  v141 = _convertNSErrorToError(_:)(v111);

  swift_willThrow(v142);
  v146 = v141;
  swift_getErrorValue(v141, v152, v151);
  v75 = Error.localizedDescription.getter(v151[1], v151[2]);
  v77 = v76;
  v78 = static os_log_type_t.error.getter(v75);
  v79 = sub_10003F544(&qword_1005559A0);
  v80 = v60;
  v81 = swift_allocObject(v79, 152, 7);
  *(_OWORD *)(v81 + 16) = xmmword_1003CA240;
  v82 = URL.path.getter(v81);
  v84 = v83;
  *(_QWORD *)(v81 + 56) = &type metadata for String;
  v85 = sub_10003E198();
  *(_QWORD *)(v81 + 64) = v85;
  *(_QWORD *)(v81 + 32) = v82;
  *(_QWORD *)(v81 + 40) = v84;
  v86 = URL.path.getter(v85);
  *(_QWORD *)(v81 + 96) = &type metadata for String;
  *(_QWORD *)(v81 + 104) = v85;
  *(_QWORD *)(v81 + 72) = v86;
  *(_QWORD *)(v81 + 80) = v87;
  *(_QWORD *)(v81 + 136) = &type metadata for String;
  *(_QWORD *)(v81 + 144) = v85;
  *(_QWORD *)(v81 + 112) = v75;
  *(_QWORD *)(v81 + 120) = v77;
  os_log(_:dso:log:_:_:)(v78, &_mh_execute_header, v80, "Failed to copy file from %{public}s to %{public}s error: %{public}s", 67, 2, v81);
  swift_bridgeObjectRelease(v81);
  v88 = static os_log_type_t.default.getter();
  v89 = swift_allocObject(v79, 72, 7);
  *(_OWORD *)(v89 + 16) = xmmword_1003CA200;
  v90 = URL.description.getter((__n128)xmmword_1003CA200);
  *(_QWORD *)(v89 + 56) = &type metadata for String;
  *(_QWORD *)(v89 + 64) = v85;
  *(_QWORD *)(v89 + 32) = v90;
  *(_QWORD *)(v89 + 40) = v91;
  os_log(_:dso:log:_:_:)(v88, &_mh_execute_header, v80, "Delete file from source %@", 26, 2, v89);
  v92 = objc_msgSend(v147, "defaultManager", swift_bridgeObjectRelease(v89).n128_f64[0]);
  URL.path.getter(v92);
  v94 = v93;
  v95 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v96 = swift_bridgeObjectRelease(v94).n128_u64[0];
  v154 = 0;
  LODWORD(v89) = objc_msgSend(v92, "removeItemAtPath:error:", v95, &v154, v96);

  v97 = v154;
  if ((_DWORD)v89)
  {
    v98 = v154;
  }
  else
  {
    v115 = v154;
    _convertNSErrorToError(_:)(v97);

    v117 = swift_willThrow(v116);
    v118 = static os_log_type_t.error.getter(v117);
    v119 = swift_allocObject(v79, 72, 7);
    *(_OWORD *)(v119 + 16) = xmmword_1003CA200;
    v120 = URL.path.getter(v119);
    *(_QWORD *)(v119 + 56) = &type metadata for String;
    *(_QWORD *)(v119 + 64) = v85;
    *(_QWORD *)(v119 + 32) = v120;
    *(_QWORD *)(v119 + 40) = v121;
    os_log(_:dso:log:_:_:)(v118, &_mh_execute_header, v80, "Failed to delete existing from source %{public}s", 48, 2, v119);
    swift_bridgeObjectRelease(v119);
    swift_errorRelease();
  }
  v122 = type metadata accessor for MoveOperationError(0);
  v123 = sub_100026844(&qword_10055E070, type metadata accessor for MoveOperationError, (uint64_t)&unk_1003D1808);
  v124 = swift_allocError(v122, v123, 0, 0);
  *v125 = v146;
  swift_storeEnumTagMultiPayload(v125, v122, 2);
  swift_errorRetain();
  sub_10037B65C(v124, 1);
  swift_errorRelease();
LABEL_31:
  swift_errorRelease();
}

void sub_10027DBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_10003A858(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input + 8));
  v1 = v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_destination;
  v2 = type metadata accessor for URL(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_source, v2);

}

uint64_t sub_10027DCEC()
{
  return type metadata accessor for MoveFileOperation(0);
}

uint64_t type metadata accessor for MoveFileOperation(uint64_t a1)
{
  return sub_10003EAF4(a1, (uint64_t *)&unk_10055E020, (uint64_t)&nominal type descriptor for MoveFileOperation);
}

uint64_t sub_10027DD08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v4 = "\t";
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, &v4, a1 + 368);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10027DD90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = v1 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts17MoveFileOperation_input);
  *(_QWORD *)a1 = v3;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_10003A8DC(v3, v4);
}

uint64_t type metadata accessor for MoveOperationError(uint64_t a1)
{
  return sub_10003EAF4(a1, qword_10055E0E8, (uint64_t)&nominal type descriptor for MoveOperationError);
}

uint64_t *sub_10027DDC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = *a2;
      swift_errorRetain(v13);
      *a1 = v13;
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_10027DEBC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
    return swift_errorRelease(*a1);
  if (result <= 1)
  {
    v4 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

_QWORD *sub_10027DF24(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = *a2;
    swift_errorRetain(v11);
    *a1 = v11;
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

uint64_t *sub_10027DFF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10027E0CC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *a2;
      swift_errorRetain(v11);
      *a1 = v11;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10027E0CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoveOperationError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10027E108(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10027E1CC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10027E0CC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10027E2A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10027E310()
{
  return sub_100026844(&qword_10055E070, type metadata accessor for MoveOperationError, (uint64_t)&unk_1003D1808);
}

uint64_t sub_10027E33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoveOperationError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10027E380()
{
  sub_10027E458();
}

uint64_t sub_10027E39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;

  v5 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x180);
  v6 = type metadata accessor for OperationResult(0, *(_QWORD *)((swift_isaMask & *v4) + 0x170), a3, a4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_release(*(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x188) + 8));
}

uint64_t sub_10027E410()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10027E434()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10027E458()
{
  _swift_stdlib_reportUnimplementedInitializer("Podcasts.AsyncBlockOperation", 28, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10027E484()
{
  uint64_t v0;

  return StaticString.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t RunOnceMigrationStep.migrationKey.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 8))();
  return StaticString.description.getter(v2, v3, v4);
}

uint64_t RunOnceMigrationStep.requiresMigration.getter(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  LODWORD(v6) = objc_msgSend(v4, "BOOLForKey:", v7);

  return v6 ^ 1;
}

void sub_10027E540()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 17))
    v1 = 256;
  else
    v1 = 0;
  sub_10027E570(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), v1 | *(unsigned __int8 *)(v0 + 16));
}

void sub_10027E570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  NSString v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = StaticString.description.getter(a1, a2, a3);
  v13 = v12;
  v51 = v11;
  v52 = v12;
  swift_bridgeObjectRetain(v12);
  v14._countAndFlagsBits = 0x726F7272652ELL;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15 = v52;
  sub_10025173C();
  if (v3)
  {
    v49 = v7;
    v50 = v10;
    v48 = v8;
    v16 = (void *)objc_opt_self(NSUserDefaults);
    v17 = objc_msgSend(v16, "standardUserDefaults");
    StaticString.description.getter(a1, a2, a3);
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "setBool:forKey:", 0, v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v21 = objc_msgSend(v16, "standardUserDefaults");
    v51 = v3;
    swift_errorRetain(v3);
    v22 = sub_10003F544((uint64_t *)&unk_10055A340);
    String.init<A>(describing:)(&v51, v22);
    v24 = v23;
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "setObject:forKey:", v25, v26, swift_bridgeObjectRelease(v15).n128_f64[0]);

    if ((a3 & 0x100) != 0)
    {
      v35 = v50;
      static Logger.database.getter(v27);
      swift_errorRetain(v3);
      v36 = swift_errorRetain(v3);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc(22, -1);
        v40 = swift_slowAlloc(64, -1);
        v51 = v40;
        *(_DWORD *)v39 = 136315394;
        v41 = _typeName(_:qualified:)(&type metadata for UberArtworkResetMigrator, 0);
        v43 = v42;
        v53 = sub_10003D274(v41, v42, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v39 + 4, v39 + 12);
        swift_bridgeObjectRelease(v43);
        *(_WORD *)(v39 + 12) = 2080;
        v53 = v3;
        swift_errorRetain(v3);
        v44 = String.init<A>(describing:)(&v53, v22);
        v46 = v45;
        v53 = sub_10003D274(v44, v45, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v39 + 14, v39 + 22);
        swift_bridgeObjectRelease(v46);
        swift_errorRelease(v3);
        swift_errorRelease(v3);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Failed migration step silently: %s: %s.", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

        swift_errorRelease(v3);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
      }
      else
      {
        swift_errorRelease(v3);
        swift_errorRelease(v3);
        swift_errorRelease(v3);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      }
    }
    else
    {
      swift_willThrow(v27);
    }
  }
  else
  {
    v28 = (void *)objc_opt_self(NSUserDefaults);
    v29 = objc_msgSend(v28, "standardUserDefaults");
    StaticString.description.getter(a1, a2, a3);
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setBool:forKey:", 1, v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

    v33 = objc_msgSend(v28, "standardUserDefaults");
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "removeObjectForKey:", v34, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RunOnceMigrationStep.performMigration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t DynamicType;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  uint64_t v53;
  NSString v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v4 = v2;
  v5 = v1;
  v6 = v0;
  v61 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v59 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  v12 = v11(v6, v5);
  v14 = v13;
  v63 = v12;
  v64 = v13;
  swift_bridgeObjectRetain(v13);
  v15._countAndFlagsBits = 0x726F7272652ELL;
  v15._object = (void *)0xE600000000000000;
  String.append(_:)(v15);
  v16 = swift_bridgeObjectRelease(v14);
  v17 = v64;
  v62 = v63;
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 32))(v6, v5, v16);
  if (v3)
  {
    v57 = v9;
    v58 = v8;
    v18 = (void *)objc_opt_self(NSUserDefaults);
    v19 = objc_msgSend(v18, "standardUserDefaults");
    v11(v6, v5);
    v21 = v20;
    v22 = v17;
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "setBool:forKey:", 0, v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

    v24 = objc_msgSend(v18, "standardUserDefaults");
    v63 = v3;
    swift_errorRetain();
    v25 = sub_10003F544((uint64_t *)&unk_10055A340);
    String.init<A>(describing:)(&v63, v25);
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setObject:forKey:", v28, v29, swift_bridgeObjectRelease(v22).n128_f64[0]);

    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v6, v5);
    if ((v30 & 1) != 0)
    {
      v62 = v25;
      v31 = v60;
      static Logger.database.getter(v30);
      v32 = v61;
      v33 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v4, v6);
      swift_errorRetain();
      v34 = swift_errorRetain();
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.error.getter(v35);
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc(22, -1);
        v56 = swift_slowAlloc(64, -1);
        v63 = v56;
        *(_DWORD *)v37 = 136315394;
        DynamicType = swift_getDynamicType(v33, v6, 0);
        v39 = _typeName(_:qualified:)(DynamicType, 0);
        v41 = v40;
        v65 = sub_10003D274(v39, v40, &v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v37 + 4, v37 + 12);
        v42 = swift_bridgeObjectRelease(v41);
        (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v33, v6, v42);
        *(_WORD *)(v37 + 12) = 2080;
        v65 = v3;
        swift_errorRetain();
        v43 = String.init<A>(describing:)(&v65, v62);
        v45 = v44;
        v65 = sub_10003D274(v43, v44, &v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v37 + 14, v37 + 22);
        swift_bridgeObjectRelease(v45);
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed migration step silently: %s: %s.", (uint8_t *)v37, 0x16u);
        v46 = v56;
        swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v37, -1, -1);

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v6);
        swift_errorRelease();
        swift_errorRelease();

      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
    }
    else
    {
      swift_willThrow(v30);
    }
  }
  else
  {
    v47 = (void *)objc_opt_self(NSUserDefaults);
    v48 = objc_msgSend(v47, "standardUserDefaults");
    v11(v6, v5);
    v50 = v49;
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v48, "setBool:forKey:", 1, v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

    v52 = objc_msgSend(v47, "standardUserDefaults");
    v53 = v17;
    v54 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "removeObjectForKey:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

  }
}

id RunOnceMigrationStep.userDefaults.getter()
{
  return objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
}

uint64_t sub_10027EF38(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _typeName(_:qualified:)(v1, 0);
}

ValueMetadata *type metadata accessor for LegacyPlayEpisodeIntentImplementation()
{
  return &type metadata for LegacyPlayEpisodeIntentImplementation;
}

uint64_t sub_10027EF6C()
{
  return sub_100026844((unint64_t *)&qword_10055E1E0, (uint64_t (*)(uint64_t))&type metadata accessor for PlayEpisodeIntent, (uint64_t)&protocol conformance descriptor for PlayEpisodeIntent);
}

uint64_t sub_10027EF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t PodcastForEpisodeIntent;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for EpisodeEntity(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  PodcastForEpisodeIntent = type metadata accessor for FetchPodcastForEpisodeIntent(0);
  v4[9] = PodcastForEpisodeIntent;
  v8 = *(_QWORD *)(PodcastForEpisodeIntent - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10027F024, 0, 0);
}

uint64_t sub_10027F024()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v4 = (_QWORD *)v0[3];
  v5 = v4[3];
  v6 = v4[4];
  v7 = sub_10003A834(v4, v5);
  v8 = PlayEpisodeIntent.episode.getter(v7);
  v9 = EpisodeEntity.adamID.getter(v8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  FetchPodcastForEpisodeIntent.init(episodeAdamID:)(v9);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[12] = v10;
  v11 = sub_100026844(&qword_10055E258, (uint64_t (*)(uint64_t))&type metadata accessor for FetchPodcastForEpisodeIntent, (uint64_t)&protocol conformance descriptor for FetchPodcastForEpisodeIntent);
  *v10 = v0;
  v10[1] = sub_10027F114;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[11], v0[5], v0[9], v11, v5, v6);
}

uint64_t sub_10027F114()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 88);
  v2 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 72);
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *v1;
  *(_QWORD *)(v6 + 104) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_10027F1C4, 0, 0);
  v8 = *(_QWORD *)(v6 + 64);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10027F1C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t EpisodeOffersIntent;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for EpisodeEntity(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  EpisodeOffersIntent = type metadata accessor for FetchEpisodeOffersIntent(0);
  v4[9] = EpisodeOffersIntent;
  v8 = *(_QWORD *)(EpisodeOffersIntent - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10027F290, 0, 0);
}

uint64_t sub_10027F290()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  uint64_t v13;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v4 = (_QWORD *)v0[3];
  v5 = v4[3];
  v6 = v4[4];
  sub_10003A834(v4, v5);
  v7 = sub_10003F544(&qword_1005548E0);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1003CA200;
  v9 = PlayEpisodeIntent.episode.getter(v8);
  v10 = EpisodeEntity.adamID.getter(v9);
  v11.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v8 + 32) = v10;
  FetchEpisodeOffersIntent.init(adamIDs:)(v11);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)[1]);
  v0[12] = v12;
  v13 = sub_100026844((unint64_t *)&unk_10055B8C0, (uint64_t (*)(uint64_t))&type metadata accessor for FetchEpisodeOffersIntent, (uint64_t)&protocol conformance descriptor for FetchEpisodeOffersIntent);
  *v12 = v0;
  v12[1] = sub_10027F3B4;
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v0[2], v0[11], v0[5], v0[9], v13, v5, v6);
}

uint64_t sub_10027F3B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 88);
  v2 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(*v1 + 72);
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *v1;
  *(_QWORD *)(v6 + 104) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    return swift_task_switch(sub_100281B3C, 0, 0);
  v8 = *(_QWORD *)(v6 + 64);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10027F464(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD v9[2];

  sub_10003F544(&qword_10055B790);
  __chkstk_darwin();
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  memset(v9, 0, sizeof(v9));
  sub_10025EB28(a2, a3, (uint64_t)v6, (uint64_t)v9, 0, 0, 0, 1, 0, 1, 0, 1, 0);
  sub_100007A28((uint64_t)v9, (uint64_t *)&unk_100552300);
  return sub_100007A28((uint64_t)v6, &qword_10055B790);
}

void sub_10027F568(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_10003F544((uint64_t *)&unk_1005548D0);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v4 + 32) = EpisodeEntity.preferredIdentifier()();
  *(_QWORD *)(v4 + 40) = v5;
  *(_BYTE *)(v4 + 48) = v6;
  v7 = NSManagedObjectContext.episodes(for:sortDescriptors:limit:)(v4, _swiftEmptyArrayStorage, 0, 1);
  swift_bridgeObjectRelease(v4);
  if (!v1)
  {
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v11 = v7;
      else
        v11 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v12 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v7);
      if (v12)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if ((v7 & 0xC000000000000001) != 0)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
      }
      else
      {
        if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v8 = *(id *)(v7 + 32);
      }
      v9 = v8;
      v10 = (uint64_t)objc_msgSend(v8, "entitlementState", swift_bridgeObjectRelease(v7).n128_f64[0]);

      goto LABEL_13;
    }
    swift_bridgeObjectRelease(v7);
    v10 = 2;
LABEL_13:
    *a1 = v10;
  }
}

uint64_t sub_10027F6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10055E1F0 + dword_10055E1F0);
  v6 = (_QWORD *)swift_task_alloc(unk_10055E1F4);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1001B8890;
  return v8(a2, a3);
}

uint64_t sub_10027F724(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EpisodeEntity(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v2[10] = v7;
  v2[11] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10027F7B0, 0, 0);
}

uint64_t sub_10027F7B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[8];
  v4 = v0[9];
  v5 = v0[6];
  v16 = v0[7];
  v7 = (void *)v0[4];
  v6 = v0[5];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[3], v3);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_1004BA640, v9 + v2, v8 | 7);
  v0[12] = v10;
  *(_QWORD *)(v10 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v16, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
  v11 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v12 = v7;
  v13 = (_QWORD *)swift_task_alloc(v11);
  v0[13] = v13;
  type metadata accessor for MTEpisodeEntitlementState(0);
  *v13 = v0;
  v13[1] = sub_10027F8D0;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v0[7], sub_100281AF0, v10, v14);
}

uint64_t sub_10027F8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_10027F9AC;
  else
    v7 = sub_10027F964;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10027F964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_10027F9AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027F9EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2[227] = a2;
  v2[221] = a1;
  v3 = type metadata accessor for EpisodeOffer(0);
  v2[233] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[239] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[245] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[251] = swift_task_alloc(v6);
  v2[257] = swift_task_alloc(v6);
  v7 = type metadata accessor for PlayEpisodeIntent(0);
  v2[258] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[259] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v2[260] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[261] = swift_task_alloc(v10);
  v2[262] = swift_task_alloc(v10);
  v11 = type metadata accessor for DispatchWorkgroup(0);
  v2[263] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[264] = v12;
  v2[265] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  v2[266] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[267] = v14;
  v2[268] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EpisodeEntity(0);
  v2[269] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[270] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[271] = swift_task_alloc(v17);
  v2[272] = swift_task_alloc(v17);
  v18 = type metadata accessor for EpisodeController();
  v19 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v2[273] = v19;
  *v19 = v2;
  v19[1] = sub_10027FB68;
  return BaseObjectGraph.inject<A>(_:)(v2 + 215, v18, v18);
}

uint64_t sub_10027FB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 2184);
  *(_QWORD *)(*(_QWORD *)v1 + 2192) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100281274;
  else
    v3 = sub_10027FBCC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10027FBCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[275] = v0[215];
  v1 = sub_10003F544((uint64_t *)&unk_10055B8B0);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[276] = v2;
  *v2 = v0;
  v2[1] = sub_10027FC4C;
  return BaseObjectGraph.inject<A>(_:)(v0 + 177, v1, v1);
}

uint64_t sub_10027FC4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(*v1 + 2208);
  v3 = *v1;
  *(_QWORD *)(v3 + 2216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100281314, 0, 0);
  v5 = sub_10003F544(&qword_10055E200);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v3 + 2224) = v6;
  *v6 = v3;
  v6[1] = sub_10027FD0C;
  return BaseObjectGraph.inject<A>(_:)(v3 + 1624, v5, v5);
}

uint64_t sub_10027FD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 2224);
  *(_QWORD *)(*(_QWORD *)v1 + 2232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002813BC;
  else
    v3 = sub_10027FD70;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10027FD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 2176);
  v2 = *(_QWORD *)(v0 + 2160);
  v3 = *(_QWORD *)(v0 + 2152);
  v4 = *(_QWORD *)(v0 + 1624);
  *(_QWORD *)(v0 + 2240) = v4;
  v5 = ((uint64_t (*)(void))PlayEpisodeIntent.episode.getter)();
  v6 = EpisodeEntity.uuid.getter(v5);
  v8 = v7;
  *(_QWORD *)(v0 + 2248) = v6;
  *(_QWORD *)(v0 + 2256) = v7;
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 2264) = v9;
  v10 = v9(v1, v3);
  if (v8)
  {
    PlayEpisodeIntent.episode.getter(v10);
    ObjectType = swift_getObjectType(v4, v11);
    j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
    v13 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
    *(_QWORD *)(v0 + 2272) = v13;
    *v13 = v0;
    v13[1] = sub_100280038;
    return NSManagedObjectContextProvider.managedObjectContext(for:)(*(_QWORD *)(v0 + 2144), ObjectType);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 2096);
    v32 = *(_QWORD *)(v0 + 2088);
    v16 = *(_QWORD *)(v0 + 2080);
    v17 = *(_QWORD *)(v0 + 2072);
    v18 = *(_QWORD *)(v0 + 2064);
    v19 = *(_QWORD *)(v0 + 1816);
    v20 = *(_QWORD *)(v0 + 1768);
    v31 = v20;
    sub_10000A520(v0 + 1416, v0 + 1336);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v30(v15, v20, v18);
    v21 = *(unsigned __int8 *)(v17 + 80);
    v22 = (v21 + 56) & ~v21;
    v29 = v21 | 7;
    v23 = (v16 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_1004BA5A0, v23 + 8, v21 | 7);
    *(_QWORD *)(v0 + 2328) = v24;
    sub_10002099C((__int128 *)(v0 + 1336), v24 + 16);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
    v25(v24 + v22, v15, v18);
    *(_QWORD *)(v24 + v23) = v19;
    swift_retain();
    swift_retain();
    v26 = type metadata accessor for ServerPodcastBase(255);
    swift_asyncLet_begin(v0 + 656, 0, v26, &unk_10055E210, v24, v0 + 1576);
    sub_10000A520(v0 + 1416, v0 + 1496);
    v30(v32, v31, v18);
    v27 = swift_allocObject(&unk_1004BA5C8, v23 + 8, v29);
    *(_QWORD *)(v0 + 2336) = v27;
    sub_10002099C((__int128 *)(v0 + 1496), v27 + 16);
    v25(v27 + v22, v32, v18);
    *(_QWORD *)(v27 + v23) = v19;
    swift_retain();
    swift_retain();
    v28 = sub_10003CA40(&qword_10055E228);
    swift_asyncLet_begin(v0 + 16, 0, v28, &unk_10055E220, v27, v0 + 1672);
    return swift_asyncLet_get_throwing(v0 + 16, v0 + 1672, sub_100280594, v0 + 1584);
  }
}

uint64_t sub_100280038(uint64_t a1)
{
  uint64_t **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v9;

  v3 = (*v1)[284];
  v4 = (*v1)[268];
  v5 = (*v1)[267];
  v6 = (*v1)[266];
  v9 = *v1;
  v9[285] = a1;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v7 = (uint64_t **)swift_task_alloc(dword_10055E24C);
  v9[286] = (uint64_t)v7;
  *v7 = v9;
  v7[1] = (uint64_t *)sub_1002800D8;
  return sub_10027F724(v9[271], a1);
}

uint64_t sub_1002800D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 2288);
  *(_QWORD *)(*(_QWORD *)v2 + 2296) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[285];
  v7 = (void (*)(uint64_t, uint64_t))v4[283];
  if (v1)
  {
    v8 = v4[282];
    v7(v4[271], v4[269]);

    swift_bridgeObjectRelease(v8);
    v9 = sub_100280380;
  }
  else
  {
    v10 = v4[271];
    v11 = v4[269];

    v4[288] = a1;
    v7(v10, v11);
    v9 = sub_100280190;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100280190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*(_QWORD *)(v0 + 2304) > 1uLL)
  {
    v8 = *(_QWORD *)(v0 + 2240);
    v9 = *(_QWORD *)(v0 + 2200);
    v10 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 2256));
    v11 = type metadata accessor for PlaybackController.FairPlayKeyServerError(0, v10);
    v12 = sub_100026844(&qword_10055B880, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackController.FairPlayKeyServerError, (uint64_t)&protocol conformance descriptor for PlaybackController.FairPlayKeyServerError);
    swift_allocError(v11, v12, 0, 0);
    v14 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, enum case for PlaybackController.FairPlayKeyServerError.notEntitled(_:), v11);
    swift_willThrow(v14);
    swift_release(v9);
    swift_unknownObjectRelease(v8);
    sub_10003D380((_QWORD *)(v0 + 1416));
    v15 = *(_QWORD *)(v0 + 2168);
    v16 = *(_QWORD *)(v0 + 2144);
    v17 = *(_QWORD *)(v0 + 2120);
    v18 = *(_QWORD *)(v0 + 2096);
    v19 = *(_QWORD *)(v0 + 2088);
    v20 = *(_QWORD *)(v0 + 2056);
    v21 = *(_QWORD *)(v0 + 2008);
    swift_task_dealloc(*(_QWORD *)(v0 + 2176));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 2256);
    v2 = *(_QWORD *)(v0 + 2248);
    v3 = *(_QWORD *)(v0 + 2200);
    static DispatchWorkgroup.swiftConcurrency.getter();
    v4 = (_QWORD *)swift_allocObject(&unk_1004BA618, 40, 7);
    *(_QWORD *)(v0 + 2312) = v4;
    v4[2] = v3;
    v4[3] = v2;
    v4[4] = v1;
    v5 = async function pointer to DispatchWorkgroup.runThreadBlocking<A>(operation:)[1];
    swift_retain();
    swift_bridgeObjectRetain(v1);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 2320) = v6;
    *v6 = v0;
    v6[1] = sub_100280440;
    return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
  }
}

uint64_t sub_100280380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v1);
  sub_10003D380((_QWORD *)(v0 + 1416));
  v2 = *(_QWORD *)(v0 + 2168);
  v3 = *(_QWORD *)(v0 + 2144);
  v4 = *(_QWORD *)(v0 + 2120);
  v5 = *(_QWORD *)(v0 + 2096);
  v6 = *(_QWORD *)(v0 + 2088);
  v7 = *(_QWORD *)(v0 + 2056);
  v8 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100280440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 2312);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 2120);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 2112);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 2104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 2320));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_1002804C4, 0, 0);
}

uint64_t sub_1002804C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 2256);
  v2 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  sub_10003D380((_QWORD *)(v0 + 1416));
  v3 = *(_QWORD *)(v0 + 2168);
  v4 = *(_QWORD *)(v0 + 2144);
  v5 = *(_QWORD *)(v0 + 2120);
  v6 = *(_QWORD *)(v0 + 2096);
  v7 = *(_QWORD *)(v0 + 2088);
  v8 = *(_QWORD *)(v0 + 2056);
  v9 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100280594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 2344) = v0;
  if (v0)
    v2 = sub_100281470;
  else
    v2 = sub_1002805BC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002805BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = *(_QWORD *)(v0 + 1672);
  if (!*(_QWORD *)(v1 + 16))
  {
    v10 = v0 + 1456;
    v11 = type metadata accessor for PlaybackController.PlayerError(0);
    v12 = sub_100026844(&qword_10055E240, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackController.PlayerError, (uint64_t)&protocol conformance descriptor for PlaybackController.PlayerError);
    *(_QWORD *)(v0 + 2400) = swift_allocError(v11, v12, 0, 0);
    v14 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, enum case for PlaybackController.PlayerError.noInternet(_:), v11);
    swift_willThrow(v14);
    v15 = sub_10028111C;
    return swift_asyncLet_finish(v0 + 16, v0 + 1672, v15, v10);
  }
  v2 = *(_QWORD *)(v0 + 2056);
  v3 = *(_QWORD *)(v0 + 1912);
  v4 = *(_QWORD *)(v0 + 1864);
  v5 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 2408) = v5;
  v6 = v1 + ((v5 + 32) & ~(unint64_t)v5);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 2352) = v7;
  v8 = v7(v2, v6, v4);
  if (EpisodeOffer.priceType.getter(v8) == 2)
    return swift_asyncLet_get_throwing(v0 + 656, v0 + 1576, sub_100280890, v0 + 1920);
  if ((sub_10034FCF0() & 1) != 0)
  {
    v10 = v0 + 1824;
    v16 = *(_QWORD *)(v0 + 2056);
    v17 = *(_QWORD *)(v0 + 1912);
    v18 = *(_QWORD *)(v0 + 1864);
    v19 = type metadata accessor for PlaybackIntent.ValidationError(0);
    v20 = sub_100026844((unint64_t *)&unk_10055E230, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackIntent.ValidationError, (uint64_t)&protocol conformance descriptor for PlaybackIntent.ValidationError);
    *(_QWORD *)(v0 + 2392) = swift_allocError(v19, v20, 0, 0);
    v22 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, enum case for PlaybackIntent.ValidationError.restricted(_:), v19);
    swift_willThrow(v22);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v15 = sub_100280FC4;
    return swift_asyncLet_finish(v0 + 16, v0 + 1672, v15, v10);
  }
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2352);
  v24 = *(unsigned __int8 *)(v0 + 2408);
  v25 = *(_QWORD *)(v0 + 2200);
  v26 = *(_QWORD *)(v0 + 2056);
  v27 = *(_QWORD *)(v0 + 2008);
  v28 = *(_QWORD *)(v0 + 1960);
  v29 = *(_QWORD *)(v0 + 1912);
  v30 = *(_QWORD *)(v0 + 1864);
  static DispatchWorkgroup.swiftConcurrency.getter();
  v23(v27, v26, v30);
  v31 = (v24 + 24) & ~v24;
  v32 = swift_allocObject(&unk_1004BA5F0, v28 + v31, v24 | 7);
  *(_QWORD *)(v0 + 2376) = v32;
  *(_QWORD *)(v32 + 16) = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v32 + v31, v27, v30);
  v33 = async function pointer to DispatchWorkgroup.runThreadBlocking<A>(operation:)[1];
  swift_retain();
  v34 = (_QWORD *)swift_task_alloc(v33);
  *(_QWORD *)(v0 + 2384) = v34;
  *v34 = v0;
  v34[1] = sub_100280D84;
  return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
}

uint64_t sub_100280890()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 2360) = v0;
  if (v0)
    v2 = sub_1002815E0;
  else
    v2 = sub_1002808B8;
  return swift_task_switch(v2, 0, 0);
}

void sub_1002808B8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(id *)(v0 + 1576);
  v2 = ServerPodcastBase.relationships.getter(v1);

  if (!v2)
    goto LABEL_17;
  v4 = PodcastRelationships.channel.getter();
  v5 = swift_release(v2);
  if (!v4)
    goto LABEL_17;
  v6 = PodcastChannelRelationshipContainer.data.getter(v5);
  swift_release(v4);
  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_16;
  }
  if (v6 < 0)
    v33 = v6;
  else
    v33 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v6);
  if (!v34)
  {
LABEL_16:
    v3 = swift_bridgeObjectRelease(v6);
LABEL_17:
    v9 = 0;
    goto LABEL_18;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_8:
    v8 = v7;
    swift_bridgeObjectRelease(v6);
    v9 = v8;
    v11 = ServerChannel.attributes.getter(v10);

    LOBYTE(v8) = ChannelAttributes.isSubscribed.getter();
    swift_release(v11);
    if ((v8 & 1) != 0)
    {

      if ((sub_10034FCF0() & 1) == 0)
      {
        v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2352);
        v22 = *(unsigned __int8 *)(v0 + 2408);
        v23 = *(_QWORD *)(v0 + 2200);
        v24 = *(_QWORD *)(v0 + 2056);
        v25 = *(_QWORD *)(v0 + 2008);
        v26 = *(_QWORD *)(v0 + 1960);
        v27 = *(_QWORD *)(v0 + 1912);
        v28 = *(_QWORD *)(v0 + 1864);
        static DispatchWorkgroup.swiftConcurrency.getter();
        v21(v25, v24, v28);
        v29 = (v22 + 24) & ~v22;
        v30 = swift_allocObject(&unk_1004BA5F0, v26 + v29, v22 | 7);
        *(_QWORD *)(v0 + 2376) = v30;
        *(_QWORD *)(v30 + 16) = v23;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30 + v29, v25, v28);
        v31 = async function pointer to DispatchWorkgroup.runThreadBlocking<A>(operation:)[1];
        swift_retain();
        v32 = (_QWORD *)swift_task_alloc(v31);
        *(_QWORD *)(v0 + 2384) = v32;
        *v32 = v0;
        v32[1] = sub_100280D84;
        DispatchWorkgroup.runThreadBlocking<A>(operation:)();
        return;
      }
      v12 = v0 + 1824;
      v13 = *(_QWORD *)(v0 + 2056);
      v14 = *(_QWORD *)(v0 + 1912);
      v15 = *(_QWORD *)(v0 + 1864);
      v16 = type metadata accessor for PlaybackIntent.ValidationError(0);
      v17 = sub_100026844((unint64_t *)&unk_10055E230, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackIntent.ValidationError, (uint64_t)&protocol conformance descriptor for PlaybackIntent.ValidationError);
      *(_QWORD *)(v0 + 2392) = swift_allocError(v16, v17, 0, 0);
      v19 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, enum case for PlaybackIntent.ValidationError.restricted(_:), v16);
      swift_willThrow(v19);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      v20 = sub_100280FC4;
      goto LABEL_19;
    }
LABEL_18:
    v12 = v0 + 1776;
    v35 = *(_QWORD *)(v0 + 2056);
    v36 = *(_QWORD *)(v0 + 1912);
    v37 = *(_QWORD *)(v0 + 1864);
    v38 = type metadata accessor for PlaybackController.FairPlayKeyServerError(0, v3);
    v39 = sub_100026844(&qword_10055B880, (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackController.FairPlayKeyServerError, (uint64_t)&protocol conformance descriptor for PlaybackController.FairPlayKeyServerError);
    *(_QWORD *)(v0 + 2368) = swift_allocError(v38, v39, 0, 0);
    v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, enum case for PlaybackController.FairPlayKeyServerError.notEntitled(_:), v38);
    swift_willThrow(v41);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    v20 = sub_100280C2C;
LABEL_19:
    swift_asyncLet_finish(v0 + 16, v0 + 1672, v20, v12);
    return;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v6 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_100280C2C()
{
  return swift_task_switch(sub_100280C40, 0, 0);
}

uint64_t sub_100280C40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_100280C94, v0 + 1680);
}

uint64_t sub_100280C94()
{
  return swift_task_switch(sub_100280CA8, 0, 0);
}

uint64_t sub_100280CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100280D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 2376);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 2120);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 2112);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 2104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 2384));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100280E08, 0, 0);
}

uint64_t sub_100280E08()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[239] + 8))(v0[257], v0[233]);
  return swift_asyncLet_finish(v0 + 2, v0 + 209, sub_100280E68, v0 + 216);
}

uint64_t sub_100280E68()
{
  return swift_task_switch(sub_100280E7C, 0, 0);
}

uint64_t sub_100280E7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_100280ED0, v0 + 1376);
}

uint64_t sub_100280ED0()
{
  return swift_task_switch(sub_100280EE4, 0, 0);
}

uint64_t sub_100280EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100280FC4()
{
  return swift_task_switch(sub_100280FD8, 0, 0);
}

uint64_t sub_100280FD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_10028102C, v0 + 1872);
}

uint64_t sub_10028102C()
{
  return swift_task_switch(sub_100281040, 0, 0);
}

uint64_t sub_100281040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028111C()
{
  return swift_task_switch(sub_100281130, 0, 0);
}

uint64_t sub_100281130()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_100281184, v0 + 1296);
}

uint64_t sub_100281184()
{
  return swift_task_switch(sub_100281198, 0, 0);
}

uint64_t sub_100281198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 2168);
  v2 = *(_QWORD *)(v0 + 2144);
  v3 = *(_QWORD *)(v0 + 2120);
  v4 = *(_QWORD *)(v0 + 2096);
  v5 = *(_QWORD *)(v0 + 2088);
  v6 = *(_QWORD *)(v0 + 2056);
  v7 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 2200));
  v1 = *(_QWORD *)(v0 + 2168);
  v2 = *(_QWORD *)(v0 + 2144);
  v3 = *(_QWORD *)(v0 + 2120);
  v4 = *(_QWORD *)(v0 + 2096);
  v5 = *(_QWORD *)(v0 + 2088);
  v6 = *(_QWORD *)(v0 + 2056);
  v7 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002813BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 2200));
  sub_10003D380((_QWORD *)(v0 + 1416));
  v1 = *(_QWORD *)(v0 + 2168);
  v2 = *(_QWORD *)(v0 + 2144);
  v3 = *(_QWORD *)(v0 + 2120);
  v4 = *(_QWORD *)(v0 + 2096);
  v5 = *(_QWORD *)(v0 + 2088);
  v6 = *(_QWORD *)(v0 + 2056);
  v7 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281470()
{
  uint64_t v0;

  return swift_asyncLet_finish(v0 + 16, v0 + 1672, sub_100281488, v0 + 1632);
}

uint64_t sub_100281488()
{
  return swift_task_switch(sub_10028149C, 0, 0);
}

uint64_t sub_10028149C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002814F0, v0 + 1536);
}

uint64_t sub_1002814F0()
{
  return swift_task_switch(sub_100281504, 0, 0);
}

uint64_t sub_100281504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002815E0()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[239] + 8))(v0[257], v0[233]);
  return swift_asyncLet_finish(v0 + 2, v0 + 209, sub_100281640, v0 + 246);
}

uint64_t sub_100281640()
{
  return swift_task_switch(sub_100281654, 0, 0);
}

uint64_t sub_100281654()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2336));
  return swift_asyncLet_finish(v0 + 656, v0 + 1576, sub_1002816A8, v0 + 2016);
}

uint64_t sub_1002816A8()
{
  return swift_task_switch(sub_1002816BC, 0, 0);
}

uint64_t sub_1002816BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2328);
  v3 = *(_QWORD *)(v0 + 2240);
  swift_release(*(_QWORD *)(v0 + 2200));
  swift_unknownObjectRelease(v3);
  sub_10003D380((_QWORD *)(v0 + 1416));
  swift_release_n(v2, 2);
  swift_release(v1);
  v4 = *(_QWORD *)(v0 + 2168);
  v5 = *(_QWORD *)(v0 + 2144);
  v6 = *(_QWORD *)(v0 + 2120);
  v7 = *(_QWORD *)(v0 + 2096);
  v8 = *(_QWORD *)(v0 + 2088);
  v9 = *(_QWORD *)(v0 + 2056);
  v10 = *(_QWORD *)(v0 + 2008);
  swift_task_dealloc(*(_QWORD *)(v0 + 2176));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028179C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for PlayEpisodeIntent(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + 16;
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_10055E20C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100191178;
  return sub_10027EF98(a1, v6, v7, v8);
}

uint64_t sub_100281838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PlayEpisodeIntent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10003D380((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002818C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for PlayEpisodeIntent(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + 16;
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_10055E21C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10023A498;
  return sub_10027F204(a1, v6, v7, v8);
}

uint64_t sub_100281960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for EpisodeOffer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002819D4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EpisodeOffer(0) - 8) + 80);
  memset(v3, 0, sizeof(v3));
  sub_1002614F8(v0 + ((v1 + 24) & ~v1), 0, 0, 1, (uint64_t)v3);
  return sub_100007A28((uint64_t)v3, (uint64_t *)&unk_100552300);
}

uint64_t sub_100281A44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100281A70()
{
  uint64_t v0;

  return sub_10027F464(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100281A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for EpisodeEntity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100281AF0(uint64_t *a1@<X8>)
{
  type metadata accessor for EpisodeEntity(0);
  sub_10027F568(a1);
}

void sub_100281B40(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Class isa;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTEpisodeEntityName);
  v7 = v6;
  v8 = objc_allocWithZone((Class)MTPropertyChangeQueryObserver);
  v9 = a1;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v11 = objc_msgSend(v8, "initWithEntityName:predicate:", v10, v9);

  if (v11)
  {
    *(_QWORD *)(v3 + 16) = v11;
    v12 = sub_10003F544((uint64_t *)&unk_1005588B0);
    v13 = swift_allocObject(v12, 80, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1003CA240;
    *(_QWORD *)(v13 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kEpisodePlayState);
    *(_QWORD *)(v13 + 40) = v14;
    *(_QWORD *)(v13 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(kEpisodePlayStateManuallySet);
    *(_QWORD *)(v13 + 56) = v15;
    *(_QWORD *)(v13 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(kEpisodeDuration);
    *(_QWORD *)(v13 + 72) = v16;
    v31 = v13;
    sub_100172C68(a2);
    v17 = *(id *)(v3 + 16);
    swift_bridgeObjectRetain(v13);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v17, "setPropertyKeys:", isa);

    objc_msgSend(*(id *)(v3 + 16), "startObserving");
    v19 = objc_msgSend(*(id *)(v3 + 16), "uuids");
    if (v19)
    {
      v20 = v19;
      v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
      swift_bridgeObjectRelease(v13);

      v22 = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRelease(v21);
      *(_QWORD *)(v3 + 24) = v22;
      v23 = *(void **)(v3 + 16);
      v24 = swift_allocObject(&unk_1004BA758, 24, 7);
      swift_weakInit(v24 + 16, v3);
      aBlock[4] = sub_1002821C0;
      v30 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001ACFA4;
      aBlock[3] = &unk_1004BA770;
      v25 = _Block_copy(aBlock);
      v26 = v30;
      v27 = v23;
      swift_release(v26);
      v28 = objc_msgSend(v27, "addResultsChangedHandler:", v25);

      _Block_release(v25);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100281DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  void (*v6)(uint64_t, __n128);
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = (_QWORD *)result;
    if (a1)
    {
      if ((unint64_t)a1 >> 62)
      {
        if (a1 >= 0)
          v9 = a1 & 0xFFFFFFFFFFFFFF8;
        else
          v9 = a1;
        swift_bridgeObjectRetain(a1);
        v10 = _CocoaArrayWrapper.endIndex.getter(v9);
        v11 = a1;
        a1 = v10;
        swift_bridgeObjectRelease(v11);
        if (a1 < 0)
        {
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
          __break(1u);
          return result;
        }
      }
      else
      {
        a1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    if (a1 != v5[3])
    {
      v5[3] = a1;
      swift_beginAccess(v5 + 4, v12, 0, 0);
      v6 = (void (*)(uint64_t, __n128))v5[4];
      if (v6)
      {
        v7 = v5[5];
        v8 = swift_retain(v7);
        v6(a1, v8);
        sub_10002CA30((uint64_t)v6, v7);
      }
    }
    return swift_release(v5);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeCountObserver()
{
  return objc_opt_self(_TtC8Podcasts20EpisodeCountObserver);
}

uint64_t (*sub_100281F38())(_QWORD *)
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _BYTE v7[24];

  v1 = *v0;
  swift_beginAccess(v1 + 32, v7, 0, 0);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  if (v2)
  {
    v4 = swift_allocObject(&unk_1004BA730, 32, 7);
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = sub_1002726E4;
  }
  else
  {
    v5 = 0;
  }
  sub_10002CA20(v2, v3);
  return v5;
}

uint64_t sub_100281FC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  if (a1)
  {
    v5 = swift_allocObject(&unk_1004BA708, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_1002726E0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *v2;
  swift_beginAccess(v7 + 32, v11, 1, 0);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 40);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  return sub_10002CA30(v8, v9);
}

void (*sub_10028204C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess(v4 + 32, v3, 33, 0);
  v5 = *(_QWORD *)(v4 + 32);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 40);
    v7 = swift_allocObject(&unk_1004BA6E0, 32, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_1001D07D4;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v3[3] = v8;
  v3[4] = v7;
  return sub_1002820E8;
}

void sub_1002820E8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    if ((a2 & 1) != 0)
      v4 = sub_10027269C;
    else
      v4 = (uint64_t (*)(uint64_t))sub_1002726E0;
    if ((a2 & 1) != 0)
      v5 = &unk_1004BA690;
    else
      v5 = &unk_1004BA6B8;
    v6 = v2[4];
    v7 = swift_allocObject(v5, 32, 7);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v6;
  }
  else
  {
    v4 = 0;
    v7 = 0;
  }
  v8 = v2[5];
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v7;
  swift_endAccess(v2);
  free(v2);
}

uint64_t sub_100282178()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028219C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002821C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100281DE0(a1, v1);
}

_QWORD *sub_1002821D8(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  return sub_1002821EC(a1, a2, a3);
}

_QWORD *sub_1002821EC(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = _swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

BOOL sub_100282390(uint64_t a1)
{
  return sub_10028239C(a1, (uint64_t)&off_1004B1608);
}

BOOL sub_10028239C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) + 8) + 16))();
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for NowPlayingContextActionConfiguration(0);
    v7 = swift_dynamicCastClass(v5, v6);
    v4 = swift_release(v5);
    if (v7)
    {
      v4 = static Podcasts.isBlueMoonEnabled()(v4);
      if ((v4 & 1) == 0)
        return 0;
    }
  }
  v8 = static Podcasts.isBlueMoonEnabled()(v4);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if ((v8 & 1) != 0)
  {
    if ((v9 & 1) == 0)
    {
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      v11 = dispatch thunk of PlaybackController.queueController.getter(v10);
      v12 = swift_release(v10);
      LOBYTE(v10) = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter(v12);
      swift_release(v11);
      if ((v10 & 1) == 0)
        return 0;
    }
  }
  else if ((v9 & 1) == 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    v14 = objc_msgSend(v13, "upNextController");

    LODWORD(v13) = objc_msgSend(v14, "hasItemsInQueue");
    if (!(_DWORD)v13)
      return 0;
  }
  v15 = sub_100282C3C(a1, a2);
  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
    return 1;
  v17 = (uint64_t)sub_100282F78(a1, a2);
  if ((unint64_t)v17 >> 62)
  {
    v23 = v17 & 0xFFFFFFFFFFFFFF8;
    if (v17 < 0)
      v23 = v17;
    v24 = v17;
    v18 = _CocoaArrayWrapper.endIndex.getter(v23);
    v17 = v24;
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v17);
  if (v18 > 0)
    return 1;
  sub_1002831A4(a1, a2);
  v21 = v20;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 >= 0)
      v20 &= 0xFFFFFFFFFFFFFF8uLL;
    v22 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  else
  {
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v21);
  return v22 > 0;
}

uint64_t sub_1002825A8(uint64_t a1)
{
  return sub_1002825B4(a1, (uint64_t)&off_1004B1608);
}

uint64_t sub_1002825B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned __int8 v12;
  uint64_t result;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2) & 1;
  result = sub_100283620(v12, a1, a2);
  if ((result & 1) != 0)
  {
    sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    v16 = swift_allocObject(&unk_1004BA858, 17, 7);
    *(_BYTE *)(v16 + 16) = v12;
    aBlock[4] = sub_100284120;
    v23 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BA870;
    v17 = _Block_copy(aBlock);
    v18 = swift_release(v23);
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = _swiftEmptyArrayStorage;
    v19 = sub_10017F258();
    v20 = sub_10003F544((uint64_t *)&unk_10055B200);
    v21 = sub_100026534();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1002827B0(uint64_t a1)
{
  return sub_1002827BC(a1, (uint64_t)&off_1004B1608);
}

uint64_t sub_1002827BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(__n128);
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v5 = type metadata accessor for PreviewingPresentationHint(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EpisodeOffer(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(a1, v13);
  if (result)
  {
    if (*(_BYTE *)(result + 32) == 1)
    {
      v44 = v13;
      v45 = v8;
      v46 = a1;
      v47 = v2;
      v16 = *(_QWORD *)(result + 16);
      v15 = *(_QWORD *)(result + 24);
      v17 = _swiftEmptyArrayStorage;
      v48 = (unint64_t)_swiftEmptyArrayStorage;
      v18 = *(_QWORD *)(v16 + 16);
      if (v18)
      {
        v39 = v15;
        v40 = v16;
        v41 = result;
        v42 = v6;
        v43 = v5;
        v19 = v16 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        v20 = *(_QWORD *)(v10 + 72);
        v21 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
        v22 = swift_bridgeObjectRetain(v16);
        do
        {
          v21(v12, v19, v9, v22);
          v24 = (void *)sub_10025C034();
          if (v24)
          {
            v25 = v24;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
            v27 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v26 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v27 >= v26 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
            specialized Array._endMutation()(v23);

          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v19 += v20;
          --v18;
        }
        while (v18);
        sub_100198C1C(v40, v39, 1u);
        v17 = (_QWORD *)v48;
        v6 = v42;
        v5 = v43;
        result = v41;
      }
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v29 = v45;
      v30 = result;
      v28(v45, result + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint, v5);
      v31 = v5;
      v32 = *(_BYTE *)(v30 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron);
      v33 = type metadata accessor for EpisodeContextActionData(0);
      v34 = swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
      v35 = v6;
      v36 = OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_mangedContextProvider;
      *(_QWORD *)(v34 + v36) = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
      *(_QWORD *)(v34 + 16) = v17;
      *(_QWORD *)(v34 + 24) = 0;
      *(_BYTE *)(v34 + 32) = 2;
      v28((char *)(v34 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_presentationHint), (uint64_t)v29, v31);
      *(_BYTE *)(v34 + OBJC_IVAR____TtC8Podcasts24EpisodeContextActionData_hasHeaderChevron) = v32;
      sub_100369110();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v31);
      v37 = *(void (**)(__n128))(v44 + 24);
      v38 = swift_retain();
      v37(v38);
      swift_release(v34);
      return swift_release(v30);
    }
    else
    {
      return swift_release(result);
    }
  }
  return result;
}

BOOL sub_100282AA0(uint64_t a1)
{
  return sub_100282AAC(a1, (uint64_t)&off_1004B1608);
}

BOOL sub_100282AAC(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((static Podcasts.isBlueMoonEnabled()(a1) & 1) == 0)
    return 0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v6 = dispatch thunk of PlaybackController.queueController.getter(v5);
  v7 = swift_release(v5);
  v8 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter(v7);
  swift_release(v6);
  if ((v4 & 1) != 0)
  {
    if ((v8 & 1) != 0)
      return 0;
  }
  else if ((v8 & 1) == 0)
  {
    return 0;
  }
  v10 = sub_100282C3C(a1, a2);
  v11 = v10[2];
  swift_bridgeObjectRelease(v10);
  if (v11)
    return 1;
  v12 = (uint64_t)sub_100282F78(a1, a2);
  if ((unint64_t)v12 >> 62)
  {
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v12 < 0)
      v17 = v12;
    v18 = v12;
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    v12 = v18;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v12);
  if (v13 > 0)
    return 1;
  sub_1002831A4(a1, a2);
  v15 = v14;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 >= 0)
      v14 &= 0xFFFFFFFFFFFFFF8uLL;
    v16 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
  else
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v15);
  return v16 > 0;
}

BOOL sub_100282C0C(uint64_t a1)
{
  return sub_10028239C(a1, (uint64_t)&off_1004BA260);
}

uint64_t sub_100282C18(uint64_t a1)
{
  return sub_1002825B4(a1, (uint64_t)&off_1004BA260);
}

uint64_t sub_100282C24(uint64_t a1)
{
  return sub_1002827BC(a1, (uint64_t)&off_1004BA260);
}

BOOL sub_100282C30(uint64_t a1)
{
  return sub_100282AAC(a1, (uint64_t)&off_1004BA260);
}

_QWORD *sub_100282C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)();
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *result;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void (*v26)();
  uint64_t v27;
  _QWORD *v28;
  id v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 16))();
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(v2 + 32);
  sub_100198BD4(v5, v4, v6);
  swift_release(v3);
  if (v6)
  {
    sub_100198C1C(v5, v4, v6);
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v4);
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease(v5);
    v26 = 0;
    v10 = 0;
    v7 = _swiftEmptyArrayStorage;
LABEL_20:
    sub_10002CA30((uint64_t)v26, (uint64_t)v10);
    return v7;
  }
  v29 = (id)objc_opt_self(MTDB);
  v9 = 0;
  v10 = 0;
  v27 = v5;
  v11 = (_QWORD *)(v5 + 40);
  v28 = _swiftEmptyArrayStorage;
  while (1)
  {
    v12 = (uint64_t)v10;
    v13 = *(v11 - 1);
    v14 = *v11;
    v15 = objc_msgSend(v29, "sharedInstance", swift_bridgeObjectRetain(*v11).n128_f64[0]);
    v16 = objc_msgSend(v15, "mainOrPrivateContext");

    v34 = 1;
    v33 = 1;
    v32 = 0;
    v10 = (_QWORD *)swift_allocObject(&unk_1004BA7E0, 64, 7);
    v10[2] = v16;
    v10[3] = v13;
    v10[4] = v14;
    v10[5] = &v34;
    v10[6] = &v33;
    v10[7] = &v32;
    swift_bridgeObjectRetain(v14);
    v17 = v16;
    sub_10002CA30((uint64_t)v9, v12);
    v18 = swift_allocObject(&unk_1004BA808, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_1002840F0;
    *(_QWORD *)(v18 + 24) = v10;
    aBlock[4] = sub_100029B3C;
    v31 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100029B1C;
    aBlock[3] = &unk_1004BA820;
    v19 = _Block_copy(aBlock);
    v20 = v31;
    swift_retain();
    swift_release(v20);
    objc_msgSend(v17, "performBlockAndWait:", v19);
    _Block_release(v19);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v18, "", 118, 125, 40, 1);
    result = (_QWORD *)swift_release(v18);
    if ((v20 & 1) != 0)
      break;
    if ((v34 & 1) != 0 || v33 == 1 || (v32 & 1) == 0)
    {

      swift_bridgeObjectRelease(v14);
    }
    else
    {
      v22 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        v22 = sub_10027AE00(0, v28[2] + 1, 1, v28);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_10027AE00((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
      v22[2] = v24 + 1;
      v28 = v22;
      v25 = &v22[2 * v24];
      v25[4] = v13;
      v25[5] = v14;

    }
    v11 += 2;
    v9 = sub_1002840F0;
    if (!--v8)
    {
      swift_bridgeObjectRelease(v27);
      v26 = sub_1002840F0;
      v7 = v28;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_100282F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *result;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 16))();
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(v2 + 32);
  sub_100198BD4(v5, v4, v6);
  swift_release(v3);
  if (v6 != 2)
  {
    v18 = v5;
    v19 = v4;
    v20 = v6;
LABEL_24:
    sub_100198C1C(v18, v19, v20);
    return _swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v5 >> 62))
  {
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_5;
    goto LABEL_23;
  }
  if (v5 >= 0)
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  else
    v21 = v5;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  sub_100198C1C(v5, v4, 2u);
  if (!v7)
  {
LABEL_23:
    v18 = v5;
    v19 = v4;
    v20 = 2;
    goto LABEL_24;
  }
LABEL_5:
  result = (_QWORD *)objc_opt_self(PFRestrictionsUtil);
  if (v7 >= 1)
  {
    v9 = result;
    v10 = 0;
    v11 = v5 & 0xC000000000000001;
    do
    {
      if (v11)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v5);
      else
        v13 = *(id *)(v5 + 8 * v10 + 32);
      v14 = v13;
      if (((objc_msgSend(v9, "isExplicitContentAllowed") & 1) != 0
         || (objc_msgSend(v14, "isExplicit") & 1) == 0)
        && (objc_msgSend(v14, "isEntitled") & 1) != 0)
      {
        v15 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v12);
        v11 = v5 & 0xC000000000000001;
      }
      ++v10;

    }
    while (v7 != v10);
    sub_100198C1C(v5, v4, 2u);
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

void sub_1002831A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ItemContent;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[7];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v5 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 16))();
  if (!v5)
    return;
  v6 = v5;
  if (*(_BYTE *)(v5 + 32) != 3)
  {
LABEL_28:
    swift_release(v6);
    return;
  }
  v7 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v31 = _swiftEmptyArrayStorage;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v20 = v7 & 0xFFFFFFFFFFFFFF8;
    else
      v20 = v7;
    swift_bridgeObjectRetain(v7);
    v9 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (v9)
      goto LABEL_5;
    goto LABEL_23;
  }
  v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (!v9)
  {
LABEL_23:
    sub_100198C1C(v7, v8, 3u);
    v19 = _swiftEmptyArrayStorage;
LABEL_24:
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2) & 1) == 0)
    {
      __chkstk_darwin();
      v27[2] = a1;
      v27[3] = a2;
      v27[4] = v2;
      sub_1002821EC((uint64_t (*)(id *))sub_1002840A4, v27, (unint64_t)v19);
      swift_release(v6);
      return;
    }
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    v22 = dispatch thunk of PlaybackController.queueController.getter(v21);
    v23 = swift_release(v21);
    ItemContent = dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter(v23);
    v26 = v25;
    swift_release(v22);
    if (v26)
    {
      swift_bridgeObjectRetain(v26);
      sub_100283EE8((uint64_t)v19, ItemContent, v26);
      swift_release(v6);
      swift_release(v19);
      swift_bridgeObjectRelease_n(v26, 2);
      return;
    }
    goto LABEL_28;
  }
LABEL_5:
  v28 = v8;
  v29 = a1;
  v30 = v2;
  if (v9 >= 1)
  {
    v10 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      else
        v11 = *(id *)(v7 + 8 * v10 + 32);
      v12 = v11;
      v13 = (void *)MPCPlayerResponseItem.podcastEpisode.getter(v11);
      if (v13)
      {
        v14 = v13;
        if ((objc_msgSend(v13, "isExplicitEpisode") & 1) == 0)
        {

LABEL_17:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v17 = v31[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v12);
          specialized ContiguousArray._endMutation()(v18);
          goto LABEL_8;
        }
        v15 = objc_msgSend((id)objc_opt_self(PFRestrictionsUtil), "isExplicitContentAllowed");

        if ((v15 & 1) != 0)
          goto LABEL_17;
      }

LABEL_8:
      if (v9 == ++v10)
      {
        sub_100198C1C(v7, v28, 3u);
        v19 = v31;
        a1 = v29;
        v2 = v30;
        goto LABEL_24;
      }
    }
  }
  __break(1u);
}

void sub_10028344C(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, _BYTE *a5, unsigned __int8 *a6)
{
  NSString v10;
  id v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(a1, "episodeForUuid:", v10);

  if (v11)
  {
    if ((objc_msgSend((id)objc_opt_self(PFRestrictionsUtil), "isExplicitContentAllowed") & 1) != 0)
      v12 = 0;
    else
      v12 = objc_msgSend(v11, "isExplicit");
    *a4 = v12;
    *a5 = objc_msgSend(v11, "isExternalType");
    v13 = objc_msgSend(v11, "isEntitled");

    *a6 = v13;
  }
}

BOOL sub_100283524(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for QueueModelSection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v13 = dispatch thunk of PlaybackController.queueController.getter();
  swift_release(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for QueueModelSection.hardQueue(_:), v7);
  LOBYTE(v12) = dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)(v10, v11);
  swift_release(v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (v12 & 1) == 0;
}

uint64_t sub_100283620(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  _QWORD v12[6];
  int v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(type metadata accessor for PlaybackController.QueueCommand.Location(0) - 8);
  __chkstk_darwin();
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  __chkstk_darwin();
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 16);
  v14 = a2;
  v15 = v3;
  result = v10(a2);
  if (result)
  {
    v12[4] = v9;
    v12[5] = v7;
    v13 = a1;
    __asm { BR              X10 }
  }
  return result;
}

void sub_100283E40(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned int *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v2 = type metadata accessor for HUDViewController.HUDType(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (unsigned int *)&enum case for HUDViewController.HUDType.addToQueue(_:);
  if ((a1 & 1) != 0)
    v6 = (unsigned int *)&enum case for HUDViewController.HUDType.playNext(_:);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v5, *v6);
  v7 = objc_allocWithZone((Class)type metadata accessor for HUDViewController(0));
  v8 = (void *)HUDViewController.init(type:)(v5);
  dispatch thunk of HUDViewController.present()();

}

_QWORD *sub_100283EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_20;
        v10 = v5;
        v11 = objc_msgSend(v7, "contentItemIdentifier");
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {

          swift_bridgeObjectRelease(a3);
        }
        else
        {
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
          v17 = swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
          {

          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v18 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
            v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
            specialized ContiguousArray._endMutation()(v19);
          }
        }
        ++v6;
        v5 = v10;
        if (v9 == v10)
          return _swiftEmptyArrayStorage;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v21 = a1;
      else
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_1002840A4(uint64_t *a1)
{
  uint64_t *v1;

  return sub_100283524(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1002840C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1002840F0()
{
  uint64_t v0;

  sub_10028344C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 **)(v0 + 40), *(_BYTE **)(v0 + 48), *(unsigned __int8 **)(v0 + 56));
}

uint64_t sub_100284100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100284110()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_100284120()
{
  uint64_t v0;

  sub_100283E40(*(_BYTE *)(v0 + 16));
}

uint64_t sub_100284130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  int v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  _QWORD v51[5];
  char v52[24];
  __int128 aBlock;
  uint64_t (*v54)(uint64_t);
  void *v55;
  uint64_t (*v56)();
  _QWORD *v57;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v13);
  v18 = (char *)&v40 - v17;
  v19 = *(unsigned __int8 *)(a2 + 16);
  if ((v19 & 1) != 0)
    return v19 ^ 1u;
  v48 = result;
  v43 = v8;
  v44 = v7;
  v45 = v5;
  v46 = v4;
  v47 = v19;
  *(_BYTE *)(a2 + 16) = 1;
  v20 = (void *)UIApp;
  if (UIApp)
  {
    v56 = UInt64.int64Representation.getter;
    v57 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v54 = sub_100027AF8;
    v55 = &unk_1004BABE8;
    v21 = _Block_copy(&aBlock);
    v22 = v20;
    v23 = objc_msgSend(v22, "beginBackgroundTaskWithExpirationHandler:", v21);
    _Block_release(v21);

    v24 = *(_QWORD *)(a1 + 48);
    swift_beginAccess(a1 + 56, v52, 1, 0);
    v25 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v25);
    v26 = swift_allocObject(&unk_1004BA8B0, 24, 7);
    swift_weakInit(v26 + 16, a2);
    v27 = (_QWORD *)swift_allocObject(&unk_1004BAC20, 56, 7);
    v27[2] = a1;
    v27[3] = v23;
    v27[4] = v26;
    v27[5] = UInt64.int64Representation.getter;
    v27[6] = 0;
    swift_retain_n(a1, 2);
    swift_retain_n(v26, 2);
    sub_100246CDC((uint64_t)&aBlock);
    if (v55)
    {
      sub_10002099C(&aBlock, (uint64_t)v51);
      sub_10002C5E0();
      v41 = static OS_dispatch_queue.main.getter(v28);
      static DispatchTime.now()(v41);
      + infix(_:_:)(v15, 0.1);
      v42 = *(void (**)(char *, uint64_t))(v12 + 8);
      v42(v15, v48);
      v29 = swift_allocObject(&unk_1004BA8B0, 24, 7);
      swift_weakInit(v29 + 16, a2);
      sub_10000A520((uint64_t)v51, (uint64_t)v50);
      v30 = (_QWORD *)swift_allocObject(&unk_1004BAC48, 88, 7);
      sub_10002099C(v50, (uint64_t)(v30 + 2));
      v30[7] = v29;
      v30[8] = a1;
      v30[9] = sub_100285A5C;
      v30[10] = v27;
      v56 = sub_100285A14;
      v57 = v30;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v54 = sub_100027AF8;
      v55 = &unk_1004BAC60;
      v31 = _Block_copy(&aBlock);
      v32 = v57;
      swift_retain();
      swift_retain();
      v33 = swift_release(v32);
      static DispatchQoS.unspecified.getter(v33);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v34 = sub_10017F258();
      v35 = sub_10003F544((uint64_t *)&unk_10055B200);
      v36 = sub_100026534();
      v37 = v44;
      v38 = v46;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v35, v36, v46, v34);
      v39 = (void *)v41;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v10, v37, v31);
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v38);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v43);
      v42(v18, v48);
      sub_10003D380(v51);
    }
    else
    {
      sub_100247298((uint64_t)&aBlock);
      sub_100285420(a1, (uint64_t)v23, v26);
    }
    swift_release_n(v26, 2);
    swift_release(a1);
    swift_release(v27);
    v19 = v47;
    return v19 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002845EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48[2];
  _QWORD v49[5];
  char v50[24];
  __int128 aBlock;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  __chkstk_darwin();
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin();
  v16 = (char *)&v38 - v15;
  v17 = *(unsigned __int8 *)(a2 + 16);
  if ((v17 & 1) != 0)
    return v17 ^ 1u;
  v46 = result;
  v41 = v8;
  v42 = v7;
  v43 = v5;
  v44 = v4;
  v45 = v17;
  *(_BYTE *)(a2 + 16) = 1;
  v18 = (void *)UIApp;
  if (UIApp)
  {
    v54 = UInt64.int64Representation.getter;
    v55 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v52 = sub_100027AF8;
    v53 = &unk_1004BAA80;
    v19 = _Block_copy(&aBlock);
    v20 = v18;
    v21 = objc_msgSend(v20, "beginBackgroundTaskWithExpirationHandler:", v19);
    _Block_release(v19);

    v22 = *(_QWORD *)(a1 + 48);
    swift_beginAccess(a1 + 56, v50, 1, 0);
    v23 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
    v24 = swift_allocObject(&unk_1004BA8B0, 24, 7);
    swift_weakInit(v24 + 16, a2);
    v25 = (_QWORD *)swift_allocObject(&unk_1004BAAB8, 56, 7);
    v25[2] = a1;
    v25[3] = v21;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n(a1, 2);
    swift_retain_n(v24, 2);
    sub_100246CDC((uint64_t)&aBlock);
    if (v53)
    {
      sub_10002099C(&aBlock, (uint64_t)v49);
      sub_10002C5E0();
      v39 = static OS_dispatch_queue.main.getter(v26);
      static DispatchTime.now()(v39);
      + infix(_:_:)(v13, 0.1);
      v40 = *(void (**)(char *, uint64_t))(v11 + 8);
      v40(v13, v46);
      v27 = swift_allocObject(&unk_1004BA8B0, 24, 7);
      swift_weakInit(v27 + 16, a2);
      sub_10000A520((uint64_t)v49, (uint64_t)v48);
      v28 = (_QWORD *)swift_allocObject(&unk_1004BAAE0, 88, 7);
      sub_10002099C(v48, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_100285A5C;
      v28[10] = v25;
      v54 = sub_100285A14;
      v55 = v28;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v52 = sub_100027AF8;
      v53 = &unk_1004BAAF8;
      v29 = _Block_copy(&aBlock);
      v30 = v55;
      swift_retain();
      swift_retain();
      swift_release(v30);
      static DispatchQoS.unspecified.getter(v31);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v32 = sub_10017F258();
      v33 = sub_10003F544((uint64_t *)&unk_10055B200);
      v34 = sub_100026534();
      v35 = v42;
      v36 = v44;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v33, v34, v44, v32);
      v37 = (void *)v39;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v10, v35, v29);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v41);
      v40(v16, v46);
      sub_10003D380(v49);
    }
    else
    {
      sub_100247298((uint64_t)&aBlock);
      sub_100285420(a1, (uint64_t)v21, v24);
    }
    swift_release_n(v24, 2);
    swift_release(a1);
    swift_release(v25);
    v17 = v45;
    return v17 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_100284AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48[2];
  _QWORD v49[5];
  char v50[24];
  __int128 aBlock;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  __chkstk_darwin();
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin();
  v16 = (char *)&v38 - v15;
  v17 = *(unsigned __int8 *)(a2 + 16);
  if ((v17 & 1) != 0)
    return v17 ^ 1u;
  v46 = result;
  v41 = v8;
  v42 = v7;
  v43 = v5;
  v44 = v4;
  v45 = v17;
  *(_BYTE *)(a2 + 16) = 1;
  v18 = (void *)UIApp;
  if (UIApp)
  {
    v54 = UInt64.int64Representation.getter;
    v55 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v52 = sub_100027AF8;
    v53 = &unk_1004BA9E0;
    v19 = _Block_copy(&aBlock);
    v20 = v18;
    v21 = objc_msgSend(v20, "beginBackgroundTaskWithExpirationHandler:", v19);
    _Block_release(v19);

    v22 = *(_QWORD *)(a1 + 48);
    swift_beginAccess(a1 + 56, v50, 1, 0);
    v23 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
    v24 = swift_allocObject(&unk_1004BA8B0, 24, 7);
    swift_weakInit(v24 + 16, a2);
    v25 = (_QWORD *)swift_allocObject(&unk_1004BAA18, 56, 7);
    v25[2] = a1;
    v25[3] = v21;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n(a1, 2);
    swift_retain_n(v24, 2);
    sub_100246CDC((uint64_t)&aBlock);
    if (v53)
    {
      sub_10002099C(&aBlock, (uint64_t)v49);
      sub_10002C5E0();
      v39 = static OS_dispatch_queue.main.getter(v26);
      static DispatchTime.now()(v39);
      + infix(_:_:)(v13, 0.1);
      v40 = *(void (**)(char *, uint64_t))(v11 + 8);
      v40(v13, v46);
      v27 = swift_allocObject(&unk_1004BA8B0, 24, 7);
      swift_weakInit(v27 + 16, a2);
      sub_10000A520((uint64_t)v49, (uint64_t)v48);
      v28 = (_QWORD *)swift_allocObject(&unk_1004BAA40, 88, 7);
      sub_10002099C(v48, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_100285A5C;
      v28[10] = v25;
      v54 = sub_100285A14;
      v55 = v28;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v52 = sub_100027AF8;
      v53 = &unk_1004BAA58;
      v29 = _Block_copy(&aBlock);
      v30 = v55;
      swift_retain();
      swift_retain();
      swift_release(v30);
      static DispatchQoS.unspecified.getter(v31);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v32 = sub_10017F258();
      v33 = sub_10003F544((uint64_t *)&unk_10055B200);
      v34 = sub_100026534();
      v35 = v42;
      v36 = v44;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v33, v34, v44, v32);
      v37 = (void *)v39;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v10, v35, v29);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v41);
      v40(v16, v46);
      sub_10003D380(v49);
    }
    else
    {
      sub_100247298((uint64_t)&aBlock);
      sub_100285420(a1, (uint64_t)v21, v24);
    }
    swift_release_n(v24, 2);
    swift_release(a1);
    swift_release(v25);
    v17 = v45;
    return v17 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_100284F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48[2];
  _QWORD v49[5];
  char v50[24];
  __int128 aBlock;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  __chkstk_darwin();
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin();
  v16 = (char *)&v38 - v15;
  v17 = *(unsigned __int8 *)(a2 + 16);
  if ((v17 & 1) != 0)
    return v17 ^ 1u;
  v46 = result;
  v41 = v8;
  v42 = v7;
  v43 = v5;
  v44 = v4;
  v45 = v17;
  *(_BYTE *)(a2 + 16) = 1;
  v18 = (void *)UIApp;
  if (UIApp)
  {
    v54 = UInt64.int64Representation.getter;
    v55 = 0;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v52 = sub_100027AF8;
    v53 = &unk_1004BA940;
    v19 = _Block_copy(&aBlock);
    v20 = v18;
    v21 = objc_msgSend(v20, "beginBackgroundTaskWithExpirationHandler:", v19);
    _Block_release(v19);

    v22 = *(_QWORD *)(a1 + 48);
    swift_beginAccess(a1 + 56, v50, 1, 0);
    v23 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
    v24 = swift_allocObject(&unk_1004BA8B0, 24, 7);
    swift_weakInit(v24 + 16, a2);
    v25 = (_QWORD *)swift_allocObject(&unk_1004BA978, 56, 7);
    v25[2] = a1;
    v25[3] = v21;
    v25[4] = v24;
    v25[5] = UInt64.int64Representation.getter;
    v25[6] = 0;
    swift_retain_n(a1, 2);
    swift_retain_n(v24, 2);
    sub_100246CDC((uint64_t)&aBlock);
    if (v53)
    {
      sub_10002099C(&aBlock, (uint64_t)v49);
      sub_10002C5E0();
      v39 = static OS_dispatch_queue.main.getter(v26);
      static DispatchTime.now()(v39);
      + infix(_:_:)(v13, 0.1);
      v40 = *(void (**)(char *, uint64_t))(v11 + 8);
      v40(v13, v46);
      v27 = swift_allocObject(&unk_1004BA8B0, 24, 7);
      swift_weakInit(v27 + 16, a2);
      sub_10000A520((uint64_t)v49, (uint64_t)v48);
      v28 = (_QWORD *)swift_allocObject(&unk_1004BA9A0, 88, 7);
      sub_10002099C(v48, (uint64_t)(v28 + 2));
      v28[7] = v27;
      v28[8] = a1;
      v28[9] = sub_100285A5C;
      v28[10] = v25;
      v54 = sub_100285A14;
      v55 = v28;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v52 = sub_100027AF8;
      v53 = &unk_1004BA9B8;
      v29 = _Block_copy(&aBlock);
      v30 = v55;
      swift_retain();
      swift_retain();
      swift_release(v30);
      static DispatchQoS.unspecified.getter(v31);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v32 = sub_10017F258();
      v33 = sub_10003F544((uint64_t *)&unk_10055B200);
      v34 = sub_100026534();
      v35 = v42;
      v36 = v44;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v33, v34, v44, v32);
      v37 = (void *)v39;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v10, v35, v29);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v41);
      v40(v16, v46);
      sub_10003D380(v49);
    }
    else
    {
      sub_100247298((uint64_t)&aBlock);
      sub_100285420(a1, (uint64_t)v21, v24);
    }
    swift_release_n(v24, 2);
    swift_release(a1);
    swift_release(v25);
    v17 = v45;
    return v17 ^ 1u;
  }
  __break(1u);
  return result;
}

uint64_t sub_100285420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  swift_beginAccess(a1 + 56, v10, 1, 0);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  result = UIApp;
  if (UIApp)
  {
    v8 = a3 + 16;
    objc_msgSend(UIApp, "endBackgroundTask:", a2);
    swift_beginAccess(v8, &v9, 0, 0);
    result = swift_weakLoadStrong(v8);
    if (result)
    {
      *(_BYTE *)(result + 16) = 0;
      return swift_release(result);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002854CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  _BYTE v13[24];

  swift_beginAccess(a1 + 56, v13, 1, 0);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v8);
  result = UIApp;
  if (UIApp)
  {
    v10 = a3 + 16;
    objc_msgSend(UIApp, "endBackgroundTask:", a2);
    swift_beginAccess(v10, &v12, 0, 0);
    Strong = swift_weakLoadStrong(v10);
    if (Strong)
    {
      *(_BYTE *)(Strong + 16) = 0;
      Strong = swift_release(Strong);
    }
    return a4(Strong);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10028558C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  __int128 aBlock;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t (*v40)();
  _QWORD *v41;
  __int128 v42[2];
  _QWORD v43[6];

  v36 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v30 - v15;
  sub_100246CDC((uint64_t)&aBlock);
  if (v39)
  {
    sub_10002099C(&aBlock, (uint64_t)v43);
    sub_10002C5E0();
    v31 = static OS_dispatch_queue.main.getter(v17);
    static DispatchTime.now()(v31);
    + infix(_:_:)(v14, 0.1);
    v18 = *(void (**)(char *, uint64_t))(v12 + 8);
    v18(v14, v11);
    v19 = swift_allocObject(&unk_1004BA8B0, 24, 7);
    swift_weakInit(v19 + 16, v32);
    sub_10000A520((uint64_t)v43, (uint64_t)v42);
    v20 = (_QWORD *)swift_allocObject(&unk_1004BA8D8, 88, 7);
    sub_10002099C(v42, (uint64_t)(v20 + 2));
    v20[7] = v19;
    v20[8] = a1;
    v20[9] = v36;
    v20[10] = a3;
    v40 = sub_100285A14;
    v41 = v20;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v38 = sub_100027AF8;
    v39 = &unk_1004BA8F0;
    v21 = _Block_copy(&aBlock);
    v22 = v41;
    swift_retain();
    swift_retain();
    v23 = swift_release(v22);
    static DispatchQoS.unspecified.getter(v23);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v24 = sub_10017F258();
    v25 = sub_10003F544((uint64_t *)&unk_10055B200);
    v26 = sub_100026534();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v25, v26, v5, v24);
    v27 = (void *)v31;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v10, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    v18(v16, v11);
    return sub_10003D380(v43);
  }
  else
  {
    v29 = sub_100247298((uint64_t)&aBlock);
    return v36(v29);
  }
}

uint64_t sub_100285890(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v13;

  v9 = a1[3];
  v10 = a1[4];
  sub_10003A834(a1, v9);
  v11 = (_QWORD *)swift_allocObject(&unk_1004BA928, 48, 7);
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v12 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t, __n128))(v10 + 8);
  swift_retain();
  swift_retain();
  v13 = swift_retain();
  v12(sub_100285A4C, v11, v9, v10, v13);
  return swift_release(v11);
}

uint64_t sub_100285944(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v7);
  if (result)
  {
    v9 = result;
    sub_10028558C(a2, a3, a4);
    return swift_release(v9);
  }
  return result;
}

uint64_t sub_1002859BC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t type metadata accessor for MTTestActionRunner()
{
  return objc_opt_self(_TtC8Podcasts18MTTestActionRunner);
}

uint64_t sub_1002859EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100285A18()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100285A4C()
{
  uint64_t v0;

  return sub_100285944(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

_QWORD *sub_100285A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
        v11 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_17:
          __break(1u);
          return _swiftEmptyArrayStorage;
        }
LABEL_9:
        v12 = *(_QWORD *)(v10 + 16);
        v13 = *(_QWORD *)(v10 + 24);
        v14 = v12 == a2 && v13 == a3;
        if (v14 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a2, a3, 0), (v12 & 1) != 0))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v8 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v10);
          specialized ContiguousArray._endMutation()(v9);
        }
        else
        {
          swift_release(v10);
        }
        ++v7;
        if (v11 == v6)
          return _swiftEmptyArrayStorage;
      }
      if (v7 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      v6 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (!v6)
        return _swiftEmptyArrayStorage;
    }
    v10 = *(_QWORD *)(a1 + 8 * v7 + 32);
    swift_retain(v10);
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_17;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_100285BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t Strong;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66[2];
  _QWORD v67[5];
  char v68[24];
  __int128 aBlock;
  uint64_t (*v70)(uint64_t);
  void *v71;
  uint64_t (*v72)();
  _QWORD *v73;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v64 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  __chkstk_darwin();
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin();
  v17 = *(unsigned __int8 *)(a2 + 16);
  if ((v17 & 1) == 0)
  {
    v55 = (char *)&v52 - v16;
    v63 = v15;
    v56 = v10;
    v57 = v9;
    v58 = v7;
    v59 = v6;
    v62 = v17;
    *(_BYTE *)(a2 + 16) = 1;
    v18 = (void *)UIApp;
    if (UIApp)
    {
      v72 = UInt64.int64Representation.getter;
      v73 = 0;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v70 = sub_100027AF8;
      v71 = &unk_1004BAB48;
      v19 = _Block_copy(&aBlock);
      swift_retain();
      v20 = v18;
      v21 = a3;
      v22 = v20;
      v23 = objc_msgSend(v20, "beginBackgroundTaskWithExpirationHandler:", v19);
      _Block_release(v19);

      v24 = *(_QWORD *)(a1 + 48);
      v25 = (uint64_t *)(a1 + 56);
      swift_beginAccess(a1 + 56, v68, 1, 0);
      v26 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v24;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRelease(v26);
      v27 = swift_allocObject(&unk_1004BA8B0, 24, 7);
      v28 = v27 + 16;
      swift_weakInit(v27 + 16, a2);
      v29 = (_QWORD *)swift_allocObject(&unk_1004BAB80, 56, 7);
      v29[2] = a1;
      v29[3] = v23;
      v29[4] = v27;
      v29[5] = sub_100286358;
      v29[6] = v21;
      swift_retain_n(a1, 2);
      v60 = v27;
      swift_retain_n(v27, 2);
      v61 = v21;
      swift_retain_n(v21, 2);
      sub_100246CDC((uint64_t)&aBlock);
      if (v71)
      {
        sub_10002099C(&aBlock, (uint64_t)v67);
        sub_10002C5E0();
        v53 = static OS_dispatch_queue.main.getter(v30);
        static DispatchTime.now()(v53);
        v31 = v55;
        + infix(_:_:)(v14, 0.1);
        v54 = *(void (**)(char *, uint64_t))(v12 + 8);
        v54(v14, v63);
        v32 = swift_allocObject(&unk_1004BA8B0, 24, 7);
        swift_weakInit(v32 + 16, a2);
        sub_10000A520((uint64_t)v67, (uint64_t)v66);
        v33 = (_QWORD *)swift_allocObject(&unk_1004BABA8, 88, 7);
        sub_10002099C(v66, (uint64_t)(v33 + 2));
        v33[7] = v32;
        v33[8] = a1;
        v33[9] = sub_100285A5C;
        v33[10] = v29;
        v72 = sub_100285A14;
        v73 = v33;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v70 = sub_100027AF8;
        v71 = &unk_1004BABC0;
        v34 = _Block_copy(&aBlock);
        v35 = v73;
        swift_retain();
        swift_retain();
        swift_release(v35);
        v36 = v64;
        static DispatchQoS.unspecified.getter(v37);
        *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
        v38 = sub_10017F258();
        v39 = sub_10003F544((uint64_t *)&unk_10055B200);
        v40 = sub_100026534();
        v41 = v57;
        v42 = v59;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v39, v40, v59, v38);
        v43 = (void *)v53;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v31, v36, v41, v34);
        _Block_release(v34);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v42);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v56);
        v54(v31, v63);
        sub_10003D380(v67);
        swift_release_n(v61, 2);
        swift_release_n(v60, 2);
        swift_release(a1);
        v44 = v29;
LABEL_9:
        swift_release(v44);
        return;
      }
      v45 = v23;
      v46 = v60;
      sub_100247298((uint64_t)&aBlock);
      v47 = *v25;
      *v25 = (uint64_t)_swiftEmptyArrayStorage;
      v48 = v61;
      swift_retain();
      *(_QWORD *)&v49 = swift_bridgeObjectRelease(v47).n128_u64[0];
      v7 = v48;
      if (UIApp)
      {
        objc_msgSend(UIApp, "endBackgroundTask:", v45, v49);
        swift_beginAccess(v28, &aBlock, 0, 0);
        Strong = swift_weakLoadStrong(v28);
        if (Strong)
        {
          *(_BYTE *)(Strong + 16) = 0;
          swift_release(Strong);
        }
        swift_beginAccess(v48 + 16, v67, 1, 0);
        v51 = *(_QWORD **)(v48 + 16);
        *(_QWORD *)(v7 + 16) = 0;
        swift_release_n(v46, 2);
        swift_release(a1);
        swift_release(v29);
        swift_release_n(v7, 3);
        v44 = v51;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    swift_release(v7);
    __break(1u);
  }
}

void sub_1002861E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  v7 = (uint64_t)sub_100285A74(v6, a1, a2);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v12))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(v7 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease(v7);
    v9 = swift_allocObject(&unk_1004BAB30, 24, 7);
    v10 = type metadata accessor for MTTestActionRunner();
    v11 = swift_allocObject(v10, 17, 7);
    *(_BYTE *)(v11 + 16) = 0;
    *(_QWORD *)(v9 + 16) = v11;
    swift_retain();
    swift_retain();
    sub_100285BF4(v8, v11, v9);
    swift_release(v11);
    swift_release_n(v9, 2);
    swift_release(v8);
    return;
  }
  __break(1u);
}

uint64_t sub_100286334()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100286358()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 1, 0);
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  return swift_release(v1);
}

uint64_t sub_10028639C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002863D0()
{
  uint64_t v0;

  return sub_1002854CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1002863E4()
{
  _QWORD *v0;

  sub_10003D380(v0 + 2);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100286420()
{
  _QWORD *v0;

  return sub_100285890(v0 + 2, v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_100286470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  if (!v3
    || (v17[0] = v3,
        v4 = type metadata accessor for ContextActionsConfiguration(0),
        swift_retain(),
        v5 = sub_10003F544(&qword_10055E5F0),
        (swift_dynamicCast(&v14, v17, v4, v5, 6) & 1) == 0))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_100286A6C((uint64_t)&v14);
  }
  if (!*((_QWORD *)&v15 + 1))
    return sub_100286A6C((uint64_t)&v14);
  sub_10002099C(&v14, (uint64_t)v17);
  v6 = v18;
  sub_10003A834(v17, v18);
  v7 = sub_1001B7E90(v6);
  if ((v8 & 1) == 0)
  {
    v9 = v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID;
    *(_QWORD *)v9 = v7;
    *(_BYTE *)(v9 + 8) = 0;
    v10 = InterestStateController.stateMachine(for:)();
    v11 = InterestStateMachine.currentState.getter();
    swift_release(v10);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState) = v11;
  }
  return sub_10003D380(v17);
}

uint64_t sub_1002865A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID + 8) & 1) == 0)
  {
    v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState);
    if ((_DWORD)v1 != 4)
    {
      v4 = InterestState.rawValue.getter(*(unsigned __int8 *)(v0
                                                            + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestState));
      v6 = v5;
      v2 = 1;
      v7 = InterestState.rawValue.getter(1);
      if (v4 != v7 || v6 != v8)
      {
        v10 = v8;
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v10);
        if ((v11 & 1) != 0)
        {
          v2 = 1;
          return v2 & 1;
        }
        v12 = InterestState.rawValue.getter(v1);
        v6 = v13;
        v14 = InterestState.rawValue.getter(3);
        if (v12 != v14 || v6 != v15)
        {
          v17 = v15;
          v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v6, v14, v15, 0);
LABEL_18:
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v17);
          return v2 & 1;
        }
        v2 = 1;
      }
      v17 = v6;
      goto LABEL_18;
    }
  }
  v2 = 0;
  return v2 & 1;
}

uint64_t sub_1002866C4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestRepository));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_interestStateController));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10028674C()
{
  return type metadata accessor for FavoriteContextAction(0);
}

uint64_t type metadata accessor for FavoriteContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055E458;
  if (!qword_10055E458)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FavoriteContextAction);
  return result;
}

uint64_t sub_100286790(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_1003D1AE8;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1003D1B00;
    v4[4] = &unk_1003D1B18;
    v4[5] = &unk_1003D1B30;
    v4[6] = &unk_1003D1B48;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10028684C()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0xE800000000000000;
  v1._object = (void *)0x8000000100438AE0;
  v1._countAndFlagsBits = 0xD000000000000015;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x657469726F766146;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002868F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100286938()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_contextActionType);
}

uint64_t sub_10028694C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID + 8) & 1) == 0)
    return InterestRepository.favoriteInterest(forAdamID:)(*(_QWORD *)(v0
                                                                     + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_adamID));
  return result;
}

uint64_t sub_100286990()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1002869D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_100286A28(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts21FavoriteContextAction_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100286A6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_10055E5E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100286AAC(char *a1)
{
  sub_10027941C(*a1);
}

void sub_100286AB8()
{
  char *v0;

  sub_10013CEA0(*v0);
}

void sub_100286AC0()
{
  __asm { BR              X10 }
}

uint64_t sub_100286AFC(uint64_t a1)
{
  String.hash(into:)(a1, 0x7972617262696CLL, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100286B58(uint64_t a1)
{
  char *v1;

  sub_10013D1BC(a1, *v1);
}

unint64_t sub_100286B60@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10028A100(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100286B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100286BBC + 4 * byte_1003D1B84[*v0]))();
}

void sub_100286BBC(_QWORD *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000;
}

void sub_100286BD8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000010042E0C0;
}

void sub_100286BF8(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F7473;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_100286C10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10028A034();
  return EnumStringConvertible<>.description.getter(a1, v2);
}

void sub_100286C38(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_100286C68()
{
  Swift::UInt v0;

  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v0);
}

Swift::Int sub_100286CB0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  sub_100286C38((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_100286CFC(uint64_t a1)
{
  uint64_t v1;

  sub_100286C38(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

Swift::Int sub_100286D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  sub_100286C38((uint64_t)v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100286D50(uint64_t a1)
{
  return sub_100289858(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_100286D68(char *a1, char *a2)
{
  return sub_100279578(*a1, *a2);
}

Swift::Int sub_100286D74()
{
  char *v0;

  return sub_10013CE20(*v0);
}

uint64_t sub_100286D7C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000011;
  else
    v2 = 0xD000000000000012;
  if (*v1)
    v3 = 0x800000010042E100;
  else
    v3 = 0x800000010042E0E0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100286DD8(uint64_t a1)
{
  char *v1;

  return sub_10013D140(a1, *v1);
}

uint64_t sub_100286DE0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1004AD1C8;
  return sub_100286EDC(v2, a1, a2);
}

void sub_100286DEC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000011;
  if (!*v1)
    v2 = 0xD000000000000012;
  v3 = 0x800000010042E100;
  if (!*v1)
    v3 = 0x800000010042E0E0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100286E2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10028A078();
  return EnumStringConvertible<>.description.getter(a1, v2);
}

uint64_t sub_100286E54(char *a1, char *a2)
{
  return sub_10027961C(*a1, *a2);
}

Swift::Int sub_100286E60()
{
  char *v0;

  return sub_10013CD9C(*v0);
}

uint64_t sub_100286E68(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000010;
  else
    v2 = 0xD000000000000011;
  if (*v1)
    v3 = 0x800000010042E140;
  else
    v3 = 0x800000010042E120;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100286EC8(uint64_t a1)
{
  char *v1;

  return sub_10013D0C0(a1, *v1);
}

uint64_t sub_100286ED0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_1004AD218;
  return sub_100286EDC(v2, a1, a2);
}

uint64_t sub_100286EDC@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_100286F34(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000010;
  else
    v2 = 0xD000000000000011;
  v3 = 0x800000010042E120;
  if (*v1)
    v3 = 0x800000010042E140;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100286F78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10028A0BC();
  return EnumStringConvertible<>.description.getter(a1, v2);
}

uint64_t sub_100286FA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v4 = 0x697469736E617254;
  if ((a3 & 1) != 0)
    v4 = 0x3A6E6F28706F6F6CLL;
  v17 = v4;
  v5 = 0xE100000000000000;
  v6 = sub_1001C2824();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for PodcastsStateTransitions.State, v6);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(0xE100000000000000);
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    v11._countAndFlagsBits = Array.description.getter(v10, &type metadata for PodcastsStateTransitions.Effect);
    v12 = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v12);
    v13._countAndFlagsBits = 41;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14 = 0x746365666665202CLL;
    v5 = 0xEB00000000203A73;
  }
  else
  {
    v14 = 41;
  }
  v15 = v5;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v5);
  return v17;
}

uint64_t sub_1002870F0()
{
  unsigned __int8 *v0;

  return sub_100286FA0(*v0, *((_QWORD *)v0 + 1), v0[16]);
}

uint64_t sub_100287100()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 16));

  sub_10003D380((_QWORD *)(v0 + 64));
  sub_10003D380((_QWORD *)(v0 + 104));
  return swift_deallocClassInstance(v0, 144, 7);
}

uint64_t sub_10028713C(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  double v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  id v69;
  uint64_t v70;
  _BYTE v71[12];
  id v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82[4];
  id v83;
  uint64_t v84;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  v79 = v9;
  __chkstk_darwin();
  v11 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v81 = &v71[-v12];
  sub_10003F544(&qword_100560500);
  __chkstk_darwin();
  v14 = &v71[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for PodcastStateModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = &v71[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a1;
  PodcastStateModel.init(podcast:)(a1);
  v80 = v16;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v20 = sub_100289A94((uint64_t)v14);
    goto LABEL_6;
  }
  v21 = a4;
  v22 = v77;
  v74 = v11;
  v75 = a2;
  LODWORD(v76) = a3;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v80 + 32))(v18, v14, v15);
  v23 = objc_msgSend(v19, "managedObjectContext");
  if (!v23)
  {
    v20 = (*(uint64_t (**)(_BYTE *, uint64_t))(v80 + 8))(v18, v15);
LABEL_6:
    v30 = v81;
    static Logger.podcastsStatesCoordination.getter(v20);
    v31 = v19;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(52, -1);
      v35 = swift_slowAlloc(128, -1);
      v82[0] = v35;
      *(_DWORD *)v34 = 136381699;
      v36 = objc_msgSend(v31, "title");
      if (v36)
      {
        v37 = v36;
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
        v40 = v39;

      }
      else
      {
        v38 = 0x6C746974206F6E3CLL;
        v40 = 0xEA00000000003E65;
      }
      v83 = (id)sub_10003D274(v38, v40, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v34 + 4, v34 + 12);

      *(_QWORD *)&v42 = swift_bridgeObjectRelease(v40).n128_u64[0];
      *(_WORD *)(v34 + 12) = 2080;
      v43 = objc_msgSend(v31, "uuid", v42);
      v80 = v35;
      if (v43)
      {
        v44 = v43;
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
        v47 = v46;

      }
      else
      {
        v47 = 0xE700000000000000;
        v45 = 0x3E7974706D653CLL;
      }
      v83 = (id)sub_10003D274(v45, v47, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v34 + 14, v34 + 22);

      *(_QWORD *)&v48 = swift_bridgeObjectRelease(v47).n128_u64[0];
      *(_WORD *)(v34 + 22) = 2080;
      v83 = objc_msgSend(v31, "managedObjectContext", v48);
      v49 = sub_10003F544(&qword_1005534F0);
      v50 = String.init<A>(describing:)(&v83, v49);
      v52 = v51;
      v83 = (id)sub_10003D274(v50, v51, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v34 + 24, v34 + 32);

      *(_QWORD *)&v53 = swift_bridgeObjectRelease(v52).n128_u64[0];
      *(_WORD *)(v34 + 32) = 2049;
      v54 = objc_msgSend(v31, "storeCollectionId", v53);

      v83 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v34 + 34, v34 + 42);

      *(_WORD *)(v34 + 42) = 2081;
      v55 = objc_msgSend(v31, "feedURL");
      if (v55)
      {
        v56 = v55;
        v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v59 = v58;

        v60 = v57;
        v61 = v78;
        v63 = v80;
        v62 = v81;
      }
      else
      {
        v59 = 0xE700000000000000;
        v61 = v78;
        v63 = v80;
        v62 = v81;
        v60 = 0x3E7974706D653CLL;
      }
      v83 = (id)sub_10003D274(v60, v59, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v34 + 44, v34 + 52);

      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to create PodcastStateModel from Podcast, or Podcast without a valid managedObjectContext. Podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v34, 0x34u);
      swift_arrayDestroy(v63, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v79 + 8))(v62, v61);
    }
    else
    {

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v79 + 8))(v30, v78);
    }
  }
  v24 = v23;
  v81 = (_BYTE *)v15;
  v25 = v22;
  v26 = v22 + 2;
  v27 = v22[5];
  v28 = v22[6];
  sub_10003A834(v26, v27);
  v29 = (*(uint64_t (**)(_BYTE *, void *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v28 + 8))(v18, v24, v75, v76, v21, v27, v28);
  v65 = v64;
  sub_1002893A8((uint64_t)v19, v29);
  if (v65)
  {
    v73 = v18;
    v66 = *(_QWORD *)(v65 + 16);
    if (v66)
    {
      v72 = v24;
      swift_bridgeObjectRetain(v65);
      v78 = (uint64_t)(v25 + 8);
      swift_beginAccess(v25 + 8, v82, 0, 0);
      v76 = v65;
      v67 = (_BYTE *)(v65 + 40);
      v68 = v81;
      do
      {
        v70 = *((_QWORD *)v67 - 1);
        if (*v67)
        {
          if (*v67 != 1)
            __asm { BR              X8 }
          v69 = (id)v25[7];
          SyncKeysRepository.markBookmarksSyncDirty(_:for:)(1, v70);
        }
        else
        {
          v69 = (id)v25[7];
          SyncKeysRepository.markSubscriptionSyncDirty(_:for:)(1, v70);
        }

        v67 += 16;
        --v66;
      }
      while (v66);

      swift_bridgeObjectRelease_n(v76, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v65);

      v68 = v81;
    }
    v18 = v73;
  }
  else
  {

    v68 = v81;
  }
  return (*(uint64_t (**)(_BYTE *, _BYTE *))(v80 + 8))(v18, v68);
}

void sub_100287E2C(uint64_t a1, uint64_t a2, void *a3, NSObject *a4, int a5, char *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  id v43;
  NSObject *v44;
  char *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  NSString v55;
  id v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _BYTE *v65;
  id v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  os_log_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  os_log_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  _QWORD *Strong;
  id v108;
  uint64_t v109[4];
  uint64_t v110;
  _BYTE v111[32];

  v102 = a6;
  LODWORD(v101) = a5;
  v100 = a4;
  v108 = a3;
  v8 = type metadata accessor for PodcastStateModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v92 - v12;
  v14 = __chkstk_darwin(v11);
  v98 = (char *)&v92 - v15;
  v16 = __chkstk_darwin(v14);
  v96 = (char *)&v92 - v17;
  v18 = __chkstk_darwin(v16);
  v97 = (char *)&v92 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v92 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v92 - v24;
  v26 = __chkstk_darwin(v23);
  v106 = (char *)&v92 - v27;
  v28 = __chkstk_darwin(v26);
  v104 = (char *)&v92 - v29;
  __chkstk_darwin(v28);
  v103 = (char *)&v92 - v30;
  v31 = type metadata accessor for Logger(0);
  v105 = *(_QWORD *)(v31 - 8);
  v32 = __chkstk_darwin(v31);
  v99 = (char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v35 = (char *)&v92 - v34;
  a1 += 16;
  swift_beginAccess(a1, v111, 0, 0);
  Strong = (_QWORD *)swift_weakLoadStrong(a1);
  if (!Strong)
    return;
  v95 = v13;
  v38 = ((uint64_t (*)(void))PodcastStateModel.id.getter)();
  if (!v37)
  {
    v40 = (char *)objc_msgSend(v108, "podcastForStoreId:", v38);
    v41 = v106;
    if (v40)
      goto LABEL_11;
LABEL_7:
    static Logger.podcastsStatesCoordination.getter();
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v42(v103, a2, v8);
    v42(v104, a2, v8);
    v42(v41, a2, v8);
    v42(v25, a2, v8);
    v42(v22, a2, v8);
    v43 = v108;
    v44 = Logger.logObject.getter(v43);
    LODWORD(v108) = static os_log_type_t.error.getter(v44);
    v45 = v25;
    if (os_log_type_enabled(v44, (os_log_type_t)v108))
    {
      v100 = v44;
      v101 = v25;
      v102 = v35;
      v46 = swift_slowAlloc(50, -1);
      v99 = (char *)swift_slowAlloc(96, -1);
      v109[0] = (uint64_t)v99;
      *(_DWORD *)v46 = 136316419;
      v47 = objc_msgSend(v43, "name");
      v94 = v31;
      v92 = v9;
      if (v47)
      {
        v48 = v47;
        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v51 = v50;

      }
      else
      {
        v51 = 0xE500000000000000;
        v49 = 0x3E6C696E3CLL;
      }
      v69 = v103;
      v110 = sub_10003D274(v49, v51, v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v46 + 4, v46 + 12);

      v70 = swift_bridgeObjectRelease(v51);
      *(_WORD *)(v46 + 12) = 2081;
      v103 = (char *)(v46 + 14);
      v71 = PodcastStateModel.id.getter(v70);
      v73 = v72;
      v75 = v74;
      v76 = PodcastIdentifier.description.getter(v71);
      v78 = v77;
      sub_1001C2808(v71, v73, v75);
      v110 = sub_10003D274(v76, v78, v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v103, v46 + 22);
      swift_bridgeObjectRelease(v78);
      v79 = *(uint64_t (**)(char *, uint64_t))(v92 + 8);
      v80 = v79(v69, v8);
      *(_WORD *)(v46 + 22) = 2080;
      v81 = v104;
      v82 = PodcastStateModel.uuid.getter(v80);
      v84 = v83;
      v110 = sub_10003D274(v82, v83, v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v46 + 24, v46 + 32);
      swift_bridgeObjectRelease(v84);
      v85 = v79(v81, v8);
      *(_WORD *)(v46 + 32) = 1024;
      v86 = v106;
      LODWORD(v71) = PodcastStateModel.isHidden.getter(v85) & 1;
      v79(v86, v8);
      LODWORD(v110) = v71;
      v87 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 4, v46 + 34, v46 + 38);
      *(_WORD *)(v46 + 38) = 1024;
      v88 = v101;
      LODWORD(v86) = PodcastStateModel.isFollowed.getter(v87) & 1;
      v79(v88, v8);
      LODWORD(v110) = (_DWORD)v86;
      v89 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 4, v46 + 40, v46 + 44);
      *(_WORD *)(v46 + 44) = 1024;
      LODWORD(v81) = PodcastStateModel.isImplicitlyFollowed.getter(v89) & 1;
      v79(v22, v8);
      LODWORD(v110) = (_DWORD)v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 4, v46 + 46, v46 + 50);
      v90 = v100;
      _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v108, "Unable to find corresponding MTPodcast in context %s for PodcastStateModel with ID: %{private}s, uuid: %s, isHidden: %{BOOL}d, isFollowed: %{BOOL}d, isImplicitlyFollowed: %{BOOL}d.", (uint8_t *)v46, 0x32u);
      v91 = v99;
      swift_arrayDestroy(v99, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v46, -1, -1);
      swift_release(Strong);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v94);
    }
    else
    {
      v68 = *(void (**)(char *, uint64_t))(v9 + 8);
      v68(v22, v8);
      v68(v45, v8);
      v68(v41, v8);

      swift_release(Strong);
      v68(v103, v8);
      v68(v104, v8);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v35, v31);
    }
    return;
  }
  v39 = v36;
  v93 = v8;
  v52 = v22;
  v53 = v35;
  v54 = v9;
  if (v37 == 1)
  {
    v55 = String._bridgeToObjectiveC()();
    sub_1001C2808(v38, v39, 1u);
    v56 = objc_msgSend(v108, "podcastForUuid:", v55);
  }
  else
  {
    v55 = String._bridgeToObjectiveC()();
    sub_1001C2808(v38, v39, 2u);
    v56 = objc_msgSend(v108, "podcastForFeedUrl:", v55);
  }
  v40 = (char *)v56;

  v9 = v54;
  v35 = v53;
  v22 = v52;
  v8 = v93;
  v41 = v106;
  if (!v40)
    goto LABEL_7;
LABEL_11:
  v106 = v40;
  v94 = v31;
  v57 = Strong;
  v58 = Strong[5];
  v59 = Strong[6];
  sub_10003A834(Strong + 2, v58);
  v60 = (*(uint64_t (**)(uint64_t, id, os_log_t, _QWORD, char *, uint64_t, uint64_t))(v59 + 8))(a2, v108, v100, v101, v102, v58, v59);
  v62 = v61;
  v63 = v106;
  sub_1002893A8((uint64_t)v106, v60);
  if (!v62)
  {
LABEL_26:
    swift_release(v57);

    return;
  }
  v64 = *(_QWORD *)(v62 + 16);
  if (!v64)
  {
    swift_bridgeObjectRelease(v62);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain(v62);
  v108 = v57 + 8;
  swift_beginAccess(v57 + 8, v109, 0, 0);
  v65 = (_BYTE *)(v62 + 40);
  do
  {
    v67 = *((_QWORD *)v65 - 1);
    if (*v65)
    {
      if (*v65 != 1)
        __asm { BR              X8 }
      v66 = (id)v57[7];
      SyncKeysRepository.markBookmarksSyncDirty(_:for:)(1, v67);
    }
    else
    {
      v66 = (id)v57[7];
      SyncKeysRepository.markSubscriptionSyncDirty(_:for:)(1, v67);
    }

    v65 += 16;
    --v64;
  }
  while (v64);
  swift_release(v57);

  swift_bridgeObjectRelease_n(v62, 2);
}

uint64_t sub_100288C0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  NSObject *v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  NSObject *v36;
  uint8_t *v37;
  uint64_t v38;
  char v39;
  uint64_t result;
  uint64_t v41;
  char v42;
  _QWORD v43[7];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a4;
  sub_10003F544(&qword_100560500);
  __chkstk_darwin();
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PodcastStateModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v43[5] = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)v43 - v12;
  __chkstk_darwin();
  v15 = (char *)v43 - v14;
  v16 = type metadata accessor for Logger(0);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  __chkstk_darwin();
  v43[6] = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)v43 - v18;
  __chkstk_darwin();
  v21 = (char *)v43 - v20;
  v44 = a2;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(a1, "podcastForUuid:", v22);

  if (v23)
  {
    v25 = v23;
    PodcastStateModel.init(podcast:)(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      v42 = PodcastStateModel.sanitizedState()(v41);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);

      __asm { BR              X10 }
    }
    v26 = sub_100289A94((uint64_t)v8);
    v27 = static Logger.podcastsStatesCoordination.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    v29 = swift_bridgeObjectRetain_n(a3, 2);
    v30 = Logger.logObject.getter(v29);
    if (os_log_type_enabled(v30, v28))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v49 = v32;
      *(_DWORD *)v31 = 136315138;
      swift_bridgeObjectRetain(a3);
      v48 = sub_10003D274(v44, a3, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v30, v28, "Failed to create PodcastStateModel from show %s for current podcast state lookup.", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v46);
    v39 = 4;
  }
  else
  {
    v33 = static Logger.podcastsStatesCoordination.getter(v24);
    v34 = static os_log_type_t.error.getter(v33);
    v35 = swift_bridgeObjectRetain_n(a3, 2);
    v36 = Logger.logObject.getter(v35);
    if (os_log_type_enabled(v36, v34))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v49 = v38;
      *(_DWORD *)v37 = 136315138;
      swift_bridgeObjectRetain(a3);
      v48 = sub_10003D274(v44, a3, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v37 + 4, v37 + 12);
      v39 = 3;
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v36, v34, "Failed to locate show %s for current podcast state lookup.", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v21, v46);
    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
      result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v21, v46);
      v39 = 3;
    }
  }
  *v47 = v39;
  return result;
}

void sub_1002893A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

id sub_1002893D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;

  objc_msgSend(v14, "setSubscribed:", 1);
  objc_msgSend(v14, "setIsImplicitlyFollowed:", 0);
  return objc_msgSend(v14, "setHidden:", 0);
}

void sub_1002894BC(uint64_t a1, uint64_t a2)
{
  sub_1002899C8(a2);
}

void sub_1002894C4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1002894F4@<X0>(uint64_t a1@<X8>)
{
  Swift::String v1;
  void *object;
  Swift::String v3;

  v1._countAndFlagsBits = ((uint64_t (*)(uint64_t))MTSubscriptionSyncType.description.getter)(a1);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x28776F6C6C6F66;
}

void sub_100289600()
{
  JUMPOUT(0x1002895F0);
}

void sub_1002896D0()
{
  uint64_t v0;

  sub_1002894C4(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1002896DC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  _QWORD v8[2];

  if (a2)
  {
    if (a2 != 1)
      __asm { BR              X10 }
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(0xE000000000000000);
    strcpy((char *)v8, "syncBookmarks(");
    HIBYTE(v8[1]) = -18;
    v3 = MTBookmarksSyncType.description.getter(a1);
  }
  else
  {
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease(0xE000000000000000);
    v8[0] = 0xD000000000000012;
    v8[1] = 0x8000000100438D30;
    v3 = MTSubscriptionSyncType.description.getter(a1);
  }
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v5);
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v8[0];
}

uint64_t sub_10028984C()
{
  uint64_t v0;

  return sub_1002896DC(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_100289858(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_100289874 + 4 * byte_1003D1BA5[a2]))();
}

BOOL sub_100289874(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return !a4 && a1 == a3;
}

void sub_1002899C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v6 = a1;
  else
    v6 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v6);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v4 = *(id *)(a1 + 8 * i + 32);
      v5 = v4;
      sub_10028713C(v4, 4, 4, 3);

    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_100289A94(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_100560500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState.PlayState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState.PlayState;
}

uint64_t _s8Podcasts24PodcastsStateTransitionsC13EpisodesStateV12LibraryStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100289B38 + 4 * byte_1003D1BB9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100289B6C + 4 * byte_1003D1BB4[v4]))();
}

uint64_t sub_100289B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100289B7CLL);
  return result;
}

uint64_t sub_100289B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100289B90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100289B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState.LibraryState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState.LibraryState;
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100289C04 + 4 * byte_1003D1BC3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100289C38 + 4 * byte_1003D1BBE[v4]))();
}

uint64_t sub_100289C38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100289C48);
  return result;
}

uint64_t sub_100289C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100289C5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100289C60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289C68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.State()
{
  return &type metadata for PodcastsStateTransitions.State;
}

uint64_t initializeWithTake for CarPlayNowPlayingPlayContext(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100289D24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_100289D3C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.Event()
{
  return &type metadata for PodcastsStateTransitions.Event;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.Effect(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.Effect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100289DF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100289E08(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.Effect()
{
  return &type metadata for PodcastsStateTransitions.Effect;
}

unint64_t sub_100289E34()
{
  unint64_t result;

  result = qword_10055E6B0;
  if (!qword_10055E6B0)
  {
    result = swift_getWitnessTable(&unk_1003D1CC4, &type metadata for PodcastsStateTransitions.Event);
    atomic_store(result, (unint64_t *)&qword_10055E6B0);
  }
  return result;
}

unint64_t sub_100289E80()
{
  unint64_t result;

  result = qword_10055E6B8;
  if (!qword_10055E6B8)
  {
    result = swift_getWitnessTable(&unk_1003D1D5C, &type metadata for PodcastsStateTransitions.State);
    atomic_store(result, (unint64_t *)&qword_10055E6B8);
  }
  return result;
}

unint64_t sub_100289EC8()
{
  unint64_t result;

  result = qword_10055E6C0;
  if (!qword_10055E6C0)
  {
    result = swift_getWitnessTable(&unk_1003D1DD4, &type metadata for PodcastsStateTransitions.State);
    atomic_store(result, (unint64_t *)&qword_10055E6C0);
  }
  return result;
}

unint64_t sub_100289F14()
{
  unint64_t result;

  result = qword_10055E6C8;
  if (!qword_10055E6C8)
  {
    result = swift_getWitnessTable(&unk_1003D1E2C, &type metadata for PodcastsStateTransitions.EpisodesState.LibraryState);
    atomic_store(result, (unint64_t *)&qword_10055E6C8);
  }
  return result;
}

unint64_t sub_100289F5C()
{
  unint64_t result;

  result = qword_10055E6D0;
  if (!qword_10055E6D0)
  {
    result = swift_getWitnessTable(&unk_1003D1EA4, &type metadata for PodcastsStateTransitions.EpisodesState.LibraryState);
    atomic_store(result, (unint64_t *)&qword_10055E6D0);
  }
  return result;
}

unint64_t sub_100289FA8()
{
  unint64_t result;

  result = qword_10055E6D8;
  if (!qword_10055E6D8)
  {
    result = swift_getWitnessTable(&unk_1003D1EFC, &type metadata for PodcastsStateTransitions.EpisodesState.PlayState);
    atomic_store(result, (unint64_t *)&qword_10055E6D8);
  }
  return result;
}

unint64_t sub_100289FF0()
{
  unint64_t result;

  result = qword_10055E6E0;
  if (!qword_10055E6E0)
  {
    result = swift_getWitnessTable(&unk_1003D1F74, &type metadata for PodcastsStateTransitions.EpisodesState.PlayState);
    atomic_store(result, (unint64_t *)&qword_10055E6E0);
  }
  return result;
}

unint64_t sub_10028A034()
{
  unint64_t result;

  result = qword_10055E6E8;
  if (!qword_10055E6E8)
  {
    result = swift_getWitnessTable(&unk_1003D1D2C, &type metadata for PodcastsStateTransitions.State);
    atomic_store(result, (unint64_t *)&qword_10055E6E8);
  }
  return result;
}

unint64_t sub_10028A078()
{
  unint64_t result;

  result = qword_10055E6F0;
  if (!qword_10055E6F0)
  {
    result = swift_getWitnessTable(&unk_1003D1DFC, &type metadata for PodcastsStateTransitions.EpisodesState.LibraryState);
    atomic_store(result, (unint64_t *)&qword_10055E6F0);
  }
  return result;
}

unint64_t sub_10028A0BC()
{
  unint64_t result;

  result = qword_10055E6F8;
  if (!qword_10055E6F8)
  {
    result = swift_getWitnessTable(&unk_1003D1ECC, &type metadata for PodcastsStateTransitions.EpisodesState.PlayState);
    atomic_store(result, (unint64_t *)&qword_10055E6F8);
  }
  return result;
}

unint64_t sub_10028A100(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1004AD148, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

_WORD *initializeBufferWithCopyOfBuffer for PodcastsStateTransitions.EpisodesState(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PodcastsStateTransitions.EpisodesState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PodcastsStateTransitions.EpisodesState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10028A234 + 4 * byte_1003D1BCD[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10028A268 + 4 * byte_1003D1BC8[v4]))();
}

uint64_t sub_10028A268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10028A270(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10028A278);
  return result;
}

uint64_t sub_10028A284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10028A28CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10028A290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10028A298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PodcastsStateTransitions.EpisodesState()
{
  return &type metadata for PodcastsStateTransitions.EpisodesState;
}

id sub_10028A2BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), "currentConstant");
}

uint64_t sub_10028A2CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  sub_10020FF2C(v0 + 48);
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t _s7SectionCMa()
{
  return objc_opt_self(_TtCC8Podcasts45MTNotificationSettingsSectionedViewController7Section);
}

id sub_10028A328(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  NSString v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v27;

  v4 = v3;
  v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    v8 = (char *)v4 + OBJC_IVAR___MTSwiftEpisodeListManifest_settings;
    v9 = type metadata accessor for EpisodeListSettings(0);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a3, v9);
    static String._unconditionallyBridgeFromObjectiveC(_:)(kMTEpisodeEntityName);
    v12 = v11;
    v13 = objc_allocWithZone((Class)NSFetchRequest);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "initWithEntityName:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v16 = (void *)EpisodeListSettings.playPredicate.getter();
    objc_msgSend(v15, "setPredicate:", v16);

    v18 = EpisodeListSettings.sort.getter(v17);
    v19 = EpisodeSortType.playDescriptors.getter(v18);
    sub_100045ED8();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "setSortDescriptors:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v27.receiver = v4;
    v27.super_class = (Class)type metadata accessor for EpisodeListManifest(0);
    v22 = objc_msgSendSuper2(&v27, "initWithInitialEpisodeUuid:fetchRequest:", v21, v15);

    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
    if (v23)

  }
  else
  {
    swift_bridgeObjectRelease(a2);
    v24 = type metadata accessor for EpisodeListSettings(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a3, v24);
    v25 = type metadata accessor for EpisodeListManifest(0);
    swift_deallocPartialClassInstance(v4, v25, *(unsigned int *)((swift_isaMask & *v4) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v4) + 0x34));
    return 0;
  }
  return v23;
}

id sub_10028A574()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeListManifest(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_10028A614()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  Class isa;
  NSString v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  Class v28;
  NSString v29;
  uint64_t v31;
  objc_super v32;

  v1 = v0;
  v2 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = JSONEncoder.init()();
  v4 = &v1[OBJC_IVAR___MTSwiftEpisodeListManifest_settings];
  v5 = type metadata accessor for EpisodeListSettings(0);
  v6 = sub_10028B0E8(&qword_10055E870, (uint64_t)&protocol conformance descriptor for EpisodeListSettings);
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v4, v5, v6);
  v9 = v8;
  swift_release(v3);
  v32.receiver = v1;
  v32.super_class = (Class)type metadata accessor for EpisodeListManifest(0);
  v10 = objc_msgSendSuper2(&v32, "activity");
  v11 = v10;
  if (v10)
  {
    v12 = v10;
    isa = Data._bridgeToObjectiveC()().super.isa;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setValue:forKey:", isa, v14);

  }
  v15 = objc_msgSend(v1, "explicitSortOrder");
  if (!v15)
  {
    v20 = v7;
    v21 = v9;
LABEL_11:
    sub_100032A84(v20, v21);
    return v11;
  }

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v16 = JSONEncoder.init()();
  v17 = objc_msgSend(v1, "explicitSortOrder");
  if (v17)
  {
    v18 = v17;
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String);

  }
  else
  {
    v19 = 0;
  }
  v31 = v19;
  v22 = sub_10003F544(&qword_10055E878);
  v23 = sub_10028B128();
  v24 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v31, v22, v23);
  v26 = v25;
  swift_release(v16);
  swift_bridgeObjectRelease(v19);
  if (!v11)
  {
    sub_100032A84(v7, v9);
    v20 = v24;
    v21 = v26;
    goto LABEL_11;
  }
  v27 = v11;
  v28 = Data._bridgeToObjectiveC()().super.isa;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setValue:forKey:", v28, v29, v31);
  sub_100032A84(v7, v9);
  sub_100032A84(v24, v26);

  return v11;
}

uint64_t sub_10028A8F8(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  Class isa;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(_QWORD);
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;

  sub_10003F544(&qword_10055B790);
  __chkstk_darwin();
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EpisodeListSettings(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  if (!a2)
    return ((uint64_t (*)(_QWORD))a4)(0);
  v54 = (char *)&v51 - v16;
  v56 = a4;
  v17 = objc_msgSend(a3, "userInfo", swift_bridgeObjectRetain(a2).n128_f64[0]);
  if (!v17)
  {
    v61 = 0u;
    v62 = 0u;
    swift_bridgeObjectRelease(a2);
    a4 = v56;
LABEL_13:
    sub_100007A28((uint64_t)&v61, (uint64_t *)&unk_100552300);
    return ((uint64_t (*)(_QWORD))a4)(0);
  }
  v18 = v17;
  v53 = a1;
  v55 = a5;
  v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v57 = 0xD00000000000001ELL;
  v58 = 0x8000000100438E20;
  AnyHashable.init<A>(_:)(&v57, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = sub_1001CCFC0((uint64_t)&v59);
    a4 = v56;
    if ((v21 & 1) != 0)
    {
      sub_10003D344(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v61);
    }
    else
    {
      v61 = 0u;
      v62 = 0u;
    }
  }
  else
  {
    v61 = 0u;
    v62 = 0u;
    a4 = v56;
  }
  sub_100048644((uint64_t)&v59);
  swift_bridgeObjectRelease(v19);
  if (!*((_QWORD *)&v62 + 1))
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v59, &v61, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
  {
    v51 = v13;
    v22 = v59;
    v23 = v60;
    v24 = type metadata accessor for JSONDecoder(0);
    v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v26 = JSONDecoder.init()(v25);
    v27 = sub_10028B0E8(&qword_10055E868, (uint64_t)&protocol conformance descriptor for EpisodeListSettings);
    v52 = v23;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v12, v22, v23, v12, v27);
    swift_release(v26);
    v29 = v51;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v11, 0, 1, v12);
    v30 = v54;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v54, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v15, v30, v12);
    v31 = objc_allocWithZone((Class)type metadata accessor for EpisodeListManifest(0));
    v32 = sub_10028A328(v53, a2, (uint64_t)v15);
    v33 = objc_msgSend(a3, "userInfo");
    if (v33)
    {
      v34 = v33;
      v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v57 = 0xD000000000000014;
      v58 = 0x8000000100438E40;
      AnyHashable.init<A>(_:)(&v57, &type metadata for String, &protocol witness table for String);
      v36 = v22;
      if (*(_QWORD *)(v35 + 16) && (v37 = sub_1001CCFC0((uint64_t)&v59), (v38 & 1) != 0))
      {
        sub_10003D344(*(_QWORD *)(v35 + 56) + 32 * v37, (uint64_t)&v61);
      }
      else
      {
        v61 = 0u;
        v62 = 0u;
      }
      v39 = v52;
      sub_100048644((uint64_t)&v59);
      swift_bridgeObjectRelease(v35);
      if (*((_QWORD *)&v62 + 1))
      {
        if ((swift_dynamicCast(&v59, &v61, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
        {
          v41 = v59;
          v40 = v60;
          v42 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
          v43 = JSONDecoder.init()(v42);
          v44 = sub_10003F544((uint64_t *)&unk_10055FDF0);
          v45 = sub_1001C3030(&qword_100557ED8, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
          dispatch thunk of JSONDecoder.decode<A>(_:from:)(v44, v41, v40, v44, v45);
          swift_release(v43);
          v48 = v59;
          if (!v32)
          {
            sub_100032A84(v41, v40);
            swift_bridgeObjectRelease(v48);
            v46 = 0;
            v39 = v52;
            goto LABEL_30;
          }
          v49 = v32;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v49, "setExplicitSortOrder:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);
          sub_100032A84(v41, v40);

          v39 = v52;
          goto LABEL_28;
        }
LABEL_27:
        if (!v32)
        {
          v46 = 0;
          goto LABEL_30;
        }
LABEL_28:
        v46 = v32;
LABEL_30:
        v47 = v32;
        v56(v46);
        sub_100032A84(v36, v39);

        return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v54, v12);
      }
    }
    else
    {
      v61 = 0u;
      v62 = 0u;
      v36 = v22;
      v39 = v52;
    }
    sub_100007A28((uint64_t)&v61, (uint64_t *)&unk_100552300);
    goto LABEL_27;
  }
  swift_bridgeObjectRelease(a2);
  return ((uint64_t (*)(_QWORD))a4)(0);
}

uint64_t sub_10028AF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  swift_retain(v2);
  v3(v4, v6);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10028B08C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028B0B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10028B0DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10028A8F8(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10028B0E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EpisodeListSettings(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10028B128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055E880;
  if (!qword_10055E880)
  {
    v1 = sub_10003CA40(&qword_10055E878);
    sub_1001C3030(&qword_100557EC0, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10055E880);
  }
  return result;
}

void sub_10028B1A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int64_t v38;

  v2 = sub_10003F544(&qword_10055E890);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URLQueryItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v34 = (char *)&v33 - v9;
  v10 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v38 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  v36 = (char *)_swiftEmptyArrayStorage;
  if (v13)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v17 = v14 + 1;
    if (!__OFADD__(v14, 1))
    {
      if (v17 < v38)
      {
        v18 = *(_QWORD *)(v37 + 8 * v17);
        ++v14;
        if (v18)
          goto LABEL_23;
        v14 = v17 + 1;
        if (v17 + 1 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v37 + 8 * v14);
        if (v18)
          goto LABEL_23;
        v14 = v17 + 2;
        if (v17 + 2 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v37 + 8 * v14);
        if (v18)
          goto LABEL_23;
        v14 = v17 + 3;
        if (v17 + 3 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v37 + 8 * v14);
        if (v18)
        {
LABEL_23:
          v13 = (v18 - 1) & v18;
          for (i = __clz(__rbit64(v18)) + (v14 << 6); ; i = v15 | (v14 << 6))
          {
            v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
            v21 = v20[1];
            if (!v21)
              break;
            v22 = *v20;
            v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
            v25 = *v23;
            v24 = v23[1];
            swift_bridgeObjectRetain(v21);
            swift_bridgeObjectRetain(v24);
            URLQueryItem.init(name:value:)(v25, v24, v22, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
            swift_bridgeObjectRelease(v21);
            v26 = swift_bridgeObjectRelease(v24);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v26) == 1)
              goto LABEL_6;
            v27 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v28 = v34;
            v27(v34, v4, v5);
            v27(v35, v28, v5);
            if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
              v36 = (char *)sub_10027B378(0, *((_QWORD *)v36 + 2) + 1, 1, (unint64_t)v36);
            v30 = *((_QWORD *)v36 + 2);
            v29 = *((_QWORD *)v36 + 3);
            if (v30 >= v29 >> 1)
              v36 = (char *)sub_10027B378(v29 > 1, v30 + 1, 1, (unint64_t)v36);
            v31 = v35;
            v32 = v36;
            *((_QWORD *)v36 + 2) = v30 + 1;
            v27(&v32[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v30], v31, v5);
            if (!v13)
              goto LABEL_8;
LABEL_7:
            v15 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_6:
          sub_100007A28((uint64_t)v4, &qword_10055E890);
          if (!v13)
            continue;
          goto LABEL_7;
        }
        v19 = v17 + 4;
        if (v19 < v38)
        {
          v18 = *(_QWORD *)(v37 + 8 * v19);
          if (v18)
          {
            v14 = v19;
            goto LABEL_23;
          }
          while (1)
          {
            v14 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_34;
            if (v14 >= v38)
              break;
            v18 = *(_QWORD *)(v37 + 8 * v14);
            ++v19;
            if (v18)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release(a1);
      return;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

double sub_10028B54C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_10003F544(&qword_10055A410);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URLComponents(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_16;
  v13 = type metadata accessor for ChannelContextActionConfiguration(0);
  if (swift_dynamicCastClass(a1, v13))
  {
    swift_retain();
    sub_10028B848(a2, a3);
LABEL_10:
    swift_release(a1);
    return result;
  }
  v14 = type metadata accessor for EpisodeContextActionConfiguration(0);
  if (swift_dynamicCastClass(a1, v14))
  {
    swift_retain();
    sub_10028BAD4(a2, a3);
    goto LABEL_10;
  }
  v15 = type metadata accessor for PodcastContextActionConfiguration(0);
  if (swift_dynamicCastClass(a1, v15))
  {
    swift_retain();
    sub_10028BC90(a2, a3);
    goto LABEL_10;
  }
  v16 = type metadata accessor for NowPlayingContextActionConfiguration(0);
  if (swift_dynamicCastClass(a1, v16))
  {
    swift_retain();
    sub_10028C3E8(a2, a3);
    goto LABEL_10;
  }
  v18 = type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
  v19 = swift_dynamicCastClass(a1, v18);
  if (!v19)
  {
LABEL_16:
    v24 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a3, 1, 1, v24);
    return result;
  }
  if (!*(_QWORD *)(v19 + OBJC_IVAR____TtC8Podcasts45TranscriptSelectionContextActionConfiguration_dataSource))
  {
    swift_retain();
    goto LABEL_18;
  }
  swift_retain();
  sub_10028C818();
  if (!v20)
  {
LABEL_18:
    v25 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 1, 1, v25);
    goto LABEL_10;
  }
  v22 = v20;
  URLComponents.init(url:resolvingAgainstBaseURL:)(a2, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100007A28((uint64_t)v8, &qword_10055A410);
    v23 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v26 = swift_bridgeObjectRetain(v22);
    v27 = URLComponents.queryItems.setter(v26);
    URLComponents.url.getter(v27);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  swift_release(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  return result;
}

double sub_10028B848@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[232];

  v26 = a2;
  v4 = sub_10003F544(&qword_10055A410);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelName);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelName + 8);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelAdamId);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33ChannelContextActionConfiguration_channelAdamId + 8);
  v15 = sub_10003F544(&qword_10055E888);
  inited = swift_initStackObject(v15, v27);
  *(_OWORD *)(inited + 16) = xmmword_1003CAEF0;
  *(_QWORD *)(inited + 32) = 0x4E65646F73697065;
  *(_QWORD *)(inited + 40) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
  *(_QWORD *)(inited + 64) = 0x4965646F73697065;
  *(_QWORD *)(inited + 72) = 0xE900000000000064;
  *(_QWORD *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0x4E74736163646F70;
  *(_QWORD *)(inited + 104) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 112) = 0;
  *(_QWORD *)(inited + 120) = 0;
  *(_QWORD *)(inited + 128) = 0x4974736163646F70;
  *(_QWORD *)(inited + 136) = 0xE900000000000064;
  *(_QWORD *)(inited + 144) = 0;
  *(_QWORD *)(inited + 152) = 0;
  *(_QWORD *)(inited + 160) = 0x4E6C656E6E616863;
  *(_QWORD *)(inited + 168) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 176) = v12;
  *(_QWORD *)(inited + 184) = v11;
  *(_QWORD *)(inited + 192) = 0x496C656E6E616863;
  *(_QWORD *)(inited + 200) = 0xE900000000000064;
  *(_QWORD *)(inited + 208) = v13;
  *(_QWORD *)(inited + 216) = v14;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  v17 = sub_100138BD4(inited);
  sub_10028B1A4(v17);
  v19 = v18;
  v20 = swift_bridgeObjectRelease(v17);
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100007A28((uint64_t)v6, &qword_10055A410);
    v21 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v26, 1, 1, v21);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v22 = swift_bridgeObjectRetain(v19);
    v23 = URLComponents.queryItems.setter(v22);
    URLComponents.url.getter(v23);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  return result;
}

double sub_10028BAD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_10003F544(&qword_10055A410);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33EpisodeContextActionConfiguration_dataSource);
  swift_retain();
  sub_10028C818();
  v14 = v13;
  swift_release(v12);
  if (v14)
  {
    URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100007A28((uint64_t)v7, &qword_10055A410);
      v16 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v19 = swift_bridgeObjectRetain(v14);
      v20 = URLComponents.queryItems.setter(v19);
      URLComponents.url.getter(v20);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  return result;
}

double sub_10028BC90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (**v14)(char *, char *, char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(char *, char *, char *);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (**v44)(char *, char *, char *);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __n128 v54;
  uint64_t v55;
  __n128 v56;
  double result;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (**v88)(char *, char *, char *);
  __n128 v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t (**v94)(char *, char *, char *);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[4];
  uint64_t v103;
  char v104[32];

  v97 = a1;
  v98 = a2;
  v3 = type metadata accessor for ShowOffer(0);
  v94 = *(uint64_t (***)(char *, char *, char *))(v3 - 8);
  v95 = (char *)v3;
  __chkstk_darwin(v3);
  v93 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544(&qword_10055A410);
  v6 = __chkstk_darwin(v5);
  v92 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v91 - v8;
  v99 = type metadata accessor for URLComponents(0);
  v96 = *(_QWORD *)(v99 - 8);
  v10 = __chkstk_darwin(v99);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (uint64_t (**)(char *, char *, char *))((char *)&v91 - v13);
  v15 = type metadata accessor for PodcastContextActionDataType(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v91 - v19;
  v21 = OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource;
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts33PodcastContextActionConfiguration_dataSource)
      + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v22, v104, 0, 0);
  sub_10016E904(v22, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload(v20, v15) == 1)
  {
    v91 = v12;
    v24 = v93;
    v23 = v94;
    v25 = v95;
    v26 = v94[4](v93, v20, v95);
    v27 = ShowOffer.title.getter(v26);
    v29 = v28;
    v102[0] = ShowOffer.adamId.getter(v27);
    v30 = sub_100030584();
    v31 = BinaryInteger.description.getter(&type metadata for UInt64, v30);
    v33 = v32;
    v34 = sub_10003F544(&qword_10055E888);
    inited = swift_initStackObject(v34, &v103);
    *(_OWORD *)(inited + 16) = xmmword_1003CAEF0;
    *(_QWORD *)(inited + 32) = 0x4E65646F73697065;
    *(_QWORD *)(inited + 40) = 0xEB00000000656D61;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0x4965646F73697065;
    *(_QWORD *)(inited + 72) = 0xE900000000000064;
    *(_QWORD *)(inited + 80) = 0;
    *(_QWORD *)(inited + 88) = 0;
    *(_QWORD *)(inited + 96) = 0x4E74736163646F70;
    *(_QWORD *)(inited + 104) = 0xEB00000000656D61;
    *(_QWORD *)(inited + 112) = v27;
    *(_QWORD *)(inited + 120) = v29;
    *(_QWORD *)(inited + 128) = 0x4974736163646F70;
    *(_QWORD *)(inited + 136) = 0xE900000000000064;
    *(_QWORD *)(inited + 144) = v31;
    *(_QWORD *)(inited + 152) = v33;
    *(_QWORD *)(inited + 160) = 0x4E6C656E6E616863;
    *(_QWORD *)(inited + 168) = 0xEB00000000656D61;
    *(_QWORD *)(inited + 176) = 0;
    *(_QWORD *)(inited + 184) = 0;
    *(_QWORD *)(inited + 192) = 0x496C656E6E616863;
    *(_QWORD *)(inited + 200) = 0xE900000000000064;
    *(_QWORD *)(inited + 208) = 0;
    *(_QWORD *)(inited + 216) = 0;
    v36 = sub_100138BD4(inited);
    sub_10028B1A4(v36);
    v38 = v37;
    v39 = swift_bridgeObjectRelease(v36);
    v40 = (uint64_t)v92;
    URLComponents.init(url:resolvingAgainstBaseURL:)(v97, 1, v39);
    v41 = v96;
    v42 = v99;
    v43 = v25;
    v44 = v23;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v40, 1, v99) == 1)
    {
      sub_100007A28(v40, &qword_10055A410);
      v45 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v98, 1, 1, v45);
    }
    else
    {
      v53 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v91, v40, v42);
      v54 = swift_bridgeObjectRetain(v38);
      v55 = URLComponents.queryItems.setter(v54);
      URLComponents.url.getter(v55);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v53, v42);
    }
    v56 = swift_bridgeObjectRelease(v38);
    ((void (*)(char *, char *, __n128))v44[1])(v24, v43, v56);
  }
  else
  {
    v94 = v14;
    v95 = v9;
    v46 = v99;
    swift_bridgeObjectRelease(*((_QWORD *)v20 + 1));
    v47 = *(_QWORD *)(v2 + v21) + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess(v47, v102, 0, 0);
    sub_10016E904(v47, (uint64_t)v18);
    v48 = (void *)sub_1001E2CF0();
    sub_10016E98C((uint64_t)v18);
    if (v48)
    {
      v49 = objc_msgSend(v48, "title");
      if (v49)
      {
        v50 = v49;
        v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v91 = v52;
        v92 = (char *)v51;

      }
      else
      {
        v91 = 0;
        v92 = 0;
      }
      v59 = (uint64_t)objc_msgSend(v48, "storeCollectionId", v91);
      v101 = AdamID.init(rawValue:)(v59 & ~(v59 >> 63));
      v60 = sub_100030584();
      v61 = BinaryInteger.description.getter(&type metadata for UInt64, v60);
      v63 = v62;
      v64 = objc_msgSend(v48, "channel");
      v93 = v63;
      if (v64
        && (v65 = v64, v66 = objc_msgSend(v64, "name"), v65, v66))
      {
        v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
        v69 = v68;

      }
      else
      {
        v67 = 0;
        v69 = 0;
      }
      v70 = objc_msgSend(v48, "channel");
      v71 = v70;
      if (v70)
      {
        v72 = (uint64_t)objc_msgSend(v70, "storeId");

        v101 = AdamID.init(rawValue:)(v72 & ~(v72 >> 63));
        v71 = (void *)BinaryInteger.description.getter(&type metadata for UInt64, v60);
        v74 = v73;
      }
      else
      {
        v74 = 0;
      }
      v75 = v98;
      v76 = v46;
      v77 = v96;
      v78 = sub_10003F544(&qword_10055E888);
      v79 = swift_initStackObject(v78, &v100);
      *(_OWORD *)(v79 + 16) = xmmword_1003CAEF0;
      *(_QWORD *)(v79 + 32) = 0x4E65646F73697065;
      *(_QWORD *)(v79 + 40) = 0xEB00000000656D61;
      *(_QWORD *)(v79 + 48) = 0;
      *(_QWORD *)(v79 + 56) = 0;
      *(_QWORD *)(v79 + 64) = 0x4965646F73697065;
      *(_QWORD *)(v79 + 72) = 0xE900000000000064;
      *(_QWORD *)(v79 + 80) = 0;
      *(_QWORD *)(v79 + 88) = 0;
      *(_QWORD *)(v79 + 96) = 0x4E74736163646F70;
      *(_QWORD *)(v79 + 104) = 0xEB00000000656D61;
      v80 = v91;
      *(_QWORD *)(v79 + 112) = v92;
      *(_QWORD *)(v79 + 120) = v80;
      *(_QWORD *)(v79 + 128) = 0x4974736163646F70;
      *(_QWORD *)(v79 + 136) = 0xE900000000000064;
      v81 = v93;
      *(_QWORD *)(v79 + 144) = v61;
      *(_QWORD *)(v79 + 152) = v81;
      *(_QWORD *)(v79 + 160) = 0x4E6C656E6E616863;
      *(_QWORD *)(v79 + 168) = 0xEB00000000656D61;
      *(_QWORD *)(v79 + 176) = v67;
      *(_QWORD *)(v79 + 184) = v69;
      *(_QWORD *)(v79 + 192) = 0x496C656E6E616863;
      *(_QWORD *)(v79 + 200) = 0xE900000000000064;
      *(_QWORD *)(v79 + 208) = v71;
      *(_QWORD *)(v79 + 216) = v74;
      v82 = sub_100138BD4(v79);
      sub_10028B1A4(v82);
      v84 = v83;
      v85 = swift_bridgeObjectRelease(v82);
      v86 = (uint64_t)v95;
      URLComponents.init(url:resolvingAgainstBaseURL:)(v97, 1, v85);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v86, 1, v76) == 1)
      {
        sub_100007A28(v86, &qword_10055A410);
        v87 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v75, 1, 1, v87);
      }
      else
      {
        v88 = v94;
        (*(void (**)(uint64_t (**)(char *, char *, char *), uint64_t, uint64_t))(v77 + 32))(v94, v86, v76);
        v89 = swift_bridgeObjectRetain(v84);
        v90 = URLComponents.queryItems.setter(v89);
        URLComponents.url.getter(v90);
        (*(void (**)(uint64_t (**)(char *, char *, char *), uint64_t))(v77 + 8))(v88, v76);
      }

      *(_QWORD *)&result = swift_bridgeObjectRelease(v84).n128_u64[0];
    }
    else
    {
      v58 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v98, 1, 1, v58);
    }
  }
  return result;
}

uint64_t sub_10028C3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(__n128);
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  unsigned __int8 v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v55 = a1;
  v56 = a2;
  v3 = sub_10003F544(&qword_10055A410);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 256);
  v12 = (void *)((uint64_t (*)(uint64_t))v11)(v8);
  v13 = objc_msgSend(v12, "author");

  if (v13 && (v14 = objc_msgSend(v13, "name"), v13, v14))
  {
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v53 = v16;
    v54 = v15;

  }
  else
  {
    v53 = 0;
    v54 = 0;
  }
  v17 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
  v18 = swift_dynamicCastClass(v2, v17);
  if (v18)
    v19 = swift_retain();
  v20 = (void *)v11(v19);
  v21 = objc_msgSend(v20, "title");

  if (v21)
  {
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = (void *)((uint64_t (*)(void))v11)();
  v26 = objc_msgSend(v25, "podcast");

  if (!v26 || (v35 = MPModelObject.adamID.getter(v27), v37 = v36, v26, (v37 & 1) != 0))
  {
    v39 = 0;
    v41 = 0;
  }
  else
  {
    v57 = v35;
    v38 = sub_100030584();
    v39 = BinaryInteger.description.getter(&type metadata for UInt64, v38);
    v41 = v40;
  }
  v42 = v55;
  v43 = v56;
  if (v18)
  {
    v44 = *(double *)(v18
                    + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime);
    v45 = *(_BYTE *)(v18
                   + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime
                   + 8);
  }
  else
  {
    v44 = 0.0;
    v45 = 1;
  }
  v46 = sub_10028D270(v22, v24, 0, 0, v54, v53, v39, v41, 0.0, v28, v29, v30, v31, v32, v33, v34, 0, 0, 0,
          0,
          v44,
          v45);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v42, 1, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100007A28((uint64_t)v5, &qword_10055A410);
    v48 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v43, 1, 1, v48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    v49 = swift_bridgeObjectRetain(v46);
    v50 = URLComponents.queryItems.setter(v49);
    URLComponents.url.getter(v50);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_bridgeObjectRelease(v46);
  return swift_release(v18);
}

uint64_t sub_10028C6F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v15;

  v6 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10028B54C(a2, a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, double))(v10 + 48))(v8, 1, v9, v13) == 1)
  {
    sub_100007A28((uint64_t)v8, (uint64_t *)&unk_100553DC0);
    return a3(a1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    a3((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_10028C818()
{
  __asm { BR              X9 }
}

unint64_t sub_10028C864()
{
  _QWORD *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _UNKNOWN **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  double v34;
  char v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  sub_100198BD4((uint64_t)v0, v2, v1);
  v4 = sub_100368814(v0, v2, v1);
  sub_100198C1C((uint64_t)v0, v2, v1);
  if (v4)
  {
    v54 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr);
    v55 = &off_1004BB1B8;
    v53[0] = v4;
    sub_100007A28(v3 - 128, &qword_10055E898);
    sub_10028D578((uint64_t)v53, v3 - 128);
  }
  sub_10028D530(v3 - 128, (uint64_t)&v51);
  if (v52)
  {
    sub_10002099C(&v51, (uint64_t)v53);
    v5 = v54;
    v6 = v55;
    sub_10003A834(v53, v54);
    v7 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v6[1])(v5, v6);
    v49 = v8;
    v50 = v7;
    v9 = v54;
    v10 = v55;
    sub_10003A834(v53, v54);
    v11 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v10[2])(v9, v10);
    v47 = v12;
    v48 = v11;
    v13 = v54;
    v14 = v55;
    sub_10003A834(v53, v54);
    v46 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v14[3])(v13, v14);
    v16 = v15;
    v17 = v54;
    v18 = v55;
    sub_10003A834(v53, v54);
    v19 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v18[4])(v17, v18);
    v21 = v20;
    v23 = v54;
    v22 = v55;
    sub_10003A834(v53, v54);
    v24 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v22[5])(v23, v22);
    v26 = v25;
    v27 = v54;
    v28 = v55;
    sub_10003A834(v53, v54);
    v29 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v28[6])(v27, v28);
    v31 = v30;
    v32 = v54;
    v33 = v55;
    sub_10003A834(v53, v54);
    v34 = COERCE_DOUBLE(((uint64_t (*)(uint64_t, _UNKNOWN **))v33[7])(v32, v33));
    v44 = sub_10028D270(v50, v49, v48, v47, v46, v16, v19, v21, v36, v37, v38, v39, v40, v41, v42, v43, v24, v26, v29,
            v31,
            v34,
            v35 & 1);
    sub_100007A28(v3 - 128, &qword_10055E898);
    sub_10003D380(v53);
  }
  else
  {
    sub_100007A28(v3 - 128, &qword_10055E898);
    sub_100007A28((uint64_t)&v51, &qword_10055E898);
    return 0;
  }
  return v44;
}

id sub_10028CCA4()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;

  result = objc_msgSend(v0, "podcast");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "channel");

    if (v3)
    {
      v4 = (uint64_t)objc_msgSend(v3, "storeId");

      AdamID.init(rawValue:)(v4 & ~(v4 >> 63));
      v5 = sub_100030584();
      return (id)BinaryInteger.description.getter(&type metadata for UInt64, v5);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10028CD50(uint64_t a1, uint64_t a2)
{
  return sub_10028CFCC(a1, a2, (SEL *)&selRef_storeTrackId);
}

uint64_t sub_10028CD5C(uint64_t a1, uint64_t a2)
{
  return sub_10028D15C(a1, a2, (SEL *)&selRef_podcast, (SEL *)&selRef_title);
}

id sub_10028CD70()
{
  id *v0;
  id result;
  void *v2;
  uint64_t v3;
  unint64_t v4;

  result = objc_msgSend(*v0, "podcast");
  if (result)
  {
    v2 = result;
    v3 = (uint64_t)objc_msgSend(result, "storeCollectionId");

    AdamID.init(rawValue:)(v3 & ~(v3 >> 63));
    v4 = sub_100030584();
    return (id)BinaryInteger.description.getter(&type metadata for UInt64, v4);
  }
  return result;
}

id sub_10028CDF0()
{
  return sub_10028CCA4();
}

double sub_10028CE10()
{
  id *v0;
  float v1;

  objc_msgSend(*v0, "playhead");
  return v1;
}

uint64_t sub_10028CE40(uint64_t a1)
{
  unint64_t v1;

  EpisodeOffer.contentId.getter(a1);
  v1 = sub_100030584();
  return BinaryInteger.description.getter(&type metadata for UInt64, v1);
}

uint64_t sub_10028CE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for ShowOffer(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = EpisodeOffer.showOffer.getter(v2);
  v6 = ShowOffer.title.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

uint64_t sub_10028CF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = type metadata accessor for ShowOffer(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin();
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = EpisodeOffer.showOffer.getter(v2);
  v6 = ShowOffer.adamId.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v9[1] = v6;
  v7 = sub_100030584();
  return BinaryInteger.description.getter(&type metadata for UInt64, v7);
}

uint64_t sub_10028CFB4(uint64_t a1, uint64_t a2)
{
  return sub_10028CFCC(a1, a2, (SEL *)&selRef_episodeStoreId);
}

uint64_t sub_10028CFC0(uint64_t a1, uint64_t a2)
{
  return sub_10028CFCC(a1, a2, (SEL *)&selRef_podcastStoreId);
}

uint64_t sub_10028CFCC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;

  objc_msgSend(*v3, *a3);
  return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
}

uint64_t sub_10028D014()
{
  id *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = (uint64_t)objc_msgSend(*v0, "channelStoreId");
  AdamID.init(rawValue:)(v1 & ~(v1 >> 63));
  v2 = sub_100030584();
  return BinaryInteger.description.getter(&type metadata for UInt64, v2);
}

double sub_10028D068()
{
  id *v0;
  double result;

  objc_msgSend(*v0, "playhead");
  return result;
}

uint64_t sub_10028D090()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, "title");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_10028D0F4(uint64_t a1)
{
  char v1;
  unint64_t v2;

  MPModelObject.adamID.getter(a1);
  if ((v1 & 1) != 0)
    return 0;
  v2 = sub_100030584();
  return BinaryInteger.description.getter(&type metadata for UInt64, v2);
}

uint64_t sub_10028D148(uint64_t a1, uint64_t a2)
{
  return sub_10028D15C(a1, a2, (SEL *)&selRef_author, (SEL *)&selRef_name);
}

uint64_t sub_10028D15C(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  id *v4;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = objc_msgSend(*v4, *a3);
  v7 = v6;
  if (!v6)
    return 0;
  v8 = objc_msgSend(v6, *a4);

  if (!v8)
    return 0;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  return v9;
}

id sub_10028D1EC()
{
  id *v0;
  id result;
  void *v2;
  char v3;
  char v4;
  unint64_t v5;

  result = objc_msgSend(*v0, "podcast");
  if (result)
  {
    v2 = result;
    MPModelObject.adamID.getter(result);
    v4 = v3;

    if ((v4 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v5 = sub_100030584();
      return (id)BinaryInteger.description.getter(&type metadata for UInt64, v5);
    }
  }
  return result;
}

unint64_t sub_10028D270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,double a21,unsigned __int8 a22)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45[200];

  v42 = a8;
  v44 = a22;
  v43 = a20;
  v40 = type metadata accessor for URLQueryItem(0);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v41 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10003F544(&qword_10055E888);
  inited = swift_initStackObject(v22, v45);
  *(_OWORD *)(inited + 16) = xmmword_1003CAEF0;
  *(_QWORD *)(inited + 32) = 0x4E65646F73697065;
  *(_QWORD *)(inited + 40) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 64) = 0x4965646F73697065;
  *(_QWORD *)(inited + 72) = 0xE900000000000064;
  *(_QWORD *)(inited + 80) = a3;
  *(_QWORD *)(inited + 88) = a4;
  *(_QWORD *)(inited + 96) = 0x4E74736163646F70;
  *(_QWORD *)(inited + 104) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 112) = a5;
  *(_QWORD *)(inited + 120) = a6;
  *(_QWORD *)(inited + 128) = 0x4974736163646F70;
  *(_QWORD *)(inited + 136) = 0xE900000000000064;
  v24 = v42;
  *(_QWORD *)(inited + 144) = a7;
  *(_QWORD *)(inited + 152) = v24;
  *(_QWORD *)(inited + 160) = 0x4E6C656E6E616863;
  *(_QWORD *)(inited + 168) = 0xEB00000000656D61;
  *(_QWORD *)(inited + 176) = a17;
  *(_QWORD *)(inited + 184) = a18;
  *(_QWORD *)(inited + 192) = 0x496C656E6E616863;
  *(_QWORD *)(inited + 200) = 0xE900000000000064;
  v25 = v43;
  *(_QWORD *)(inited + 208) = a19;
  *(_QWORD *)(inited + 216) = v25;
  v26 = sub_100138BD4(inited);
  sub_10028B1A4(v26);
  v28 = v27;
  swift_bridgeObjectRelease(v26);
  if ((v44 & 1) == 0 && a21 != 0.0)
  {
    v30 = Double.description.getter(v29);
    v32 = v31;
    v33 = v41;
    URLQueryItem.init(name:value:)(0x6D617473656D6974, 0xE900000000000070, v30, v31);
    swift_bridgeObjectRelease(v32);
    if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
      v28 = sub_10027B378(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
    v34 = v40;
    v35 = v39;
    v37 = *(_QWORD *)(v28 + 16);
    v36 = *(_QWORD *)(v28 + 24);
    if (v37 >= v36 >> 1)
      v28 = sub_10027B378(v36 > 1, v37 + 1, 1, v28);
    *(_QWORD *)(v28 + 16) = v37 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v37, v33, v34);
  }
  return v28;
}

uint64_t sub_10028D530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055E898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028D578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055E898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028D5C0(uint64_t a1)
{
  return sub_10028D5D8(a1, "Unknown error in migration - %s");
}

uint64_t sub_10028D5CC(uint64_t a1)
{
  return sub_10028D5D8(a1, "Error saving - %s");
}

uint64_t sub_10028D5D8(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_100181038();
    v9 = swift_errorRetain();
    static OS_os_log.classKit.getter(v9);
    swift_errorRetain();
    v10 = swift_errorRetain();
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v20 = a2;
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v21 = a1;
      v22 = v14;
      *(_DWORD *)v13 = 136315138;
      v19 = v13 + 4;
      swift_errorRetain();
      v15 = sub_10003F544((uint64_t *)&unk_10055A340);
      v16 = String.init<A>(describing:)(&v21, v15);
      v18 = v17;
      v21 = sub_10003D274(v16, v17, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v19, v13 + 12);
      swift_bridgeObjectRelease(v18);
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, v20, v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

id UIAppSettingsBridge.open(destination:)(char a1, id a2)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(a2, "openGlobalSettings");
  else
    return _sSo13UIApplicationC8PodcastsE18openGlobalSettings19deepLinkDestinationy0B2UI0de4DeepG5StateC0H0O_tF_0();
}

id sub_10028D800(char a1)
{
  id *v1;

  if ((a1 & 1) != 0)
    return objc_msgSend(*v1, "openGlobalSettings");
  else
    return _sSo13UIApplicationC8PodcastsE18openGlobalSettings19deepLinkDestinationy0B2UI0de4DeepG5StateC0H0O_tF_0();
}

ValueMetadata *type metadata accessor for UIAppSettingsBridge()
{
  return &type metadata for UIAppSettingsBridge;
}

void sub_10028D828()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *v0;
  PerformanceTestCase.name.getter();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "finishedTest:", v4);

}

void sub_10028D880()
{
  void **v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;

  v1 = *v0;
  PerformanceTestCase.name.getter();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "failedTest:withFailure:", v4, v5);

}

uint64_t sub_10028D908(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  __n128 v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  _QWORD v47[5];

  sub_10003F544((uint64_t *)&unk_10055E900);
  __chkstk_darwin();
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PerformanceTestCase(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v45 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v44 - v14;
  result = __chkstk_darwin();
  v46 = (char *)&v44 - v17;
  if (a3)
  {
    if (a4)
    {
      swift_bridgeObjectRetain(a3);
      v18 = swift_bridgeObjectRetain(a4);
      PerformanceTestCase.init(name:options:)(a2, a3, a4, v18);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
      if (v19 == 1)
      {
        sub_100007A28((uint64_t)v10, (uint64_t *)&unk_10055E900);
        return v19 != 1;
      }
      v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v21 = v46;
      v20(v46, v10, v11);
      v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v22(v15, v21, v11);
      v23 = (uint64_t)v45;
      v22(v45, v15, v11);
      v24 = *(unsigned __int8 *)(v12 + 80);
      v25 = (v24 + 32) & ~v24;
      v26 = swift_allocObject(&unk_1004BB300, v25 + v13, v24 | 7);
      *(_QWORD *)(v26 + 16) = a1;
      *(_QWORD *)(v26 + 24) = v4;
      v20((char *)(v26 + v25), v15, v11);
      v27 = a1;
      v28 = v4;
      v29 = v27;
      v30 = (char *)v28;
      sub_1002C0430();
      if (v31)
      {
        v32 = v31;
      }
      else
      {
        v33 = type metadata accessor for Podcasts(0);
        v47[3] = v33;
        v47[4] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
        v34 = sub_1000242A8(v47);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v34, enum case for Podcasts.objectGraphBuilderInitialization(_:), v33);
        LOBYTE(v33) = isFeatureEnabled(_:)(v47);
        sub_10003D380(v47);
        if ((v33 & 1) == 0)
        {
          v36 = swift_allocObject(&unk_1004BB328, 32, 7);
          *(_QWORD *)(v36 + 16) = sub_10028DE18;
          *(_QWORD *)(v36 + 24) = v26;
          v44 = v36;
          v37 = &v30[OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks];
          swift_beginAccess(&v30[OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks], v47, 33, 0);
          v38 = *(_QWORD **)v37;
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
          *(_QWORD *)v37 = v38;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v38 = sub_10027B720(0, v38[2] + 1, 1, v38);
            *(_QWORD *)v37 = v38;
          }
          v41 = v38[2];
          v40 = v38[3];
          if (v41 >= v40 >> 1)
          {
            v38 = sub_10027B720((_QWORD *)(v40 > 1), v41 + 1, 1, v38);
            *(_QWORD *)v37 = v38;
          }
          v38[2] = v41 + 1;
          v42 = &v38[2 * v41];
          v43 = v44;
          v42[4] = sub_1001D07D4;
          v42[5] = v43;
          swift_endAccess(v47);

          swift_release(v26);
          v23 = (uint64_t)v45;
          goto LABEL_10;
        }
        v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph];
        swift_retain();
      }
      sub_10028E0EC(a1, (uint64_t)v30, v23);

      swift_release(v26);
      swift_release(v32);
LABEL_10:

      v35 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v35(v23, v11);
      v35((uint64_t)v46, v11);
      return v19 != 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10028DD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10028DE18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8) + 80);
  sub_10028E0EC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10028DE48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028DE6C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  _QWORD v35[5];
  _QWORD v36[5];

  sub_10003F544(&qword_10055E910);
  __chkstk_darwin();
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = &type metadata for UIAppPerformanceTestRunner;
  v36[4] = sub_10028E5EC();
  v36[0] = a2;
  v8 = a3 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy;
  swift_beginAccess(v8, v34, 0, 0);
  sub_100007A64(v8, (uint64_t)v7, &qword_10055E910);
  v9 = type metadata accessor for PPTViewControllerProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v12 = a2;
    PPTViewControllerProxy.prepareForTesting(testCase:)(v35, a1);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    sub_100007A64((uint64_t)v35, (uint64_t)&v28, (uint64_t *)&unk_10055E920);
    if (v29)
    {
      sub_10002099C(&v28, (uint64_t)&v30);
      v13 = v32;
      v14 = v33;
      sub_10003A834(&v30, v32);
      dispatch thunk of PerformanceTestable.perform(testCase:runner:)(a1, v36, v13, v14);
      sub_100007A28((uint64_t)v35, (uint64_t *)&unk_10055E920);
      sub_10003D380(&v30);
    }
    else
    {
      sub_100007A28((uint64_t)&v28, (uint64_t *)&unk_10055E920);
      v30 = 0;
      v31 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      v15 = v31;
      sub_100007A64((uint64_t)v35, (uint64_t)&v30, (uint64_t *)&unk_10055E920);
      v16 = sub_10003F544((uint64_t *)&unk_10055E920);
      v17 = String.init<A>(describing:)(&v30, v16);
      v19 = v18;
      swift_bridgeObjectRelease(v15);
      v30 = v17;
      v31 = v19;
      v20._object = (void *)0x8000000100438ED0;
      v20._countAndFlagsBits = 0xD000000000000023;
      String.append(_:)(v20);
      v21 = v31;
      v22 = (void *)v36[0];
      PerformanceTestCase.name.getter();
      v24 = v23;
      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
      v26 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "failedTest:withFailure:", v25, v26);
      swift_bridgeObjectRelease(v21);

      sub_100007A28((uint64_t)v35, (uint64_t *)&unk_10055E920);
    }
    return sub_10003D380(v36);
  }
  return result;
}

void sub_10028E0EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD *);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v48 = a3;
  v49 = (void *)a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  __chkstk_darwin();
  v45 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin();
  v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PerformanceTestCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v50 = (_QWORD *)type metadata accessor for DispatchTime(0);
  v11 = *(v50 - 1);
  __chkstk_darwin();
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v41 = (char *)&v39 - v14;
  if (a1)
  {
    v15 = (void *)objc_opt_self(NSUserDefaults);
    v16 = a1;
    v17 = objc_msgSend(v15, "standardUserDefaults");
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v17, "stringForKey:", v18);

    if (v19)
    {

      sub_10002C5E0();
      v39 = static OS_dispatch_queue.main.getter(v20);
      static DispatchTime.now()(v39);
      v21 = v41;
      + infix(_:_:)(v13, 5.0);
      v40 = *(void (**)(char *, _QWORD *))(v11 + 8);
      v40(v13, v50);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v8);
      v22 = *(unsigned __int8 *)(v9 + 80);
      v23 = (v22 + 24) & ~v22;
      v24 = (v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
      v25 = swift_allocObject(&unk_1004BB350, v24 + 8, v22 | 7);
      v26 = v49;
      *(_QWORD *)(v25 + 16) = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25 + v23, (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      *(_QWORD *)(v25 + v24) = v16;
      aBlock[4] = sub_10028E574;
      v52 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027AF8;
      aBlock[3] = &unk_1004BB368;
      v27 = _Block_copy(aBlock);
      v28 = v52;
      v29 = v16;
      v30 = v26;
      v31 = swift_release(v28);
      v32 = v42;
      static DispatchQoS.unspecified.getter(v31);
      aBlock[0] = _swiftEmptyArrayStorage;
      v33 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v34 = sub_10003F544((uint64_t *)&unk_10055B200);
      v35 = sub_100026534();
      v36 = v45;
      v37 = v47;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v47, v33);
      v38 = (void *)v39;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v21, v32, v36, v27);
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v37);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
      v40(v21, v50);
    }
    else
    {
      v50 = v16;
      sub_10028DE6C(v48, v50, (uint64_t)v49);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10028E4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10028E574()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + v2;
  v5 = *(id *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8));
  sub_10028DE6C(v4, v5, v3);

}

unint64_t sub_10028E5EC()
{
  unint64_t result;

  result = qword_10055E918;
  if (!qword_10055E918)
  {
    result = swift_getWitnessTable(&unk_1003D21DC, &type metadata for UIAppPerformanceTestRunner);
    atomic_store(result, (unint64_t *)&qword_10055E918);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIAppPerformanceTestRunner()
{
  return &type metadata for UIAppPerformanceTestRunner;
}

double sub_10028E640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v16[2];
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(_QWORD *)(v0 + 16);
  v8 = swift_allocObject(&unk_1004BB3E0, 24, 7);
  swift_weakInit(v8 + 16, v0);
  aBlock[4] = sub_10028ED90;
  v20 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BB420;
  v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter(v10);
  v18 = _swiftEmptyArrayStorage;
  v11 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_10003F544((uint64_t *)&unk_10055B200);
  v13 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v20;
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

double sub_10028E844(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Podcasts9Debouncer_worker);
    swift_retain();
    v5 = swift_release(v3);
    if (v4)
    {
      dispatch thunk of DispatchWorkItem.cancel()(v5);
      swift_release(v4);
    }
  }
  swift_beginAccess(v1, &v9, 0, 0);
  v6 = swift_weakLoadStrong(v1);
  if (v6)
  {
    v8 = v6;
    sub_10028E8F0();
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10028E8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchTime(0);
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  __chkstk_darwin();
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v25 - v5;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1004BB3E0, 24, 7);
  swift_weakInit(v10 + 16, v1);
  aBlock[4] = sub_10028ED88;
  v30 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BB3F8;
  v11 = _Block_copy(aBlock);
  v28 = _swiftEmptyArrayStorage;
  v12 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain();
  v13 = sub_10003F544((uint64_t *)&unk_10055B200);
  v14 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v13, v14, v7, v12);
  v15 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = DispatchWorkItem.init(flags:block:)(v9, v11);
  v17 = v30;
  swift_release(v10);
  swift_release(v17);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = v16;
  swift_retain();
  swift_release(v18);
  static DispatchTime.now()(v19);
  + infix(_:_:)(v4, v1 + OBJC_IVAR____TtC8Podcasts9Debouncer_delay);
  v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21 = v4;
  v22 = v27;
  v20(v21, v27);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v6, v16);
  v23 = swift_release(v16);
  return ((uint64_t (*)(char *, uint64_t, __n128))v20)(v6, v22, v23);
}

uint64_t sub_10028EB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Podcasts9Debouncer_worker);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = 0;
    swift_release(Strong);
    swift_release(v3);
  }
  swift_beginAccess(v1, &v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v5 = result;
    v7 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8Podcasts9Debouncer_action);
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8Podcasts9Debouncer_action + 8);
    swift_retain(v6);
    v8 = swift_release(v5);
    v7(v8);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_10028EC10()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts9Debouncer_delay;
  v2 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker));
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC8Podcasts9Debouncer_action + 8));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_10028EC8C()
{
  return type metadata accessor for Debouncer(0);
}

uint64_t type metadata accessor for Debouncer(uint64_t a1)
{
  uint64_t result;

  result = qword_10055E968;
  if (!qword_10055E968)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Debouncer);
  return result;
}

uint64_t sub_10028ECD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for DispatchTimeInterval(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for () + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10028ED64()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028ED88()
{
  uint64_t v0;

  return sub_10028EB58(v0);
}

double sub_10028ED90()
{
  uint64_t v0;

  return sub_10028E844(v0);
}

uint64_t sub_10028ED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v4 = v3;
  v26 = a2;
  v27 = a3;
  v28 = a1;
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin();
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS(0);
  __chkstk_darwin();
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10002C5E0();
  static DispatchQoS.unspecified.getter(v25);
  v29 = _swiftEmptyArrayStorage;
  v14 = sub_100026844((unint64_t *)&qword_1005521B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_10003F544(&qword_100555A00);
  v16 = sub_10003AEC0((unint64_t *)&qword_1005521C0, &qword_100555A00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v15, v16, v9, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5);
  *(_QWORD *)(v4 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0x65636E756F626544, 0xEF65756575517272, v13, v11, v8, 0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8Podcasts9Debouncer_worker) = 0;
  v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC8Podcasts9Debouncer_action);
  v18 = v27;
  *v17 = v26;
  v17[1] = v18;
  v19 = v4 + OBJC_IVAR____TtC8Podcasts9Debouncer_delay;
  v20 = type metadata accessor for DispatchTimeInterval(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v28, v20);
  swift_retain();
  sub_10028E8F0();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  return v4;
}

id AppDownloadedEffectApplicator.init(library:podcastsStateCoordinator:)(void *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v4 = (void *)objc_opt_self(MTDB);
  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v4, "sharedInstance");
  v8 = objc_msgSend(v7, "privateQueueContext");

  return v5;
}

uint64_t AppDownloadedEffectApplicator.apply(effect:to:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v34 = a4;
  v35 = a5;
  v31 = a3;
  v33 = a2;
  v7 = type metadata accessor for DownloadEnvironment(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DownloadedAssetEffect(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v13 + v17 + v16) & ~v17;
  v19 = (char *)swift_allocObject(&unk_1004BB458, v18 + v9, v15 | v17 | 7);
  *((_QWORD *)v19 + 2) = a3;
  v20 = v34;
  v21 = v35;
  *((_QWORD *)v19 + 3) = v34;
  *((_QWORD *)v19 + 4) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v16], v14, v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v10, v32);
  v22 = sub_10003F544(&qword_10055EA30);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = v31;
  v24 = v20;
  v25 = v21;
  v27 = Future.init(_:)(sub_10028F39C, v19, v26);
  v36 = v27;
  v28 = sub_10028F3A0();
  v29 = Publisher.eraseToAnyPublisher()(v22, v28);
  swift_release(v27);
  return v29;
}

uint64_t sub_10028F250(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];

  v20[0] = a1;
  v12 = sub_10003F544(&qword_10055EA40);
  __chkstk_darwin();
  v14 = (uint8_t *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)v20 - v15;
  __chkstk_darwin();
  v18 = (char *)v20 - v17;
  sub_10028F3EC(a6, a7, a3, a4, a5, v14);
  swift_storeEnumTagMultiPayload(v14, v12, 0);
  sub_1002900CC((uint64_t)v14, (uint64_t)v16);
  sub_1002900CC((uint64_t)v16, (uint64_t)v18);
  ((void (*)(char *))v20[0])(v18);
  return sub_100290114((uint64_t)v18);
}

unint64_t sub_10028F3A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055EA38;
  if (!qword_10055EA38)
  {
    v1 = sub_10003CA40(&qword_10055EA30);
    result = swift_getWitnessTable(&protocol conformance descriptor for Future<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10055EA38);
  }
  return result;
}

uint64_t sub_10028F3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint8_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(uint8_t *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint8_t *, uint64_t, uint64_t);
  uint8_t *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t inited;
  Swift::Int v55;
  Class isa;
  double v57;
  void (*v59)(uint64_t *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __n128 v74;
  void (*v75)(char *, uint64_t, __n128);
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint8_t *, uint64_t, uint64_t);
  char *v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint8_t *v88;
  __n128 v89;
  void (*v90)(char *, uint64_t, __n128);
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint8_t *v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint8_t *, uint64_t, uint64_t);
  char v116[48];
  uint64_t v117[3];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v107 = a5;
  v108 = a4;
  v109 = a3;
  v102 = a2;
  v110 = a6;
  v106 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin();
  v103 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v105 = (char *)&v102 - v9;
  v10 = type metadata accessor for Logger(0);
  v112 = *(_QWORD *)(v10 - 8);
  v113 = v10;
  __chkstk_darwin();
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v104 = (char *)&v102 - v13;
  __chkstk_darwin();
  v15 = (char *)&v102 - v14;
  __chkstk_darwin();
  v17 = (char *)&v102 - v16;
  v18 = *(_QWORD *)(type metadata accessor for DownloadedAssetEffect(0) - 8);
  __chkstk_darwin();
  v20 = (uint8_t *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v22 = (uint8_t *)&v102 - v21;
  __chkstk_darwin();
  v24 = (uint64_t *)((char *)&v102 - v23);
  v25 = *(uint64_t (**)(uint8_t *, uint64_t, uint64_t))(v18 + 16);
  v114 = a1;
  v115 = v25;
  v26 = a1;
  v28 = v27;
  v25((uint8_t *)&v102 - v23, v26, v27);
  v29 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 88))(v24, v28);
  if ((_DWORD)v29 == enum case for DownloadedAssetEffect.removeDownload(_:))
  {
    v30 = *(uint64_t (**)(uint64_t *, uint64_t))(v18 + 96);
    v106 = v28;
    v31 = v30(v24, v28);
    v33 = *v24;
    v32 = v24[1];
    static Logger.database.getter(v31);
    v34 = swift_bridgeObjectRetain_n(v32, 2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.info.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v117[0] = v38;
      *(_DWORD *)v37 = 136315138;
      swift_bridgeObjectRetain(v32);
      v120 = sub_10003D274(v33, v32, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease_n(v32, 3);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Removing download for episode %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v32, 2);
    }
    (*(void (**)(char *, uint64_t))(v112 + 8))(v15, v113);
    v49 = v106;
    v50 = v115;
    v52 = v109;
    v51 = v110;
    v53 = sub_10003F544((uint64_t *)&unk_1005588B0);
    inited = swift_initStackObject(v53, v116);
    *(_OWORD *)(inited + 16) = xmmword_1003CA200;
    *(_QWORD *)(inited + 32) = v33;
    *(_QWORD *)(inited + 40) = v32;
    v55 = sub_10013B9DC(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    isa = Set._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v57 = swift_bridgeObjectRelease(v55).n128_u64[0];
    -[uint8_t removeDownloadAssetsForEpisodeUuids:](v52, "removeDownloadAssetsForEpisodeUuids:", isa, v57, v102);

    return v50(v51, v114, v49);
  }
  if ((_DWORD)v29 == enum case for DownloadedAssetEffect.download(_:))
  {
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 96))(v24, v28);
    v41 = *v24;
    v40 = v24[1];
    static Logger.database.getter(v39);
    v42 = swift_bridgeObjectRetain_n(v40, 2);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.info.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v106 = v28;
      v47 = v46;
      v117[0] = v46;
      *(_DWORD *)v45 = 136315138;
      swift_bridgeObjectRetain(v40);
      v120 = sub_10003D274(v41, v40, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v45 + 4, v45 + 12);
      swift_bridgeObjectRelease_n(v40, 3);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Downloading episode %s", v45, 0xCu);
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      v48 = v47;
      v28 = v106;
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v40, 2);
    }
    (*(void (**)(char *, uint64_t))(v112 + 8))(v17, v113);
    v78 = v115;
    PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(v41, v40, 0, 3, v107);
    swift_bridgeObjectRelease(v40);
    return v78(v110, v114, v28);
  }
  if ((_DWORD)v29 == enum case for DownloadedAssetEffect.delete(_:))
  {
    v59 = *(void (**)(uint64_t *, uint64_t))(v18 + 96);
    v60 = v28;
    v59(v24, v28);
    v61 = v105;
    v62 = v106;
    v63 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v105, v24, v106);
    v64 = v104;
    static Logger.database.getter(v63);
    v65 = v103;
    v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v103, v61, v62);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.info.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = swift_slowAlloc(32, -1);
      v117[0] = v70;
      *(_DWORD *)v69 = 136315138;
      v109 = v69 + 4;
      v71 = URL.path.getter(v70);
      v73 = v72;
      v120 = sub_10003D274(v71, v72, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v109, v69 + 12);
      v74 = swift_bridgeObjectRelease(v73);
      v75 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v75(v65, v106, v74);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Removing asset at path: %s", v69, 0xCu);
      swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
      v76 = v70;
      v62 = v106;
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v69, -1, -1);

      v77 = (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v104, v113);
    }
    else
    {
      v75 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      ((void (*)(char *, uint64_t))v75)(v65, v62);

      v77 = (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v64, v113);
    }
    v28 = v60;
    v78 = v115;
    v93 = v111;
    v94 = v105;
    DownloadEnvironment.fileStorage.getter(v117, v77);
    v95 = v118;
    v96 = v119;
    sub_10003A834(v117, v118);
    dispatch thunk of FileManaging.removeItem(at:)(v94, v95, v96);
    if (v93)
    {
      ((void (*)(char *, uint64_t))v75)(v94, v62);
      return sub_10003D380(v117);
    }
    ((void (*)(char *, uint64_t))v75)(v94, v62);
    sub_10003D380(v117);
    return v78(v110, v114, v28);
  }
  v79 = v12;
  static Logger.database.getter(v29);
  v80 = (void (*)(uint64_t, uint64_t, uint64_t))v115;
  v81 = v115(v22, v114, v28);
  v82 = Logger.logObject.getter(v81);
  v83 = static os_log_type_t.error.getter(v82);
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc(12, -1);
    v111 = swift_slowAlloc(32, -1);
    v117[0] = v111;
    v110 = v84;
    *(_DWORD *)v84 = 136315138;
    v109 = v84 + 4;
    v115(v20, (uint64_t)v22, v28);
    v85 = String.init<A>(describing:)(v20, v28);
    v87 = v86;
    v120 = sub_10003D274(v85, v86, v117);
    v88 = v84 + 12;
    v80 = (void (*)(uint64_t, uint64_t, uint64_t))v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v109, v88);
    v89 = swift_bridgeObjectRelease(v87);
    v90 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    v90((char *)v22, v28, v89);
    v91 = v110;
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "An uncovered recovery case for download state was encountered: %s", v110, 0xCu);
    v92 = v111;
    swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v91, -1, -1);
  }
  else
  {
    v90 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    ((void (*)(uint8_t *, uint64_t))v90)(v22, v28);
  }

  (*(void (**)(char *, uint64_t))(v112 + 8))(v79, v113);
  v97 = type metadata accessor for ApplicationDownloadEffectApplicatorError(0);
  v98 = sub_100290190();
  swift_allocError(v97, v98, 0, 0);
  v100 = v99;
  v80(v99, v114, v28);
  v101 = swift_storeEnumTagMultiPayload(v100, v97, 0);
  swift_willThrow(v101);
  return ((uint64_t (*)(uint64_t *, uint64_t))v90)(v24, v28);
}

uint64_t sub_10028FD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v29 = a1;
  v32 = type metadata accessor for DownloadEnvironment(0);
  v3 = *(_QWORD *)(v32 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DownloadedAssetEffect(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)v2;
  v30 = *(id *)(v2 + 8);
  v9 = v30;
  v26 = *(void **)(v2 + 16);
  v27 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v32);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (v11 + 40) & ~v11;
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v7 + v13 + v12) & ~v13;
  v15 = (char *)swift_allocObject(&unk_1004BB508, v14 + v4, v11 | v13 | 7);
  *((_QWORD *)v15 + 2) = v10;
  *((_QWORD *)v15 + 3) = v9;
  v16 = v26;
  *((_QWORD *)v15 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[v12], v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v15[v14], v28, v32);
  v17 = sub_10003F544(&qword_10055EA30);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = v27;
  v19 = v30;
  v20 = v16;
  v22 = Future.init(_:)(sub_10028F39C, v15, v21);
  v33 = v22;
  v23 = sub_10028F3A0();
  v24 = Publisher.eraseToAnyPublisher()(v17, v23);
  swift_release(v22);
  return v24;
}

ValueMetadata *type metadata accessor for AppDownloadedEffectApplicator()
{
  return &type metadata for AppDownloadedEffectApplicator;
}

uint64_t sub_10028FF80()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for DownloadedAssetEffect(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for DownloadEnvironment(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10029004C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for DownloadedAssetEffect(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadEnvironment(0) - 8) + 80);
  return sub_10028F250(a1, a2, *(uint8_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1002900CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055EA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100290114(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_10055EA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ApplicationDownloadEffectApplicatorError(uint64_t a1)
{
  uint64_t result;

  result = qword_10055EAC8;
  if (!qword_10055EAC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ApplicationDownloadEffectApplicatorError);
  return result;
}

unint64_t sub_100290190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055EA48;
  if (!qword_10055EA48)
  {
    v1 = type metadata accessor for ApplicationDownloadEffectApplicatorError(255);
    result = swift_getWitnessTable(&unk_1003D22F8, v1);
    atomic_store(result, (unint64_t *)&qword_10055EA48);
  }
  return result;
}

uint64_t *sub_1002901D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_10003F544(&qword_10055EA50) + 48);
      v9 = *(uint64_t *)((char *)a2 + v8);
      swift_errorRetain();
      *(uint64_t *)((char *)a1 + v8) = v9;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v14 = type metadata accessor for DownloadedAssetEffect(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1002902C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    sub_10003F544(&qword_10055EA50);
    return swift_errorRelease();
  }
  else
  {
    v5 = type metadata accessor for DownloadedAssetEffect(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
}

uint64_t sub_100290344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(sub_10003F544(&qword_10055EA50) + 48);
    v8 = *(_QWORD *)(a2 + v7);
    swift_errorRetain();
    *(_QWORD *)(a1 + v7) = v8;
    v9 = 1;
  }
  else
  {
    v10 = type metadata accessor for DownloadedAssetEffect(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v9);
  return a1;
}

uint64_t sub_100290400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1002904CC(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_10003F544(&qword_10055EA50) + 48);
      v8 = *(_QWORD *)(a2 + v7);
      swift_errorRetain();
      *(_QWORD *)(a1 + v7) = v8;
      v9 = 1;
    }
    else
    {
      v10 = type metadata accessor for DownloadedAssetEffect(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v9);
  }
  return a1;
}

uint64_t sub_1002904CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ApplicationDownloadEffectApplicatorError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100290508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_10003F544(&qword_10055EA50);
    *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
    v8 = 1;
  }
  else
  {
    v9 = type metadata accessor for DownloadedAssetEffect(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v8);
  return a1;
}

uint64_t sub_1002905BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1002904CC(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_10003F544(&qword_10055EA50);
      *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
      v8 = 1;
    }
    else
    {
      v9 = type metadata accessor for DownloadedAssetEffect(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v8);
  }
  return a1;
}

uint64_t sub_100290680(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _BYTE v5[32];
  _QWORD v6[2];

  result = type metadata accessor for DownloadedAssetEffect(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v5, *(_QWORD *)(result - 8) + 64, "\b");
      v6[1] = v5;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v6);
      return 0;
    }
  }
  return result;
}

void sub_100290714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];
  unint64_t v34;

  v1 = a1;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100005EC8(0, &qword_10055B020, UIScene_ptr);
    v5 = sub_10022746C();
    v6 = Set.Iterator.init(_cocoa:)(v33, v3, v4, v5);
    v1 = v33[0];
    v30 = v33[1];
    v7 = v33[2];
    v8 = v33[3];
    v9 = v33[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_40;
    v18 = v17;
    v31 = v17;
    v19 = sub_100005EC8(0, &qword_10055B020, UIScene_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v32;
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v20)
      goto LABEL_40;
LABEL_36:
    v24 = objc_opt_self(UIWindowScene);
    v25 = swift_dynamicCastObjCClass(v20, v24);
    if (v25)
    {
      v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v28 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      v6 = (_QWORD *)specialized Array._endMutation()(v29);
    }
    else
    {

    }
    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_35:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_40;
    goto LABEL_36;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v13)
      goto LABEL_40;
    v22 = *(_QWORD *)(v30 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_40;
      v22 = *(_QWORD *)(v30 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_40;
        v22 = *(_QWORD *)(v30 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_40;
          v22 = *(_QWORD *)(v30 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_40;
            v22 = *(_QWORD *)(v30 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v30 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_34;
                }
              }
LABEL_40:
              sub_10017F43C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void *sub_100290A2C()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  id v10;
  id v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  id v38[2];
  _QWORD *v39;

  v1 = objc_msgSend(v0, "connectedScenes");
  v2 = sub_100005EC8(0, &qword_10055B020, UIScene_ptr);
  v3 = sub_10022746C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (unint64_t *)&_swiftEmptySetSingleton;
    v39 = &_swiftEmptySetSingleton;
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = __CocoaSet.Iterator.next()(v7);
    if (v8)
    {
      do
      {
        v37 = v8;
        swift_dynamicCast(v38, &v37, (char *)&type metadata for Swift.AnyObject + 8, v2, 7);
        v10 = objc_msgSend(v38[0], "activationState");
        v11 = v38[0];
        if (v10)
        {

        }
        else
        {
          v12 = v39;
          v13 = v39[2];
          if (v39[3] <= v13)
          {
            sub_10035DFAC(v13 + 1);
            v12 = v39;
          }
          v9 = NSObject._rawHashValue(seed:)(v12[5]);
          v14 = v12 + 7;
          v15 = -1 << *((_BYTE *)v12 + 32);
          v16 = v9 & ~v15;
          v17 = v16 >> 6;
          if (((-1 << v16) & ~v12[(v16 >> 6) + 7]) != 0)
          {
            v18 = __clz(__rbit64((-1 << v16) & ~v12[(v16 >> 6) + 7])) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v19 = 0;
            v20 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v20 && (v19 & 1) != 0)
              {
                __break(1u);
                goto LABEL_42;
              }
              v21 = v17 == v20;
              if (v17 == v20)
                v17 = 0;
              v19 |= v21;
              v22 = v14[v17];
            }
            while (v22 == -1);
            v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          }
          *(_QWORD *)((char *)v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(_QWORD *)(v12[6] + 8 * v18) = v11;
          ++v12[2];
        }
        v8 = __CocoaSet.Iterator.next()(v9);
      }
      while (v8);
      v5 = v39;
    }
    swift_release(v7);
  }
  else
  {
    v5 = sub_100290E08(v4);
  }
  sub_100290714((uint64_t)v5);
  v2 = v23;
  swift_release(v5);
  if ((unint64_t)v2 >> 62)
    goto LABEL_43;
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_47:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_31:
    v25 = v24;
    v26 = objc_msgSend(v24, "windows", swift_bridgeObjectRelease(v2).n128_f64[0]);

    v27 = sub_100005EC8(0, (unint64_t *)&unk_10055EB00, UIWindow_ptr);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    if ((unint64_t)v2 >> 62)
      goto LABEL_52;
    v28 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (!v28)
      goto LABEL_40;
LABEL_33:
    v29 = 4;
    while (1)
    {
      v30 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29 - 4, v2)
          : *(id *)(v2 + 8 * v29);
      v31 = v30;
      v32 = v29 - 3;
      if (__OFADD__(v29 - 4, 1))
        break;
      if (objc_msgSend(v30, "isKeyWindow"))
      {
        swift_bridgeObjectRelease_n(v2, 2);
        return v31;
      }

      ++v29;
      if (v32 == v28)
        goto LABEL_40;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    if (v2 < 0)
      v33 = v2;
    else
      v33 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v2);
    if (!v34)
      goto LABEL_47;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v24 = *(id *)(v2 + 32);
    goto LABEL_31;
  }
  __break(1u);
LABEL_52:
  if (v2 < 0)
    v36 = v2;
  else
    v36 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v28 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (v28)
    goto LABEL_33;
LABEL_40:
  swift_bridgeObjectRelease_n(v2, 2);
  return 0;
}

unint64_t *sub_100290E08(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_100290F64((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = swift_release(v2);
    if (v1)
      swift_willThrow(v9);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v8 = sub_100290F64((unint64_t *)v10, v6, v2);
    swift_release(v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v8;
}

unint64_t *sub_100290F64(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), "activationState");
    if (!result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_10033E014(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t *FeedManager.shared.unsafeMutableAddressor()
{
  if (qword_100552090 != -1)
    swift_once(&qword_100552090, sub_1000076EC);
  return &static FeedManager.shared;
}

uint64_t sub_10029113C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100291270(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v25;
  _QWORD v26[9];

  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_9;
  v7 = a3 & 1;
  Hasher.init(_seed:)(v26, *(_QWORD *)(a4 + 40));
  EpisodeStateIdentifier.hash(into:)(v26, a1, a2, v7);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(a4 + 32);
  v10 = v8 & ~v9;
  v11 = a4 + 56;
  if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_9;
  v12 = *(_QWORD *)(a4 + 48) + 24 * v10;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(unsigned __int8 *)(v12 + 16);
  sub_10003CAD8(*(_QWORD *)v12, v14, *(_BYTE *)(v12 + 16));
  v25 = v7;
  v16 = static EpisodeStateIdentifier.== infix(_:_:)(v13, v14, v15, a1, a2, v7);
  sub_10003CA84(v13, v14, v15);
  if ((v16 & 1) != 0)
  {
    v17 = 1;
    return v17 & 1;
  }
  v18 = ~v9;
  v19 = (v10 + 1) & v18;
  if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
  {
LABEL_9:
    v17 = 0;
    return v17 & 1;
  }
  do
  {
    v20 = *(_QWORD *)(a4 + 48) + 24 * v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(unsigned __int8 *)(v20 + 16);
    sub_10003CAD8(*(_QWORD *)v20, v22, *(_BYTE *)(v20 + 16));
    v17 = static EpisodeStateIdentifier.== infix(_:_:)(v21, v22, v23, a1, a2, v25);
    sub_10003CA84(v21, v22, v23);
    if ((v17 & 1) != 0)
      break;
    v19 = (v19 + 1) & v18;
  }
  while (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
  return v17 & 1;
}

BOOL sub_10029141C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1002914E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v20, a1, a2);
    swift_bridgeObjectRelease(a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

id static FeedManager.shared.getter()
{
  if (qword_100552090 != -1)
    swift_once(&qword_100552090, sub_1000076EC);
  return (id)static FeedManager.shared;
}

uint64_t sub_100291668(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)&v2[OBJC_IVAR___MTFeedManager_queue];
  v13 = (_QWORD *)swift_allocObject(&unk_1004BB950, 40, 7);
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100294CFC;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BB968;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter(v16);
  v22 = _swiftEmptyArrayStorage;
  v17 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10003F544((uint64_t *)&unk_10055B200);
  v19 = sub_10002F9C8((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v5, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release(v24);
}

uint64_t sub_100291868(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, __n128), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v12;
  _QWORD **v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _BYTE v19[24];

  v5 = a1 + OBJC_IVAR___MTFeedManager__system;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR___MTFeedManager__system);
  if (v6)
  {
    v8 = *(_QWORD *)(v5 + 8);
    v7 = *(_QWORD *)(v5 + 16);
    swift_unknownObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR___MTFeedManager__system));
    v9 = swift_retain();
    a2(v6, v8, v7, v9);
    return sub_1002941C0(v6, v8, v7);
  }
  else
  {
    v12 = swift_allocObject(&unk_1004BB9A0, 32, 7);
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    v13 = (_QWORD **)(a1 + OBJC_IVAR___MTFeedManager__pendingBlocks);
    swift_beginAccess(v13, v19, 33, 0);
    v14 = *v13;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    *v13 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_10027BD5C(0, v14[2] + 1, 1, v14);
      *v13 = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_10027BD5C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *v13 = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[2 * v17];
    v18[4] = sub_100294D2C;
    v18[5] = v12;
    return swift_endAccess(v19);
  }
}

uint64_t sub_1002919D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;

  v103 = a3;
  v105 = a2;
  v101 = a1;
  v3 = sub_10003F544(&qword_10055EC68);
  v4 = *(_QWORD *)(v3 - 8);
  v116 = v3;
  v117 = v4;
  __chkstk_darwin(v3);
  v114 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544(&qword_10055EC70);
  v7 = *(_QWORD *)(v6 - 8);
  v118 = v6;
  v119 = v7;
  __chkstk_darwin(v6);
  v115 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_10003F544(&qword_10055EC78);
  v112 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v107 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10003F544(&qword_10055EC80);
  v113 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v108 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10003F544(&qword_10055EB68);
  v102 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v97 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10003F544(&qword_10055EC88);
  v109 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v98 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10003F544(&qword_10055EB60);
  v96 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v87 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_10003F544((uint64_t *)&unk_10055EC90);
  v106 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v88 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10003F544(&qword_1005564A0);
  __chkstk_darwin(v15);
  v120 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10003F544(&qword_10055EB10);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10003F544(&qword_10055ECA0);
  v93 = *(_QWORD *)(v92 - 8);
  v21 = __chkstk_darwin(v92);
  v91 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static Subscribers.Demand.unlimited.getter(v21);
  v24 = sub_10003F544((uint64_t *)&unk_10055EB20);
  v25 = sub_10003F544((uint64_t *)&unk_100559760);
  v26 = sub_10002F9C8((unint64_t *)&unk_10055EB30, (uint64_t *)&unk_10055EB20, (uint64_t)&protocol conformance descriptor for UninitializedCurrentValueSubject<A, B>);
  v27 = sub_10002F9C8(&qword_1005538D8, (uint64_t *)&unk_100559760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.flatMap<A>(maxPublishers:_:)(v23, sub_1002940C4, 0, v24, v25, v26, v27);
  v28 = sub_10002F9C8((unint64_t *)&unk_10055EB40, &qword_10055EB10, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v29 = Publisher.eraseToAnyPublisher()(v17, v28);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v122 = v29;
  v30 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v86 = v30;
  v123 = (id)static OS_dispatch_queue.main.getter(v31);
  v90 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56);
  v32 = (uint64_t)v120;
  v89(v120, 1, 1, v90);
  v94 = sub_1000489AC();
  v33 = v91;
  Publisher.receive<A>(on:options:)(&v123, v32, v25, v30, v27, v94);
  sub_100007A28(v32, &qword_1005564A0);

  swift_release(v122);
  v34 = swift_allocObject(&unk_1004BB7C0, 24, 7);
  v35 = v121;
  swift_unknownObjectWeakInit(v34 + 16, v121);
  v36 = sub_10002F9C8(&qword_10055ECA8, &qword_10055ECA0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v37 = v92;
  v38 = Publisher<>.sink(receiveValue:)(sub_100294BE8, v34, v92, v36);
  swift_release(v34);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v33, v37);
  v39 = (char *)(v35 + OBJC_IVAR___MTFeedManager__subscriptions);
  v91 = v39;
  swift_beginAccess(v39, &v122, 33, 0);
  v40 = sub_10003F544((uint64_t *)&unk_100556450);
  v93 = v40;
  v92 = sub_10002F9C8(qword_1005551D0, (uint64_t *)&unk_100556450, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v39, v40, v92);
  swift_endAccess(&v122);
  swift_release(v38);
  v41 = v101;
  ObjectType = swift_getObjectType(v101, v42);
  swift_unknownObjectRetain(v41);
  v44 = v103;
  v45 = swift_retain(v103);
  v46 = v87;
  dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(ObjectType, v105, v45);
  KeyPath = swift_getKeyPath(&unk_1003D23E8, v47);
  v49 = sub_10002F9C8(&qword_10055ECB0, &qword_10055EB60, (uint64_t)&protocol conformance descriptor for ReadOnlyCurrentValueSubject<A, B>);
  v50 = v88;
  v51 = v95;
  Publisher.map<A>(_:)(KeyPath, v95, v49);
  swift_release(KeyPath);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v46, v51);
  v53 = v97;
  dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter(v52);
  v55 = swift_getKeyPath(&unk_1003D2420, v54);
  v56 = sub_10002F9C8(&qword_10055ECB8, &qword_10055EB68, (uint64_t)&protocol conformance descriptor for ReadOnlyCurrentValueSubject<A, B>);
  v57 = v98;
  v58 = v100;
  Publisher.map<A>(_:)(v55, v100, v56);
  swift_release(v55);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v53, v58);
  v59 = sub_10002F9C8(&qword_10055ECC0, (uint64_t *)&unk_10055EC90, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v60 = sub_10002F9C8(&qword_10055ECC8, &qword_10055EC88, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v61 = v107;
  v62 = v99;
  v63 = v104;
  Publisher.combineLatest<A>(_:)(v57, v99, v104, v59, v60);
  v64 = sub_10002F9C8(&qword_10055ECD0, &qword_10055EC78, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v65 = v108;
  v66 = v110;
  Publisher.map<A>(_:)(sub_1000478E4, 0, v110, &type metadata for Int, v64);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v61, v66);
  v67 = sub_10002F9C8(&qword_10055ECD8, &qword_10055EC80, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v68 = v111;
  v69 = Publisher.eraseToAnyPublisher()(v111, v67);
  swift_unknownObjectRelease(v41);
  swift_release(v44);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v65, v68);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v57, v63);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v50, v62);
  v122 = v69;
  v70 = swift_retain(v69);
  v71 = v86;
  v123 = (id)static OS_dispatch_queue.main.getter(v70);
  v72 = (uint64_t)v120;
  v89(v120, 1, 1, v90);
  v73 = sub_10003F544(&qword_10055ECE0);
  v74 = sub_10002F9C8(&qword_10055ECE8, &qword_10055ECE0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v75 = v114;
  Publisher.receive<A>(on:options:)(&v123, v72, v73, v71, v74, v94);
  sub_100007A28(v72, &qword_1005564A0);

  swift_release(v122);
  v76 = sub_10002F9C8(&qword_10055ECF0, &qword_10055EC68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v78 = v115;
  v77 = v116;
  Publisher.drop(while:)(sub_1002929D0, 0, v116, v76);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v75, v77);
  v79 = swift_allocObject(&unk_1004BB7C0, 24, 7);
  swift_unknownObjectWeakInit(v79 + 16, v121);
  v80 = sub_10002F9C8((unint64_t *)&unk_10055ECF8, &qword_10055EC70, (uint64_t)&protocol conformance descriptor for Publishers.DropWhile<A>);
  v81 = v118;
  v82 = Publisher<>.sink(receiveValue:)(sub_10004792C, v79, v118, v80);
  swift_release(v79);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v78, v81);
  v83 = v91;
  swift_beginAccess(v91, &v122, 33, 0);
  AnyCancellable.store<A>(in:)(v83, v93, v92);
  swift_endAccess(&v122);
  swift_release(v69);
  return swift_release(v82);
}

uint64_t FeedManager.isUpdatingPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_10003F544(&qword_10055EB10);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin();
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Subscribers.Demand.unlimited.getter(v2);
  v6 = sub_10003F544((uint64_t *)&unk_10055EB20);
  v7 = sub_10003F544((uint64_t *)&unk_100559760);
  v8 = sub_10002F9C8((unint64_t *)&unk_10055EB30, (uint64_t *)&unk_10055EB20, (uint64_t)&protocol conformance descriptor for UninitializedCurrentValueSubject<A, B>);
  v9 = sub_10002F9C8(&qword_1005538D8, (uint64_t *)&unk_100559760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.flatMap<A>(maxPublishers:_:)(v5, sub_1002940C4, 0, v6, v7, v8, v9);
  v10 = sub_10002F9C8((unint64_t *)&unk_10055EB40, &qword_10055EB10, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v11 = Publisher.eraseToAnyPublisher()(v0, v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v11;
}

void sub_1002925A4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t Strong;
  _BYTE *v14;
  __n128 v15;
  char v16;
  _BYTE v18[24];

  updated = type metadata accessor for FeedUpdateType(0);
  v5 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = (_BYTE *)Strong;
    if (v12)
    {
      if ((*(_BYTE *)(Strong + OBJC_IVAR___MTFeedManager__wasUpdating) & 1) == 0)
      {
        sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
        *v11 = static OS_dispatch_queue.main.getter(v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
        v16 = _dispatchPreconditionTest(_:)(v11);
        (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
        if ((v16 & 1) == 0)
        {
          __break(1u);
          return;
        }
        (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for FeedUpdateType.batch(_:), updated);
        FeedUpdateType.beginInterval(for:)(&v14[OBJC_IVAR___MTFeedManager_signpostID]);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, updated);
      }
    }
    else if (*(_BYTE *)(Strong + OBJC_IVAR___MTFeedManager__wasUpdating))
    {
      sub_10029275C();
    }
    v14[OBJC_IVAR___MTFeedManager__wasUpdating] = v12;

  }
}

void sub_10029275C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  char v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  NSString v17;
  uint64_t v18;

  v1 = v0;
  updated = type metadata accessor for FeedUpdateType(0);
  v3 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v12, "postNotificationName:object:", CFSTR("MTFeedUpdateDidEndUpdatingAllFeeds"), v1);

    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FeedUpdateType.batch(_:), updated);
    FeedUpdateType.endInterval(for:success:)(v1 + OBJC_IVAR___MTFeedManager_signpostID, 1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, updated);
    sub_100005EC8(0, (unint64_t *)&qword_100553810, MTPodcast_ptr);
    v13 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
    v14 = objc_msgSend(v13, "importContext");

    static MTPodcast.recalculateAvailabilityDates(in:completion:)(v14, 0, 0);
    v15 = sub_100005EC8(0, &qword_100554590, &off_1004A4480);
    v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(v15), "sharedInstance");
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "processNotificationsWithReason:", v17);

  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1002929D0(_QWORD *a1)
{
  return *a1 == 0;
}

id FeedManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100292AF8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t sub_100292B50(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t ObjectType;
  unint64_t *v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _BYTE v23[24];

  updated = type metadata accessor for FeedUpdateRequest(0);
  v5 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a1 + OBJC_IVAR___MTFeedManager__system;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR___MTFeedManager__system);
  if (v9)
  {
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = (void *)objc_opt_self(MTStoreIdentifier);
    sub_100294D58(v9, v10, v11);
    swift_unknownObjectRetain(v9);
    v13 = swift_retain(v11);
    if ((objc_msgSend(v12, "isEmpty:", FeedUpdateRequest.podcastStoreId.getter(v13)) & 1) != 0)
    {
      ObjectType = swift_getObjectType(v9, v14);
      dispatch thunk of URLBasedFeedUpdater.updateFeed(request:)(a2, ObjectType, v10);
    }
    else
    {
      dispatch thunk of StoreFeedUpdater.updateFeed(request:)(a2);
    }
    swift_unknownObjectRelease(v9);
    swift_release(v11);
    return sub_1002941C0(v9, v10, v11);
  }
  else
  {
    FeedUpdateRequest.beginQueueing()();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, updated);
    v16 = (unint64_t *)(a1 + OBJC_IVAR___MTFeedManager__pendingRequests);
    swift_beginAccess(a1 + OBJC_IVAR___MTFeedManager__pendingRequests, v23, 33, 0);
    v17 = *v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v16);
    *v16 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v17 = sub_10027BD70(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      *v16 = v17;
    }
    v20 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    if (v20 >= v19 >> 1)
    {
      v17 = sub_10027BD70(v19 > 1, v20 + 1, 1, v17);
      *v16 = v17;
    }
    *(_QWORD *)(v17 + 16) = v20 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20, v7, updated);
    return swift_endAccess(v23);
  }
}

void sub_100292D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;

  if (a1)
    v4 = _convertErrorToNSError(_:)(a1);
  else
    v4 = 0;
  v5 = (id)v4;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

void sub_100292DC0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MTReachability), "sharedInstance");
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, "showInternetUnreachableDialog");

  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedManager.isUpdatingShow(url:storeID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];

  v38 = a1;
  v3 = sub_10003F544(&qword_10055EB60);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F544(&qword_10055EB68);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10003F544((uint64_t *)&unk_10055EB20);
  UninitializedCurrentValueSubject.value.getter(v39, v13);
  v14 = v39[0];
  if (v39[0])
  {
    v36 = v3;
    v37 = v4;
    v16 = v39[1];
    v15 = v39[2];
    swift_retain();
    dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter(v17);
    swift_release(v15);
    ReadOnlyCurrentValueSubject.value.getter(v39, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v18 = v39[0];
    v19 = sub_10029141C(a2, v39[0]);
    swift_bridgeObjectRelease(v18);
    if (v19)
    {
      sub_1002941C0(v14, v16, v15);
      return 1;
    }
    sub_100036A44(v38, (uint64_t)v8);
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21);
    if ((_DWORD)v23 == 1)
    {
      sub_1002941C0(v14, v16, v15);
      sub_100007A28((uint64_t)v8, (uint64_t *)&unk_100553DC0);
    }
    else
    {
      v24 = URL.absoluteString.getter(v23);
      v26 = v25;
      v27 = v8;
      v28 = v24;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
      v30 = HIBYTE(v26) & 0xF;
      if ((v26 & 0x2000000000000000) == 0)
        v30 = v28 & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
        ObjectType = swift_getObjectType(v14, v29);
        swift_unknownObjectRetain(v14);
        dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(ObjectType, v16, v32);
        swift_unknownObjectRelease(v14);
        v33 = v36;
        ReadOnlyCurrentValueSubject.value.getter(v39, v36);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v33);
        v34 = v39[0];
        v35 = sub_10029113C(v28, v26, v39[0]);
        sub_1002941C0(v14, v16, v15);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v34);
        if ((v35 & 1) != 0)
          return 1;
      }
      else
      {
        sub_1002941C0(v14, v16, v15);
        swift_bridgeObjectRelease(v26);
      }
    }
  }
  return 0;
}

uint64_t FeedManager.handleEventsForBackgroundURLSession(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  _QWORD *v9;
  id v10;

  v9 = (_QWORD *)swift_allocObject(&unk_1004BB5E0, 56, 7);
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  v10 = v4;
  swift_bridgeObjectRetain(a2);
  swift_retain();
  sub_100291668((uint64_t)sub_1002941F0, (uint64_t)v9);
  return swift_release(v9);
}

void sub_10029334C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPodcastEntityName);
  v3 = v2;
  v4 = objc_allocWithZone((Class)NSFetchRequest);
  v5 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v4, "initWithEntityName:", v5, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v6 = objc_msgSend((id)objc_opt_self(NSPredicate), "truePredicate");
  objc_msgSend(v15, "setPredicate:", v6);

  v7 = sub_100005EC8(0, (unint64_t *)&qword_100553810, MTPodcast_ptr);
  v8 = NSManagedObjectContext.fetch<A>(_:)(v15, v7);
  v13 = v8;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v14 = v8;
    else
      v14 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v13);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
    {
LABEL_14:
      objc_msgSend(a1, "saveInCurrentBlock", swift_bridgeObjectRelease(v13).n128_f64[0]);

      return;
    }
  }
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v13);
      else
        v11 = *(id *)(v13 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      objc_msgSend(v11, "setNextSyncToken:", 0, v15);
      objc_msgSend(v12, "setBootstrapGeneration:", 0);
      objc_msgSend(v12, "setUpdatedDate:", 0.0);

    }
    while (v9 != v10);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_100293558(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  double v24;
  id v25;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v7 = static OS_os_log.feedUpdate.getter(v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Migrating to delta updater, deleting nextSyncTokens and bootstrapGenerations", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPodcastEntityName);
  v12 = v11;
  v13 = objc_allocWithZone((Class)NSFetchRequest);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "initWithEntityName:", v14, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = objc_msgSend((id)objc_opt_self(NSPredicate), "truePredicate");
  objc_msgSend(v15, "setPredicate:", v16);

  v17 = sub_100005EC8(0, (unint64_t *)&qword_100553810, MTPodcast_ptr);
  v18 = NSManagedObjectContext.fetch<A>(_:)(v15, v17);
  v25 = a1;
  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_5;
LABEL_15:
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v18).n128_u64[0];
    objc_msgSend(v25, "saveInCurrentBlock", v24);

    return;
  }
  if (v18 < 0)
    v23 = v18;
  else
    v23 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v19 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v18);
  if (!v19)
    goto LABEL_15;
LABEL_5:
  if (v19 >= 1)
  {
    v20 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      else
        v21 = *(id *)(v18 + 8 * v20 + 32);
      v22 = v21;
      ++v20;
      objc_msgSend(v21, "setUpdatedDate:", 0.0, v25);
      objc_msgSend(v22, "setFeedUniquenessHash:", 0);
      objc_msgSend(v22, "setNextSyncToken:", 0);
      objc_msgSend(v22, "setBootstrapGeneration:", 0);

    }
    while (v19 != v20);
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t FeedManager.isUpdating.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD v29[3];

  v0 = sub_10003F544(&qword_10055EB68);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10003F544(&qword_10055EB60);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544((uint64_t *)&unk_10055EB20);
  UninitializedCurrentValueSubject.value.getter(v29, v8);
  v10 = v29[0];
  if (v29[0])
  {
    v12 = v29[1];
    v11 = v29[2];
    ObjectType = swift_getObjectType(v29[0], v9);
    dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(ObjectType, v12, v14);
    ReadOnlyCurrentValueSubject.value.getter(v29, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v15 = v29[0];
    v28 = v29[0];
    v16 = sub_10003F544(&qword_10055EB70);
    v17 = sub_10002F9C8(&qword_10055EB78, &qword_10055EB70, (uint64_t)&protocol conformance descriptor for Set<A>);
    v19 = Collection.isNotEmpty.getter(v16, v17, v18);
    swift_bridgeObjectRelease(v15);
    if ((v19 & 1) != 0)
    {
      swift_unknownObjectRelease(v10);
      swift_release(v11);
      v21 = 1;
    }
    else
    {
      dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter(v20);
      ReadOnlyCurrentValueSubject.value.getter(&v28, v0);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v22 = v28;
      v27[1] = v28;
      v23 = sub_10003F544(&qword_10055EB80);
      v24 = sub_10002F9C8(&qword_10055EB88, &qword_10055EB80, (uint64_t)&protocol conformance descriptor for Set<A>);
      v21 = Collection.isNotEmpty.getter(v23, v24, v25);
      swift_bridgeObjectRelease(v22);
      swift_unknownObjectRelease(v10);
      swift_release(v11);
    }
  }
  else
  {
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_100293AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  __n128 v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  id v84[2];

  v66 = a2;
  v5 = sub_10003F544(&qword_1005564A0);
  __chkstk_darwin(v5);
  v82 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544(&qword_10055ED20);
  v8 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  v73 = v8;
  __chkstk_darwin(v7);
  v68 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544(&qword_10055ED28);
  v11 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  v75 = v11;
  __chkstk_darwin(v10);
  v69 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10003F544(&qword_10055ED30);
  v81 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v71 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10003F544(&qword_10055ED38);
  v83 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v76 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10003F544(&qword_10055EB68);
  v64 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10003F544(&qword_10055ED40);
  v79 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v62 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10003F544(&qword_10055EB60);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10003F544(&qword_10055ED48);
  v77 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v61 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(a1, v24);
  v70 = a1;
  swift_unknownObjectRetain(a1);
  v67 = a3;
  v26 = swift_retain(a3);
  dispatch thunk of URLBasedFeedUpdater.updatingFeedURLs.getter(ObjectType, v66, v26);
  KeyPath = swift_getKeyPath(&unk_1003D2458, v27);
  v29 = sub_10002F9C8(&qword_10055ECB0, &qword_10055EB60, (uint64_t)&protocol conformance descriptor for ReadOnlyCurrentValueSubject<A, B>);
  Publisher.map<A>(_:)(KeyPath, v19, v29);
  swift_release(KeyPath);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  dispatch thunk of StoreFeedUpdater.updatingStoreIDs.getter(v30);
  v32 = swift_getKeyPath(&unk_1003D2490, v31);
  v33 = sub_10002F9C8(&qword_10055ECB8, &qword_10055EB68, (uint64_t)&protocol conformance descriptor for ReadOnlyCurrentValueSubject<A, B>);
  v34 = v62;
  Publisher.map<A>(_:)(v32, v15, v33);
  swift_release(v32);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v15);
  v35 = sub_10002F9C8(&qword_10055ED50, &qword_10055ED48, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v36 = sub_10002F9C8(&qword_10055ED58, &qword_10055ED40, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v37 = v68;
  v38 = v34;
  v39 = v63;
  v40 = v65;
  v41 = v61;
  Publisher.combineLatest<A>(_:)(v34, v63, v65, v35, v36);
  v42 = sub_10002F9C8(&qword_10055ED60, &qword_10055ED20, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v43 = v69;
  v44 = v72;
  Publisher.map<A>(_:)(sub_1000478FC, 0, v72, &type metadata for Bool, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v37, v44);
  v45 = sub_10002F9C8(&qword_10055ED68, &qword_10055ED28, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v46 = v71;
  v47 = v74;
  Publisher<>.removeDuplicates()(v74, v45, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v43, v47);
  v48 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v84[0] = (id)static OS_dispatch_queue.main.getter(v49);
  v50 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v51 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v82, 1, 1, v50);
  v52 = sub_10002F9C8(&qword_10055ED70, &qword_10055ED30, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v53 = sub_1000489AC();
  v54 = v76;
  v55 = v78;
  Publisher.receive<A>(on:options:)(v84, v51, v78, v48, v52, v53);
  sub_100007A28(v51, &qword_1005564A0);

  (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v55);
  v56 = sub_10002F9C8(&qword_10055ED78, &qword_10055ED38, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v57 = v80;
  v58 = Publisher.eraseToAnyPublisher()(v80, v56);
  swift_unknownObjectRelease(v70);
  swift_release(v67);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v54, v57);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v38, v40);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v41, v39);
  return v58;
}

uint64_t sub_1002940C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_100293AA4(*a1, a1[1], a1[2]);
  *a2 = result;
  return result;
}

uint64_t sub_1002940F4()
{
  return sub_100294C48((uint64_t (*)(_QWORD))&type metadata accessor for FeedUpdateRequest);
}

uint64_t sub_100294100()
{
  return sub_10004A960((uint64_t (*)(_QWORD))&type metadata accessor for FeedUpdateRequest, sub_100292B50);
}

_QWORD *sub_100294114(void *a1, void *a2, void *a3, uint64_t a4, void *a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v19 = 0;
  v12 = sub_10003F544((uint64_t *)&unk_100559B90);
  v13 = Synchronized.init(wrappedValue:)(&v19, v12);
  a6[2] = a1;
  a6[3] = a2;
  a6[6] = a4;
  a6[7] = v13;
  a6[4] = a3;
  a6[5] = a5;
  v14 = a1;
  v15 = a2;
  v16 = a3;
  swift_retain(a4);
  v17 = a5;
  a6[8] = sub_100048570();
  a6[9] = sub_100048564();
  return a6;
}

uint64_t sub_1002941C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_unknownObjectRelease(result);
    return swift_release(a3);
  }
  return result;
}

uint64_t sub_1002941F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (**v24)(_QWORD);
  char **v25;
  void (**v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void **v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  void **v40;
  uint64_t v41;
  double v42;
  void *v43;
  uint64_t v44;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  void **aBlock;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  void *v55;
  void (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v13 = type metadata accessor for Logger(0);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  __chkstk_darwin();
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v46 - v16;
  aBlock = (void **)swift_getObjectType(a1, v18);
  v53 = a2;
  swift_unknownObjectRetain(a1);
  v19 = sub_10003F544((uint64_t *)&unk_10055ED10);
  v20 = String.init<A>(describing:)(&aBlock, v19);
  v22 = v21;
  aBlock = (void **)a4;
  v53 = a5;
  v58 = v20;
  v59 = v21;
  v23 = sub_10016D37C();
  if ((StringProtocol.contains<A>(_:)(&v58, &type metadata for String, &type metadata for String, v23, v23) & 1) != 0)
  {
    v24 = (void (**)(_QWORD))objc_msgSend(a1, "sessionCompletionHandler");
    v25 = &selRef_setMaximumNumberOfLines_;
    if (v24)
    {
      v26 = v24;
      v49 = a6;
      v27 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      static OS_os_log.feedUpdate.getter(v27);
      swift_bridgeObjectRetain(v22);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = (void **)swift_slowAlloc(32, -1);
        v48 = a7;
        v33 = v32;
        aBlock = v32;
        *(_DWORD *)v31 = 136315138;
        v47 = (void **)(v31 + 4);
        swift_bridgeObjectRetain(v22);
        v58 = sub_10003D274(v20, v22, (uint64_t *)&aBlock);
        v25 = &selRef_setMaximumNumberOfLines_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v47, v31 + 12);
        swift_bridgeObjectRelease_n(v22, 3);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "handleEventsForBackgroundURLSession being called BEFORE URLSessionDidFinishEventsForBackgroundURLSession for %s.  Invoking existing completionHandler.", v31, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        v34 = v33;
        a7 = v48;
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v22, 2);
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v51);
      a6 = v49;
      v26[2](v26);
      _Block_release(v26);
      objc_msgSend(a1, v25[251], 0);
      if (a6)
        goto LABEL_14;
    }
    else
    {
      *(_QWORD *)&v42 = swift_bridgeObjectRelease(v22).n128_u64[0];
      if (a6)
      {
LABEL_14:
        v56 = a6;
        v57 = a7;
        aBlock = _NSConcreteStackBlock;
        v53 = 1107296256;
        v54 = sub_100027AF8;
        v55 = &unk_1004BB9B8;
        v43 = _Block_copy(&aBlock);
        v44 = v57;
        swift_retain();
        swift_release(v44);
        goto LABEL_15;
      }
    }
    v43 = 0;
LABEL_15:
    objc_msgSend(a1, v25[251], v43, v42);
    _Block_release(v43);
    return swift_unknownObjectRelease(a1);
  }
  v49 = a6;
  v35 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.feedUpdate.getter(v35);
  swift_bridgeObjectRetain_n(a5, 2);
  swift_bridgeObjectRetain(v22);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc(22, -1);
    v47 = (void **)swift_slowAlloc(64, -1);
    aBlock = v47;
    *(_DWORD *)v39 = 136315394;
    v48 = a7;
    swift_bridgeObjectRetain(a5);
    v58 = sub_10003D274(a4, a5, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease_n(a5, 3);
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain(v22);
    v58 = sub_10003D274(v20, v22, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v39 + 14, v39 + 22);
    swift_bridgeObjectRelease_n(v22, 3);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Mismatch between updater used for backgroundURLSession: %s and the current FeedManager system: %s. Proceeding to just call the background session completionHandler.", (uint8_t *)v39, 0x16u);
    v40 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v22, 2);
    swift_bridgeObjectRelease_n(a5, 2);
  }
  v41 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v15, v51);
  if (v49)
    v49(v41);
  return swift_unknownObjectRelease(a1);
}

void _s8Podcasts11FeedManagerC10resetCacheyyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v5 = objc_msgSend(v4, "importContext");

  v6 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v7 = static OS_os_log.feedUpdate.getter(v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Feature Flag StoreBothFreeAndPaidUrls was changed since last bootup. Clearing feed update cache.", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = swift_allocObject(&unk_1004BB900, 24, 7);
  *(_QWORD *)(v11 + 16) = v5;
  aBlock[4] = sub_100294CC8;
  v16 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BB918;
  v12 = _Block_copy(aBlock);
  v13 = v16;
  v14 = v5;
  swift_release(v13);
  objc_msgSend(v14, "performBlock:", v12);
  _Block_release(v12);

}

void _s8Podcasts11FeedManagerC014migrateToDeltaB6SystemyyFZ_0()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v6[5];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v1 = objc_msgSend(v0, "importContext");

  v2 = swift_allocObject(&unk_1004BB8B0, 24, 7);
  *(_QWORD *)(v2 + 16) = v1;
  v6[4] = sub_100294CC0;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100027AF8;
  v6[3] = &unk_1004BB8C8;
  v3 = _Block_copy(v6);
  v4 = v7;
  v5 = v1;
  swift_release(v4);
  objc_msgSend(v5, "performBlock:", v3);
  _Block_release(v3);

}

uint64_t destroy for FeedManager.System(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return swift_release(a1[2]);
}

uint64_t _s8Podcasts11FeedManagerC6SystemOwCP_0(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 16) = v4;
  swift_unknownObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for FeedManager.System(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v6);
  a1[1] = v5;
  v7 = a2[2];
  v8 = a1[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for FeedManager.System(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for FeedManager.System()
{
  return &type metadata for FeedManager.System;
}

uint64_t sub_100294B0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002941F4(a1, a2, a3, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void (**)(_QWORD))(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t sub_100294B18()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100294B3C(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_100292AF8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_100294B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  id v6;

  v5 = *(_QWORD *)(v3 + 16);
  v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, id, uint64_t))(v5 + 16))(v5, v6, a3);

}

id sub_100294B8C()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_100294BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100292D68(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100294BC4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100294BE8(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1002925A4(a1, v1);
}

void *sub_100294BF0()
{
  return &protocol witness table for String;
}

uint64_t sub_100294BFC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

void *sub_100294C0C()
{
  return &protocol witness table for Int64;
}

uint64_t sub_100294C18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100294C3C()
{
  return sub_100294C48((uint64_t (*)(_QWORD))&type metadata accessor for FeedManagerBagConfiguration);
}

uint64_t sub_100294C48(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

void sub_100294CC0()
{
  uint64_t v0;

  sub_100293558(*(void **)(v0 + 16));
}

void sub_100294CC8()
{
  uint64_t v0;

  sub_10029334C(*(void **)(v0 + 16));
}

uint64_t sub_100294CD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100294CFC()
{
  uint64_t v0;

  return sub_100291868(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100294D08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100294D2C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], a1[2]);
}

uint64_t sub_100294D58(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_unknownObjectRetain(result);
    return swift_retain(a3);
  }
  return result;
}

uint64_t sub_100294D84()
{
  return sub_10002F9C8(&qword_10055EB78, &qword_10055EB70, (uint64_t)&protocol conformance descriptor for Set<A>);
}

uint64_t sub_100294DB0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1000431CC(&qword_10055EB70, &qword_10055EB78, a1);
}

uint64_t sub_100294DD4()
{
  return sub_10002F9C8(&qword_10055EB88, &qword_10055EB80, (uint64_t)&protocol conformance descriptor for Set<A>);
}

uint64_t sub_100294E00@<X0>(_BYTE *a1@<X8>)
{
  return sub_1000431CC(&qword_10055EB80, &qword_10055EB88, a1);
}

void sub_100294E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  void (*v15)(char *, _QWORD, uint64_t);
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  char *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;

  v48 = a1;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v47 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for TextFieldAlertSheet.Style(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin();
  v44 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ModalSheet.Action.ActionType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544((uint64_t *)&unk_100553780);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1003CDE60;
  v10 = (void *)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v10, "mainBundle");
  v50._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0x6C65636E6143;
  v12._object = (void *)0xE600000000000000;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v50._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v50);

  v15 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v15(v7, enum case for ModalSheet.Action.ActionType.cancel(_:), v4);
  v16 = type metadata accessor for ModalSheet.Action(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_QWORD *)(v9 + 32) = ModalSheet.Action.init(title:type:handler:)(v14._countAndFlagsBits, v14._object, v7, 0, 0);
  v17 = objc_msgSend(v10, "mainBundle");
  v51._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0x776F6C6C6F46;
  v18._object = (void *)0xE600000000000000;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v51);

  v15(v7, enum case for ModalSheet.Action.ActionType.primary(_:), v4);
  v21 = swift_allocObject(&unk_1004BBAA0, 24, 7);
  v22 = v43;
  *(_QWORD *)(v21 + 16) = v43;
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v23 = v22;
  v24 = ModalSheet.Action.init(title:type:handler:)(v20._countAndFlagsBits, v20._object, v7, sub_100295C94, v21);
  *(_QWORD *)(v9 + 40) = v24;
  v49 = v9;
  specialized Array._endMutation()(v24);
  v25 = v49;
  v26 = objc_msgSend(v10, "mainBundle");
  v52._countAndFlagsBits = 0xD00000000000003DLL;
  v52._object = (void *)0x8000000100439110;
  v27._object = (void *)0x80000001004390F0;
  v27._countAndFlagsBits = 0xD000000000000013;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v52);

  v30 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for TextFieldAlertSheet.Style.multiline(_:), v46);
  v31 = objc_allocWithZone((Class)type metadata accessor for TextFieldAlertSheet(0));
  v32 = (uint64_t)v47;
  v33 = (void *)TextFieldAlertSheet.init(title:style:size:actions:)(v29._countAndFlagsBits, v29._object, v30, v25, 360.0, 148.0);
  sub_100036A44(v48, v32);
  v34 = type metadata accessor for URL(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34);
  if ((_DWORD)v36 == 1)
  {
    sub_1001C9958(v32);
    v37 = 0;
    v38 = 0;
  }
  else
  {
    v37 = URL.absoluteString.getter(v36);
    v38 = v39;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v32, v34);
  }
  dispatch thunk of TextFieldAlertSheet.text.setter(v37, v38);
  objc_msgSend(v33, "setModalPresentationStyle:", 2);
  v40 = objc_msgSend(v23, "presentingViewController");
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "presentViewController:animated:completion:", v33, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002952FC(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD aBlock[5];
  _QWORD *v46;

  v38 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin();
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  __chkstk_darwin();
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v35 - v12;
  v14 = type metadata accessor for DispatchQoS.QoSClass(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TextFieldAlertSheet(0);
  result = swift_dynamicCastClass(a1, v18);
  if (result)
  {
    v37 = a1;
    v35 = dispatch thunk of TextFieldAlertSheet.text.getter();
    v21 = v20;
    dispatch thunk of ModalSheet.dismiss()();
    sub_10002C5E0();
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchQoS.QoSClass.default(_:), v14);
    v36 = static OS_dispatch_queue.global(qos:)(v17);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    static DispatchTime.now()(v22);
    + infix(_:_:)(v11, 1.0);
    v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24 = v11;
    v25 = v39;
    v23(v24, v39);
    v26 = (_QWORD *)swift_allocObject(&unk_1004BBAC8, 40, 7);
    v27 = v38;
    v28 = v35;
    v26[2] = v38;
    v26[3] = v28;
    v26[4] = v21;
    aBlock[4] = sub_100295CC8;
    v46 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BBAE0;
    v29 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v27);
    v44 = _swiftEmptyArrayStorage;
    v30 = sub_10017F258();
    v31 = sub_10003F544((uint64_t *)&unk_10055B200);
    v32 = sub_100026534();
    v33 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v31, v32, v43, v30);
    v34 = (void *)v36;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v8, v5, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v33);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
    v23(v13, v25);
    return swift_release(v46);
  }
  return result;
}

void sub_100295608(id a1, uint64_t a2, NSString a3)
{
  id v4;

  if (a3)
    a3 = String._bridgeToObjectiveC()();
  v4 = a3;
  objc_msgSend(a1, "performSubscribe:");

}

void sub_10029572C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void (*v13)(char *, _QWORD, uint64_t);
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;

  v0 = type metadata accessor for TextFieldAlertSheet.Style(0);
  v36 = *(_QWORD *)(v0 - 8);
  v37 = v0;
  __chkstk_darwin();
  v34 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for ModalSheet.Action.ActionType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544((uint64_t *)&unk_100553780);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003CDE60;
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v39._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0x6C65636E6143;
  v10._object = (void *)0xE600000000000000;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v39);

  v13 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v13(v5, enum case for ModalSheet.Action.ActionType.cancel(_:), v2);
  v14 = type metadata accessor for ModalSheet.Action(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)(v7 + 32) = ModalSheet.Action.init(title:type:handler:)(v12._countAndFlagsBits, v12._object, v5, 0, 0);
  v15 = objc_msgSend(v8, "mainBundle");
  v40._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = 0x616C502065766153;
  v16._object = (void *)0xED00007473696C79;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v40);

  v13(v5, enum case for ModalSheet.Action.ActionType.primary(_:), v2);
  v19 = swift_allocObject(&unk_1004BBA78, 24, 7);
  v20 = v35;
  *(_QWORD *)(v19 + 16) = v35;
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v21 = v20;
  v22 = ModalSheet.Action.init(title:type:handler:)(v18._countAndFlagsBits, v18._object, v5, sub_100295C8C, v19);
  *(_QWORD *)(v7 + 40) = v22;
  v38 = v7;
  specialized Array._endMutation()(v22);
  v23 = v38;
  v24 = objc_msgSend(v8, "mainBundle");
  v41._object = (void *)0xE000000000000000;
  v25._object = (void *)0x8000000100433D50;
  v25._countAndFlagsBits = 0xD000000000000012;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v41);

  v28 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v34, enum case for TextFieldAlertSheet.Style.singleline(_:), v37);
  v29 = objc_allocWithZone((Class)type metadata accessor for TextFieldAlertSheet(0));
  v30 = (void *)TextFieldAlertSheet.init(title:style:size:actions:)(v27._countAndFlagsBits, v27._object, v28, v23, 360.0, 132.0);
  v31 = objc_msgSend(v21, "presentingViewController");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "presentViewController:animated:completion:", v30, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_100295ACC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;

  v4 = type metadata accessor for TextFieldAlertSheet(0);
  if (swift_dynamicCastClass(a1, v4))
  {
    v10 = a1;
    v5 = dispatch thunk of TextFieldAlertSheet.text.getter();
    if (!v6)
    {
LABEL_7:

      return;
    }
    v7 = v6;
    v8 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
      objc_msgSend(a2, "presentStationWithTitle:", v9);

      dispatch thunk of ModalSheet.dismiss()();
      goto LABEL_7;
    }

    swift_bridgeObjectRelease(v7);
  }
}

id sub_100295C18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacAddPodcastOrStationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MacAddPodcastOrStationController()
{
  return objc_opt_self(_TtC8Podcasts32MacAddPodcastOrStationController);
}

uint64_t sub_100295C68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100295C8C(void *a1)
{
  uint64_t v1;

  sub_100295ACC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100295C94(void *a1)
{
  uint64_t v1;

  return sub_1002952FC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100295C9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100295CC8()
{
  uint64_t v0;

  sub_100295608(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(NSString *)(v0 + 32));
}

_QWORD *CategoryIngester.__allocating_init(libraryImageProvider:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = a1[3];
  v4 = a1[4];
  v5 = sub_100038DEC((uint64_t)a1, v3);
  v6 = sub_100296F68(v5, v1, v3, v4);
  sub_10003D380(a1);
  return v6;
}

_QWORD *CategoryIngester.init(libraryImageProvider:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = a1[3];
  v4 = a1[4];
  sub_100038DEC((uint64_t)a1, v3);
  __chkstk_darwin();
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  v8 = sub_100296F18((uint64_t)v6, v1, v3, v4);
  sub_10003D380(a1);
  return v8;
}

id CategoryIngester.unsafeIngestNewCategory(ctx:feedCategory:)(uint64_t a1, void *a2)
{
  uint8_t *v2;
  uint8_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v53 - v10;
  v12 = (void *)objc_opt_self(NSEntityDescription);
  kMTCategoryEntityName.getter();
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v12, "insertNewObjectForEntityForName:inManagedObjectContext:", v15, a1, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v17 = type metadata accessor for MTCategory(0);
  v18 = swift_dynamicCastClass(v16, v17);
  if (v18)
  {
    v20 = (void *)v18;
    static Logger.interests.getter(v19);
    v21 = swift_unknownObjectRetain_n(a2, 4);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc(22, -1);
      v60 = v7;
      v26 = v25;
      v56 = swift_slowAlloc(64, -1);
      v62 = v56;
      *(_DWORD *)v26 = 136315394;
      v59 = v6;
      v27 = objc_msgSend(a2, "name");
      v55 = v24;
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v57 = a1;
      v58 = v3;
      v30 = v29;
      v32 = v31;

      v61 = sub_10003D274(v30, v32, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v26 + 4, v26 + 12);
      swift_unknownObjectRelease_n(a2, 2);
      *(_QWORD *)&v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
      *(_WORD *)(v26 + 12) = 2080;
      v54 = v26 + 14;
      v34 = objc_msgSend(a2, "identifier", v33);
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      v38 = v35;
      a1 = v57;
      v61 = sub_10003D274(v38, v37, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v54, v26 + 22);
      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v55, "[Categories] Created new MTCategory %s with adamID: %s", (uint8_t *)v26, 0x16u);
      v39 = v56;
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v59);
    }
    else
    {

      swift_unknownObjectRelease_n(a2, 4);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    }
    v51 = CategoryIngester.unsafeIngestCategory(category:feedCategory:ctx:)(v20, a2, a1);

  }
  else
  {

    static Logger.interests.getter(v40);
    v41 = swift_unknownObjectRetain_n(a2, 2);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = swift_slowAlloc(32, -1);
      v62 = v45;
      v59 = v6;
      *(_DWORD *)v44 = 136315138;
      v58 = v44 + 4;
      v46 = objc_msgSend(a2, "identifier");
      v60 = v7;
      v47 = v46;
      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v50 = v49;

      v61 = sub_10003D274(v48, v50, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v58, v44 + 12);
      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v50);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[Categories] Cannot create MTCategory for adamID: %s.", v44, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v59);
    }
    else
    {

      swift_unknownObjectRelease_n(a2, 2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  return v51;
}

id CategoryIngester.unsafeIngestCategory(category:feedCategory:ctx:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  char v26;
  NSString v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  id v37;
  id v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  Class isa;
  char v44;
  Class v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _OWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v85 = a3;
  v5 = type metadata accessor for Logger(0);
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  __chkstk_darwin();
  v86 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NetworkTaskPriority(0);
  __chkstk_darwin();
  v81 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544((uint64_t *)&unk_100562BF0);
  __chkstk_darwin();
  v77 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkRequest(0);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  __chkstk_darwin();
  v78 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544(&qword_10055D840);
  __chkstk_darwin();
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v75 - v17;
  v19 = objc_msgSend(a2, "identifier");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v24 = AdamID.init(_:)(v20, v22, v23);
  v25 = 0;
  if ((v26 & 1) == 0)
  {
    v76 = v24;
    objc_msgSend(a1, "setAdamID:", v24);
    v27 = objc_msgSend(a2, "name");
    if (!v27)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v30 = v29;
      v27 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v28 = swift_bridgeObjectRelease(v30).n128_u64[0];
    }
    objc_msgSend(a1, "setName:", v27, v28);

    v31 = objc_msgSend(a2, "url");
    objc_msgSend(a1, "setUrl:", v31);

    v32 = objc_msgSend(a2, "color");
    objc_msgSend(a1, "setColor:", v32);

    type metadata accessor for ServerArtwork(0);
    v33 = swift_unknownObjectRetain(a2);
    v34 = ServerArtwork.__allocating_init(from:)(v33);
    if (v34)
    {
      v36 = v34;
      v37 = objc_msgSend(a2, "artworkPrimaryColor");
      objc_msgSend(a1, "setArtworkPrimaryColor:", v37);

      v38 = objc_msgSend(a2, "artworkTemplateURL");
      objc_msgSend(a1, "setArtworkTemplateURL:", v38);

      v39 = swift_retain();
      ArtworkModel.init(serverArtwork:)(v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        swift_release(v36);
        sub_100297014((uint64_t)v12);
      }
      else
      {
        v40 = sub_100297054((uint64_t)v12, (uint64_t)v18);
        v41 = ServerArtwork.height.getter(v40);
        if ((v42 & 1) == 0)
        {
          isa = Int._bridgeToObjectiveC()().super.super.isa;
          MTCategory.setArtworkHeightNumber(_:)((NSNumber)isa);

        }
        ServerArtwork.width.getter(v41);
        if ((v44 & 1) == 0)
        {
          v45 = Int._bridgeToObjectiveC()().super.super.isa;
          MTCategory.setArtworkWidthNumber(_:)((NSNumber)v45);

        }
        v46 = sub_100297098((uint64_t)v18, (uint64_t)v16);
        v47 = ArtworkModel.size.getter(v46);
        v49 = v48;
        v50 = type metadata accessor for CropCode(0);
        v51 = v77;
        v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
        v88 = 0;
        memset(v87, 0, sizeof(v87));
        v53 = v81;
        static NetworkTaskPriority.dispatchQueuePriority()(v52);
        v54 = v78;
        ArtworkRequest.init(model:targetSize:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:priority:trace:)(v16, 0, v51, 0, _swiftEmptyArrayStorage, v53, v87, v47, v49, 3.0);
        v55 = v82[5];
        v56 = v82[6];
        sub_10003A834(v82 + 2, v55);
        dispatch thunk of ImageProvider.prefetch(artwork:)(v54, v55, v56);
        swift_release(v36);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v80);
        sub_1001D2CD0((uint64_t)v18);
      }
    }
    v57 = v86;
    static Logger.interests.getter(v35);
    v25 = a1;
    v58 = Logger.logObject.getter(v25);
    v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc(22, -1);
      v61 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v87[0] = v61;
      *(_DWORD *)v60 = 136315394;
      v62 = objc_msgSend(v25, "name");
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v65 = v64;

      v89 = sub_10003D274(v63, v65, (uint64_t *)v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v60 + 4, v60 + 12);

      swift_bridgeObjectRelease(v65);
      *(_WORD *)(v60 + 12) = 2080;
      v66 = v76;
      v89 = v76;
      v67 = sub_100030584();
      v68 = BinaryInteger.description.getter(&type metadata for UInt64, v67);
      v70 = v69;
      v89 = sub_10003D274(v68, v69, (uint64_t *)v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v60 + 14, v60 + 22);
      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "[Categories] Ingested category %s with adamID: %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v57, v84);
      v71 = (void *)NSManagedObjectContext.unsafeInterest(forAdamID:)(v66);
      if (!v71)
        goto LABEL_17;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v83 + 8))(v57, v84);
      v71 = (void *)NSManagedObjectContext.unsafeInterest(forAdamID:)(v76);
      if (!v71)
      {
LABEL_17:
        v73 = v25;
        return v25;
      }
    }
    v72 = v71;
    objc_msgSend(v71, "setCategory:", v25);
    objc_msgSend(v25, "setInterest:", v72);

    goto LABEL_17;
  }
  return v25;
}

id CategoryIngester.unsafeIngestFeedCategory(_:ctx:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v50 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v45 - v9;
  v11 = objc_msgSend(a1, "identifier");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v16 = AdamID.init(_:)(v12, v14, v15);
  if ((v18 & 1) != 0 || (v19 = NSManagedObjectContext.unsafeCategory(forAdamID:)(v16)) == 0)
  {
    static Logger.interests.getter(v17);
    v33 = swift_unknownObjectRetain_n(a1, 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v47 = v3;
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v52 = v37;
      v49 = a2;
      *(_DWORD *)v36 = 136315138;
      v46 = v36 + 4;
      v38 = objc_msgSend(a1, "identifier");
      v48 = v6;
      v39 = v38;
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v42 = v41;

      v51 = sub_10003D274(v40, v42, &v52);
      a2 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v46, v36 + 12);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[Categories] Could not find an existing category for %s. Ingesting a new category.", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v48);
    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
    }
    return CategoryIngester.unsafeIngestNewCategory(ctx:feedCategory:)(a2, a1);
  }
  else
  {
    v20 = (void *)v19;
    static Logger.interests.getter(v17);
    v21 = swift_unknownObjectRetain_n(a1, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v49 = a2;
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = swift_slowAlloc(32, -1);
      v52 = v47;
      v46 = v24;
      *(_DWORD *)v24 = 136315138;
      v45 = v24 + 4;
      v25 = objc_msgSend(a1, "identifier");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v48 = v6;
      v27 = v26;
      v29 = v28;

      v51 = sub_10003D274(v27, v29, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v45, v24 + 12);
      swift_unknownObjectRelease_n(a1, 2);
      v30 = v29;
      a2 = v49;
      swift_bridgeObjectRelease(v30);
      v31 = v46;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[Categories] Found an existing category for %s. Ingesting an existing category.", v46, 0xCu);
      v32 = v47;
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v48);
    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v6);
    }
    v43 = CategoryIngester.unsafeIngestCategory(category:feedCategory:ctx:)(v20, a1, a2);

  }
  return v43;
}

uint64_t CategoryIngester.deinit()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 16));
  return v0;
}

_QWORD *sub_100296F18(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;

  a2[5] = a3;
  a2[6] = a4;
  v7 = sub_1000242A8(a2 + 2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a1, a3);
  return a2;
}

_QWORD *sub_100296F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_allocObject(v10, 56, 7);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v11[5] = a3;
  v11[6] = a4;
  v12 = sub_1000242A8(v11 + 2);
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 32))(v12, v9, a3);
  return v11;
}

uint64_t sub_100297014(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_10055D840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100297054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100297098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CategoryIngester()
{
  return objc_opt_self(_TtC8Podcasts16CategoryIngester);
}

uint64_t sub_1002970FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  if (!v3
    || (v17[0] = v3,
        v4 = type metadata accessor for ContextActionsConfiguration(0),
        swift_retain(),
        v5 = sub_10003F544(&qword_10055E5F0),
        (swift_dynamicCast(&v14, v17, v4, v5, 6) & 1) == 0))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_100286A6C((uint64_t)&v14);
  }
  if (!*((_QWORD *)&v15 + 1))
    return sub_100286A6C((uint64_t)&v14);
  sub_10002099C(&v14, (uint64_t)v17);
  v6 = v18;
  sub_10003A834(v17, v18);
  v7 = sub_1001B7E90(v6);
  if ((v8 & 1) == 0)
  {
    v9 = v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID;
    *(_QWORD *)v9 = v7;
    *(_BYTE *)(v9 + 8) = 0;
    v10 = InterestStateController.stateMachine(for:)();
    v11 = InterestStateMachine.currentState.getter();
    swift_release(v10);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState) = v11;
  }
  return sub_10003D380(v17);
}

uint64_t sub_100297230()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID + 8) & 1) == 0)
  {
    v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState);
    if ((_DWORD)v1 != 4)
    {
      v4 = InterestState.rawValue.getter(*(unsigned __int8 *)(v0
                                                            + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestState));
      v6 = v5;
      v2 = 1;
      v7 = InterestState.rawValue.getter(1);
      if (v4 != v7 || v6 != v8)
      {
        v10 = v8;
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v10);
        if ((v11 & 1) != 0)
        {
          v2 = 1;
          return v2 & 1;
        }
        v12 = InterestState.rawValue.getter(v1);
        v6 = v13;
        v14 = InterestState.rawValue.getter(3);
        if (v12 != v14 || v6 != v15)
        {
          v17 = v15;
          v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v6, v14, v15, 0);
LABEL_18:
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v17);
          return v2 & 1;
        }
        v2 = 1;
      }
      v17 = v6;
      goto LABEL_18;
    }
  }
  v2 = 0;
  return v2 & 1;
}

uint64_t sub_100297350()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestRepository));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_interestStateController));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002973D8()
{
  return type metadata accessor for SuggestLessContextAction(0);
}

uint64_t type metadata accessor for SuggestLessContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055EE90;
  if (!qword_10055EE90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SuggestLessContextAction);
  return result;
}

uint64_t sub_10029741C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_1003D2590;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1003D25A8;
    v4[4] = &unk_1003D25C0;
    v4[5] = &unk_1003D25D8;
    v4[6] = &unk_1003D25F0;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002974D8()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0xEC0000007373654CLL;
  v1._object = (void *)0x80000001004391D0;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x2074736567677553;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100297588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002975CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_contextActionType);
}

uint64_t sub_1002975E0()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID + 8) & 1) == 0)
    return InterestRepository.suggestLess(forAdamID:)(*(_QWORD *)(v0
                                                                + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_adamID));
  return result;
}

uint64_t sub_100297624()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_10029766C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1002976BC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts24SuggestLessContextAction_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Int sub_100297708()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10029774C(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_10029778C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100298B0C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1002977BC(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v27 = a2;
  v3 = type metadata accessor for BugReportFrequency(0);
  v26 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BugReport.Domain(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BugReport.ErrorKind(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem(0);
  __chkstk_darwin();
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v16 + 104))(v15, enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v28[0] = a1;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CloudSyncBugReportingIssue, v28, &type metadata for CloudSyncBugReportingIssue, &type metadata for Int);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *(unsigned int *)*(&off_1004BBC10 + a1), v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for BugReport.Domain.podcasts(_:), v6);
    v17 = objc_allocWithZone((Class)type metadata accessor for BugReport(0));
    v18 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)(v9, v15, v13, 0);
    sub_10000A520(v25 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter, (uint64_t)v28);
    v19 = v29;
    v20 = v30;
    sub_10003A834(v28, v29);
    v21 = v26;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v5, enum case for BugReportFrequency.hourly(_:), v3);
    v22 = v27;
    if (v27)
      v23 = v27;
    else
      v23 = sub_10013842C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(v22);
    dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)(v18, v5, v23, v19, v20);
    swift_bridgeObjectRelease(v23);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    return sub_10003D380(v28);
  }
  return result;
}

uint64_t sub_100297AC0(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  const char *v26;
  Swift::String v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t result;
  __int128 *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _OWORD v60[2];
  __int128 v61;
  void *v62;
  _QWORD v63[6];

  v55 = a4;
  v53 = a2;
  v54 = a3;
  v7 = type metadata accessor for BugReportFrequency(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin();
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BugReport.Domain(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BugReport.ErrorKind(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem(0);
  __chkstk_darwin();
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v20 + 104))(v19, enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v63[0] = a1;
    v51 = (__int128 *)v63;
LABEL_18:
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CloudSyncBugReportingIssue, v51, &type metadata for CloudSyncBugReportingIssue, &type metadata for Int);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *(unsigned int *)*(&off_1004BBC10 + a1), v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BugReport.Domain.podcasts(_:), v10);
    v21 = objc_allocWithZone((Class)type metadata accessor for BugReport(0));
    v22 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)(v13, v19, v17, 0);
    if (a5)
      v23 = a5;
    else
      v23 = sub_10013842C((uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)&v61 = 0x6575737369;
    *((_QWORD *)&v61 + 1) = 0xE500000000000000;
    swift_bridgeObjectRetain(a5);
    AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
    v24 = 0xD000000000000015;
    v25 = 0x80000001004392F0;
    switch(a1)
    {
      case 0uLL:
        goto LABEL_12;
      case 1uLL:
        v24 = 0xD00000000000001CLL;
        v26 = "wipingLocalDataFromRemoteKey";
        goto LABEL_11;
      case 2uLL:
        v24 = 0xD000000000000017;
        v26 = "syncAuthenticationError";
        goto LABEL_11;
      case 3uLL:
        v24 = 0xD00000000000001FLL;
        v26 = "mergeConflictInReadOnlySyncMode";
        goto LABEL_11;
      case 4uLL:
        v24 = 0xD000000000000022;
        v26 = "tryingToPutSyncWhileInReadOnlyMode";
        goto LABEL_11;
      case 5uLL:
        v24 = 0xD000000000000029;
        v26 = "readOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_11:
        v25 = (unint64_t)(v26 - 32) | 0x8000000000000000;
LABEL_12:
        *(_QWORD *)&v61 = v24;
        *((_QWORD *)&v61 + 1) = v25;
        swift_bridgeObjectRetain(v25);
        v27._countAndFlagsBits = 45;
        v27._object = (void *)0xE100000000000000;
        String.append(_:)(v27);
        swift_bridgeObjectRelease(v25);
        v28 = v61;
        v29 = v53;
        v30 = sub_1002989F8(v53);
        v32 = v31;
        v61 = v28;
        swift_bridgeObjectRetain(*((_QWORD *)&v28 + 1));
        v33._countAndFlagsBits = v30;
        v33._object = v32;
        String.append(_:)(v33);
        swift_bridgeObjectRelease(*((_QWORD *)&v28 + 1));
        swift_bridgeObjectRelease(v32);
        v62 = &type metadata for String;
        sub_10013B9CC(&v61, v60);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
        v59 = v23;
        sub_10021BE3C(v60, (uint64_t)v63, isUniquelyReferenced_nonNull_native);
        v35 = v59;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v63);
        *(_QWORD *)&v61 = 7955819;
        *((_QWORD *)&v61 + 1) = 0xE300000000000000;
        AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
        v36 = sub_1002989F8(v29);
        v62 = &type metadata for String;
        *(_QWORD *)&v61 = v36;
        *((_QWORD *)&v61 + 1) = v37;
        sub_10013B9CC(&v61, v60);
        v38 = swift_isUniquelyReferenced_nonNull_native(v35);
        v59 = v35;
        sub_10021BE3C(v60, (uint64_t)v63, v38);
        v39 = v59;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v63);
        *(_QWORD *)&v61 = 0x6E6F6973726576;
        *((_QWORD *)&v61 + 1) = 0xE700000000000000;
        AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
        v62 = &type metadata for String;
        v40 = v55;
        v41 = 7104878;
        if (v55)
        {
          v41 = v54;
          v42 = v55;
        }
        else
        {
          v42 = 0xE300000000000000;
        }
        *(_QWORD *)&v61 = v41;
        *((_QWORD *)&v61 + 1) = v42;
        sub_10013B9CC(&v61, v60);
        swift_bridgeObjectRetain(v40);
        v43 = swift_isUniquelyReferenced_nonNull_native(v39);
        v59 = v39;
        sub_10021BE3C(v60, (uint64_t)v63, v43);
        v44 = v59;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v63);
        v45 = *(_QWORD *)(v56 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 24);
        v46 = *(_QWORD *)(v56 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 32);
        sub_10003A834((_QWORD *)(v56 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter), v45);
        v48 = v57;
        v47 = v58;
        (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v9, enum case for BugReportFrequency.hourly(_:), v58);
        dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)(v22, v9, v44, v45, v46);

        v49 = swift_bridgeObjectRelease(v44);
        result = (*(uint64_t (**)(char *, uint64_t, __n128))(v48 + 8))(v9, v47, v49);
        break;
      default:
        *(_QWORD *)&v61 = a1;
        v51 = &v61;
        goto LABEL_18;
    }
  }
  return result;
}

double sub_100297FE0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  unint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  double result;

  v7 = a5;
  if (!a4)
  {
    v10 = 0;
    v12 = 0;
    if (!a5)
      goto LABEL_4;
    goto LABEL_3;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v12 = v11;
  if (v7)
LABEL_3:
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
LABEL_4:
  v13 = a1;
  sub_100297AC0(a3, a6, v10, v12, v7);

  swift_bridgeObjectRelease(v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

double sub_100298258(void *a1, void *a2)
{
  id v4;
  void *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double result;
  _QWORD v20[2];
  _BYTE v21[104];

  v4 = objc_msgSend(a1, "keys");
  if (v4)
  {
    v5 = v4;
    v6 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  v7 = objc_msgSend(a1, "sinceDomainVersion");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = sub_10003F544(&qword_100559A90);
  inited = swift_initStackObject(v12, v21);
  *(_OWORD *)(inited + 16) = xmmword_1003CA200;
  v20[0] = 0x726F727265;
  v20[1] = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v20, &type metadata for String, &protocol witness table for String);
  v14 = objc_msgSend(a2, "description");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v17;
  v18 = sub_10013842C(inited);
  sub_1002983E0(2uLL, (uint64_t)v6, v9, v11, v18);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

uint64_t sub_1002983E0(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  const char *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t result;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _OWORD v52[2];
  __int128 v53;
  void *v54;
  _QWORD v55[6];

  v47 = a4;
  v45 = a2;
  v46 = a3;
  v7 = type metadata accessor for BugReportFrequency(0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  __chkstk_darwin();
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BugReport.Domain(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BugReport.ErrorKind(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsSystem(0);
  __chkstk_darwin();
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v20 + 104))(v19, enum case for PodcastsSystem.cloudSync(_:));
  if (a1 >= 6)
  {
    v55[0] = a1;
    v43 = (__int128 *)v55;
LABEL_19:
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CloudSyncBugReportingIssue, v43, &type metadata for CloudSyncBugReportingIssue, &type metadata for Int);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *(unsigned int *)*(&off_1004BBC10 + a1), v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BugReport.Domain.podcasts(_:), v10);
    v21 = objc_allocWithZone((Class)type metadata accessor for BugReport(0));
    v22 = (void *)BugReport.init(domain:system:errorKind:forceSubmissionAttempt:)(v13, v19, v17, 0);
    if (a5)
      v23 = a5;
    else
      v23 = sub_10013842C((uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)&v53 = 0x6575737369;
    *((_QWORD *)&v53 + 1) = 0xE500000000000000;
    swift_bridgeObjectRetain(a5);
    AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
    v24 = 0xD000000000000015;
    v25 = 0x80000001004392F0;
    switch(a1)
    {
      case 0uLL:
        goto LABEL_12;
      case 1uLL:
        v24 = 0xD00000000000001CLL;
        v26 = "wipingLocalDataFromRemoteKey";
        goto LABEL_11;
      case 2uLL:
        v24 = 0xD000000000000017;
        v26 = "syncAuthenticationError";
        goto LABEL_11;
      case 3uLL:
        v24 = 0xD00000000000001FLL;
        v26 = "mergeConflictInReadOnlySyncMode";
        goto LABEL_11;
      case 4uLL:
        v24 = 0xD000000000000022;
        v26 = "tryingToPutSyncWhileInReadOnlyMode";
        goto LABEL_11;
      case 5uLL:
        v24 = 0xD000000000000029;
        v26 = "readOnlyModeInDeviceWithRecentlyUnfollows";
LABEL_11:
        v25 = (unint64_t)(v26 - 32) | 0x8000000000000000;
LABEL_12:
        v54 = &type metadata for String;
        *(_QWORD *)&v53 = v24;
        *((_QWORD *)&v53 + 1) = v25;
        sub_10013B9CC(&v53, v52);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
        v51 = v23;
        sub_10021BE3C(v52, (uint64_t)v55, isUniquelyReferenced_nonNull_native);
        v28 = v51;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v55);
        *(_QWORD *)&v53 = 1937335659;
        *((_QWORD *)&v53 + 1) = 0xE400000000000000;
        AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
        v54 = (void *)sub_10003F544((uint64_t *)&unk_10055FDF0);
        v29 = v45;
        *(_QWORD *)&v53 = v45;
        sub_10013B9CC(&v53, v52);
        swift_bridgeObjectRetain(v29);
        v30 = swift_isUniquelyReferenced_nonNull_native(v28);
        v51 = v28;
        sub_10021BE3C(v52, (uint64_t)v55, v30);
        v31 = v51;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v55);
        *(_QWORD *)&v53 = 0x6E6F6973726576;
        *((_QWORD *)&v53 + 1) = 0xE700000000000000;
        AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
        v54 = &type metadata for String;
        v32 = v47;
        v33 = 7104878;
        if (v47)
          v33 = v46;
        v34 = 0xE300000000000000;
        if (v47)
          v34 = v47;
        *(_QWORD *)&v53 = v33;
        *((_QWORD *)&v53 + 1) = v34;
        sub_10013B9CC(&v53, v52);
        swift_bridgeObjectRetain(v32);
        v35 = swift_isUniquelyReferenced_nonNull_native(v31);
        v51 = v31;
        sub_10021BE3C(v52, (uint64_t)v55, v35);
        v36 = v51;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100048644((uint64_t)v55);
        v37 = *(_QWORD *)(v48 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 24);
        v38 = *(_QWORD *)(v48 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter + 32);
        sub_10003A834((_QWORD *)(v48 + OBJC_IVAR____TtC8Podcasts20CloudSyncBugReporter_bugReporter), v37);
        v40 = v49;
        v39 = v50;
        (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v9, enum case for BugReportFrequency.hourly(_:), v50);
        dispatch thunk of BugReporter.submit(bugReport:maximumFrequency:userInfo:)(v22, v9, v36, v37, v38);

        v41 = swift_bridgeObjectRelease(v36);
        result = (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v9, v39, v41);
        break;
      default:
        *(_QWORD *)&v53 = a1;
        v43 = &v53;
        goto LABEL_19;
    }
  }
  return result;
}

uint64_t type metadata accessor for CloudSyncBugReporter()
{
  return objc_opt_self(_TtC8Podcasts20CloudSyncBugReporter);
}

uint64_t sub_100298934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD v6[3];

  result = 0xD000000000000015;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000001CLL;
      break;
    case 2:
      result = 0xD000000000000017;
      break;
    case 3:
      result = 0xD00000000000001FLL;
      break;
    case 4:
      result = 0xD000000000000022;
      break;
    case 5:
      result = 0xD000000000000029;
      break;
    default:
      v6[1] = v1;
      v6[2] = v2;
      v6[0] = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CloudSyncBugReportingIssue, v6, &type metadata for CloudSyncBugReportingIssue, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1002989F8(unint64_t a1)
{
  uint64_t result;
  unint64_t v2;

  if (a1 < 6)
    return static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)*(&off_1004BBC40 + a1));
  v2 = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CloudSyncBugReportingKey, &v2, &type metadata for CloudSyncBugReportingKey, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_100298A4C()
{
  uint64_t *v0;

  return sub_100298934(*v0);
}

uint64_t sub_100298A54()
{
  unint64_t *v0;

  return sub_1002989F8(*v0);
}

ValueMetadata *type metadata accessor for CloudSyncBugReportingIssue()
{
  return &type metadata for CloudSyncBugReportingIssue;
}

ValueMetadata *type metadata accessor for CloudSyncBugReportingKey()
{
  return &type metadata for CloudSyncBugReportingKey;
}

unint64_t sub_100298A80()
{
  unint64_t result;

  result = qword_10055F050;
  if (!qword_10055F050)
  {
    result = swift_getWitnessTable(&unk_1003D2774, &type metadata for CloudSyncBugReportingKey);
    atomic_store(result, (unint64_t *)&qword_10055F050);
  }
  return result;
}

unint64_t sub_100298AC8()
{
  unint64_t result;

  result = qword_10055F058;
  if (!qword_10055F058)
  {
    result = swift_getWitnessTable(&unk_1003D2814, &type metadata for CloudSyncBugReportingIssue);
    atomic_store(result, (unint64_t *)&qword_10055F058);
  }
  return result;
}

unint64_t sub_100298B0C(unint64_t result)
{
  if (result > 5)
    return 0;
  return result;
}

BOOL sub_100298B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v9;
  id v10;
  id v11;
  _BYTE v13[24];

  v1 = type metadata accessor for StationShowContextActionData(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003F544(&qword_10055A370);
  __chkstk_darwin();
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess(v7, v13, 0, 0);
  sub_100299580(v7, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1))
  {
    sub_1002995C8((uint64_t)v6);
  }
  else
  {
    sub_1001C5068((uint64_t)v6, (uint64_t)v4);
    sub_1002995C8((uint64_t)v6);
    v9 = (void *)sub_1001C4E30();
    sub_1001B8650((uint64_t)v4);
    if (v9)
    {
      v10 = objc_msgSend(v9, "episodes");

      if (v10)
      {
        v11 = objc_msgSend(v10, "count");

        return (uint64_t)v11 > 0;
      }
    }
  }
  return 0;
}

uint64_t sub_100298C84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v21;
  char v22[24];

  sub_10003F544(&qword_10055A370);
  __chkstk_darwin();
  v2 = (char *)&aBlock[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StationShowContextActionData(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&aBlock[-1] - v7;
  v9 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess(v9, v22, 0, 0);
  sub_100299580(v9, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1002995C8((uint64_t)v2);
  sub_1001C5148((uint64_t)v2, (uint64_t)v8);
  v11 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v12 = objc_msgSend(v11, "mainOrPrivateContext");

  sub_1001C5068((uint64_t)v8, (uint64_t)v6);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1004BBDC8, v14 + v5, v13 | 7);
  *(_QWORD *)(v15 + 16) = v12;
  sub_1001C5148((uint64_t)v6, v15 + v14);
  aBlock[4] = sub_1002996A4;
  v21 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BBDE0;
  v16 = _Block_copy(aBlock);
  v17 = v21;
  v18 = v12;
  swift_release(v17);
  objc_msgSend(v18, "performBlockAndWaitWithSave:", v16);
  _Block_release(v16);

  return sub_1001B8650((uint64_t)v8);
}

void sub_100298EA8(void *a1)
{
  NSString v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v2 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a1, "playlistForUuid:", v2);

  if (v9)
  {
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(a1, "podcastPlaylistSettingsForUuid:", v3);

    if (v4)
    {
      v5 = objc_msgSend(v4, "podcast");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v9, "setIncludesAllPodcasts:", 0);
        objc_msgSend(v9, "removePodcastEpisodes:shouldSave:", v6, 0);

        v7 = v4;
        v4 = v6;
      }
      else
      {
        v7 = v9;
      }

      v8 = v4;
    }
    else
    {
      v8 = v9;
    }

  }
}

uint64_t sub_100298FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  id v11;
  id v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  Swift::String v21;

  v1 = type metadata accessor for StationShowContextActionData(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003F544(&qword_10055A370);
  __chkstk_darwin();
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess(v7, v20, 0, 0);
  sub_100299580(v7, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1))
  {
    sub_1002995C8((uint64_t)v6);
    return 0;
  }
  sub_1001C5068((uint64_t)v6, (uint64_t)v4);
  sub_1002995C8((uint64_t)v6);
  v10 = (void *)sub_1001C4E30();
  sub_1001B8650((uint64_t)v4);
  if (!v10)
    return 0;
  v11 = objc_msgSend(v10, "episodes");

  if (!v11)
    return 0;
  v12 = objc_msgSend(v11, "count");

  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21._object = (void *)0xE000000000000000;
  v14._object = (void *)0x8000000100439350;
  v14._countAndFlagsBits = 0xD00000000000001CLL;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v21);

  v17 = sub_10003F544(&qword_1005559A0);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v18 + 56) = &type metadata for Int;
  *(_QWORD *)(v18 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 32) = v12;
  v8 = static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v18);
  swift_bridgeObjectRelease(v16._object);
  swift_bridgeObjectRelease(v18);
  return v8;
}

uint64_t sub_100299214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1002995C8(v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration));
  v1 = v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100299284()
{
  return type metadata accessor for DeleteStationShowContextAction(0);
}

uint64_t type metadata accessor for DeleteStationShowContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055F088;
  if (!qword_10055F088)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DeleteStationShowContextAction);
  return result;
}

void sub_1002992C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100299358(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = "\b";
    v4 = type metadata accessor for MetricsLabel(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100299358(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10055F098)
  {
    v2 = type metadata accessor for StationShowContextActionData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10055F098);
  }
}

uint64_t sub_1002993AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_stationShowData;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100299538(a1, v3);
  return swift_endAccess(v5);
}

uint64_t sub_100299408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10029944C()
{
  return 22;
}

uint64_t sub_10029945C()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1002994A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1002994F4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts30DeleteStationShowContextAction_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100299538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055A370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100299580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055A370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002995C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_10055A370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100299608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for StationShowContextActionData(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  v8 = v7 + *(int *)(v1 + 24);
  v9 = type metadata accessor for PreviewingPresentationHint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002996A4()
{
  uint64_t v0;

  type metadata accessor for StationShowContextActionData(0);
  sub_100298EA8(*(void **)(v0 + 16));
}

ValueMetadata *type metadata accessor for LegacyPlayStationIntentImplementation()
{
  return &type metadata for LegacyPlayStationIntentImplementation;
}

uint64_t sub_1002996E4()
{
  return sub_100026844((unint64_t *)&unk_10055F190, (uint64_t (*)(uint64_t))&type metadata accessor for PlayStationIntent, (uint64_t)&protocol conformance descriptor for PlayStationIntent);
}

uint64_t sub_100299710(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];

  v9 = a1[3];
  v10 = a1[4];
  sub_10003A834(a1, v9);
  memset(v12, 0, sizeof(v12));
  dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)(a2, a3, a4, a5, v12, v9, v10);
  return sub_100007A28((uint64_t)v12, (uint64_t *)&unk_100552300);
}

void sub_10029979C(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void **__return_ptr, _OWORD *);
  void *v21;
  void (*v22)(__int128 *__return_ptr, _QWORD *);
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  id v50;
  _QWORD *v51;
  void *v52;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;
  _QWORD v56[5];
  void *v57;

  v7 = sub_10003F544(&qword_10055F1B8);
  __chkstk_darwin();
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "objectWithID:", a2);
  v11 = objc_opt_self(MTPlaylist);
  v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
  if (!v12)
  {

    v34 = sub_10029A5AC();
    v35 = swift_allocError(&type metadata for LegacyPlayStationIntentImplementation.PlayStationError, v34, 0, 0);
    *v36 = 1;
    swift_willThrow(v35);
    return;
  }
  v13 = objc_msgSend(v12, "episodes");
  if (v13)
  {
    v50 = v10;
    v47 = a3;
    v48 = v3;
    v14 = v13;
    NSOrderedSet.makeIterator()();
    v49 = v14;

    v15 = &v9[*(int *)(sub_10003F544(&qword_10055F1C0) + 44)];
    *(_QWORD *)v15 = sub_100299B6C;
    *((_QWORD *)v15 + 1) = 0;
    v16 = &v9[*(int *)(sub_10003F544(&qword_10055F1C8) + 36)];
    *(_QWORD *)v16 = sub_100299C38;
    *((_QWORD *)v16 + 1) = 0;
    v17 = &v9[*(int *)(v7 + 44)];
    *(_QWORD *)v17 = sub_100299C48;
    *((_QWORD *)v17 + 1) = 0;
    v18 = type metadata accessor for NSFastEnumerationIterator(0);
    v19 = sub_100026844((unint64_t *)&qword_10055F1D0, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
    dispatch thunk of IteratorProtocol.next()(v56, v18, v19);
    v20 = *(void (**)(void **__return_ptr, _OWORD *))v15;
    sub_10000773C((uint64_t)v56, (uint64_t)&v54);
    if (v55)
    {
      v51 = _swiftEmptyArrayStorage;
      do
      {
        sub_10013B9CC(&v54, v53);
        v20(&v52, v53);
        v21 = v52;
        sub_10003D380(v53);
        v57 = v21;
        if (((*(uint64_t (**)(void **))v16)(&v57) & 1) != 0)
        {
          v22 = *(void (**)(__int128 *__return_ptr, _QWORD *))v17;
          v56[0] = v21;
          v22(&v54, v56);

          v23 = (void *)v54;
          v24 = objc_msgSend((id)v54, "uuid");
          if (v24)
          {
            v25 = v24;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            v45 = v27;
            v46 = v26;

            v28 = v51;
            if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
              v28 = sub_10027AE00(0, v28[2] + 1, 1, v28);
            v30 = v28[2];
            v29 = v28[3];
            v51 = v28;
            if (v30 >= v29 >> 1)
              v51 = sub_10027AE00((_QWORD *)(v29 > 1), v30 + 1, 1, v51);
            v31 = v51;
            v51[2] = v30 + 1;
            v32 = &v31[2 * v30];
            v33 = v45;
            v32[4] = v46;
            v32[5] = v33;
          }
          else
          {

          }
        }
        else
        {

        }
        dispatch thunk of IteratorProtocol.next()(v56, v18, v19);
        v20 = *(void (**)(void **__return_ptr, _OWORD *))v15;
        sub_10000773C((uint64_t)v56, (uint64_t)&v54);
      }
      while (v55);
    }
    else
    {
      v51 = _swiftEmptyArrayStorage;
    }
    sub_100007A28((uint64_t)v9, &qword_10055F1B8);

    v37 = v51;
    if (v51[2])
    {
      v38 = v51[4];
      v39 = v51[5];
      swift_bridgeObjectRetain(v39);

      swift_bridgeObjectRelease(v37);
      v40 = v47;
      *v47 = v38;
      v40[1] = v39;
      return;
    }
    swift_bridgeObjectRelease(v51);
    v10 = v50;
  }
  v41 = sub_10029A5AC();
  v42 = swift_allocError(&type metadata for LegacyPlayStationIntentImplementation.PlayStationError, v41, 0, 0);
  *v43 = 2;
  swift_willThrow(v42);

}

uint64_t sub_100299B6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  uint64_t result;
  _BYTE v5[32];

  sub_10003D344(a1, (uint64_t)v5);
  v3 = sub_10029A678();
  result = swift_dynamicCast(a2, v5, (char *)&type metadata for Any + 8, v3, 6);
  if ((result & 1) == 0)
    *a2 = 0;
  return result;
}

uint64_t sub_100299BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10055F1A0 + dword_10055F1A0);
  v6 = (_QWORD *)swift_task_alloc(unk_10055F1A4);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1001B8890;
  return v8(a2, a3);
}

BOOL sub_100299C38(_QWORD *a1)
{
  return *a1 != 0;
}

id sub_100299C48@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100299C5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2[17] = a1;
  v2[18] = a2;
  v3 = type metadata accessor for DispatchWorkgroup(0);
  v2[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[20] = v4;
  v2[21] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v2[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[23] = v6;
  v2[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StationEntity(0);
  v2[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[26] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[27] = swift_task_alloc(v9);
  v2[28] = swift_task_alloc(v9);
  v10 = type metadata accessor for TaskPriority(0);
  v2[29] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[30] = v11;
  v2[31] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10003F544((uint64_t *)&unk_100562A90);
  v13 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v2[32] = v13;
  *v13 = v2;
  v13[1] = sub_100299D88;
  return BaseObjectGraph.inject<A>(_:)(v2 + 2, v12, v12);
}

uint64_t sub_100299D88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(*v1 + 256);
  v3 = *v1;
  *(_QWORD *)(v3 + 264) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10029A4C4, 0, 0);
  v5 = sub_10003F544(&qword_10055E200);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  *(_QWORD *)(v3 + 272) = v6;
  *v6 = v3;
  v6[1] = sub_100299E48;
  return BaseObjectGraph.inject<A>(_:)(v3 + 128, v5, v5);
}

uint64_t sub_100299E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10029A534;
  else
    v3 = sub_100299EAC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100299EAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v3 = v2[16];
  v2[36] = v3;
  ObjectType = swift_getObjectType(v3, a2);
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  v5 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
  v2[37] = v5;
  *v5 = v2;
  v5[1] = sub_100299F2C;
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v2[31], ObjectType);
}

uint64_t sub_100299F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return swift_task_switch(sub_100299FB0, 0, 0);
}

uint64_t sub_100299FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD *v22;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = ((uint64_t (*)(void))PlayStationIntent.station.getter)();
  v5 = StationEntity.uuid.getter(v4);
  v7 = v6;
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 312) = v6;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v9 = v8(v1, v2);
  if (v7)
  {
    v10 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 200);
    v12 = PlayStationIntent.station.getter(v9);
    v13 = (void *)StationEntity.objectID.getter(v12);
    *(_QWORD *)(v0 + 320) = v13;
    v8(v10, v11);
    if (v13)
    {
      v14 = *(void **)(v0 + 304);
      v16 = *(_QWORD *)(v0 + 184);
      v15 = *(_QWORD *)(v0 + 192);
      v17 = *(_QWORD *)(v0 + 176);
      v18 = swift_allocObject(&unk_1004BBE50, 32, 7);
      *(_QWORD *)(v0 + 328) = v18;
      *(_QWORD *)(v18 + 16) = v14;
      *(_QWORD *)(v18 + 24) = v13;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v15, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v17);
      v19 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
      v20 = v14;
      v21 = v13;
      v22 = (_QWORD *)swift_task_alloc(v19);
      *(_QWORD *)(v0 + 336) = v22;
      *v22 = v0;
      v22[1] = sub_10029A19C;
      return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 96, *(_QWORD *)(v0 + 192), sub_10029A61C, v18, &type metadata for String);
    }
    swift_bridgeObjectRelease(v7);
  }
  v24 = *(void **)(v0 + 304);
  v25 = sub_10029A5AC();
  v26 = swift_allocError(&type metadata for LegacyPlayStationIntentImplementation.PlayStationError, v25, 0, 0);
  *v27 = 0;
  swift_willThrow(v26);

  sub_10003D380((_QWORD *)(v0 + 16));
  v29 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 224);
  v30 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029A19C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc(v3);
  v5 = v2[41];
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[24], v2[22]);
    swift_release(v5);
    v6 = sub_10029A434;
  }
  else
  {
    v7 = v2[24];
    v8 = v2[22];
    v2[44] = v2[14];
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v8);
    swift_release(v5);
    v6 = sub_10029A248;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10029A248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  static DispatchWorkgroup.swiftConcurrency.getter();
  sub_10000A520(v0 + 16, v0 + 56);
  v5 = (_QWORD *)swift_allocObject(&unk_1004BBE78, 88, 7);
  *(_QWORD *)(v0 + 360) = v5;
  sub_10002099C((__int128 *)(v0 + 56), (uint64_t)(v5 + 2));
  v5[7] = v1;
  v5[8] = v2;
  v5[9] = v3;
  v5[10] = v4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to DispatchWorkgroup.runThreadBlocking<A>(operation:)[1]);
  *(_QWORD *)(v0 + 368) = v6;
  *v6 = v0;
  v6[1] = sub_10029A31C;
  return DispatchWorkgroup.runThreadBlocking<A>(operation:)();
}

uint64_t sub_10029A31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 360);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_10029A398, 0, 0);
}

uint64_t sub_10029A398()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);

  sub_10003D380((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10029A434()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 320);
  v2 = *(void **)(v0 + 304);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 312));

  sub_10003D380((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029A4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029A534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10003D380((_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10029A5AC()
{
  unint64_t result;

  result = qword_10055F1A8;
  if (!qword_10055F1A8)
  {
    result = swift_getWitnessTable(&unk_1003D29CC, &type metadata for LegacyPlayStationIntentImplementation.PlayStationError);
    atomic_store(result, (unint64_t *)&qword_10055F1A8);
  }
  return result;
}

uint64_t sub_10029A5F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10029A61C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_10029979C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10029A634()
{
  _QWORD *v0;

  sub_10003D380(v0 + 2);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10029A668()
{
  _QWORD *v0;

  return sub_100299710(v0 + 2, v0[7], v0[8], v0[9], v0[10]);
}

unint64_t sub_10029A678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055FDB0;
  if (!qword_10055FDB0)
  {
    v1 = objc_opt_self(MTEpisode);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055FDB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LegacyPlayStationIntentImplementation.PlayStationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10029A700 + 4 * byte_1003D28C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10029A734 + 4 * byte_1003D28C0[v4]))();
}

uint64_t sub_10029A734(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10029A73C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10029A744);
  return result;
}

uint64_t sub_10029A750(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029A758);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10029A75C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10029A764(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyPlayStationIntentImplementation.PlayStationError()
{
  return &type metadata for LegacyPlayStationIntentImplementation.PlayStationError;
}

unint64_t sub_10029A784()
{
  unint64_t result;

  result = qword_10055F1E0;
  if (!qword_10055F1E0)
  {
    result = swift_getWitnessTable(&unk_1003D29A4, &type metadata for LegacyPlayStationIntentImplementation.PlayStationError);
    atomic_store(result, (unint64_t *)&qword_10055F1E0);
  }
  return result;
}

uint64_t sub_10029A7C8()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001004393A0;
  v1._countAndFlagsBits = 0x1000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

BOOL sub_10029A864()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  _BYTE v9[24];
  _BYTE v10[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v0 + 16, v10, 0, 0);
  v3 = *(_QWORD *)(v0 + 16);
  if (!v3)
    return 0;
  v4 = type metadata accessor for CategoryContextActionConfiguration(0);
  if (!swift_dynamicCastClass(v3, v4))
    return 0;
  v5 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
  swift_beginAccess(v5, v9, 0, 0);
  sub_100036A44(v5, (uint64_t)v2);
  v6 = type metadata accessor for URL(0);
  v7 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v2, 1, v6) != 1;
  sub_1001C9958((uint64_t)v2);
  return v7;
}

void sub_10029A964()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v21;
  char v22[24];
  Swift::String v23;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = (char *)&aBlock[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0 + 16, v22, 0, 0);
  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v4 = type metadata accessor for CategoryContextActionConfiguration(0);
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      v6 = v5;
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
      v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider), "mainQueueContext", swift_retain().n128_f64[0]);
      v9 = (_QWORD *)swift_allocObject(&unk_1004BBFB8, 40, 7);
      v9[2] = v0;
      v9[3] = v6;
      v9[4] = v2;
      v10 = swift_allocObject(&unk_1004BBFE0, 32, 7);
      *(_QWORD *)(v10 + 16) = sub_10029AF6C;
      *(_QWORD *)(v10 + 24) = v9;
      aBlock[4] = sub_100029B3C;
      v21 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100029B1C;
      aBlock[3] = &unk_1004BBFF8;
      v11 = _Block_copy(aBlock);
      v12 = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release(v12);
      objc_msgSend(v8, "performBlockAndWait:", v11);

      _Block_release(v11);
      LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 120, 52, 28, 1);
      swift_release(v10);
      if ((v8 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v13 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
        swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, aBlock, 33, 0);
        sub_10029AF88((uint64_t)v2, v13);
        swift_endAccess(aBlock);
        v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v23._object = (void *)0xE000000000000000;
        v15._object = (void *)0x80000001004393A0;
        v15._countAndFlagsBits = 0x1000000000000011;
        v16._countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        v23._countAndFlagsBits = 0;
        v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v23);
        swift_release(v3);

        v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
        *(Swift::String *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle) = v17;
        swift_bridgeObjectRelease(v18);
        sub_1001C9958((uint64_t)v2);
        swift_release(v9);
      }
    }
  }
}

void sub_10029AC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v20 - v8;
  v10 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider), "mainQueueContext");
  v11 = (void *)NSManagedObjectContext.unsafeCategory(forAdamID:)(*(_QWORD *)(a2
                                                                            + OBJC_IVAR____TtC8Podcasts34CategoryContextActionConfiguration_categoryAdamID));

  if (v11)
  {
    v12 = objc_msgSend(v11, "url");
    if (v12)
    {
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v16 = v15;

      URL.init(string:)(v14, v16);
      swift_bridgeObjectRelease(v16);
      v17 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v7, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        goto LABEL_7;
      }
      sub_1001C9958((uint64_t)v7);
    }
    v19 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
LABEL_7:

    sub_1001C99E0((uint64_t)v9, a3);
  }
}

uint64_t sub_10029ADF4()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider));
}

uint64_t sub_10029AE04()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  sub_10003D380(v0 + 3);
  sub_1001C9958((uint64_t)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName
                                      + 8));
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease(*(_QWORD *)((char *)v0
                                       + OBJC_IVAR____TtC8Podcasts26ShareCategoryContextAction_managedContextProvider));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10029AEBC()
{
  return type metadata accessor for ShareCategoryContextAction(0);
}

uint64_t type metadata accessor for ShareCategoryContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_10055F220;
  if (!qword_10055F220)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShareCategoryContextAction);
  return result;
}

uint64_t sub_10029AF00(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 296);
}

uint64_t sub_10029AF40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10029AF6C()
{
  uint64_t *v0;

  sub_10029AC3C(v0[2], v0[3], v0[4]);
}

uint64_t sub_10029AF78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029AF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544((uint64_t *)&unk_100553DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10029AFD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v6)
      goto LABEL_23;
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v6)
        goto LABEL_23;
      v12 = *(_QWORD *)(v2 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v6)
          goto LABEL_23;
        v12 = *(_QWORD *)(v2 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 3;
          if (v11 + 3 >= v6)
            goto LABEL_23;
          v12 = *(_QWORD *)(v2 + 8 * v7);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_5:
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v9));
    sub_100173C30(v10);
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v6)
      goto LABEL_23;
    v12 = *(_QWORD *)(v2 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_10029B12C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  _QWORD v45[3];
  uint64_t v46;
  _UNKNOWN **v47;

  v7 = v6;
  v42 = a5;
  v43 = a6;
  v9 = a3 & 1;
  v10 = type metadata accessor for FlowPresentationHints(0);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FlowDestination(0);
  v13 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = objc_allocWithZone((Class)type metadata accessor for MTTestActionContentPickerViewController());
  v17 = sub_10029B8BC(v9);
  v17[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection] = a4;
  v46 = type metadata accessor for MTTestActionContentPickerPresenter();
  v47 = &off_1004BC260;
  v45[0] = v7;
  v18 = (uint64_t)&v17[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate];
  swift_beginAccess(&v17[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate], v44, 33, 0);
  swift_retain();
  sub_1002A27E0((uint64_t)v45, v18);
  swift_endAccess(v44);
  v19 = objc_msgSend(v17, "navigationItem");
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v20);

  v21 = objc_msgSend(v17, "navigationItem");
  v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v7, "pickerDoneWithSender:");
  objc_msgSend(v21, "setRightBarButtonItem:", v22);

  v23 = objc_msgSend(v17, "navigationItem");
  v24 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v7, "pickerCancelWithSender:");
  objc_msgSend(v23, "setLeftBarButtonItem:", v24);

  v25 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
  objc_msgSend(v25, "setModalPresentationStyle:", 2);
  v26 = (void *)v7[2];
  v7[2] = v17;
  v27 = v17;

  v28 = v13;
  v29 = v41;
  v30 = v7[3];
  v31 = v7[4];
  v32 = v43;
  v7[3] = v42;
  v7[4] = v32;
  swift_retain();
  sub_10002CA30(v30, v31);
  *v15 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v28 + 104))(v15, enum case for FlowDestination.viewController(_:), v29);
  v33 = (void *)UIApp;
  if (UIApp)
  {
    v34 = v25;
    v35 = v33;
    UIResponder.nearestFlowController.getter(v45);

    v36 = v46;
    if (v46)
    {
      v37 = v47;
      sub_10003A834(v45, v46);
      static FlowPresentationHints.default.getter();
      dispatch thunk of FlowController.show(destination:hints:referrer:)(v15, v12, 0, 0, v36, v37);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v40);
      (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v15, v29);
      sub_10003D380(v45);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10029B4A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = sub_10029BA00();
    v5 = swift_allocObject(&unk_1004BC6D8, 32, 7);
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v4;
    v8[4] = sub_1002A282C;
    v9 = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100027AF8;
    v8[3] = &unk_1004BC6F0;
    v6 = _Block_copy(v8);
    v7 = v9;
    swift_retain();
    swift_release(v7);
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, v6);
    _Block_release(v6);

  }
}

void sub_10029B584()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = swift_allocObject(&unk_1004BC688, 32, 7);
    *(_QWORD *)(v2 + 16) = v0;
    *(_QWORD *)(v2 + 24) = _swiftEmptyArrayStorage;
    v6[4] = sub_1002A27A8;
    v7 = v2;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_100027AF8;
    v6[3] = &unk_1004BC6A0;
    v3 = _Block_copy(v6);
    v4 = v7;
    v5 = v1;
    swift_retain();
    swift_release(v4);
    objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, v3);
    _Block_release(v3);

  }
}

uint64_t sub_10029B664(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, __n128))
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _OWORD v11[2];

  if (a3)
  {
    swift_retain();
    v7 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v7);
    v8 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = swift_retain();
  }
  a4(v8, v9);
  swift_release(a1);
  return sub_100007A28((uint64_t)v11, (uint64_t *)&unk_100552300);
}

void sub_10029B6EC(_QWORD *a1, uint64_t a2)
{
  void (*v3)(uint64_t, __n128);
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = (void (*)(uint64_t, __n128))a1[3];
  if (v3)
  {
    v5 = a1[4];
    v6 = swift_retain();
    v3(a2, v6);
    sub_10002CA30((uint64_t)v3, v5);
  }
  v7 = (void *)a1[2];
  a1[2] = 0;

}

uint64_t sub_10029B748()
{
  uint64_t v0;

  sub_10002CA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for MTTestActionContentPickerPresenter()
{
  return objc_opt_self(_TtC8Podcasts34MTTestActionContentPickerPresenter);
}

id sub_10029B8BC(char a1)
{
  _BYTE *v1;
  char v2;
  char *v3;
  char *v4;
  id v5;
  objc_super v7;

  v2 = a1 & 1;
  v3 = &v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection] = 1;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_pickerType] = a1 & 1;
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsHeaders] = !(a1 & 1);
  v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsCellArtwork] = a1 & 1;
  v4 = v1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource] = sub_10029B998(v2);
  v5 = objc_msgSend(objc_allocWithZone((Class)UITableViewController), "initWithStyle:", 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController] = v5;

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for MTTestActionContentPickerViewController();
  return objc_msgSendSuper2(&v7, "initWithNibName:bundle:", 0, 0);
}

_QWORD *sub_10029B998(char a1)
{
  uint64_t v1;
  _QWORD *v2;

  if ((a1 & 1) != 0)
    v1 = type metadata accessor for ShowsDataSource();
  else
    v1 = type metadata accessor for EpisodeDataSource();
  v2 = (_QWORD *)swift_allocObject(v1, 40, 7);
  v2[2] = _swiftEmptyArrayStorage;
  v2[3] = sub_100138CF4((uint64_t)_swiftEmptyArrayStorage);
  v2[4] = sub_100138E14((uint64_t)_swiftEmptyArrayStorage);
  return v2;
}

_QWORD *sub_10029BA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  swift_beginAccess(v1 + 32, v20, 0, 0);
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain(v2);
  v4 = sub_1001FA1B4(v3);
  swift_bridgeObjectRelease(v2);
  v5 = v4[2];
  if (v5)
  {
    v6 = (uint64_t)(v4 + 4);
    swift_retain();
    v7 = _swiftEmptyArrayStorage;
    do
    {
      sub_10000A520(v6, (uint64_t)v17);
      v8 = v18;
      v9 = v19;
      sub_10003A834(v17, v18);
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
      v12 = v11;
      sub_10003D380(v17);
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_10027AE00(0, v7[2] + 1, 1, v7);
      v14 = v7[2];
      v13 = v7[3];
      if (v14 >= v13 >> 1)
        v7 = sub_10027AE00((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
      v7[2] = v14 + 1;
      v15 = &v7[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_release_n(v4, 2);
  }
  else
  {
    swift_release(v4);
    return _swiftEmptyArrayStorage;
  }
  return v7;
}

id sub_10029BB6C(uint64_t a1)
{
  return sub_1001C3784(a1, type metadata accessor for MTTestActionContentPickerViewController);
}

uint64_t type metadata accessor for MTTestActionContentPickerViewController()
{
  return objc_opt_self(_TtC8Podcasts39MTTestActionContentPickerViewController);
}

__n128 sub_10029BBE8()
{
  __n128 result;

  __asm { FMOV            V0.2D, #8.0 }
  xmmword_10055F390 = (__int128)result;
  *(__n128 *)&qword_10055F3A0 = result;
  return result;
}

int64x2_t sub_10029BBFC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_10055F3B0 = (__int128)result;
  return result;
}

uint64_t type metadata accessor for HeaderMetrics()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313HeaderMetrics);
}

__n128 sub_10029BC34()
{
  __n128 result;

  __asm { FMOV            V0.2D, #8.0 }
  xmmword_10055F3C0 = (__int128)result;
  *(__n128 *)&qword_10055F3D0 = result;
  return result;
}

int64x2_t sub_10029BC48()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4045000000000000uLL);
  xmmword_10055F3E0 = (__int128)result;
  return result;
}

uint64_t type metadata accessor for CellMetrics()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311CellMetrics);
}

id sub_10029BC80()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  void *v2;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t (*)(), uint64_t, __n128);
  __n128 v45;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController];
  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = result;
  v5 = type metadata accessor for EpisodeCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v7);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v8 = result;
  v9 = type metadata accessor for ShowCell();
  v10 = swift_getObjCClassFromMetadata(v9);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "registerClass:forCellReuseIdentifier:", v10, v11);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = result;
  v13 = type metadata accessor for SectionHeader();
  v14 = swift_getObjCClassFromMetadata(v13);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "registerClass:forHeaderFooterViewReuseIdentifier:", v14, v15);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v16 = result;
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v17 = result;
  objc_msgSend(result, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  objc_msgSend(v16, "setFrame:", v19, v21, v23, v25);
  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v26 = result;
  objc_msgSend(result, "setAutoresizingMask:", 18);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v27 = result;
  objc_msgSend(result, "setEditing:", 1);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v28 = result;
  objc_msgSend(result, "setAllowsSelectionDuringEditing:", 1);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v29 = result;
  objc_msgSend(result, "setDataSource:", v1);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v30 = result;
  objc_msgSend(result, "setDelegate:", v1);

  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v31 = result;
  objc_msgSend(result, "setAllowsMultipleSelection:", v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection]);

  if (v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsCellArtwork] != 1)
    goto LABEL_21;
  result = objc_msgSend(v2, "tableView");
  if (!result)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v32 = result;
  if (qword_1005520B0 != -1)
    swift_once(&qword_1005520B0, sub_10029BC48);
  v33 = *((double *)&xmmword_10055F3E0 + 1);
  if (qword_1005520A8 != -1)
    swift_once(&qword_1005520A8, sub_10029BC34);
  objc_msgSend(v32, "setEstimatedRowHeight:", v33 + *(double *)&xmmword_10055F3C0 + *(double *)&qword_10055F3D0);

  result = objc_msgSend(v2, "tableView");
  if (!result)
    goto LABEL_38;
  v34 = result;
  result = objc_msgSend(v2, "tableView");
  if (result)
  {
    v35 = result;
    objc_msgSend(result, "estimatedRowHeight");
    v37 = v36;

    objc_msgSend(v34, "setRowHeight:", v37);
LABEL_21:
    objc_msgSend(v1, "addChildViewController:", v2);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v38 = result;
      result = objc_msgSend(v2, "view");
      if (result)
      {
        v39 = result;
        objc_msgSend(v38, "addSubview:", result);

        v40 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource];
        v41 = swift_allocObject(&unk_1004BC480, 24, 7);
        swift_unknownObjectWeakInit(v41 + 16, v1);
        v42 = swift_allocObject(&unk_1004BC638, 48, 7);
        *(_BYTE *)(v42 + 16) = 1;
        *(_QWORD *)(v42 + 32) = 0;
        *(_QWORD *)(v42 + 40) = 0;
        *(_QWORD *)(v42 + 24) = v41;
        v43 = swift_allocObject(&unk_1004BC660, 32, 7);
        *(_QWORD *)(v43 + 16) = sub_1002A2830;
        *(_QWORD *)(v43 + 24) = v42;
        v44 = *(void (**)(uint64_t (*)(), uint64_t, __n128))(*(_QWORD *)v40 + 208);
        swift_retain();
        v45 = swift_retain();
        v44(sub_100198C7C, v43, v45);
        swift_release(v41);
        swift_release(v42);
        return (id)swift_release(v43);
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10029C2CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  NSString v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[40];
  _BYTE v14[40];

  sub_1002A024C(a2, (uint64_t)v14);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_pickerType))
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB000000006C6C65;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v5, isa);

  v8 = type metadata accessor for ContentCell();
  v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
  sub_100007A64((uint64_t)v14, (uint64_t)v13, &qword_10055AAC8);
  v10 = v9 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
  swift_beginAccess(v9 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData, v12, 33, 0);
  sub_1002A2720((uint64_t)v13, v10);
  swift_endAccess(v12);
  sub_10029EA60();
  sub_100007A28((uint64_t)v13, &qword_10055AAC8);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) = sub_10029C480((uint64_t)v14);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = sub_10029C7A0((uint64_t)v14) & 1;
  sub_10029EA60();
  sub_100007A28((uint64_t)v14, &qword_10055AAC8);
  return v9;
}

uint64_t sub_10029C480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t *v22;
  _BYTE v24[24];
  _QWORD v25[3];
  uint64_t v26;
  _UNKNOWN **v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v3 = 2 * (*(_QWORD *)(a1 + 24) != 0);
  sub_100007A64(a1, (uint64_t)&v28, &qword_10055AAC8);
  if (*((_QWORD *)&v29 + 1))
  {
    v4 = sub_10003F544(&qword_1005545A0);
    v5 = type metadata accessor for EpisodeData();
    if ((swift_dynamicCast(v25, &v28, v4, v5, 6) & 1) != 0)
    {
      v6 = v25[0];
      v7 = v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate;
      swift_beginAccess(v7, v24, 0, 0);
      sub_100007A64(v7, (uint64_t)v25, &qword_10055FDB8);
      if (v26)
      {
        v8 = sub_10003F544(&qword_10055FDD0);
        v9 = sub_10003F544(&qword_10055FDE8);
        if ((swift_dynamicCast(&v28, v25, v8, v9, 6) & 1) != 0)
        {
          if (*((_QWORD *)&v29 + 1))
          {
            v10 = *sub_10003A834(&v28, *((uint64_t *)&v29 + 1));
            swift_retain();
            v3 = sub_1002A1C5C(v11, v10);
            swift_release_n(v6, 2);
LABEL_14:
            sub_10003D380(&v28);
            return v3;
          }
        }
        else
        {
          v30 = 0;
          v28 = 0u;
          v29 = 0u;
        }
      }
      else
      {
        sub_100007A28((uint64_t)v25, &qword_10055FDB8);
        v28 = 0u;
        v29 = 0u;
        v30 = 0;
      }
      swift_release(v6);
      v22 = (uint64_t *)&unk_10055FDC0;
      goto LABEL_22;
    }
  }
  else
  {
    sub_100007A28((uint64_t)&v28, &qword_10055AAC8);
  }
  sub_100007A64(a1, (uint64_t)&v28, &qword_10055AAC8);
  if (!*((_QWORD *)&v29 + 1))
  {
    v22 = &qword_10055AAC8;
    goto LABEL_22;
  }
  v12 = sub_10003F544(&qword_1005545A0);
  v13 = type metadata accessor for ShowData();
  if ((swift_dynamicCast(v25, &v28, v12, v13, 6) & 1) != 0)
  {
    v14 = v25[0];
    v15 = v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate, v24, 0, 0);
    sub_100007A64(v15, (uint64_t)v25, &qword_10055FDB8);
    if (v26)
    {
      v16 = sub_10003F544(&qword_10055FDD0);
      v17 = sub_10003F544((uint64_t *)&unk_10055FDD8);
      if ((swift_dynamicCast(&v28, v25, v16, v17, 6) & 1) != 0)
      {
        v18 = *((_QWORD *)&v29 + 1);
        if (*((_QWORD *)&v29 + 1))
        {
          v19 = v30;
          sub_10003A834(&v28, *((uint64_t *)&v29 + 1));
          v26 = v13;
          v27 = &off_1004BC1C8;
          v25[0] = v14;
          v20 = *(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, __n128))(v19 + 8);
          v21 = swift_retain();
          v3 = v20(v1, v25, v18, v19, v21);
          swift_release(v14);
          sub_10003D380(v25);
          goto LABEL_14;
        }
      }
      else
      {
        v30 = 0;
        v28 = 0u;
        v29 = 0u;
      }
    }
    else
    {
      sub_100007A28((uint64_t)v25, &qword_10055FDB8);
      v28 = 0u;
      v29 = 0u;
      v30 = 0;
    }
    swift_release(v14);
    v22 = (uint64_t *)&unk_10055FDC8;
LABEL_22:
    sub_100007A28((uint64_t)&v28, v22);
  }
  return v3;
}

uint64_t sub_10029C7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  sub_100007A64(a1, (uint64_t)&v14, &qword_10055AAC8);
  if (v15)
  {
    sub_10002099C(&v14, (uint64_t)v16);
    swift_beginAccess(v2 + 32, &v14, 0, 0);
    v3 = *(_QWORD *)(v2 + 32);
    v4 = v17;
    v5 = v18;
    sub_10003A834(v16, v17);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 16);
    v7 = swift_bridgeObjectRetain(v3);
    v8 = v6(v4, v5, v7);
    v10 = v9;
    if (*(_QWORD *)(v3 + 16))
    {
      sub_10002E5D8(v8, v9);
      v12 = v11;
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v10);
      v12 = 0;
    }
    sub_10003D380(v16);
  }
  else
  {
    sub_100007A28((uint64_t)&v14, &qword_10055AAC8);
    v12 = 0;
  }
  return v12 & 1;
}

void sub_10029C97C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[40];

  v6 = type metadata accessor for IndexPath(0, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_showsHeaders) == 1)
  {
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:", v10);

    if (v11)
    {
      v12 = type metadata accessor for SectionHeader();
      v13 = swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0);
      IndexPath.init(row:section:)(0, a2);
      sub_1002A024C((uint64_t)v9, (uint64_t)v16);
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      v14 = v13 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
      swift_beginAccess(v13 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection, v15, 33, 0);
      sub_1002A2720((uint64_t)v16, v14);
      swift_endAccess(v15);
      sub_10029FADC();
      sub_100007A28((uint64_t)v16, &qword_10055AAC8);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10029CB60(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  _QWORD v17[5];

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a1, "cellForRowAtIndexPath:", isa);

  if (v13)
  {
    v5 = type metadata accessor for ContentCell();
    v6 = swift_dynamicCastClass(v13, v5);
    if (v6)
    {
      v7 = v6;
      v8 = v6 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
      swift_beginAccess(v6 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData, v14, 0, 0);
      sub_100007A64(v8, (uint64_t)&v15, &qword_10055AAC8);
      if (v16)
      {
        sub_10002099C(&v15, (uint64_t)v17);
        sub_10000A520((uint64_t)v17, (uint64_t)&v15);
        v9 = sub_10029C7A0((uint64_t)&v15);
        sub_100007A28((uint64_t)&v15, &qword_10055AAC8);
        if ((v9 & 1) != 0
          || *(_BYTE *)(v7 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) != 1)
        {
          sub_10029CE08((v9 ^ 1) & 1, v7, (uint64_t)v17);

          sub_10003D380(v17);
        }
        else
        {
          v10 = swift_allocObject(&unk_1004BC480, 24, 7);
          swift_unknownObjectWeakInit(v10 + 16, v2);
          sub_10000A520((uint64_t)v17, (uint64_t)&v15);
          v11 = swift_allocObject(&unk_1004BC4A8, 72, 7);
          *(_QWORD *)(v11 + 16) = v7;
          *(_QWORD *)(v11 + 24) = v10;
          sub_10002099C(&v15, v11 + 32);
          v12 = v13;
          swift_retain();
          sub_10029D37C((uint64_t)v17, (void (*)(uint64_t))sub_1002A2618, v11);

          swift_release(v11);
          sub_10003D380(v17);
          swift_release(v10);
        }
      }
      else
      {

        sub_100007A28((uint64_t)&v15, &qword_10055AAC8);
      }
    }
    else
    {

    }
  }
}

void sub_10029CD7C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  if (a1 == 2)
  {
    v12 = v4;
    v13 = v5;
    v8 = a3 + 16;
    *(_BYTE *)(a2 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) = 2;
    swift_beginAccess(a3 + 16, v11, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v8);
    if (Strong)
    {
      v10 = (void *)Strong;
      sub_10029CE08(1, a2, a4);

    }
  }
}

void sub_10029CE08(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v58;
  _BYTE v59[24];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[6];

  v4 = a2;
  v5 = a1;
  if ((a1 & 1) == 0
    || (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_allowsMultipleSelection) & 1) != 0)
  {
    goto LABEL_58;
  }
  v55 = a3;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  v66[0] = _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(v6 + 24);
  swift_bridgeObjectRetain(v7);
  sub_10029AFD0(v8);
  swift_bridgeObjectRelease(v7);
  v9 = _swiftEmptyArrayStorage[2];
  if (v9)
  {
    v54 = v3;
    v10 = &_swiftEmptyArrayStorage[4];
    v11 = (uint64_t *)(v6 + 32);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    do
    {
      sub_10000A520((uint64_t)v10, (uint64_t)v66);
      sub_100007A64((uint64_t)v66, (uint64_t)&v60, &qword_10055AAC8);
      if (*((_QWORD *)&v61 + 1))
      {
        sub_10002099C(&v60, (uint64_t)v63);
        v12 = v64;
        v13 = v65;
        sub_10003A834(v63, v64);
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
        v16 = v15;
        swift_beginAccess(v11, v59, 33, 0);
        v17 = *v11;
        swift_bridgeObjectRetain(*v11);
        v18 = sub_10002E5D8(v14, v16);
        v20 = v19;
        swift_bridgeObjectRelease(v17);
        if ((v20 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
          v22 = *v11;
          v58 = *v11;
          *v11 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10021E754();
            v22 = v58;
          }
          swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v22 + 48) + 16 * v18 + 8));
          sub_10002099C((__int128 *)(*(_QWORD *)(v22 + 56) + 40 * v18), (uint64_t)&v60);
          sub_10021B950(v18, v22);
          v23 = *v11;
          *v11 = v22;
          swift_bridgeObjectRelease(v23);
        }
        else
        {
          v62 = 0;
          v60 = 0u;
          v61 = 0u;
        }
        sub_100007A28((uint64_t)&v60, &qword_10055AAC8);
        swift_endAccess(v59);
        swift_bridgeObjectRelease(v16);
        sub_10003D380(v63);
      }
      else
      {
        sub_100007A28((uint64_t)&v60, &qword_10055AAC8);
      }
      sub_100007A28((uint64_t)v66, &qword_10055AAC8);
      v10 += 5;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    v3 = v54;
  }
  else
  {
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v66[0]).n128_u64[0];
  }
  v25 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController), "tableView", v24, v54);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, "visibleCells");
    v28 = sub_100005EC8(0, (unint64_t *)&unk_10055FE00, UITableViewCell_ptr);
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

    v66[0] = _swiftEmptyArrayStorage;
    if ((unint64_t)v29 >> 62)
    {
      if (v29 < 0)
        v39 = v29;
      else
        v39 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v30 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v29);
      if (v30)
      {
LABEL_19:
        if (v30 < 1)
        {
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        for (i = 0; i != v30; ++i)
        {
          if ((v29 & 0xC000000000000001) != 0)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v29);
          else
            v34 = *(id *)(v29 + 8 * i + 32);
          v35 = v34;
          v36 = type metadata accessor for ContentCell();
          v37 = swift_dynamicCastClass(v35, v36);
          if (v37)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
            v32 = *(_QWORD *)(v66[0] + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
            v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v35);
            specialized ContiguousArray._endMutation()(v33);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease(v29);
        v38 = v66[0];
        if ((v66[0] & 0x8000000000000000) != 0)
          goto LABEL_52;
LABEL_35:
        if ((v38 & 0x4000000000000000) == 0)
        {
          swift_bridgeObjectRetain(v38);
          v41 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v40);
          v42 = type metadata accessor for ContentCell();
          if (swift_dynamicCastMetatype(v41, v42) || (v47 = *(_QWORD *)(v38 + 16)) == 0)
          {
LABEL_37:
            swift_release(v38);
          }
          else
          {
            v48 = 0;
            while (swift_dynamicCastClass(*(_QWORD *)(v38 + 8 * v48 + 32), v42))
            {
              if (v47 == ++v48)
                goto LABEL_37;
            }
            swift_release(v38);
            v38 |= 1uLL;
          }
LABEL_38:
          if ((unint64_t)v38 >> 62)
          {
            if (v38 < 0)
              v52 = v38;
            else
              v52 = v38 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v38);
            v43 = _CocoaArrayWrapper.endIndex.getter(v52);
            if (v43)
            {
LABEL_40:
              if (v43 >= 1)
              {
                v44 = 0;
                do
                {
                  if ((v38 & 0xC000000000000001) != 0)
                    v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v38);
                  else
                    v45 = *(id *)(v38 + 8 * v44 + 32);
                  v46 = v45;
                  ++v44;
                  *((_BYTE *)v45 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = 0;
                  sub_10029EA60();

                }
                while (v43 != v44);
                goto LABEL_57;
              }
              goto LABEL_60;
            }
          }
          else
          {
            v43 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v38);
            if (v43)
              goto LABEL_40;
          }
LABEL_57:

          swift_bridgeObjectRelease_n(v38, 2);
          v4 = a2;
          v5 = a1;
          a3 = v55;
LABEL_58:
          sub_10000A520(a3, (uint64_t)v66);
          v53 = v5 & 1;
          sub_1002A0390(v53, (uint64_t)v66);
          sub_100007A28((uint64_t)v66, &qword_10055AAC8);
          *(_BYTE *)(v4 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked) = v53;
          sub_10029EA60();
          return;
        }
LABEL_52:
        v49 = type metadata accessor for ContentCell();
        swift_bridgeObjectRetain(v38);
        v51 = _bridgeCocoaArray<A>(_:)(v50, v49);
        swift_release_n(v38, 2);
        v38 = v51;
        goto LABEL_38;
      }
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v30)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease(v29);
    v38 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_52;
    goto LABEL_35;
  }
LABEL_61:
  __break(1u);
}

double sub_10029D37C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, __int128 *, void (*)(), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v26;
  double result;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  sub_10000A520(a1, (uint64_t)&v34);
  v7 = sub_10029C480((uint64_t)&v34);
  sub_100007A28((uint64_t)&v34, &qword_10055AAC8);
  v8 = swift_allocObject(&unk_1004BC480, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v3);
  sub_10000A520(a1, (uint64_t)&v34);
  v9 = swift_allocObject(&unk_1004BC4D0, 88, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_BYTE *)(v9 + 40) = v7;
  sub_10002099C(&v34, v9 + 48);
  v10 = (uint64_t)&v3[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate];
  swift_beginAccess(&v3[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_delegate], &v28, 0, 0);
  sub_100007A64(v10, (uint64_t)v29, &qword_10055FDB8);
  v11 = v30;
  swift_retain();
  if (!v11)
  {
    sub_100007A28((uint64_t)v29, &qword_10055FDB8);
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
    goto LABEL_8;
  }
  v12 = sub_10003F544(&qword_10055FDD0);
  v13 = sub_10003F544(&qword_10055FDE8);
  if ((swift_dynamicCast(&v31, v29, v12, v13, 6) & 1) == 0)
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
    goto LABEL_8;
  }
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_8:
    sub_100007A28((uint64_t)&v31, &qword_10055FDC0);
    goto LABEL_9;
  }
  sub_10002099C(&v31, (uint64_t)&v34);
  sub_10000A520(a1, (uint64_t)&v31);
  v14 = sub_10003F544(&qword_1005545A0);
  v15 = type metadata accessor for EpisodeData();
  if ((swift_dynamicCast(v29, &v31, v14, v15, 6) & 1) != 0)
  {
    v16 = v29[0];
    v17 = *sub_10003A834(&v34, v35);
    swift_retain();
    sub_1002A133C(v3, v16, (void (*)(__n128))sub_1002A2658, v9, v17);
    swift_release(v9);
    swift_release_n(v16, 2);
LABEL_14:
    sub_10003D380(&v34);
    return result;
  }
  sub_10003D380(&v34);
LABEL_9:
  sub_100007A64(v10, (uint64_t)v29, &qword_10055FDB8);
  if (!v30)
  {
    sub_100007A28((uint64_t)v29, &qword_10055FDB8);
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
    goto LABEL_17;
  }
  v18 = sub_10003F544(&qword_10055FDD0);
  v19 = sub_10003F544((uint64_t *)&unk_10055FDD8);
  if ((swift_dynamicCast(&v31, v29, v18, v19, 6) & 1) == 0)
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
    goto LABEL_17;
  }
  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_17:
    sub_100007A28((uint64_t)&v31, &qword_10055FDC8);
    goto LABEL_18;
  }
  sub_10002099C(&v31, (uint64_t)&v34);
  sub_10000A520(a1, (uint64_t)&v31);
  v20 = sub_10003F544(&qword_1005545A0);
  v21 = type metadata accessor for ShowData();
  if ((swift_dynamicCast(v29, &v31, v20, v21, 6) & 1) != 0)
  {
    v22 = v29[0];
    v23 = v35;
    v24 = v36;
    sub_10003A834(&v34, v35);
    *((_QWORD *)&v32 + 1) = v21;
    v33 = &off_1004BC1C8;
    *(_QWORD *)&v31 = v22;
    v25 = *(void (**)(char *, __int128 *, void (*)(), uint64_t, uint64_t, uint64_t, __n128))(v24 + 16);
    v26 = swift_retain();
    v25(v3, &v31, sub_1002A2658, v9, v23, v24, v26);
    swift_release(v22);
    swift_release(v9);
    sub_10003D380(&v31);
    goto LABEL_14;
  }
  sub_10003D380(&v34);
LABEL_18:
  a2(v7);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_10029D860(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_1004BC5E8, 48, 7);
  *(_BYTE *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  aBlock[4] = sub_1002A2710;
  v27 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BC600;
  v17 = _Block_copy(aBlock);
  v18 = v27;
  swift_retain();
  sub_10002CA20(a3, a4);
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_10017F258();
  v21 = sub_10003F544((uint64_t *)&unk_10055B200);
  v22 = sub_10002F9C8((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v8, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v24);
}

void sub_10029DA7C(char a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  id v8;
  _BYTE v9[24];

  if ((a1 & 1) != 0)
  {
    v4 = a2 + 16;
    swift_beginAccess(a2 + 16, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = objc_retain(*(id *)(Strong
                             + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_tableViewController));

      v8 = objc_msgSend(v7, "tableView");
      if (!v8)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v8, "reloadData");

    }
  }
  if (a3)
    a3();
}

void sub_10029DB34(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t (*)(), uint64_t, __n128);
  char *v18;
  __n128 v19;
  __int128 v20[2];
  char v21[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (char *)Strong;
    sub_10000A520(a5, (uint64_t)v20);
    v12 = (_QWORD *)swift_allocObject(&unk_1004BC570, 80, 7);
    v12[2] = v11;
    sub_10002099C(v20, (uint64_t)(v12 + 3));
    v12[8] = a2;
    v12[9] = a3;
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource];
    v14 = swift_allocObject(&unk_1004BC480, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v11);
    v15 = swift_allocObject(&unk_1004BC598, 48, 7);
    *(_BYTE *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = v14;
    *(_QWORD *)(v15 + 32) = sub_1002A26E4;
    *(_QWORD *)(v15 + 40) = v12;
    v16 = swift_allocObject(&unk_1004BC5C0, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_1002A26F8;
    *(_QWORD *)(v16 + 24) = v15;
    v17 = *(void (**)(uint64_t (*)(), uint64_t, __n128))(*(_QWORD *)v13 + 208);
    v18 = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    v19 = swift_retain();
    v17(sub_100198C7C, v16, v19);
    swift_release(v12);

    swift_release(v14);
    swift_release(v15);
    swift_release(v16);
  }
  else
  {
    a2(a4);
  }
}

uint64_t sub_10029DCD0(uint64_t a1, _QWORD *a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v24)(_QWORD);
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Podcasts39MTTestActionContentPickerViewController_contentDataSource);
  v5 = a2[3];
  v6 = a2[4];
  sub_10003A834(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v9 = v8;
  *(_QWORD *)&v28[0] = _swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(v4 + 24);
  swift_bridgeObjectRetain(v10);
  sub_10029AFD0(v11);
  swift_bridgeObjectRelease(v10);
  v12 = _swiftEmptyArrayStorage[2];
  if (v12)
  {
    v24 = a3;
    v13 = *(_QWORD *)&v28[0] + 32;
    swift_bridgeObjectRetain(*(_QWORD *)&v28[0]);
    while (1)
    {
      sub_10000A520(v13, (uint64_t)&v25);
      v14 = v26;
      v15 = v27;
      sub_10003A834(&v25, v26);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      if (v16 == v7 && v17 == v9)
      {
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v21 = v9;
        goto LABEL_13;
      }
      v19 = v17;
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v7, v9, 0);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) != 0)
        break;
      sub_10003D380(&v25);
      v13 += 40;
      if (!--v12)
      {
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        a3 = v24;
        goto LABEL_10;
      }
    }
    v21 = _swiftEmptyArrayStorage;
LABEL_13:
    swift_bridgeObjectRelease(v21);
    sub_10002099C(&v25, (uint64_t)v28);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    a3 = v24;
  }
  else
  {
LABEL_10:
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  v22 = sub_10029C480((uint64_t)v28);
  a3(v22);
  return sub_100007A28((uint64_t)v28, &qword_10055AAC8);
}

id sub_10029DEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v6;
  NSString v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t ObjectType;
  char v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  objc_super v29;

  v3[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability] = 2;
  v6 = v3;
  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "imageNamed:", v7);

  if (v9)
  {
    v10 = objc_msgSend(v9, "imageWithRenderingMode:", 2);

  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage] = v10;
  v11 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v8, "imageNamed:", v12);

  *(_QWORD *)&v6[v11] = v13;
  v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked] = 0;
  v14 = &v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  v15 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton] = v15;
  objc_msgSend(v15, "setHidden:", 1);
  v16 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel] = v16;
  v18 = (void *)objc_opt_self(UIFont);
  v19 = v16;
  v20 = objc_msgSend(v18, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v19, "setFont:", v20);

  objc_msgSend(*(id *)&v6[v17], "setLineBreakMode:", 4);
  ObjectType = swift_getObjectType(v6, v21);
  v23 = (*(uint64_t (**)(void))(ObjectType + 168))();
  v24 = 0;
  if ((v23 & 1) != 0)
    v24 = sub_1002A220C();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView] = v24;

  if (a3)
  {
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v25 = 0;
  }
  v29.receiver = v6;
  v29.super_class = (Class)type metadata accessor for ContentCell();
  v26 = objc_msgSendSuper2(&v29, "initWithStyle:reuseIdentifier:", a1, v25);

  v27 = v26;
  sub_10029E1DC();

  return v27;
}

void sub_10029E1DC()
{
  char *v0;
  __int128 v1;
  double v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;
  void *v13;
  char **v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;

  if (qword_1005520A8 != -1)
    swift_once(&qword_1005520A8, sub_10029BC34);
  v1 = xmmword_10055F3C0;
  v2 = *(double *)&qword_10055F3D0;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton];
  objc_msgSend(v0, "addSubview:", v3);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v3, "leadingAnchor");
  v5 = objc_msgSend(v0, "layoutMarginsGuide");
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, 0.0);
  objc_msgSend(v7, "setActive:", 1);

  v8 = objc_msgSend(v3, "centerYAnchor");
  v9 = objc_msgSend(v0, "centerYAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  objc_msgSend(v10, "setActive:", 1);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 1, v11);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 0, v12);
  v13 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView];
  v14 = &selRef_appControllerWithDelegate_;
  if (!v13)
    goto LABEL_7;
  v15 = v13;
  objc_msgSend(v0, "addSubview:", v15);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend(v15, "widthAnchor");
  if (qword_1005520B0 != -1)
    swift_once(&qword_1005520B0, sub_10029BC48);
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", *(double *)&xmmword_10055F3E0);

  objc_msgSend(v17, "setActive:", 1);
  v18 = objc_msgSend(v15, "heightAnchor");
  v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(v18, "constraintEqualToConstant:", *((double *)&xmmword_10055F3E0
                                                                                           + 1)));

  objc_msgSend(v19, "setActive:", 1);
  v20 = objc_msgSend(v15, "leadingAnchor");
  v21 = objc_msgSend(v3, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, *((double *)&v1 + 1));

  objc_msgSend(v22, "setActive:", 1);
  v23 = objc_msgSend(v15, "centerYAnchor");
  v24 = objc_msgSend(v0, "contentView");
  v25 = objc_msgSend(v24, "centerYAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);
  objc_msgSend(v26, "setActive:", 1);

  v27 = objc_msgSend(v15, "topAnchor");
  v28 = objc_msgSend(v0, "contentView");
  v29 = objc_msgSend(v28, "topAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v29, *(double *)&v1);
  objc_msgSend(v30, "setActive:", 1);

  v31 = objc_msgSend(v15, "bottomAnchor");
  v32 = objc_msgSend(v0, "contentView");
  v33 = objc_msgSend(v32, "bottomAnchor");

  v14 = &selRef_appControllerWithDelegate_;
  v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, -v2);

  objc_msgSend(v34, "setActive:", 1);
  v35 = objc_msgSend(v15, "trailingAnchor");
  if (!v35)
LABEL_7:
    v35 = objc_msgSend(v3, "trailingAnchor");
  v36 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel];
  objc_msgSend(v0, "addSubview:", v36);
  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = objc_msgSend(v36, "leadingAnchor");
  v38 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v35, *((double *)&v1 + 1));

  objc_msgSend(v38, "setActive:", 1);
  v39 = objc_msgSend(v36, "trailingAnchor");
  v40 = objc_msgSend(v0, "layoutMarginsGuide");
  v41 = objc_msgSend(v40, "trailingAnchor");

  v42 = objc_msgSend(v39, "constraintLessThanOrEqualToAnchor:constant:", v41, 0.0);
  objc_msgSend(v42, "setActive:", 1);

  v43 = objc_msgSend(v36, "topAnchor");
  v44 = objc_msgSend(v0, "layoutMarginsGuide");
  v45 = objc_msgSend(v44, "topAnchor");

  v46 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v45, 0.0);
  objc_msgSend(v46, "setActive:", 1);

  v47 = objc_msgSend(v36, v14[188]);
  v48 = objc_msgSend(v0, "layoutMarginsGuide");
  v49 = objc_msgSend(v48, v14[188]);

  v50 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v49, 0.0);
  objc_msgSend(v50, "setActive:", 1);

}

void sub_10029EA60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  double v12;
  uint64_t v13;
  double v14;
  void *v15;
  double v16;
  uint64_t *v17;
  _BYTE v18[24];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_titleLabel);
  v3 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
  swift_beginAccess(v3, v18, 0, 0);
  sub_100007A64(v3, (uint64_t)v19, &qword_10055AAC8);
  v4 = v20;
  if (v20)
  {
    v5 = v21;
    sub_10003A834(v19, v20);
    v6 = *(_QWORD *)(v4 - 8);
    __chkstk_darwin();
    v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v6 + 16))(v8);
    sub_100007A28((uint64_t)v19, &qword_10055AAC8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    v10 = v9;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v4);
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    sub_100007A28((uint64_t)v19, &qword_10055AAC8);
    v11 = 0;
  }
  objc_msgSend(v2, "setText:", v11, v12);

  v13 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability) == 2)
    v14 = 1.0;
  else
    v14 = 0.5;
  objc_msgSend(v2, "setAlpha:", v14);
  v15 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkButton);
  objc_msgSend(v15, "setHidden:", *(_BYTE *)(v1 + v13) == 0);
  if (*(_BYTE *)(v1 + v13) == 2)
    v16 = 1.0;
  else
    v16 = 0.5;
  objc_msgSend(v15, "setAlpha:", v16);
  if ((objc_msgSend(v15, "isHidden") & 1) == 0)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked))
      v17 = &OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage;
    else
      v17 = &OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
    objc_msgSend(v15, "setImage:forStates:", *(_QWORD *)(v1 + *v17), 0);
  }
  sub_10029EC8C();
}

void sub_10029EC8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *ObjCClassFromMetadata;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  _QWORD aBlock[3];
  _QWORD *v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_artworkView);
  if (v1)
  {
    v2 = v0;
    v3 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
    swift_beginAccess(v3, v29, 0, 0);
    sub_100007A64(v3, (uint64_t)aBlock, &qword_10055AAC8);
    v4 = v26;
    if (v26)
    {
      v5 = v27;
      sub_10003A834(aBlock, (uint64_t)v26);
      v6 = *(v4 - 1);
      __chkstk_darwin();
      v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v8);
      v9 = v1;
      sub_100007A28((uint64_t)aBlock, &qword_10055AAC8);
      (*((void (**)(_QWORD *, void (*)(uint64_t, uint64_t, uint64_t)))v5 + 4))(v4, v5);
      v11 = v10;
      (*(void (**)(char *, _QWORD *))(v6 + 8))(v8, v4);
      v12 = sub_100005EC8(0, &qword_1005536C0, MTImageStore_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v12);
      v14 = objc_msgSend(ObjCClassFromMetadata, "defaultStore");
      v15 = String._bridgeToObjectiveC()();
      if (qword_1005520B0 != -1)
        swift_once(&qword_1005520B0, sub_10029BC48);
      v16 = objc_msgSend(v14, "imageInMemoryForKey:size:", v15, xmmword_10055F3E0);

      if (v16)
      {
        objc_msgSend(v9, "setImage:", v16, swift_bridgeObjectRelease(v11).n128_f64[0]);

      }
      else
      {
        v17 = objc_msgSend(ObjCClassFromMetadata, "defaultStore");
        v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v11);
        v18 = xmmword_10055F3E0;
        v19 = swift_allocObject(&unk_1004BC408, 24, 7);
        swift_unknownObjectWeakInit(v19 + 16, v2);
        v20 = swift_allocObject(&unk_1004BC430, 32, 7);
        *(_QWORD *)(v20 + 16) = v19;
        *(_QWORD *)(v20 + 24) = v9;
        v27 = sub_1002A25DC;
        v28 = v20;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10029F168;
        v26 = &unk_1004BC448;
        v21 = _Block_copy(aBlock);
        v22 = v28;
        v23 = v9;
        swift_release(v22);
        objc_msgSend(v17, "asyncImageForKey:size:completionHandler:", v16, v21, v18);
        _Block_release(v21);

      }
    }
    else
    {
      v16 = v1;
      sub_100007A28((uint64_t)aBlock, &qword_10055AAC8);
      objc_msgSend(v16, "setImage:", 0);
    }

  }
}

void sub_10029EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  unint64_t v23;
  _BYTE v25[24];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = Strong + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData;
    swift_beginAccess(Strong + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData, v25, 0, 0);
    sub_100007A64(v12, (uint64_t)v26, &qword_10055AAC8);

    v13 = v27;
    if (!v27)
    {
      sub_100007A28((uint64_t)v26, &qword_10055AAC8);
      return;
    }
    v14 = v28;
    sub_10003A834(v26, v27);
    v15 = *(_QWORD *)(v13 - 8);
    __chkstk_darwin();
    v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(char *))(v15 + 16))(v17);
    sub_100007A28((uint64_t)v26, &qword_10055AAC8);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    if (v18 == a2 && v20 == a3)
    {
      v23 = swift_bridgeObjectRelease(a3).n128_u64[0];
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, a2, a3, 0);
      v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
      if ((v22 & 1) == 0)
        return;
    }
    objc_msgSend(a5, "setImage:", a1, *(double *)&v23);
  }
}

void sub_10029F168(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  swift_retain(v4);
  v9 = a2;
  v5(a2, v6, v8);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);

}

id sub_10029F1E4()
{
  return sub_1001C3784(0, type metadata accessor for ContentCell);
}

uint64_t type metadata accessor for ContentCell()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell);
}

id sub_10029F2B0()
{
  return sub_1001C3784(0, type metadata accessor for EpisodeCell);
}

uint64_t type metadata accessor for EpisodeCell()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311EpisodeCell);
}

id sub_10029F2EC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_10029F340(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  objc_super v13;

  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = a1;
  v13.super_class = (Class)a5(0);
  v11 = objc_msgSendSuper2(&v13, "initWithStyle:reuseIdentifier:", a3, v10);

  return v11;
}

id sub_10029F3D4()
{
  return sub_1001C3784(0, type metadata accessor for ShowCell);
}

uint64_t type metadata accessor for ShowCell()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A238ShowCell);
}

char *sub_10029F488(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  objc_super v48;

  v4 = &v2[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = v2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView] = sub_1002A220C();
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel] = v6;
  v7 = (void *)objc_opt_self(UIFont);
  v8 = v6;
  v9 = objc_msgSend(v7, "boldSystemFontOfSize:", 20.0);
  objc_msgSend(v8, "setFont:", v9);

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v48.receiver = v5;
  v48.super_class = (Class)type metadata accessor for SectionHeader();
  v11 = objc_msgSendSuper2(&v48, "initWithReuseIdentifier:", v10);

  v12 = (char *)v11;
  v13 = objc_msgSend(v12, "contentView");
  v14 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView;
  objc_msgSend(v13, "addSubview:", *(_QWORD *)&v12[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView]);

  v15 = objc_msgSend(v12, "contentView");
  v16 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel;
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v12[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel]);

  if (qword_100552098 != -1)
    swift_once(&qword_100552098, sub_10029BBE8);
  v17 = xmmword_10055F390;
  v19 = *(double *)&qword_10055F3A0;
  v18 = unk_10055F3A8;
  objc_msgSend(*(id *)&v12[v14], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = objc_msgSend(*(id *)&v12[v14], "widthAnchor");
  if (qword_1005520A0 != -1)
    swift_once(&qword_1005520A0, sub_10029BBFC);
  v21 = objc_msgSend(v20, "constraintEqualToConstant:", *(double *)&xmmword_10055F3B0);

  objc_msgSend(v21, "setActive:", 1);
  v22 = objc_msgSend(*(id *)&v12[v14], "heightAnchor");
  v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(v22, "constraintEqualToConstant:", *((double *)&xmmword_10055F3B0
                                                                                           + 1)));

  objc_msgSend(v23, "setActive:", 1);
  v24 = objc_msgSend(*(id *)&v12[v14], "leadingAnchor");
  v25 = objc_msgSend(v12, "contentView");
  v26 = objc_msgSend(v25, "leadingAnchor");

  v27 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, *((double *)&v17 + 1));
  objc_msgSend(v27, "setActive:", 1);

  v28 = objc_msgSend(*(id *)&v12[v14], "topAnchor");
  v29 = objc_msgSend(v12, "contentView");
  v30 = objc_msgSend(v29, "topAnchor");

  v31 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v30, *(double *)&v17);
  objc_msgSend(v31, "setActive:", 1);

  v32 = objc_msgSend(*(id *)&v12[v14], "bottomAnchor");
  v33 = objc_msgSend(v12, "contentView");
  v34 = objc_msgSend(v33, "bottomAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v34, -v19);
  objc_msgSend(v35, "setActive:", 1);

  objc_msgSend(*(id *)&v12[v16], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v36 = objc_msgSend(*(id *)&v12[v16], "centerYAnchor");
  v37 = objc_msgSend(v12, "contentView");
  v38 = objc_msgSend(v37, "centerYAnchor");

  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
  objc_msgSend(v39, "setActive:", 1);

  v40 = objc_msgSend(*(id *)&v12[v16], "leadingAnchor");
  v41 = objc_msgSend(*(id *)&v12[v14], "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, *((double *)&v17 + 1));

  objc_msgSend(v42, "setActive:", 1);
  v43 = objc_msgSend(*(id *)&v12[v16], "trailingAnchor");
  v44 = objc_msgSend(v12, "contentView");
  v45 = objc_msgSend(v44, "trailingAnchor");

  v46 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v45, v18);
  objc_msgSend(v46, "setActive:", 1);

  return v12;
}

uint64_t sub_10029FADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  void *v19;
  __int128 v21;
  void (*v22)(uint64_t, void *, uint64_t);
  void *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _BYTE v26[24];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
  swift_beginAccess(v2, v26, 0, 0);
  sub_100007A64(v2, (uint64_t)&v21, &qword_10055AAC8);
  if (!v23)
    return sub_100007A28((uint64_t)&v21, &qword_10055AAC8);
  sub_10002099C(&v21, (uint64_t)v27);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_podcastTitleLabel);
  v4 = v28;
  v5 = v29;
  sub_10003A834(v27, v28);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  v7 = v3;
  v8 = v6(v4, v5);
  v9 = *(_QWORD *)(v8 + 56);
  swift_bridgeObjectRetain(v9);
  swift_release(v8);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v11 = sub_100005EC8(0, &qword_1005536C0, MTImageStore_ptr);
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(v11), "defaultStore");
  v13 = v28;
  v14 = v29;
  sub_10003A834(v27, v28);
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = swift_allocObject(&unk_1004BC3B8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  v24 = sub_1002A2560;
  v25 = v18;
  *(_QWORD *)&v21 = _NSConcreteStackBlock;
  *((_QWORD *)&v21 + 1) = 1107296256;
  v22 = sub_10029F168;
  v23 = &unk_1004BC3D0;
  v19 = _Block_copy(&v21);
  objc_msgSend(v12, "asyncImageForKey:completionHandler:", v17, v19, swift_release(v25).n128_f64[0]);
  _Block_release(v19);

  return sub_10003D380(v27);
}

void sub_10029FCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  void *v22;
  id v23;
  _BYTE v25[24];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = Strong
        + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection;
    swift_beginAccess(Strong + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_firstContentDataInSection, v25, 0, 0);
    sub_100007A64(v10, (uint64_t)v26, &qword_10055AAC8);

    v11 = v27;
    if (!v27)
    {
      sub_100007A28((uint64_t)v26, &qword_10055AAC8);
      return;
    }
    v12 = v28;
    sub_10003A834(v26, v27);
    v13 = *(_QWORD *)(v11 - 8);
    __chkstk_darwin();
    v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(char *))(v13 + 16))(v15);
    sub_100007A28((uint64_t)v26, &qword_10055AAC8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    if (v16 == a2 && v18 == a3)
    {
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a2, a3, 0);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) == 0)
        return;
    }
    swift_beginAccess(v7, v26, 0, 0);
    v21 = swift_unknownObjectWeakLoadStrong(v7);
    if (v21)
    {
      v22 = (void *)v21;
      v23 = objc_retain(*(id *)(v21
                              + OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader_imageView));

      objc_msgSend(v23, "setImage:", a1);
    }
  }
}

id sub_10029FEEC()
{
  return sub_1001C3784(0, type metadata accessor for SectionHeader);
}

uint64_t type metadata accessor for SectionHeader()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2313SectionHeader);
}

uint64_t sub_10029FF6C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 66, 7);
}

uint64_t type metadata accessor for ShowData()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A238ShowData);
}

uint64_t sub_10029FFC0()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_10029FFC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return v1;
}

uint64_t sub_10029FFF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return v1;
}

uint64_t sub_1002A0028()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for EpisodeData()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311EpisodeData);
}

uint64_t sub_1002A0084()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 48));
}

uint64_t sub_1002A0090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 40));
  return v2;
}

void sub_1002A00C4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000100439A20, "Podcasts/MTTestActionContentPicker.swift", 40, 2, 625, 0);
  __break(1u);
}

unint64_t sub_1002A011C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v6 = type metadata accessor for IndexPath(0, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = IndexPath.init(row:section:)(0, a1);
  result = IndexPath.section.getter(v10);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v4 + 16);
    if (result < *(_QWORD *)(v12 + 16))
    {
      v13 = v12 + 16 * result;
      v15 = *(_QWORD *)(v13 + 32);
      v14 = *(_QWORD *)(v13 + 40);
      v16 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v17 = swift_bridgeObjectRetain(v14);
      v16(v9, v6, v17);
      v18 = *(_QWORD *)(v4 + 24);
      if (*(_QWORD *)(v18 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v4 + 24));
        v19 = sub_10002E5D8(v15, v14);
        if ((v20 & 1) != 0)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
          swift_bridgeObjectRetain(v21);
          swift_bridgeObjectRelease(v14);
          swift_bridgeObjectRelease(v18);
          v22 = *(_QWORD *)(v21 + 16);
          swift_bridgeObjectRelease(v21);
          return v22;
        }
        swift_bridgeObjectRelease(v14);
        v23 = v18;
      }
      else
      {
        v23 = v14;
      }
      swift_bridgeObjectRelease(v23);
      return 0;
    }
  }
  __break(1u);
  return result;
}

void sub_1002A024C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  unint64_t v16;
  uint64_t v17;

  v4 = IndexPath.section.getter(a1);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(v2 + 16);
  if (v4 >= *(_QWORD *)(v5 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v7 = v5 + 16 * v4;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 32);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v6);
  v10 = sub_10002E5D8(v9, v8);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(v8);
    v17 = v6;
LABEL_12:
    swift_bridgeObjectRelease(v17);
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v8);
  v13 = swift_bridgeObjectRelease(v6);
  if (IndexPath.row.getter(v13) < 0 || IndexPath.row.getter(v14) >= *(_QWORD *)(v12 + 16))
  {
    v17 = v12;
    goto LABEL_12;
  }
  v16 = IndexPath.row.getter(v15);
  if ((v16 & 0x8000000000000000) == 0)
  {
    if (v16 < *(_QWORD *)(v12 + 16))
    {
      sub_10000A520(v12 + 40 * v16 + 32, a2);
      swift_bridgeObjectRelease(v12);
      return;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1002A0390(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  sub_100007A64(a2, (uint64_t)&v15, &qword_10055AAC8);
  if (!v16)
    return sub_100007A28((uint64_t)&v15, &qword_10055AAC8);
  sub_10002099C(&v15, (uint64_t)v17);
  v5 = v18;
  v6 = v19;
  sub_10003A834(v17, v18);
  if ((a1 & 1) != 0)
  {
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    v9 = v8;
    sub_10000A520((uint64_t)v17, (uint64_t)&v15);
    swift_beginAccess(v3 + 32, v14, 33, 0);
    sub_10021472C((uint64_t)&v15, v7, v9);
    swift_endAccess(v14);
  }
  else
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    v13 = v12;
    swift_beginAccess(v3 + 32, v14, 33, 0);
    sub_100217014(v11, v13, (uint64_t)&v15);
    sub_100007A28((uint64_t)&v15, &qword_10055AAC8);
    swift_endAccess(v14);
    swift_bridgeObjectRelease(v13);
  }
  return sub_10003D380(v17);
}

uint64_t sub_1002A04F4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for ContentDataSource()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2317ContentDataSource);
}

double sub_1002A0548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  double result;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v3 = v2;
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithKey:ascending:selector:", v7, 1, "localizedStandardCompare:");

  v9 = objc_allocWithZone((Class)NSSortDescriptor);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithKey:ascending:", v10, 0);

  v12 = sub_10003F544((uint64_t *)&unk_100553780);
  v13 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1003CDE60;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v11;
  v20 = v13;
  specialized Array._endMutation()(v13);
  v14 = v20;
  v20 = 4;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  v25 = 9;
  v15 = swift_allocObject(&unk_1004BC318, 24, 7);
  swift_weakInit(v15 + 16, v3);
  v16 = (_QWORD *)swift_allocObject(&unk_1004BC340, 40, 7);
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v17 = v8;
  v18 = v11;
  swift_retain();
  sub_10002CA20(a1, a2);
  sub_1002A1978((uint64_t)&v20, 0, v14, (uint64_t)sub_1002A1954, (uint64_t)v16);

  swift_bridgeObjectRelease(v14);
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_1002A0730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;

  v1 = a1;
  v57 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v41 = a1;
    else
      v41 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v41);
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
    {
LABEL_3:
      if (v2 >= 1)
      {
        v3 = 0;
        v52 = v2;
        v53 = v1 & 0xC000000000000001;
        v51 = v1;
        while (1)
        {
          if (v53)
            v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
          else
            v5 = *(id *)(v1 + 8 * v3 + 32);
          v6 = v5;
          v7 = type metadata accessor for EpisodeData();
          v4 = swift_allocObject(v7, 72, 7);
          v8 = v6;
          v9 = objc_msgSend(v8, "podcast");
          v10 = type metadata accessor for ShowData();
          v11 = swift_allocObject(v10, 66, 7);
          if (!v9)
            goto LABEL_7;
          v54 = (_QWORD *)v4;
          v12 = v9;
          v13 = objc_msgSend(v12, "uuid");
          if (!v13)
            goto LABEL_6;
          v14 = v13;
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
          v17 = v16;

          v18 = objc_msgSend(v12, "title");
          if (!v18)
            break;
          v19 = v18;
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          v22 = v21;

          *(_QWORD *)(v11 + 32) = v15;
          *(_QWORD *)(v11 + 40) = v17;
          *(_QWORD *)(v11 + 48) = v20;
          *(_QWORD *)(v11 + 56) = v22;
          *(_QWORD *)(v11 + 16) = v15;
          *(_QWORD *)(v11 + 24) = v17;
          *(_BYTE *)(v11 + 64) = objc_msgSend(v12, "subscribed", swift_bridgeObjectRetain(v17).n128_f64[0]);
          v23 = objc_msgSend(v12, "notifications");

          *(_BYTE *)(v11 + 65) = v23;
          v24 = objc_msgSend(v8, "uuid");
          if (v24)
          {
            v25 = v24;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            v28 = v27;

            v29 = objc_msgSend(v8, "bestTitle");
            v1 = v51;
            if (v29)
            {
              v30 = v29;
              v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
              v33 = v32;

              v54[2] = v26;
              v54[3] = v28;
              v54[4] = v31;
              v54[5] = v33;
              v35 = *(_QWORD *)(v11 + 32);
              v34 = *(_QWORD *)(v11 + 40);
              v54[6] = v11;
              v54[7] = v35;
              v54[8] = v34;
              swift_bridgeObjectRetain(v34);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
              v38 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v37 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v38 >= v37 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
              v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v54);
              specialized Array._endMutation()(v39);
              v2 = v52;
              goto LABEL_9;
            }
            swift_release(v11);

            swift_bridgeObjectRelease(v28);
          }
          else
          {
            swift_release(v11);

            v1 = v51;
          }
          v2 = v52;
          v4 = (uint64_t)v54;
LABEL_8:
          swift_deallocPartialClassInstance(v4, v7, 72, 7);
LABEL_9:
          if (v2 == ++v3)
          {
            swift_bridgeObjectRelease(v1);
            v40 = v57;
            goto LABEL_30;
          }
        }
        swift_bridgeObjectRelease(v17);
        v2 = v52;
LABEL_6:

        v4 = (uint64_t)v54;
LABEL_7:
        swift_deallocPartialClassInstance(v11, v10, 66, 7);

        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease(v1);
  v40 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_30:
  v42 = sub_100138CF4((uint64_t)_swiftEmptyArrayStorage);
  v56 = _swiftEmptyArrayStorage;
  v57 = v42;
  if (!((unint64_t)v40 >> 62))
  {
    v43 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v40);
    if (v43)
      goto LABEL_32;
LABEL_43:
    swift_bridgeObjectRelease_n(v40, 2);
    v46 = _swiftEmptyArrayStorage;
LABEL_44:
    v48 = *(_QWORD *)(v50 + 16);
    *(_QWORD *)(v50 + 16) = v46;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRelease(v48);
    v49 = *(_QWORD *)(v50 + 24);
    *(_QWORD *)(v50 + 24) = v42;
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v49);
    return;
  }
  if (v40 < 0)
    v47 = v40;
  else
    v47 = v40 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v40);
  v43 = _CocoaArrayWrapper.endIndex.getter(v47);
  if (!v43)
    goto LABEL_43;
LABEL_32:
  if (v43 >= 1)
  {
    v44 = 0;
    do
    {
      if ((v40 & 0xC000000000000001) != 0)
      {
        v45 = specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v40);
      }
      else
      {
        v45 = *(_QWORD *)(v40 + 8 * v44 + 32);
        swift_retain();
      }
      ++v44;
      v55 = v45;
      sub_1002A22FC(&v55, &v57, &v56);
      swift_release(v45);
    }
    while (v43 != v44);
    swift_bridgeObjectRelease_n(v40, 2);
    v46 = v56;
    v42 = v57;
    goto LABEL_44;
  }
LABEL_46:
  __break(1u);
}

uint64_t type metadata accessor for EpisodeDataSource()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2317EpisodeDataSource);
}

double sub_1002A0BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  double result;

  v5 = swift_allocObject(&unk_1004BC278, 24, 7);
  swift_weakInit(v5 + 16, v2);
  v6 = (_QWORD *)swift_allocObject(&unk_1004BC2A0, 40, 7);
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  sub_10002CA20(a1, a2);
  sub_1002A16E0(0, (uint64_t)sub_1002A1318, (uint64_t)v6);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_1002A0C88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result)
  {
    v8 = result;
    v9 = a3 + 16;
    swift_beginAccess(a3 + 16, v11, 0, 0);
    result = swift_weakLoadStrong(v9);
    if (result)
    {
      v10 = result;
      a6(v8);
      result = swift_release(v10);
    }
    if (a4)
      return a4(result);
  }
  return result;
}

double sub_1002A0D14(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD), uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t v8;
  uint64_t v9;
  double result;

  v8 = sub_100005EC8(0, a5, a6);
  v9 = NSManagedObjectContext.fetch<A>(_:)(a2, v8);
  a3(v9, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1002A0DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[56];
  unint64_t v38;

  v2 = a1;
  v38 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v28 = a1;
    else
      v28 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (v3)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease(v2);
    v27 = _swiftEmptyArrayStorage;
LABEL_22:
    v29 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = &off_1004AD268;
    swift_bridgeObjectRelease(v29);
    v30 = sub_10003F544((uint64_t *)&unk_10055FDA0);
    inited = swift_initStackObject(v30, v37);
    *(_OWORD *)(inited + 16) = xmmword_1003CA200;
    strcpy((char *)(inited + 32), "All Podcasts");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    v32 = sub_100179240((uint64_t)v27);
    swift_bridgeObjectRelease(v27);
    *(_QWORD *)(inited + 48) = v32;
    v33 = sub_100138CF4(inited);
    v34 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = v33;
    swift_bridgeObjectRelease(v34);
    return;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v3)
    goto LABEL_21;
LABEL_3:
  if (v3 >= 1)
  {
    v35 = v1;
    v36 = v2;
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    while (1)
    {
      if (v5)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = type metadata accessor for ShowData();
      v9 = swift_allocObject(v8, 66, 7);
      v10 = v7;
      v11 = objc_msgSend(v10, "uuid");
      if (v11)
      {
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        v16 = objc_msgSend(v10, "title");
        if (v16)
        {
          v17 = v16;
          v18 = v3;
          v19 = v5;
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
          v22 = v21;

          *(_QWORD *)(v9 + 32) = v13;
          *(_QWORD *)(v9 + 40) = v15;
          *(_QWORD *)(v9 + 48) = v20;
          *(_QWORD *)(v9 + 56) = v22;
          *(_QWORD *)(v9 + 16) = v13;
          *(_QWORD *)(v9 + 24) = v15;
          *(_BYTE *)(v9 + 64) = objc_msgSend(v10, "subscribed", swift_bridgeObjectRetain(v15).n128_f64[0]);
          LOBYTE(v22) = objc_msgSend(v10, "notifications");

          *(_BYTE *)(v9 + 65) = v22;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
          v25 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v24 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v25 >= v24 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
          v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v9);
          specialized Array._endMutation()(v26);
          v5 = v19;
          v3 = v18;
          v2 = v36;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease(v15);
      }

      swift_deallocPartialClassInstance(v9, v8, 66, 7);
LABEL_7:
      if (v3 == ++v4)
      {
        swift_bridgeObjectRelease(v2);
        v27 = (_QWORD *)v38;
        v1 = v35;
        goto LABEL_22;
      }
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for ShowsDataSource()
{
  return objc_opt_self(_TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2315ShowsDataSource);
}

uint64_t storeEnumTagSinglePayload for MTTestActionContentPickerViewController.Selectability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002A1114 + 4 * byte_1003D2A65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002A1148 + 4 * byte_1003D2A60[v4]))();
}

uint64_t sub_1002A1148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A1150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A1158);
  return result;
}

uint64_t sub_1002A1164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A116CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002A1170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A1178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MTTestActionContentPickerViewController.Selectability()
{
  return &type metadata for MTTestActionContentPickerViewController.Selectability;
}

uint64_t storeEnumTagSinglePayload for MTTestActionContentPickerViewController.EntityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002A11E0 + 4 * byte_1003D2A6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A1214 + 4 * byte_1003D2A6A[v4]))();
}

uint64_t sub_1002A1214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A121C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A1224);
  return result;
}

uint64_t sub_1002A1230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A1238);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002A123C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A1244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MTTestActionContentPickerViewController.EntityType()
{
  return &type metadata for MTTestActionContentPickerViewController.EntityType;
}

unint64_t sub_1002A1264()
{
  unint64_t result;

  result = qword_10055FD90;
  if (!qword_10055FD90)
  {
    result = swift_getWitnessTable(&unk_1003D2D5C, &type metadata for MTTestActionContentPickerViewController.EntityType);
    atomic_store(result, (unint64_t *)&qword_10055FD90);
  }
  return result;
}

unint64_t sub_1002A12AC()
{
  unint64_t result;

  result = qword_10055FD98;
  if (!qword_10055FD98)
  {
    result = swift_getWitnessTable(&unk_1003D2DC4, &type metadata for MTTestActionContentPickerViewController.Selectability);
    atomic_store(result, (unint64_t *)&qword_10055FD98);
  }
  return result;
}

uint64_t sub_1002A12F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A1318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002A0C88(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), sub_1002A0DCC);
}

uint64_t sub_1002A133C(void *a1, uint64_t a2, void (*a3)(__n128), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  id v17;
  NSString v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  NSString v23;
  void *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void **v31;
  unint64_t v32;
  void (*v33)(uint64_t, void *);
  void *v34;
  uint64_t (*v35)(uint64_t);
  _QWORD *v36;
  __int128 v37[2];
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  _QWORD v41[3];
  uint64_t v42;
  _UNKNOWN **v43;

  v42 = type metadata accessor for EpisodeData();
  v43 = &off_1004BC168;
  v41[0] = a2;
  v10 = *(_QWORD *)(*sub_10003A834(v41, v42) + 48);
  v39 = type metadata accessor for ShowData();
  v40 = &off_1004BC1C8;
  v38[0] = v10;
  v11 = *sub_10003A834(v38, v39);
  swift_retain();
  swift_retain();
  v12 = sub_1002A1DB4(v11);
  if (v13)
  {
    v14 = v13;
    v32 = 0xE900000000000020;
    String.append(_:)(*(Swift::String *)&v12);
    swift_bridgeObjectRelease(v14);
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xE900000000000020);
    v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1, 0x3A6E6F736165520ALL);

    v18 = String._bridgeToObjectiveC()();
    v19 = (void *)objc_opt_self(UIAlertAction);
    v20 = objc_msgSend(v19, "actionWithTitle:style:handler:", v18, 1, 0);

    objc_msgSend(v17, "addAction:", v20);
    if ((*(_BYTE *)(*sub_10003A834(v38, v39) + 65) & 1) == 0)
    {
      v21 = swift_allocObject(&unk_1004BC4F8, 24, 7);
      swift_weakInit(v21 + 16, a5);
      sub_10000A520((uint64_t)v38, (uint64_t)v37);
      v22 = (_QWORD *)swift_allocObject(&unk_1004BC520, 80, 7);
      v22[2] = v21;
      sub_10002099C(v37, (uint64_t)(v22 + 3));
      v22[8] = a3;
      v22[9] = a4;
      swift_retain();
      swift_retain();
      v23 = String._bridgeToObjectiveC()();
      v35 = sub_1002A26A0;
      v36 = v22;
      v31 = _NSConcreteStackBlock;
      v32 = 1107296256;
      v33 = sub_1001AC13C;
      v34 = &unk_1004BC538;
      v24 = _Block_copy(&v31);
      v25 = objc_msgSend(v19, "actionWithTitle:style:handler:", v23, 0, v24, swift_release(v36).n128_f64[0]);
      _Block_release(v24);
      swift_release(v21);

      objc_msgSend(v17, "addAction:", v25);
    }
    objc_msgSend(a1, "presentViewController:animated:completion:", v17, 1, 0);

  }
  else
  {
    v26 = sub_10003A834(v38, v39);
    v27 = *(_QWORD *)(*v26 + 32);
    v28 = *(_QWORD *)(*v26 + 40);
    swift_beginAccess(a5 + 40, &v31, 33, 0);
    swift_bridgeObjectRetain(v28);
    sub_10002B270((uint64_t *)v37, v27, v28);
    swift_endAccess(&v31);
    v29 = swift_bridgeObjectRelease(*((_QWORD *)&v37[0] + 1));
    a3(v29);
  }
  sub_10003D380(v38);
  return sub_10003D380(v41);
}

void sub_1002A16E0(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  Class isa;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  _QWORD v21[5];
  _QWORD *v22;

  type metadata accessor for CoreDataFetcher(0);
  v6 = (void *)static CoreDataFetcher.contextProvider.getter();
  v7 = objc_msgSend(v6, "privateQueueContext");
  swift_unknownObjectRelease(v6);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPodcastEntityName);
  v9 = v8;
  v10 = objc_allocWithZone((Class)NSFetchRequest);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "initWithEntityName:", v11, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v13 = objc_msgSend((id)objc_opt_self(MTPodcast), "predicateForNotHiddenNotImplicitlyFollowedPodcasts");
  objc_msgSend(v12, "setPredicate:", v13);

  v14 = ShowsSortType.sortDescriptors.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_1005547A0, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setSortDescriptors:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v16 = (_QWORD *)swift_allocObject(&unk_1004BC2C8, 48, 7);
  v16[2] = v7;
  v16[3] = v12;
  v16[4] = a2;
  v16[5] = a3;
  v21[4] = sub_1002A18F0;
  v22 = v16;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_100027AF8;
  v21[3] = &unk_1004BC2E0;
  v17 = _Block_copy(v21);
  v18 = v22;
  v19 = v7;
  v20 = v12;
  swift_retain();
  objc_msgSend(v19, "performBlock:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

}

double sub_1002A18F0()
{
  uint64_t v0;

  return sub_1002A0D14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), (unint64_t *)&qword_100553810, MTPodcast_ptr);
}

uint64_t sub_1002A1920()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002A1954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002A0C88(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), sub_1002A0730);
}

void sub_1002A1978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  void *v19;
  Class isa;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  _QWORD *v29;

  v26 = a4;
  v27 = type metadata accessor for EpisodeListSettings(0);
  v8 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoreDataFetcher(0);
  v11 = (void *)static CoreDataFetcher.contextProvider.getter();
  v12 = objc_msgSend(v11, "privateQueueContext");
  swift_unknownObjectRelease(v11);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kMTEpisodeEntityName);
  v14 = v13;
  v15 = objc_allocWithZone((Class)NSFetchRequest);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithEntityName:", v16, swift_bridgeObjectRelease(v14).n128_f64[0]);

  sub_1001860CC(a1);
  v18 = EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(a1, 17, 3, 0, 0, 0);
  v19 = (void *)EpisodeListSettings.predicate.getter(v18);
  objc_msgSend(v17, "setPredicate:", v19);

  sub_100005EC8(0, (unint64_t *)&qword_1005547A0, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "setSortDescriptors:", isa);

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v17, "setFetchLimit:", a2);
    v21 = (_QWORD *)swift_allocObject(&unk_1004BC368, 48, 7);
    v21[2] = v12;
    v21[3] = v17;
    v21[4] = v26;
    v21[5] = a5;
    aBlock[4] = sub_1002A1C30;
    v29 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BC380;
    v22 = _Block_copy(aBlock);
    v23 = v29;
    v24 = v12;
    v25 = v17;
    swift_retain();
    objc_msgSend(v24, "performBlock:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  }
}

uint64_t sub_1002A1BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1002A1C30()
{
  uint64_t v0;

  return sub_1002A0D14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), (unint64_t *)&qword_10055FDB0, MTEpisode_ptr);
}

uint64_t sub_1002A1C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _BYTE v12[24];
  _QWORD v13[3];
  uint64_t v14;
  _UNKNOWN **v15;
  _QWORD v16[3];
  uint64_t v17;
  _UNKNOWN **v18;

  v17 = type metadata accessor for EpisodeData();
  v18 = &off_1004BC168;
  v16[0] = a1;
  v4 = *(_QWORD *)(*sub_10003A834(v16, v17) + 48);
  v14 = type metadata accessor for ShowData();
  v15 = &off_1004BC1C8;
  v13[0] = v4;
  if (*(_BYTE *)(*sub_10003A834(v13, v14) + 64) == 1)
  {
    swift_beginAccess(a2 + 40, v12, 0, 0);
    v5 = *(_QWORD *)(a2 + 40);
    v6 = sub_10003A834(v13, v14);
    v7 = *(_QWORD *)(*v6 + 32);
    v8 = *(_QWORD *)(*v6 + 40);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v5);
    v9 = sub_10029113C(v7, v8, v5);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v5);
    if (((*(_BYTE *)(*sub_10003A834(v13, v14) + 65) | v9) & 1) != 0)
      v10 = 2;
    else
      v10 = 1;
  }
  else
  {
    swift_retain();
    swift_retain();
    v10 = 0;
  }
  sub_10003D380(v13);
  sub_10003D380(v16);
  return v10;
}

uint64_t sub_1002A1DB4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v24 = type metadata accessor for ShowData();
  v25 = &off_1004BC1C8;
  v23[0] = a1;
  if (*(_BYTE *)(*sub_10003A834(v23, v24) + 64) == 1)
  {
    swift_retain();
    v2 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_retain();
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease(0xE000000000000000);
    v3 = sub_10003A834(v23, v24);
    v4 = *(_QWORD *)(*v3 + 48);
    v5 = *(void **)(*v3 + 56);
    swift_bridgeObjectRetain(v5);
    v6._countAndFlagsBits = v4;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(v5);
    v7._countAndFlagsBits = 39;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v2 = sub_10027AE00(0, 1, 1, _swiftEmptyArrayStorage);
    v9 = v2[2];
    v8 = v2[3];
    if (v9 >= v8 >> 1)
      v2 = sub_10027AE00((_QWORD *)(v8 > 1), v9 + 1, 1, v2);
    v2[2] = v9 + 1;
    v10 = &v2[2 * v9];
    v10[4] = 0xD000000000000012;
    v10[5] = 0x8000000100439AD0;
  }
  if ((*(_BYTE *)(*sub_10003A834(v23, v24) + 65) & 1) == 0)
  {
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(0xE000000000000000);
    v12 = sub_10003A834(v23, v24);
    v13 = *(_QWORD *)(*v12 + 48);
    v14 = *(void **)(*v12 + 56);
    swift_bridgeObjectRetain(v14);
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    v16._countAndFlagsBits = 39;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_10027AE00(0, v2[2] + 1, 1, v2);
    v18 = v2[2];
    v17 = v2[3];
    if (v18 >= v17 >> 1)
      v2 = sub_10027AE00((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
    v2[2] = v18 + 1;
    v19 = &v2[2 * v18];
    v19[4] = 0xD00000000000001CLL;
    v19[5] = 0x8000000100439AF0;
    goto LABEL_14;
  }
  if (v2[2])
  {
LABEL_14:
    v20 = sub_10003F544((uint64_t *)&unk_10055FDF0);
    v21 = sub_10002F9C8((unint64_t *)&qword_1005547B8, (uint64_t *)&unk_10055FDF0, (uint64_t)&protocol conformance descriptor for [A]);
    v11 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v20, v21);
    swift_bridgeObjectRelease(v2);
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(v2);
  v11 = 0;
LABEL_15:
  sub_10003D380(v23);
  return v11;
}

void sub_1002A2090()
{
  _BYTE *v0;
  NSString v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSString v6;
  id v7;
  char *v8;

  v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_selectability] = 2;
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(UIImage);
  v3 = objc_msgSend(v2, "imageNamed:", v1);

  if (v3)
  {
    v4 = objc_msgSend(v3, "imageWithRenderingMode:", 2);

  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_checkmarkImage] = v4;
  v5 = OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_notCheckedImage;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v2, "imageNamed:", v6);

  *(_QWORD *)&v0[v5] = v7;
  v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_isChecked] = 0;
  v8 = &v0[OBJC_IVAR____TtC8PodcastsP33_D0A2C042165B8B2C72C364035AC57A2311ContentCell_contentData];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x726F707075736E75, 0xEB00000000646574, "Podcasts/MTTestActionContentPicker.swift", 40, 2, 346, 0);
  __break(1u);
}

id sub_1002A220C()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setCornerRadius:", 3.0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.08);
  v3 = objc_msgSend(v2, "CGColor");

  objc_msgSend(v1, "setBorderColor:", v3);
  objc_msgSend(v1, "setBorderWidth:", sub_1002A2568());
  objc_msgSend(v0, "setClipsToBounds:", 1);

  return v0;
}

void sub_1002A22FC(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;

  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 48);
  v8 = *(_QWORD *)(v6 + 32);
  v7 = *(_QWORD *)(v6 + 40);
  v9 = *a2;
  v10 = *(_QWORD *)(*a2 + 16);
  swift_bridgeObjectRetain(v7);
  if (v10)
  {
    swift_bridgeObjectRetain(v7);
    v11 = sub_10002E5D8(v8, v7);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD **)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_bridgeObjectRetain(v13);
    }
    else
    {
      v13 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
    v13 = sub_10027BD84(0, v13[2] + 1, 1, v13);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_10027BD84((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v25 = type metadata accessor for EpisodeData();
  v26 = &off_1004BC188;
  *(_QWORD *)&v24 = v5;
  v13[2] = v15 + 1;
  sub_10002099C(&v24, (uint64_t)&v13[5 * v15 + 4]);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v13);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
  *(_QWORD *)&v24 = *a2;
  *a2 = 0x8000000000000000;
  sub_10021CA18((uint64_t)v13, v8, v7, isUniquelyReferenced_nonNull_native);
  v17 = *a2;
  *a2 = v24;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v17);
  v18 = v13[2];
  swift_bridgeObjectRelease(v13);
  if (v18 == 1)
  {
    v19 = (_QWORD *)*a3;
    v20 = swift_isUniquelyReferenced_nonNull_native(*a3);
    *a3 = v19;
    if ((v20 & 1) == 0)
    {
      v19 = sub_10027AE00(0, v19[2] + 1, 1, v19);
      *a3 = v19;
    }
    v22 = v19[2];
    v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      v19 = sub_10027AE00((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
      *a3 = v19;
    }
    v19[2] = v22 + 1;
    v23 = &v19[2 * v22];
    v23[4] = v8;
    v23[5] = v7;
  }
  else
  {
    swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_1002A253C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002A2560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10029FCFC(a1, a2, a3, v3);
}

double sub_1002A2568()
{
  void *v0;
  double v1;
  double v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v0, "scale");
  v2 = v1;

  return 1.0 / v2;
}

uint64_t sub_1002A25B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A25DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10029EFB4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1002A25E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10003D380((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1002A2618(char a1)
{
  uint64_t v1;

  sub_10029CD7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1002A2624()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  sub_10003D380(v0 + 6);
  return swift_deallocObject(v0, 88, 7);
}

void sub_1002A2658()
{
  uint64_t v0;

  sub_10029DB34(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + 48);
}

uint64_t sub_1002A266C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_10003D380(v0 + 3);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002A26A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D96F4(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), *(uint64_t (**)(__n128))(v1 + 64));
}

uint64_t sub_1002A26B0()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002A26E4()
{
  uint64_t v0;

  return sub_10029DCD0(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 64));
}

uint64_t sub_1002A26F8()
{
  uint64_t v0;

  return sub_10029D860(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1002A2710()
{
  uint64_t v0;

  sub_10029DA7C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_1002A2720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055AAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A276C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002A27A8()
{
  uint64_t v0;

  sub_10029B6EC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002A27B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A27E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055FDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_1002A2880(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v14[24];
  _QWORD v15[5];

  v3 = objc_msgSend(objc_allocWithZone(v1), "init");
  v4 = type metadata accessor for PlaybackController(0);
  v5 = type metadata accessor for BaseObjectGraph(0);
  v6 = (char *)v3;
  inject<A, B>(_:from:)(v15, v4, a1, v4, v5);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController];
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController] = v15[0];
  swift_release(v7);
  v8 = sub_10003F544((uint64_t *)&unk_100562A90);
  inject<A, B>(_:from:)(v15, v8, a1, v8, v5);
  v9 = (uint64_t)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController];
  swift_beginAccess(&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController], v14, 33, 0);
  sub_10016DE28((uint64_t)v15, v9, (uint64_t *)&unk_10055FF30);
  swift_endAccess(v14);
  v10 = sub_10003F544((uint64_t *)&unk_100555120);
  inject<A, B>(_:from:)(v15, v10, a1, v10, v5);
  v11 = (uint64_t)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider];
  swift_beginAccess(&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider], v14, 33, 0);
  sub_10016DE28((uint64_t)v15, v11, &qword_100565940);
  swift_endAccess(v14);
  v12 = objc_msgSend((id)objc_opt_self(CPNowPlayingTemplate), "sharedTemplate");
  objc_msgSend(v12, "addObserver:", v6);

  sub_1002A2C70();
  sub_1002A2F98();

  swift_release(a1);
  return v6;
}

id sub_1002A2A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;

  if ((static Podcasts.isBlueMoonEnabled()() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
    if (!v1)
      return 0;
    v2 = swift_retain(v1);
    v3 = (id)dispatch thunk of PlaybackController.nowPlayingItem.getter(v2);
    swift_release(v1);
    if (v3)
    {
      v4 = objc_msgSend(v3, "podcast");

      if (v4)
      {
        v5 = MPModelObject.uuid.getter();
LABEL_9:
        v3 = (id)v5;

        return v3;
      }
      return 0;
    }
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    v3 = objc_msgSend(v6, "currentItem");

    if (v3)
    {
      v4 = objc_msgSend(v3, "podcastUuid");

      if (v4)
      {
        v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
        goto LABEL_9;
      }
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1002A2B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = v0;
  if ((static Podcasts.isBlueMoonEnabled()() & 1) != 0)
  {
    v2 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
    if (!v3)
      return 0;
    v4 = swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController));
    v5 = dispatch thunk of PlaybackController.queueController.getter(v4);
    v6 = swift_release(v3);
    v7 = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter(v6);
    swift_release(v5);
    if ((v7 & 1) != 0)
      return 1;
    v14 = *(_QWORD *)(v1 + v2);
    if (v14)
    {
      v15 = swift_retain(*(_QWORD *)(v1 + v2));
      v16 = dispatch thunk of PlaybackController.queueController.getter(v15);
      v17 = swift_release(v14);
      v18 = dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter(v17);
      swift_release(v16);
      return v18 & 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    v10 = objc_msgSend(v9, "compositeManifest");

    result = (uint64_t)objc_msgSend(v10, "currentIndex");
    v11 = (id)(result + 1);
    if (result == -1)
    {
      __break(1u);
    }
    else
    {
      v12 = objc_msgSend(v10, "count");

      return (uint64_t)v12 < 0 || v11 != v12;
    }
  }
  return result;
}

void sub_1002A2C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *object;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v5 = static OS_os_log.carPlay.getter(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Setting up the Now Playing template.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = (void *)objc_opt_self(CPNowPlayingTemplate);
  v10 = objc_msgSend(v9, "sharedTemplate");
  v11 = sub_10003F544((uint64_t *)&unk_100553780);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1003CA250;
  v13 = sub_1002A3CD8();
  *(_QWORD *)(v12 + 32) = v13;
  v28 = v12;
  specialized Array._endMutation()(v13);
  v14 = v28;
  sub_100005EC8(0, &qword_10055FEF8, CPNowPlayingButton_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "updateNowPlayingButtons:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v16 = objc_msgSend(v9, "sharedTemplate");
  sub_1002A2A1C();
  v19 = v17;
  if (v17)
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
  objc_msgSend(v16, "setAlbumArtistButtonEnabled:", v19 != 0, v18);

  v20 = objc_msgSend(v9, "sharedTemplate");
  objc_msgSend(v20, "setUpNextButtonEnabled:", sub_1002A2B38() & 1);

  v21 = objc_msgSend(v9, "sharedTemplate");
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v29._object = (void *)0xEC0000007478654ELL;
  v23._countAndFlagsBits = 0x49545F4555455551;
  v23._object = (void *)0xEB00000000454C54;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0x20676E6979616C50;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v29)._object;

  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setUpNextTitle:", v26, swift_bridgeObjectRelease(object).n128_f64[0]);

}

void sub_1002A2F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  id v119[4];

  v0 = sub_10003F544(&qword_10055FF58);
  v102 = *(_QWORD *)(v0 - 8);
  v103 = v0;
  __chkstk_darwin(v0);
  v101 = (char *)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10003F544(&qword_10055FF60);
  v105 = *(_QWORD *)(v2 - 8);
  v106 = v2;
  __chkstk_darwin(v2);
  v104 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10003F544(&qword_10055FF68);
  v108 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v107 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10003F544(&qword_10055FF70);
  v112 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v111 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_10003F544(&qword_10055FF78);
  v114 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v113 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)sub_10003F544((uint64_t *)&unk_10055FF80);
  v116 = *(v7 - 1);
  v117 = v7;
  __chkstk_darwin(v7);
  v115 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F544(&qword_1005564A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10003F544((uint64_t *)&unk_10055FF90);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544((uint64_t *)&unk_10055B700);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10003F544((uint64_t *)&unk_10055FFA0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v22) & 1) != 0)
  {
    v93 = v13;
    v94 = v19;
    v96 = v17;
    v97 = v16;
    v98 = v24;
    v99 = v21;
    v95 = v20;
    v25 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController;
    v26 = *(_QWORD *)(v118 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
    if (v26)
    {
      v27 = (uint64_t)v11;
      swift_retain();
      dispatch thunk of PlaybackController.$nowPlayingItem.getter(v28);
      swift_release(v26);
      v29 = sub_10002F9C8(&qword_100556758, (uint64_t *)&unk_10055FF90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v30 = v94;
      Publisher.removeDuplicates(by:)(sub_1002A4008, 0, v12, v29);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v15, v12);
      v31 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
      v119[0] = (id)static OS_dispatch_queue.main.getter(v32);
      v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
      v34(v27, 1, 1, v33);
      v35 = sub_10002F9C8((unint64_t *)&unk_10055B730, (uint64_t *)&unk_10055B700, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      v36 = sub_10000A2C8((unint64_t *)&qword_1005551A0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v37 = v98;
      v38 = v97;
      v92 = v31;
      v93 = v36;
      Publisher.receive<A>(on:options:)(v119, v27, v97, v31, v35, v36);
      sub_100007A28(v27, &qword_1005564A0);

      (*(void (**)(char *, uint64_t))(v96 + 8))(v30, v38);
      v39 = swift_allocObject(&unk_1004BC848, 24, 7);
      v40 = v118;
      swift_unknownObjectWeakInit(v39 + 16, v118);
      v41 = sub_10002F9C8(&qword_10055FFB0, (uint64_t *)&unk_10055FFA0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v42 = v95;
      v43 = Publisher<>.sink(receiveValue:)(sub_1002AB128, v39, v95, v41);
      swift_release(v39);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v37, v42);
      v44 = v40 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions;
      swift_beginAccess(v40 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions, v119, 33, 0);
      AnyCancellable.store(in:)(v44);
      swift_endAccess(v119);
      swift_release(v43);
      v45 = *(_QWORD *)(v40 + v25);
      if (v45)
      {
        v46 = swift_retain();
        v47 = v34;
        v48 = v33;
        v49 = v111;
        dispatch thunk of PlaybackController.$tracklist.getter(v46);
        swift_release(v45);
        v50 = sub_10002F9C8(&qword_10055FFB8, &qword_10055FF70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v51 = sub_1002AB148();
        v52 = v113;
        v53 = v109;
        Publisher<>.removeDuplicates()(v109, v50, v51);
        v54.n128_f64[0] = (*(double (**)(char *, uint64_t))(v112 + 8))(v49, v53);
        v55 = v92;
        v119[0] = (id)static OS_dispatch_queue.main.getter(v54);
        v47(v27, 1, 1, v48);
        v56 = sub_10002F9C8(&qword_10055FFE0, &qword_10055FF78, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
        v57 = v115;
        v58 = v110;
        Publisher.receive<A>(on:options:)(v119, v27, v110, v55, v56, v93);
        sub_100007A28(v27, &qword_1005564A0);

        (*(void (**)(char *, uint64_t))(v114 + 8))(v52, v58);
        v59 = swift_allocObject(&unk_1004BC848, 24, 7);
        v60 = v118;
        swift_unknownObjectWeakInit(v59 + 16, v118);
        v61 = sub_10002F9C8(&qword_10055FFE8, (uint64_t *)&unk_10055FF80, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v62 = v117;
        v63 = Publisher<>.sink(receiveValue:)(sub_1002AB1CC, v59, v117, v61);
        swift_release(v59);
        (*(void (**)(char *, id))(v116 + 8))(v57, v62);
        v64 = v60 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions;
        swift_beginAccess(v60 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions, v119, 33, 0);
        AnyCancellable.store(in:)(v64);
        swift_endAccess(v119);
        swift_release(v63);
        v65 = *(_QWORD *)(v60 + v25);
        if (v65)
        {
          v66 = swift_retain();
          v67 = (void *)dispatch thunk of PlaybackController.isPlayingPublisher.getter(v66);
          swift_release(v65);
          v119[0] = v67;
          v68 = sub_10003F544((uint64_t *)&unk_100559760);
          v69 = sub_10002F9C8(&qword_1005538D8, (uint64_t *)&unk_100559760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
          v70 = v101;
          Publisher<>.removeDuplicates()(v68, v69, &protocol witness table for Bool);
          swift_release(v67);
          v71 = swift_allocObject(&unk_1004BC988, 24, 7);
          *(_QWORD *)(v71 + 16) = 0x403E000000000000;
          v72 = sub_10003F544(&qword_10055FFF0);
          v73 = sub_10002F9C8(&qword_10055FFF8, &qword_10055FF58, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
          v74 = v103;
          v75 = v104;
          Publisher.map<A>(_:)(sub_1002AB1FC, v71, v103, v72, v73);
          swift_release(v71);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v70, v74);
          v76 = sub_10002F9C8(&qword_100560000, &qword_10055FF60, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
          v77 = sub_10002F9C8(&qword_100560008, &qword_10055FFF0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
          v78 = v106;
          v79 = v107;
          Publisher<>.switchToLatest()(v106, v76, v77);
          (*(void (**)(char *, uint64_t))(v105 + 8))(v75, v78);
          v80 = swift_allocObject(&unk_1004BC848, 24, 7);
          v81 = v118;
          swift_unknownObjectWeakInit(v80 + 16, v118);
          v82 = sub_10002F9C8(&qword_100560010, &qword_10055FF68, (uint64_t)&protocol conformance descriptor for Publishers.SwitchToLatest<A, B>);
          v83 = v100;
          v84 = Publisher<>.sink(receiveValue:)(sub_1002AB204, v80, v100, v82);
          swift_release(v80);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v79, v83);
          v85 = v81 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions;
          swift_beginAccess(v81 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions, v119, 33, 0);
          AnyCancellable.store(in:)(v85);
          swift_endAccess(v119);
          swift_release(v84);
        }
      }
    }
  }
  else
  {
    v86 = (void *)objc_opt_self(NSNotificationCenter);
    v87 = objc_msgSend(v86, "defaultCenter");
    v88 = v118;
    v89 = v87;
    objc_msgSend(v87, "addObserver:selector:name:object:", v118, "manifestContentsDidChange", IMPlayerManifestDidChange, 0);

    v90 = objc_msgSend(v86, "defaultCenter");
    objc_msgSend(v90, "addObserver:selector:name:object:", v88, "nowPlayingItemDidChange", IMAVPlayerNotification_MediaItemDidChange, 0);

    v117 = objc_msgSend(v86, "defaultCenter");
    objc_msgSend(v117, "addObserver:selector:name:object:", v88, "playerPeriodicUpdate", IMAVPlayerNotification_PeriodicUpdate, 0);

  }
}

id sub_1002A39F4(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  sub_1002A3A38();
  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

void sub_1002A3A38()
{
  uint64_t v0;
  id v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  _BYTE v8[24];

  v1 = objc_msgSend((id)objc_opt_self(CPNowPlayingTemplate), "sharedTemplate");
  objc_msgSend(v1, "removeObserver:", v0);

  if ((static Podcasts.isBlueMoonEnabled()() & 1) != 0)
  {
    v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions);
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions, v8, 1, 0);
    v3 = *v2;
    *v2 = (uint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = (void *)objc_opt_self(NSNotificationCenter);
    v5 = objc_msgSend(v4, "defaultCenter");
    objc_msgSend(v5, "removeObserver:name:object:", v0, IMPlayerManifestDidChange, 0);

    v6 = objc_msgSend(v4, "defaultCenter");
    objc_msgSend(v6, "removeObserver:name:object:", v0, IMAVPlayerNotification_MediaItemDidChange, 0);

    v7 = objc_msgSend(v4, "defaultCenter");
    objc_msgSend(v7, "removeObserver:name:object:", v0, IMAVPlayerNotification_PeriodicUpdate, 0);

  }
}

id sub_1002A3CD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v12[5];
  uint64_t v13;

  v1 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton);
  }
  else
  {
    v4 = swift_allocObject(&unk_1004BC848, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16, v0);
    v5 = objc_allocWithZone((Class)CPNowPlayingPlaybackRateButton);
    v12[4] = sub_1002AAEB8;
    v13 = v4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_1001AC13C;
    v12[3] = &unk_1004BC860;
    v6 = _Block_copy(v12);
    v7 = v13;
    swift_retain();
    swift_release(v7);
    v8 = objc_msgSend(v5, "initWithHandler:", v6);
    _Block_release(v6);
    swift_release(v4);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_1002A3DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1002A3E44();

  }
}

void sub_1002A3E44()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v14[5];

  v1 = sub_10003F544((uint64_t *)&unk_10055FF00);
  __chkstk_darwin(v1);
  v3 = (char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Podcasts(0);
  v14[3] = v4;
  v14[4] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v5 = sub_1000242A8(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, enum case for Podcasts.blueMooniOS(_:), v4);
  LOBYTE(v4) = isFeatureEnabled(_:)(v14);
  v6 = sub_10003D380(v14);
  if ((v4 & 1) != 0)
  {
    static TaskPriority.userInitiated.getter(v6);
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 0, 1, v7);
    v8 = (_QWORD *)swift_allocObject(&unk_1004BC898, 40, 7);
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v0;
    v9 = v0;
    v10 = sub_10034F744((uint64_t)v3, (uint64_t)&unk_10055FF18, (uint64_t)v8);
    swift_release(v10);
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    v12 = objc_msgSend(v11, "player");

    objc_msgSend(v12, "setPlaybackSpeed:", objc_msgSend((id)objc_opt_self(IMAVPlayer), "incrementPlaybackSpeed:", objc_msgSend(v12, "playbackSpeed")));
  }
}

uint64_t sub_1002A4008(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  unsigned int v8;

  v2 = *a2;
  if (*a1)
  {
    v3 = MPModelObject.adamID.getter();
    v5 = v4 & 1;
    if (v2)
    {
LABEL_3:
      v6 = MPModelObject.adamID.getter();
      v8 = v7 & 1;
      goto LABEL_6;
    }
  }
  else
  {
    v3 = 0;
    v5 = 1;
    if (v2)
      goto LABEL_3;
  }
  v6 = 0;
  v8 = 1;
LABEL_6:
  if ((v5 & 1) != 0)
    return v8;
  else
    return (v3 == v6) & ~v8;
}

uint64_t sub_1002A407C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void (*v11)(__n128);
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v7 = static OS_os_log.carPlay.getter(v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Now Playing item did change called.", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) = 0;
  v11 = *(void (**)(__n128))(v1
                                      + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
  if (v11)
  {
    v12 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback
                    + 8);
    v13 = swift_retain();
    v11(v13);
    sub_10002CA30((uint64_t)v11, v12);
  }
  sub_1002A2C70();
  return CurrentValueSubject.send(_:)(v14, v15);
}

void sub_1002A41E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_1002A4238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v5 = static OS_os_log.carPlay.getter(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Now Playing manifest contents did change called.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = objc_msgSend((id)objc_opt_self(CPNowPlayingTemplate), "sharedTemplate");
  objc_msgSend(v9, "setUpNextButtonEnabled:", sub_1002A2B38() & 1);

}

uint64_t sub_1002A4390@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_10003F544(&qword_100560018);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544(&qword_100560020);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_100005EC8(0, &qword_100560030, NSTimer_ptr);
    v13 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v14 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
    v15 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v13, NSDefaultRunLoopMode, v12, a3);

    sub_100007A28((uint64_t)v12, &qword_100560020);
    v26 = v15;
    v16 = type metadata accessor for NSTimer.TimerPublisher(0);
    v17 = sub_100026844(&qword_100560038, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v18 = ConnectablePublisher.autoconnect()(v16, v17);
    swift_release(v15);
    v26 = v18;
    v19 = sub_10003F544(&qword_100560040);
    v20 = sub_10002F9C8(&qword_100560048, &qword_100560040, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    v21 = Publisher.eraseToAnyPublisher()(v19, v20);
    result = swift_release(v18);
  }
  else
  {
    v23 = type metadata accessor for Date(0);
    Empty.init(completeImmediately:)(1, v23, &type metadata for Never, &protocol witness table for Never);
    v24 = sub_10002F9C8(&qword_100560028, &qword_100560018, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v21 = Publisher.eraseToAnyPublisher()(v6, v24);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *a2 = v21;
  return result;
}

void sub_1002A45F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1002A4648();

  }
}

void sub_1002A4648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  double v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void (*v21)(__n128);
  uint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void (*v34)(__n128);
  uint64_t v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v40 - v8;
  if ((static Podcasts.isBlueMoonEnabled()(v7) & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
    if (v10)
    {
      v11 = swift_retain();
      v12 = COERCE_DOUBLE(PlaybackController.currentTime.getter(v11));
      v14 = v13;
      swift_release(v10);
      if ((v14 & 1) == 0)
      {
        v15 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime;
        if (v12 - *(double *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) > 30.0)
        {
          v16 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
          v17 = static OS_os_log.carPlay.getter(v16);
          v18 = Logger.logObject.getter(v17);
          v19 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v20 = 0;
            _os_log_impl((void *)&_mh_execute_header, v18, v19, "Now Playing player periodic did have a significant time change.", v20, 2u);
            swift_slowDealloc(v20, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
          v21 = *(void (**)(__n128))(v1
                                              + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
          if (v21)
          {
            v22 = *(_QWORD *)(v1
                            + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback
                            + 8);
            v23 = swift_retain();
            v21(v23);
            sub_10002CA30((uint64_t)v21, v22);
          }
          *(double *)(v1 + v15) = v12;
        }
      }
    }
  }
  else
  {
    v24 = (void *)objc_opt_self(MTPlayerController);
    v25 = objc_msgSend(v24, "defaultInstance");
    objc_msgSend(v25, "currentTime");
    v27 = v26;

    v28 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime;
    if (v27 - *(double *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime) > 30.0)
    {
      v29 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      v30 = static OS_os_log.carPlay.getter(v29);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Now Playing player periodic did have a significant time change.", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v34 = *(void (**)(__n128))(v1
                                          + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback);
      if (v34)
      {
        v35 = *(_QWORD *)(v1
                        + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback
                        + 8);
        v36 = swift_retain();
        v34(v36);
        sub_10002CA30((uint64_t)v34, v35);
      }
      v37 = objc_msgSend(v24, "defaultInstance");
      objc_msgSend(v37, "currentTime");
      v39 = v38;

      *(_QWORD *)(v1 + v28) = v39;
    }
  }
}

void sub_1002A4974(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  _QWORD v5[6];

  v5[4] = UInt64.int64Representation.getter;
  v5[5] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100153D50;
  v5[3] = &unk_1004BC8D8;
  v4 = _Block_copy(v5);
  objc_msgSend(a3, "popTemplateAnimated:completion:", 1, v4);
  _Block_release(v4);
}

id sub_1002A4A98(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel;
  v5 = objc_allocWithZone((Class)PFCoreAnalyticsChannel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackItemDidChangeSubject;
  v8 = sub_10003F544((uint64_t *)&unk_100555110);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  *(_QWORD *)&v6[v7] = CurrentValueSubject.init(_:)(v9);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController] = 0;
  v10 = &v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = &v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_subscriptions] = &_swiftEmptySetSingleton;
  v12 = &v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplatePlayerPeriodicUpdateCallback];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_significantChangeAmountInSeconds] = 0x403E000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_lastSignificantChangeTime] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController____lazy_storage___playbackRateButton] = 0;

  v16.receiver = v6;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, "init");
}

uint64_t type metadata accessor for CarPlayNowPlayingController()
{
  return objc_opt_self(_TtC8Podcasts27CarPlayNowPlayingController);
}

void sub_1002A4CC4(uint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[56];

  v7 = v6;
  v38 = a5;
  v39 = a6;
  v11 = type metadata accessor for Logger(0);
  v40 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100348E0C(a3);
  v16 = v15;
  v41 = v11;
  v42 = a2;
  if (v14 == 0x6669636570736E75 && v15 == 0xEB00000000646569)
  {
    swift_bridgeObjectRelease(0xEB00000000646569);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x6669636570736E75, 0xEB00000000646569, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
    {
      v37 = *(id *)(v7 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel);
      type metadata accessor for AnalyticsEvent(0);
      v18 = (void *)PFAnalyticsEventNameCarPlayPlaybackSource;
      v19 = sub_10003F544(&qword_10055FF40);
      inited = swift_initStackObject(v19, v45);
      *(_OWORD *)(inited + 16) = xmmword_1003CA200;
      strcpy((char *)(inited + 32), "playbackSource");
      *(_BYTE *)(inited + 47) = -18;
      sub_100348E0C(a3);
      v22 = v21;
      v23 = v18;
      v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
      *(_QWORD *)(inited + 48) = v24;
      v25 = sub_100048D4C(inited);
      v26 = (void *)AnalyticsEvent.__allocating_init(name:payload:)(v23, v25);
      objc_msgSend(v37, "sendEvent:", v26);

    }
  }
  v27 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v28 = static OS_os_log.carPlay.getter(v27);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v37 = a4;
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v44 = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_100348E0C(a3);
    v35 = v34;
    v43 = sub_10003D274(v33, v34, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Initiate playback called from source: %s.", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
  __asm { BR              X10 }
}

void sub_1002A4FF8()
{
  char *v0;
  void *v1;
  char *v2;

  swift_retain();
  sub_1002A5080(v2, v0);
  sub_1001A67AC(v1, 0);
}

void sub_1002A5080(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  char *v74;
  char *v75;
  uint8_t *v76;
  uint8_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  char *v85;
  uint8_t *v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  void *v111;
  NSString v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  char *v128;
  uint64_t (*v129)(char *, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  char *v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint8_t *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  _BOOL4 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  os_log_type_t v182;
  uint8_t *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint8_t *v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;
  os_log_type_t v202;
  uint8_t *v203;
  void *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  NSObject *v208;
  os_log_type_t v209;
  uint8_t *v210;
  uint64_t v211;
  uint64_t v212;
  _BOOL4 v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  NSObject *v229;
  os_log_type_t v230;
  _BOOL4 v231;
  char *v232;
  uint8_t *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  NSObject *v239;
  os_log_type_t v240;
  _BOOL4 v241;
  uint64_t (*v242)(char *, uint64_t);
  uint8_t *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  NSObject *v247;
  os_log_type_t v248;
  uint8_t *v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(char *, uint64_t);
  char *v262;
  uint64_t v263;
  uint64_t v264;
  NSObject *v265;
  os_log_type_t v266;
  uint8_t *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  NSObject *v271;
  uint64_t (*v272)(char *, uint64_t);
  os_log_type_t v273;
  uint8_t *v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  unint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  NSObject *v283;
  os_log_type_t v284;
  uint8_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  void (*v295)(_QWORD, uint64_t);
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  __n128 v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  __n128 v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  __n128 v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  unint64_t v318;
  uint64_t v319;
  uint64_t v320;
  NSObject *v321;
  os_log_type_t v322;
  uint8_t *v323;
  uint64_t *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  NSObject *v329;
  os_log_type_t v330;
  uint8_t *v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  unint64_t v335;
  unint64_t v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  NSObject *v342;
  os_log_type_t v343;
  uint8_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  unint64_t v351;
  unint64_t v352;
  unint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  unint64_t v357;
  __n128 v358;
  uint64_t v359;
  _QWORD *v360;
  uint64_t v361;
  __n128 v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  __n128 v369;
  uint64_t v370;
  unint64_t v371;
  uint64_t v372;
  unint64_t v373;
  uint64_t v374;
  uint64_t v375;
  NSObject *v376;
  os_log_type_t v377;
  uint8_t *v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  NSObject *v383;
  os_log_type_t v384;
  uint8_t *v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  unint64_t v389;
  unint64_t v390;
  char *v391;
  __n128 v392;
  char *v393;
  uint64_t v394;
  NSObject *v395;
  os_log_type_t v396;
  uint8_t *v397;
  void (*v398)(char *, uint64_t);
  uint64_t v399;
  char *v400;
  uint64_t v401;
  NSObject *v402;
  int v403;
  uint8_t *v404;
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  uint64_t *v408;
  unint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unint64_t v412;
  uint64_t v413;
  unint64_t v414;
  unint64_t v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  char *v423;
  char *v424;
  char *v425;
  char *v426;
  char *v427;
  char *v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  char *v439;
  char *v440;
  char *v441;
  char *v442;
  char *v443;
  char *v444;
  char *v445;
  char *v446;
  char *v447;
  char *v448;
  char *v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  __int128 v454;
  uint64_t v455;
  char v456[8];
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;

  v438 = type metadata accessor for EpisodeOffer(0);
  v437 = *(_QWORD *)(v438 - 8);
  __chkstk_darwin(v438);
  v436 = (char *)&v422 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544(&qword_10055B790);
  v7 = __chkstk_darwin(v6);
  v439 = (char *)&v422 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v422 - v10;
  __chkstk_darwin(v9);
  v444 = (char *)&v422 - v12;
  v13 = sub_10003F544((uint64_t *)&unk_100554EC0);
  __chkstk_darwin(v13);
  v15 = (id *)((char *)&v422 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v424 = (char *)&v422 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v426 = (char *)&v422 - v21;
  v22 = __chkstk_darwin(v20);
  v425 = (char *)&v422 - v23;
  v24 = __chkstk_darwin(v22);
  v428 = (char *)&v422 - v25;
  v26 = __chkstk_darwin(v24);
  v427 = (char *)&v422 - v27;
  v28 = __chkstk_darwin(v26);
  v431 = (char *)&v422 - v29;
  v30 = __chkstk_darwin(v28);
  v432 = (char *)&v422 - v31;
  v32 = __chkstk_darwin(v30);
  v429 = (char *)&v422 - v33;
  v34 = __chkstk_darwin(v32);
  v430 = (char *)&v422 - v35;
  v36 = __chkstk_darwin(v34);
  v434 = (char *)&v422 - v37;
  v38 = __chkstk_darwin(v36);
  v435 = (char *)&v422 - v39;
  v40 = __chkstk_darwin(v38);
  v433 = (char *)&v422 - v41;
  v42 = __chkstk_darwin(v40);
  v440 = (char *)&v422 - v43;
  v44 = __chkstk_darwin(v42);
  v441 = (char *)&v422 - v45;
  v46 = __chkstk_darwin(v44);
  v443 = (char *)&v422 - v47;
  v48 = __chkstk_darwin(v46);
  v445 = (char *)&v422 - v49;
  v50 = __chkstk_darwin(v48);
  v442 = (char *)&v422 - v51;
  v52 = __chkstk_darwin(v50);
  v446 = (char *)&v422 - v53;
  v54 = __chkstk_darwin(v52);
  v449 = (char *)&v422 - v55;
  v56 = __chkstk_darwin(v54);
  v448 = (char *)&v422 - v57;
  v58 = __chkstk_darwin(v56);
  v447 = (char *)&v422 - v59;
  v60 = __chkstk_darwin(v58);
  v62 = (char *)&v422 - v61;
  v63 = __chkstk_darwin(v60);
  v450 = (char *)&v422 - v64;
  v65 = __chkstk_darwin(v63);
  v67 = (char *)&v422 - v66;
  __chkstk_darwin(v65);
  v69 = (char *)&v422 - v68;
  v70 = v2 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController;
  swift_beginAccess(v70, v456, 0, 0);
  sub_1002AAF54(v70, (uint64_t)&v454);
  if (!v455)
  {
    sub_100007A28((uint64_t)&v454, (uint64_t *)&unk_10055FF30);
    sub_1002A9EC0(a2);
    return;
  }
  v423 = v11;
  v451 = v16;
  sub_10002099C(&v454, (uint64_t)&v457);
  v452 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v71 = static OS_os_log.carPlay.getter(v452);
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = a2;
    v75 = a1;
    v76 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v76 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Attempting to initiate playback for play action.", v76, 2u);
    v77 = v76;
    a1 = v75;
    a2 = v74;
    swift_slowDealloc(v77, -1, -1);
  }

  v78 = *(char **)(v17 + 8);
  v79 = v451;
  ((void (*)(char *, uint64_t))v78)(v69, v451);
  v80 = type metadata accessor for FlowAction(0);
  if (!swift_dynamicCastClass(a1, v80))
  {
    v93 = type metadata accessor for LibraryPlayAction(0);
    v450 = (char *)swift_dynamicCastClass(a1, v93);
    if (v450)
    {
      v445 = a2;
      swift_retain();
      v95 = static OS_os_log.carPlay.getter(v94);
      v96 = Logger.logObject.getter(v95);
      v97 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v96, v97))
      {
        v98 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v98 = 0;
        _os_log_impl((void *)&_mh_execute_header, v96, v97, "Attempting to initiate playback for LibraryPlayAction.", v98, 2u);
        swift_slowDealloc(v98, -1, -1);
      }

      v99 = ((uint64_t (*)(char *, uint64_t))v78)(v62, v79);
      v100 = v447;
      static OS_os_log.carPlay.getter(v99);
      v101 = swift_retain_n(a1, 2);
      v102 = Logger.logObject.getter(v101);
      v103 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v102, v103))
      {
        v104 = (uint8_t *)swift_slowAlloc(12, -1);
        v105 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v105;
        *(_DWORD *)v104 = 136315138;
        v106 = ((uint64_t (*)(void))LibraryPlayAction.episodeUuid.getter)();
        v108 = v107;
        v453 = sub_10003D274(v106, v107, (uint64_t *)&v454);
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v104 + 4, v104 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v108);
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "LibraryPlayAction has episode uuid: %s.", v104, 0xCu);
        swift_arrayDestroy(v105, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v105, -1, -1);
        swift_slowDealloc(v104, -1, -1);

        v109 = ((uint64_t (*)(char *, uint64_t))v78)(v447, v79);
      }
      else
      {

        swift_release_n(a1, 2);
        v109 = ((uint64_t (*)(char *, uint64_t))v78)(v100, v79);
      }
      v110 = v448;
      static OS_os_log.carPlay.getter(v109);
      v141 = swift_retain_n(a1, 2);
      v142 = Logger.logObject.getter(v141);
      v143 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v142, v143))
      {
        v144 = v78;
        v145 = (uint8_t *)swift_slowAlloc(12, -1);
        v146 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v146;
        *(_DWORD *)v145 = 136315138;
        v147 = ((uint64_t (*)(void))LibraryPlayAction.episodeAdamId.getter)();
        if ((v148 & 1) != 0)
        {
          v152 = 0xE300000000000000;
          v150 = 7104878;
        }
        else
        {
          v453 = v147;
          v149 = sub_100030584();
          v150 = BinaryInteger.description.getter(&type metadata for UInt64, v149);
          v152 = v151;
        }
        a2 = v445;
        v453 = sub_10003D274(v150, v152, (uint64_t *)&v454);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v145 + 4, v145 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v152);
        _os_log_impl((void *)&_mh_execute_header, v142, v143, "LibraryPlayAction has episode adamId: %s.", v145, 0xCu);
        swift_arrayDestroy(v146, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v146, -1, -1);
        swift_slowDealloc(v145, -1, -1);

        v78 = v144;
        v153 = ((uint64_t (*)(char *, uint64_t))v144)(v448, v451);
      }
      else
      {

        swift_release_n(a1, 2);
        v153 = ((uint64_t (*)(char *, uint64_t))v78)(v110, v79);
        a2 = v445;
      }
      static OS_os_log.carPlay.getter(v153);
      swift_retain();
      v155 = Logger.logObject.getter(v154);
      v156 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v155, v156))
      {
        v157 = (uint8_t *)swift_slowAlloc(8, -1);
        v448 = v78;
        *(_DWORD *)v157 = 67109120;
        v158 = a1;
        v159 = a2;
        v160 = v444;
        LibraryPlayAction.settings.getter();
        v161 = type metadata accessor for EpisodeListSettings(0);
        v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 48))(v160, 1, v161) != 1;
        v163 = (uint64_t)v160;
        a2 = v159;
        a1 = v158;
        sub_100007A28(v163, &qword_10055B790);
        LODWORD(v454) = v162;
        v78 = v448;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, (char *)&v454 + 4, v157 + 4, v157 + 8);
        swift_release(v158);
        _os_log_impl((void *)&_mh_execute_header, v155, v156, "LibraryPlayAction has episode settings: %{BOOL}d.", v157, 8u);
        swift_slowDealloc(v157, -1, -1);

      }
      else
      {

        swift_release(a1);
      }
      v164 = ((uint64_t (*)(char *, uint64_t))v78)(v449, v451);
      v165 = LibraryPlayAction.episodeUuid.getter(v164);
      v167 = v166;
      swift_bridgeObjectRelease(v166);
      v169 = HIBYTE(v167) & 0xF;
      if ((v167 & 0x2000000000000000) == 0)
        v169 = v165 & 0xFFFFFFFFFFFFLL;
      if (!v169)
      {
        v180 = static OS_os_log.carPlay.getter(v168);
        v181 = Logger.logObject.getter(v180);
        v182 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v181, v182))
        {
          v183 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v183 = 0;
          _os_log_impl((void *)&_mh_execute_header, v181, v182, "Error: Attempted to initiate LibraryPlayAction playback for an episode with an empty uuid.", v183, 2u);
          swift_slowDealloc(v183, -1, -1);
        }

        v184 = v446;
        v185 = v451;
        goto LABEL_49;
      }
      v170 = v458;
      v171 = v459;
      v172 = sub_10003A834(&v457, v458);
      v173 = LibraryPlayAction.episodeUuid.getter(v172);
      v175 = v174;
      v176 = (uint64_t)v423;
      LibraryPlayAction.settings.getter();
      v455 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
      *(_QWORD *)&v454 = a2;
      v177 = LibraryPlayAction.episodeAdamId.getter(a2);
      EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)(v173, v175, v176, &v454, 0, 0, v177, v178 & 1, 0, 1, v170, v171);
      swift_release(a1);
      swift_bridgeObjectRelease(v175);
      v179 = v176;
      goto LABEL_60;
    }
    v448 = v78;
    v119 = type metadata accessor for LibraryPlayPauseAction(0);
    v120 = swift_dynamicCastClass(a1, v119);
    if (v120)
    {
      v121 = (char *)v120;
      swift_retain();
      v122 = v442;
      v124 = static OS_os_log.carPlay.getter(v123);
      v125 = Logger.logObject.getter(v124);
      v126 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v125, v126))
      {
        v127 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v127 = 0;
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "Attempting to initiate playback for LibraryPlayPauseAction.", v127, 2u);
        swift_slowDealloc(v127, -1, -1);
      }
      v450 = v121;

      v128 = v122;
      v129 = (uint64_t (*)(char *, uint64_t))v448;
      v130 = ((uint64_t (*)(char *, uint64_t))v448)(v128, v79);
      v131 = v445;
      static OS_os_log.carPlay.getter(v130);
      v132 = swift_retain_n(a1, 2);
      v133 = Logger.logObject.getter(v132);
      v134 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v133, v134))
      {
        v135 = (uint8_t *)swift_slowAlloc(12, -1);
        v136 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v136;
        *(_DWORD *)v135 = 136315138;
        v137 = ((uint64_t (*)(void))LibraryPlayPauseAction.episodeUuid.getter)();
        v139 = v138;
        v453 = sub_10003D274(v137, v138, (uint64_t *)&v454);
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v135 + 4, v135 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v139);
        _os_log_impl((void *)&_mh_execute_header, v133, v134, "LibraryPlayPauseAction has episode uuid: %s.", v135, 0xCu);
        swift_arrayDestroy(v136, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v136, -1, -1);
        swift_slowDealloc(v135, -1, -1);

        v140 = v445;
      }
      else
      {

        swift_release_n(a1, 2);
        v140 = v131;
      }
      v205 = v129(v140, v79);
      v206 = v443;
      v445 = a2;
      static OS_os_log.carPlay.getter(v205);
      swift_retain();
      v208 = Logger.logObject.getter(v207);
      v209 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v208, v209))
      {
        v210 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v210 = 67109120;
        v211 = (uint64_t)v439;
        LibraryPlayPauseAction.settings.getter();
        v212 = type metadata accessor for EpisodeListSettings(0);
        v213 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 48))(v211, 1, v212) != 1;
        sub_100007A28(v211, &qword_10055B790);
        LODWORD(v454) = v213;
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v454, (char *)&v454 + 4, v210 + 4, v210 + 8);
        swift_release(a1);
        _os_log_impl((void *)&_mh_execute_header, v208, v209, "LibraryPlayPauseAction has episode settings: %{BOOL}d.", v210, 8u);
        swift_slowDealloc(v210, -1, -1);

      }
      else
      {

        swift_release(a1);
      }
      v214 = ((uint64_t (*)(char *, uint64_t))v448)(v206, v79);
      v215 = LibraryPlayPauseAction.episodeUuid.getter(v214);
      v217 = v216;
      swift_bridgeObjectRelease(v216);
      v219 = HIBYTE(v217) & 0xF;
      if ((v217 & 0x2000000000000000) == 0)
        v219 = v215 & 0xFFFFFFFFFFFFLL;
      if (!v219)
      {
        v228 = static OS_os_log.carPlay.getter(v218);
        v229 = Logger.logObject.getter(v228);
        v230 = static os_log_type_t.fault.getter();
        v231 = os_log_type_enabled(v229, v230);
        v232 = v445;
        if (v231)
        {
          v233 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v233 = 0;
          _os_log_impl((void *)&_mh_execute_header, v229, v230, "Error: Attempted to initiate LibraryPlayPauseAction playback for an episode with an empty uuid.", v233, 2u);
          swift_slowDealloc(v233, -1, -1);
        }

        ((void (*)(char *, uint64_t))v448)(v441, v79);
        v204 = v232;
        goto LABEL_51;
      }
      v220 = v458;
      v221 = v459;
      v222 = sub_10003A834(&v457, v458);
      v223 = LibraryPlayPauseAction.episodeUuid.getter(v222);
      v225 = v224;
      v226 = (uint64_t)v423;
      LibraryPlayPauseAction.settings.getter();
      v455 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
      *(_QWORD *)&v454 = v445;
      v227 = v445;
      EpisodeControllerProtocol.play(episodeUuid:settings:sender:isSmartPlayButton:preventQueueing:adamId:timestamp:waitForEngine:)(v223, v225, v226, &v454, 0, 0, 0, 1, 0, 1, v220, v221);
      swift_release(a1);
      swift_bridgeObjectRelease(v225);
      v179 = v226;
LABEL_60:
      sub_100007A28(v179, &qword_10055B790);
LABEL_61:
      sub_100007A28((uint64_t)&v454, (uint64_t *)&unk_100552300);
      goto LABEL_62;
    }
    v186 = type metadata accessor for PlayPauseAction();
    if (swift_dynamicCastClass(a1, v186))
    {
      swift_retain();
      v187 = v440;
      static OS_os_log.carPlay.getter(v188);
      v189 = swift_retain_n(a1, 2);
      v190 = Logger.logObject.getter(v189);
      v191 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v190, v191))
      {
        v192 = (uint8_t *)swift_slowAlloc(12, -1);
        v193 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v193;
        *(_DWORD *)v192 = 136315138;
        v453 = PlayPauseAction.contentId.getter();
        v194 = sub_100030584();
        v195 = BinaryInteger.description.getter(&type metadata for UInt64, v194);
        v197 = v196;
        v453 = sub_10003D274(v195, v196, (uint64_t *)&v454);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v192 + 4, v192 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v197);
        _os_log_impl((void *)&_mh_execute_header, v190, v191, "Attempting to initiate playback for PlayPauseAction with contentId %s.", v192, 0xCu);
        swift_arrayDestroy(v193, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v193, -1, -1);
        swift_slowDealloc(v192, -1, -1);

        v198 = v440;
        v199 = v451;
      }
      else
      {

        swift_release_n(a1, 2);
        v198 = v187;
        v199 = v79;
      }
      ((void (*)(char *, uint64_t))v448)(v198, v199);
      v255 = v458;
      v256 = v459;
      sub_10003A834(&v457, v458);
      v257 = v436;
      PlayPauseAction.episodeOffer.getter();
      goto LABEL_73;
    }
    v234 = type metadata accessor for PlayPauseStationAction();
    v235 = swift_dynamicCastClass(a1, v234);
    if (v235)
    {
      v450 = (char *)v235;
      swift_retain();
      v236 = v433;
      v238 = static OS_os_log.carPlay.getter(v237);
      v239 = Logger.logObject.getter(v238);
      v240 = static os_log_type_t.default.getter();
      v241 = os_log_type_enabled(v239, v240);
      v242 = (uint64_t (*)(char *, uint64_t))v448;
      if (v241)
      {
        v243 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v243 = 0;
        _os_log_impl((void *)&_mh_execute_header, v239, v240, "Attempting to initiate playback for PlayPauseStationAction.", v243, 2u);
        swift_slowDealloc(v243, -1, -1);
      }

      v244 = v242(v236, v79);
      v245 = v435;
      static OS_os_log.carPlay.getter(v244);
      v246 = swift_retain_n(a1, 2);
      v247 = Logger.logObject.getter(v246);
      v248 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v247, v248))
      {
        v249 = (uint8_t *)swift_slowAlloc(12, -1);
        v250 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v250;
        *(_DWORD *)v249 = 136315138;
        v251 = ((uint64_t (*)(void))PlayPauseStationAction.stationUuid.getter)();
        v253 = v252;
        v453 = sub_10003D274(v251, v252, (uint64_t *)&v454);
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v249 + 4, v249 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v253);
        _os_log_impl((void *)&_mh_execute_header, v247, v248, "PlayPauseStationAction has station uuid: %s.", v249, 0xCu);
        swift_arrayDestroy(v250, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v250, -1, -1);
        swift_slowDealloc(v249, -1, -1);

        v254 = v435;
      }
      else
      {

        swift_release_n(a1, 2);
        v254 = v245;
      }
      v280 = v242(v254, v79);
      v281 = v434;
      static OS_os_log.carPlay.getter(v280);
      v282 = swift_retain_n(a1, 2);
      v283 = Logger.logObject.getter(v282);
      v284 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v283, v284))
      {
        v285 = (uint8_t *)swift_slowAlloc(12, -1);
        v286 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v286;
        *(_DWORD *)v285 = 136315138;
        v449 = a1;
        v447 = (char *)(v285 + 4);
        v287 = ((uint64_t (*)(void))PlayPauseStationAction.episodeUuid.getter)();
        v289 = v288;
        v290 = Optional<A>.description.getter(v287, v288);
        v291 = a2;
        v293 = v292;
        swift_bridgeObjectRelease(v289);
        v453 = sub_10003D274(v290, v293, (uint64_t *)&v454);
        a1 = v449;
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v447, v285 + 12);
        swift_release_n(a1, 2);
        v294 = v293;
        a2 = v291;
        swift_bridgeObjectRelease(v294);
        _os_log_impl((void *)&_mh_execute_header, v283, v284, "PlayPauseStationAction has episode uuid: %s.", v285, 0xCu);
        swift_arrayDestroy(v286, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v286, -1, -1);
        swift_slowDealloc(v285, -1, -1);

        v295 = (void (*)(_QWORD, uint64_t))v448;
        v296 = ((uint64_t (*)(char *, uint64_t))v448)(v434, v79);
      }
      else
      {

        swift_release_n(a1, 2);
        v295 = (void (*)(_QWORD, uint64_t))v448;
        v296 = ((uint64_t (*)(char *, uint64_t))v448)(v281, v79);
      }
      v297 = PlayPauseStationAction.stationUuid.getter(v296);
      v299 = v298;
      v300 = swift_bridgeObjectRelease(v298);
      v301 = HIBYTE(v299) & 0xF;
      if ((v299 & 0x2000000000000000) == 0)
        v301 = v297 & 0xFFFFFFFFFFFFLL;
      if (!v301)
      {
        PlayPauseStationAction.episodeUuid.getter(v300);
        v312 = v311;
        v314 = swift_bridgeObjectRelease(v311);
        if (!v312)
          goto LABEL_93;
        v315 = PlayPauseStationAction.episodeUuid.getter(v314);
        if (v316)
        {
          v317 = v315;
          v318 = v316;
          swift_bridgeObjectRelease(v316);
          v319 = HIBYTE(v318) & 0xF;
          if ((v318 & 0x2000000000000000) == 0)
            v319 = v317 & 0xFFFFFFFFFFFFLL;
          if (!v319)
          {
LABEL_93:
            v320 = static OS_os_log.carPlay.getter(v313);
            v321 = Logger.logObject.getter(v320);
            v322 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v321, v322))
            {
              v323 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v323 = 0;
              _os_log_impl((void *)&_mh_execute_header, v321, v322, "Error: Attempted to initiate PlayPauseStationAction playback for an episode with an empty stationUuid and episodeUuid.", v323, 2u);
              swift_slowDealloc(v323, -1, -1);
            }

            v324 = &v457;
LABEL_116:
            v295(*(v324 - 32), v79);
            goto LABEL_50;
          }
        }
      }
      v302 = v458;
      v303 = v459;
      v304 = sub_10003A834(&v457, v458);
      v305 = PlayPauseStationAction.stationUuid.getter(v304);
      v307 = v306;
      v309 = PlayPauseStationAction.episodeUuid.getter(v308);
    }
    else
    {
      v259 = type metadata accessor for PlayStationAction();
      v260 = swift_dynamicCastClass(a1, v259);
      v261 = (void (*)(char *, uint64_t))v448;
      if (!v260)
      {
        v325 = type metadata accessor for PlayAction(0);
        if (!swift_dynamicCastClass(a1, v325))
        {
          v379 = type metadata accessor for PlayQueueAction();
          if (!swift_dynamicCastClass(a1, v379))
          {
            v393 = v424;
            v394 = static OS_os_log.carPlay.getter(0);
            v395 = Logger.logObject.getter(v394);
            v396 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v395, v396))
            {
              v397 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v397 = 0;
              _os_log_impl((void *)&_mh_execute_header, v395, v396, "Error: Attempted to initiate playback for a non supported play action.", v397, 2u);
              swift_slowDealloc(v397, -1, -1);
            }

            v261(v393, v79);
            sub_1002A9EC0(a2);
            goto LABEL_62;
          }
          swift_retain();
          v380 = v425;
          static OS_os_log.carPlay.getter(v381);
          v382 = swift_retain_n(a1, 2);
          v383 = Logger.logObject.getter(v382);
          v384 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v383, v384))
          {
            v385 = (uint8_t *)swift_slowAlloc(12, -1);
            v386 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v454 = v386;
            *(_DWORD *)v385 = 136315138;
            v453 = PlayQueueAction.contentId.getter();
            v387 = sub_100030584();
            v388 = BinaryInteger.description.getter(&type metadata for UInt64, v387);
            v390 = v389;
            v453 = sub_10003D274(v388, v389, (uint64_t *)&v454);
            v79 = v451;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v385 + 4, v385 + 12);
            swift_release_n(a1, 2);
            swift_bridgeObjectRelease(v390);
            _os_log_impl((void *)&_mh_execute_header, v383, v384, "Attempting to initiate playback for PlayQueueAction with contentId %s.", v385, 0xCu);
            swift_arrayDestroy(v386, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v386, -1, -1);
            swift_slowDealloc(v385, -1, -1);

            v391 = v425;
          }
          else
          {

            swift_release_n(a1, 2);
            v391 = v380;
          }
          v398 = (void (*)(char *, uint64_t))v448;
          v399 = ((uint64_t (*)(char *, uint64_t))v448)(v391, v79);
          v400 = v426;
          static OS_os_log.carPlay.getter(v399);
          v401 = swift_retain_n(a1, 2);
          v402 = Logger.logObject.getter(v401);
          v403 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v402, (os_log_type_t)v403))
          {
            LODWORD(v452) = v403;
            v445 = a2;
            v449 = a1;
            v404 = (uint8_t *)swift_slowAlloc(12, -1);
            v450 = (char *)swift_slowAlloc(32, -1);
            *(_QWORD *)&v454 = v450;
            *(_DWORD *)v404 = 136315138;
            v405 = ((uint64_t (*)(void))PlayQueueAction.queueEpisodeIds.getter)();
            v406 = *(_QWORD *)(v405 + 16);
            if (v406)
            {
              v407 = sub_10027B258(0, 1, 1, _swiftEmptyArrayStorage);
              v408 = (uint64_t *)(v405 + 32);
              v409 = v407[2];
              do
              {
                v411 = *v408++;
                v410 = v411;
                v412 = v407[3];
                if (v409 >= v412 >> 1)
                  v407 = sub_10027B258((_QWORD *)(v412 > 1), v409 + 1, 1, v407);
                v407[2] = v409 + 1;
                v407[v409++ + 4] = v410;
                --v406;
              }
              while (v406);
            }
            else
            {
              v407 = _swiftEmptyArrayStorage;
            }
            swift_bridgeObjectRelease(v405);
            v413 = Array.description.getter(v407, &type metadata for AdamID);
            v415 = v414;
            swift_bridgeObjectRelease(v407);
            v453 = sub_10003D274(v413, v415, (uint64_t *)&v454);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v404 + 4, v404 + 12);
            a1 = v449;
            swift_release_n(v449, 2);
            swift_bridgeObjectRelease(v415);
            _os_log_impl((void *)&_mh_execute_header, v402, (os_log_type_t)v452, "PlayQueueAction has queueEpisodeIds: %s.", v404, 0xCu);
            v416 = v450;
            swift_arrayDestroy(v450, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v416, -1, -1);
            swift_slowDealloc(v404, -1, -1);

            ((void (*)(char *, uint64_t))v448)(v426, v451);
            a2 = v445;
          }
          else
          {

            swift_release_n(a1, 2);
            v398(v400, v79);
          }
          v417 = v458;
          v418 = v459;
          sub_10003A834(&v457, v458);
          v257 = v436;
          v419 = PlayQueueAction.episodeOffer.getter();
          v420 = PlayQueueAction.queueEpisodeIds.getter(v419);
          v455 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
          *(_QWORD *)&v454 = a2;
          v421 = a2;
          dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:queueEpisodesIds:timestamp:sender:)(v257, v420, 0, 1, &v454, v417, v418);
          swift_release(a1);
          swift_bridgeObjectRelease(v420);
          goto LABEL_74;
        }
        swift_retain();
        v326 = v428;
        static OS_os_log.carPlay.getter(v327);
        v328 = swift_retain_n(a1, 2);
        v329 = Logger.logObject.getter(v328);
        v330 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v329, v330))
        {
          v331 = (uint8_t *)swift_slowAlloc(12, -1);
          v332 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v454 = v332;
          *(_DWORD *)v331 = 136315138;
          v453 = PlayAction.contentId.getter();
          v333 = sub_100030584();
          v334 = BinaryInteger.description.getter(&type metadata for UInt64, v333);
          v336 = v335;
          v453 = sub_10003D274(v334, v335, (uint64_t *)&v454);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v331 + 4, v331 + 12);
          swift_release_n(a1, 2);
          swift_bridgeObjectRelease(v336);
          _os_log_impl((void *)&_mh_execute_header, v329, v330, "Attempting to initiate playback for PlayAction with contentId %s.", v331, 0xCu);
          swift_arrayDestroy(v332, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v332, -1, -1);
          swift_slowDealloc(v331, -1, -1);

          v337 = v428;
          v338 = v451;
        }
        else
        {

          swift_release_n(a1, 2);
          v337 = v326;
          v338 = v79;
        }
        ((void (*)(char *, uint64_t))v448)(v337, v338);
        v255 = v458;
        v256 = v459;
        sub_10003A834(&v457, v458);
        v257 = v436;
        PlayAction.episodeOffer.getter(v392);
LABEL_73:
        v455 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
        *(_QWORD *)&v454 = a2;
        v258 = a2;
        dispatch thunk of EpisodeControllerProtocol.play(episodeOffer:sender:)(v257, &v454, v255, v256);
        swift_release(a1);
LABEL_74:
        (*(void (**)(char *, uint64_t))(v437 + 8))(v257, v438);
        goto LABEL_61;
      }
      v450 = (char *)v260;
      swift_retain();
      v262 = v429;
      v264 = static OS_os_log.carPlay.getter(v263);
      v265 = Logger.logObject.getter(v264);
      v266 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v265, v266))
      {
        v267 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v267 = 0;
        _os_log_impl((void *)&_mh_execute_header, v265, v266, "Attempting to initiate playback for PlayStationAction.", v267, 2u);
        swift_slowDealloc(v267, -1, -1);
      }

      v268 = ((uint64_t (*)(char *, uint64_t))v261)(v262, v79);
      v269 = v432;
      static OS_os_log.carPlay.getter(v268);
      v270 = swift_retain_n(a1, 2);
      v271 = Logger.logObject.getter(v270);
      v272 = (uint64_t (*)(char *, uint64_t))v261;
      v273 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v271, v273))
      {
        v274 = (uint8_t *)swift_slowAlloc(12, -1);
        v275 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v275;
        *(_DWORD *)v274 = 136315138;
        v276 = ((uint64_t (*)(void))PlayStationAction.stationUuid.getter)();
        v278 = v277;
        v453 = sub_10003D274(v276, v277, (uint64_t *)&v454);
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v274 + 4, v274 + 12);
        swift_release_n(a1, 2);
        swift_bridgeObjectRelease(v278);
        _os_log_impl((void *)&_mh_execute_header, v271, v273, "PlayStationAction has station uuid: %s.", v274, 0xCu);
        swift_arrayDestroy(v275, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v275, -1, -1);
        swift_slowDealloc(v274, -1, -1);

        v279 = v432;
      }
      else
      {

        swift_release_n(a1, 2);
        v279 = v269;
      }
      v339 = v272(v279, v79);
      v340 = v431;
      static OS_os_log.carPlay.getter(v339);
      v341 = swift_retain_n(a1, 2);
      v342 = Logger.logObject.getter(v341);
      v343 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v342, v343))
      {
        v344 = (uint8_t *)swift_slowAlloc(12, -1);
        v345 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v454 = v345;
        *(_DWORD *)v344 = 136315138;
        v449 = a1;
        v447 = (char *)(v344 + 4);
        v346 = ((uint64_t (*)(void))PlayStationAction.episodeUuid.getter)();
        v348 = v347;
        v349 = Optional<A>.description.getter(v346, v347);
        v350 = a2;
        v352 = v351;
        swift_bridgeObjectRelease(v348);
        v453 = sub_10003D274(v349, v352, (uint64_t *)&v454);
        a1 = v449;
        v79 = v451;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, &v454, v447, v344 + 12);
        swift_release_n(a1, 2);
        v353 = v352;
        a2 = v350;
        swift_bridgeObjectRelease(v353);
        _os_log_impl((void *)&_mh_execute_header, v342, v343, "PlayStationAction has episode uuid: %s.", v344, 0xCu);
        swift_arrayDestroy(v345, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v345, -1, -1);
        swift_slowDealloc(v344, -1, -1);

        v295 = (void (*)(_QWORD, uint64_t))v448;
        v354 = ((uint64_t (*)(char *, uint64_t))v448)(v431, v79);
      }
      else
      {

        swift_release_n(a1, 2);
        v295 = (void (*)(_QWORD, uint64_t))v448;
        v354 = ((uint64_t (*)(char *, uint64_t))v448)(v340, v79);
      }
      v355 = PlayStationAction.stationUuid.getter(v354);
      v357 = v356;
      v358 = swift_bridgeObjectRelease(v356);
      v359 = HIBYTE(v357) & 0xF;
      if ((v357 & 0x2000000000000000) == 0)
        v359 = v355 & 0xFFFFFFFFFFFFLL;
      if (!v359)
      {
        PlayStationAction.episodeUuid.getter(v358);
        v367 = v366;
        v369 = swift_bridgeObjectRelease(v366);
        if (!v367)
          goto LABEL_113;
        v370 = PlayStationAction.episodeUuid.getter(v369);
        if (v371)
        {
          v372 = v370;
          v373 = v371;
          swift_bridgeObjectRelease(v371);
          v374 = HIBYTE(v373) & 0xF;
          if ((v373 & 0x2000000000000000) == 0)
            v374 = v372 & 0xFFFFFFFFFFFFLL;
          if (!v374)
          {
LABEL_113:
            v375 = static OS_os_log.carPlay.getter(v368);
            v376 = Logger.logObject.getter(v375);
            v377 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v376, v377))
            {
              v378 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v378 = 0;
              _os_log_impl((void *)&_mh_execute_header, v376, v377, "Error: Attempted to initiate PlayStationAction playback for an episode with an empty stationUuid and episodeUuid.", v378, 2u);
              swift_slowDealloc(v378, -1, -1);
            }

            v324 = (uint64_t *)v456;
            goto LABEL_116;
          }
        }
      }
      v302 = v458;
      v303 = v459;
      v360 = sub_10003A834(&v457, v458);
      v305 = PlayStationAction.stationUuid.getter(v360);
      v307 = v361;
      v309 = PlayStationAction.episodeUuid.getter(v362);
    }
    v363 = v309;
    v364 = v310;
    v455 = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
    *(_QWORD *)&v454 = a2;
    v365 = a2;
    dispatch thunk of EpisodeControllerProtocol.play(stationUuid:episodeUuid:from:)(v305, v307, v363, v364, &v454, v302, v303);
    swift_bridgeObjectRelease(v307);
    swift_release(a1);
    swift_bridgeObjectRelease(v364);
    goto LABEL_61;
  }
  swift_retain();
  v82 = static OS_os_log.carPlay.getter(v81);
  v83 = Logger.logObject.getter(v82);
  v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = v78;
    v86 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v86 = 0;
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "Attempting to initiate playback for FlowAction.", v86, 2u);
    v87 = v86;
    v78 = v85;
    swift_slowDealloc(v87, -1, -1);
  }

  v88 = ((uint64_t (*)(char *, uint64_t))v78)(v67, v79);
  dispatch thunk of FlowAction.destination.getter(v88);
  v89 = type metadata accessor for FlowDestination(0);
  v90 = *(_QWORD *)(v89 - 8);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v90 + 48))(v15, 1, v89) == 1)
  {
    v91 = sub_100007A28((uint64_t)v15, (uint64_t *)&unk_100554EC0);
    v92 = v450;
    goto LABEL_46;
  }
  if ((*(unsigned int (**)(id *, uint64_t))(v90 + 88))(v15, v89) != enum case for FlowDestination.upsell(_:))
  {
    v91 = (*(uint64_t (**)(id *, uint64_t))(v90 + 8))(v15, v89);
    v92 = v450;
    goto LABEL_46;
  }
  (*(void (**)(id *, uint64_t))(v90 + 96))(v15, v89);

  v111 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
  v112 = String._bridgeToObjectiveC()();
  v113 = objc_msgSend(v111, "longStringForUnavailableReason:podcastTitle:", 7, v112);

  v92 = v450;
  if (!v113)
  {
LABEL_46:
    v200 = static OS_os_log.carPlay.getter(v91);
    v201 = Logger.logObject.getter(v200);
    v202 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v201, v202))
    {
      v203 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v203 = 0;
      _os_log_impl((void *)&_mh_execute_header, v201, v202, "Error: Could not form a valid upsell alert message.", v203, 2u);
      swift_slowDealloc(v203, -1, -1);
    }

    v184 = v92;
    v185 = v79;
LABEL_49:
    ((void (*)(char *, uint64_t))v78)(v184, v185);
LABEL_50:
    v204 = a2;
LABEL_51:
    sub_1002A9EC0(v204);
    swift_release(a1);
    goto LABEL_62;
  }
  v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
  v116 = v115;

  *(_QWORD *)&v454 = v114;
  *((_QWORD *)&v454 + 1) = v116;
  v117 = sub_10016DD80();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v117, v118) & 1) == 0)
  {
    swift_bridgeObjectRelease(v116);
    goto LABEL_46;
  }
  sub_1002A9C78(v114, v116, a2);
  swift_release(a1);
  swift_bridgeObjectRelease(v116);
LABEL_62:
  sub_10003D380(&v457);
}

uint64_t sub_1002A7760(void *a1, void *a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject *v24;
  NSObject **v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  NSObject **v38;
  void *v39;
  id v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  _BYTE v44[56];

  v3 = v2;
  v40 = a2;
  v5 = sub_10003F544((uint64_t *)&unk_10055FF00);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v2[OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel];
  type metadata accessor for AnalyticsEvent(0);
  v12 = (void *)PFAnalyticsEventNamePlaybackReason;
  v13 = sub_10003F544(&qword_10055FF40);
  inited = swift_initStackObject(v13, v44);
  *(_OWORD *)(inited + 16) = xmmword_1003CA200;
  *(_QWORD *)(inited + 32) = 0x6E6F73616572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v15 = v12;
  *(_QWORD *)(inited + 48) = String._bridgeToObjectiveC()();
  v16 = sub_100048D4C(inited);
  v17 = (void *)AnalyticsEvent.__allocating_init(name:payload:)(v15, v16);
  objc_msgSend(v11, "sendEvent:", v17);

  v18 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v18);
  v19 = a1;
  v41 = v10;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v39 = v3;
    v23 = (uint8_t *)v22;
    v38 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 138412290;
    v43 = v19;
    v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v23 + 4, v23 + 12);
    v25 = v38;
    *v38 = v19;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Playing item from queue: %@", v23, 0xCu);
    v26 = sub_10003F544((uint64_t *)&unk_100556480);
    swift_arrayDestroy(v25, 1, v26);
    swift_slowDealloc(v25, -1, -1);
    v27 = v23;
    v3 = v39;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {

    v20 = v19;
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v8);
  v28 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
  type metadata accessor for MainActor(0);
  v29 = v19;
  v30 = v3;
  v31 = v40;
  v33 = static MainActor.shared.getter(v32);
  v34 = (_QWORD *)swift_allocObject(&unk_1004BC910, 56, 7);
  v34[2] = v33;
  v34[3] = &protocol witness table for MainActor;
  v34[4] = v30;
  v34[5] = v29;
  v34[6] = v31;
  v35 = sub_10034F744((uint64_t)v7, (uint64_t)&unk_10055FF50, (uint64_t)v34);
  return swift_release(v35);
}

void sub_1002A7ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  _BYTE v24[56];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_analyticsChannel);
  type metadata accessor for AnalyticsEvent(0);
  v8 = (void *)PFAnalyticsEventNamePlaybackReason;
  v9 = sub_10003F544(&qword_10055FF40);
  inited = swift_initStackObject(v9, v24);
  *(_OWORD *)(inited + 16) = xmmword_1003CA200;
  *(_QWORD *)(inited + 32) = 0x6E6F73616572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v11 = v8;
  *(_QWORD *)(inited + 48) = String._bridgeToObjectiveC()();
  v12 = sub_100048D4C(inited);
  v13 = (void *)AnalyticsEvent.__allocating_init(name:payload:)(v11, v12);
  objc_msgSend(v7, "sendEvent:", v13);

  v14 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v15 = static OS_os_log.carPlay.getter(v14);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v18 = 134217984;
    v23 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v18 + 4, v18 + 12);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Playing item from queue with index %lu", v18, 0xCu);
    swift_slowDealloc(v18, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v19 = (void *)objc_opt_self(MTPlayerController);
  v20 = objc_msgSend(v19, "defaultInstance");
  v21 = objc_msgSend(v20, "compositeManifest");

  objc_msgSend(v21, "setCurrentIndex:", a1);
  v22 = objc_msgSend(v19, "defaultInstance");
  objc_msgSend(v22, "playLocalPlayer");

}

void sub_1002A7D40(uint64_t a1, void *a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67[24];
  _QWORD v68[6];

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v60 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - v13;
  v15 = v4 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_episodeController, v67, 0, 0);
  sub_1002AAF54(v15, (uint64_t)&v64);
  if (v65)
  {
    v59 = v4;
    sub_10002099C(&v64, (uint64_t)v68);
    v58 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v16 = static OS_os_log.carPlay.getter(v58);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(12, -1);
      v56 = a4;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc(32, -1);
      v57 = a2;
      v22 = v21;
      *(_QWORD *)&v64 = v21;
      v54 = v9;
      *(_DWORD *)v20 = 136315138;
      v55 = a3;
      *(_QWORD *)&v61 = a1;
      v23 = sub_100030584();
      v24 = BinaryInteger.description.getter(&type metadata for UInt64, v23);
      v26 = v25;
      *(_QWORD *)&v61 = sub_10003D274(v24, v25, (uint64_t *)&v64);
      a3 = v55;
      v9 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, (char *)&v61 + 8, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Attempting to initiate playback for a show smart play episode with show adam ID %s.", v20, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      v27 = v22;
      a2 = v57;
      swift_slowDealloc(v27, -1, -1);
      v28 = v20;
      a4 = v56;
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v14, v9);
    v30 = AdamID.isEmpty.getter(a1);
    if ((v30 & 1) != 0)
    {
      v31 = v60;
      v32 = static OS_os_log.carPlay.getter(v30);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = v9;
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Error: Attempted to initiate show smart play episode playback for a show with an empty adamId.", v36, 2u);
        v37 = v36;
        v9 = v35;
        swift_slowDealloc(v37, -1, -1);
      }

      v29(v31, v9);
      sub_1002A9EC0(a2);
      sub_10003D380(v68);
    }
    else
    {
      v39 = v59;
      v40 = v59 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider;
      swift_beginAccess(v59 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_storeDataProvider, &v61, 32, 0);
      if (*(_QWORD *)(v40 + 24))
      {
        sub_10000A520(v40, (uint64_t)&v64);
        swift_endAccess(&v61);
        v41 = v65;
        v42 = v66;
        sub_10003A834(&v64, v65);
        v43 = dispatch thunk of StoreDataProvider.fetchSmartPlayEpisodeAdamID(for:)(a1, v41, v42);
        v44 = swift_allocObject(&unk_1004BC848, 24, 7);
        swift_unknownObjectWeakInit(v44 + 16, v39);
        sub_10000A520((uint64_t)v68, (uint64_t)&v61);
        v45 = (_QWORD *)swift_allocObject(&unk_1004BC938, 96, 7);
        v45[2] = a1;
        v45[3] = a3;
        v45[4] = a4;
        v45[5] = v44;
        v45[6] = a2;
        sub_10002099C(&v61, (uint64_t)(v45 + 7));
        v46 = a1;
        v47 = swift_allocObject(&unk_1004BC848, 24, 7);
        swift_unknownObjectWeakInit(v47 + 16, v39);
        v48 = (_QWORD *)swift_allocObject(&unk_1004BC960, 56, 7);
        v48[2] = v46;
        v48[3] = a3;
        v48[4] = a4;
        v48[5] = v47;
        v48[6] = a2;
        v49 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
        sub_10002CA20((uint64_t)a3, a4);
        v50 = a2;
        sub_10002CA20((uint64_t)a3, a4);
        v51 = v50;
        v52 = swift_retain();
        v53 = static OS_dispatch_queue.main.getter(v52);
        v62 = v49;
        v63 = &protocol witness table for OS_dispatch_queue;
        *(_QWORD *)&v61 = v53;
        Promise.then(perform:orCatchError:on:)(sub_1002AB0C8, v45, sub_1002AB118, v48, &v61);
        swift_release(v43);
        swift_release(v45);
        swift_release(v48);
        sub_10003D380(&v61);
        sub_10003D380(v68);
        swift_release(v47);
        sub_10003D380(&v64);
      }
      else
      {
        sub_10003D380(v68);
        swift_endAccess(&v61);
      }
    }
  }
  else
  {
    v38 = sub_100007A28((uint64_t)&v64, (uint64_t *)&unk_10055FF30);
    if (a3)
      a3(v38);
    sub_1002A9EC0(a2);
  }
}

uint64_t sub_1002A826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  v7 = type metadata accessor for Logger(0);
  v6[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[17] = v8;
  v6[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[19] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[20] = v11;
  v6[21] = v12;
  return swift_task_switch(sub_1002A8304, v11, v12);
}

uint64_t sub_1002A8304()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  char *v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
  *(_QWORD *)(v0 + 176) = v1;
  if (v1)
  {
    v2 = *(void **)(v0 + 112);
    v3 = type metadata accessor for PlaybackController.QueueCommand(0);
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
    *sub_1000242A8((_QWORD *)(v0 + 16)) = v2;
    (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 104))();
    v4 = *((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:) + 1);
    v8 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
       + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
    swift_retain();
    v5 = v2;
    v6 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 184) = v6;
    *v6 = v0;
    v6[1] = sub_1002A840C;
    return ((uint64_t (*)(uint64_t, _QWORD))v8)(v0 + 16, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002A840C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 176);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_QWORD *)(*(_QWORD *)v2 + 192) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  if (v1)
  {
    v7 = v4[20];
    v8 = v4[21];
    v9 = sub_1002A84CC;
  }
  else
  {

    sub_10003D380(v4 + 2);
    v7 = v4[20];
    v8 = v4[21];
    v9 = sub_1002A8494;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1002A8494()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A84CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  NSObject *log;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 152));
  sub_10003D380((_QWORD *)(v0 + 16));
  v2 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v2);
  v3 = v1;
  swift_errorRetain();
  v4 = v3;
  v5 = swift_errorRetain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v21 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 144);
    v8 = *(void **)(v0 + 112);
    v9 = swift_slowAlloc(22, -1);
    log = v6;
    v10 = (_QWORD *)swift_slowAlloc(8, -1);
    v23 = swift_slowAlloc(32, -1);
    v27 = v23;
    *(_DWORD *)v9 = 138412546;
    *(_QWORD *)(v0 + 80) = v8;
    v11 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v9 + 4, v9 + 12);
    *v10 = v8;

    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue(v21, v0 + 88, v0 + 56);
    v12 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    v14 = v13;
    *(_QWORD *)(v0 + 96) = sub_10003D274(v12, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v7, "Failed to play item from queue: %@, error: %s.", (uint8_t *)v9, 0x16u);
    v15 = sub_10003F544((uint64_t *)&unk_100556480);
    swift_arrayDestroy(v10, 1, v15);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(void **)(v0 + 112);

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  sub_1002A9EC0(*(void **)(v0 + 120));
  swift_errorRelease();
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002A87A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t Strong;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[4];
  uint64_t v71;
  uint64_t v72;

  v65 = a4;
  v66 = a6;
  v67 = a3;
  v11 = type metadata accessor for Logger(0);
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v61 - v18;
  v20 = *(_QWORD *)a1;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 8);
  v21 = a5 + 16;
  v22 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  if ((_DWORD)a1 == 1)
  {
    v23 = static OS_os_log.carPlay.getter(v22);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v63 = a5 + 16;
      v28 = v27;
      v70[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v71 = a2;
      v29 = sub_100030584();
      v30 = BinaryInteger.description.getter(&type metadata for UInt64, v29);
      v32 = v31;
      v71 = sub_10003D274(v30, v31, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease(v32);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to retrieve a smart play episode adamId for show with %s adamId.", v26, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      v33 = v28;
      v21 = v63;
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }

    v34 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v19, v69);
    if (v67)
      v67(v34);
LABEL_12:
    swift_beginAccess(v21, v70, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v21);
    if (Strong)
    {
      v56 = (void *)Strong;
      sub_1002A9EC0(v66);

    }
    return;
  }
  v64 = a7;
  v35 = static OS_os_log.carPlay.getter(v22);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v63 = a5 + 16;
    v40 = v39;
    v70[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v62 = v38 + 4;
    v71 = v20;
    v41 = sub_100030584();
    v42 = BinaryInteger.description.getter(&type metadata for UInt64, v41);
    v44 = v43;
    v71 = sub_10003D274(v42, v43, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v62, v38 + 12);
    swift_bridgeObjectRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Attempting to initiate playback for a show smart play episode with adam ID %s.", v38, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    v45 = v40;
    v21 = v63;
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }

  v46 = *(void (**)(char *, uint64_t))(v68 + 8);
  v47 = v17;
  v48 = v69;
  v46(v47, v69);
  v49 = v64;
  v50 = AdamID.isEmpty.getter(v20);
  if ((v50 & 1) != 0)
  {
    v51 = static OS_os_log.carPlay.getter(v50);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Error: Error: Attempted to initiate show smart play episode playback for a show with an empty storeEpisodeId.", v54, 2u);
      swift_slowDealloc(v54, -1, -1);
    }

    v46(v14, v48);
    goto LABEL_12;
  }
  v57 = v49[3];
  v58 = v49[4];
  sub_10003A834(v49, v57);
  v70[3] = sub_100005EC8(0, &qword_10055D218, CPInterfaceController_ptr);
  v70[0] = (uint64_t)v66;
  v59 = v66;
  dispatch thunk of EpisodeControllerProtocol.play(storeEpisodeId:sender:)(v20, v70, v57, v58);
  v60 = sub_100007A28((uint64_t)v70, (uint64_t *)&unk_100552300);
  if (v67)
    v67(v60);
}

void sub_1002A8C5C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  void *v34;
  _QWORD v35[2];
  void (*v36)(_QWORD);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  char v41[8];
  uint64_t v42;
  uint64_t v43[3];

  v38 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a5 + 16;
  v15 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v15);
  swift_errorRetain(a1);
  v16 = swift_errorRetain(a1);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v35[1] = a4;
    v20 = v19;
    v21 = swift_slowAlloc(64, -1);
    v37 = a6;
    v22 = v21;
    v42 = a2;
    v43[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v36 = a3;
    v23 = sub_100030584();
    v24 = BinaryInteger.description.getter(&type metadata for UInt64, v23);
    v26 = v25;
    v42 = sub_10003D274(v24, v25, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v20 + 12) = 2080;
    swift_getErrorValue(a1, v41, v40);
    v27 = Error.localizedDescription.getter(v40[1], v40[2]);
    v29 = v28;
    v42 = sub_10003D274(v27, v28, v43);
    a3 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v20 + 14, v20 + 22);
    swift_bridgeObjectRelease(v29);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to initiate playback for show with %s adamId with error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    v30 = v22;
    a6 = v37;
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v31 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v38);
  if (a3)
    a3(v31);
  v32 = v39;
  swift_beginAccess(v39, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v32);
  if (Strong)
  {
    v34 = (void *)Strong;
    sub_1002A9EC0(a6);

  }
}

uint64_t sub_1002A8F0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10055FF24);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10023A498;
  return sub_1002A8F54();
}

uint64_t sub_1002A8F54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1[24] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[25] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[26] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v4);
  v1[28] = swift_task_alloc(v4);
  v1[29] = swift_task_alloc(v4);
  v1[30] = swift_task_alloc(v4);
  v1[31] = swift_task_alloc(v4);
  return swift_task_switch(sub_1002A8FE8, 0, 0);
}

void sub_1002A8FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  float v8;
  float v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  int v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  float v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  float v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v1 = v0 + 192;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_playbackController);
  *(_QWORD *)(v0 + 256) = v2;
  if (!v2)
  {
    v30 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v31 = static OS_os_log.carPlay.getter(v30);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[CarPlay/PlaybackRate] Unable to cycle rate, playback controller not available.", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }
    v35 = *(_QWORD *)(v0 + 224);
    v36 = *(_QWORD *)(v0 + 200);
    v37 = *(_QWORD *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
    goto LABEL_22;
  }
  v3 = swift_retain();
  v4 = (void *)dispatch thunk of PlaybackController.tracklist.getter(v3);
  if (!v4
    || (v5 = v4, v6 = objc_msgSend(v4, "playingItem"), v5, !v6)
    || (v7 = objc_msgSend(v6, "playbackRateCommand"),
        *(_QWORD *)(v0 + 264) = v7,
        v6,
        !v7))
  {
    v22 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v23 = static OS_os_log.carPlay.getter(v22);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[CarPlay/PlaybackRate] Unable to cycle rate, playback rate command not available.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 200);
    v28 = *(_QWORD *)(v0 + 208);
    swift_release(v2);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    goto LABEL_22;
  }
  objc_msgSend(v7, "preferredPlaybackRate");
  v9 = v8;
  *(float *)(v0 + 304) = v8;
  v10 = objc_msgSend(v7, "supportedPlaybackRates");
  v11 = sub_100005EC8(0, (unint64_t *)&unk_100560F70, NSNumber_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v43 = v12;
    else
      v43 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v12);
    v80 = v2;
    if (v13)
      goto LABEL_7;
LABEL_29:
    swift_bridgeObjectRelease(v12);
    v15 = _swiftEmptyArrayStorage;
    v42 = _swiftEmptyArrayStorage[2];
    if (!v42)
    {
LABEL_40:
      v61 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      static OS_os_log.carPlay.getter(v61);
      swift_bridgeObjectRetain(v15);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.error.getter(v63);
      v65 = os_log_type_enabled(v63, v64);
      v66 = *(_QWORD *)(v0 + 240);
      v67 = *(_QWORD *)(v0 + 200);
      v79 = *(_QWORD *)(v0 + 208);
      if (v65)
      {
        v74 = v1 - 96;
        v75 = v1 - 112;
        v77 = *(_QWORD *)(v0 + 240);
        v68 = swift_slowAlloc(42, -1);
        v76 = (_QWORD *)swift_slowAlloc(32, -1);
        v81 = v76;
        *(_DWORD *)v68 = 141558787;
        *(_QWORD *)(v0 + 144) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 48, v0 + 152, v68 + 4, v68 + 12);
        *(_WORD *)(v68 + 12) = 2049;
        *(double *)(v0 + 96) = v9;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 96, v0 + 104, v68 + 14, v68 + 22);
        *(_WORD *)(v68 + 22) = 2160;
        *(_QWORD *)(v0 + 80) = 1752392040;
        v69 = v1 - 104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, v69, v68 + 24, v68 + 32);
        *(_WORD *)(v68 + 32) = 2081;
        swift_bridgeObjectRetain(v15);
        v71 = Array.description.getter(v70, &type metadata for Float);
        v73 = v72;
        swift_bridgeObjectRelease(v15);
        *(_QWORD *)(v0 + 88) = sub_10003D274(v71, v73, (uint64_t *)&v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v69, v74, v68 + 34, v68 + 42);
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease_n(v15, 2);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "[CarPlay/PlaybackRate] Unable to cycle rate, current rate=%{private,mask.hash}f is not supported=%{private,mask.hash}s.", (uint8_t *)v68, 0x2Au);
        swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v76, -1, -1);
        swift_slowDealloc(v68, -1, -1);
        swift_release(v80);

        swift_unknownObjectRelease(v7);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v67);
      }
      else
      {
        swift_release(v80);
        swift_unknownObjectRelease(v7);
        swift_bridgeObjectRelease_n(v15, 2);

        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v66, v67);
      }
LABEL_22:
      v38 = *(_QWORD *)(v0 + 240);
      v40 = *(_QWORD *)(v0 + 224);
      v39 = *(_QWORD *)(v0 + 232);
      v41 = *(_QWORD *)(v0 + 216);
      swift_task_dealloc(*(_QWORD *)(v0 + 248));
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    goto LABEL_30;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v80 = v2;
  if (!v13)
    goto LABEL_29;
LABEL_7:
  v81 = _swiftEmptyArrayStorage;
  sub_10017B3C4(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  v14 = 0;
  v15 = v81;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
    else
      v16 = *(id *)(v12 + 8 * v14 + 32);
    v17 = v16;
    objc_msgSend(v16, "floatValue");
    v19 = v18;

    v81 = v15;
    v21 = v15[2];
    v20 = v15[3];
    if (v21 >= v20 >> 1)
    {
      sub_10017B3C4(v20 > 1, v21 + 1, 1);
      v15 = v81;
    }
    ++v14;
    v15[2] = v21 + 1;
    *((_DWORD *)v15 + v21 + 8) = v19;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease(v12);
  v1 = v0 + 192;
  v42 = v15[2];
  if (!v42)
    goto LABEL_40;
LABEL_30:
  if (*((float *)v15 + 8) != v9)
  {
    v45 = 0;
    while (v42 - 1 != v45)
    {
      v46 = *((float *)v15 + v45++ + 9);
      if (v46 == v9)
      {
        v47 = v45 - 1;
        v48 = __OFADD__(v47, 2);
        v44 = v47 + 2;
        if (v48)
          goto LABEL_45;
        goto LABEL_36;
      }
    }
    goto LABEL_40;
  }
  v44 = 1;
LABEL_36:
  v49 = v44 % v42;
  if ((v49 & 0x8000000000000000) == 0)
  {
    v50 = *((float *)v15 + v49 + 8);
    *(float *)(v0 + 308) = v50;
    swift_bridgeObjectRelease(v15);
    v51 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    *(_QWORD *)(v0 + 272) = v51;
    v52 = static OS_os_log.carPlay.getter(v51);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc(42, -1);
      *(_DWORD *)v55 = 141558787;
      *(_QWORD *)(v1 - 32) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 32, v1 - 24, v55 + 4, v55 + 12);
      *(_WORD *)(v55 + 12) = 2049;
      *(double *)(v1 - 24) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 24, v1 - 16, v55 + 14, v55 + 22);
      *(_WORD *)(v55 + 22) = 2160;
      *(_QWORD *)(v1 - 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 16, v1 - 8, v55 + 24, v55 + 32);
      *(_WORD *)(v55 + 32) = 2049;
      *(double *)(v1 - 8) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 - 8, v1, v55 + 34, v55 + 42);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "[CarPlay/PlaybackRate] Updating playback rate to %{private,mask.hash}f, previous=%{private,mask.hash}f.", (uint8_t *)v55, 0x2Au);
      swift_slowDealloc(v55, -1, -1);
    }

    v56 = *(_QWORD *)(v0 + 248);
    v57 = *(_QWORD *)(v0 + 200);
    v58 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 208) + 8);
    *(_QWORD *)(v0 + 280) = v58;
    v58(v56, v57);
    v59 = type metadata accessor for PlaybackController.TransportCommand(0);
    *(_QWORD *)(v0 + 40) = v59;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(float *)sub_1000242A8((_QWORD *)(v0 + 16)) = v50;
    (*(void (**)(void))(*(_QWORD *)(v59 - 8) + 104))();
    v78 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
        + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
    v60 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
                                     + 1));
    *(_QWORD *)(v0 + 288) = v60;
    *v60 = v0;
    v60[1] = sub_1002A9880;
    ((void (*)(uint64_t, _QWORD))v78)(v0 + 16, 0);
    return;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_1002A9880(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 288);
  *(_QWORD *)(*v2 + 296) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1002A9970;
  }
  else
  {

    sub_10003D380((_QWORD *)(v4 + 16));
    v6 = sub_1002A9900;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002A9900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 256);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A9970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  float v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v1 = sub_10003D380((_QWORD *)(v0 + 16));
  static OS_os_log.carPlay.getter(v1);
  swift_errorRetain();
  v2 = swift_errorRetain();
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v20 = *(_QWORD *)(v0 + 296);
    v5 = *(float *)(v0 + 308);
    v6 = *(float *)(v0 + 304);
    v22 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 264);
    v25 = *(_QWORD *)(v0 + 216);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v24 = *(_QWORD *)(v0 + 200);
    v7 = swift_slowAlloc(52, -1);
    v21 = swift_slowAlloc(32, -1);
    v27 = v21;
    *(_DWORD *)v7 = 141559043;
    *(_QWORD *)(v0 + 104) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v7 + 4, v7 + 12);
    *(_WORD *)(v7 + 12) = 2049;
    *(double *)(v0 + 112) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v7 + 14, v7 + 22);
    *(_WORD *)(v7 + 22) = 2160;
    *(_QWORD *)(v0 + 120) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v7 + 24, v7 + 32);
    *(_WORD *)(v7 + 32) = 2049;
    *(double *)(v0 + 128) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v7 + 34, v7 + 42);
    *(_WORD *)(v7 + 42) = 2082;
    swift_getErrorValue(v20, v0 + 136, v0 + 56);
    v8 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    v10 = v9;
    *(_QWORD *)(v0 + 152) = sub_10003D274(v8, v9, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v7 + 44, v7 + 52);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[CarPlay/PlaybackRate] Unable to update playback rate to %{private,mask.hash}f, from previous=%{private,mask.hash}f with error=%{public}s.", (uint8_t *)v7, 0x34u);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v7, -1, -1);
    swift_release(v22);

    swift_unknownObjectRelease(v23);
    swift_errorRelease();
    v26(v25, v24);
  }
  else
  {
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v12 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 216);
    v14 = *(_QWORD *)(v0 + 200);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
    swift_release(v12);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v11(v13, v14);
  }
  v15 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A9C78(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  __n128 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27[2];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = a1;
  v27[1] = a2;
  v10 = sub_10016DD80();
  result = Collection.isNotEmpty.getter(&type metadata for String, v10, v11);
  if ((result & 1) != 0)
  {
    v13 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    static OS_os_log.carPlay.getter(v13);
    v14 = swift_bridgeObjectRetain_n(a2, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(12, -1);
      v25 = a3;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc(32, -1);
      v27[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v24 = v18 + 4;
      swift_bridgeObjectRetain(a2);
      v26 = sub_10003D274(a1, a2, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v24, v18 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Attempting to show CarPlay alert with message %s.", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      v20 = v18;
      a3 = v25;
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v21 = (_QWORD *)swift_allocObject(&unk_1004BC8C0, 24, 7);
    v21[2] = a3;
    v22 = a3;
    CPInterfaceController.showAlert(with:completion:)(a1, a2, (void (*)(uint64_t))sub_1002AAFC0, v21);
    return swift_release(v21);
  }
  return result;
}

double sub_1002A9EC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  NSString v7;
  id v8;
  double result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27[2];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self(MTEpisodeUnavailableUtil);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "longStringForUnavailableReason:podcastTitle:", 5, v7);

  if (v8)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v27[0] = v10;
    v27[1] = v12;
    v13 = sub_10016DD80();
    if ((Collection.isNotEmpty.getter(&type metadata for String, v13, v14) & 1) != 0)
    {
      v15 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      static OS_os_log.carPlay.getter(v15);
      v16 = swift_bridgeObjectRetain_n(v12, 2);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(12, -1);
        v25 = a1;
        v20 = (uint8_t *)v19;
        v21 = swift_slowAlloc(32, -1);
        v27[0] = v21;
        *(_DWORD *)v20 = 136315138;
        v24 = v20 + 4;
        swift_bridgeObjectRetain(v12);
        v26 = sub_10003D274(v10, v12, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v24, v20 + 12);
        swift_bridgeObjectRelease_n(v12, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Showing generic playback error alert: %s", v20, 0xCu);
        swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        v22 = v20;
        a1 = v25;
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v12, 2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1002A9C78(v10, v12, a1);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_1002AA134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  double v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint8_t *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  NSObject *v60;
  id v61;
  NSString v62;
  Class isa;
  id v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _BYTE *v73;
  void (*v74)(void);
  uint64_t v75;
  void *v76;
  NSObject *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  id v88;
  uint64_t v89;
  uint64_t aBlock[5];
  uint64_t v91;
  id v92;
  uint64_t v93;

  v1 = v0;
  sub_10003F544((uint64_t *)&unk_100555310);
  __chkstk_darwin();
  v3 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v83 = (uint64_t *)((char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v87 = (void (*)(char *, uint64_t))((char *)&v79 - v11);
  __chkstk_darwin();
  v86 = (char *)&v79 - v12;
  __chkstk_darwin();
  v14 = (char *)&v79 - v13;
  v88 = sub_1002A2A1C();
  if (v15)
  {
    v16 = v15;
    v80 = v4;
    v85 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    static OS_os_log.carPlay.getter(v85);
    v17 = swift_bridgeObjectRetain_n(v16, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    v20 = os_log_type_enabled(v18, v19);
    v81 = v3;
    v82 = v1;
    v79 = v5;
    if (v20)
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain(v16);
      v84 = v8;
      v23 = v88;
      v92 = (id)sub_10003D274((uint64_t)v88, v16, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Now Playing album artist button tapped for Podcast item with uuid %s.", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      v24 = *(void (**)(char *, uint64_t))(v84 + 8);
      v24(v14, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      v24 = *(void (**)(char *, uint64_t))(v8 + 8);
      v24(v14, v7);
      v23 = v88;
    }
    v30 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
    v31 = objc_msgSend(v30, "mainOrPrivateContext");

    v92 = 0;
    v32 = (_QWORD *)swift_allocObject(&unk_1004BC7D0, 48, 7);
    v32[2] = &v92;
    v32[3] = v31;
    v32[4] = v23;
    v32[5] = v16;
    v33 = swift_allocObject(&unk_1004BC7F8, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_1001E3DB4;
    *(_QWORD *)(v33 + 24) = v32;
    aBlock[4] = (uint64_t)sub_100029B3C;
    v91 = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100029B1C;
    aBlock[3] = (uint64_t)&unk_1004BC810;
    v34 = _Block_copy(aBlock);
    v35 = v91;
    v84 = v16;
    swift_bridgeObjectRetain(v16);
    v36 = v31;
    swift_retain();
    -[NSObject performBlockAndWait:](v36, "performBlockAndWait:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v33, "", 117, 298, 28, 1);
    *(_QWORD *)&v37 = swift_release(v33).n128_u64[0];
    if ((v34 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (v92 && (v38 = objc_msgSend(v92, "title", v37)) != 0)
      {
        v39 = v38;
        v87 = v24;
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v42 = v41;

        v43 = v86;
        static OS_os_log.carPlay.getter(v44);
        v45 = swift_bridgeObjectRetain_n(v42, 2);
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc(12, -1);
          v85 = (uint64_t)v36;
          v49 = (uint8_t *)v48;
          v50 = swift_slowAlloc(32, -1);
          aBlock[0] = v50;
          *(_DWORD *)v49 = 136315138;
          swift_bridgeObjectRetain(v42);
          v89 = sub_10003D274(v40, v42, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, aBlock, v49 + 4, v49 + 12);
          swift_bridgeObjectRelease_n(v42, 3);
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Now Playing album artist button tapped for Podcast item with title %s.", v49, 0xCu);
          swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v50, -1, -1);
          v51 = v49;
          v36 = v85;
          swift_slowDealloc(v51, -1, -1);

          v52 = v86;
          v53 = v7;
          v23 = v88;
        }
        else
        {

          swift_bridgeObjectRelease_n(v42, 2);
          v52 = v43;
          v53 = v7;
        }
        v87(v52, v53);
        v61 = objc_allocWithZone((Class)CPListTemplate);
        v62 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v42);
        sub_100005EC8(0, (unint64_t *)&unk_100555260, CPListSection_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v64 = objc_msgSend(v61, "initWithTitle:sections:", v62, isa);

        v89 = (uint64_t)v64;
        v66 = v83;
        v65 = v84;
        *v83 = v23;
        v66[1] = v65;
        *((_OWORD *)v66 + 1) = xmmword_1003D2E70;
        *((_OWORD *)v66 + 2) = 0u;
        *((_OWORD *)v66 + 3) = 0u;
        *((_BYTE *)v66 + 64) = 7;
        v67 = v80;
        swift_storeEnumTagMultiPayload(v66, v80, 0);
        v68 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)), "init");
        v69 = (uint64_t)v66;
        v70 = (uint64_t)v81;
        sub_10017FE20(v69, (uint64_t)v81);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v70, 0, 1, v67);
        v71 = (uint64_t)&v68[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
        swift_beginAccess(&v68[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type], aBlock, 33, 0);
        sub_10016DE28(v70, v71, (uint64_t *)&unk_100555310);
        swift_endAccess(aBlock);
        v68[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
        sub_100005EC8(0, &qword_100554ED0, NSString_ptr);
        v72 = (void *)NSString.init(stringLiteral:)("templateInfo", 12, 2);
        v73 = v68;
        sub_10017FF38((uint64_t)v72, (uint64_t)v68);

        v74 = *(void (**)(void))(v82
                               + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback);
        if (v74)
        {
          v75 = *(_QWORD *)(v82
                          + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback
                          + 8);
          v76 = (void *)v89;
          sub_10002CA20(*(_QWORD *)(v82+ OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateAlbumArtistButtonTappedCallback), v75);
          v77 = v76;
          v74();

          sub_10002CA30((uint64_t)v74, v75);
        }
        else
        {
          v77 = v36;
          v36 = v89;
        }

      }
      else
      {
        swift_bridgeObjectRelease(v84);
        v54 = (char *)v87;
        v56 = static OS_os_log.carPlay.getter(v55);
        v57 = Logger.logObject.getter(v56);
        v58 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v57, v58))
        {
          v59 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "Now Playing album artist button tapped and the Podcast item title is nil.", v59, 2u);
          swift_slowDealloc(v59, -1, -1);
          v60 = v36;
        }
        else
        {
          v60 = v57;
          v57 = v36;
        }

        v24(v54, v7);
      }
      v78 = v92;
      swift_release(v32);

    }
  }
  else
  {
    v25 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v26 = static OS_os_log.carPlay.getter(v25);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Now Playing album artist button tapped and the Podcast item's uuid is nil.", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1002AAA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  id v27;
  NSString v28;
  Class isa;
  id v30;
  _BYTE *v31;
  uint64_t v32;
  void *v33;
  _BYTE *v34;
  void (*v35)(void);
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  char *v40;
  _BYTE v41[24];
  id v42;
  Swift::String v43;

  v1 = v0;
  sub_10003F544((uint64_t *)&unk_100555310);
  __chkstk_darwin();
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v13 = static OS_os_log.carPlay.getter(v12);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    v40 = v3;
    v17 = v7;
    v18 = v4;
    v19 = v5;
    v20 = v1;
    v21 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Now Playing up next button tapped.", v16, 2u);
    v22 = v21;
    v1 = v20;
    v5 = v19;
    v4 = v18;
    v7 = v17;
    v3 = v40;
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v43._object = (void *)0xEC0000007478654ELL;
  v24._countAndFlagsBits = 0x49545F4555455551;
  v24._object = (void *)0xEB00000000454C54;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v43._countAndFlagsBits = 0x20676E6979616C50;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v43)._object;

  v27 = objc_allocWithZone((Class)CPListTemplate);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  sub_100005EC8(0, (unint64_t *)&unk_100555260, CPListSection_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v27, "initWithTitle:sections:", v28, isa);

  v42 = v30;
  swift_storeEnumTagMultiPayload(v7, v4, 10);
  v31 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0)), "init");
  sub_10017FE20((uint64_t)v7, (uint64_t)v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  v32 = (uint64_t)&v31[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess(&v31[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type], v41, 33, 0);
  sub_10016DE28((uint64_t)v3, v32, (uint64_t *)&unk_100555310);
  swift_endAccess(v41);
  v31[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 0;
  sub_100005EC8(0, &qword_100554ED0, NSString_ptr);
  v33 = (void *)NSString.init(stringLiteral:)("templateInfo", 12, 2);
  v34 = v31;
  sub_10017FF38((uint64_t)v33, (uint64_t)v31);

  v35 = *(void (**)(void))(v1
                         + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback);
  if (v35)
  {
    v36 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback
                    + 8);
    v37 = v42;
    sub_10002CA20(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts27CarPlayNowPlayingController_npTemplateUpNextButtonTappedCallback), v36);
    v38 = v37;
    v35();

    sub_10002CA30((uint64_t)v35, v36);
  }
  else
  {
    v38 = v42;
  }

}

uint64_t sub_1002AAE58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002AAE84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AAE94()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002AAEB8(uint64_t a1)
{
  uint64_t v1;

  sub_1002A3DF4(a1, v1);
}

uint64_t sub_1002AAEC0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002AAEEC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10055FF14);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100191178;
  v2 = (_QWORD *)swift_task_alloc(dword_10055FF24);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10023A498;
  return sub_1002A8F54();
}

uint64_t sub_1002AAF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544((uint64_t *)&unk_10055FF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AAF9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002AAFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002A4974(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002AAFC8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002AB004(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10055FF4C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10023A498;
  return sub_1002A826C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002AB084()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  sub_10003D380((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

void sub_1002AB0C8(uint64_t a1)
{
  uint64_t v1;

  sub_1002A87A4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), (_QWORD *)(v1 + 56));
}

uint64_t sub_1002AB0DC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1002AB118(uint64_t a1)
{
  uint64_t v1;

  sub_1002A8C5C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

void sub_1002AB128(uint64_t a1)
{
  uint64_t v1;

  sub_1002A41E4(a1, v1, (void (*)(void))sub_1002A407C);
}

unint64_t sub_1002AB148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055FFC0;
  if (!qword_10055FFC0)
  {
    v1 = sub_10003CA40(&qword_10055FFC8);
    sub_10000A2C8((unint64_t *)&unk_10055FFD0, (unint64_t *)&unk_1005601A0, MPCPlayerResponseTracklist_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10055FFC0);
  }
  return result;
}

void sub_1002AB1CC(uint64_t a1)
{
  uint64_t v1;

  sub_1002A41E4(a1, v1, sub_1002A4238);
}

uint64_t sub_1002AB1EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AB1FC@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1002A4390(a1, a2, *(double *)(v2 + 16));
}

void sub_1002AB204(uint64_t a1)
{
  uint64_t v1;

  sub_1002A45F8(a1, v1);
}

uint64_t initializeBufferWithCopyOfBuffer for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1002AB250(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1002AB250(id result, char a2)
{
  if (a2 == 2)
    return result;
  if (!a2)
    return (id)swift_retain(result);
  return result;
}

void destroy for CarPlayNowPlayingPlayContext(uint64_t a1)
{
  sub_1001A67AC(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1002AB250(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1001A67AC(v5, v6);
  return a1;
}

uint64_t assignWithTake for CarPlayNowPlayingPlayContext(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1001A67AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayNowPlayingPlayContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayNowPlayingPlayContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1002AB394(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1002AB39C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CarPlayNowPlayingPlayContext()
{
  return &type metadata for CarPlayNowPlayingPlayContext;
}

uint64_t sub_1002AB3C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD))
{
  uint64_t v6;
  char v7;

  swift_errorRetain();
  v6 = Result<>.init(success:error:)(a1, a2);
  LOBYTE(a1) = v7 & 1;
  a3(v6, v7 & 1);
  return sub_1001502C4(v6, a1);
}

__CFString *sub_1002AB41C()
{
  return CFSTR("MTFeedUpdateDidEndUpdatingAllFeeds");
}

void sub_1002AB42C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  NSString v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v7 = v6;
  v12 = String._bridgeToObjectiveC()();
  v13 = swift_allocObject(&unk_1004BCB10, 32, 7);
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  v16[4] = sub_1002AB7EC;
  v17 = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100153D50;
  v16[3] = &unk_1004BCB28;
  v14 = _Block_copy(v16);
  v15 = v17;
  swift_retain();
  objc_msgSend(v7, "updatePodcastWithUUID:userInitiated:source:completion:", v12, a3 & 1, a4, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

void sub_1002AB51C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  NSString v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v8 = v7;
  v14 = String._bridgeToObjectiveC()();
  v15 = swift_allocObject(&unk_1004BCAC0, 32, 7);
  *(_QWORD *)(v15 + 16) = a6;
  *(_QWORD *)(v15 + 24) = a7;
  v18[4] = sub_1002AB7C0;
  v19 = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100153D50;
  v18[3] = &unk_1004BCAD8;
  v16 = _Block_copy(v18);
  v17 = v19;
  swift_retain();
  objc_msgSend(v8, "updatePodcastWithUUID:userInitiated:forced:forceBootstrap:source:completion:", v14, a3 & 1, a4 & 1, 0, a5, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

}

void sub_1002AB618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  sub_10017E930(a1);
  v10 = v9;
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v14[4] = a4;
  v15 = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10001C290;
  v14[3] = &unk_1004BCA88;
  v12 = _Block_copy(v14);
  v13 = v15;
  swift_retain();
  objc_msgSend(v5, "updatePodcastsWithUUIDs:userInitiated:source:started:", isa, 1, a3, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);

}

void sub_1002AB6F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[5];
  uint64_t v6;

  v5[4] = a1;
  v6 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10001C290;
  v5[3] = &unk_1004BCA60;
  v3 = _Block_copy(v5);
  v4 = v6;
  swift_retain();
  objc_msgSend(v2, "updateAllPodcastsUserInitiated:forced:source:started:", 1, 1, 3, v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
}

uint64_t sub_1002AB79C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AB7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AB3C0(a1, a2, *(void (**)(uint64_t, _QWORD))(v2 + 16));
}

_QWORD *sub_1002AB7F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 40);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1002AB89C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  __int128 v30[2];

  v3 = v2;
  v6 = sub_10003F544(&qword_10055FF70);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544((uint64_t *)&unk_100560190);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v30[0] = _swiftEmptyArrayStorage;
  v13 = sub_10003F544((uint64_t *)&unk_100561A60);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)(v2 + 64) = CurrentValueSubject.init(_:)(v30);
  v14 = sub_10003F544((uint64_t *)&unk_1005550F0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = PassthroughSubject.init()(v15);
  *(_QWORD *)(v2 + 128) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v2 + 72) = v16;
  *(_QWORD *)(v2 + 136) = 0;
  *(_QWORD *)(v2 + 144) = 0;
  v17 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v17;
  *(_OWORD *)(v2 + 48) = a2[2];
  v18 = sub_10003F544((uint64_t *)&unk_1005588D0);
  BaseObjectGraph.inject<A>(_:)(v30, v18, v18);
  sub_10002099C(v30, v2 + 80);
  v19 = type metadata accessor for PlaybackController(0);
  v20 = BaseObjectGraph.inject<A>(_:)(v30, v19, v19);
  *(_QWORD *)(v2 + 120) = *(_QWORD *)&v30[0];
  if ((static Podcasts.isBlueMoonEnabled()(v20) & 1) != 0)
  {
    dispatch thunk of PlaybackController.$tracklist.getter(v21);
    v22 = sub_100005EC8(0, (unint64_t *)&unk_1005601A0, MPCPlayerResponseTracklist_ptr);
    v23 = sub_10002F9C8(&qword_10055FFB8, &qword_10055FF70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.compactMap<A>(_:)(sub_100183858, 0, v6, v22, v23);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v24 = swift_allocObject(&unk_1004BCC08, 24, 7);
    swift_weakInit(v24 + 16, v3);
    v25 = sub_10002F9C8(&qword_1005601B0, (uint64_t *)&unk_100560190, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v26 = Publisher<>.sink(receiveValue:)(sub_1002AD7E0, v24, v10, v25);
    swift_release(v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
    swift_beginAccess(v3 + 128, v30, 33, 0);
    AnyCancellable.store(in:)(v3 + 128);
    swift_endAccess(v30);
    swift_release(v26);
  }
  else
  {
    v27 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v27, "addObserver:selector:name:object:", v3, "manifestContentsDidChange", IMPlayerManifestDidChange, 0);

    sub_1002AC234();
  }
  swift_release(a1);
  return v3;
}

uint64_t sub_1002ABBB0(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_1002ABC0C(v2);
    return swift_release(v5);
  }
  return result;
}

void sub_1002ABC0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  _QWORD *v63;
  __int128 aBlock;
  __int128 v65;
  __int128 v66;

  v2 = v1;
  v53 = sub_10003F544(&qword_1005601B8);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544(&qword_1005601C0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F544(&qword_1005601C8);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10003F544(&qword_1005601D0);
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  __chkstk_darwin(v11);
  v59 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v18 = static OS_os_log.carPlay.getter(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "CarPlayPlayingNextProvider: Load items called.", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v63 = _swiftEmptyArrayStorage;
  v22 = objc_msgSend(a1, "displayItems");
  v23 = swift_allocObject(&unk_1004BCC58, 32, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = &v63;
  v24 = swift_allocObject(&unk_1004BCC80, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_1002AD80C;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)&v66 = sub_1002AE2B8;
  *((_QWORD *)&v66 + 1) = v24;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v65 = sub_1002AE2BC;
  *((_QWORD *)&v65 + 1) = &unk_1004BCC98;
  v25 = _Block_copy(&aBlock);
  v26 = *((_QWORD *)&v66 + 1);
  v27 = a1;
  swift_retain();
  swift_release(v26);
  objc_msgSend(v22, "enumerateSectionsUsingBlock:", v25);

  _Block_release(v25);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v24, "", 114, 75, 50, 1);
  swift_release(v24);
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&aBlock = v63;
    v28 = sub_10003F544(&qword_1005601D8);
    v29 = sub_10002F9C8(&qword_1005601E0, &qword_1005601D8, (uint64_t)&protocol conformance descriptor for EnumeratedSequence<A>);
    Sequence.publisher.getter(v28, v29);
    v30 = *(_OWORD *)(v2 + 32);
    aBlock = *(_OWORD *)(v2 + 16);
    v65 = v30;
    v66 = *(_OWORD *)(v2 + 48);
    v31 = swift_allocObject(&unk_1004BCC08, 24, 7);
    swift_weakInit(v31 + 16, v2);
    sub_10000A520(v2 + 80, (uint64_t)v62);
    v32 = swift_allocObject(&unk_1004BCCD0, 112, 7);
    v33 = v65;
    *(_OWORD *)(v32 + 16) = aBlock;
    *(_OWORD *)(v32 + 32) = v33;
    *(_OWORD *)(v32 + 48) = v66;
    sub_10002099C(v62, v32 + 64);
    *(_QWORD *)(v32 + 104) = v31;
    v34 = swift_allocObject(&unk_1004BCCF8, 32, 7);
    *(_QWORD *)(v34 + 16) = sub_1002AD854;
    *(_QWORD *)(v34 + 24) = v32;
    v35 = sub_10003F544(&qword_1005601E8);
    v36 = sub_10002F9C8(&qword_1005601F0, &qword_1005601B8, (uint64_t)&protocol conformance descriptor for Publishers.Sequence<A, B>);
    v37 = sub_10002F9C8(&qword_1005601F8, &qword_1005601E8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v38 = v53;
    Publisher<>.flatMap<A>(maxPublishers:_:)(10, sub_1002AD77C, v34, v53, v35, v36, v37);
    swift_release(v34);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v5, v38);
    v39 = sub_10002F9C8((unint64_t *)&unk_100560200, &qword_1005601C0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    v40 = v55;
    v41 = v56;
    Publisher.collect()(v55, v39);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v40);
    v42 = sub_10003F544((uint64_t *)&unk_1005544E0);
    v43 = sub_10002F9C8(&qword_100560210, &qword_1005601C8, (uint64_t)&protocol conformance descriptor for Publishers.Collect<A>);
    v44 = v58;
    v45 = v59;
    Publisher.map<A>(_:)(sub_1002ACCB4, 0, v58, v42, v43);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v44);
    v46 = swift_allocObject(&unk_1004BCC08, 24, 7);
    swift_weakInit(v46 + 16, v2);
    v47 = sub_10002F9C8(&qword_100560218, &qword_1005601D0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v48 = v61;
    v49 = Publisher.sink(receiveCompletion:receiveValue:)(sub_1002ACD28, 0, sub_1002AD888, v46, v61, v47);
    swift_release(v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v48);
    v50 = *(_QWORD *)(v2 + 144);
    *(_QWORD *)(v2 + 144) = v49;
    swift_release(v50);
    v51 = v63;
    swift_release(v23);
    swift_bridgeObjectRelease(v51);
  }
}

char *sub_1002AC234()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  char *result;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _OWORD *v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69[2];
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v1 = v0;
  v2 = sub_10003F544(&qword_100560138);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = v2;
  __chkstk_darwin(v2);
  v63 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10003F544(&qword_100560140);
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  __chkstk_darwin(v4);
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544((uint64_t *)&unk_100560148);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v15 = static OS_os_log.carPlay.getter(v14);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "CarPlayPlayingNextProvider: Load items called.", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v19 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v20 = objc_msgSend(v19, "compositeManifest");

  result = (char *)objc_msgSend(v20, "currentIndex");
  v22 = result + 1;
  if (result == (char *)-1)
  {
    __break(1u);
  }
  else
  {
    v23 = result;
    v59 = v9;
    v60 = v7;
    v61 = v6;
    v62 = v1;
    v24 = swift_allocObject(&unk_1004BCB90, 24, 7);
    v25 = _swiftEmptyArrayStorage;
    *(_QWORD *)(v24 + 16) = _swiftEmptyArrayStorage;
    v26 = (uint64_t)objc_msgSend(v20, "count");
    if (v26 >= 1 && (unint64_t)v22 < v26)
    {
      v27 = (unint64_t)(v23 + 2);
      do
      {
        v28 = objc_msgSend(v20, "objectAtIndex:", v27 - 1);
        if (!v28)
          break;
        v29 = v28;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
        *(_QWORD *)(v24 + 16) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v25 = sub_10027B614(0, v25[2] + 1, 1, v25);
          *(_QWORD *)(v24 + 16) = v25;
        }
        v32 = v25[2];
        v31 = v25[3];
        if (v32 >= v31 >> 1)
          v25 = sub_10027B614((_QWORD *)(v31 > 1), v32 + 1, 1, v25);
        v25[2] = v32 + 1;
        v33 = &v25[2 * v32];
        v33[4] = v27 - 1;
        v33[5] = v29;
        *(_QWORD *)(v24 + 16) = v25;

        v34 = (uint64_t)objc_msgSend(v20, "count");
        if (v34 < 1)
          break;
      }
      while (v27++ < v34);
    }
    *(_QWORD *)&v70 = v25;
    v36 = sub_10003F544(&qword_100560158);
    v37 = sub_10002F9C8(&qword_100560160, &qword_100560158, (uint64_t)&protocol conformance descriptor for [A]);
    v38 = v63;
    Sequence.publisher.getter(v36, v37);
    v39 = v62;
    v40 = v62[2];
    v70 = v62[1];
    v71 = v40;
    v72 = v62[3];
    sub_10000A520((uint64_t)(v62 + 5), (uint64_t)v69);
    v41 = swift_allocObject(&unk_1004BCBB8, 112, 7);
    v42 = v71;
    *(_OWORD *)(v41 + 16) = v70;
    *(_OWORD *)(v41 + 32) = v42;
    *(_OWORD *)(v41 + 48) = v72;
    sub_10002099C(v69, v41 + 64);
    *(_QWORD *)(v41 + 104) = v39;
    v43 = swift_allocObject(&unk_1004BCBE0, 32, 7);
    *(_QWORD *)(v43 + 16) = sub_1002AD76C;
    *(_QWORD *)(v43 + 24) = v41;
    swift_retain();
    v44 = sub_10003F544(&qword_100560168);
    v45 = sub_10002F9C8(&qword_100560170, &qword_100560138, (uint64_t)&protocol conformance descriptor for Publishers.Sequence<A, B>);
    v46 = sub_10002F9C8(&qword_100560178, &qword_100560168, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v47 = v64;
    v48 = v66;
    Publisher<>.flatMap<A>(maxPublishers:_:)(10, sub_1002AD77C, v43, v66, v44, v45, v46);
    swift_release(v43);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v48);
    v49 = sub_10002F9C8(&qword_100560180, &qword_100560140, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
    v50 = v59;
    v51 = v68;
    Publisher.collect()(v68, v49);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v51);
    v52 = swift_allocObject(&unk_1004BCC08, 24, 7);
    swift_weakInit(v52 + 16, v39);
    v53 = swift_allocObject(&unk_1004BCC30, 32, 7);
    *(_QWORD *)(v53 + 16) = v24;
    *(_QWORD *)(v53 + 24) = v52;
    v54 = sub_10002F9C8(&qword_100560188, (uint64_t *)&unk_100560148, (uint64_t)&protocol conformance descriptor for Publishers.Collect<A>);
    swift_retain();
    v55 = v61;
    v56 = Publisher.sink(receiveCompletion:receiveValue:)(sub_1002ACD28, 0, sub_1002AD7D0, v53, v61, v54);

    swift_release(v53);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v55);
    v57 = *((_QWORD *)v39 + 17);
    *((_QWORD *)v39 + 17) = v56;
    swift_release(v24);
    return (char *)swift_release(v57);
  }
  return result;
}

_QWORD *sub_1002AC81C()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:name:object:", v0, IMPlayerManifestDidChange, 0);

  swift_release(v0[8]);
  swift_release(v0[9]);
  sub_10003D380(v0 + 10);
  swift_release(v0[15]);
  swift_bridgeObjectRelease(v0[16]);
  swift_release(v0[17]);
  swift_release(v0[18]);
  return v0;
}

uint64_t sub_1002AC8B8()
{
  uint64_t v0;

  sub_1002AC81C();
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for CarPlayPlayingNextProvider()
{
  return objc_opt_self(_TtC8Podcasts26CarPlayPlayingNextProvider);
}

uint64_t sub_1002AC920(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v25;

  v9 = sub_10003F544(&qword_100560228);
  __chkstk_darwin(v9);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  v15 = swift_bridgeObjectRelease(v13);
  QueueModelSection.init(tracklistSection:)(v14, v15);
  v16 = type metadata accessor for QueueModelSection(0);
  LODWORD(v13) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v11, 1, v16);
  result = sub_1002AE248((uint64_t)v11);
  if ((_DWORD)v13 != 1)
  {
    v18 = objc_msgSend(a4, "displayItems");
    v19 = swift_allocObject(&unk_1004BCD20, 24, 7);
    *(_QWORD *)(v19 + 16) = a5;
    v20 = swift_allocObject(&unk_1004BCD48, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_1002AE298;
    *(_QWORD *)(v20 + 24) = v19;
    aBlock[4] = sub_100029B44;
    v25 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002ACB74;
    aBlock[3] = &unk_1004BCD60;
    v21 = _Block_copy(aBlock);
    v22 = v25;
    swift_retain();
    swift_release(v22);
    objc_msgSend(v18, "enumerateItemsInSectionAtIndex:usingBlock:", a2, v21);

    _Block_release(v21);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 114, 80, 78, 1);
    swift_release(v19);
    result = swift_release(v20);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1002ACB08(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v7 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v7 >= v6 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
  v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
  return specialized Array._endMutation()(v8);
}

void sub_1002ACB74(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_1002ACBC0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  swift_retain();
  v9 = sub_1002E4210(a1, a3, a4, (uint64_t)sub_1002AE240, a5);
  swift_release(a5);
  return v9;
}

uint64_t sub_1002ACC34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 72);
    swift_retain(v6);
    swift_release(v5);
    v7 = a1;
    PassthroughSubject.send(_:)(&v7);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_1002ACCB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;

  v6 = *a1;
  swift_bridgeObjectRetain(v6);
  sub_1002AD890(&v6);
  v3 = v6;
  v4 = sub_1002AB7F0(v6);
  result = swift_release(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1002ACD2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a2 + 16;
  v10 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v10);
  v11 = swift_bridgeObjectRetain_n(v8, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = (unint64_t)v8 >> 62;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    if (v14)
    {
      if (v8 < 0)
        v33 = v8;
      else
        v33 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v16 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v8);
    v35 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "CarPlayPlayingNextProvider: section total items count is %ld.", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess(v9, &v35, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v18 = result;
    v19 = *(_QWORD *)(result + 64);
    swift_retain();
    swift_release(v18);
    v20 = sub_10003F544((uint64_t *)&unk_100553780);
    v21 = swift_allocObject(v20, 40, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1003CA250;
    if (v14)
    {
      if (v8 < 0)
        v30 = v8;
      else
        v30 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v31 = sub_10003F544(&qword_1005544F0);
      v32 = _bridgeCocoaArray<A>(_:)(v30, v31);
      swift_bridgeObjectRelease(v8);
      v8 = v32;
    }
    else
    {
      swift_bridgeObjectRetain(v8);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
    }
    v23 = objc_allocWithZone((Class)CPListSection);
    v24 = sub_100180784(v8);
    swift_bridgeObjectRelease(v8);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(v23, "initWithItems:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

    *(_QWORD *)(v21 + 32) = v26;
    v34 = v21;
    specialized Array._endMutation()(v27);
    v28 = v34;
    CurrentValueSubject.send(_:)(&v34, v29);
    swift_bridgeObjectRelease(v28);
    return swift_release(v19);
  }
  return result;
}

uint64_t sub_1002AD030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = swift_allocObject(&unk_1004BCC08, 24, 7);
  swift_weakInit(v9 + 16, a5);
  swift_retain();
  v10 = sub_10037EA3C(a1, a3, a4, (uint64_t)sub_1002AD7D8, v9);
  swift_release_n(v9, 2);
  return v10;
}

uint64_t sub_1002AD0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v6, "removeObserver:name:object:", v5, IMPlayerManifestDidChange, 0);
    swift_release(v5);

  }
  swift_beginAccess(v3, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 72);
    swift_retain(v9);
    swift_release(v8);
    v10 = a1;
    PassthroughSubject.send(_:)(&v10);
    return swift_release(v9);
  }
  return result;
}

uint64_t sub_1002AD1C0(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    v7 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v8 = static OS_os_log.carPlay.getter(v7);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v17 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = String.init<A>(describing:)(v12, &type metadata for Never);
      v15 = v14;
      v16 = sub_10003D274(v13, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to prepare manifest: %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_1002AD374(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  _DWORD *v18;
  _DWORD *v19;
  uint8_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[24];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *a1;
  v11 = a3 + 16;
  v12 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v12);
  swift_retain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = v6;
    v17 = v16;
    *(_DWORD *)v16 = 134217984;
    v18 = v16 + 12;
    v19 = v16 + 4;
    swift_beginAccess(a2 + 16, v38, 0, 0);
    v40 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v19, v18);
    swift_release(a2);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "CarPlayPlayingNextProvider: section total items count is %ld.", v17, 0xCu);
    v20 = v17;
    v6 = v37;
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_release(a2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess(v11, &v40, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v22 = result;
    v23 = *(_QWORD *)(result + 64);
    swift_retain();
    swift_release(v22);
    v24 = sub_10003F544((uint64_t *)&unk_100553780);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1003CA250;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v34 = v10;
      else
        v34 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v35 = sub_10003F544(&qword_1005544F0);
      v36 = _bridgeCocoaArray<A>(_:)(v34, v35);
      swift_bridgeObjectRelease(v10);
      v10 = v36;
    }
    else
    {
      swift_bridgeObjectRetain(v10);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    }
    v27 = objc_allocWithZone((Class)CPListSection);
    v28 = sub_100180784(v10);
    swift_bridgeObjectRelease(v10);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v27, "initWithItems:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    *(_QWORD *)(v25 + 32) = v30;
    v39 = v25;
    specialized Array._endMutation()(v31);
    v32 = v39;
    CurrentValueSubject.send(_:)(&v39, v33);
    swift_bridgeObjectRelease(v32);
    return swift_release(v23);
  }
  return result;
}

uint64_t sub_1002AD664()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544((uint64_t *)&unk_100561A60);
  v1 = sub_10002F9C8(&qword_100560130, (uint64_t *)&unk_100561A60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1002AD6D4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544((uint64_t *)&unk_1005550F0);
  v1 = sub_10002F9C8(&qword_100554FB0, (uint64_t *)&unk_1005550F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1002AD744()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AD76C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AD030(a1, a2, v2 + 16, v2 + 64, *(_QWORD *)(v2 + 104));
}

uint64_t sub_1002AD780()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AD7A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AD7D0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002AD374(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002AD7D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002AD0CC(a1, v1);
}

uint64_t sub_1002AD7E0(void **a1)
{
  uint64_t v1;

  return sub_1002ABBB0(a1, v1);
}

uint64_t sub_1002AD7E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AD80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002AC920(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1002AD814()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AD828()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1002AD854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002ACBC0(a1, a2, (_OWORD *)(v2 + 16), v2 + 64, *(_QWORD *)(v2 + 104));
}

uint64_t sub_1002AD864()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AD888(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002ACD2C(a1, v1);
}

void sub_1002AD890(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_1001FB2C8(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1002AD8F8(v4);
  *a1 = v2;
}

void sub_1002AD8F8(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  Swift::Int v105;
  Swift::Int v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v88 = 0;
      v89 = *a1;
      v90 = 1;
      while (1)
      {
        v91 = *(_QWORD *)(v89 + 16 * v90);
        v92 = v88;
        do
        {
          if (v91 >= *(_QWORD *)(v89 + v92))
            break;
          if (!v89)
            goto LABEL_142;
          v93 = (_QWORD *)(v89 + v92);
          v94 = *(_QWORD *)(v89 + v92 + 24);
          *(_OWORD *)(v89 + v92 + 16) = *(_OWORD *)(v89 + v92);
          *v93 = v91;
          v93[1] = v94;
          v92 -= 16;
        }
        while (v92 != -16);
        ++v90;
        v88 += 16;
        if (v90 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v102 = a1;
  if (v3 < 2)
  {
    v10 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_10003F544(&qword_100560220);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v104 = (_QWORD *)v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v103 = *a1 + 32;
  v101 = *a1 - 16;
  v13 = (char *)_swiftEmptyArrayStorage;
  v105 = v6;
  v106 = v3;
  v107 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v3)
    {
      v16 = *(_QWORD *)(v12 + 16 * v11);
      v17 = 16 * v15;
      v18 = *(_QWORD *)(v12 + 16 * v15);
      v11 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v19 = (uint64_t *)(v103 + 16 * v15);
        v20 = v16;
        while (1)
        {
          v22 = *v19;
          v19 += 2;
          v21 = v22;
          if (v16 < v18 == v22 >= v20)
            break;
          ++v11;
          v20 = v21;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
      }
      if (v16 < v18)
      {
        if (v11 < v15)
          goto LABEL_139;
        if (v15 < v11)
        {
          v23 = 16 * v11;
          v24 = v11;
          v25 = v15;
          do
          {
            if (v25 != --v24)
            {
              if (!v12)
                goto LABEL_145;
              v26 = v12 + v23;
              v27 = *(_QWORD *)(v12 + v17);
              v28 = *(_QWORD *)(v12 + v17 + 8);
              *(_OWORD *)(v12 + v17) = *(_OWORD *)(v12 + v23 - 16);
              *(_QWORD *)(v26 - 16) = v27;
              *(_QWORD *)(v26 - 8) = v28;
            }
            ++v25;
            v23 -= 16;
            v17 += 16;
          }
          while (v25 < v24);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_137;
      if (v11 - v15 < v6)
      {
        v29 = v15 + v6;
        if (__OFADD__(v15, v6))
          goto LABEL_140;
        if (v29 >= v3)
          v29 = v3;
        if (v29 < v15)
          goto LABEL_141;
        if (v11 != v29)
        {
          v30 = v101 + 16 * v11;
          do
          {
            v31 = *(_QWORD *)(v12 + 16 * v11);
            v32 = v15;
            v33 = v30;
            do
            {
              if (v31 >= *(_QWORD *)v33)
                break;
              if (!v12)
                goto LABEL_143;
              v34 = *(_QWORD *)(v33 + 24);
              *(_OWORD *)(v33 + 16) = *(_OWORD *)v33;
              *(_QWORD *)v33 = v31;
              *(_QWORD *)(v33 + 8) = v34;
              v33 -= 16;
              ++v32;
            }
            while (v11 != v32);
            ++v11;
            v30 += 16;
          }
          while (v11 != v29);
          v11 = v29;
        }
      }
    }
    if (v11 < v15)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_1001FA388(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v36 = *((_QWORD *)v13 + 2);
    v35 = *((_QWORD *)v13 + 3);
    v14 = v36 + 1;
    v12 = v107;
    if (v36 >= v35 >> 1)
    {
      v85 = sub_1001FA388((char *)(v35 > 1), v36 + 1, 1, v13);
      v12 = v107;
      v13 = v85;
    }
    *((_QWORD *)v13 + 2) = v14;
    v37 = v13 + 32;
    v38 = &v13[16 * v36 + 32];
    *(_QWORD *)v38 = v15;
    *((_QWORD *)v38 + 1) = v11;
    if (v36)
      break;
    v14 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v11 >= v106)
    {
      v10 = v104;
LABEL_104:
      v87 = v13;
      v104 = v10;
      if (v14 < 2)
        goto LABEL_95;
      v95 = *v102;
      while (1)
      {
        v96 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v95)
          goto LABEL_146;
        v86 = v87;
        v97 = *(_QWORD *)&v87[16 * v96 + 32];
        v98 = *(_QWORD *)&v87[16 * v14 + 24];
        sub_1002ADFC8((char *)(v95 + 16 * v97), (char *)(v95 + 16 * *(_QWORD *)&v87[16 * v14 + 16]), v95 + 16 * v98, __dst);
        if (v1)
          goto LABEL_94;
        if (v98 < v97)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          v86 = sub_1001FA68C((uint64_t)v86);
        if (v96 >= *((_QWORD *)v86 + 2))
          goto LABEL_135;
        v99 = &v86[16 * v96 + 32];
        *(_QWORD *)v99 = v97;
        *((_QWORD *)v99 + 1) = v98;
        v100 = *((_QWORD *)v86 + 2);
        if (v14 > v100)
          goto LABEL_136;
        memmove(&v86[16 * v14 + 16], &v86[16 * v14 + 32], 16 * (v100 - v14));
        v87 = v86;
        *((_QWORD *)v86 + 2) = v100 - 1;
        v14 = v100 - 1;
        if (v100 <= 2)
          goto LABEL_95;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v39 = v14 - 1;
    if (v14 >= 4)
    {
      v44 = &v37[16 * v14];
      v45 = *((_QWORD *)v44 - 8);
      v46 = *((_QWORD *)v44 - 7);
      v50 = __OFSUB__(v46, v45);
      v47 = v46 - v45;
      if (v50)
        goto LABEL_121;
      v49 = *((_QWORD *)v44 - 6);
      v48 = *((_QWORD *)v44 - 5);
      v50 = __OFSUB__(v48, v49);
      v42 = v48 - v49;
      v43 = v50;
      if (v50)
        goto LABEL_122;
      v51 = v14 - 2;
      v52 = &v37[16 * v14 - 32];
      v54 = *(_QWORD *)v52;
      v53 = *((_QWORD *)v52 + 1);
      v50 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      if (v50)
        goto LABEL_124;
      v50 = __OFADD__(v42, v55);
      v56 = v42 + v55;
      if (v50)
        goto LABEL_127;
      if (v56 >= v47)
      {
        v74 = &v37[16 * v39];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v50 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v50)
          goto LABEL_131;
        v67 = v42 < v77;
        goto LABEL_83;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v68 = *((_QWORD *)v13 + 4);
        v69 = *((_QWORD *)v13 + 5);
        v50 = __OFSUB__(v69, v68);
        v61 = v69 - v68;
        v62 = v50;
        goto LABEL_77;
      }
      v41 = *((_QWORD *)v13 + 4);
      v40 = *((_QWORD *)v13 + 5);
      v50 = __OFSUB__(v40, v41);
      v42 = v40 - v41;
      v43 = v50;
    }
    if ((v43 & 1) != 0)
      goto LABEL_123;
    v51 = v14 - 2;
    v57 = &v37[16 * v14 - 32];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v60 = __OFSUB__(v58, v59);
    v61 = v58 - v59;
    v62 = v60;
    if (v60)
      goto LABEL_126;
    v63 = &v37[16 * v39];
    v65 = *(_QWORD *)v63;
    v64 = *((_QWORD *)v63 + 1);
    v50 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v50)
      goto LABEL_129;
    if (__OFADD__(v61, v66))
      goto LABEL_130;
    if (v61 + v66 >= v42)
    {
      v67 = v42 < v66;
LABEL_83:
      if (v67)
        v39 = v51;
      goto LABEL_85;
    }
LABEL_77:
    if ((v62 & 1) != 0)
      goto LABEL_125;
    v70 = &v37[16 * v39];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v50 = __OFSUB__(v71, v72);
    v73 = v71 - v72;
    if (v50)
      goto LABEL_128;
    if (v73 < v61)
      goto LABEL_15;
LABEL_85:
    v78 = v39 - 1;
    if (v39 - 1 >= v14)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v12)
      goto LABEL_144;
    v79 = v13;
    v80 = &v37[16 * v78];
    v81 = *(_QWORD *)v80;
    v82 = &v37[16 * v39];
    v83 = *((_QWORD *)v82 + 1);
    sub_1002ADFC8((char *)(v12 + 16 * *(_QWORD *)v80), (char *)(v12 + 16 * *(_QWORD *)v82), v12 + 16 * v83, __dst);
    if (v1)
      break;
    if (v83 < v81)
      goto LABEL_118;
    if (v39 > *((_QWORD *)v79 + 2))
      goto LABEL_119;
    *(_QWORD *)v80 = v81;
    *(_QWORD *)&v37[16 * v78 + 8] = v83;
    v84 = *((_QWORD *)v79 + 2);
    if (v39 >= v84)
      goto LABEL_120;
    v13 = v79;
    v14 = v84 - 1;
    memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
    *((_QWORD *)v79 + 2) = v84 - 1;
    v12 = v107;
    if (v84 <= 2)
      goto LABEL_15;
  }
  v86 = v79;
LABEL_94:
  v87 = v86;
LABEL_95:
  swift_bridgeObjectRelease(v87);
  v104[2] = 0;
  swift_bridgeObjectRelease(v104);
}

uint64_t sub_1002ADFC8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1001FA480((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002AE240(uint64_t a1)
{
  uint64_t v1;

  return sub_1002ACC34(a1, v1);
}

uint64_t sub_1002AE248(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_100560228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002AE288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AE298(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002ACB08(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

uint64_t sub_1002AE2A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AE2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  unint64_t v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  unint64_t v12;
  _BYTE v13[24];

  swift_beginAccess(v0 + 24, v13, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  if (v1
    && (v2 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0),
        swift_dynamicCastClass(v1, v2)))
  {
    v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = 0xAE00A680E2747865;
    v4 = 0x80000001004355B0;
    v5 = 0xD000000000000014;
    v6.super.isa = v3;
    v7 = 0;
    v8 = 0xE000000000000000;
    v9 = 0x54207463656C6553;
  }
  else
  {
    v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = 0xEF7470697263736ELL;
    v5 = 0x4152545F57454956;
    v4 = 0xEF5450495243534ELL;
    v6.super.isa = v3;
    v7 = 0;
    v8 = 0xE000000000000000;
    v9 = 0x6172542077656956;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)&v9)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002AE42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(__n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];

  v1 = v0;
  v2 = sub_10003F544(&qword_10055D198);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for InteractionContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((static Podcasts.areTranscriptsEnabled.getter(v10) & 1) == 0)
    return 0;
  swift_beginAccess(v0 + 24, v23, 0, 0);
  v13 = *(_QWORD *)(v0 + 24);
  if (v13)
  {
    v14 = *(void (**)(__n128))(*(_QWORD *)v13 + 168);
    v15 = swift_retain();
    v14(v15);
    v16 = swift_release(v13);
    InteractionContext.page.getter(v16);
    v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    v18 = InteractionContext.Page.isEpisodeDetailTranscriptsPage.getter(v17);
    sub_10017603C((uint64_t)v7);
    if ((v18 & 1) == 0 && *(_QWORD *)(v1 + 16))
    {
      v19 = v1 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
      swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo, v22, 0, 0);
      sub_100007A64(v19, (uint64_t)v4, &qword_10055D198);
      v20 = type metadata accessor for TranscriptRequestInformation(0);
      v13 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v4, 1, v20) != 1;
      sub_100007A28((uint64_t)v4, &qword_10055D198);
      return v13;
    }
    return 0;
  }
  return v13;
}

uint64_t sub_1002AE604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[5];

  v3 = sub_10003F544(&qword_100555600);
  v4 = __chkstk_darwin(v3);
  v16[4] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v16 - v7;
  __chkstk_darwin(v6);
  v9 = sub_10003F544(&qword_10055D198);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for EpisodeOffer(0);
  result = __chkstk_darwin(v14);
  if (a1)
  {
    v16[1] = v12;
    v16[2] = v8;
    v16[3] = v1;
    __asm { BR              X10 }
  }
  return result;
}

void sub_1002AEF50(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD v40[3];

  v4 = sub_10003F544(&qword_10055D198);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544(&qword_100555600);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v37 - v11;
  if (a1)
  {
    v39 = a1;
    if ((objc_msgSend(v39, "isRestricted") & 1) != 0
      || (v13 = objc_msgSend(v39, "isEntitled"), !(_DWORD)v13)
      || (v14 = MTEpisode.contentId.getter(v13), (v15 & 1) != 0)
      || (v16 = v14, (v17 = objc_msgSend(v39, "transcriptIdentifier")) == 0))
    {

    }
    else
    {
      v18 = v17;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      v21 = objc_msgSend(v39, "transcriptProvider");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      TranscriptSource.init(rawValue:)(v22, v24);
      v40[0] = v16;
      v25 = sub_100030584();
      v26 = BinaryInteger.description.getter(&type metadata for UInt64, v25);
      v28 = v27;
      v29 = objc_msgSend(v39, "title");
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

      }
      else
      {
        v31 = 0;
        v33 = 0;
      }
      sub_100007A64((uint64_t)v12, (uint64_t)v10, &qword_100555600);
      TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:source:)(v26, v28, v31, v33, v38, v20, 0, 0, v34, 1, v10);

      sub_100007A28((uint64_t)v12, &qword_100555600);
      v35 = type metadata accessor for TranscriptRequestInformation(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 0, 1, v35);
      v36 = a2 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
      swift_beginAccess(v36, v40, 33, 0);
      sub_1002AFEC8((uint64_t)v6, v36);
      swift_endAccess(v40);
    }
  }
}

void sub_1002AF214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v19;
  void (*v20)(__n128);
  __n128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  __n128 v37;
  char *v38;
  char v39[24];
  char v40[24];
  char v41[24];

  v1 = sub_10003F544(qword_1005542D8);
  __chkstk_darwin(v1);
  v3 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for PresentationSource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v38 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10003F544(&qword_10055D198);
  __chkstk_darwin(v7);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for TranscriptRequestInformation(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v0 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo, v41, 0, 0);
  sub_100007A64(v14, (uint64_t)v9, &qword_10055D198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v15 = &qword_10055D198;
    v16 = (uint64_t)v9;
LABEL_20:
    sub_100007A28(v16, v15);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v17 = (uint64_t *)(v0 + 24);
  v18 = swift_beginAccess(v0 + 24, v40, 0, 0);
  v19 = *(_QWORD *)(v0 + 24);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v18);
    goto LABEL_19;
  }
  v20 = *(void (**)(__n128))(*(_QWORD *)v19 + 120);
  v21 = swift_retain();
  v20(v21);
  swift_release(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_19:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = qword_1005542D8;
    v16 = (uint64_t)v3;
    goto LABEL_20;
  }
  v22 = v38;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v38, v3, v4);
  v23 = *v17;
  if (!*v17)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  v24 = *(_QWORD *)(v23 + 16);
  v25 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
  v26 = swift_dynamicCastClass(v23, v25);
  if (!v26
    || (v27 = (double *)(v26
                       + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime),
        (*(_BYTE *)(v26
                  + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime
                  + 8) & 1) != 0)
    || (v28 = (double *)(v26
                       + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime),
        (*(_BYTE *)(v26
                  + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceEndTime
                  + 8) & 1) != 0))
  {
    swift_retain();
  }
  else
  {
    v35 = *v27;
    v36 = *v28;
    if (*v27 > *v28)
    {
      __break(1u);
      goto LABEL_26;
    }
    v37 = swift_retain();
    TranscriptRequestInformation.selectedTextTimeInterval.setter(*(_QWORD *)&v35, *(_QWORD *)&v36, 0, v37);
    v23 = *v17;
    v22 = v38;
    if (!*v17)
    {
LABEL_23:
      v33 = (id)PresentationSource.viewController.getter();
      if (!v33)
        goto LABEL_16;
      goto LABEL_15;
    }
  }
  v29 = swift_dynamicCastClass(v23, v25);
  if (!v29)
  {
    v30 = type metadata accessor for NowPlayingContextActionConfiguration(0);
    v29 = swift_dynamicCastClass(v23, v30);
    if (!v29)
      goto LABEL_23;
  }
  v31 = (_QWORD *)NowPlayingDataProvider.shared.unsafeMutableAddressor(v29);
  swift_beginAccess(v31, v39, 0, 0);
  if (*v31)
  {
    v32 = (void *)v31[12];
    if (!v32)
    {
LABEL_16:
      swift_release(v24);
      goto LABEL_17;
    }
    v33 = v32;
LABEL_15:
    v34 = v33;
    sub_1002AF89C(v24, (uint64_t)v13, v33);

    goto LABEL_16;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1002AF5A4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_100007A28((uint64_t)v0 + OBJC_IVAR____TtC8Podcasts27ViewTranscriptContextAction_transcriptInfo, &qword_10055D198);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002AF5EC()
{
  return type metadata accessor for ViewTranscriptContextAction(0);
}

uint64_t type metadata accessor for ViewTranscriptContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100560260;
  if (!qword_100560260)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ViewTranscriptContextAction);
  return result;
}

void sub_1002AF630(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = "\b";
  sub_1002AF6A8(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1002AF6A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100560270)
  {
    v2 = type metadata accessor for TranscriptRequestInformation(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100560270);
  }
}

uint64_t sub_1002AF700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 24, v4, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  if (v1
    && (v2 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0),
        swift_dynamicCastClass(v1, v2)))
  {
    return 0xD000000000000014;
  }
  else
  {
    return 0x75622E65746F7571;
  }
}

uint64_t sub_1002AF78C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MetricsLabel.viewTranscript(_:);
  v3 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1002AF7D0()
{
  return 16;
}

double sub_1002AF7E0(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;

  if ((static Podcasts.areTranscriptsEnabled.getter(a1) & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    swift_retain();
    sub_1002AE604(v4);
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

BOOL sub_1002AF820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v0 + 24, v5, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
    v3 = swift_dynamicCastClass(v1, v2);
    if (v3)
      swift_retain(v1);
  }
  else
  {
    v3 = 0;
  }
  swift_release(v3);
  return v3 != 0;
}

uint64_t sub_1002AF89C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  int v35;
  unsigned __int8 v36;
  void *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[32];
  _QWORD v78[5];
  _OWORD v79[3];

  v67 = a2;
  v5 = type metadata accessor for OSLogger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionMetricsBehavior(0);
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  __chkstk_darwin(v9);
  v74 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v11);
  v66 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowDestinationPageHeader(0);
  v70 = *(_QWORD *)(v13 - 8);
  v71 = v13;
  __chkstk_darwin(v13);
  v69 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FlowPresentationContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v68 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FlowDestination(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10003F544((uint64_t *)&unk_100554530);
  v72 = a1;
  v23 = BaseObjectGraph.injectIfAvailable<A>(_:)(v78, v22, v22);
  v73 = a3;
  if (v78[0])
  {
    v65 = v78[0];
    v64 = v78[1];
  }
  else
  {
    v24 = UIResponder.nearestActionRunner.getter(v23);
    if (!v24)
    {
      static OSLogger.actions.getter(0);
      v59 = sub_10003F544(&qword_100557CA8);
      v60 = type metadata accessor for LogMessage(0);
      v61 = swift_allocObject(v59, ((*(unsigned __int8 *)(*(_QWORD *)(v60 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v60 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v60 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v60 - 8) + 80) | 7);
      *(_OWORD *)(v61 + 16) = xmmword_1003CA200;
      LogMessage.init(stringLiteral:)(0xD00000000000004ALL, 0x8000000100439DA0);
      Logger.error(_:)(v61, v5, &protocol witness table for OSLogger);
      v62 = swift_bridgeObjectRelease(v61);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v62);
    }
    v64 = v25;
    v65 = v24;
  }
  v26 = sub_10003F544(&qword_1005612A0);
  v27 = swift_allocObject(v26, 72, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1003CA200;
  v28 = type metadata accessor for TranscriptRequestInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v67, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for FlowDestination.episodeDetailTranscript(_:), v18);
  v29 = v68;
  v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104))(v68, enum case for FlowPresentationContext.pushDetail(_:), v15);
  v31 = static Link.Presentation.textFollowsTintColor.getter(v30);
  v32 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v33 = Link.Presentation.init(rawValue:)(0);
  v34 = Link.Presentation.init(rawValue:)(v33);
  if (Link.Presentation.init(rawValue:)(v34 & v31) != v31)
    v33 = Link.Presentation.init(rawValue:)(v33 | v31);
  v35 = Link.Presentation.init(rawValue:)(v33);
  v36 = Link.Presentation.init(rawValue:)(v35 & v32);
  v37 = v73;
  if (v36 != v32)
    v33 = Link.Presentation.init(rawValue:)(v33 | v32);
  v38 = v69;
  v39 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for FlowDestinationPageHeader.standard(_:), v71);
  v40 = v66;
  static ActionMetrics.notInstrumented.getter(v39);
  v41 = type metadata accessor for FlowAction(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v21, 0, 0, 0, 0, v29, 0, v33, v38, v40);
  *(_QWORD *)(v27 + 56) = v41;
  *(_QWORD *)(v27 + 64) = sub_1001D60D8((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction);
  *(_QWORD *)(v27 + 32) = v42;
  v43 = Link.Presentation.init(rawValue:)(0);
  LOBYTE(v42) = v43;
  static ActionMetrics.notInstrumented.getter(v43);
  v44 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
  LOBYTE(v63) = v42;
  v45 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 10, v27, 0, 0, 0, 1, v63, v40);
  type metadata accessor for ActionRunnerOptions(0);
  v46 = swift_retain();
  v47 = BaseObjectGraph.__allocating_init(_:)(v46);
  memset(v79, 0, 32);
  v48 = objc_msgSend(v37, "view");
  sub_100007A64((uint64_t)v79, (uint64_t)v77, (uint64_t *)&unk_100552300);
  v49 = v48;
  ActionOrigin.init(sender:view:)(v78, v77, v48);
  v50 = ActionRunnerOptions.withActionOrigin(_:)(v78);
  sub_100007A28((uint64_t)v78, (uint64_t *)&unk_100557CB0);
  swift_release(v47);

  sub_100007A28((uint64_t)v79, (uint64_t *)&unk_100552300);
  v51 = v65;
  ObjectType = swift_getObjectType(v65, v52);
  v78[3] = v44;
  v78[4] = sub_1001D60D8((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction);
  v78[0] = v45;
  v55 = v74;
  v54 = v75;
  v56 = v76;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for ActionMetricsBehavior.notProcessed(_:), v76);
  swift_retain();
  v57 = ActionRunner.perform(_:withMetrics:asPartOf:)(v78, v55, v50, ObjectType, v64);
  swift_release(v45);
  swift_unknownObjectRelease(v51);
  swift_release(v50);
  swift_release(v57);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
  return sub_10003D380(v78);
}

uint64_t sub_1002AFEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055D198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AFF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_100555600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002AFF58(void *a1)
{
  uint64_t v1;

  sub_1002AEF50(a1, v1);
}

uint64_t sub_1002AFF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v2 = v1;
  v21 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002C5E0();
  static DispatchQoS.unspecified.getter(v20);
  v22 = _swiftEmptyArrayStorage;
  v13 = sub_100026844((unint64_t *)&qword_1005521B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_10003F544(&qword_100555A00);
  v15 = sub_10003AEC0((unint64_t *)&qword_1005521C0, &qword_100555A00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v14, v15, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  *(_QWORD *)(v2 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0x656C74746F726854, 0xEE00657565755172, v12, v9, v6, 0);
  *(_BYTE *)(v2 + 24) = 0;
  v16 = v2 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  v17 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, v21, v17);
  return v2;
}

uint64_t sub_1002B015C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD aBlock[5];
  char *v37;

  v3 = v2;
  v29 = a1;
  v30 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTimeInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v3 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  v31 = *(_QWORD *)(v3 + 16);
  v15 = swift_allocObject(&unk_1004BCE98, 24, 7);
  swift_weakInit(v15 + 16, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (char *)swift_allocObject(&unk_1004BCEC0, v17 + v12, v16 | 7);
  v19 = v29;
  v20 = v30;
  *((_QWORD *)v18 + 2) = v15;
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], v13, v10);
  aBlock[4] = sub_1002B08FC;
  v37 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BCED8;
  v21 = _Block_copy(aBlock);
  swift_retain(v15);
  swift_retain(v20);
  static DispatchQoS.unspecified.getter(v22);
  v35 = _swiftEmptyArrayStorage;
  v23 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10003F544((uint64_t *)&unk_10055B200);
  v25 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
  v26 = v37;
  swift_release(v15);
  return swift_release(v26);
}

uint64_t sub_1002B0404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t Strong;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD aBlock[5];
  _QWORD *v37;
  _BYTE v38[24];
  _BYTE v39[24];

  v34 = a4;
  v7 = type metadata accessor for DispatchTime(0);
  v33 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v32 - v11;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + 16;
  swift_beginAccess(a1 + 16, v39, 0, 0);
  result = swift_weakLoadStrong(a1 + 16);
  if (result)
  {
    v18 = *(_BYTE *)(result + 24);
    result = swift_release(result);
    if ((v18 & 1) == 0)
    {
      swift_beginAccess(a1 + 16, v38, 0, 0);
      Strong = swift_weakLoadStrong(a1 + 16);
      if (Strong)
      {
        *(_BYTE *)(Strong + 24) = 1;
        swift_release(Strong);
      }
      v20 = (_QWORD *)swift_allocObject(&unk_1004BCF10, 40, 7);
      v20[2] = a2;
      v20[3] = a3;
      v20[4] = a1;
      aBlock[4] = sub_1002B095C;
      v37 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027AF8;
      aBlock[3] = &unk_1004BCF28;
      v21 = _Block_copy(aBlock);
      v35 = _swiftEmptyArrayStorage;
      v22 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      swift_retain(a3);
      swift_retain(a1);
      v23 = sub_10003F544((uint64_t *)&unk_10055B200);
      v24 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v23, v24, v13, v22);
      v25 = type metadata accessor for DispatchWorkItem(0);
      swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v26 = DispatchWorkItem.init(flags:block:)(v15, v21);
      swift_release(v37);
      swift_beginAccess(v16, aBlock, 0, 0);
      v27 = swift_weakLoadStrong(v16);
      if (v27)
      {
        v28 = v27;
        v29 = *(id *)(v27 + 16);
        v30 = swift_release(v28);
        static DispatchTime.now()(v30);
        + infix(_:_:)(v10, v34);
        v31 = *(void (**)(char *, uint64_t))(v33 + 8);
        v31(v10, v7);
        OS_dispatch_queue.asyncAfter(deadline:execute:)(v12, v26);

        swift_release(v26);
        return ((uint64_t (*)(char *, uint64_t))v31)(v12, v7);
      }
      else
      {
        return swift_release(v26);
      }
    }
  }
  return result;
}

uint64_t sub_1002B06E8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = a3 + 16;
  a1();
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    *(_BYTE *)(result + 24) = 0;
    return swift_release(result);
  }
  return result;
}

uint64_t sub_1002B073C()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts9Throttler_delay;
  v2 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1002B0794()
{
  return type metadata accessor for Throttler(0);
}

uint64_t type metadata accessor for Throttler(uint64_t a1)
{
  uint64_t result;

  result = qword_100560330;
  if (!qword_100560330)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Throttler);
  return result;
}

uint64_t sub_1002B07D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_1003D3090;
  result = type metadata accessor for DispatchTimeInterval(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002B085C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002B0880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002B08FC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DispatchTimeInterval(0) - 8) + 80);
  return sub_1002B0404(v0[2], v0[3], v0[4], (uint64_t)v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1002B0930()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002B095C()
{
  uint64_t v0;

  return sub_1002B06E8(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t *PodcastsStateCoordinator.shared.unsafeMutableAddressor()
{
  if (qword_1005520B8 != -1)
    swift_once(&qword_1005520B8, sub_10004AB18);
  return &static PodcastsStateCoordinator.shared;
}

void PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void *a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_log_type_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  id v31;
  char *v32;
  void *v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[5];
  _QWORD *v44;

  v6 = v5;
  v12 = type metadata accessor for Logger(0);
  v41 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin();
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v13);
  v16 = static os_log_type_t.default.getter();
  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  if (os_log_type_enabled(v18, v16))
  {
    v19 = swift_slowAlloc(28, -1);
    v36 = v12;
    v20 = v19;
    v21 = swift_slowAlloc(64, -1);
    v40 = a4;
    v22 = v21;
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136315650;
    v38 = v6;
    swift_bridgeObjectRetain(a2);
    v42 = sub_10003D274(a1, a2, aBlock);
    v37 = a5;
    v39 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v42) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, (char *)&v42 + 4, v20 + 14, v20 + 18);
    *(_WORD *)(v20 + 18) = 2080;
    v23 = PodcastsStateChangeOrigin.description.getter(v40);
    v25 = v24;
    v42 = sub_10003D274(v23, v24, aBlock);
    v6 = v38;
    a1 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock, v20 + 20, v20 + 28);
    v26 = v25;
    a5 = v37;
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v18, v16, "Downloading episode with uuid %s (isFromSaving: %{BOOL}d, origin: %s).", (uint8_t *)v20, 0x1Cu);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    v27 = v22;
    a4 = v40;
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v36);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
  }
  v28 = (_QWORD *)swift_allocObject(&unk_1004BCF88, 56, 7);
  v28[2] = a5;
  v28[3] = a1;
  v28[4] = a2;
  v28[5] = v6;
  v28[6] = a4;
  aBlock[4] = (uint64_t)sub_1002B9D5C;
  v44 = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100027AF8;
  aBlock[3] = (uint64_t)&unk_1004BCFA0;
  v29 = _Block_copy(aBlock);
  v30 = v44;
  swift_bridgeObjectRetain(a2);
  v31 = a5;
  v32 = v6;
  swift_release(v30);
  objc_msgSend(v31, "performBlockAndWaitWithSave:", v29);
  _Block_release(v29);
  v33 = *(void **)&v32[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway];
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "downloadEpisode:isFromSaving:", v34, a3 & 1);

}

id static PodcastsStateCoordinator.shared.getter()
{
  _BYTE v1[24];

  if (qword_1005520B8 != -1)
    swift_once(&qword_1005520B8, sub_10004AB18);
  swift_beginAccess(&static PodcastsStateCoordinator.shared, v1, 0, 0);
  return (id)static PodcastsStateCoordinator.shared;
}

void static PodcastsStateCoordinator.shared.setter(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  if (qword_1005520B8 != -1)
    swift_once(&qword_1005520B8, sub_10004AB18);
  swift_beginAccess(&static PodcastsStateCoordinator.shared, v3, 1, 0);
  v2 = (void *)static PodcastsStateCoordinator.shared;
  static PodcastsStateCoordinator.shared = a1;

}

uint64_t (*static PodcastsStateCoordinator.shared.modify(uint64_t a1))(_QWORD)
{
  if (qword_1005520B8 != -1)
    swift_once(&qword_1005520B8, sub_10004AB18);
  swift_beginAccess(&static PodcastsStateCoordinator.shared, a1, 33, 0);
  return j__swift_endAccess;
}

void PodcastsStateCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Podcasts.PodcastsStateCoordinator", 33, "init()", 6, 0);
  __break(1u);
}

id PodcastsStateCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastsStateCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1002B103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v5;
  id v6;

  v5 = *v3;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "enableSubscriptionOnPodcastUUID:from:", v6, a3);

}

void sub_1002B1088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v7;
  id v8;

  v7 = *v4;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "unsafeEnableSubscriptionOnPodcastUUID:from:context:", v8, a3, a4);

}

void sub_1002B10E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v5;
  id v6;

  v5 = *v3;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "disableSubscriptionOnPodcastUUID:from:", v6, a3);

}

void sub_1002B1130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v7;
  id v8;

  v7 = *v4;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "disableSubscriptionOnPodcastUUID:from:context:", v8, a3, a4);

}

void sub_1002B118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v6;
  Class isa;

  v6 = *v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "disableSubscriptionsOnPodcastUUIDs:from:context:", isa, a2, a3);

}

void sub_1002B11F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  PodcastsStateCoordinator.removeShowFromRecentlyUnfollowed(forPodcastUUID:from:)(a1, a2, a3);
}

void PodcastsStateCoordinator.removeShowFromRecentlyUnfollowed(forPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  id v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  char *v12;
  _QWORD v13[5];
  _QWORD *v14;

  v7 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider], "privateQueueContext");
  v8 = (_QWORD *)swift_allocObject(&unk_1004BCFD8, 56, 7);
  v8[2] = v7;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = v3;
  v8[6] = a3;
  v13[4] = sub_1002B9D6C;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100027AF8;
  v13[3] = &unk_1004BCFF0;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v7;
  swift_bridgeObjectRetain(a2);
  v12 = v3;
  objc_msgSend(v11, "performBlock:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

}

void sub_1002B1314(void *a1, char a2, uint64_t a3)
{
  if ((objc_msgSend(a1, "isBookmarked") & 1) == 0)
    sub_1002B5478(a1, 0, 1, a2 & 1, a3);
}

void PodcastsStateCoordinator.unsafeBookmarkIfNeeded(episode:shouldDownloadEpisode:from:)(void *a1, char a2, uint64_t a3)
{
  if ((objc_msgSend(a1, "isBookmarked") & 1) == 0)
    sub_1002B5478(a1, 0, 1, a2 & 1, a3);
}

id sub_1002B13CC(void *a1, uint64_t a2)
{
  void **v2;
  void *v5;
  id result;

  v5 = *v2;
  result = objc_msgSend(a1, "isBookmarked");
  if ((_DWORD)result)
    return objc_msgSend(v5, "unsafeRemoveEpisodeFromBookmarks:from:", a1, a2);
  return result;
}

id PodcastsStateCoordinator.unsafeRemoveEpisodeFromBookmarksIfNeeded(episode:from:)(void *a1, uint64_t a2)
{
  void *v2;
  id result;

  result = objc_msgSend(a1, "isBookmarked");
  if ((_DWORD)result)
    return objc_msgSend(v2, "unsafeRemoveEpisodeFromBookmarks:from:", a1, a2);
  return result;
}

id sub_1002B1488(uint64_t a1, char a2, uint64_t a3)
{
  id *v3;

  return objc_msgSend(*v3, "unsafeBookmarkEpisode:onTimestamp:shouldDownloadEpisode:from:", a1, a2 & 1, a3);
}

id sub_1002B14A8(uint64_t a1, uint64_t a2)
{
  id *v2;

  return objc_msgSend(*v2, "unsafeRemoveEpisodeFromBookmarks:from:", a1, a2);
}

void sub_1002B14C0()
{
  PodcastsStateCoordinator.startTrackingChangesInDownloads()();
}

void sub_1002B14E0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void *a5)
{
  PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1002B1500(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_10056046C);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_100191178;
  return PodcastsStateCoordinator.downloadEpisodes(with:isFromSaving:from:in:)(a1, a2, a3, a4);
}

uint64_t PodcastsStateCoordinator.downloadEpisodes(with:isFromSaving:from:in:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 140) = a2;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a3;
  v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  *(_QWORD *)(v5 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 88) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 96) = v9;
  *(_QWORD *)(v5 + 104) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002B1608, 0, 0);
}

uint64_t sub_1002B1608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  static Logger.podcastsStatesCoordination.getter(a1);
  v2 = static os_log_type_t.default.getter();
  v3 = v2;
  v4 = Logger.logObject.getter(v2);
  v5 = v3;
  if (os_log_type_enabled(v4, v3))
  {
    v6 = *(_QWORD *)(v1 + 96);
    v32 = *(_QWORD *)(v1 + 104);
    v7 = *(_QWORD *)(v1 + 88);
    v8 = *(_QWORD *)(v1 + 40);
    v9 = *(unsigned __int8 *)(v1 + 140);
    v10 = swift_slowAlloc(18, -1);
    v11 = swift_slowAlloc(32, -1);
    v33 = v11;
    *(_DWORD *)v10 = 67109378;
    *(_DWORD *)(v1 + 136) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 140, v10 + 4, v10 + 8);
    *(_WORD *)(v10 + 8) = 2080;
    v12 = PodcastsStateChangeOrigin.description.getter(v8);
    v14 = v13;
    *(_QWORD *)(v1 + 24) = sub_10003D274(v12, v13, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v10 + 10, v10 + 18);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Downloading episodes (isFromSaving: %{BOOL}d, origin: %s).", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v32, v7);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 96);
    v15 = *(_QWORD *)(v1 + 104);
    v17 = *(_QWORD *)(v1 + 88);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v19 = *(_QWORD *)(v1 + 72);
  v18 = *(_QWORD *)(v1 + 80);
  v21 = *(void **)(v1 + 56);
  v20 = *(_QWORD *)(v1 + 64);
  v23 = *(_QWORD *)(v1 + 40);
  v22 = *(void **)(v1 + 48);
  v24 = *(_QWORD *)(v1 + 32);
  v25 = (_QWORD *)swift_allocObject(&unk_1004BD028, 48, 7);
  *(_QWORD *)(v1 + 112) = v25;
  v25[2] = v22;
  v25[3] = v24;
  v25[4] = v21;
  v25[5] = v23;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v18, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v20);
  v26 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
  v27 = v22;
  swift_bridgeObjectRetain(v24);
  v28 = v21;
  v29 = (_QWORD *)swift_task_alloc(v26);
  *(_QWORD *)(v1 + 120) = v29;
  v30 = sub_10003F544((uint64_t *)&unk_10055FDF0);
  *v29 = v1;
  v29[1] = sub_1002B185C;
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1 + 16, *(_QWORD *)(v1 + 80), sub_1002B9D7C, v25, v30);
}

uint64_t sub_1002B185C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_1002B19C4;
  else
    v7 = sub_1002B18F0;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002B18F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway);
    v4 = (_QWORD *)(v1 + 40);
    do
    {
      v5 = *(unsigned __int8 *)(v0 + 140);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      objc_msgSend(v3, "downloadEpisode:isFromSaving:", v7, v5);

      v4 += 2;
      --v2;
    }
    while (v2);
  }
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B19C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002B1A04(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  PodcastsStateCoordinator.cancelDownload(forEpisodeWithUUID:userInitiated:from:)(a1, a2, a3, a4);
}

void PodcastsStateCoordinator.cancelDownload(forEpisodeWithUUID:userInitiated:from:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  id v26;
  _QWORD *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  _QWORD *v39;

  v5 = v4;
  v10 = type metadata accessor for Logger(0);
  v36 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin();
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v11);
  v14 = static os_log_type_t.default.getter();
  v15 = swift_bridgeObjectRetain_n(a2, 2);
  v16 = Logger.logObject.getter(v15);
  if (os_log_type_enabled(v16, v14))
  {
    v17 = swift_slowAlloc(28, -1);
    v33 = v10;
    v18 = v17;
    v32 = swift_slowAlloc(64, -1);
    aBlock[0] = v32;
    *(_DWORD *)v18 = 136315650;
    swift_bridgeObjectRetain(a2);
    v37 = sub_10003D274(a1, a2, aBlock);
    v34 = a1;
    v35 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v18 + 12) = 1024;
    LODWORD(v37) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4, v18 + 14, v18 + 18);
    *(_WORD *)(v18 + 18) = 2080;
    v19 = PodcastsStateChangeOrigin.description.getter(a4);
    v21 = v20;
    v37 = sub_10003D274(v19, v20, aBlock);
    v5 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock, v18 + 20, v18 + 28);
    v22 = v21;
    a1 = v34;
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v16, v14, "Cancelling download for episode with uuid %s (userInitiated: %{BOOL}d, origin: %s).", (uint8_t *)v18, 0x1Cu);
    v23 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
  }
  v24 = *(void **)&v5[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway];
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "cancelDownloadsForEpisodeUuid:userInitiated:", v25, a3 & 1);

  v26 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider], "mainOrPrivateContext");
  v27 = (_QWORD *)swift_allocObject(&unk_1004BD050, 56, 7);
  v27[2] = v26;
  v27[3] = a1;
  v27[4] = a2;
  v27[5] = v5;
  v27[6] = a4;
  aBlock[4] = (uint64_t)sub_1002B9D9C;
  v39 = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100027AF8;
  aBlock[3] = (uint64_t)&unk_1004BD068;
  v28 = _Block_copy(aBlock);
  v29 = v39;
  swift_bridgeObjectRetain(a2);
  v30 = v26;
  v31 = v5;
  objc_msgSend(v30, "performBlockAndWaitWithSave:", v28, swift_release(v29).n128_f64[0]);
  _Block_release(v28);

}

void sub_1002B1D80(char a1, uint64_t a2)
{
  PodcastsStateCoordinator.cancelAllDownloads(userInitiated:from:)(a1, a2);
}

void PodcastsStateCoordinator.cancelAllDownloads(userInitiated:from:)(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock[5];
  _QWORD *v35;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v8);
  v11 = static os_log_type_t.default.getter();
  v12 = v11;
  v13 = Logger.logObject.getter(v11);
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = swift_slowAlloc(18, -1);
    v16 = swift_slowAlloc(32, -1);
    aBlock[0] = v16;
    *(_DWORD *)v15 = 67109378;
    LODWORD(v33) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 4, v15 + 4, v15 + 8);
    *(_WORD *)(v15 + 8) = 2080;
    v32 = v6;
    v17 = PodcastsStateChangeOrigin.description.getter(a2);
    v31 = a2;
    v19 = v18;
    v33 = sub_10003D274(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, aBlock, v15 + 10, v15 + 18);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Cancelling all ongoing downloads (userInitiated: %{BOOL}d, origin: %s).", (uint8_t *)v15, 0x12u);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21 = v31;
    v20(v10, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v21 = a2;
  }
  v22 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway], "cancelAllDownloadsUserInitiated:", a1 & 1);
  v23 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for String, &protocol witness table for String);

  v24 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider], "mainOrPrivateContext");
  v25 = (_QWORD *)swift_allocObject(&unk_1004BD0A0, 48, 7);
  v25[2] = v23;
  v25[3] = v24;
  v25[4] = v3;
  v25[5] = v21;
  aBlock[4] = (uint64_t)sub_1002B9DDC;
  v35 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100027AF8;
  aBlock[3] = (uint64_t)&unk_1004BD0B8;
  v26 = _Block_copy(aBlock);
  v27 = v35;
  v28 = v24;
  v29 = v3;
  objc_msgSend(v28, "performBlockAndWaitWithSave:", v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);

}

void sub_1002B207C(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:completionHandler:)(a1, a2, a3, a4, 0, 0);
}

void PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:completionHandler:)(a1, a2, a3, a4, 0, 0);
}

void sub_1002B20B0(void *a1)
{
  PodcastsStateCoordinator.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)(a1);
}

void PodcastsStateCoordinator.unsafeRemoveFromRecoveredEpisodesIfNeeded(episode:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  int v39;
  os_log_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "isBookmarksMigrationRecoveredEpisode");
  if ((_DWORD)v8)
  {
    static Logger.podcastsStatesCoordination.getter(v8);
    v9 = a1;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, (os_log_type_t)v11))
    {
      v39 = v11;
      v40 = v10;
      v41 = v2;
      v12 = swift_slowAlloc(32, -1);
      v38 = swift_slowAlloc(96, -1);
      v43 = v38;
      *(_DWORD *)v12 = 136381187;
      v13 = objc_msgSend(v9, "title");
      if (v13)
      {
        v14 = v13;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v17 = v16;

      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = Optional<A>.description.getter(v15, v17);
      v20 = v19;
      swift_bridgeObjectRelease(v17);
      v42 = (id)sub_10003D274(v18, v20, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v12 + 4, v12 + 12);

      *(_QWORD *)&v21 = swift_bridgeObjectRelease(v20).n128_u64[0];
      *(_WORD *)(v12 + 12) = 2080;
      v22 = objc_msgSend(v9, "uuid", v21);
      if (v22)
      {
        v23 = v22;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v26 = v25;

      }
      else
      {
        v24 = 0;
        v26 = 0;
      }
      v27 = Optional<A>.description.getter(v24, v26);
      v29 = v28;
      swift_bridgeObjectRelease(v26);
      v42 = (id)sub_10003D274(v27, v29, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v12 + 14, v12 + 22);

      *(_QWORD *)&v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
      *(_WORD *)(v12 + 22) = 2081;
      v42 = objc_msgSend(v9, "storeTrackId", v30);
      v31 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v33 = v32;
      v42 = (id)sub_10003D274(v31, v32, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v12 + 24, v12 + 32);

      swift_bridgeObjectRelease(v33);
      v34 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v39, "Deleting from BookmarksMigrationRecoveredEpisodes episode: %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v12, 0x20u);
      v35 = v38;
      swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    objc_msgSend(v9, "setIsBookmarksMigrationRecoveredEpisode:", 0);
    v36 = objc_msgSend(v9, "podcast");
    if (v36)
    {
      v37 = v36;
      sub_10028713C(v36, 2, 4, 3);

    }
  }
}

void sub_1002B2490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)(a1, a2, a3, a4);
}

void PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  os_log_type_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t (*v45)(_BYTE *, uint64_t, __n128);
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __n128 v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  void (*v66)(_BYTE *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[4];
  int v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;

  v74 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))a2;
  v7 = type metadata accessor for EpisodePlayerItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  v79 = v8;
  __chkstk_darwin();
  v10 = &v69[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for PlayerItem(0);
  v80 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v82 = &v69[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v81 = &v69[-v13];
  __chkstk_darwin();
  v15 = &v69[-v14];
  v16 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  __chkstk_darwin();
  v83 = &v69[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for PodcastPlayerItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin();
  v22 = &v69[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = PlayerItem.podcast.getter(v20);
  v24 = PodcastPlayerItem.isSubscribeable.getter(v23);
  v25 = (*(uint64_t (**)(_BYTE *, uint64_t))(v19 + 8))(v22, v18);
  if ((v24 & 1) != 0)
  {
    sub_1002B8100(a1, (uint64_t)v74, a3, a4);
  }
  else
  {
    v74 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))a3;
    v75 = a4;
    static Logger.podcastsStatesCoordination.getter(v25);
    v26 = static os_log_type_t.default.getter();
    v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v80 + 16);
    v27(v15, a1, v11);
    v27(v81, a1, v11);
    v28 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v27)(v82, a1, v11);
    v29 = Logger.logObject.getter(v28);
    if (os_log_type_enabled(v29, v26))
    {
      v30 = swift_slowAlloc(32, -1);
      v71 = v29;
      v31 = v30;
      v32 = swift_slowAlloc(64, -1);
      v72 = v32;
      v85 = v32;
      *(_DWORD *)v31 = 136381187;
      v70 = v26;
      v33 = PlayerItem.episode.getter(v32);
      v34 = EpisodePlayerItem.title.getter(v33);
      v36 = v35;
      v37 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
      v73 = a1;
      v38 = v78;
      v37(v10, v78);
      v39 = Optional<A>.description.getter(v34, v36);
      v41 = v40;
      swift_bridgeObjectRelease(v36);
      v84 = sub_10003D274(v39, v41, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v31 + 4, v31 + 12);
      v42 = v41;
      v43 = v38;
      v44 = swift_bridgeObjectRelease(v42);
      v45 = *(uint64_t (**)(_BYTE *, uint64_t, __n128))(v80 + 8);
      v46 = v45(v15, v11, v44);
      *(_WORD *)(v31 + 12) = 2049;
      v47 = v81;
      v48 = PlayerItem.episode.getter(v46);
      v49 = EpisodePlayerItem.adamID.getter(v48);
      v37(v10, v43);
      ((void (*)(_BYTE *, uint64_t))v45)(v47, v11);
      v84 = v49;
      v50 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v31 + 14, v31 + 22);
      *(_WORD *)(v31 + 22) = 2081;
      v81 = (_BYTE *)(v31 + 24);
      v51 = v82;
      v52 = PlayerItem.episode.getter(v50);
      v53 = EpisodePlayerItem.guid.getter(v52);
      v55 = v54;
      v37(v10, v43);
      v56 = Optional<A>.description.getter(v53, v55);
      v58 = v57;
      swift_bridgeObjectRelease(v55);
      v84 = sub_10003D274(v56, v58, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v81, v31 + 32);
      v59 = v58;
      v60 = v79;
      v61 = swift_bridgeObjectRelease(v59);
      v45(v51, v11, v61);
      v62 = v71;
      _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v70, "Skip inserting new Implicit Follow for currently playing episode because the show is \"Not Subscribeable\" -- i.e. from a news diggest or some other type of 'fake' show: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v31, 0x20u);
      v63 = v72;
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v64 = (*(uint64_t (**)(_BYTE *, uint64_t))(v76 + 8))(v83, v77);
      v65 = v74;
    }
    else
    {
      v66 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
      v66(v81, v11);
      v66(v15, v11);
      v66(v82, v11);

      v64 = (*(uint64_t (**)(_BYTE *, uint64_t))(v76 + 8))(v83, v77);
      v65 = v74;
      v43 = v78;
      v60 = v79;
    }
    v67 = PlayerItem.episode.getter(v64);
    v68 = EpisodePlayerItem.adamID.getter(v67);
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v10, v43);
    v65(v68, 0, 0, 0, 0);
  }
}

id sub_1002B29B8(uint64_t a1, uint64_t a2)
{
  id *v2;

  return objc_msgSend(*v2, "unsafeEpisodePlayedBeyondThresholdForFirstTime:from:", a1, a2);
}

id sub_1002B29D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;

  return objc_msgSend(*v4, "unsafeMark:as:in:from:", a1, a2, a3, a4);
}

id sub_1002B29F0(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, "unsafeDidBumpLastDatePlayedFor:", a1);
}

id sub_1002B2A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PodcastsStateCoordinator.unsafeInsertNewImplicitFollow(for:from:in:)(a1, a2, a3);
}

id PodcastsStateCoordinator.unsafeInsertNewImplicitFollow(for:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  os_log_type_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  NSObject *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  double v57;
  id v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  double v68;
  id v69;
  id v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  __n128 v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, __n128);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;

  v97 = a3;
  v5 = type metadata accessor for RemoteNonFollowedShow(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v102 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v101 = (char *)&v92 - v8;
  __chkstk_darwin();
  v10 = (char *)&v92 - v9;
  __chkstk_darwin();
  v12 = (char *)&v92 - v11;
  v104 = type metadata accessor for Logger(0);
  v95 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin();
  v103 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin();
  v16 = (char *)&v92 - v15;
  static Logger.podcastsStatesCoordination.getter(v14);
  v17 = static os_log_type_t.default.getter();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v18(v12, a1, v5);
  v96 = v18;
  v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v10, a1, v5);
  v20 = Logger.logObject.getter(v19);
  v21 = os_log_type_enabled(v20, v17);
  v99 = a2;
  v100 = a1;
  if (v21)
  {
    v22 = swift_slowAlloc(22, -1);
    v93 = swift_slowAlloc(32, -1);
    v107 = v93;
    *(_DWORD *)v22 = 134283779;
    v23 = ((uint64_t (*)(void))RemoteNonFollowedShow.storeCollectionId.getter)();
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v12, v5);
    v106 = (id)v23;
    v25 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v22 + 4, v22 + 12);
    *(_WORD *)(v22 + 12) = 2081;
    v26 = RemoteNonFollowedShow.feedURL.getter(v25);
    v28 = v27;
    v106 = (id)sub_10003D274(v26, v27, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v22 + 14, v22 + 22);
    v29 = swift_bridgeObjectRelease(v28);
    v98 = v24;
    ((void (*)(char *, uint64_t, __n128))v24)(v10, v5, v29);
    _os_log_impl((void *)&_mh_execute_header, v20, v17, "Inserting new show (in Store state) for RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s.", (uint8_t *)v22, 0x16u);
    v30 = v93;
    swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v31 = v22;
    a1 = v100;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32(v12, v5);
    v98 = v32;
    v32(v10, v5);
  }

  v33 = *(void (**)(char *, uint64_t))(v95 + 8);
  v34 = v16;
  v35 = v104;
  v33(v34, v104);
  v36 = *(_QWORD *)(v105
                  + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                  + 24);
  v37 = *(_QWORD *)(v105
                  + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                  + 32);
  sub_10003A834((_QWORD *)(v105 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore), v36);
  v38 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)(v97, a1, v36, v37);
  v39 = v103;
  static Logger.podcastsStatesCoordination.getter(v38);
  LODWORD(v37) = static os_log_type_t.default.getter();
  v40 = v38;
  v41 = v101;
  v42 = v96;
  v96(v101, a1, v5);
  v43 = v102;
  v42(v102, a1, v5);
  v44 = v40;
  v45 = Logger.logObject.getter(v44);
  LODWORD(v97) = v37;
  v46 = v37;
  v47 = v45;
  if (os_log_type_enabled(v45, v46))
  {
    v48 = swift_slowAlloc(82, -1);
    v95 = swift_slowAlloc(192, -1);
    v107 = v95;
    *(_DWORD *)v48 = 136382467;
    v49 = objc_msgSend(v44, "title");
    v94 = v5;
    if (v49)
    {
      v50 = v49;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v53 = v52;

    }
    else
    {
      v53 = 0xEA00000000003E65;
      v51 = 0x6C746974206F6E3CLL;
    }
    v96 = (void (*)(char *, uint64_t, uint64_t))v33;
    v56 = 0x3E7974706D653CLL;
    v106 = (id)sub_10003D274(v51, v53, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 4, v48 + 12);

    *(_QWORD *)&v57 = swift_bridgeObjectRelease(v53).n128_u64[0];
    *(_WORD *)(v48 + 12) = 2080;
    v58 = objc_msgSend(v44, "uuid", v57);
    if (v58)
    {
      v59 = v58;
      v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v62 = v61;

    }
    else
    {
      v62 = 0xE700000000000000;
      v60 = 0x3E7974706D653CLL;
    }
    v106 = (id)sub_10003D274(v60, v62, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 14, v48 + 22);

    *(_QWORD *)&v63 = swift_bridgeObjectRelease(v62).n128_u64[0];
    *(_WORD *)(v48 + 22) = 2080;
    v106 = objc_msgSend(v44, "managedObjectContext", v63);
    v64 = sub_10003F544(&qword_1005534F0);
    v65 = String.init<A>(describing:)(&v106, v64);
    v67 = v66;
    v106 = (id)sub_10003D274(v65, v66, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 24, v48 + 32);

    *(_QWORD *)&v68 = swift_bridgeObjectRelease(v67).n128_u64[0];
    *(_WORD *)(v48 + 32) = 2049;
    v69 = objc_msgSend(v44, "storeCollectionId", v68);

    v106 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 34, v48 + 42);

    *(_WORD *)(v48 + 42) = 2081;
    v70 = objc_msgSend(v44, "feedURL");
    if (v70)
    {
      v71 = v70;
      v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v73 = v72;

    }
    else
    {
      v73 = 0xE700000000000000;
    }
    v106 = (id)sub_10003D274(v56, v73, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 44, v48 + 52);

    v74 = swift_bridgeObjectRelease(v73);
    *(_WORD *)(v48 + 52) = 2049;
    v75 = v101;
    v76 = RemoteNonFollowedShow.storeCollectionId.getter(v74);
    v77 = v75;
    v78 = v94;
    v79 = (void (*)(char *, uint64_t, __n128))v98;
    v98(v77, v94);
    v106 = (id)v76;
    v80 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 54, v48 + 62);
    *(_WORD *)(v48 + 62) = 2081;
    v81 = v102;
    v82 = RemoteNonFollowedShow.feedURL.getter(v80);
    v84 = v83;
    v106 = (id)sub_10003D274(v82, v83, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 64, v48 + 72);
    v85 = swift_bridgeObjectRelease(v84);
    v79(v81, v78, v85);
    *(_WORD *)(v48 + 72) = 2080;
    v86 = v99;
    v87 = PodcastsStateChangeOrigin.description.getter(v99);
    v89 = v88;
    v106 = (id)sub_10003D274(v87, v88, &v107);
    v55 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v48 + 74, v48 + 82);
    swift_bridgeObjectRelease(v89);
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v97, "Implicitly Following previously inserted Store podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s; From origin: %s.",
      (uint8_t *)v48,
      0x52u);
    v90 = v95;
    swift_arrayDestroy(v95, 6, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    ((void (*)(char *, uint64_t))v96)(v103, v104);
    a1 = v100;
  }
  else
  {
    v54 = v98;
    v98(v41, v5);

    v54(v43, v5);
    v33(v39, v35);
    v55 = v99;
  }
  sub_10028713C(v44, 3, 4, v55);
  sub_1002B9EF0(v44, a1);
  return v44;
}

id sub_1002B3258(void *a1, uint64_t a2, uint64_t a3)
{
  return PodcastsStateCoordinator.unsafeImplicitlyFollowIfNeeded(_:for:from:)(a1, a2, a3);
}

id PodcastsStateCoordinator.unsafeImplicitlyFollowIfNeeded(_:for:from:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  NSObject *v20;
  id v21;
  id v22;
  NSObject *v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  double v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  NSObject *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  id v54;
  id v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  double v75;
  id result;
  double v77;
  int v78;
  id v79;
  os_log_t v80;
  char *v81;
  id v82;
  NSObject *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  double v92;
  double v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  double v97;
  id v98;
  void *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  NSObject *v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  id v107;
  char *v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  double v118;
  id v119;
  id v120;
  void *v121;
  unint64_t v122;
  unint64_t v123;
  __n128 v124;
  char *v125;
  uint64_t v126;
  char *v127;
  NSObject *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  __n128 v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  os_log_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  char *v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  id v160;
  uint64_t v161[2];

  v159 = a3;
  v148 = type metadata accessor for Date(0);
  v146 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v147 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RemoteNonFollowedShow(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v153 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v157 = (char *)&v141 - v9;
  __chkstk_darwin();
  v11 = (char *)&v141 - v10;
  __chkstk_darwin();
  v13 = (char *)&v141 - v12;
  v14 = type metadata accessor for Logger(0);
  v154 = *(void (**)(char *, uint64_t))(v14 - 8);
  __chkstk_darwin();
  v158 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin();
  v18 = (char *)&v141 - v17;
  static Logger.podcastsStatesCoordination.getter(v16);
  v19 = static os_log_type_t.default.getter();
  v20 = *(NSObject **)(v7 + 16);
  v21 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v13, a2, v6);
  v156 = a2;
  v152 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v11, a2, v6);
  v22 = v21;
  v23 = Logger.logObject.getter(v22);
  if (os_log_type_enabled(v23, (os_log_type_t)v19))
  {
    v143 = v13;
    v144 = v7;
    LODWORD(v145) = v19;
    v149 = v23;
    v150 = v6;
    v24 = v18;
    v151 = v14;
    v25 = swift_slowAlloc(82, -1);
    v142 = swift_slowAlloc(192, -1);
    v161[0] = v142;
    *(_DWORD *)v25 = 136382467;
    v26 = objc_msgSend(v22, "title");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

    }
    else
    {
      v28 = 0x6C746974206F6E3CLL;
      v30 = 0xEA00000000003E65;
    }
    v39 = v11;
    v40 = 0x3E7974706D653CLL;
    v160 = (id)sub_10003D274(v28, v30, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 4, v25 + 12);

    *(_QWORD *)&v41 = swift_bridgeObjectRelease(v30).n128_u64[0];
    *(_WORD *)(v25 + 12) = 2080;
    v42 = objc_msgSend(v22, "uuid", v41);
    v141 = v24;
    if (v42)
    {
      v43 = v42;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v46 = v45;

    }
    else
    {
      v46 = 0xE700000000000000;
      v44 = 0x3E7974706D653CLL;
    }
    v47 = v149;
    v160 = (id)sub_10003D274(v44, v46, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 14, v25 + 22);

    *(_QWORD *)&v48 = swift_bridgeObjectRelease(v46).n128_u64[0];
    *(_WORD *)(v25 + 22) = 2080;
    v160 = objc_msgSend(v22, "managedObjectContext", v48);
    v49 = sub_10003F544(&qword_1005534F0);
    v50 = String.init<A>(describing:)(&v160, v49);
    v52 = v51;
    v160 = (id)sub_10003D274(v50, v51, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 24, v25 + 32);

    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v52).n128_u64[0];
    *(_WORD *)(v25 + 32) = 2049;
    v54 = objc_msgSend(v22, "storeCollectionId", v53);

    v160 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 34, v25 + 42);

    *(_WORD *)(v25 + 42) = 2081;
    v55 = objc_msgSend(v22, "feedURL");
    if (v55)
    {
      v56 = v55;
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v58 = v57;

    }
    else
    {
      v58 = 0xE700000000000000;
    }
    v59 = v144;
    v160 = (id)sub_10003D274(v40, v58, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 44, v25 + 52);

    v60 = swift_bridgeObjectRelease(v58);
    *(_WORD *)(v25 + 52) = 2049;
    v61 = v143;
    v62 = RemoteNonFollowedShow.storeCollectionId.getter(v60);
    v63 = *(NSObject **)(v59 + 8);
    v6 = v150;
    ((void (*)(char *, uint64_t))v63)(v61, v150);
    v160 = (id)v62;
    v64 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 54, v25 + 62);
    *(_WORD *)(v25 + 62) = 2081;
    v65 = RemoteNonFollowedShow.feedURL.getter(v64);
    v67 = v66;
    v160 = (id)sub_10003D274(v65, v66, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 64, v25 + 72);
    v68 = swift_bridgeObjectRelease(v67);
    v149 = v63;
    ((void (*)(char *, uint64_t, __n128))v63)(v39, v6, v68);
    *(_WORD *)(v25 + 72) = 2080;
    v37 = v159;
    v69 = PodcastsStateChangeOrigin.description.getter(v159);
    v71 = v70;
    v160 = (id)sub_10003D274(v69, v70, v161);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v25 + 74, v25 + 82);
    swift_bridgeObjectRelease(v71);
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v145, "Implicitly Following if needed podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL: %{private}s; From origin: %s.",
      (uint8_t *)v25,
      0x52u);
    v72 = v142;
    swift_arrayDestroy(v142, 6, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    v32 = (void (*)(char *, uint64_t))*((_QWORD *)v154 + 1);
    v36 = v151;
    v32(v141, v151);
    v34 = v157;
    v38 = v158;
    v35 = v155;
    v33 = v156;
  }
  else
  {
    v31 = *(NSObject **)(v7 + 8);
    ((void (*)(char *, uint64_t))v31)(v13, v6);

    v149 = v31;
    ((void (*)(char *, uint64_t))v31)(v11, v6);

    v32 = (void (*)(char *, uint64_t))*((_QWORD *)v154 + 1);
    v32(v18, v14);
    v33 = v156;
    v34 = v157;
    v35 = v155;
    v36 = v14;
    v38 = v158;
    v37 = v159;
  }
  v73 = *(_QWORD *)(v35 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions);
  sub_10028713C(v22, 3, 4, v37);
  objc_msgSend(v22, "lastDatePlayed");
  v75 = v74;
  sub_1002B9EF0(v22, v33);
  result = objc_msgSend(v22, "lastDatePlayed");
  if (v75 != v77)
  {
    v156 = v73;
    static Logger.podcastsStatesCoordination.getter(result);
    v78 = static os_log_type_t.default.getter();
    v79 = v22;
    v80 = v152;
    ((void (*)(char *, uint64_t, uint64_t))v152)(v34, v33, v6);
    v81 = v153;
    ((void (*)(char *, uint64_t, uint64_t))v80)(v153, v33, v6);
    v82 = v79;
    v83 = Logger.logObject.getter(v82);
    LODWORD(v155) = v78;
    if (os_log_type_enabled(v83, (os_log_type_t)v78))
    {
      v151 = v36;
      v152 = v83;
      v154 = v32;
      v150 = v6;
      v84 = swift_slowAlloc(102, -1);
      v145 = swift_slowAlloc(256, -1);
      v161[0] = v145;
      *(_DWORD *)v84 = 136382979;
      v85 = v147;
      Date.init(timeIntervalSinceReferenceDate:)(v75);
      v86 = sub_100026844(qword_100560490, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v87 = v148;
      v88 = dispatch thunk of CustomStringConvertible.description.getter(v148, v86);
      v90 = v89;
      v91 = *(void (**)(char *, uint64_t))(v146 + 8);
      v91(v85, v87);
      v160 = (id)sub_10003D274(v88, v90, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 4, v84 + 12);
      *(_QWORD *)&v92 = swift_bridgeObjectRelease(v90).n128_u64[0];
      *(_WORD *)(v84 + 12) = 2081;
      objc_msgSend(v82, "lastDatePlayed", v92);
      Date.init(timeIntervalSinceReferenceDate:)(v93);
      v94 = dispatch thunk of CustomStringConvertible.description.getter(v87, v86);
      v96 = v95;
      v91(v85, v87);
      v160 = (id)sub_10003D274(v94, v96, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 14, v84 + 22);

      *(_QWORD *)&v97 = swift_bridgeObjectRelease(v96).n128_u64[0];
      *(_WORD *)(v84 + 22) = 2081;
      v98 = objc_msgSend(v82, "title", v97);
      if (v98)
      {
        v99 = v98;
        v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
        v102 = v101;

      }
      else
      {
        v100 = 0x6C746974206F6E3CLL;
        v102 = 0xEA00000000003E65;
      }
      v105 = 0x3E7974706D653CLL;
      v160 = (id)sub_10003D274(v100, v102, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 24, v84 + 32);

      *(_QWORD *)&v106 = swift_bridgeObjectRelease(v102).n128_u64[0];
      *(_WORD *)(v84 + 32) = 2080;
      v107 = objc_msgSend(v82, "uuid", v106);
      v108 = v158;
      if (v107)
      {
        v109 = v107;
        v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
        v112 = v111;

      }
      else
      {
        v112 = 0xE700000000000000;
        v110 = 0x3E7974706D653CLL;
      }
      v160 = (id)sub_10003D274(v110, v112, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 34, v84 + 42);

      *(_QWORD *)&v113 = swift_bridgeObjectRelease(v112).n128_u64[0];
      *(_WORD *)(v84 + 42) = 2080;
      v160 = objc_msgSend(v82, "managedObjectContext", v113);
      v114 = sub_10003F544(&qword_1005534F0);
      v115 = String.init<A>(describing:)(&v160, v114);
      v117 = v116;
      v160 = (id)sub_10003D274(v115, v116, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 44, v84 + 52);

      *(_QWORD *)&v118 = swift_bridgeObjectRelease(v117).n128_u64[0];
      *(_WORD *)(v84 + 52) = 2049;
      v119 = objc_msgSend(v82, "storeCollectionId", v118);

      v160 = v119;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 54, v84 + 62);

      *(_WORD *)(v84 + 62) = 2081;
      v120 = objc_msgSend(v82, "feedURL");
      if (v120)
      {
        v121 = v120;
        v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
        v123 = v122;

      }
      else
      {
        v123 = 0xE700000000000000;
      }
      v160 = (id)sub_10003D274(v105, v123, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 64, v84 + 72);

      v124 = swift_bridgeObjectRelease(v123);
      *(_WORD *)(v84 + 72) = 2049;
      v125 = v157;
      v126 = RemoteNonFollowedShow.storeCollectionId.getter(v124);
      v127 = v125;
      v128 = v149;
      v129 = v150;
      ((void (*)(char *, uint64_t))v149)(v127, v150);
      v160 = (id)v126;
      v130 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 74, v84 + 82);
      *(_WORD *)(v84 + 82) = 2081;
      v131 = v153;
      v132 = RemoteNonFollowedShow.feedURL.getter(v130);
      v134 = v133;
      v160 = (id)sub_10003D274(v132, v133, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 84, v84 + 92);
      v135 = swift_bridgeObjectRelease(v134);
      ((void (*)(char *, uint64_t, __n128))v128)(v131, v129, v135);
      *(_WORD *)(v84 + 92) = 2080;
      v104 = v159;
      v136 = PodcastsStateChangeOrigin.description.getter(v159);
      v138 = v137;
      v160 = (id)sub_10003D274(v136, v137, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, v161, v84 + 94, v84 + 102);
      swift_bridgeObjectRelease(v138);
      v139 = v152;
      _os_log_impl((void *)&_mh_execute_header, v152, (os_log_type_t)v155, "Implicit Follow did updated lastDatePlayed from %{private}s to %{private}s; Podcast: %{private}s, uuid: %s, MOC:"
        " %s, adamID: %{private}lld, feedURL: %{private}s; For RemoteNonFollowedShow with adamID: %{private}lld, feedURL:"
        " %{private}s; From origin: %s.",
        (uint8_t *)v84,
        0x66u);
      v140 = v145;
      swift_arrayDestroy(v145, 8, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v140, -1, -1);
      swift_slowDealloc(v84, -1, -1);

      v154(v108, v151);
    }
    else
    {
      v103 = v149;
      ((void (*)(char *, uint64_t))v149)(v34, v6);

      ((void (*)(char *, uint64_t))v103)(v81, v6);
      v32(v38, v36);
      v104 = v159;
    }
    return (id)sub_10028713C(v82, 8, 4, v104);
  }
  return result;
}

uint64_t sub_1002B3F78(void *a1, uint64_t a2)
{
  return sub_10028713C(a1, 4, 4, a2);
}

uint64_t PodcastsStateCoordinator.unsafeRemoveImplicitFollowIfNeeded(_:from:)(void *a1, uint64_t a2)
{
  return sub_10028713C(a1, 4, 4, a2);
}

void PodcastsStateCoordinator.enableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  id v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  char *v11;
  id v12;
  _QWORD v13[5];
  _QWORD *v14;

  v7 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider], "mainOrPrivateContext");
  v8 = (_QWORD *)swift_allocObject(&unk_1004BD0F0, 56, 7);
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  v8[6] = v7;
  v13[4] = sub_1002BA5E0;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100027AF8;
  v13[3] = &unk_1004BD108;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v3;
  swift_bridgeObjectRetain(a2);
  v12 = v7;
  objc_msgSend(v12, "performBlockAndWaitWithSave:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

}

void PodcastsStateCoordinator.unsafeEnableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a4, "podcastForUuid:", v6);

  if (v7)
  {
    sub_1002B41D8(v7, a3);
    objc_msgSend(a4, "saveInCurrentBlock");

  }
}

id sub_1002B41D8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  double v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin();
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v7);
  v10 = static os_log_type_t.default.getter();
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  if (os_log_type_enabled(v12, v10))
  {
    v49 = v6;
    v50 = v5;
    v13 = swift_slowAlloc(42, -1);
    v48 = swift_slowAlloc(128, -1);
    v54 = v48;
    *(_DWORD *)v13 = 136315907;
    v52 = a2;
    v14 = PodcastsStateChangeOrigin.description.getter(a2);
    v16 = v15;
    v53 = sub_10003D274(v14, v15, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v13 + 4, v13 + 12);
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v16).n128_u64[0];
    *(_WORD *)(v13 + 12) = 2081;
    v18 = objc_msgSend(v11, "title", v17);
    v51 = v2;
    if (v18)
    {
      v19 = v18;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    v23 = Optional<A>.description.getter(v20, v22);
    v25 = v24;
    swift_bridgeObjectRelease(v22);
    v53 = sub_10003D274(v23, v25, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v13 + 14, v13 + 22);

    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
    *(_WORD *)(v13 + 22) = 2080;
    v27 = objc_msgSend(v11, "uuid", v26);
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v32 = Optional<A>.description.getter(v29, v31);
    v34 = v33;
    swift_bridgeObjectRelease(v31);
    v53 = sub_10003D274(v32, v34, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v13 + 24, v13 + 32);

    v35 = swift_bridgeObjectRelease(v34);
    *(_WORD *)(v13 + 32) = 2081;
    v36 = MTPodcast.adamId.getter(v35);
    if ((v37 & 1) != 0)
    {
      v39 = 0;
      v41 = 0;
    }
    else
    {
      v53 = v36;
      v38 = sub_100030584();
      v39 = BinaryInteger.description.getter(&type metadata for UInt64, v38);
      v41 = v40;
    }
    v42 = Optional<A>.description.getter(v39, v41);
    v44 = v43;
    swift_bridgeObjectRelease(v41);
    v53 = sub_10003D274(v42, v44, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v13 + 34, v13 + 42);

    swift_bridgeObjectRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v12, v10, "Following podcast (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v13, 0x2Au);
    v45 = v48;
    swift_arrayDestroy(v48, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v50);
    a2 = v52;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_10028713C(v11, (uint64_t)objc_msgSend(v11, "syncType"), 0, a2);
  objc_msgSend(v11, "applyFollowedShowSettingsFor:", MTPodcast.showType.getter(objc_msgSend(v11, "setNeedsArtworkUpdate:", 1)));
  objc_msgSend(v11, "resetGoDarkWithReason:", 5);
  objc_msgSend(v11, "setLastRemovedFromUpNextDate:", 0.0);
  return objc_msgSend(v11, "setLastUnfollowedDate:", 0.0);
}

void PodcastsStateCoordinator.disableSubscription(onPodcastUUID:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  NSString v5;
  id v6;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider], "mainOrPrivateContext");
  objc_msgSend(v3, "disableSubscriptionOnPodcastUUID:from:context:", v5, a3, v6);

}

void PodcastsStateCoordinator.disableSubscription(onPodcastUUID:from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v9 = (_QWORD *)swift_allocObject(&unk_1004BD140, 56, 7);
  v9[2] = a4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = v4;
  v9[6] = a3;
  v14[4] = sub_1002BA640;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100027AF8;
  v14[3] = &unk_1004BD158;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = a4;
  swift_bridgeObjectRetain(a2);
  v13 = v4;
  objc_msgSend(v12, "performBlockAndWaitWithSave:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
}

void sub_1002B4914(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7;
  id v8;

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(a1, "podcastForUuid:", v7);

  if (v8)
  {
    sub_1002B49AC(v8, a5, a1);

  }
}

void sub_1002B49AC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_log_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  double v56;
  id v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  double v62;
  uint64_t v63;
  id v64;
  os_log_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;

  v4 = v3;
  v74 = a3;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v73 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin();
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v12);
  v15 = static os_log_type_t.default.getter();
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v72 = v15;
  if (os_log_type_enabled(v17, (os_log_type_t)v15))
  {
    v65 = v17;
    v66 = v11;
    v67 = v10;
    v68 = v4;
    v70 = v8;
    v18 = swift_slowAlloc(42, -1);
    v19 = swift_slowAlloc(128, -1);
    v76 = v19;
    *(_DWORD *)v18 = 136315907;
    v69 = a2;
    v20 = PodcastsStateChangeOrigin.description.getter(a2);
    v22 = v21;
    v75 = sub_10003D274(v20, v21, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v18 + 4, v18 + 12);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v22).n128_u64[0];
    *(_WORD *)(v18 + 12) = 2081;
    v24 = objc_msgSend(v16, "title", v23);
    v71 = v7;
    if (v24)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    v30 = Optional<A>.description.getter(v26, v28);
    v32 = v31;
    swift_bridgeObjectRelease(v28);
    v75 = sub_10003D274(v30, v32, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v18 + 14, v18 + 22);

    *(_QWORD *)&v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
    *(_WORD *)(v18 + 22) = 2080;
    v34 = objc_msgSend(v16, "uuid", v33);
    if (v34)
    {
      v35 = v34;
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v38 = v37;

    }
    else
    {
      v36 = 0;
      v38 = 0;
    }
    v39 = Optional<A>.description.getter(v36, v38);
    v41 = v40;
    swift_bridgeObjectRelease(v38);
    v75 = sub_10003D274(v39, v41, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v18 + 24, v18 + 32);

    v42 = swift_bridgeObjectRelease(v41);
    *(_WORD *)(v18 + 32) = 2081;
    v43 = MTPodcast.adamId.getter(v42);
    if ((v44 & 1) != 0)
    {
      v46 = 0;
      v48 = 0;
    }
    else
    {
      v75 = v43;
      v45 = sub_100030584();
      v46 = BinaryInteger.description.getter(&type metadata for UInt64, v45);
      v48 = v47;
    }
    v49 = Optional<A>.description.getter(v46, v48);
    v51 = v50;
    swift_bridgeObjectRelease(v48);
    v75 = sub_10003D274(v49, v51, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v18 + 34, v18 + 42);

    swift_bridgeObjectRelease(v51);
    v52 = v65;
    _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v72, "Unfollowing podcast (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy(v19, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v67);
    v29 = v74;
    v8 = v70;
    v7 = v71;
    a2 = v69;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v29 = v74;
  }
  sub_10028713C(v16, (uint64_t)objc_msgSend(v16, "syncType"), 1, a2);
  v53 = objc_msgSend(v16, "applyUnfollowedShowSettings");
  v54 = v73;
  v55 = Date.init()(v53);
  v56 = Date.timeIntervalSinceReferenceDate.getter(v55);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v54, v7);
  objc_msgSend(v16, "setLastRemovedFromUpNextDate:", v56);
  objc_msgSend(v16, "setLastUnfollowedDate:", v56);
  v57 = objc_msgSend(v16, "nextEpisodeUuid");
  if (v57)
  {
    v58 = v57;
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v61 = v60;
    *(_QWORD *)&v62 = swift_bridgeObjectRelease(v60).n128_u64[0];
    v63 = HIBYTE(v61) & 0xF;
    if ((v61 & 0x2000000000000000) == 0)
      v63 = v59 & 0xFFFFFFFFFFFFLL;
    if (v63)
    {
      objc_msgSend(v16, "setNextEpisodeUuid:", 0, v62);
      v64 = objc_msgSend(v29, "episodeForUuid:", v58);

      if (!v64)
        return;
      objc_msgSend(v64, "setListenNowEpisode:", 0);
      v58 = v64;
    }

  }
}

void PodcastsStateCoordinator.disableSubscriptions(onPodcastUUIDs:from:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  id v11;
  _QWORD v12[5];
  _QWORD *v13;

  v7 = (_QWORD *)swift_allocObject(&unk_1004BD190, 48, 7);
  v7[2] = a3;
  v7[3] = a1;
  v7[4] = v3;
  v7[5] = a2;
  v12[4] = sub_1002BA650;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100027AF8;
  v12[3] = &unk_1004BD1A8;
  v8 = _Block_copy(v12);
  v9 = v13;
  v10 = a3;
  swift_bridgeObjectRetain(a1);
  v11 = v3;
  objc_msgSend(v10, "performBlockAndWaitWithSave:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

void sub_1002B50E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t v22;

  v7 = (void *)kMTPodcastEntityName;
  v8 = (void *)objc_opt_self(MTPodcast);
  v9 = v7;
  swift_bridgeObjectRetain(a2);
  v11 = sub_10002B070(v10);
  swift_bridgeObjectRelease(a2);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v8, "predicateForPodcastUuids:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v14 = objc_msgSend(a1, "objectsInEntity:predicate:sortDescriptors:", v9, v13, 0);
  if (!v14)
    return;
  v15 = sub_100005EC8(0, (unint64_t *)&qword_100553790, NSManagedObject_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  v17 = (uint64_t)sub_10034E718(v16);
  swift_bridgeObjectRelease(v16);
  if (!v17)
    return;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 >= 0)
      v22 = v17 & 0xFFFFFFFFFFFFFF8;
    else
      v22 = v17;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v17);
    if (v18)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease(v17);
    return;
  }
  v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v18)
    goto LABEL_16;
LABEL_5:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      else
        v20 = *(id *)(v17 + 8 * i + 32);
      v21 = v20;
      sub_1002B49AC(v20, a4, a1);

    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1002B53E0(void *a1)
{
  NSString v2;
  id v3;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(a1, "podcastForUuid:", v2);

  if (v3)
  {
    objc_msgSend(v3, "setLastUnfollowedDate:", 0.0);
    objc_msgSend(a1, "saveInCurrentBlock");

  }
}

void sub_1002B5478(void *a1, id a2, int a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  id v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  double v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;
  unint64_t v51;
  double v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  void *v65;
  id v66;
  char *v67;
  int v68;
  id v69;
  NSObject *v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  double v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  double v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  os_log_t v94;
  id v95;
  char *v96;
  int v97;
  uint64_t v98;
  id v99;
  int v100;
  os_log_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  id v107;
  char v108[8];
  id v109;
  uint64_t v110;

  v6 = v5;
  v106 = a5;
  LODWORD(v7) = a4;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v103 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin();
  v16 = (char *)&v96 - v15;
  static Logger.podcastsStatesCoordination.getter(v14);
  v17 = static os_log_type_t.default.getter();
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = os_log_type_enabled(v19, (os_log_type_t)v17);
  v105 = *(double *)&a2;
  if (v20)
  {
    v96 = v16;
    v97 = v17;
    v98 = v12;
    LODWORD(v101) = v7;
    v104 = v11;
    v102 = v6;
    v21 = swift_slowAlloc(52, -1);
    v99 = (id)swift_slowAlloc(160, -1);
    v109 = v99;
    *(_DWORD *)v21 = 136316163;
    v107 = a2;
    v100 = a3;
    v108[0] = a3 & 1;
    v22 = sub_10003F544((uint64_t *)&unk_100559A80);
    v23 = String.init<A>(describing:)(&v107, v22);
    v25 = v24;
    v107 = (id)sub_10003D274(v23, v24, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v21 + 12) = 2080;
    v26 = PodcastsStateChangeOrigin.description.getter(v106);
    v28 = v27;
    v107 = (id)sub_10003D274(v26, v27, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v21 + 14, v21 + 22);
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
    *(_WORD *)(v21 + 22) = 2081;
    v30 = objc_msgSend(v18, "title", v29);
    if (v30)
    {
      v31 = v30;
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v34 = v33;

    }
    else
    {
      v32 = 0;
      v34 = 0;
    }
    v38 = v98;
    v39 = v96;
    v40 = Optional<A>.description.getter(v32, v34);
    v42 = v41;
    swift_bridgeObjectRelease(v34);
    v107 = (id)sub_10003D274(v40, v42, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v21 + 24, v21 + 32);

    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v42).n128_u64[0];
    *(_WORD *)(v21 + 32) = 2080;
    v44 = objc_msgSend(v18, "uuid", v43);
    if (v44)
    {
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v48 = v47;

    }
    else
    {
      v46 = 0;
      v48 = 0;
    }
    v49 = v97;
    v50 = Optional<A>.description.getter(v46, v48);
    v7 = v51;
    swift_bridgeObjectRelease(v48);
    v107 = (id)sub_10003D274(v50, v7, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v21 + 34, v21 + 42);

    *(_QWORD *)&v52 = swift_bridgeObjectRelease(v7).n128_u64[0];
    *(_WORD *)(v21 + 42) = 2081;
    v107 = objc_msgSend(v18, "storeTrackId", v52);
    v53 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v55 = v54;
    v107 = (id)sub_10003D274(v53, v54, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v21 + 44, v21 + 52);

    swift_bridgeObjectRelease(v55);
    _os_log_impl((void *)&_mh_execute_header, v19, v49, "Bookmarking episode on timestamp %s (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v21, 0x34u);
    v56 = v99;
    swift_arrayDestroy(v99, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v35 = *(void (**)(char *, uint64_t))(v38 + 8);
    v11 = v104;
    v35(v39, v104);
    v37 = v102;
    v36 = v106;
    LOBYTE(v7) = (_BYTE)v101;
    if ((v100 & 1) != 0)
      goto LABEL_11;
LABEL_5:
    objc_msgSend(v18, "markAsBookmarkedOnTimestamp:", v105);
    goto LABEL_12;
  }

  v35 = *(void (**)(char *, uint64_t))(v12 + 8);
  v35(v16, v11);
  v36 = v106;
  v37 = v6;
  if ((a3 & 1) == 0)
    goto LABEL_5;
LABEL_11:
  objc_msgSend(v18, "markAsBookmarked");
LABEL_12:
  v57 = objc_msgSend(v18, "podcast");
  if (v57)
  {
    v58 = v57;
    sub_10028713C(v57, (uint64_t)objc_msgSend(v18, "bookmarksSyncType"), 2, v36);

  }
  if ((v7 & 1) != 0)
  {
    v59 = objc_msgSend(v18, "uuid");
    if (v59)
    {
      v60 = v59;
      v104 = v11;
      v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v63 = v62;

      v64 = objc_msgSend(v18, "managedObjectContext");
      if (v64)
      {
        v65 = v64;
        if ((objc_msgSend(v18, "isDownloaded") & 1) == 0)
        {
          v66 = objc_msgSend(v18, "isEntitled");
          if ((_DWORD)v66)
          {
            v67 = v103;
            static Logger.podcastsStatesCoordination.getter(v66);
            v68 = static os_log_type_t.default.getter();
            v69 = v18;
            v70 = Logger.logObject.getter(v69);
            if (os_log_type_enabled(v70, (os_log_type_t)v68))
            {
              v102 = v37;
              v71 = swift_slowAlloc(32, -1);
              v72 = (id)swift_slowAlloc(96, -1);
              v107 = v72;
              *(_DWORD *)v71 = 136381187;
              v73 = objc_msgSend(v69, "title");
              v105 = *(double *)&v61;
              v100 = v68;
              v99 = v72;
              if (v73)
              {
                v74 = v73;
                v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
                v77 = v76;

              }
              else
              {
                v75 = 0;
                v77 = 0;
              }
              v78 = Optional<A>.description.getter(v75, v77);
              v80 = v79;
              swift_bridgeObjectRelease(v77);
              v109 = (id)sub_10003D274(v78, v80, (uint64_t *)&v107);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v71 + 4, v71 + 12);

              *(_QWORD *)&v81 = swift_bridgeObjectRelease(v80).n128_u64[0];
              *(_WORD *)(v71 + 12) = 2080;
              v82 = objc_msgSend(v69, "uuid", v81);
              v101 = v70;
              if (v82)
              {
                v83 = v82;
                v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
                v86 = v85;

              }
              else
              {
                v84 = 0;
                v86 = 0;
              }
              v87 = Optional<A>.description.getter(v84, v86);
              v89 = v88;
              swift_bridgeObjectRelease(v86);
              v109 = (id)sub_10003D274(v87, v89, (uint64_t *)&v107);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v71 + 14, v71 + 22);

              *(_QWORD *)&v90 = swift_bridgeObjectRelease(v89).n128_u64[0];
              *(_WORD *)(v71 + 22) = 2081;
              v109 = objc_msgSend(v69, "storeTrackId", v90);
              v91 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
              v93 = v92;
              v109 = (id)sub_10003D274(v91, v92, (uint64_t *)&v107);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v71 + 24, v71 + 32);

              swift_bridgeObjectRelease(v93);
              v94 = v101;
              _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v100, "Automatically downloading recently saved episode %{private}s uuid: %s, adamID: %{private}s.", (uint8_t *)v71, 0x20u);
              v95 = v99;
              swift_arrayDestroy(v99, 3, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v95, -1, -1);
              swift_slowDealloc(v71, -1, -1);

              v35(v103, v104);
              v61 = *(_QWORD *)&v105;
            }
            else
            {

              v35(v67, v104);
            }
            PodcastsStateCoordinator.downloadEpisode(withUUID:isFromSaving:from:in:)(v61, v63, 1, v106, v65);
          }
        }
        swift_bridgeObjectRelease(v63);

      }
      else
      {
        swift_bridgeObjectRelease(v63);
      }
    }
  }
}

void PodcastsStateCoordinator.unsafeBookmark(episode:on:shouldDownloadEpisode:from:)(void *a1, int a2, uint64_t a3, double a4)
{
  sub_1002B5478(a1, *(id *)&a4, 0, a2, a3);
}

void PodcastsStateCoordinator.unsafeRemoveEpisodeFromBookmarks(episode:from:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  double v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin();
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v7);
  v10 = static os_log_type_t.default.getter();
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  if (os_log_type_enabled(v12, v10))
  {
    v45 = v6;
    v47 = v2;
    v13 = swift_slowAlloc(42, -1);
    v44 = swift_slowAlloc(128, -1);
    v50 = v44;
    *(_DWORD *)v13 = 136315907;
    v48 = a2;
    v14 = PodcastsStateChangeOrigin.description.getter(a2);
    v16 = v15;
    v49 = (id)sub_10003D274(v14, v15, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v13 + 4, v13 + 12);
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v16).n128_u64[0];
    *(_WORD *)(v13 + 12) = 2081;
    v18 = objc_msgSend(v11, "title", v17);
    v46 = v5;
    if (v18)
    {
      v19 = v18;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    v23 = Optional<A>.description.getter(v20, v22);
    v25 = v24;
    swift_bridgeObjectRelease(v22);
    v49 = (id)sub_10003D274(v23, v25, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v13 + 14, v13 + 22);

    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
    *(_WORD *)(v13 + 22) = 2080;
    v27 = objc_msgSend(v11, "uuid", v26);
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v32 = v45;
    v33 = Optional<A>.description.getter(v29, v31);
    v35 = v34;
    swift_bridgeObjectRelease(v31);
    v49 = (id)sub_10003D274(v33, v35, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v13 + 24, v13 + 32);

    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_WORD *)(v13 + 32) = 2081;
    v49 = objc_msgSend(v11, "storeTrackId", v36);
    v37 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v39 = v38;
    v49 = (id)sub_10003D274(v37, v38, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v13 + 34, v13 + 42);

    swift_bridgeObjectRelease(v39);
    _os_log_impl((void *)&_mh_execute_header, v12, v10, "Removing Bookmark for episode (origin: %s): %{private}s, uuid: %s, adamID: %{private}s.", (uint8_t *)v13, 0x2Au);
    v40 = v44;
    swift_arrayDestroy(v44, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v46);
    a2 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  objc_msgSend(v11, "markAsUnbookmarked");
  v41 = objc_msgSend(v11, "podcast");
  if (v41)
  {
    v42 = v41;
    sub_10028713C(v41, (uint64_t)objc_msgSend(v11, "bookmarksSyncType"), 3, a2);

  }
}

uint64_t sub_1002B61C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EpisodeStateChanges.updated.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002B61E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544(&qword_100560420);
  v1 = sub_10002F9C8(&qword_100560510, &qword_100560420, (uint64_t)&protocol conformance descriptor for [A : B].Keys);
  return Sequence.publisher.getter(v0, v1);
}

uint64_t sub_1002B625C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002B6280(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002B62E0(a1);

  }
}

void sub_1002B62D8(uint64_t a1)
{
  uint64_t v1;

  sub_1002B6280(a1, v1);
}

uint64_t sub_1002B62E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  os_log_type_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  NSObject *v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t (*v42)(char *, _QWORD *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v87;
  os_log_t v88;
  int v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t aBlock[5];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = sub_10003F544(&qword_100560500);
  __chkstk_darwin(v2);
  v98 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PodcastStateModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v93 = v7;
  v94 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v101 = (char *)&v87 - v8;
  v9 = type metadata accessor for EpisodeStateModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v95 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v87 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v87 - v16;
  v102 = (_QWORD *)type metadata accessor for Logger(0);
  v97 = *(v102 - 1);
  v18 = __chkstk_darwin(v102);
  v96 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v87 - v21;
  v23 = static Logger.podcastsStatesCoordination.getter(v20);
  v24 = static os_log_type_t.default.getter(v23);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v17, a1, v9);
  v99 = a1;
  v91 = (uint64_t (*)(char *, uint64_t, uint64_t))v25;
  v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v15, a1, v9);
  v27 = Logger.logObject.getter(v26);
  v28 = os_log_type_enabled(v27, v24);
  v100 = v5;
  if (v28)
  {
    v29 = swift_slowAlloc(18, -1);
    v89 = v24;
    v30 = v29;
    v90 = swift_slowAlloc(32, -1);
    aBlock[0] = v90;
    *(_DWORD *)v30 = 136380931;
    v87 = v30 + 4;
    v88 = v27;
    v31 = ((uint64_t (*)(void))EpisodeStateModel.ids.getter)();
    v32 = sub_10003CA94();
    v33 = Set.description.getter(v31, &type metadata for EpisodeStateIdentifier, v32);
    v34 = v4;
    v36 = v35;
    swift_bridgeObjectRelease(v31);
    v105 = sub_10003D274(v33, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v87, v30 + 12);
    v37 = v36;
    v4 = v34;
    v5 = v100;
    swift_bridgeObjectRelease(v37);
    v38 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v39 = v38(v17, v9);
    *(_WORD *)(v30 + 12) = 1024;
    v40 = EpisodeStateModel.isDownloaded.getter(v39) & 1;
    v38(v15, v9);
    LODWORD(v105) = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, (char *)&v105 + 4, v30 + 14, v30 + 18);
    v27 = v88;
    _os_log_impl((void *)&_mh_execute_header, v88, (os_log_type_t)v89, "Update on download state of episode with IDs: %{private}s; isDownloaded: %{BOOL}d.",
      (uint8_t *)v30,
      0x12u);
    v41 = v90;
    swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v38 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v38(v15, v9);
    v38(v17, v9);
  }

  v42 = *(uint64_t (**)(char *, _QWORD *))(v97 + 8);
  v43 = v42(v22, v102);
  v44 = (uint64_t)v98;
  v45 = v99;
  v46 = (EpisodeStateModel.isDownloaded.getter(v43) & 1) == 0;
  EpisodeStateModel.podcastStateModel.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v44, 1, v4) == 1)
  {
    v47 = sub_100289A94(v44);
    v48 = v96;
    static Logger.podcastsStatesCoordination.getter(v47);
    v49 = v95;
    v50 = v91(v95, v45, v9);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.error.getter(v51);
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc(22, -1);
      v100 = v9;
      v55 = v54;
      v101 = (char *)swift_slowAlloc(64, -1);
      aBlock[0] = (uint64_t)v101;
      *(_DWORD *)v55 = 136315395;
      LODWORD(v99) = v53;
      sub_1002894C4(v46, 4);
      v57 = v56;
      v105 = sub_10003D274(v58, v56, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v55 + 4, v55 + 12);
      v59 = swift_bridgeObjectRelease(v57);
      *(_WORD *)(v55 + 12) = 2081;
      v60 = EpisodeStateModel.ids.getter(v59);
      v61 = sub_10003CA94();
      v62 = Set.description.getter(v60, &type metadata for EpisodeStateIdentifier, v61);
      v63 = v49;
      v65 = v64;
      swift_bridgeObjectRelease(v60);
      v105 = sub_10003D274(v62, v65, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v55 + 14, v55 + 22);
      swift_bridgeObjectRelease(v65);
      v38(v63, v100);
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v99, "We can't process event %s because episode has no Podcast associated to it. Episode IDs: %{private}s.", (uint8_t *)v55, 0x16u);
      v66 = v101;
      swift_arrayDestroy(v101, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      v67 = v96;
    }
    else
    {
      v38(v49, v9);

      v67 = v48;
    }
    return v42(v67, v102);
  }
  else
  {
    v68 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    v69 = v101;
    v68(v101, v44, v4);
    v70 = v92;
    v102 = objc_msgSend(*(id *)(v92 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider), "mainOrPrivateContext");
    v71 = *(_QWORD *)(v70 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions);
    v72 = swift_allocObject(&unk_1004BD348, 24, 7);
    swift_weakInit(v72 + 16, v71);
    v73 = v46;
    v74 = v94;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v94, v69, v4);
    v75 = *(unsigned __int8 *)(v5 + 80);
    v76 = (v75 + 24) & ~v75;
    v77 = v4;
    v78 = (v93 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    v79 = (v78 + 31) & 0xFFFFFFFFFFFFFFF8;
    v80 = swift_allocObject(&unk_1004BD370, v79 + 8, v75 | 7);
    *(_QWORD *)(v80 + 16) = v72;
    v68((char *)(v80 + v76), (uint64_t)v74, v77);
    v81 = v102;
    *(_QWORD *)(v80 + v78) = v102;
    v82 = v80 + ((v78 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v82 = v73;
    *(_BYTE *)(v82 + 8) = 4;
    *(_QWORD *)(v80 + v79) = 3;
    aBlock[4] = (uint64_t)sub_1002BBBE0;
    v104 = v80;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100027AF8;
    aBlock[3] = (uint64_t)&unk_1004BD388;
    v83 = _Block_copy(aBlock);
    v84 = v104;
    v85 = v81;
    swift_release(v84);
    objc_msgSend(v85, "performBlockAndWaitWithSave:", v83);
    _Block_release(v83);

    return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v101, v77);
  }
}

void sub_1002B6A34(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v9 = (_QWORD *)type metadata accessor for Logger(0);
  v10 = *(v9 - 1);
  __chkstk_darwin();
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(a1, "episodeForUuid:", v13);

  if (v14)
  {
    v16 = objc_msgSend(v14, "podcast");
    if (v16)
    {
      v23 = v16;
      sub_10028713C(v16, 0, 4, a5);

      return;
    }

  }
  static Logger.podcastsStatesCoordination.getter(v15);
  v17 = swift_bridgeObjectRetain_n(a3, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v25 = v21;
    v23 = v9;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain(a3);
    v24 = sub_10003D274(a2, a3, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Can't transition podcast to correct state because either the episode for %s was not found, or it has no associated podcast.", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, id))(v10 + 8))(v12, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    (*(void (**)(char *, _QWORD *))(v10 + 8))(v12, v9);
  }
}

void sub_1002B6CA4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  Swift::Int v30;
  id v31;
  Swift::Int v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  int64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[3];
  uint64_t v90;
  _QWORD *v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;

  v96 = a3;
  v97 = a4;
  v91 = a5;
  v92 = a1;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin();
  v11 = (char *)v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Logger.podcastsStatesCoordination.getter(v9);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Transitioning podcasts to download state", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v16 = NSManagedObjectContext.episodes(for:sortDescriptors:limit:)(a2, _swiftEmptyArrayStorage, 0, 1);
  if (v5)
    return;
  isUniquelyReferenced_nonNull_native = v16;
  v89[2] = 0;
  if (v16 >> 62)
    goto LABEL_91;
  v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v16);
  while (1)
  {
    v99 = isUniquelyReferenced_nonNull_native;
    v95 = v18;
    if (!v18)
      break;
    v98 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v19 = (uint64_t)&_swiftEmptyDictionarySingleton;
    v20 = 4;
    while (1)
    {
      v21 = v98
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, isUniquelyReferenced_nonNull_native)
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * v20);
      v22 = v21;
      v23 = v20 - 3;
      if (__OFADD__(v20 - 4, 1))
        break;
      v24 = objc_msgSend(v21, "podcast");
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v24, "objectID");
        if ((v19 & 0xC000000000000001) != 0)
        {
          if (v19 < 0)
            v27 = v19;
          else
            v27 = v19 & 0xFFFFFFFFFFFFFF8;
          v28 = v25;
          v29 = __CocoaDictionary.count.getter(v27);
          if (__OFADD__(v29, 1))
            goto LABEL_88;
          v30 = sub_10022AFB8(v27, v29 + 1);
        }
        else
        {
          v31 = v25;
          v30 = v19;
        }
        v32 = v30;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v30);
        v101 = (_QWORD *)v32;
        v34 = sub_1001CD324((uint64_t)v26);
        v35 = *(_QWORD *)(v32 + 16);
        v36 = (v33 & 1) == 0;
        v37 = v35 + v36;
        if (__OFADD__(v35, v36))
          goto LABEL_87;
        v38 = v33;
        if (*(_QWORD *)(v32 + 24) >= v37)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_10021EAE8();
        }
        else
        {
          sub_100219648(v37, isUniquelyReferenced_nonNull_native);
          v39 = sub_1001CD324((uint64_t)v26);
          if ((v38 & 1) != (v40 & 1))
            goto LABEL_96;
          v34 = v39;
        }
        v41 = v101;
        if ((v38 & 1) != 0)
        {
          v19 = (uint64_t)v101;
          v42 = v101[7];

          *(_QWORD *)(v42 + 8 * v34) = v25;
        }
        else
        {
          v101[(v34 >> 6) + 8] |= 1 << v34;
          *(_QWORD *)(v41[6] + 8 * v34) = v26;
          *(_QWORD *)(v41[7] + 8 * v34) = v25;
          v43 = v41[2];
          v44 = __OFADD__(v43, 1);
          v45 = v43 + 1;
          if (v44)
            goto LABEL_89;
          v19 = (uint64_t)v41;
          v41[2] = v45;
          v46 = v26;
        }

        swift_bridgeObjectRelease(0x8000000000000000);
        isUniquelyReferenced_nonNull_native = v99;
        v18 = v95;
      }
      else
      {

      }
      ++v20;
      if (v23 == v18)
        goto LABEL_34;
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    if (isUniquelyReferenced_nonNull_native < 0)
      v87 = isUniquelyReferenced_nonNull_native;
    else
      v87 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
  }
  v19 = (uint64_t)&_swiftEmptyDictionarySingleton;
LABEL_34:
  v90 = v19;
  swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
  v47 = v90;
  if ((v90 & 0xC000000000000001) != 0)
  {
    if (v90 < 0)
      v48 = v90;
    else
      v48 = v90 & 0xFFFFFFFFFFFFFF8;
    v49 = __CocoaDictionary.makeIterator()(v48);
    v47 = v90;
    v98 = 0;
    v50 = 0;
    v51 = 0;
    v52 = v49 | 0x8000000000000000;
  }
  else
  {
    v53 = -1 << *(_BYTE *)(v90 + 32);
    v50 = ~v53;
    v54 = *(_QWORD *)(v90 + 64);
    v98 = v90 + 64;
    v55 = -v53;
    if (v55 < 64)
      v56 = ~(-1 << v55);
    else
      v56 = -1;
    v51 = v56 & v54;
    v52 = v90;
  }
  v57 = swift_bridgeObjectRetain(v47);
  v58 = 0;
  v94 = v52 & 0x7FFFFFFFFFFFFFFFLL;
  v89[1] = v50;
  v59 = (unint64_t)(v50 + 64) >> 6;
  isUniquelyReferenced_nonNull_native = (uint64_t)&qword_100560000;
  v93 = (char *)&type metadata for Swift.AnyObject + 8;
  if ((v52 & 0x8000000000000000) == 0)
  {
LABEL_44:
    if (v51)
    {
      v60 = (v51 - 1) & v51;
      v61 = __clz(__rbit64(v51)) | (v58 << 6);
      v62 = v58;
    }
    else
    {
      v68 = v58 + 1;
      if (__OFADD__(v58, 1))
        goto LABEL_90;
      if (v68 >= v59)
        goto LABEL_68;
      v69 = *(_QWORD *)(v98 + 8 * v68);
      v62 = v58 + 1;
      if (!v69)
      {
        v62 = v58 + 2;
        if (v58 + 2 >= v59)
          goto LABEL_68;
        v69 = *(_QWORD *)(v98 + 8 * v62);
        if (!v69)
        {
          v62 = v58 + 3;
          if (v58 + 3 >= v59)
            goto LABEL_68;
          v69 = *(_QWORD *)(v98 + 8 * v62);
          if (!v69)
          {
            v62 = v58 + 4;
            if (v58 + 4 >= v59)
              goto LABEL_68;
            v69 = *(_QWORD *)(v98 + 8 * v62);
            if (!v69)
            {
              v62 = v58 + 5;
              if (v58 + 5 >= v59)
                goto LABEL_68;
              v69 = *(_QWORD *)(v98 + 8 * v62);
              if (!v69)
              {
                v70 = v58 + 6;
                while (v59 != v70)
                {
                  v69 = *(_QWORD *)(v98 + 8 * v70++);
                  if (v69)
                  {
                    v62 = v70 - 1;
                    goto LABEL_64;
                  }
                }
                goto LABEL_68;
              }
            }
          }
        }
      }
LABEL_64:
      v60 = (v69 - 1) & v69;
      v61 = __clz(__rbit64(v69)) + (v62 << 6);
    }
    v67 = *(id *)(*(_QWORD *)(v52 + 56) + 8 * v61);
    if (v67)
      goto LABEL_66;
    goto LABEL_68;
  }
  while (1)
  {
    v63 = __CocoaDictionary.Iterator.next()(v57);
    if (!v63)
      break;
    v65 = v64;
    swift_unknownObjectRelease(v63);
    v100 = v65;
    v66 = sub_100005EC8(0, (unint64_t *)&qword_100553810, MTPodcast_ptr);
    swift_unknownObjectRetain(v65);
    swift_dynamicCast(&v101, &v100, v93, v66, 7);
    v67 = v101;
    swift_unknownObjectRelease(v65);
    v62 = v58;
    v60 = v51;
    if (!v67)
      break;
LABEL_66:
    sub_10028713C(v67, 0, 4, v97);

    v58 = v62;
    v51 = v60;
    if ((v52 & 0x8000000000000000) == 0)
      goto LABEL_44;
  }
LABEL_68:
  sub_10017F43C(v52);
  objc_msgSend(v92, "saveInCurrentBlock");
  v71 = v95;
  if (!v95)
  {
    v75 = _swiftEmptyArrayStorage;
    v72 = v99;
    goto LABEL_84;
  }
  v72 = v99;
  if (v95 < 1)
  {
    __break(1u);
LABEL_96:
    v88 = sub_100005EC8(0, &qword_100553D90, NSManagedObjectID_ptr);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v88);
    __break(1u);
  }
  else
  {
    v73 = v99 & 0xC000000000000001;
    swift_bridgeObjectRetain(v99);
    v74 = 0;
    v75 = _swiftEmptyArrayStorage;
    do
    {
      if (v73)
        v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v74, v72);
      else
        v76 = *(id *)(v72 + 8 * v74 + 32);
      v77 = v76;
      v78 = objc_msgSend(v76, "uuid");
      if (v78)
      {
        v79 = v78;
        v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v82 = v81;

        if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) == 0)
          v75 = sub_10027AE00(0, v75[2] + 1, 1, v75);
        v84 = v75[2];
        v83 = v75[3];
        if (v84 >= v83 >> 1)
          v75 = sub_10027AE00((_QWORD *)(v83 > 1), v84 + 1, 1, v75);
        v75[2] = v84 + 1;
        v85 = &v75[2 * v84];
        v85[4] = v80;
        v85[5] = v82;
        v72 = v99;
      }
      else
      {

      }
      ++v74;
    }
    while (v71 != v74);
    swift_bridgeObjectRelease(v72);
LABEL_84:
    swift_bridgeObjectRelease(v72);
    v86 = v90;
    *v91 = v75;
    swift_bridgeObjectRelease(v86);
  }
}

void sub_1002B73D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v7 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(a1, "episodeForUuid:", v7);

  if (v11)
  {
    v8 = objc_msgSend(v11, "podcast");
    if (v8)
    {
      v9 = v8;
      sub_10028713C(v8, 1, 4, a5);

      v10 = v9;
    }
    else
    {
      v10 = v11;
    }

  }
}

void sub_1002B74A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  char **v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char **v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;
  id v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  char v58;
  char v59;
  unsigned int isUniquelyReferenced_nonNull_native;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;

  v8 = sub_100139094((uint64_t)_swiftEmptyArrayStorage);
  v65 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v66 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  v13 = &selRef_dateLabelDescriptionForEpisode_download_;
  v64 = a1;
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v12 << 6);
LABEL_21:
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v15 + 8);
    swift_bridgeObjectRetain(v19);
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(a2, v13[308], v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

    if (v21)
    {
      v22 = objc_msgSend(v21, "podcast");
      if (v22)
      {
        v23 = v22;
        v24 = a3;
        v25 = a4;
        v26 = v13;
        v27 = objc_msgSend(v22, "uuid");
        if (v27)
        {
          v28 = v27;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v62 = v30;
          v63 = v29;

          v61 = v23;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
          v32 = sub_10002E5D8(v63, v62);
          v33 = *(_QWORD *)(v8 + 16);
          v34 = (v31 & 1) == 0;
          v35 = v33 + v34;
          if (__OFADD__(v33, v34))
            goto LABEL_63;
          if (*(_QWORD *)(v8 + 24) >= v35)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v59 = v31;
              sub_10021EC90();
              v31 = v59;
            }
          }
          else
          {
            v58 = v31;
            sub_100219920(v35, isUniquelyReferenced_nonNull_native);
            v36 = sub_10002E5D8(v63, v62);
            v38 = v37 & 1;
            v31 = v58;
            if ((v58 & 1) != v38)
              goto LABEL_65;
            v32 = v36;
          }
          if ((v31 & 1) != 0)
          {
            v39 = *(_QWORD *)(v8 + 56);
            v40 = 8 * v32;

            *(_QWORD *)(v39 + v40) = v61;
            v41 = v61;
          }
          else
          {
            *(_QWORD *)(v8 + 8 * (v32 >> 6) + 64) |= 1 << v32;
            v42 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v32);
            *v42 = v63;
            v42[1] = v62;
            v41 = v61;
            *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v32) = v61;
            v43 = *(_QWORD *)(v8 + 16);
            v44 = __OFADD__(v43, 1);
            v45 = v43 + 1;
            if (v44)
              goto LABEL_64;
            *(_QWORD *)(v8 + 16) = v45;
            swift_bridgeObjectRetain(v62);
          }

          swift_bridgeObjectRelease(v62);
          swift_bridgeObjectRelease(0x8000000000000000);
          v13 = v26;
          a4 = v25;
          a3 = v24;
          a1 = v64;
        }
        else
        {

          a4 = v25;
          a3 = v24;
          a1 = v64;

        }
      }
      else
      {

      }
    }
  }
  v16 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v16 >= v66)
    goto LABEL_36;
  v17 = *(_QWORD *)(v65 + 8 * v16);
  ++v12;
  if (v17)
    goto LABEL_20;
  v12 = v16 + 1;
  if (v16 + 1 >= v66)
    goto LABEL_36;
  v17 = *(_QWORD *)(v65 + 8 * v12);
  if (v17)
    goto LABEL_20;
  v12 = v16 + 2;
  if (v16 + 2 >= v66)
    goto LABEL_36;
  v17 = *(_QWORD *)(v65 + 8 * v12);
  if (v17)
  {
LABEL_20:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
    goto LABEL_21;
  }
  v18 = v16 + 3;
  if (v18 < v66)
  {
    v17 = *(_QWORD *)(v65 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v12 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        if (v12 >= v66)
          goto LABEL_36;
        v17 = *(_QWORD *)(v65 + 8 * v12);
        ++v18;
        if (v17)
          goto LABEL_20;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v12 = v18;
    goto LABEL_20;
  }
LABEL_36:
  swift_release(a1);
  v46 = v8 + 64;
  v47 = 1 << *(_BYTE *)(v8 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & *(_QWORD *)(v8 + 64);
  v50 = (unint64_t)(v47 + 63) >> 6;
  swift_bridgeObjectRetain(v8);
  v51 = 0;
  while (2)
  {
    if (v49)
    {
      v52 = __clz(__rbit64(v49));
      v49 &= v49 - 1;
      v53 = v52 | (v51 << 6);
LABEL_40:
      v54 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v53);
      sub_10028713C(v54, 1, 4, a4);

      continue;
    }
    break;
  }
  v55 = v51 + 1;
  if (__OFADD__(v51, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v55 >= v50)
    goto LABEL_58;
  v56 = *(_QWORD *)(v46 + 8 * v55);
  ++v51;
  if (v56)
    goto LABEL_57;
  v51 = v55 + 1;
  if (v55 + 1 >= v50)
    goto LABEL_58;
  v56 = *(_QWORD *)(v46 + 8 * v51);
  if (v56)
    goto LABEL_57;
  v51 = v55 + 2;
  if (v55 + 2 >= v50)
    goto LABEL_58;
  v56 = *(_QWORD *)(v46 + 8 * v51);
  if (v56)
    goto LABEL_57;
  v51 = v55 + 3;
  if (v55 + 3 >= v50)
    goto LABEL_58;
  v56 = *(_QWORD *)(v46 + 8 * v51);
  if (v56)
  {
LABEL_57:
    v49 = (v56 - 1) & v56;
    v53 = __clz(__rbit64(v56)) + (v51 << 6);
    goto LABEL_40;
  }
  v57 = v55 + 4;
  if (v57 >= v50)
  {
LABEL_58:
    swift_release(v8);
    swift_bridgeObjectRelease(v8);
    return;
  }
  v56 = *(_QWORD *)(v46 + 8 * v57);
  if (v56)
  {
    v51 = v57;
    goto LABEL_57;
  }
  while (1)
  {
    v51 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    if (v51 >= v50)
      goto LABEL_58;
    v56 = *(_QWORD *)(v46 + 8 * v51);
    ++v57;
    if (v56)
      goto LABEL_57;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void PodcastsStateCoordinator.removeDownload(forEpisodeWithUUID:from:shouldAllowAutomaticRedownloads:completionHandler:)(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  NSString v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock[5];
  uint64_t v42;

  v7 = v6;
  v14 = type metadata accessor for Logger(0);
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  v15 = __chkstk_darwin();
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v15);
  v18 = static os_log_type_t.default.getter();
  v19 = swift_bridgeObjectRetain_n(a2, 2);
  v20 = Logger.logObject.getter(v19);
  if (os_log_type_enabled(v20, v18))
  {
    v21 = swift_slowAlloc(22, -1);
    v37 = a1;
    v22 = v21;
    v23 = swift_slowAlloc(64, -1);
    v36 = a4;
    v34 = v23;
    aBlock[0] = v23;
    *(_DWORD *)v22 = 136315394;
    v24 = PodcastsStateChangeOrigin.description.getter(a3);
    v26 = v25;
    v40 = sub_10003D274(v24, v25, aBlock);
    v35 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, aBlock, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v40 = sub_10003D274(v37, a2, aBlock);
    v7 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, aBlock, v22 + 14, v22 + 22);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v20, v18, "Removing download (origin: %s) for episode with UUID: %s.", (uint8_t *)v22, 0x16u);
    v27 = v34;
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    LOBYTE(a4) = v36;
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v39);
  v28 = *(void **)(v7 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway);
  v29 = String._bridgeToObjectiveC()();
  v30 = swift_allocObject(&unk_1004BD1E0, 32, 7);
  *(_QWORD *)(v30 + 16) = a5;
  *(_QWORD *)(v30 + 24) = a6;
  aBlock[4] = (uint64_t)sub_1002BA688;
  v42 = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002B7D10;
  aBlock[3] = (uint64_t)&unk_1004BD1F8;
  v31 = _Block_copy(aBlock);
  v32 = v42;
  sub_10002CA20(a5, a6);
  objc_msgSend(v28, "removeDownload:shouldAllowAutomaticRedownloads:completion:", v29, a4 & 1, v31, swift_release(v32).n128_f64[0]);
  _Block_release(v31);

}

void sub_1002B7C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  id v6;

  v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v6, "postNotificationName:object:", PFMediaDownloadWasDeletedNotification, 0);

  if (a5)
    a5();
}

uint64_t sub_1002B7D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  if (a3)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    a3 = v10;
  }
  else
  {
    v9 = 0;
  }
  swift_retain(v4);
  v5(v6, v8, v9, a3);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);
  return swift_bridgeObjectRelease(a3);
}

uint64_t PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v19;

  type metadata accessor for EpisodePlayerItem(0);
  __chkstk_darwin();
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastPlayerItem(0);
  __chkstk_darwin();
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlayerItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1;
  sub_1001E8B20(v16);
  v17 = v16;
  sub_1001E8C68(v17, (uint64_t)v9);
  PlayerItem.init(podcast:episode:)(v11, v9);

  PodcastsStateCoordinator.insertNewImplicitFollowIfNeeded(for:from:completion:)((uint64_t)v15, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_1002B8068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v9;
  NSString v10;
  id v11;

  if (!a3)
  {
    v9 = 0;
    if (a5)
      goto LABEL_3;
LABEL_5:
    v10 = 0;
    goto LABEL_6;
  }
  v9 = String._bridgeToObjectiveC()();
  if (!a5)
    goto LABEL_5;
LABEL_3:
  v10 = String._bridgeToObjectiveC()();
LABEL_6:
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t, NSString))(a6 + 16))(a6, a1, v9);

}

void sub_1002B8100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  os_log_type_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  uint64_t (*v37)(char *, uint64_t, __n128);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  os_log_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t, __n128);
  int v77;
  uint64_t v78;
  os_log_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t aBlock[5];
  uint64_t v96;

  v91 = a3;
  v92 = a4;
  v90 = a2;
  v80 = type metadata accessor for EpisodePlayerItem(0);
  v79 = *(os_log_t *)(v80 - 8);
  __chkstk_darwin();
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlayerItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v87 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v74 - v10;
  __chkstk_darwin();
  v13 = (char *)&v74 - v12;
  v81 = v14;
  __chkstk_darwin();
  v16 = (char *)&v74 - v15;
  v17 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v17 - 8);
  v85 = v17;
  v18 = __chkstk_darwin();
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v18);
  v21 = static os_log_type_t.default.getter();
  v93 = v8;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v22(v16, a1, v7);
  v22(v13, a1, v7);
  v82 = v11;
  v89 = a1;
  v86 = v22;
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v11, a1, v7);
  v83 = v20;
  v24 = Logger.logObject.getter(v23);
  v25 = v21;
  if (os_log_type_enabled(v24, v21))
  {
    v26 = swift_slowAlloc(32, -1);
    v27 = swift_slowAlloc(64, -1);
    v78 = v27;
    aBlock[0] = v27;
    *(_DWORD *)v26 = 136381187;
    v76 = (void (*)(char *, uint64_t, __n128))(v26 + 4);
    v77 = v25;
    v28 = PlayerItem.episode.getter(v27);
    v29 = EpisodePlayerItem.title.getter(v28);
    v31 = v30;
    isa = v79[1].isa;
    ((void (*)(char *, uint64_t))isa)(v6, v80);
    v75 = (void (*)(char *, uint64_t))isa;
    v33 = Optional<A>.description.getter(v29, v31);
    v79 = v24;
    v35 = v34;
    swift_bridgeObjectRelease(v31);
    v94 = sub_10003D274(v33, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, aBlock, v76, v26 + 12);
    v36 = swift_bridgeObjectRelease(v35);
    v37 = *(uint64_t (**)(char *, uint64_t, __n128))(v93 + 8);
    v38 = v37(v16, v7, v36);
    v39 = (void (*)(char *, uint64_t))v37;
    v76 = (void (*)(char *, uint64_t, __n128))v37;
    *(_WORD *)(v26 + 12) = 2049;
    v40 = PlayerItem.episode.getter(v38);
    v41 = EpisodePlayerItem.adamID.getter(v40);
    v42 = v80;
    ((void (*)(char *, uint64_t))isa)(v6, v80);
    v39(v13, v7);
    v94 = v41;
    v43 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, aBlock, v26 + 14, v26 + 22);
    *(_WORD *)(v26 + 22) = 2081;
    v44 = v82;
    v45 = PlayerItem.episode.getter(v43);
    v46 = EpisodePlayerItem.guid.getter(v45);
    v48 = v47;
    v75(v6, v42);
    v49 = Optional<A>.description.getter(v46, v48);
    v51 = v50;
    swift_bridgeObjectRelease(v48);
    v94 = sub_10003D274(v49, v51, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, aBlock, v26 + 24, v26 + 32);
    v52 = swift_bridgeObjectRelease(v51);
    v76(v44, v7, v52);
    v53 = v79;
    _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v77, "Inserting new Implicit Follow if needed for currently playing episode: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v26, 0x20u);
    v54 = v78;
    swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {
    v55 = *(void (**)(char *, uint64_t))(v93 + 8);
    v55(v13, v7);
    v55(v16, v7);
    v55(v82, v7);

  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
  v56 = v88;
  v57 = objc_msgSend(*(id *)(v88 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider), "privateQueueContext");
  v58 = swift_allocObject(&unk_1004BCF60, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16, v56);
  v59 = v87;
  v86(v87, v89, v7);
  v60 = v93;
  v61 = *(unsigned __int8 *)(v93 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (v81 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = swift_allocObject(&unk_1004BD2F8, v64 + 16, v61 | 7);
  v66 = v60;
  v67 = v65;
  *(_QWORD *)(v65 + 16) = v58;
  *(_QWORD *)(v65 + 24) = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v65 + v62, v59, v7);
  v68 = v91;
  *(_QWORD *)(v67 + v63) = v90;
  v69 = (_QWORD *)(v67 + v64);
  v70 = v92;
  *v69 = v68;
  v69[1] = v70;
  aBlock[4] = (uint64_t)sub_1002BBAD0;
  v96 = v67;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100027AF8;
  aBlock[3] = (uint64_t)&unk_1004BD310;
  v71 = _Block_copy(aBlock);
  v72 = v96;
  v73 = v57;
  swift_retain();
  objc_msgSend(v73, "performBlock:", v71, swift_release(v72).n128_f64[0]);
  _Block_release(v71);

}

void PodcastsStateCoordinator.unsafeEpisodePlayedBeyondThresholdForFirstTime(_:from:)(void *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, _QWORD *);
  char *v22;
  id v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  double v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  id v61;
  id v62;
  uint64_t v63;

  v4 = (_QWORD *)type metadata accessor for Logger(0);
  v5 = *(v4 - 1);
  __chkstk_darwin();
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin();
  v10 = (char *)&v58 - v9;
  if (!a1)
  {
    v13 = static Logger.podcastsStatesCoordination.getter(v8);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v63 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = PodcastsStateChangeOrigin.description.getter(a2);
      v20 = v19;
      v62 = (id)sub_10003D274(v18, v19, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v16 + 4, v16 + 12);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "We can't transition podcast for nil MTEpisode; Origin: %s.",
        v16,
        0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    v21 = *(void (**)(char *, _QWORD *))(v5 + 8);
    v22 = v7;
    goto LABEL_11;
  }
  v11 = a1;
  v12 = objc_msgSend(v11, "podcast");
  if (v12)
  {
    v61 = v12;
    sub_10028713C(v12, 5, 4, a2);

    return;
  }
  static Logger.podcastsStatesCoordination.getter(0);
  v23 = v11;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter(v24);
  if (!os_log_type_enabled(v24, (os_log_type_t)v25))
  {

    v21 = *(void (**)(char *, _QWORD *))(v5 + 8);
    v22 = v10;
LABEL_11:
    v21(v22, v4);
    return;
  }
  v60 = v25;
  v61 = v4;
  v26 = swift_slowAlloc(42, -1);
  v59 = swift_slowAlloc(128, -1);
  v63 = v59;
  *(_DWORD *)v26 = 136381443;
  v27 = objc_msgSend(v23, "title");
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v32 = Optional<A>.description.getter(v29, v31);
  v34 = v33;
  swift_bridgeObjectRelease(v31);
  v62 = (id)sub_10003D274(v32, v34, &v63);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v26 + 4, v26 + 12);

  *(_QWORD *)&v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
  *(_WORD *)(v26 + 12) = 2080;
  v36 = objc_msgSend(v23, "uuid", v35);
  if (v36)
  {
    v37 = v36;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v40 = v39;

  }
  else
  {
    v38 = 0;
    v40 = 0;
  }
  v41 = Optional<A>.description.getter(v38, v40);
  v43 = v42;
  swift_bridgeObjectRelease(v40);
  v62 = (id)sub_10003D274(v41, v43, &v63);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v26 + 14, v26 + 22);

  *(_QWORD *)&v44 = swift_bridgeObjectRelease(v43).n128_u64[0];
  *(_WORD *)(v26 + 22) = 2081;
  v62 = objc_msgSend(v23, "storeTrackId", v44);
  v45 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
  v47 = v46;
  v62 = (id)sub_10003D274(v45, v46, &v63);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v26 + 24, v26 + 32);

  *(_QWORD *)&v48 = swift_bridgeObjectRelease(v47).n128_u64[0];
  *(_WORD *)(v26 + 32) = 2081;
  v49 = objc_msgSend(v23, "guid", v48);
  if (v49)
  {
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

  }
  else
  {
    v51 = 0;
    v53 = 0;
  }
  v54 = Optional<A>.description.getter(v51, v53);
  v56 = v55;
  swift_bridgeObjectRelease(v53);
  v62 = (id)sub_10003D274(v54, v56, &v63);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v26 + 34, v26 + 42);

  swift_bridgeObjectRelease(v56);
  _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v60, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v26, 0x2Au);
  v57 = v59;
  swift_arrayDestroy(v59, 4, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v57, -1, -1);
  swift_slowDealloc(v26, -1, -1);

  (*(void (**)(char *, id))(v5 + 8))(v10, v61);
}

void PodcastsStateCoordinator.unsafeMark(_:as:in:from:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1002BABD4(a1, a2, a4);
}

double sub_1002B8D48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void *), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  id v27;
  char *v28;
  id v29;
  NSObject *v30;
  int v31;
  char **v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  char *v54;
  void (*v55)(char *, char *);
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  id v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  double v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  double v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  double v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  os_log_t v94;
  uint64_t v95;
  id v96;
  double v97;
  void *v98;
  uint64_t v99;
  id v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  int v113;
  os_log_t v114;
  id v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, uint64_t, void *);
  uint64_t Strong;
  id v125;
  uint64_t v126;
  char v127[24];

  v122 = a6;
  v123 = a5;
  v120 = a4;
  v9 = type metadata accessor for Logger(0);
  v117 = *(_QWORD **)(v9 - 8);
  v118 = v9;
  __chkstk_darwin();
  v121 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PodcastPlayerItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EpisodePlayerItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v119 = (char *)&v112 - v19;
  __chkstk_darwin();
  v21 = (char *)&v112 - v20;
  a1 += 16;
  swift_beginAccess(a1, v127, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v23 = ((uint64_t (*)(void))PlayerItem.episode.getter)();
    v24 = EpisodePlayerItem.adamID.getter(v23);
    v25 = *(void (**)(char *, uint64_t))(v16 + 8);
    v25(v21, v15);
    v26 = objc_msgSend(a2, "episodeForStoreTrackID:", v24);
    if (v26)
    {
      v115 = a2;
      v116 = a3;
      v27 = v26;
      v28 = v121;
      static Logger.podcastsStatesCoordination.getter(v27);
      v29 = v27;
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.error.getter(v30);
      v32 = &selRef_uniquenessHash;
      if (os_log_type_enabled(v30, (os_log_type_t)v31))
      {
        v113 = v31;
        v114 = v30;
        v33 = swift_slowAlloc(42, -1);
        v112 = swift_slowAlloc(128, -1);
        v126 = v112;
        *(_DWORD *)v33 = 136381443;
        v34 = objc_msgSend(v29, "title");
        if (v34)
        {
          v35 = v34;
          v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
          v38 = v37;

        }
        else
        {
          v36 = 0;
          v38 = 0;
        }
        v69 = Optional<A>.description.getter(v36, v38);
        v71 = v70;
        swift_bridgeObjectRelease(v38);
        v125 = (id)sub_10003D274(v69, v71, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v33 + 4, v33 + 12);

        *(_QWORD *)&v72 = swift_bridgeObjectRelease(v71).n128_u64[0];
        *(_WORD *)(v33 + 12) = 2080;
        v73 = objc_msgSend(v29, "uuid", v72);
        if (v73)
        {
          v74 = v73;
          v63 = v25;
          v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
          v77 = v76;

        }
        else
        {
          v63 = v25;
          v75 = 0;
          v77 = 0;
        }
        v78 = Optional<A>.description.getter(v75, v77);
        v80 = v79;
        swift_bridgeObjectRelease(v77);
        v125 = (id)sub_10003D274(v78, v80, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v33 + 14, v33 + 22);

        *(_QWORD *)&v81 = swift_bridgeObjectRelease(v80).n128_u64[0];
        *(_WORD *)(v33 + 22) = 2081;
        v125 = objc_msgSend(v29, "storeTrackId", v81);
        v82 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v84 = v83;
        v125 = (id)sub_10003D274(v82, v83, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v33 + 24, v33 + 32);

        *(_QWORD *)&v85 = swift_bridgeObjectRelease(v84).n128_u64[0];
        *(_WORD *)(v33 + 32) = 2081;
        v86 = objc_msgSend(v29, "guid", v85);
        if (v86)
        {
          v87 = v86;
          v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
          v90 = v89;

        }
        else
        {
          v88 = 0;
          v90 = 0;
        }
        v91 = Optional<A>.description.getter(v88, v90);
        v93 = v92;
        swift_bridgeObjectRelease(v90);
        v125 = (id)sub_10003D274(v91, v93, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v33 + 34, v33 + 42);

        swift_bridgeObjectRelease(v93);
        v94 = v114;
        _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v113, "Abort new Implicit Follow insertion: Episode already in the DB: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v33, 0x2Au);
        v95 = v112;
        swift_arrayDestroy(v112, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v95, -1, -1);
        swift_slowDealloc(v33, -1, -1);

        ((void (*)(char *, uint64_t))v117[1])(v121, v118);
        v32 = &selRef_uniquenessHash;
      }
      else
      {
        v63 = v25;

        ((void (*)(char *, uint64_t))v117[1])(v28, v118);
      }
      v96 = objc_msgSend(v29, "podcast");
      if (v96)
      {
        v98 = v96;
        v99 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions);
        swift_retain();
        sub_10028713C(v98, 3, 4, v120);

        *(_QWORD *)&v97 = swift_release(v99).n128_u64[0];
      }
      v100 = objc_msgSend(v115, "saveInCurrentBlock", v97);
      v101 = v119;
      v102 = PlayerItem.episode.getter(v100);
      v103 = EpisodePlayerItem.adamID.getter(v102);
      v63(v101, v15);
      v104 = objc_msgSend(v29, v32[219]);
      if (v104)
      {
        v105 = v104;
        v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
        v62 = v107;

      }
      else
      {
        v106 = 0;
        v62 = 0;
      }
      v108 = objc_msgSend(v29, "podcast");
      v68 = v108;
      if (v108)
      {
        v109 = objc_msgSend(v108, v32[219]);

        if (v109)
        {
          v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
          v68 = v111;

        }
        else
        {
          v110 = 0;
          v68 = 0;
        }
      }
      else
      {
        v110 = 0;
      }
      v123(v103, v106, v62, v110, v68);
      v52 = (id)Strong;
      v53 = v29;
    }
    else
    {
      v119 = (char *)v25;
      v121 = (char *)v15;
      v39 = PlayerItem.podcast.getter();
      v40 = PodcastPlayerItem.adamID.getter(v39);
      v41 = *(void (**)(char *, uint64_t))(v12 + 8);
      v41(v14, v11);
      v42 = objc_msgSend(a2, "podcastForStoreId:", v40);
      v43 = v42;
      if (!v42)
      {
        v44 = *(_QWORD *)(Strong
                        + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                        + 24);
        v118 = *(_QWORD *)(Strong
                         + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                         + 32);
        v117 = sub_10003A834((_QWORD *)(Strong+ OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore), v44);
        PlayerItem.podcast.getter();
        v45 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertPodcastInStoreState(in:for:)(a2, v14, v44, v118);
        v41(v14, v11);
        v43 = v45;
      }
      v46 = Strong;
      v47 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions);
      swift_retain();
      v48 = v42;
      sub_10028713C(v43, 3, 4, v120);

      swift_release(v47);
      v49 = (_QWORD *)(v46 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore);
      v50 = *(_QWORD *)(v46
                      + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore
                      + 24);
      v51 = v49[4];
      sub_10003A834(v49, v50);
      ((void (*)(void))PlayerItem.episode.getter)();
      v52 = v43;
      v53 = (void *)dispatch thunk of PodcastsStateCoordinatorPersistentStoreProtocol.insertEpisode(in:for:asPartOf:)(a2, v21, v43, v50, v51);

      v54 = v121;
      v55 = (void (*)(char *, char *))v119;
      ((void (*)(char *, char *))v119)(v21, v121);
      v56 = PlayerItem.episode.getter(objc_msgSend(a2, "saveInCurrentBlock"));
      v57 = EpisodePlayerItem.adamID.getter(v56);
      v55(v18, v54);
      v58 = objc_msgSend(v53, "uuid");
      if (v58)
      {
        v59 = v58;
        v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
        v62 = v61;

      }
      else
      {
        v60 = 0;
        v62 = 0;
      }
      v64 = objc_msgSend(v52, "uuid");
      if (v64)
      {
        v65 = v64;
        v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
        v68 = v67;

      }
      else
      {
        v66 = 0;
        v68 = 0;
      }
      v123(v57, v60, v62, v66, v68);
      v29 = (id)Strong;
    }

    swift_bridgeObjectRelease(v68);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v62).n128_u64[0];
  }
  return result;
}

uint64_t PodcastsStateCoordinator.unsafeDidBumpLastDatePlayed(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  NSObject *v29;
  uint8_t *v30;
  uint64_t v32;
  double v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  id v67;
  uint64_t v68[5];

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v59 - v12;
  v14 = type metadata accessor for Podcasts(0);
  v68[3] = v14;
  v68[4] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v15 = sub_1000242A8(v68);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, enum case for Podcasts.simplifiedSyncDirtyHandling(_:), v14);
  LOBYTE(v14) = isFeatureEnabled(_:)(v68);
  v16 = sub_10003D380(v68);
  if ((v14 & 1) != 0)
  {
    v65 = v4;
    v17 = v9;
    static Logger.podcastsStatesCoordination.getter(v16);
    v18 = static os_log_type_t.default.getter();
    v19 = a1;
    v20 = Logger.logObject.getter(v19);
    v66 = v18;
    if (os_log_type_enabled(v20, (os_log_type_t)v18))
    {
      v61 = v20;
      v62 = v5;
      v64 = v8;
      v21 = swift_slowAlloc(62, -1);
      v59 = swift_slowAlloc(160, -1);
      v68[0] = v59;
      *(_DWORD *)v21 = 136381955;
      v22 = objc_msgSend(v19, "title");
      v60 = v17;
      v63 = v2;
      if (v22)
      {
        v23 = v22;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v26 = v25;

      }
      else
      {
        v26 = 0xEA00000000003E65;
        v24 = 0x6C746974206F6E3CLL;
      }
      v32 = v65;
      v67 = (id)sub_10003D274(v24, v26, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 4, v21 + 12);

      *(_QWORD *)&v33 = swift_bridgeObjectRelease(v26).n128_u64[0];
      *(_WORD *)(v21 + 12) = 2080;
      v34 = objc_msgSend(v19, "uuid", v33);
      if (v34)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

      }
      else
      {
        v38 = 0xE700000000000000;
        v36 = 0x3E7974706D653CLL;
      }
      v67 = (id)sub_10003D274(v36, v38, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 14, v21 + 22);

      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
      *(_WORD *)(v21 + 22) = 2080;
      v67 = objc_msgSend(v19, "managedObjectContext", v39);
      v40 = sub_10003F544(&qword_1005534F0);
      v41 = String.init<A>(describing:)(&v67, v40);
      v43 = v42;
      v67 = (id)sub_10003D274(v41, v42, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 24, v21 + 32);

      *(_QWORD *)&v44 = swift_bridgeObjectRelease(v43).n128_u64[0];
      *(_WORD *)(v21 + 32) = 2049;
      v45 = objc_msgSend(v19, "storeCollectionId", v44);

      v67 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 34, v21 + 42);

      *(_WORD *)(v21 + 42) = 2081;
      v46 = objc_msgSend(v19, "feedURL");
      if (v46)
      {
        v47 = v46;
        v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
        v50 = v49;

      }
      else
      {
        v50 = 0xE700000000000000;
        v48 = 0x3E7974706D653CLL;
      }
      v67 = (id)sub_10003D274(v48, v50, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 44, v21 + 52);

      *(_QWORD *)&v51 = swift_bridgeObjectRelease(v50).n128_u64[0];
      *(_WORD *)(v21 + 52) = 2081;
      objc_msgSend(v19, "lastDatePlayed", v51);
      Date.init(timeIntervalSinceReferenceDate:)(v52);
      v53 = sub_100026844(qword_100560490, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v54 = dispatch thunk of CustomStringConvertible.description.getter(v32, v53);
      v56 = v55;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v32);
      v67 = (id)sub_10003D274(v54, v56, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v21 + 54, v21 + 62);

      swift_bridgeObjectRelease(v56);
      v57 = v61;
      _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v66, "Change detected in lastDatePlayed of podcast: %{private}s, uuid: %s, MOC: %s, adamID: %{private}lld, feedURL: %{private}s. New lastDatePlayed = %{private}s", (uint8_t *)v21, 0x3Eu);
      v58 = v59;
      swift_arrayDestroy(v59, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v64);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v8);
    }
    return sub_10028713C(v19, 9, 4, 4);
  }
  else
  {
    static Logger.podcastsStatesCoordination.getter(v16);
    v27 = static os_log_type_t.default.getter();
    v28 = v27;
    v29 = Logger.logObject.getter(v27);
    if (os_log_type_enabled(v29, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      swift_slowDealloc(v30, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1002B9D5C()
{
  return sub_10002A264((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002B6A34);
}

uint64_t sub_1002B9D6C()
{
  return sub_10002A264((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002B53E0);
}

void sub_1002B9D7C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1002B6CA4(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1002B9D9C()
{
  return sub_10002A264((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002B73D8);
}

uint64_t sub_1002B9DA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002B9DDC()
{
  uint64_t v0;

  sub_1002B74A8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

id sub_1002B9DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v16;
  id v17;
  objc_super v19;
  _QWORD v20[5];

  v16 = type metadata accessor for PodcastsStateCoordinatorPersistentStore(0);
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_downloadsGateway] = a1;
  v20[3] = v16;
  v20[4] = &protocol witness table for PodcastsStateCoordinatorPersistentStore;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateTransitions] = a2;
  v20[0] = a5;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_episodeStateRepository] = a3;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_contextProvider] = a4;
  sub_10000A520((uint64_t)v20, (uint64_t)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_podcastsStateCoordinatorPersistentStore]);
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_syncController] = a6;
  *(_QWORD *)&a8[OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_library] = a7;
  v19.receiver = a8;
  v19.super_class = (Class)type metadata accessor for PodcastsStateCoordinator();
  v17 = objc_msgSendSuper2(&v19, "init");
  sub_10003D380(v20);
  return v17;
}

id sub_1002B9EF0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  double v56;
  char v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  char v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  Class isa;
  id v69;
  uint64_t v70;
  unint64_t v71;
  id result;
  char v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  os_log_t v79;
  char *v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v4 = type metadata accessor for RemoteNonFollowedShow(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v76 - v8;
  __chkstk_darwin();
  v11 = (char *)&v76 - v10;
  v12 = type metadata accessor for Logger(0);
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  v13 = __chkstk_darwin();
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.podcastsStatesCoordination.getter(v13);
  v16 = static os_log_type_t.default.getter();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18 = a1;
  v17(v11, a2, v4);
  v17(v9, a2, v4);
  v85 = a2;
  v17(v7, a2, v4);
  v19 = v18;
  v20 = Logger.logObject.getter(v19);
  v82 = v16;
  if (os_log_type_enabled(v20, (os_log_type_t)v16))
  {
    v77 = v5;
    v78 = v9;
    v79 = v20;
    v80 = v7;
    v81 = v15;
    v21 = swift_slowAlloc(82, -1);
    v76 = swift_slowAlloc(128, -1);
    v87 = v76;
    *(_DWORD *)v21 = 136382467;
    v22 = objc_msgSend(v19, "title");
    if (v22)
    {
      v23 = v22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;

    }
    else
    {
      v26 = 0xEA00000000003E65;
      v24 = 0x6C746974206F6E3CLL;
    }
    v86 = sub_10003D274(v24, v26, &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 4, v21 + 12);

    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v26).n128_u64[0];
    *(_WORD *)(v21 + 12) = 2080;
    v31 = objc_msgSend(v19, "uuid", v30);
    if (v31)
    {
      v32 = v31;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v35 = v34;

    }
    else
    {
      v35 = 0xE90000000000003ELL;
      v33 = 0x64697575206F6E3CLL;
    }
    v86 = sub_10003D274(v33, v35, &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 14, v21 + 22);

    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_WORD *)(v21 + 22) = 2049;
    v37 = objc_msgSend(v19, "storeCollectionId", v36);

    v86 = (uint64_t)v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 24, v21 + 32);

    *(_WORD *)(v21 + 32) = 2081;
    v38 = objc_msgSend(v19, "feedURL");
    if (v38)
    {
      v39 = v38;
      v40 = v82;
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v43 = v42;

    }
    else
    {
      v40 = v82;
      v43 = 0xE700000000000000;
      v41 = 0x3E7974706D653CLL;
    }
    v86 = sub_10003D274(v41, v43, &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 34, v21 + 42);

    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v43).n128_u64[0];
    *(_WORD *)(v21 + 42) = 2049;
    objc_msgSend(v19, "lastDatePlayed", v44);
    v86 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 44, v21 + 52);

    *(_WORD *)(v21 + 52) = 2049;
    v46 = RemoteNonFollowedShow.storeCollectionId.getter();
    v47 = *(void (**)(char *, uint64_t))(v77 + 8);
    v47(v11, v4);
    v86 = v46;
    v48 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 54, v21 + 62);
    *(_WORD *)(v21 + 62) = 2081;
    v49 = v78;
    v50 = RemoteNonFollowedShow.feedURL.getter(v48);
    v52 = v51;
    v86 = sub_10003D274(v50, v51, &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 64, v21 + 72);
    v53 = swift_bridgeObjectRelease(v52);
    v54 = ((uint64_t (*)(char *, uint64_t, __n128))v47)(v49, v4, v53);
    *(_WORD *)(v21 + 72) = 2049;
    v55 = v80;
    v56 = COERCE_DOUBLE(RemoteNonFollowedShow.lastDatePlayed.getter(v54));
    if ((v57 & 1) != 0)
      v56 = 0.0;
    v86 = *(_QWORD *)&v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v21 + 74, v21 + 82);
    v47(v55, v4);
    v58 = v79;
    _os_log_impl((void *)&_mh_execute_header, v79, v40, "Updating local podcast %{private}s, uuid: %s, adamID: %{private}lld, feedURL: %{private}s, lastDatePlayed: %{private}f; For remote NonFollowedShow with adamID: %{private}lld, feedURL: %{private}s, lastDatePlayed: %{private}f.",
      (uint8_t *)v21,
      0x52u);
    v59 = v76;
    swift_arrayDestroy(v76, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v29 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v81, v84);
  }
  else
  {
    v27 = v20;
    v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v28(v11, v4);

    v28(v9, v4);
    v28(v7, v4);

    v29 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v15, v84);
  }
  v60 = RemoteNonFollowedShow.unknownSyncProperties.getter(v29);
  v87 = v60;
  v61 = sub_10003F544(&qword_1005604E8);
  v62 = sub_10002F9C8((unint64_t *)&qword_1005604F0, &qword_1005604E8, (uint64_t)&protocol conformance descriptor for [A : B]);
  v64 = Collection.isNotEmpty.getter(v61, v62, v63);
  v65 = swift_bridgeObjectRelease(v60);
  if ((v64 & 1) != 0)
  {
    v66 = RemoteSyncTypeWithUnknownSyncProperties.encodeUnknownSyncProperties()(v4, &protocol witness table for RemoteNonFollowedShow, v65);
    if (v67 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      v70 = v66;
      v71 = v67;
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1001C0F60(v70, v71);
    }
    objc_msgSend(v19, "setImplicitFollowsUnknownSyncProperties:", isa);

  }
  else
  {
    v69 = objc_msgSend(v19, "setImplicitFollowsUnknownSyncProperties:", 0, v65.n128_f64[0]);
  }
  *(double *)&result = COERCE_DOUBLE(RemoteNonFollowedShow.lastDatePlayed.getter(v69));
  if ((v73 & 1) == 0)
  {
    v74 = *(double *)&result;
    *(double *)&result = COERCE_DOUBLE(objc_msgSend(v19, "lastDatePlayed"));
    if (v75 < v74)
      *(double *)&result = COERCE_DOUBLE(objc_msgSend(v19, "setLastDatePlayed:", v74));
  }
  return result;
}

uint64_t sub_1002BA5AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002BA5E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = (void *)v0[2];
  v2 = v0[5];
  v3 = v0[6];
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "unsafeEnableSubscriptionOnPodcastUUID:from:context:", v4, v2, v3);

}

uint64_t sub_1002BA640()
{
  return sub_10002A264((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002B4914);
}

void sub_1002BA650()
{
  uint64_t v0;

  sub_1002B50E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002BA65C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002BA688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1002B7C9C(a1, a2, a3, a4, *(void (**)(void))(v4 + 16));
}

double sub_1002BA690(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  double result;
  void (*v68)(char *, uint64_t);
  os_log_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const void *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, __n128);
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;

  v72 = a2;
  v73 = a3;
  v76 = type metadata accessor for EpisodePlayerItem(0);
  v78 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin();
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlayerItem(0);
  v79 = *(void (**)(char *, uint64_t, __n128))(v8 - 8);
  __chkstk_darwin();
  v80 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v68 - v10;
  __chkstk_darwin();
  v13 = (char *)&v68 - v12;
  v14 = type metadata accessor for Logger(0);
  v74 = *(_QWORD *)(v14 - 8);
  v75 = v14;
  __chkstk_darwin();
  v81 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PodcastPlayerItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1004BD230, 24, 7);
  *(_QWORD *)(v20 + 16) = a4;
  v77 = a4;
  v21 = _Block_copy(a4);
  v22 = PlayerItem.podcast.getter(v21);
  LOBYTE(a4) = PodcastPlayerItem.isSubscribeable.getter(v22);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((a4 & 1) != 0)
  {
    sub_1002B8100(a1, v72, (uint64_t)sub_1002BB9A8, v20);
    v24 = v20;
  }
  else
  {
    v73 = v20;
    static Logger.podcastsStatesCoordination.getter(v23);
    v25 = static os_log_type_t.default.getter();
    v26 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v79 + 2);
    v26(v13, a1, v8);
    v26(v11, a1, v8);
    v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v80, a1, v8);
    v28 = Logger.logObject.getter(v27);
    if (os_log_type_enabled(v28, v25))
    {
      v29 = swift_slowAlloc(32, -1);
      v70 = v25;
      v30 = v29;
      v31 = swift_slowAlloc(64, -1);
      v71 = v31;
      v83 = v31;
      *(_DWORD *)v30 = 136381187;
      v69 = v28;
      v32 = PlayerItem.episode.getter(v31);
      v33 = EpisodePlayerItem.title.getter(v32);
      v72 = a1;
      v35 = v34;
      v68 = *(void (**)(char *, uint64_t))(v78 + 8);
      v36 = v76;
      v68(v7, v76);
      v37 = Optional<A>.description.getter(v33, v35);
      v39 = v38;
      swift_bridgeObjectRelease(v35);
      v82 = sub_10003D274(v37, v39, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v30 + 4, v30 + 12);
      v40 = v36;
      v41 = swift_bridgeObjectRelease(v39);
      v42 = (uint64_t (*)(char *, uint64_t, __n128))*((_QWORD *)v79 + 1);
      v43 = v42(v13, v8, v41);
      v44 = (void (*)(char *, uint64_t))v42;
      v79 = (void (*)(char *, uint64_t, __n128))v42;
      *(_WORD *)(v30 + 12) = 2049;
      v45 = PlayerItem.episode.getter(v43);
      v46 = EpisodePlayerItem.adamID.getter(v45);
      v47 = v36;
      v48 = v68;
      v68(v7, v47);
      v44(v11, v8);
      v82 = v46;
      v49 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v30 + 14, v30 + 22);
      *(_WORD *)(v30 + 22) = 2081;
      v50 = v80;
      v51 = PlayerItem.episode.getter(v49);
      v52 = EpisodePlayerItem.guid.getter(v51);
      v54 = v53;
      v48(v7, v40);
      v55 = Optional<A>.description.getter(v52, v54);
      v57 = v56;
      swift_bridgeObjectRelease(v54);
      v82 = sub_10003D274(v55, v57, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v30 + 24, v30 + 32);
      v58 = v40;
      v59 = v78;
      v60 = swift_bridgeObjectRelease(v57);
      v79(v50, v8, v60);
      v61 = v69;
      _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v70, "Skip inserting new Implicit Follow for currently playing episode because the show is \"Not Subscribeable\" -- i.e. from a news diggest or some other type of 'fake' show: %{private}s, adamID: %{private}lld, guid: %{private}s.", (uint8_t *)v30, 0x20u);
      v62 = v71;
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      v63 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v81, v75);
    }
    else
    {
      v64 = (void (*)(char *, uint64_t))*((_QWORD *)v79 + 1);
      v64(v11, v8);
      v64(v13, v8);
      v64(v80, v8);

      v63 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v81, v75);
      v58 = v76;
      v59 = v78;
    }
    v65 = PlayerItem.episode.getter(v63);
    v66 = EpisodePlayerItem.adamID.getter(v65);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v7, v58);
    (*((void (**)(const void *, uint64_t, _QWORD, _QWORD))v77 + 2))(v77, v66, 0, 0);
    v24 = v73;
  }
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

void sub_1002BABD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v19;
  int v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  double v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  os_log_type_t v54;
  id v55;
  char *v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  double v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  double v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  id v94;
  void *v95;
  id v96;
  NSObject *v97;
  char *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  double v112;
  id v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  double v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  double v125;
  id v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  os_log_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;

  v4 = v3;
  v144 = a3;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v135 - v11;
  v13 = __chkstk_darwin();
  v15 = (char *)&v135 - v14;
  if (!a2)
  {
    v16 = objc_msgSend(a1, "podcast");
    if (v16)
    {
      v17 = v16;
      sub_10028713C(v16, 6, 4, v144);

    }
    else
    {
      v141 = v8;
      static Logger.podcastsStatesCoordination.getter(0);
      v18 = a1;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter(v19);
      if (os_log_type_enabled(v19, (os_log_type_t)v20))
      {
        v139 = v12;
        v140 = v4;
        v21 = swift_slowAlloc(42, -1);
        v135 = swift_slowAlloc(128, -1);
        v146 = v135;
        *(_DWORD *)v21 = 136381443;
        v22 = objc_msgSend(v18, "title");
        v143 = v7;
        v137 = v19;
        v136 = v20;
        if (v22)
        {
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;

        }
        else
        {
          v24 = 0;
          v26 = 0;
        }
        v27 = Optional<A>.description.getter(v24, v26);
        v29 = v28;
        swift_bridgeObjectRelease(v26);
        v145 = (id)sub_10003D274(v27, v29, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v21 + 4, v21 + 12);

        *(_QWORD *)&v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
        *(_WORD *)(v21 + 12) = 2080;
        v31 = objc_msgSend(v18, "uuid", v30);
        v142 = v10;
        if (v31)
        {
          v32 = v31;
          v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v35 = v34;

        }
        else
        {
          v33 = 0;
          v35 = 0;
        }
        v36 = Optional<A>.description.getter(v33, v35);
        v38 = v37;
        swift_bridgeObjectRelease(v35);
        v145 = (id)sub_10003D274(v36, v38, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v21 + 14, v21 + 22);

        *(_QWORD *)&v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
        *(_WORD *)(v21 + 22) = 2081;
        v145 = objc_msgSend(v18, "storeTrackId", v39);
        v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v42 = v41;
        v145 = (id)sub_10003D274(v40, v41, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v21 + 24, v21 + 32);

        *(_QWORD *)&v43 = swift_bridgeObjectRelease(v42).n128_u64[0];
        *(_WORD *)(v21 + 32) = 2081;
        v44 = objc_msgSend(v18, "guid", v43);
        if (v44)
        {
          v45 = v44;
          v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v48 = v47;

        }
        else
        {
          v46 = 0;
          v48 = 0;
        }
        v49 = Optional<A>.description.getter(v46, v48);
        v51 = v50;
        swift_bridgeObjectRelease(v48);
        v145 = (id)sub_10003D274(v49, v51, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v21 + 34, v21 + 42);

        swift_bridgeObjectRelease(v51);
        v52 = v137;
        _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v136, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v21, 0x2Au);
        v53 = v135;
        swift_arrayDestroy(v135, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        v8 = v141;
        v7 = v143;
        v13 = (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v15, v143);
        v10 = v142;
        v12 = v139;
        v4 = v140;
      }
      else
      {

        v8 = v141;
        v13 = (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v15, v7);
      }
    }
    a2 = 0;
  }
  static Logger.podcastsStatesCoordination.getter(v13);
  v54 = static os_log_type_t.default.getter();
  v55 = a1;
  v56 = v12;
  v57 = Logger.logObject.getter(v55);
  if (os_log_type_enabled(v57, v54))
  {
    v139 = v56;
    v140 = v4;
    v141 = v8;
    v142 = v10;
    v58 = swift_slowAlloc(62, -1);
    v59 = swift_slowAlloc(160, -1);
    v145 = a2;
    v146 = v59;
    *(_DWORD *)v58 = 134219267;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 4, v58 + 12);
    *(_WORD *)(v58 + 12) = 2081;
    v60 = objc_msgSend(v55, "title");
    v143 = v7;
    v138 = a2;
    if (v60)
    {
      v61 = v60;
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
      v64 = v63;

    }
    else
    {
      v62 = 0;
      v64 = 0;
    }
    v66 = Optional<A>.description.getter(v62, v64);
    v68 = v67;
    swift_bridgeObjectRelease(v64);
    v145 = (id)sub_10003D274(v66, v68, &v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 14, v58 + 22);

    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v68).n128_u64[0];
    *(_WORD *)(v58 + 22) = 2080;
    v70 = objc_msgSend(v55, "uuid", v69);
    if (v70)
    {
      v71 = v70;
      v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v74 = v73;

    }
    else
    {
      v72 = 0;
      v74 = 0;
    }
    v75 = Optional<A>.description.getter(v72, v74);
    v77 = v76;
    swift_bridgeObjectRelease(v74);
    v145 = (id)sub_10003D274(v75, v77, &v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 24, v58 + 32);

    *(_QWORD *)&v78 = swift_bridgeObjectRelease(v77).n128_u64[0];
    *(_WORD *)(v58 + 32) = 2081;
    v145 = objc_msgSend(v55, "storeTrackId", v78);
    v79 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v81 = v80;
    v145 = (id)sub_10003D274(v79, v80, &v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 34, v58 + 42);

    *(_QWORD *)&v82 = swift_bridgeObjectRelease(v81).n128_u64[0];
    *(_WORD *)(v58 + 42) = 2081;
    v83 = objc_msgSend(v55, "guid", v82);
    if (v83)
    {
      v84 = v83;
      v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
      v87 = v86;

    }
    else
    {
      v85 = 0;
      v87 = 0;
    }
    v88 = Optional<A>.description.getter(v85, v87);
    v90 = v89;
    swift_bridgeObjectRelease(v87);
    v145 = (id)sub_10003D274(v88, v90, &v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 44, v58 + 52);

    swift_bridgeObjectRelease(v90);
    *(_WORD *)(v58 + 52) = 2080;
    v91 = PodcastsStateChangeOrigin.description.getter(v144);
    v93 = v92;
    v145 = (id)sub_10003D274(v91, v92, &v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v58 + 54, v58 + 62);
    swift_bridgeObjectRelease(v93);
    _os_log_impl((void *)&_mh_execute_header, v57, v54, "Marking as playState = %lld episode: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.; From origin: %s.",
      (uint8_t *)v58,
      0x3Eu);
    swift_arrayDestroy(v59, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v58, -1, -1);

    v65 = *(void (**)(char *, uint64_t))(v141 + 8);
    v7 = v143;
    v65(v139, v143);
    v10 = v142;
    v4 = v140;
    a2 = v138;
  }
  else
  {

    v65 = *(void (**)(char *, uint64_t))(v8 + 8);
    v65(v56, v7);
  }
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Podcasts24PodcastsStateCoordinator_library), "setPlayState:fromContextActions:manually:forUserActionOnEpisode:saveChanges:", a2, 1, 1, v55, 1);
  if (a2 == (void *)2)
  {
    v94 = objc_msgSend(v55, "podcast");
    if (v94)
    {
      v95 = v94;
      sub_10028713C(v94, 7, 4, v144);

    }
    else
    {
      static Logger.podcastsStatesCoordination.getter(0);
      v96 = v55;
      v97 = Logger.logObject.getter(v96);
      v98 = v10;
      v99 = static os_log_type_t.error.getter(v97);
      if (os_log_type_enabled(v97, v99))
      {
        v142 = v98;
        v143 = v7;
        v100 = swift_slowAlloc(42, -1);
        v101 = swift_slowAlloc(128, -1);
        v146 = v101;
        *(_DWORD *)v100 = 136381443;
        v102 = objc_msgSend(v96, "title");
        v144 = v101;
        if (v102)
        {
          v103 = v102;
          v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
          v106 = v105;

        }
        else
        {
          v104 = 0;
          v106 = 0;
        }
        v109 = Optional<A>.description.getter(v104, v106);
        v111 = v110;
        swift_bridgeObjectRelease(v106);
        v145 = (id)sub_10003D274(v109, v111, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v100 + 4, v100 + 12);

        *(_QWORD *)&v112 = swift_bridgeObjectRelease(v111).n128_u64[0];
        *(_WORD *)(v100 + 12) = 2080;
        v113 = objc_msgSend(v96, "uuid", v112);
        if (v113)
        {
          v114 = v113;
          v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
          v117 = v116;

        }
        else
        {
          v115 = 0;
          v117 = 0;
        }
        v118 = Optional<A>.description.getter(v115, v117);
        v120 = v119;
        swift_bridgeObjectRelease(v117);
        v145 = (id)sub_10003D274(v118, v120, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v100 + 14, v100 + 22);

        *(_QWORD *)&v121 = swift_bridgeObjectRelease(v120).n128_u64[0];
        *(_WORD *)(v100 + 22) = 2081;
        v145 = objc_msgSend(v96, "storeTrackId", v121);
        v122 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
        v124 = v123;
        v145 = (id)sub_10003D274(v122, v123, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v100 + 24, v100 + 32);

        *(_QWORD *)&v125 = swift_bridgeObjectRelease(v124).n128_u64[0];
        *(_WORD *)(v100 + 32) = 2081;
        v126 = objc_msgSend(v96, "guid", v125);
        if (v126)
        {
          v127 = v126;
          v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
          v130 = v129;

        }
        else
        {
          v128 = 0;
          v130 = 0;
        }
        v131 = Optional<A>.description.getter(v128, v130);
        v133 = v132;
        swift_bridgeObjectRelease(v130);
        v145 = (id)sub_10003D274(v131, v133, &v146);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146, v100 + 34, v100 + 42);

        swift_bridgeObjectRelease(v133);
        _os_log_impl((void *)&_mh_execute_header, v97, v99, "We can't transition podcast. MTEpisode without an associated podcast: %{private}s, uuid: %s, adamID: %{private}s, guid: %{private}s.", (uint8_t *)v100, 0x2Au);
        v134 = v144;
        swift_arrayDestroy(v144, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v134, -1, -1);
        swift_slowDealloc(v100, -1, -1);

        v107 = v142;
        v108 = v143;
      }
      else
      {

        v107 = v98;
        v108 = v7;
      }
      v65(v107, v108);
    }
  }
}

void _s8Podcasts0A16StateCoordinatorC014currentPodcastB11Description4fromS2S_tF_0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v4 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v5 = objc_msgSend(v4, "mainOrPrivateContext");

  v7[2] = v5;
  v7[3] = a1;
  v7[4] = a2;
  v6 = sub_10003F544(&qword_1005604E0);
  NSManagedObjectContext.performAndWait<A>(_:)(&v8, sub_1002BBA20, v7, v6);

  __asm { BR              X10 }
}

uint64_t sub_1002BB918()
{
  return 0x65726F7473;
}

uint64_t sub_1002BB984()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002BB9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1002B8068(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16));
}

uint64_t sub_1002BB9B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002BB9EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002BBA20@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100288C0C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1002BBA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PlayerItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

double sub_1002BBAD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for PlayerItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002B8D48(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1002BBB24()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BBB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PodcastStateModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1002BBBE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for PodcastStateModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100287E2C(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(NSObject **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(char **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFF8)));
}

id sub_1002BBC8C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id result;
  double v19;
  float v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  objc_class *v25;
  Class v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  float v42;
  float v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  NSNumber v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Class v85;
  id v86;
  char *v87;
  id v88;
  char *v89;
  Class v90;
  uint64_t v91;
  uint64_t v92;
  Class v93;
  Class v94;
  uint64_t v95;
  uint64_t v96;
  Class v97;
  uint64_t v98;
  uint64_t v99;
  Class v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  Class v106;
  Class v107;
  uint64_t v108;
  uint64_t v109;
  Class v110;
  uint64_t v111;
  id v112;
  Class isa;
  char *v114;
  uint64_t v115;

  v2 = v1;
  v4 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v5 = __chkstk_darwin(v4);
  v87 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v114 = (char *)&v87 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v87 - v10;
  __chkstk_darwin(v9);
  v115 = (uint64_t)&v87 - v12;
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v2, "playState");
  result = objc_msgSend(v2, "duration");
  *(float *)&v19 = v19;
  v20 = *(float *)&v19 * 1000.0;
  if ((~COERCE_INT(*(float *)&v19 * 1000.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v20 <= -9.2234e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v20 >= 9.2234e18)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v89 = v11;
  v21 = objc_msgSend(v2, "bestSummary");
  if (v21 || (v21 = objc_msgSend(v2, "itemDescriptionWithoutHTML")) != 0)
  {
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v104 = v23;
    v105 = v22;

  }
  else
  {
    v104 = 0;
    v105 = 0;
  }
  v24 = (void *)objc_opt_self(MTLibraryLegacyUtil);
  v107 = (Class)objc_msgSend(v24, "legacyPlayCountForPlayState:playCount:", v17, objc_msgSend(v2, "playCount"));
  LODWORD(v106) = objc_msgSend(v24, "hasBeenPlayedForPlayState:", v17);
  v25 = (objc_class *)objc_msgSend((id)objc_opt_self(MTStoreIdentifier), "validatedIdNumberFromStoreId:", objc_msgSend(v2, "storeTrackId"));
  v26 = v25;
  if (v25)
  {
    v88 = -[objc_class longLongValue](v25, "longLongValue");

  }
  else
  {
    v88 = 0;
  }
  v27 = objc_msgSend(v2, "podcast");
  if (v27)
  {
    v28 = v27;
    v112 = objc_msgSend(v27, "storeCollectionId");

  }
  else
  {
    v112 = objc_msgSend(v2, "storeTrackId");
  }
  static Date.timeIntervalSinceReferenceDate.getter();
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v29 = objc_msgSend(v2, "podcast");
  if (v29 && (v30 = v29, v31 = objc_msgSend(v29, "title"), v30, v31))
  {
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v102 = v33;
    v103 = v32;

  }
  else
  {
    v102 = 0;
    v103 = 0;
  }
  v34 = objc_msgSend(v2, "title");
  if (v34)
  {
    v35 = v34;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v111 = v37;

  }
  else
  {
    v36 = 0;
    v111 = 0;
  }
  objc_msgSend(v2, "byteSize");
  v110 = Int64._bridgeToObjectiveC()().super.super.isa;
  v38 = objc_msgSend(v2, "guid");
  if (v38)
  {
    v39 = v38;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v108 = v41;
    v109 = v40;

  }
  else
  {
    v108 = 0;
    v109 = 0;
  }
  result = objc_msgSend(v2, "playhead");
  v43 = v42 * 1000.0;
  if ((~LODWORD(v43) & 0x7F800000) == 0)
    goto LABEL_62;
  if (v43 <= -9.2234e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v43 < 9.2234e18)
  {
    v101 = v36;
    v100 = Int._bridgeToObjectiveC()().super.super.isa;
    v44 = objc_msgSend(v2, "podcast");
    if (v44
      && (v45 = v44, v46 = objc_msgSend(v44, "title"), v45, v46))
    {
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v98 = v48;
      v99 = v47;

    }
    else
    {
      v98 = 0;
      v99 = 0;
    }
    objc_msgSend(v2, "video");
    v97 = Bool._bridgeToObjectiveC()().super.super.isa;
    v49 = objc_msgSend(v2, "podcast");
    if (v49
      && (v50 = v49, v51 = objc_msgSend(v49, "feedURL"), v50, v51))
    {
      v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v95 = v52;

    }
    else
    {
      v96 = 0;
      v95 = 0;
    }
    v53 = objc_msgSend(v2, "podcast");
    if (v53)
    {
      v54 = v53;
      objc_msgSend(v53, "storeCollectionId");

      v94 = Int64._bridgeToObjectiveC()().super.super.isa;
    }
    else
    {
      v94 = 0;
    }
    objc_msgSend(v2, "pubDate");
    v93 = Double._bridgeToObjectiveC()().super.super.isa;
    v55 = objc_msgSend(v2, "podcast");
    if (v55
      && (v56 = v55, v57 = objc_msgSend(v55, "author"), v56, v57))
    {
      v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v91 = v58;

    }
    else
    {
      v92 = 0;
      v91 = 0;
    }
    v90 = Int._bridgeToObjectiveC()().super.super.isa;
    v107 = Int64._bridgeToObjectiveC()().super.super.isa;
    v106 = Bool._bridgeToObjectiveC()().super.super.isa;
    if (v26)
      v26 = Int64._bridgeToObjectiveC()().super.super.isa;
    if (a1)
    {
      objc_msgSend(a1, "longLongValue");
      v59.super.super.isa = Int64._bridgeToObjectiveC()().super.super.isa;
    }
    else
    {
      v59.super.super.isa = 0;
    }
    v60 = objc_msgSend(v2, "objectID");
    v61 = objc_msgSend(v60, "URIRepresentation");

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v62 = URL.absoluteString.getter();
    v64 = v63;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v65 = objc_msgSend(v2, "assetURL");
    v66 = v14;
    if (v65)
    {
      v67 = v65;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      v70 = v69;

      v71 = v68;
      v72 = (uint64_t)v89;
      URL.init(string:)(v71, v70);
      v73 = v70;
      v14 = v66;
      swift_bridgeObjectRelease(v73);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v72, 1, v13) != 1)
      {
        v75 = v115;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v115, v72, v13);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
        v74(v75, 0, 1, v13);
        goto LABEL_51;
      }
      sub_1001C9958(v72);
    }
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v74(v115, 1, 1, v13);
LABEL_51:
    v76 = objc_msgSend(v2, "podcast");
    if (v76)
    {
      v77 = v76;
      v78 = objc_msgSend(v76, "imageURL");

      if (v78)
      {
        v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v81 = v80;

        v82 = (uint64_t)v87;
        URL.init(string:)(v79, v81);
        swift_bridgeObjectRelease(v81);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v82, 1, v13) != 1)
        {
          v84 = (uint64_t)v114;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v114, v82, v13);
          v83 = 0;
          goto LABEL_56;
        }
        sub_1001C9958(v82);
      }
    }
    v83 = 1;
    v84 = (uint64_t)v114;
LABEL_56:
    v74(v84, v83, 1, v13);
    v85 = Int64._bridgeToObjectiveC()().super.super.isa;
    v86 = objc_allocWithZone((Class)MediaLibraryItem);
    return sub_1002BC5C8(isa, v103, v102, v101, v111, v110, v109, v108, v100, v99, v98, v105, v104, v97, v96, v95, v94, v93, v92,
             v91,
             v90,
             v107,
             v106,
             v26,
             v59.super.super.isa,
             v62,
             v64,
             v115,
             v84,
             v85);
  }
LABEL_64:
  __break(1u);
  return result;
}

id sub_1002BC5C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  NSURL *v42;
  void *v43;
  void *v44;
  NSURL *v45;
  void *v46;
  void *v47;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  NSString v54;
  NSString v55;
  NSString v56;
  NSString v57;
  NSString v58;
  NSString v59;
  NSString v60;

  if (a3)
  {
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    if (a5)
      goto LABEL_3;
  }
  else
  {
    v35 = 0;
    if (a5)
    {
LABEL_3:
      v59 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a5);
      v36 = a11;
      if (a8)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v59 = 0;
  v36 = a11;
  if (a8)
  {
LABEL_4:
    v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a8);
    v37 = a13;
    if (v36)
      goto LABEL_5;
LABEL_10:
    v55 = 0;
    v38 = a16;
    if (v37)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_9:
  v58 = 0;
  v37 = a13;
  if (!v36)
    goto LABEL_10;
LABEL_5:
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v38 = a16;
  if (v37)
  {
LABEL_6:
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    goto LABEL_12;
  }
LABEL_11:
  v57 = 0;
LABEL_12:
  v51 = a6;
  if (v38)
  {
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v56 = 0;
  }
  v49 = v35;
  v50 = a1;
  if (a20)
  {
    v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a20);
  }
  else
  {
    v54 = 0;
  }
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a27);
  v39 = type metadata accessor for URL(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  v43 = 0;
  if (v41(a28, 1, v39) != 1)
  {
    URL._bridgeToObjectiveC()(v42);
    v43 = v44;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a28, v39);
  }
  if (v41(a29, 1, v39) == 1)
  {
    v46 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v45);
    v46 = v47;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a29, v39);
  }
  v52 = objc_msgSend(v53, "initWithDateAccessed:album:title:fileSize:externalGuid:bookmarkTimeMillis:seriesName:itemDescription:hasVideo:feedUrl:playlistId:dateReleased:artist:totalTimeMillis:playCount:hasBeenPlayed:serpentId:activeDsid:statsDownloadIdentifier:itemFilePath:artworkUrl:artworkTokenId:", v50, v49, v59, v51, v58, a9, v55, v57, a14, v56, a17, a18, v54, a21, a22,
          a23,
          a24,
          a25,
          v60,
          v43,
          v46,
          a30);

  return v52;
}

uint64_t sub_1002BC960(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[30] = a1;
  v2[31] = v1;
  v3 = sub_10003F544(&qword_10055B788);
  v2[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10003F544(&qword_10055B790);
  v2[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MediaIdentifier(0);
  v2[34] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[35] = v6;
  v2[36] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntent(0);
  v2[37] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[38] = v8;
  v2[39] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002BCA30, 0, 0);
}

uint64_t sub_1002BCA30()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[31];
  v0[2] = v0;
  v0[3] = sub_1002BCABC;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[16] = _NSConcreteStackBlock;
  v4 = v0 + 16;
  v4[1] = 0x40000000;
  v4[2] = sub_1002BD18C;
  v4[3] = &unk_1004BD478;
  v4[4] = v3;
  objc_msgSend(v2, "load:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_1002BCABC()
{
  return swift_task_switch(sub_1002BCB08, 0, 0);
}

void sub_1002BCB08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = v0[31];
  v2 = swift_allocObject(&unk_1004BD4A0, 24, 7);
  v0[10] = _NSConcreteStackBlock;
  v3 = (uint64_t)(v0 + 10);
  *(_QWORD *)(v2 + 16) = _swiftEmptyArrayStorage;
  v4 = (uint64_t *)(v2 + 16);
  v0[14] = sub_1002BD360;
  v0[15] = v2;
  v0[11] = 1107296256;
  v0[12] = sub_1002BD22C;
  v0[13] = &unk_1004BD4B8;
  v5 = _Block_copy(v0 + 10);
  v6 = v0[15];
  swift_retain();
  swift_release(v6);
  objc_msgSend((id)v1, "enumerateObjectsUsingBlock:", v5);
  _Block_release(v5);
  v7 = objc_msgSend((id)v1, "currentItem");
  v68 = v2;
  if (!v7)
    goto LABEL_9;
  v1 = (uint64_t)v7;
  v8 = objc_msgSend(v7, "episodeUuid");

  if (!v8)
    goto LABEL_9;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  swift_beginAccess(v4, v0 + 24, 0, 0);
  v12 = *v4;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  v1 = sub_1002BD368(v13, v9, v11);
  v15 = v14;
  swift_bridgeObjectRelease_n(v11, 2);
  swift_bridgeObjectRelease(v12);
  if ((v15 & 1) != 0)
  {
LABEL_9:
    swift_beginAccess(v4, v0 + 21, 0, 0);
    v16 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v16 < 0)
        v1 = *v4;
      else
        v1 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*v4, 2);
      v19 = _CocoaArrayWrapper.endIndex.getter(v1);
      if (v19)
        goto LABEL_11;
    }
    else
    {
      v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v16, 2);
      if (v19)
      {
LABEL_11:
        if (v19 < 1)
        {
          __break(1u);
          goto LABEL_63;
        }
        v20 = 0;
        v21 = _swiftEmptyArrayStorage;
        do
        {
          if ((v16 & 0xC000000000000001) != 0)
            v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v16);
          else
            v22 = *(id *)(v16 + 8 * v20 + 32);
          v23 = v22;
          v24 = objc_msgSend(v22, "episodeUuid");
          if (v24)
          {
            v25 = v24;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            v28 = v27;

            if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
              v21 = sub_10027AE00(0, v21[2] + 1, 1, v21);
            v30 = v21[2];
            v29 = v21[3];
            if (v30 >= v29 >> 1)
              v21 = sub_10027AE00((_QWORD *)(v29 > 1), v30 + 1, 1, v21);
            v21[2] = v30 + 1;
            v31 = &v21[2 * v30];
            v31[4] = v26;
            v31[5] = v28;
          }
          else
          {

          }
          ++v20;
        }
        while (v19 != v20);
LABEL_60:
        swift_bridgeObjectRelease_n(v16, 2);
        goto LABEL_61;
      }
    }
    v21 = _swiftEmptyArrayStorage;
    goto LABEL_60;
  }
  v16 = (uint64_t)(v0 + 27);
  swift_beginAccess(v4, v0 + 27, 32, 0);
  v3 = *v4;
  v2 = (unint64_t)*v4 >> 62;
  if (!v2)
  {
    v17 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v1)
      goto LABEL_6;
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
LABEL_63:
  if (v3 < 0)
    v66 = v3;
  else
    v66 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v17 = _CocoaArrayWrapper.endIndex.getter(v66);
  swift_bridgeObjectRelease(v3);
  if (v17 < v1)
    goto LABEL_75;
  swift_bridgeObjectRetain(v3);
  v67 = _CocoaArrayWrapper.endIndex.getter(v66);
  swift_bridgeObjectRelease(v3);
  if (v67 < v1)
  {
    __break(1u);
    goto LABEL_69;
  }
LABEL_6:
  if (v1 < 0)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v2)
  {
    if (v3 < 0)
      v32 = v3;
    else
      v32 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v18 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v18 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 < v17)
    goto LABEL_71;
  if (v17 < 0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if ((v3 & 0xC000000000000001) == 0 || v1 == v17)
    goto LABEL_35;
  if (v1 < (unint64_t)v17)
  {
    sub_100186514();
    v33 = v1;
    do
    {
      v34 = v33 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v33);
      v33 = v34;
    }
    while (v17 != v34);
LABEL_35:
    if (v2)
    {
      if (v3 < 0)
        v37 = v3;
      else
        v37 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v35 = _CocoaArrayWrapper.subscript.getter(v1, v17, v37);
      v36 = v38;
      v1 = v39;
      v41 = v40;
      swift_bridgeObjectRelease(v3);
      v17 = v41 >> 1;
    }
    else
    {
      v35 = v3 & 0xFFFFFFFFFFFFFF8;
      v36 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
      swift_bridgeObjectRetain(v3);
    }
    swift_endAccess(v16);
    v42 = v17 - v1;
    if (v17 == v1)
    {
      v21 = _swiftEmptyArrayStorage;
LABEL_54:
      swift_unknownObjectRelease(v35);
LABEL_61:
      v53 = v0[38];
      v54 = v0[39];
      v55 = (_QWORD *)v0[36];
      v56 = v0[37];
      v57 = v0[34];
      v58 = v0[35];
      v59 = v0[32];
      v60 = v0[33];
      v61 = v0[30];
      *v55 = v21;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v58 + 104))(v55, enum case for MediaIdentifier.localEpisodes(_:), v57);
      v62 = type metadata accessor for EpisodeListSettings(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v60, 1, 1, v62);
      v63 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
      v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v59, 1, 1, v63);
      v65 = static Set<>.default.getter(v64);
      PlaybackIntent.init(id:listSettings:initialItem:options:)(v55, v60, v59, v65);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v61, v54, v56);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v61, 0, 1, v56);
      swift_release(v68);
      swift_task_dealloc(v54);
      swift_task_dealloc(v55);
      swift_task_dealloc(v60);
      swift_task_dealloc(v59);
      ((void (*)(void))v0[1])();
      return;
    }
    if (v17 > v1)
    {
      swift_unknownObjectRetain(v35);
      v43 = (id *)(v36 + 8 * v1);
      v21 = _swiftEmptyArrayStorage;
      do
      {
        v44 = *v43;
        v45 = objc_msgSend(v44, "episodeUuid");
        if (v45)
        {
          v46 = v45;
          v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
          v49 = v48;

          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_10027AE00(0, v21[2] + 1, 1, v21);
          v51 = v21[2];
          v50 = v21[3];
          if (v51 >= v50 >> 1)
            v21 = sub_10027AE00((_QWORD *)(v50 > 1), v51 + 1, 1, v21);
          v21[2] = v51 + 1;
          v52 = &v21[2 * v51];
          v52[4] = v47;
          v52[5] = v49;
        }
        else
        {

        }
        ++v43;
        --v42;
      }
      while (v42);
      swift_unknownObjectRelease(v35);
      goto LABEL_54;
    }
    goto LABEL_74;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
}

uint64_t sub_1002BD18C(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1002BD194(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  if (result)
  {
    v3 = (void *)result;
    v4 = (_QWORD *)(a3 + 16);
    swift_beginAccess(a3 + 16, v9, 33, 0);
    v5 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
    specialized Array._endMutation()(v8);
    return swift_endAccess(v9);
  }
  return result;
}

void sub_1002BD22C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, uint64_t);
  id v7;

  v6 = *(void (**)(void *, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t (*sub_1002BD28C(uint64_t (*result)(_QWORD *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(_QWORD *a1)
{
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *(_QWORD *)(a4 + 8 * a2);
    swift_retain();
    return sub_1002BD2DC;
  }
  return result;
}

uint64_t sub_1002BD2DC(_QWORD *a1)
{
  return swift_release(*a1);
}

void (*sub_1002BD2E4(void (*result)(id *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(id *a1)
{
  void *v6;
  id v7;

  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    v6 = *(void **)(a4 + 8 * a2);
    *(_QWORD *)result = v6;
    v7 = v6;
    return sub_1002BD334;
  }
  return result;
}

void sub_1002BD334(id *a1)
{

}

uint64_t sub_1002BD33C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BD360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BD194(a1, a2, v2);
}

uint64_t sub_1002BD368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v20 = a3;
    for (i = 0; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1)
         : *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "episodeUuid");
      if (v9)
        break;

      v16 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_21;
LABEL_17:
      if (v16 == v5)
        return 0;
    }
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    if (v11 == a2 && v13 == v20)
    {

      swift_bridgeObjectRelease(v20);
      return i;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, a2, v20, 0);

    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
      return i;
    v16 = i + 1;
    if (!__OFADD__(i, 1))
      goto LABEL_17;
LABEL_21:
    __break(1u);
LABEL_22:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    v18 = a3;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
    a3 = v18;
  }
  return 0;
}

id sub_1002BD4F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation____lazy_storage___serialQueue);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
    objc_msgSend(v4, "setMaxConcurrentOperationCount:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1002BD57C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  void (**v9)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  char *v19;
  void (**v20)(uint64_t *, void (*)(void ***), uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  char *v26;
  double (**v27)(uint64_t *, void (*)(void ***), uint64_t);
  id v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  char *v32;
  uint64_t (**v33)(uint64_t, uint64_t, uint64_t);
  char *v34;
  id v35;
  uint64_t v36;
  objc_class *v37;
  char *v38;
  char *v39;
  void (**v40)(uint64_t@<X8>);
  uint64_t v41;
  uint64_t (**v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void (*v58)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128);
  id v59;
  __n128 v60;
  uint64_t v61;
  objc_class *v62;
  uint64_t v63;
  uint64_t (**v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void (*v81)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128);
  char *v82;
  __n128 v83;
  objc_class *v84;
  char *v85;
  uint64_t v86;
  uint64_t (**v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128);
  void *v104;
  char *v105;
  __n128 v106;
  objc_class *v107;
  char *v108;
  uint64_t v109;
  uint64_t (**v110)(uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(void (*)(), uint64_t, uint64_t, uint64_t, __n128);
  char *v126;
  __n128 v127;
  objc_class *v128;
  char *v129;
  uint64_t v130;
  uint64_t (**v131)(uint64_t);
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  Class isa;
  uint64_t v144;
  void *v145;
  void (*v146)(uint64_t *, __n128);
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  char *v155;
  char *v156;
  void *v157;
  __int128 v158;
  id v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  objc_super v163;
  objc_super v164;
  objc_super v165;
  objc_super v166;
  uint64_t v167;
  objc_super v168;
  objc_super v169;
  objc_super v170;
  objc_super v171;
  objc_super v172;

  v1 = &v0[OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input];
  if (v0[OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8])
  {
    if (v0[OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8] == 1)
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005CLL, 0x800000010043A070, "Podcasts/BaseOperation.swift", 28, 2, 141, 0);
    else
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000054, 0x800000010043A0D0, "Podcasts/BaseOperation.swift", 28, 2, 139, 0);
    __break(1u);
  }
  else
  {
    v2 = v0;
    if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    {
      v3 = OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_episodeStorage;
      sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      v158 = *(_OWORD *)&v0[v3];
      v4 = swift_unknownObjectRetain(*(_QWORD *)&v0[v3]);
      v5 = static OS_os_log.downloads.getter(v4);
      v6 = (objc_class *)sub_10003F544(&qword_1005605B0);
      v7 = (char *)objc_allocWithZone(v6);
      v8 = &v7[*(_QWORD *)((swift_isaMask & *(_QWORD *)v7) + 0x198)];
      *(_QWORD *)v8 = 0;
      v8[8] = 2;
      v9 = (void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))&v7[*(_QWORD *)((swift_isaMask & *(_QWORD *)v7)
                                                                                       + 0x1A8)];
      *v9 = sub_1002BE218;
      v9[1] = 0;
      *(_OWORD *)&v7[*(_QWORD *)((swift_isaMask & *(_QWORD *)v7) + 0x1A0)] = v158;
      *(_QWORD *)&v7[*(_QWORD *)((swift_isaMask & *(_QWORD *)v7) + 0x1B0)] = v5;
      v172.receiver = v7;
      v172.super_class = v6;
      v10 = objc_msgSendSuper2(&v172, "init");
      v11 = *(_QWORD *)v1;
      v12 = (char *)v10 + *(_QWORD *)((swift_isaMask & *v10) + 0x198);
      v13 = v1[8];
      swift_beginAccess(v12, &v160, 1, 0);
      v14 = *(_QWORD *)v12;
      *(_QWORD *)v12 = v11;
      v15 = v12[8];
      v12[8] = v13;
      sub_100045994(v11, v13);
      sub_100045978(v14, v15);
      v16 = swift_allocObject(&unk_1004BD4F0, 24, 7);
      *(_QWORD *)(v16 + 16) = v2;
      v17 = (objc_class *)sub_10003F544(&qword_1005605B8);
      v18 = (char *)objc_allocWithZone(v17);
      v19 = &v18[*(_QWORD *)((swift_isaMask & *(_QWORD *)v18) + 0x180)];
      *(_QWORD *)v19 = 0;
      v19[8] = 2;
      v20 = (void (**)(uint64_t *, void (*)(void ***), uint64_t))&v18[*(_QWORD *)((swift_isaMask & *(_QWORD *)v18) + 0x188)];
      *v20 = sub_1002BF1D4;
      v20[1] = (void (*)(uint64_t *, void (*)(void ***), uint64_t))v16;
      v171.receiver = v18;
      v171.super_class = v17;
      v21 = v2;
      v22 = (char *)objc_msgSendSuper2(&v171, "init");
      v23 = swift_allocObject(&unk_1004BD518, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16, v21);
      v24 = (objc_class *)sub_10003F544((uint64_t *)&unk_1005605C0);
      v25 = (char *)objc_allocWithZone(v24);
      v26 = &v25[*(_QWORD *)((swift_isaMask & *(_QWORD *)v25) + 0x180)];
      *(_QWORD *)v26 = 0;
      v26[8] = 2;
      v27 = (double (**)(uint64_t *, void (*)(void ***), uint64_t))&v25[*(_QWORD *)((swift_isaMask & *(_QWORD *)v25) + 0x188)];
      *v27 = sub_1002BF1DC;
      v27[1] = (double (*)(uint64_t *, void (*)(void ***), uint64_t))v23;
      v170.receiver = v25;
      v170.super_class = v24;
      v28 = objc_msgSendSuper2(&v170, "init");
      v29 = swift_allocObject(&unk_1004BD540, 24, 7);
      *(_QWORD *)(v29 + 16) = v21;
      v30 = (objc_class *)sub_10003F544(&qword_1005540C8);
      v31 = (char *)objc_allocWithZone(v30);
      v32 = &v31[*(_QWORD *)((swift_isaMask & *(_QWORD *)v31) + 0x180)];
      *(_QWORD *)v32 = 0;
      v32[8] = 2;
      v33 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v31[*(_QWORD *)((swift_isaMask & *(_QWORD *)v31)
                                                                               + 0x188)];
      *v33 = sub_1002BF1E4;
      v33[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
      v169.receiver = v31;
      v169.super_class = v30;
      v34 = v21;
      v35 = objc_msgSendSuper2(&v169, "init");
      v36 = swift_allocObject(&unk_1004BD568, 24, 7);
      *(_QWORD *)(v36 + 16) = v34;
      v37 = (objc_class *)sub_10003F544((uint64_t *)&unk_10055BCB0);
      v38 = (char *)objc_allocWithZone(v37);
      v39 = &v38[*(_QWORD *)((swift_isaMask & *(_QWORD *)v38) + 0x180)];
      *(_QWORD *)v39 = 0;
      v39[8] = 2;
      v40 = (void (**)(uint64_t@<X8>))&v38[*(_QWORD *)((swift_isaMask & *(_QWORD *)v38) + 0x188)];
      *v40 = sub_1002BF1EC;
      v40[1] = (void (*)(uint64_t@<X8>))v36;
      v168.receiver = v38;
      v168.super_class = v37;
      v156 = v34;
      v159 = objc_msgSendSuper2(&v168, "init");
      v41 = swift_allocObject(&unk_1004BD590, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16, v22);
      v42 = (uint64_t (**)(uint64_t))((char *)v10 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
      v43 = *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
      v44 = *(_QWORD *)((char *)v10 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8);
      *v42 = sub_100244AC4;
      v42[1] = (uint64_t (*)(uint64_t))v41;
      sub_10002CA30(v43, v44);
      v45 = objc_opt_self(NSOperation);
      v157 = v10;
      v46 = swift_dynamicCastObjCClass(v10, v45);
      if (v46)
      {
        v48 = v46;
        ObjectType = swift_getObjectType(v46, v47);
        v50 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PodcastsOperation);
        v52 = v50 ? v50 : 0;
        v53 = v50 ? v48 : 0;
        if (v53)
        {
          v149 = swift_getObjectType(v53, v51);
          v54 = swift_allocObject(&unk_1004BD630, 32, 7);
          *(_QWORD *)(v54 + 24) = v52;
          swift_unknownObjectWeakInit(v54 + 16, v53);
          v55 = swift_allocObject(&unk_1004BD658, 24, 7);
          swift_unknownObjectWeakInit(v55 + 16, v22);
          v153 = v35;
          v56 = swift_allocObject(&unk_1004BD6F8, 32, 7);
          *(_QWORD *)(v56 + 16) = v55;
          *(_QWORD *)(v56 + 24) = v54;
          v57 = v28;
          v58 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128))(v52 + 72);
          v59 = (id)swift_unknownObjectRetain(v157);
          swift_retain();
          v60 = swift_retain();
          v58(sub_1000456D4, v56, v149, v52, v60);
          v28 = v57;
          swift_release(v54);
          swift_release(v55);
          v61 = v56;
          v35 = v153;
          swift_release(v61);
          v62 = (objc_class *)type metadata accessor for BaseOperation();
          v163.receiver = v22;
          v163.super_class = v62;
          objc_msgSendSuper2(&v163, "addDependency:", v48);

        }
      }
      v63 = swift_allocObject(&unk_1004BD5B8, 24, 7);
      swift_unknownObjectWeakInit(v63 + 16, v28);
      v64 = (uint64_t (**)(uint64_t))&v22[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v65 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v66 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
      *v64 = sub_100244AC4;
      v64[1] = (uint64_t (*)(uint64_t))v63;
      v67 = v22;
      sub_10002CA30(v65, v66);
      v68 = objc_opt_self(NSOperation);
      v69 = swift_dynamicCastObjCClass(v67, v68);
      if (v69)
      {
        v71 = v69;
        v72 = swift_getObjectType(v69, v70);
        v73 = swift_conformsToProtocol2(v72, &protocol descriptor for PodcastsOperation);
        v75 = v73 ? v73 : 0;
        v76 = v73 ? v71 : 0;
        if (v76)
        {
          v150 = swift_getObjectType(v76, v74);
          v77 = swift_allocObject(&unk_1004BD630, 32, 7);
          *(_QWORD *)(v77 + 24) = v75;
          swift_unknownObjectWeakInit(v77 + 16, v76);
          v78 = swift_allocObject(&unk_1004BD658, 24, 7);
          swift_unknownObjectWeakInit(v78 + 16, v28);
          v79 = swift_allocObject(&unk_1004BD6D0, 32, 7);
          *(_QWORD *)(v79 + 16) = v78;
          *(_QWORD *)(v79 + 24) = v77;
          v80 = v28;
          v81 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128))(v75 + 72);
          swift_unknownObjectRetain(v67);
          v154 = v35;
          v82 = v67;
          swift_retain();
          v83 = swift_retain();
          v81(sub_1000456D4, v79, v150, v75, v83);
          v28 = v80;
          swift_release(v77);
          swift_release(v78);
          swift_release(v79);
          v84 = (objc_class *)type metadata accessor for BaseOperation();
          v164.receiver = v80;
          v164.super_class = v84;
          objc_msgSendSuper2(&v164, "addDependency:", v71);

          v35 = v154;
        }
      }
      v85 = (char *)v28;
      v155 = v67;

      v86 = swift_allocObject(&unk_1004BD5E0, 24, 7);
      swift_unknownObjectWeakInit(v86 + 16, v35);
      v87 = (uint64_t (**)(uint64_t))&v85[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v88 = *(_QWORD *)&v85[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v89 = *(_QWORD *)&v85[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
      *v87 = sub_10014FDA0;
      v87[1] = (uint64_t (*)(uint64_t))v86;
      sub_10002CA30(v88, v89);
      v90 = objc_opt_self(NSOperation);
      v91 = swift_dynamicCastObjCClass(v85, v90);
      v93 = v159;
      if (v91)
      {
        v94 = v91;
        v95 = swift_getObjectType(v91, v92);
        v96 = swift_conformsToProtocol2(v95, &protocol descriptor for PodcastsOperation);
        v98 = v96 ? v96 : 0;
        v99 = v96 ? v94 : 0;
        if (v99)
        {
          v151 = swift_getObjectType(v99, v97);
          v100 = swift_allocObject(&unk_1004BD630, 32, 7);
          *(_QWORD *)(v100 + 24) = v98;
          swift_unknownObjectWeakInit(v100 + 16, v99);
          v101 = swift_allocObject(&unk_1004BD658, 24, 7);
          swift_unknownObjectWeakInit(v101 + 16, v35);
          v102 = swift_allocObject(&unk_1004BD6A8, 32, 7);
          *(_QWORD *)(v102 + 16) = v101;
          *(_QWORD *)(v102 + 24) = v100;
          v103 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t, __n128))(v98 + 72);
          swift_unknownObjectRetain(v85);
          v104 = v35;
          v105 = v85;
          swift_retain();
          v106 = swift_retain();
          v103(sub_1000456D4, v102, v151, v98, v106);
          swift_release(v100);
          swift_release(v101);
          swift_release(v102);
          v107 = (objc_class *)type metadata accessor for BaseOperation();
          v165.receiver = v104;
          v165.super_class = v107;
          objc_msgSendSuper2(&v165, "addDependency:", v94);

          v35 = v104;
          v93 = v159;
        }
      }
      v108 = (char *)v35;

      v109 = swift_allocObject(&unk_1004BD608, 24, 7);
      swift_unknownObjectWeakInit(v109 + 16, v93);
      v110 = (uint64_t (**)(uint64_t))&v108[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v111 = *(_QWORD *)&v108[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      v112 = *(_QWORD *)&v108[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
      *v110 = sub_10014FDA0;
      v110[1] = (uint64_t (*)(uint64_t))v109;
      sub_10002CA30(v111, v112);
      v113 = objc_opt_self(NSOperation);
      v114 = swift_dynamicCastObjCClass(v108, v113);
      if (v114)
      {
        v116 = v114;
        v117 = swift_getObjectType(v114, v115);
        v118 = swift_conformsToProtocol2(v117, &protocol descriptor for PodcastsOperation);
        if (v118)
          v120 = v118;
        else
          v120 = 0;
        if (v118)
          v121 = v116;
        else
          v121 = 0;
        if (v121)
        {
          v152 = swift_getObjectType(v121, v119);
          v122 = swift_allocObject(&unk_1004BD630, 32, 7);
          *(_QWORD *)(v122 + 24) = v120;
          swift_unknownObjectWeakInit(v122 + 16, v121);
          v123 = swift_allocObject(&unk_1004BD658, 24, 7);
          swift_unknownObjectWeakInit(v123 + 16, v93);
          v124 = swift_allocObject(&unk_1004BD680, 32, 7);
          *(_QWORD *)(v124 + 16) = v123;
          *(_QWORD *)(v124 + 24) = v122;
          v125 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t, __n128))(v120 + 72);
          swift_unknownObjectRetain(v108);
          v126 = v108;
          swift_retain();
          v127 = swift_retain();
          v125(sub_1000450E8, v124, v152, v120, v127);
          v93 = v159;
          swift_release(v122);
          swift_release(v123);
          swift_release(v124);
          v128 = (objc_class *)type metadata accessor for BaseOperation();
          v166.receiver = v159;
          v166.super_class = v128;
          objc_msgSendSuper2(&v166, "addDependency:", v116);

        }
      }
      v129 = v93;

      v130 = swift_allocObject(&unk_1004BD518, 24, 7);
      swift_unknownObjectWeakInit(v130 + 16, v156);
      v131 = (uint64_t (**)(uint64_t))&v129[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
      v132 = *(_QWORD *)&v129[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError];
      v133 = *(_QWORD *)&v129[OBJC_IVAR____TtC8Podcasts13BaseOperation_onError + 8];
      *v131 = sub_1002BF228;
      v131[1] = (uint64_t (*)(uint64_t))v130;
      sub_10002CA30(v132, v133);

      v134 = sub_1002BD4F8();
      v135 = sub_10003F544((uint64_t *)&unk_100553780);
      v136 = swift_allocObject(v135, 72, 7);
      *(_OWORD *)(v136 + 16) = xmmword_1003CFB70;
      *(_QWORD *)(v136 + 32) = v157;
      *(_QWORD *)(v136 + 40) = v155;
      *(_QWORD *)(v136 + 48) = v85;
      *(_QWORD *)(v136 + 56) = v108;
      *(_QWORD *)(v136 + 64) = v129;
      v167 = v136;
      specialized Array._endMutation()(v136);
      v137 = v167;
      sub_100005EC8(0, &qword_1005540C0, NSOperation_ptr);
      v138 = v157;
      v139 = v155;
      v140 = v85;
      v141 = v108;
      v142 = v129;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v134, "addOperations:waitUntilFinished:", isa, 0, swift_bridgeObjectRelease(v137).n128_f64[0]);

    }
    else
    {
      v144 = static os_log_type_t.default.getter();
      sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      v145 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)(v144, &_mh_execute_header, v145, "No media library items to restore provided.", 43, 2, _swiftEmptyArrayStorage);

      v146 = *(void (**)(uint64_t *, __n128))&v2[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler];
      if (v146)
      {
        v147 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8];
        v162 = sub_10003F544(&qword_10055A088);
        v160 = 0;
        v161 = 0;
        v148 = swift_retain();
        v146(&v160, v148);
        sub_10002CA30((uint64_t)v146, v147);
        sub_10003D380(&v160);
      }
      sub_100044BF0();
    }
  }
}

void sub_1002BE218(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(__n128);
  __n128 v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  _QWORD v22[5];
  _QWORD *v23;

  v6 = *a1;
  v7 = *a2;
  v8 = swift_allocObject(&unk_1004BD888, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  swift_retain();
  v9 = static os_log_type_t.default.getter();
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v10 = (void *)static OS_os_log.restore.getter();
  v11 = sub_10003F544(&qword_1005559A0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1003CA200;
  v13 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v12 + 56) = &type metadata for Int;
  *(_QWORD *)(v12 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v12 + 32) = v13;
  os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Looking for %d episode uuids in podcasts library matching provided persistent ids", LODWORD(v22[0]));

  swift_bridgeObjectRelease(v12);
  v15 = *(uint64_t (**)(__n128))(v6 + 16);
  v14 = *(_QWORD *)(v6 + 24);
  v16 = swift_retain();
  v17 = (void *)v15(v16);
  swift_release(v14);
  v18 = (_QWORD *)swift_allocObject(&unk_1004BD8B0, 48, 7);
  v18[2] = v7;
  v18[3] = v17;
  v18[4] = sub_10015141C;
  v18[5] = v8;
  v22[4] = sub_100244B50;
  v23 = v18;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100027AF8;
  v22[3] = &unk_1004BD8C8;
  v19 = _Block_copy(v22);
  v20 = v23;
  swift_bridgeObjectRetain(v7);
  v21 = v17;
  swift_retain();
  objc_msgSend(v21, "performBlock:", v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);
  swift_release(v8);

}

void sub_1002BE3F0(uint64_t *a1, void (*a2)(void ***), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(__n128);
  __n128 v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  void *v30;
  __int128 v31;
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  _QWORD *v38;

  v6 = *a1;
  v7 = swift_allocObject(&unk_1004BD7E8, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  swift_retain();
  v8 = static os_log_type_t.default.getter();
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.restore.getter();
  v10 = sub_10003F544(&qword_1005559A0);
  v11 = swift_allocObject(v10, 72, 7);
  *((_QWORD *)&v31 + 1) = 2;
  *(_OWORD *)(v11 + 16) = xmmword_1003CA200;
  v12 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v12;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Found for %d episodes uuids in podcasts library for provided persistent ids", 1);

  swift_bridgeObjectRelease(v11);
  if (*(_QWORD *)(v6 + 16))
  {
    v13 = static os_log_type_t.default.getter();
    v14 = (void *)static OS_os_log.restore.getter();
    v15 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v15 + 16) = v31;
    v16 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v15 + 56) = &type metadata for Int;
    *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v15 + 32) = v16;
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v14, "Clear asset url property for %d episodes.", (_DWORD)v31);

    swift_bridgeObjectRelease(v15);
    v17 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_episodeStorage);
    swift_bridgeObjectRetain(v6);
    v19 = sub_1001FA2A4(v18);
    swift_bridgeObjectRelease(v6);
    v20 = (_QWORD *)swift_allocObject(&unk_1004BD810, 40, 7);
    v20[2] = sub_10003A874;
    v20[3] = v7;
    v20[4] = v6;
    v22 = *(uint64_t (**)(__n128))(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    swift_bridgeObjectRetain(v6);
    v23 = swift_retain();
    v24 = (void *)v22(v23);
    swift_release(v21);
    v25 = (_QWORD *)swift_allocObject(&unk_1004BD838, 48, 7);
    v25[2] = v19;
    v25[3] = v24;
    v25[4] = sub_1002BF2BC;
    v25[5] = v20;
    v37 = sub_1002BF2D0;
    v38 = v25;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_100027AF8;
    v36 = &unk_1004BD850;
    v26 = _Block_copy(&aBlock);
    v27 = v38;
    swift_retain();
    v28 = v24;
    swift_retain();
    objc_msgSend(v28, "performBlock:", v26, swift_release(v27).n128_f64[0]);
    _Block_release(v26);
    swift_release(v19);
    swift_release(v20);

  }
  else
  {
    swift_release(v7);
    v29 = static os_log_type_t.default.getter();
    v30 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)(v29, &_mh_execute_header, v30, "No episode uuids fetched from podcasts library, nothing to do.", 62, 2, _swiftEmptyArrayStorage);

    aBlock = (void **)v6;
    LOBYTE(v34) = 0;
    a2(&aBlock);
  }
}

uint64_t sub_1002BE71C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if ((a2 & 1) == 0)
    return a3(a5, 0);
  v8 = sub_1001E4588();
  v9 = swift_allocError(&type metadata for EpisodeStorageError, v8, 0, 0);
  *v10 = a1;
  swift_errorRetain();
  a3(v9, 1);
  return swift_errorRelease();
}

double sub_1002BE7A4(uint64_t *a1, void (*a2)(void ***), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  void *v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  void *v23;
  double result;
  uint64_t v25;
  void *v26;
  int v27;
  void **aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  _BYTE v34[24];

  v7 = *a1;
  v8 = swift_allocObject(&unk_1004BD770, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  swift_bridgeObjectRetain(v7);
  v10 = sub_1001FA2A4(v9);
  swift_bridgeObjectRelease(v7);
  if (v10[2])
  {
    v11 = a4 + 16;
    v12 = static os_log_type_t.default.getter();
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v13 = (void *)static OS_os_log.restore.getter();
    v14 = sub_10003F544(&qword_1005559A0);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1003CA200;
    v16 = v10[2];
    *(_QWORD *)(v15 + 56) = &type metadata for Int;
    *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v15 + 32) = v16;
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v13, "Add restore downloads for %d episodes.", v27);

    swift_bridgeObjectRelease(v15);
    swift_beginAccess(v11, v34, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v11);
    if (Strong)
    {
      v18 = (void *)Strong;
      v19 = *(void **)(Strong + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_downloadsManager);
      swift_unknownObjectRetain(v19);

      v20 = sub_10002B070((uint64_t)v10);
      swift_release(v10);
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v20);
      v22 = swift_allocObject(&unk_1004BD798, 32, 7);
      *(_QWORD *)(v22 + 16) = sub_1002BF350;
      *(_QWORD *)(v22 + 24) = v8;
      v32 = sub_1002BF288;
      v33 = v22;
      aBlock = _NSConcreteStackBlock;
      v29 = 1107296256;
      v30 = sub_1002BEB64;
      v31 = &unk_1004BD7B0;
      v23 = _Block_copy(&aBlock);
      objc_msgSend(v19, "restoreDownloadedEpisodes:completion:", isa, v23, swift_release(v33).n128_f64[0]);
      swift_unknownObjectRelease(v19);
      _Block_release(v23);

    }
    else
    {
      swift_release(v10);
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
  }
  else
  {
    swift_release(v10);
    swift_release(v8);
    v25 = static os_log_type_t.default.getter();
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v26 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)(v25, &_mh_execute_header, v26, "No episode uuids fetched. Nothing to download.", 46, 2, _swiftEmptyArrayStorage);

    aBlock = 0;
    LOBYTE(v29) = 0;
    a2(&aBlock);
  }
  return result;
}

uint64_t sub_1002BEA74(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = static os_log_type_t.error.getter(a1);
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v5 = (void *)static OS_os_log.restore.getter();
    v6 = sub_10003F544(&qword_1005559A0);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1003CA200;
    v8 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(v7 + 56) = &type metadata for Int;
    *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v7 + 32) = v8;
    os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "%d episodes have been dropped and won't be redownloaded.", v10);

    swift_bridgeObjectRelease(v7);
  }
  return a2(0, 0);
}

uint64_t sub_1002BEB64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, &protocol witness table for String);
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1002BEBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t result;
  int v24;

  v7 = swift_allocObject(&unk_1004BD720, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  swift_retain();
  v8 = static os_log_type_t.default.getter();
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.restore.getter();
  v10 = sub_10003F544(&qword_1005559A0);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1003CA200;
  v12 = (unsigned __int8 *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input);
  v13 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8);
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8))
    goto LABEL_4;
  v14 = v11;
  v15 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  *(_QWORD *)(v11 + 56) = &type metadata for Int;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 32) = v15;
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Delete %d episodes from media library.", v24);

  swift_bridgeObjectRelease(v14);
  v16 = (_QWORD *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary);
  v17 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary + 24);
  v18 = v16[4];
  sub_10003A834(v16, v17);
  v13 = v12[8];
  if (v12[8])
  {
LABEL_4:
    if (v13 == 1)
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005CLL, 0x800000010043A070, "Podcasts/BaseOperation.swift", 28, 2, 141, 0);
    else
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000054, 0x800000010043A0D0, "Podcasts/BaseOperation.swift", 28, 2, 139, 0);
    __break(1u);
  }
  else
  {
    v19 = *(_QWORD *)v12;
    v20 = swift_allocObject(&unk_1004BD748, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_10003A86C;
    *(_QWORD *)(v20 + 24) = v7;
    v21 = swift_bridgeObjectRetain(v19);
    dispatch thunk of MediaLibraryClientProtocol.deleteEpisodes(identifiers:completion:)(v22, sub_100244B04, v20, v17, v18, v21);
    swift_release(v20);
    return sub_100045978(v19, 0);
  }
  return result;
}

void sub_1002BEDF4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t *, __n128);
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = static os_log_type_t.default.getter();
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v5 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "Restore operation has been completed.", 37, 2, _swiftEmptyArrayStorage);

  v6 = *(void (**)(uint64_t *, __n128))(a1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8);
    v11 = sub_10003F544(&qword_10055A088);
    v9 = 0;
    v10 = 0;
    v8 = swift_retain();
    v6(&v9, v8);
    sub_10002CA30((uint64_t)v6, v7);
    sub_10003D380(&v9);
  }
  sub_100044BF0();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
}

uint64_t sub_1002BEEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void *v12;
  _BYTE v13[24];
  _QWORD v14[3];
  _BYTE v15[8];

  v3 = a2 + 16;
  v4 = static os_log_type_t.error.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v5 = (void *)static OS_os_log.restore.getter();
  v6 = sub_10003F544(&qword_1005559A0);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1003CA200;
  swift_getErrorValue(a1, v15, v14);
  v8 = Error.localizedDescription.getter(v14[1], v14[2]);
  v10 = v9;
  *(_QWORD *)(v7 + 56) = &type metadata for String;
  *(_QWORD *)(v7 + 64) = sub_10003E198();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "Failed restore most recently downloaded episodes, error: %{public}s", 67, 2, v7);

  swift_bridgeObjectRelease(v7);
  swift_beginAccess(v3, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v12 = (void *)result;
    swift_errorRetain();
    sub_10037B65C(a1, 1);

    return swift_errorRelease();
  }
  return result;
}

void sub_1002BF06C()
{
  uint64_t v0;

  sub_100045978(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input + 8));
  sub_10003D380((_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_mediaLibrary));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_episodeStorage));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_downloadsManager));

}

id sub_1002BF0D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RestoreDownloadedEpisodesOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RestoreDownloadedEpisodesOperation()
{
  return objc_opt_self(_TtC8Podcasts34RestoreDownloadedEpisodesOperation);
}

uint64_t sub_1002BF190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = v1 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts34RestoreDownloadedEpisodesOperation_input);
  *(_QWORD *)a1 = v3;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_100045994(v3, v4);
}

uint64_t sub_1002BF1B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002BF1D4(uint64_t *a1, void (*a2)(void ***), uint64_t a3)
{
  uint64_t v3;

  sub_1002BE3F0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

double sub_1002BF1DC(uint64_t *a1, void (*a2)(void ***), uint64_t a3)
{
  uint64_t v3;

  return sub_1002BE7A4(a1, a2, a3, v3);
}

uint64_t sub_1002BF1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002BEBC4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1002BF1EC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1002BEDF4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002BF204()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BF228(uint64_t a1)
{
  uint64_t v1;

  return sub_1002BEEF8(a1, v1);
}

uint64_t sub_1002BF230()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BF264()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BF288(uint64_t a1)
{
  uint64_t v1;

  return sub_1002BEA74(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1002BF290()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002BF2BC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1002BE71C(a1, a2 & 1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1002BF2D0()
{
  uint64_t v0;

  return sub_100372704(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_1002BF2E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002BF354(__int128 *a1)
{
  uint64_t v1;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v11;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11._object = (void *)0x800000010043A460;
  v4._object = (void *)0x800000010043A440;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0x1000000000000016;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v11);

  *(Swift::String *)(v1 + 72) = v6;
  *(_OWORD *)(v1 + 88) = xmmword_1003D06D0;
  v7 = v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  v8 = enum case for MetricsLabel.removeEpisodeFromLibrary(_:);
  v9 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_contextActionType) = 4;
  sub_10002099C(a1, v1 + 32);
  return v1;
}

void sub_1002BF470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(__n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void (*v44)();
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;
  _QWORD *v54;
  char v55[24];

  v1 = v0;
  type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin();
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for InteractionContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v0 + 24);
  swift_beginAccess(v0 + 24, v55, 0, 0);
  v9 = *(_QWORD *)(v0 + 24);
  if (v9)
  {
    v10 = *(void (**)(__n128))(*(_QWORD *)v9 + 168);
    v11 = swift_retain();
    v10(v11);
    swift_release(v9);
    InteractionContext.page.getter(v12);
    v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v14 = v13(v7, v4);
    v15 = InteractionContext.Page.isEpisodePage.getter(v14);
    sub_10017603C((uint64_t)v3);
    v16 = *v8;
    if (*v8)
    {
      v17 = *(void (**)(__n128))(*(_QWORD *)v16 + 168);
      v18 = swift_retain();
      v17(v18);
      swift_release(v16);
      InteractionContext.page.getter(v19);
      v20 = v13(v7, v4);
      v21 = InteractionContext.Page.isUnfollowedLibraryShow.getter(v20);
      sub_10017603C((uint64_t)v3);
      if (((v21 | v15) & 1) == 0)
        return;
    }
    else if ((v15 & 1) == 0)
    {
      return;
    }
    v22 = *(_QWORD *)(v1 + 16);
    if (v22)
    {
      if (!*(_BYTE *)(v22 + 32))
      {
        v24 = *(_QWORD **)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        swift_retain();
        sub_100198BD4((uint64_t)v24, v23, 0);
        swift_bridgeObjectRelease(v23);
        v25 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
        v26 = objc_msgSend(v25, "mainOrPrivateContext");

        v54 = _swiftEmptyArrayStorage;
        v27 = v24[2];
        if (v27)
        {
          v47 = v24;
          v29 = v24[4];
          v28 = v24[5];
          v30 = (_QWORD *)swift_allocObject(&unk_1004BDA00, 48, 7);
          v30[2] = v26;
          v30[3] = v29;
          v30[4] = v28;
          v30[5] = &v54;
          swift_bridgeObjectRetain(v28);
          v31 = v26;
          sub_10002CA30(0, 0);
          v32 = swift_allocObject(&unk_1004BDA28, 32, 7);
          *(_QWORD *)(v32 + 16) = sub_1002BFD00;
          *(_QWORD *)(v32 + 24) = v30;
          v52 = sub_100029B3C;
          v53 = v32;
          aBlock = _NSConcreteStackBlock;
          v49 = 1107296256;
          v50 = sub_100029B1C;
          v51 = &unk_1004BDA40;
          v33 = _Block_copy(&aBlock);
          v34 = v53;
          swift_retain();
          objc_msgSend(v31, "performBlockAndWait:", v33, swift_release(v34).n128_f64[0]);
          _Block_release(v33);
          LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v32, "", 130, 36, 36, 1);
          swift_release(v32);
          if ((v33 & 1) != 0)
          {
LABEL_18:
            __break(1u);
            return;
          }
          v35 = v27 - 1;
          if (v27 != 1)
          {
            v36 = v47 + 7;
            v37 = (uint64_t)v30;
            do
            {
              v38 = *(v36 - 1);
              v39 = *v36;
              v30 = (_QWORD *)swift_allocObject(&unk_1004BDA00, 48, 7);
              v30[2] = v31;
              v30[3] = v38;
              v30[4] = v39;
              v30[5] = &v54;
              swift_bridgeObjectRetain(v39);
              v40 = v31;
              sub_10002CA30((uint64_t)sub_1002BFD00, v37);
              v41 = swift_allocObject(&unk_1004BDA28, 32, 7);
              *(_QWORD *)(v41 + 16) = sub_1002BFD00;
              *(_QWORD *)(v41 + 24) = v30;
              v52 = sub_100029B3C;
              v53 = v41;
              aBlock = _NSConcreteStackBlock;
              v49 = 1107296256;
              v50 = sub_100029B1C;
              v51 = &unk_1004BDA40;
              v42 = _Block_copy(&aBlock);
              v43 = v53;
              swift_retain();
              objc_msgSend(v40, "performBlockAndWait:", v42, swift_release(v43).n128_f64[0]);
              _Block_release(v42);
              LOBYTE(v42) = swift_isEscapingClosureAtFileLocation(v41, "", 130, 36, 36, 1);
              swift_release(v41);
              if ((v42 & 1) != 0)
                goto LABEL_18;
              v36 += 2;
              v37 = (uint64_t)v30;
            }
            while (--v35);
          }
          swift_bridgeObjectRelease(v47);

          swift_release(v22);
          v44 = sub_1002BFD00;
          v45 = v54;
        }
        else
        {
          swift_bridgeObjectRelease(v24);

          swift_release(v22);
          v44 = 0;
          v30 = 0;
          v45 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v45);
        sub_10002CA30((uint64_t)v44, (uint64_t)v30);
      }
    }
  }
}

void sub_1002BF924(void *a1, uint64_t a2, uint64_t a3, _QWORD **a4)
{
  NSString v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;

  v8 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(a1, "episodeForUuid:", v8);

  if (v16)
  {
    if ((objc_msgSend(v16, "isDownloaded") & 1) == 0
      && (objc_msgSend(v16, "isBookmarked") & 1) == 0
      && objc_msgSend(v16, "isBookmarksMigrationRecoveredEpisode"))
    {
      v9 = *a4;
      swift_bridgeObjectRetain(a3);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
      *a4 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_10027AE00(0, v9[2] + 1, 1, v9);
        *a4 = v9;
      }
      v12 = v9[2];
      v11 = v9[3];
      v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        v15 = sub_10027AE00((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
        v13 = v12 + 1;
        v9 = v15;
        *a4 = v15;
      }
      v9[2] = v13;
      v14 = &v9[2 * v12];
      v14[4] = a2;
      v14[5] = a3;
    }

  }
}

double sub_1002BFA7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = v0[2];
  if (v1)
  {
    if (!*(_BYTE *)(v1 + 32))
    {
      v3 = *(_QWORD *)(v1 + 16);
      v2 = *(_QWORD *)(v1 + 24);
      swift_retain();
      sub_100198BD4(v3, v2, 0);
      swift_bridgeObjectRelease(v2);
      v4 = v0[7];
      v5 = v0[8];
      sub_10003A834(v0 + 4, v4);
      dispatch thunk of LibraryActionControllerProtocol.removeRecoveredEpisodes(with:)(v3, v4, v5);
      swift_release(v1);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1002BFB1C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_10003D380(v0 + 4);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002BFB94()
{
  return type metadata accessor for RemoveFromLibraryEpisodeContextAction(0);
}

uint64_t type metadata accessor for RemoveFromLibraryEpisodeContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100560608;
  if (!qword_100560608)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemoveFromLibraryEpisodeContextAction);
  return result;
}

uint64_t sub_1002BFBD8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1003D32D0;
  v4[3] = &unk_1003D32E8;
  v4[4] = &unk_1003D3300;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_1003D3318;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002BFC78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002BFCBC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts37RemoveFromLibraryEpisodeContextAction_contextActionType);
}

uint64_t sub_1002BFCD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002BFD00()
{
  uint64_t v0;

  sub_1002BF924(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD ***)(v0 + 40));
}

uint64_t sub_1002BFD0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t storeEnumTagSinglePayload for ArtworkStorageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002BFD5C + 4 * byte_1003D3360[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002BFD7C + 4 * byte_1003D3365[v4]))();
}

_BYTE *sub_1002BFD5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002BFD7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002BFD84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002BFD8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002BFD94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002BFD9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkStorageError()
{
  return &type metadata for ArtworkStorageError;
}

unint64_t sub_1002BFDBC()
{
  return 0xD000000000000017;
}

unint64_t sub_1002BFDDC()
{
  unint64_t result;

  result = qword_100560768;
  if (!qword_100560768)
  {
    result = swift_getWitnessTable(&unk_1003D342C, &type metadata for ArtworkStorageError);
    atomic_store(result, (unint64_t *)&qword_100560768);
  }
  return result;
}

uint64_t sub_1002BFE20()
{
  uint64_t v0;

  sub_100007A28(v0 + 16, (uint64_t *)&unk_100560870);

  sub_100007A28(v0 + 64, &qword_100565940);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for SearchSuggestionsViewController()
{
  return objc_opt_self(_TtC8Podcasts31SearchSuggestionsViewController);
}

id sub_1002BFE84()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 56);
}

uint64_t sub_1002BFE90@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100007A64(v3, a1, (uint64_t *)&unk_100560870);
}

uint64_t sub_1002BFEE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + 16;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10016DE28(a1, v3, (uint64_t *)&unk_100560870);
  return swift_endAccess(v5);
}

uint64_t (*sub_1002BFF40(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + 16, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1002BFF80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + 64;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100007A64(v3, a1, &qword_100565940);
}

uint64_t sub_1002BFFD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + 64;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10016DE28(a1, v3, &qword_100565940);
  return swift_endAccess(v5);
}

uint64_t (*sub_1002C0030(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + 64, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_1002C00F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EpisodeDownloadStateControllerProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002C0178(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a7;
  v37 = a6;
  v38 = a5;
  v39 = a4;
  v10 = a2 & 1;
  v40 = sub_10003F544(&qword_100560A90);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10003F544((uint64_t *)&unk_100560A98);
  v43 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10015B8B8(a1, v10);
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMTPodcastEntityName);
  v19 = v18;
  v20 = sub_1002EF640(a1, v10);
  v21 = ShowsSortType.sortDescriptors.getter(a3);
  v22 = objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8Podcasts19LibraryDataProvider_managedContextProvider), "privateQueueContext");
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  v25 = type metadata accessor for ShowInfo(0);
  v26 = sub_100005EC8(0, (unint64_t *)&qword_100553810, MTPodcast_ptr);
  static FetchedResultsListPublisher.unsafeUnlimitedListPublisher(identifier:entityName:predicate:sortDescriptors:managedObjectContext:receiveOn:transform:updateRequiredComparator:)(v35, v16, v17, v19, v20, v21, v22, v24, v39, v38, v37, v36, v25, v26);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);

  swift_bridgeObjectRelease(v21);
  v44 = v25;
  KeyPath = swift_getKeyPath(&unk_1003D3678, &v44);
  v28 = sub_10002F9C8(&qword_100560AA8, &qword_100560A90, (uint64_t)&protocol conformance descriptor for FetchedResultsListPublisher<A, B>);
  v29 = v40;
  Publisher.map<A>(_:)(KeyPath, v40, v28);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v29);
  v30 = sub_10002F9C8((unint64_t *)&unk_100560AB0, (uint64_t *)&unk_100560A98, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v31 = v41;
  v32 = Publisher.eraseToAnyPublisher()(v41, v30);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v31);
  return v32;
}

void sub_1002C0430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  v1 = type metadata accessor for Podcasts(0);
  v5[3] = v1;
  v5[4] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v2 = sub_1000242A8(v5);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, enum case for Podcasts.objectGraphBuilderInitialization(_:), v1);
  LOBYTE(v1) = isFeatureEnabled(_:)(v5);
  sub_10003D380(v5);
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appBootstrap);
    if (*(_QWORD *)(v4 + 24) >> 62 != 1)
      return;
    v3 = *(_QWORD *)(v4 + 16);
  }
  swift_retain(v3);
}

uint64_t sub_1002C04FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[5];

  v1 = type metadata accessor for Podcasts(0);
  v9[3] = v1;
  v9[4] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v2 = sub_1000242A8(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, enum case for Podcasts.objectGraphBuilderInitialization(_:), v1);
  LOBYTE(v1) = isFeatureEnabled(_:)(v9);
  sub_10003D380(v9);
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appBootstrap);
    v5 = *(_QWORD *)(v4 + 24);
    if (v5 >> 62)
    {
      if (v5 >> 62 != 1)
      {
        v3 = (uint64_t)sub_1002F1450();
        v7 = *(_QWORD *)(v4 + 16);
        v8 = *(_QWORD *)(v4 + 24);
        *(_QWORD *)(v4 + 16) = v3;
        *(_QWORD *)(v4 + 24) = 0;
        swift_retain(v3);
        sub_1002C77F0(v7, v8);
        return v3;
      }
      v3 = v5 & 0x3FFFFFFFFFFFFFFFLL;
    }
    else
    {
      v3 = *(_QWORD *)(v4 + 16);
    }
  }
  swift_retain(v3);
  return v3;
}

id sub_1002C0704(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  char *v26;
  objc_super v27;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_appHasBeenInBackground] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_commandController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_widgetManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_nowPlayingBootstrap] = 0;
  v5 = OBJC_IVAR____TtC8Podcasts11AppDelegate_eventWatchdoge;
  v6 = type metadata accessor for AppEnterExitEventWatchdoge();
  v7 = swift_allocObject(v6, 18, 7);
  *(_WORD *)(v7 + 16) = 0;
  *(_QWORD *)&v3[v5] = v7;
  v8 = &v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks] = _swiftEmptyArrayStorage;
  v9 = &v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy];
  v10 = type metadata accessor for PPTViewControllerProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController];
  v12 = type metadata accessor for AppBootstrap();
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v13 = swift_allocObject(v12, 32, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1003D3590;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Podcasts11AppDelegate_appBootstrap] = v13;
  v14 = v3;
  v15 = static Dependencies.allDependencies()();
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph] = v15;
  swift_retain();

  v27.receiver = v14;
  v27.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v27, "init");
  v17 = (void *)objc_opt_self(UIDevice);
  v18 = v16;
  v19 = objc_msgSend(v17, "currentDevice");
  v20 = objc_msgSend(v19, "userInterfaceIdiom");

  if (v20 == (id)1)
  {
    v21 = type metadata accessor for ClassKitManager();
    BaseObjectGraph.inject<A>(_:)(&v26, v21, v21);
    v22 = v26;
    v23 = objc_msgSend((id)objc_opt_self(CLSDataStore), "shared");
    objc_msgSend(v23, "setDelegate:", *(_QWORD *)&v22[OBJC_IVAR____TtC8Podcasts15ClassKitManager_dataStoreDelegate]);

    sub_1003014DC();
  }
  type metadata accessor for ApplicationStateMonitor(0);
  v24 = (void *)static ApplicationStateMonitor.shared.getter();
  ApplicationStateMonitor.beginListening()();
  swift_release(v15);

  return v18;
}

void sub_1002C0970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void **v36;
  _BYTE v38[24];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_10003F544(&qword_10055E910);
  __chkstk_darwin(v2);
  v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = static Logger.navigation.getter(v7);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Storefront change detected, re-running storefront bootstrap.", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  v14 = type metadata accessor for Podcasts(0);
  *((_QWORD *)&v40 + 1) = v14;
  v41 = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v15 = sub_1000242A8(&v39);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, enum case for Podcasts.objectGraphBuilderInitialization(_:), v14);
  LOBYTE(v14) = isFeatureEnabled(_:)(&v39);
  sub_10003D380(&v39);
  if ((v14 & 1) != 0)
  {
    v16 = static Dependencies.allDependencies()();
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph) = v16;
    swift_retain(v16);
    swift_release(v17);
    type metadata accessor for AppDependencyManager(0);
    v18 = ((uint64_t (*)(void))static AppDependencyManager.shared.getter)();
    v38[0] = 2;
    v19 = sub_100175104();
    AnyHashable.init<A>(_:)(v38, &type metadata for AppDependencyKey, v19);
    v20 = type metadata accessor for BaseObjectGraph(0);
    v21 = swift_retain(v16);
    AppDependencyManager.add<A>(key:dependency:)(&v39, sub_1002C7AEC, v16, v20, v21);
    swift_release(v18);
    swift_release(v16);
    v22 = sub_100007A28((uint64_t)&v39, &qword_100554540);
    v23 = static AppDependencyManager.shared.getter(v22);
    v38[0] = 1;
    AnyHashable.init<A>(_:)(v38, &type metadata for AppDependencyKey, v19);
    v24 = swift_retain(v16);
    AppDependencyManager.add<A>(key:dependency:)(&v39, sub_1002C7AEC, v16, v20, v24);
    swift_release(v23);
    swift_release_n(v16, 2);
    sub_100007A28((uint64_t)&v39, &qword_100554540);
  }
  else
  {
    v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appBootstrap);
    v26 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v25 + 24);
    *(_OWORD *)(v25 + 16) = xmmword_1003D3590;
    sub_1002C77F0(v26, v27);
  }
  v28 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
  *v28 = 0;
  v28[1] = 0;
  swift_unknownObjectRelease(v29);
  v30 = type metadata accessor for PPTViewControllerProxy(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
  v31 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pptViewHierarchyProxy, &v39, 33, 0);
  sub_10016DE28((uint64_t)v4, v31, &qword_10055E910);
  swift_endAccess(&v39);
  v41 = 0;
  v39 = 0u;
  v40 = 0u;
  v32 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController, v38, 33, 0);
  sub_10016DE28((uint64_t)&v39, v32, &qword_100554570);
  swift_endAccess(v38);
  v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v34 = objc_msgSend(v33, "delegate");

  if (v34)
  {
    if ((objc_msgSend(v34, "respondsToSelector:", "window") & 1) != 0)
    {
      v35 = objc_msgSend(v34, "window");
      swift_unknownObjectRelease(v34);
      if (v35)
      {
        v36 = sub_10002A45C();
        objc_msgSend(v35, "setRootViewController:", v36);

      }
    }
    else
    {
      swift_unknownObjectRelease(v34);
    }
  }
}

uint64_t sub_1002C0DD0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;

  v6 = a4;
  if (a4)
  {
    type metadata accessor for LaunchOptionsKey(0);
    v10 = v9;
    v11 = sub_100026844(&qword_100560AE0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_1003C9AE0);
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, v10, (char *)&type metadata for Any + 8, v11);
  }
  v12 = a3;
  v13 = a1;
  v14 = a5();

  swift_bridgeObjectRelease(v6);
  return v14 & 1;
}

uint64_t sub_1002C0E80(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v42 = a3;
  v46 = a2;
  v49 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v47 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for AppEnterMetricsEvent.EnterKind(0);
  v7 = *(_QWORD *)(v40 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v40);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricsPipeline(0);
  v39 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v39 + 64);
  v12 = __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v39 - v15;
  v43 = (char *)&v39 - v15;
  v45 = a1;
  BaseObjectGraph.inject<A>(_:)((uint64_t *)((char *)&v39 - v15), v14, v14);
  v17 = type metadata accessor for LegacyPlaybackQueueMigrator();
  v18 = swift_allocObject(v17, 24, 7);
  v44 = v18;
  v19 = type metadata accessor for PlaybackController(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(aBlock, v19, v19);
  *(_QWORD *)(v18 + 16) = aBlock[0];
  sub_100378FB0();
  swift_release(a1);
  sub_100375924();
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v41 = static OS_dispatch_queue.metricsProcessingQueue.getter();
  v20 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v42, v40);
  v21 = v39;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v13, v16, v10);
  v22 = *(unsigned __int8 *)(v7 + 80);
  v23 = (v22 + 24) & ~v22;
  v24 = *(unsigned __int8 *)(v21 + 80);
  v25 = v21;
  v26 = (v8 + v24 + v23) & ~v24;
  v27 = swift_allocObject(&unk_1004BDF90, v26 + v11, v22 | v24 | 7);
  v28 = v46;
  *(_QWORD *)(v27 + 16) = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v27 + v23, v9, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27 + v26, v13, v10);
  aBlock[4] = sub_1002C79BC;
  v55 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BDFA8;
  v29 = _Block_copy(aBlock);
  v30 = v28;
  v31 = v47;
  static DispatchQoS.unspecified.getter(v30);
  v53 = _swiftEmptyArrayStorage;
  v32 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v33 = sub_10003F544((uint64_t *)&unk_10055B200);
  v34 = sub_10002F9C8((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200, (uint64_t)&protocol conformance descriptor for [A]);
  v36 = v48;
  v35 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v53, v33, v34, v49, v32);
  v37 = (void *)v41;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v36, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v51);
  swift_release(v55);
  sub_1002C5F98();
  swift_release(v44);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v43, v10);
}

void sub_1002C1250(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  NSString v50;
  uint64_t v51;
  Class v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(char *, uint64_t);
  void *v62;
  uint64_t v63;
  _QWORD *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[4];

  v75 = a1;
  v73 = type metadata accessor for NSFastEnumerationIterator(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v74 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v76 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(NSUserDefaults);
  v9 = objc_msgSend(v8, "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "stringForKey:", v10);

  if (!v11)
    return;

  v12 = objc_msgSend(v8, "standardUserDefaults");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "stringForKey:", v13);

  if (!v14)
    return;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  sub_1002C2CC4((uint64_t)v4);
  v18 = v76;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease(v17);
    sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v7, v4, v5);
  v19 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL.path.getter();
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v23 = objc_msgSend(v19, "contentsAtPath:", v22);

  if (!v23)
  {
    swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
    return;
  }
  v68 = v5;
  v69 = v7;
  v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  v27 = (void *)objc_opt_self(NSPropertyListSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v82 = 0;
  v29 = objc_msgSend(v27, "propertyListWithData:options:format:error:", isa, 1, 0, &v82);

  v30 = (id)v82;
  if (!v29)
  {
LABEL_41:
    v62 = v30;
    v63 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unexpectedError(v63, "Podcasts/AppDelegate.swift", 26, 1, 410);
    __break(1u);
    return;
  }
  _bridgeAnyObjectToAny(_:)(v84, v29);
  swift_unknownObjectRelease(v29);
  sub_10003D344((uint64_t)v84, (uint64_t)&v82);
  v31 = sub_100005EC8(0, (unint64_t *)&unk_100560AD0, NSArray_ptr);
  v32 = swift_dynamicCast(&v80, &v82, (char *)&type metadata for Any + 8, v31, 6);
  v33 = v74;
  if (!v32)
  {
    swift_bridgeObjectRelease(v17);
    sub_100032A84(v24, v26);
    sub_10003D380(v84);
    v61 = *(void (**)(char *, uint64_t))(v18 + 8);
    goto LABEL_38;
  }
  v70 = v17;
  v66 = v24;
  v67 = v26;
  v65 = (id)v80;
  v34 = NSArray.makeIterator()();
  NSFastEnumerationIterator.next()(&v82, v34);
  if (!v83)
  {
    v35 = _swiftEmptyArrayStorage;
    goto LABEL_37;
  }
  v35 = _swiftEmptyArrayStorage;
  v36 = (unint64_t *)&qword_100554EF0;
  v37 = (char *)&type metadata for Any + 8;
  v38 = &type metadata for AnyHashable;
  v71 = (char *)&type metadata for Any + 8;
  do
  {
    v64 = v35;
    while (1)
    {
      sub_10013B9CC(&v82, &v80);
      v40 = sub_100005EC8(0, v36, NSDictionary_ptr);
      v39 = swift_dynamicCast(v79, &v80, v37, v40, 6);
      if ((v39 & 1) == 0)
        goto LABEL_14;
      v41 = v38;
      v42 = *(void **)&v79[0];
      *(_QWORD *)&v79[0] = 0x656D614E74736574;
      *((_QWORD *)&v79[0] + 1) = 0xE800000000000000;
      v43 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v79, &type metadata for String);
      v44 = objc_msgSend(v42, "__swift_objectForKeyedSubscript:", v43);
      swift_unknownObjectRelease(v43);
      if (v44)
      {
        _bridgeAnyObjectToAny(_:)(v79, v44);
        swift_unknownObjectRelease(v44);
      }
      else
      {
        memset(v79, 0, sizeof(v79));
      }
      sub_10003DC78((uint64_t)v79, (uint64_t)&v80, (uint64_t *)&unk_100552300);
      v38 = v41;
      if (v81)
        break;
      sub_100007A28((uint64_t)&v80, (uint64_t *)&unk_100552300);
LABEL_12:

LABEL_13:
      v37 = v71;
LABEL_14:
      NSFastEnumerationIterator.next()(&v82, v39);
      if (!v83)
      {
        v35 = v64;
        goto LABEL_37;
      }
    }
    if ((swift_dynamicCast(&v77, &v80, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
      goto LABEL_12;
    v46 = v77;
    v45 = v78;
    if (v15 == v77)
    {
      v47 = v70;
      if (v70 == v78)
        goto LABEL_25;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v15, v70, v77, v78, 0) & 1) != 0)
    {
      v47 = v45;
LABEL_25:
      v48 = v36;
      swift_bridgeObjectRelease(v47);
      v49 = v15;
      v50 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v80 = 0;
      v30 = (id)static Dictionary._forceBridgeFromObjectiveC(_:result:)(v42, &v80, v41, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v51 = v80;
      if (!(_QWORD)v80)
      {
        __break(1u);
        goto LABEL_41;
      }
      v52 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v51);
      objc_msgSend(v75, "runTest:options:", v50, v52);

      v15 = v49;
      v36 = v48;
      v38 = v41;
      goto LABEL_13;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
      v64 = sub_10027AE00(0, v64[2] + 1, 1, v64);
    v54 = v64[2];
    v53 = v64[3];
    v55 = v54 + 1;
    v56 = v36;
    if (v54 >= v53 >> 1)
    {
      v60 = sub_10027AE00((_QWORD *)(v53 > 1), v54 + 1, 1, v64);
      v55 = v54 + 1;
      v64 = v60;
    }
    v57 = v64;
    v64[2] = v55;
    v58 = &v57[2 * v54];
    v58[4] = v46;
    v58[5] = v45;

    NSFastEnumerationIterator.next()(&v82, v59);
    v35 = v57;
    v36 = v56;
    v38 = v41;
    v37 = v71;
  }
  while (v83);
LABEL_37:
  sub_100032A84(v66, v67);
  swift_bridgeObjectRelease(v70);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v33, v73);
  swift_bridgeObjectRelease(v35);
  sub_10003D380(v84);
  v61 = *(void (**)(char *, uint64_t))(v76 + 8);
LABEL_38:
  v61(v69, v68);
}

uint64_t sub_1002C1B58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t result;
  double v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "uuid");
  if (!v8)
  {
    v20 = type metadata accessor for ShowInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
  }
  v9 = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  objc_msgSend(a1, "addedDate");
  v11 = Date.init(timeIntervalSinceReferenceDate:)(v10);
  v12 = Date.timeIntervalSince1970.getter(v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v12 * 1000.0;
  if ((~COERCE__INT64(v12 * 1000.0) & 0x7FF0000000000000) != 0)
  {
    if (v14 > -9.22337204e18)
    {
      if (v14 < 9.22337204e18)
      {
        v15 = (double)(uint64_t)v14;
        v16 = (uint64_t)objc_msgSend(a1, "storeCollectionId");
        v21[1] = AdamID.init(rawValue:)(v16 & ~(v16 >> 63));
        v17 = sub_100030584();
        v18 = BinaryInteger.description.getter(&type metadata for UInt64, v17);
        ShowInfo.init(adamId:deviceShowId:followTime:)(v18, v15);
        v19 = type metadata accessor for ShowInfo(0);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

BOOL sub_1002C1D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for ShowInfo(0);
  v5 = sub_100026844((unint64_t *)&unk_100564E20, (uint64_t (*)(uint64_t))&type metadata accessor for ShowInfo, (uint64_t)&protocol conformance descriptor for ShowInfo);
  return (dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v4, v5) & 1) == 0;
}

uint64_t sub_1002C1DA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a2;
  v3 = type metadata accessor for MetricsPipeline(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v50 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544((uint64_t *)&unk_100560A70);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544(&qword_100558C30);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for MetricsFieldsContext(0);
  v43 = *(_QWORD *)(v48 - 8);
  v11 = __chkstk_darwin(v48);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v40 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v40 - v17;
  v19 = type metadata accessor for FollowMetricsEvent.FollowType(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MetricsData(0);
  result = __chkstk_darwin(v23);
  v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a1;
  if (*(_QWORD *)(v28 + 16))
  {
    v29 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
    v41 = v25;
    v42 = result;
    v29(v22, enum case for FollowMetricsEvent.FollowType.followedShows(_:), v19);
    static FollowMetricsEvent.makeData(followType:shows:)(v22, v28);
    v30 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    MetricsFieldsContext.init()(v30);
    v31 = type metadata accessor for PageContextTracker(0);
    v53 = static PageContextTracker.shared.getter();
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v53, v10, v31);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
    swift_release(v53);
    v32 = *(void (**)(char *, uint64_t))(v43 + 8);
    v33 = v48;
    v32(v13, v48);
    type metadata accessor for MetricsActivity(0);
    v34 = (void *)static MetricsActivity.shared.getter();
    v35 = MetricsActivity.currentPageFields.getter();

    v53 = v35;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    v36 = sub_10003F544(&qword_1005549E0);
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v53, v7, v36);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
    swift_bridgeObjectRelease(v53);
    v37 = ((uint64_t (*)(char *, uint64_t))v32)(v16, v33);
    v38 = v50;
    dispatch thunk of BaseFlowController.metricsPipeline.getter(v37);
    v39 = MetricsPipeline.process(_:using:)(v27, v18);
    swift_release(v39);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
    v32(v18, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v27, v42);
  }
  return result;
}

uint64_t sub_1002C20FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = swift_bridgeObjectRetain(*a1);
  v5 = sub_1002C6468(v4);
  result = swift_bridgeObjectRelease(v3);
  *a2 = v5;
  return result;
}

uint64_t sub_1002C2140@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *a2;
  *a3 = *a2;
  a3[1] = v3;
  swift_bridgeObjectRetain(v3);
  return swift_bridgeObjectRetain(v4);
}

uint64_t *sub_1002C216C@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *v6;
  void *v7;

  v3 = *result;
  v4 = result[1];
  if (*result)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    if (*(_QWORD *)(v4 + 16) <= *(_QWORD *)(v3 + 16) >> 3)
    {
      v7 = (void *)*result;
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v3);
      sub_10033B834(v4);
      v6 = v7;
    }
    else
    {
      swift_bridgeObjectRetain(result[1]);
      swift_bridgeObjectRetain(v3);
      v6 = sub_10033C4E4(v4, v3);
    }
    if (*(_QWORD *)(v3 + 16) <= *(_QWORD *)(v4 + 16) >> 3)
    {
      sub_10033B834(v3);
      result = (uint64_t *)v4;
    }
    else
    {
      result = (uint64_t *)sub_10033C4E4(v3, v4);
    }
    *a2 = v6;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_1002C2248(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  int64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, unint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v140 = a2;
  v3 = type metadata accessor for MetricsPipeline(0);
  v138 = *(_QWORD *)(v3 - 8);
  v139 = v3;
  __chkstk_darwin(v3);
  v137 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544((uint64_t *)&unk_100560A70);
  v135 = *(_QWORD *)(v5 - 8);
  v136 = v5;
  __chkstk_darwin(v5);
  v134 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544(&qword_100558C30);
  v132 = *(_QWORD *)(v7 - 8);
  v133 = v7;
  __chkstk_darwin(v7);
  v131 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetricsFieldsContext(0);
  v129 = *(_QWORD *)(v9 - 8);
  v130 = v9;
  v10 = __chkstk_darwin(v9);
  v128 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v127 = (char *)&v106 - v13;
  __chkstk_darwin(v12);
  v126 = (char *)&v106 - v14;
  v15 = type metadata accessor for FollowMetricsEvent.FollowType(0);
  v124 = *(_QWORD *)(v15 - 8);
  v125 = v15;
  __chkstk_darwin(v15);
  v123 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MetricsData(0);
  v121 = *(_QWORD *)(v17 - 8);
  v122 = v17;
  __chkstk_darwin(v17);
  v120 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for ShowInfo(0);
  v117 = *(_QWORD *)(v118 - 8);
  v19 = __chkstk_darwin(v118);
  v119 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v109 = (char *)&v106 - v22;
  __chkstk_darwin(v21);
  v111 = (char *)&v106 - v23;
  v24 = *a1;
  v113 = a1[1];
  v25 = *(_QWORD *)(v24 + 56);
  v107 = v24 + 56;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v108 = (unint64_t)(v26 + 63) >> 6;
  LODWORD(v110) = enum case for FollowMetricsEvent.FollowType.follow(_:);
  v112 = v24;
  result = swift_bridgeObjectRetain(v24);
  v30 = 0;
  v116 = xmmword_1003CA200;
  v31 = v118;
  v32 = v119;
  v33 = v120;
  while (1)
  {
    if (v28)
    {
      v114 = (v28 - 1) & v28;
      v115 = v30;
      v34 = __clz(__rbit64(v28)) | (v30 << 6);
      goto LABEL_5;
    }
    v62 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v62 >= v108)
      goto LABEL_21;
    v63 = *(_QWORD *)(v107 + 8 * v62);
    v64 = v30 + 1;
    if (!v63)
    {
      v64 = v30 + 2;
      if (v30 + 2 >= v108)
        goto LABEL_21;
      v63 = *(_QWORD *)(v107 + 8 * v64);
      if (!v63)
      {
        v64 = v30 + 3;
        if (v30 + 3 >= v108)
          goto LABEL_21;
        v63 = *(_QWORD *)(v107 + 8 * v64);
        if (!v63)
          break;
      }
    }
LABEL_20:
    v114 = (v63 - 1) & v63;
    v115 = v64;
    v34 = __clz(__rbit64(v63)) + (v64 << 6);
LABEL_5:
    v35 = v117;
    v36 = *(_QWORD *)(v117 + 72);
    v37 = *(void (**)(char *, unint64_t, uint64_t))(v117 + 16);
    v38 = v111;
    v37(v111, *(_QWORD *)(v112 + 48) + v36 * v34, v31);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v38, v31);
    v40 = v123;
    v39 = v124;
    v41 = v125;
    (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v123, v110, v125);
    v42 = sub_10003F544(&qword_100560A80);
    v43 = *(unsigned __int8 *)(v35 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v42, v44 + v36, v43 | 7);
    *(_OWORD *)(v45 + 16) = v116;
    v37((char *)(v45 + v44), (unint64_t)v32, v31);
    static FollowMetricsEvent.makeData(followType:shows:)(v40, v45);
    swift_bridgeObjectRelease(v45);
    v46 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    v47 = v128;
    MetricsFieldsContext.init()(v46);
    v48 = type metadata accessor for PageContextTracker(0);
    v141 = static PageContextTracker.shared.getter();
    v49 = v131;
    static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
    v50 = v127;
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v141, v49, v48);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v49, v133);
    swift_release(v141);
    v51 = *(void (**)(char *, uint64_t))(v129 + 8);
    v52 = v47;
    v53 = v130;
    v51(v52, v130);
    type metadata accessor for MetricsActivity(0);
    v54 = (void *)static MetricsActivity.shared.getter();
    v55 = MetricsActivity.currentPageFields.getter();

    v141 = v55;
    v56 = v134;
    static MetricsFieldsContext.Property<A>.pageFields.getter();
    v57 = sub_10003F544(&qword_1005549E0);
    v58 = v126;
    MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v141, v56, v57);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v56, v136);
    swift_bridgeObjectRelease(v141);
    v59 = ((uint64_t (*)(char *, uint64_t))v51)(v50, v53);
    v60 = v137;
    dispatch thunk of BaseFlowController.metricsPipeline.getter(v59);
    v61 = MetricsPipeline.process(_:using:)(v33, v58);
    swift_release(v61);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v60, v139);
    v51(v58, v53);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v33, v122);
    result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v32, v31);
    v30 = v115;
    v28 = v114;
  }
  v65 = v30 + 4;
  if (v30 + 4 >= v108)
  {
LABEL_21:
    swift_release(v112);
    v66 = *(_QWORD *)(v113 + 56);
    v110 = v113 + 56;
    v67 = 1 << *(_BYTE *)(v113 + 32);
    v68 = -1;
    if (v67 < 64)
      v68 = ~(-1 << v67);
    v69 = v68 & v66;
    v111 = (char *)((unint64_t)(v67 + 63) >> 6);
    LODWORD(v112) = enum case for FollowMetricsEvent.FollowType.unfollow(_:);
    result = swift_bridgeObjectRetain(v113);
    v70 = 0;
    v71 = v118;
    v72 = v119;
    v73 = v120;
    while (1)
    {
      if (v69)
      {
        v114 = (v69 - 1) & v69;
        v115 = v70;
        v74 = __clz(__rbit64(v69)) | (v70 << 6);
      }
      else
      {
        v102 = v70 + 1;
        if (__OFADD__(v70, 1))
          goto LABEL_43;
        if (v102 >= (uint64_t)v111)
          return swift_release(v113);
        v103 = *(_QWORD *)(v110 + 8 * v102);
        v104 = v70 + 1;
        if (!v103)
        {
          v104 = v70 + 2;
          if (v70 + 2 >= (uint64_t)v111)
            return swift_release(v113);
          v103 = *(_QWORD *)(v110 + 8 * v104);
          if (!v103)
          {
            v104 = v70 + 3;
            if (v70 + 3 >= (uint64_t)v111)
              return swift_release(v113);
            v103 = *(_QWORD *)(v110 + 8 * v104);
            if (!v103)
            {
              v105 = v70 + 4;
              if (v70 + 4 >= (uint64_t)v111)
                return swift_release(v113);
              v103 = *(_QWORD *)(v110 + 8 * v105);
              if (!v103)
              {
                while (1)
                {
                  v104 = v105 + 1;
                  if (__OFADD__(v105, 1))
                    goto LABEL_45;
                  if (v104 >= (uint64_t)v111)
                    return swift_release(v113);
                  v103 = *(_QWORD *)(v110 + 8 * v104);
                  ++v105;
                  if (v103)
                    goto LABEL_40;
                }
              }
              v104 = v70 + 4;
            }
          }
        }
LABEL_40:
        v114 = (v103 - 1) & v103;
        v115 = v104;
        v74 = __clz(__rbit64(v103)) + (v104 << 6);
      }
      v75 = v117;
      v76 = *(_QWORD *)(v117 + 72);
      v77 = *(void (**)(char *, unint64_t, uint64_t))(v117 + 16);
      v78 = v109;
      v77(v109, *(_QWORD *)(v113 + 48) + v76 * v74, v71);
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v78, v71);
      v80 = v123;
      v79 = v124;
      v81 = v125;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v123, v112, v125);
      v82 = sub_10003F544(&qword_100560A80);
      v83 = *(unsigned __int8 *)(v75 + 80);
      v84 = (v83 + 32) & ~v83;
      v85 = swift_allocObject(v82, v84 + v76, v83 | 7);
      *(_OWORD *)(v85 + 16) = v116;
      v77((char *)(v85 + v84), (unint64_t)v72, v71);
      static FollowMetricsEvent.makeData(followType:shows:)(v80, v85);
      swift_bridgeObjectRelease(v85);
      v86 = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v80, v81);
      v87 = v128;
      MetricsFieldsContext.init()(v86);
      v88 = type metadata accessor for PageContextTracker(0);
      v141 = static PageContextTracker.shared.getter();
      v89 = v131;
      static MetricsFieldsContext.Property<A>.pageContextTracker.getter();
      v90 = v127;
      MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v141, v89, v88);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v89, v133);
      swift_release(v141);
      v91 = *(void (**)(char *, uint64_t))(v129 + 8);
      v92 = v87;
      v93 = v130;
      v91(v92, v130);
      type metadata accessor for MetricsActivity(0);
      v94 = (void *)static MetricsActivity.shared.getter();
      v95 = MetricsActivity.currentPageFields.getter();

      v141 = v95;
      v96 = v134;
      static MetricsFieldsContext.Property<A>.pageFields.getter();
      v97 = sub_10003F544(&qword_1005549E0);
      v98 = v126;
      MetricsFieldsContext.addingValue<A>(_:forProperty:)(&v141, v96, v97);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v96, v136);
      swift_bridgeObjectRelease(v141);
      v99 = ((uint64_t (*)(char *, uint64_t))v91)(v90, v93);
      v100 = v137;
      dispatch thunk of BaseFlowController.metricsPipeline.getter(v99);
      v101 = MetricsPipeline.process(_:using:)(v73, v98);
      swift_release(v101);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v100, v139);
      v91(v98, v93);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v73, v122);
      result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v72, v71);
      v70 = v115;
      v69 = v114;
    }
  }
  v63 = *(_QWORD *)(v107 + 8 * v65);
  if (v63)
  {
    v64 = v30 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v64 = v65 + 1;
    if (__OFADD__(v65, 1))
      break;
    if (v64 >= v108)
      goto LABEL_21;
    v63 = *(_QWORD *)(v107 + 8 * v64);
    ++v65;
    if (v63)
      goto LABEL_20;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1002C2CC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_10003F544((uint64_t *)&unk_100553DC0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v23 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  sub_100005EC8(0, (unint64_t *)&qword_100561290, UITraitCollection_ptr);
  v11 = static UITraitCollection.interfaceIdiomIsMac.getter();
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13 = v12;
  if ((v11 & 1) != 0)
  {
    v14 = objc_msgSend(v12, "resourceURL");

    if (v14)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v15 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    }
    else
    {
      v15 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
    }
    sub_10003DC78((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_100553DC0);
    type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v15) == 1)
    {
      sub_100007A28((uint64_t)v10, (uint64_t *)&unk_100553DC0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a1, 1, 1, v15);
    }
    else
    {
      URL.appendingPathComponent(_:)(0xD000000000000015, 0x800000010043A8B0);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v15);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v15);
    }
  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v13, "URLForResource:withExtension:", v16, v17);

    if (v18)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 0, 1, v19);
    }
    else
    {
      v22 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
    }
    return sub_10003DC78((uint64_t)v5, a1, (uint64_t *)&unk_100553DC0);
  }
}

uint64_t sub_1002C2FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  NSURL *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  Swift::String v54;
  uint64_t v55;
  _QWORD *v56;
  Swift::String v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  int v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  char *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[3];
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];
  uint64_t v113;
  uint64_t v114;

  v107 = a2;
  type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin();
  v99 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSLogger(0);
  v101 = *(_QWORD *)(v4 - 8);
  v102 = v4;
  __chkstk_darwin();
  v100 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v98 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for FlowDestinationPageHeader(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin();
  v97 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for FlowPresentationContext(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v96 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionMetricsBehavior(0);
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  __chkstk_darwin();
  v104 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FlowPresentationHints(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FlowDestination(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v103 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v92 - v18;
  v20 = (void *)objc_opt_self(DebugUI);
  URL._bridgeToObjectiveC()(v21);
  v23 = v22;
  v24 = objc_msgSend(v20, "isDebugUrl:", v22);

  if (v24)
  {
    objc_msgSend(v20, "showDebugUI");
    return 1;
  }
  type metadata accessor for DebugSettingsViewController(0);
  if ((static DebugSettingsViewController.isActivation(url:)(a1) & 1) != 0
    && objc_msgSend((id)objc_opt_self(PFClientUtil), "isRunningOnInternalOS"))
  {
    v25 = v108 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    swift_beginAccess(v108 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController, v109, 0, 0);
    if (!*(_QWORD *)(v25 + 24))
      return 1;
    sub_10000A520(v25, (uint64_t)v112);
    v26 = v113;
    v27 = v114;
    sub_10003A834(v112, v113);
    v28 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104))(v19, enum case for FlowDestination.debug(_:), v15);
    static FlowPresentationHints.default.getter(v28);
    dispatch thunk of FlowController.show(destination:hints:referrer:)(v19, v14, 0, 0, v26, v27);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v29 = v112;
LABEL_12:
    sub_10003D380(v29);
    return 1;
  }
  type metadata accessor for PodcastsURLScheme();
  v30 = sub_100328A54();
  if (v30)
  {
    v31 = v30;
    v32 = type metadata accessor for PodcastsURLOpenCommand(0);
    v33 = swift_dynamicCastClass(v31, v32);
    swift_release(v31);
    if (v33)
      return 1;
  }
  v34 = *(_QWORD *)(v108 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
  if (!v34)
  {
    v49 = v100;
    static OSLogger.actions.getter(v30);
    v50 = sub_10003F544(&qword_100557CA8);
    v51 = type metadata accessor for LogMessage(0);
    v52 = swift_allocObject(v50, ((*(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v51 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80) | 7);
    *(_OWORD *)(v52 + 16) = xmmword_1003CA200;
    v53 = v99;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1);
    v54._object = (void *)0x800000010043A7F0;
    v54._countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    v55 = type metadata accessor for URL(0);
    v113 = v55;
    v56 = sub_1000242A8(v112);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v56, a1, v55);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v112);
    sub_100007A28((uint64_t)v112, (uint64_t *)&unk_100552300);
    v57._countAndFlagsBits = 0xD00000000000001ALL;
    v57._object = (void *)0x8000000100437FF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    LogMessage.init(stringInterpolation:)(v53);
    v58 = v102;
    Logger.error(_:)(v52, v102, &protocol witness table for OSLogger);
    v59 = swift_bridgeObjectRelease(v52);
    (*(void (**)(char *, uint64_t, __n128))(v101 + 8))(v49, v58, v59);
    return 0;
  }
  v35 = *(_QWORD *)(v108 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner + 8);
  v36 = sub_10003F544(&qword_100553BE0);
  swift_unknownObjectRetain(v34);
  v37 = v107;
  BaseObjectGraph.inject<A>(_:)(v112, v36, v36);
  v38 = sub_10030F5AC(a1, (uint64_t)v112);
  if (v38)
  {
    v40 = v38;
    ObjectType = swift_getObjectType(v34, v39);
    v110 = type metadata accessor for Action(0);
    v111 = sub_100026844((unint64_t *)&qword_100554910, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    v109[0] = v40;
    v43 = v104;
    v42 = v105;
    v44 = v106;
    (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v104, enum case for ActionMetricsBehavior.notProcessed(_:), v106);
    swift_retain();
    v45 = ActionRunner.perform(_:withMetrics:asPartOf:)(v109, v43, v37, ObjectType, v35);
    swift_release(v40);
    swift_unknownObjectRelease(v34);
    v46 = swift_release(v45);
    (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v43, v44, v46);
    sub_10003D380(v112);
    v29 = v109;
    goto LABEL_12;
  }
  v60 = sub_10003F544(&qword_1005612A0);
  v61 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v61 + 16) = xmmword_1003CA200;
  v62 = sub_10003F544((uint64_t *)&unk_100560970);
  v63 = v103;
  v64 = &v103[*(int *)(v62 + 48)];
  v65 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, a1, v65);
  v66 = enum case for FlowOrigin.external(_:);
  v67 = type metadata accessor for FlowOrigin(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v64, v66, v67);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v63, enum case for FlowDestination.unknown(_:), v15);
  v68 = v96;
  v69 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v92 + 104))(v96, enum case for FlowPresentationContext.infer(_:), v93);
  v70 = static Link.Presentation.textFollowsTintColor.getter(v69);
  v71 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v72 = Link.Presentation.init(rawValue:)(0);
  v73 = Link.Presentation.init(rawValue:)(v72);
  if (Link.Presentation.init(rawValue:)(v73 & v70) != v70)
    v72 = Link.Presentation.init(rawValue:)(v72 | v70);
  v74 = Link.Presentation.init(rawValue:)(v72);
  if (Link.Presentation.init(rawValue:)(v74 & v71) != v71)
    v72 = Link.Presentation.init(rawValue:)(v72 | v71);
  v75 = v97;
  v76 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v94 + 104))(v97, enum case for FlowDestinationPageHeader.standard(_:), v95);
  v77 = v98;
  static ActionMetrics.notInstrumented.getter(v76);
  v78 = type metadata accessor for FlowAction(0);
  swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
  v90 = v75;
  v47 = 1;
  v79 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v103, 0, 0, 0, 0, v68, 1, v72, v90, v77);
  *(_QWORD *)(v61 + 56) = v78;
  *(_QWORD *)(v61 + 64) = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
  *(_QWORD *)(v61 + 32) = v79;
  v80 = Link.Presentation.init(rawValue:)(0);
  LOBYTE(v79) = v80;
  static ActionMetrics.notInstrumented.getter(v80);
  v81 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
  LOBYTE(v91) = v79;
  v82 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 13, v61, 0, 0, 0, 0, v91, v77);
  v84 = swift_getObjectType(v34, v83);
  v110 = v81;
  v111 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
  v109[0] = v82;
  v86 = v104;
  v85 = v105;
  v87 = v106;
  (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v104, enum case for ActionMetricsBehavior.notProcessed(_:), v106);
  swift_retain();
  v88 = ActionRunner.perform(_:withMetrics:asPartOf:)(v109, v86, v37, v84, v35);
  swift_release(v82);
  swift_unknownObjectRelease(v34);
  v89 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v86, v87, v89);
  sub_10003D380(v112);
  sub_10003D380(v109);
  return v47;
}

uint64_t sub_1002C3910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t ObjectType;
  uint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v30 = a1;
  v31 = a3;
  v6 = *a4;
  v7 = type metadata accessor for ActionMetricsBehavior(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin();
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for OSLogger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin();
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    ObjectType = swift_getObjectType(a2, v16);
    v33 = v6;
    v34 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
    v32[0] = a4;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ActionMetricsBehavior.notProcessed(_:), v7);
    swift_retain();
    swift_unknownObjectRetain(a2);
    v20 = ActionRunner.perform(_:withMetrics:asPartOf:)(v32, v10, v30, ObjectType, v31);
    swift_unknownObjectRelease(a2);
    v21 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v21);
    return sub_10003D380(v32);
  }
  else
  {
    static OSLogger.actions.getter(v15);
    v23 = sub_10003F544(&qword_100557CA8);
    v24 = type metadata accessor for LogMessage(0);
    v25 = swift_allocObject(v23, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
    *(_OWORD *)(v25 + 16) = xmmword_1003CA200;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v26._object = (void *)0x800000010043A810;
    v26._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    v33 = v6;
    v32[0] = a4;
    swift_retain();
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v32);
    sub_100007A28((uint64_t)v32, (uint64_t *)&unk_100552300);
    v27._countAndFlagsBits = 0xD00000000000001ALL;
    v27._object = (void *)0x8000000100437FF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v12);
    Logger.error(_:)(v25, v13, &protocol witness table for OSLogger);
    v28 = swift_bridgeObjectRelease(v25);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v18, v13, v28);
  }
}

uint64_t sub_1002C3C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;

  type metadata accessor for MetricsActivity(0);
  v6 = (void *)static MetricsActivity.shared.getter();
  MetricsActivity.beginActiveCrossfireReferral(_:)(a2);

  v7 = (void *)static MetricsActivity.shared.getter();
  MetricsActivity.setupWidgetData(_:)(a3);

  return sub_1002C2FB4(a3, a1);
}

void sub_1002C3E70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  char v5;
  id v6;
  id v7;
  id v8;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = NSUserDefaults.debugGestureEnabled.getter();

  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)UIScreenEdgePanGestureRecognizer), "initWithTarget:action:", v2, "handleDebugActivationFrom:");
    objc_msgSend(v6, "setEdges:", 8);
    v7 = objc_msgSend(a1, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "addGestureRecognizer:", v6);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002C3F60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  objc_class *v35;
  char *v36;
  double v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  _QWORD aBlock[5];
  uint64_t v47;
  objc_super v48;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)aBlock - v10;
  __chkstk_darwin(v9);
  v13 = (char *)aBlock - v12;
  v14 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v15 = objc_msgSend(v14, "delegate");

  if (v15)
  {
    if ((objc_msgSend(v15, "respondsToSelector:", "window") & 1) != 0
      && (v16 = objc_msgSend(v15, "window")) != 0)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "rootViewController");
      if (v18)
      {
        v19 = v18;
        v20 = type metadata accessor for MetricsController(0);
        swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
        v21 = swift_retain(a1);
        v22 = MetricsController.init(asPartOf:)(v21);
        sub_100005EC8(0, (unint64_t *)&qword_100561290, UITraitCollection_ptr);
        if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
        {
          sub_1002C4478(v19, v22);
          swift_unknownObjectRelease(v15);

          swift_release(v22);
        }
        else
        {
          v35 = (objc_class *)type metadata accessor for WelcomeViewControllerMetricsSender();
          v36 = (char *)objc_allocWithZone(v35);
          *(_QWORD *)&v36[OBJC_IVAR___MTWelcomeViewControllerMetricsSender_metricsController] = v22;
          v48.receiver = v36;
          v48.super_class = v35;
          *(_QWORD *)&v37 = swift_retain(v22).n128_u64[0];
          v38 = objc_msgSendSuper2(&v48, "init", v37);
          v39 = (void *)objc_opt_self(MTWelcomeUtil);
          v40 = swift_allocObject(&unk_1004BDD88, 24, 7);
          swift_unknownObjectWeakInit(v40 + 16, v2);
          v41 = swift_allocObject(&unk_1004BDDB0, 32, 7);
          *(_QWORD *)(v41 + 16) = v40;
          *(_QWORD *)(v41 + 24) = v22;
          aBlock[4] = sub_1002C7704;
          v47 = v41;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000489A8;
          aBlock[3] = &unk_1004BDDC8;
          v42 = _Block_copy(aBlock);
          v43 = v47;
          swift_retain(v22);
          v44 = v19;
          v45 = v38;
          swift_release(v43);
          objc_msgSend(v39, "presentWelcomeIfNeededFromViewController:metricsSender:acknowledgementCompletionBlock:", v44, v45, v42);
          _Block_release(v42);
          swift_unknownObjectRelease(v15);

          swift_release(v22);
        }
      }
      else
      {
        v31 = static Logger.navigation.getter();
        v32 = Logger.logObject.getter(v31);
        v33 = static os_log_type_t.debug.getter(v32);
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v34 = 0;
          swift_slowDealloc(v34, -1, -1);
          swift_unknownObjectRelease(v15);

        }
        else
        {

          swift_unknownObjectRelease(v15);
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      }
    }
    else
    {
      v23 = static Logger.navigation.getter();
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.debug.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        swift_slowDealloc(v26, -1, -1);
        swift_unknownObjectRelease(v15);

      }
      else
      {

        swift_unknownObjectRelease(v15);
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }
  }
  else
  {
    v27 = static Logger.navigation.getter();
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.debug.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      swift_slowDealloc(v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_1002C4444()
{
  uint64_t v0;

  type metadata accessor for StoreReviewPromptController(0);
  v0 = static StoreReviewPromptController.shared.getter();
  dispatch thunk of StoreReviewPromptController.prepareToTrackBecomeActive()();
  return swift_release(v0);
}

id sub_1002C4478(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  __int128 aBlock;
  uint64_t (*v27)(uint64_t);
  void *v28;
  void (*v29)();
  uint64_t v30;
  char v31[24];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = type metadata accessor for FlowDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(MTWelcomeUtil), "shouldShowWelcome");
  if ((_DWORD)result)
  {
    v11 = v2 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController, v31, 0, 0);
    sub_100007A64(v11, (uint64_t)&aBlock, &qword_100554570);
    if (v28)
    {
      sub_10002099C(&aBlock, (uint64_t)v32);
      v12 = v33;
      v13 = v34;
      sub_10003A834(v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FlowDestination.welcome(_:), v6);
      v14 = (void *)dispatch thunk of FlowController.viewController(for:referrer:)(v9, 0, 0, v12, v13);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (v14)
      {
        v15 = type metadata accessor for WelcomeViewController(0);
        v16 = (void *)swift_dynamicCastClass(v14, v15);
        if (v16)
        {
          v17 = v16;
          objc_msgSend(v16, "setModalPresentationStyle:", 1);
          v18 = swift_allocObject(&unk_1004BDD88, 24, 7);
          swift_unknownObjectWeakInit(v18 + 16, v3);
          v19 = (_QWORD *)swift_allocObject(&unk_1004BDE00, 40, 7);
          v19[2] = v18;
          v19[3] = v17;
          v19[4] = a2;
          swift_retain(v18);
          v20 = v14;
          v21 = swift_retain(a2);
          dispatch thunk of WelcomeViewController.deferUntilAcknowledged(_:)(sub_1002C7740, v19, v21);
          swift_release(v18);
          swift_release(v19);
          v22 = swift_allocObject(&unk_1004BDE28, 24, 7);
          *(_QWORD *)(v22 + 16) = v17;
          v29 = sub_1002C7770;
          v30 = v22;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v27 = sub_100027AF8;
          v28 = &unk_1004BDE40;
          v23 = _Block_copy(&aBlock);
          v24 = v30;
          v25 = v20;
          swift_release(v24);
          objc_msgSend(a1, "presentViewController:animated:completion:", v17, 1, v23);
          _Block_release(v23);

        }
        else
        {

        }
      }
      return (id)sub_10003D380(v32);
    }
    else
    {
      return (id)sub_100007A28((uint64_t)&aBlock, &qword_100554570);
    }
  }
  return result;
}

void sub_1002C4724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  _BYTE v10[24];

  v3 = type metadata accessor for MetricsData(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    static WelcomeSheetMetricsEvent.makeData()();
    MetricsController.process(_:)(v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (qword_1005520F0 != -1)
      swift_once(&qword_1005520F0, sub_10000597C);
    ForegroundSyncUtil.startCloudSyncAfterPrivacy()();

  }
}

void sub_1002C4818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  _BYTE v9[24];

  v2 = type metadata accessor for MetricsData(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  objc_msgSend((id)objc_opt_self(MTWelcomeUtil), "markWelcomeAsShown");
  swift_beginAccess(a1, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    static WelcomeSheetMetricsEvent.makeData()();
    MetricsController.process(_:)(v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (qword_1005520F0 != -1)
      swift_once(&qword_1005520F0, sub_10000597C);
    ForegroundSyncUtil.startCloudSyncAfterPrivacy()();

  }
}

void sub_1002C4924(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    v7 = objc_msgSend(v1, "window");

    if (v7)
    {
      v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v4 = objc_msgSend(v3, "delegate");

      if (v4)
      {
        v5 = objc_opt_self(MTAppDelegate_Shared);
        v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
        if (v6)
          objc_msgSend(v6, "_enableTerminationForModalWindow:", v7);
        swift_unknownObjectRelease(v4);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002C4AF0()
{
  return type metadata accessor for AppDelegate(0);
}

void sub_1002C4AF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_1003D35C0;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_1003D35D8;
  v4[3] = &unk_1003D35D8;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = &unk_1003D35D8;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = &unk_1003D35F0;
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1002C4BB0(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(v2 - 8) + 64;
    v4[11] = &unk_1003D3608;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

void sub_1002C4BB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100560958)
  {
    v2 = type metadata accessor for PPTViewControllerProxy(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100560958);
  }
}

uint64_t sub_1002C4C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100007A64(v3, a1, &qword_100554570);
}

double sub_1002C4C5C(uint64_t a1, double a2, double a3, double a4)
{
  double (*v7)(double, double, double);
  uint64_t v8;
  double v9;

  v7 = *(double (**)(double, double, double))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_retain(v8);
  v9 = v7(a2, a3, a4);
  swift_release(v8);
  return v9;
}

void sub_1002C4CC4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = type metadata accessor for FlowPresentationHints(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestination(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "state") == (id)3)
  {
    v11 = v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_flowController;
    swift_beginAccess(v11, v18, 0, 0);
    if (*(_QWORD *)(v11 + 24))
    {
      sub_10000A520(v11, (uint64_t)v15);
      v12 = v16;
      v13 = v17;
      sub_10003A834(v15, v16);
      v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FlowDestination.debug(_:), v7);
      static FlowPresentationHints.default.getter(v14);
      dispatch thunk of FlowController.show(destination:hints:referrer:)(v10, v6, 0, 0, v12, v13);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_10003D380(v15);
    }
  }
}

uint64_t sub_1002C4E94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = type metadata accessor for Logger(0);
  v0[5] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[6] = v2;
  v0[7] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[8] = type metadata accessor for MainActor(0);
  v0[9] = static MainActor.shared.getter(v3);
  v4 = type metadata accessor for CacheDeleteObserver(0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_1002C4F4C;
  return BaseObjectGraph.inject<A>(_:)(v0 + 2, v4, v4);
}

uint64_t sub_1002C4F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD **)v1;
  v3[11] = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3[8], &protocol witness table for MainActor);
    return swift_task_switch(sub_1002C50C8, v4, v5);
  }
  else
  {
    v3[12] = v3[2];
    v8 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CacheDeleteObserver.subscribeToObservation()
                           + async function pointer to dispatch thunk of CacheDeleteObserver.subscribeToObservation());
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CacheDeleteObserver.subscribeToObservation()
                                    + 1));
    v3[13] = v7;
    *v7 = v3;
    v7[1] = sub_1002C5010;
    return v8();
  }
}

uint64_t sub_1002C5010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_release(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002C5090, v3, v4);
}

uint64_t sub_1002C5090()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C50C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_release(*(_QWORD *)(v0 + 72));
  static Logger.downloads.getter(v1);
  swift_errorRetain();
  v2 = swift_errorRetain();
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 40);
    v18 = *(_QWORD *)(v0 + 56);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v19 = v7;
    *(_QWORD *)(v0 + 24) = v5;
    swift_errorRetain();
    v8 = sub_10003F544((uint64_t *)&unk_10055A340);
    v9 = String.init<A>(describing:)(v0 + 24, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 32) = sub_10003D274(v9, v10, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to start cache delete observer: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 40);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C5310()
{
  return sub_100026844((unint64_t *)&unk_100560960, type metadata accessor for AppDelegate, (uint64_t)&unk_1003D3620);
}

uint64_t sub_1002C533C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002C5368()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v5[5];
  uint64_t v6;

  sub_100005EC8(0, (unint64_t *)&qword_100561290, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
  {
    v0 = sub_100005EC8(0, &qword_1005536C0, MTImageStore_ptr);
    BaseObjectGraph.injectIfAvailable<A>(_:)(v5, v0, v0);
    v1 = (void *)v5[0];
    if (v5[0])
    {
      v5[4] = sub_10030FB90;
      v6 = 0;
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 1107296256;
      v5[2] = sub_1002C4C5C;
      v5[3] = &unk_1004BDE90;
      v2 = _Block_copy(v5);
      v3 = v6;
      v4 = v1;
      swift_release(v3);
      objc_msgSend(v4, "setAlternativeSize:", v2);
      _Block_release(v2);

    }
  }
}

uint64_t sub_1002C5464()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[5];

  result = os_feature_enabled_bluemoon();
  if ((result & 1) == 0)
  {
    v1 = sub_10003F544(&qword_100555430);
    BaseObjectGraph.injectIfAvailable<A>(_:)(v10, v1, v1);
    v2 = v10[0];
    if (v10[0])
    {
      v3 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
      objc_msgSend(v3, "setHighlightsProvider:", v2);
      swift_unknownObjectRelease(v2);

    }
    v4 = sub_10003F544(&qword_100560AC0);
    BaseObjectGraph.injectIfAvailable<A>(_:)(&v8, v4, v4);
    if (v9)
    {
      sub_10002099C(&v8, (uint64_t)v10);
      sub_10000A520((uint64_t)v10, (uint64_t)&v8);
      v5 = objc_allocWithZone((Class)type metadata accessor for NowPlayingArtworkProviderObjCWrapper(0));
      v6 = (void *)NowPlayingArtworkProviderObjCWrapper.init(artworkProvider:)(&v8);
      v7 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
      objc_msgSend(v7, "setArtworkProvider:", v6);

      return sub_10003D380(v10);
    }
    else
    {
      return sub_100007A28((uint64_t)&v8, &qword_100560AC8);
    }
  }
  return result;
}

uint64_t sub_1002C55A4()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  id v4;
  NSString v5;
  id v6;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "launchedToTest");

  if ((v2 & 1) != 0)
    return 1;
  v3 = objc_msgSend(v0, "sharedApplication");
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "stringForKey:", v5);

  if (v6)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_1002C56A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v4) & 1) != 0)
  {
    v7 = sub_1002C04FC();
    v8 = type metadata accessor for UserActivityController();
    BaseObjectGraph.injectIfAvailable<A>(_:)(&v18, v8, v8);
    swift_release(v7);
    v10 = v18;
    if (v18)
    {
      if (sub_1002329D8(a1))
      {
        v11 = (char *)&loc_1002C5764 + 4 * byte_1003D35A0[sub_10023861C(a1)];
        __asm { BR              X10 }
      }
      swift_release(v10);
    }
    else
    {
      v12 = static Logger.userActivity.getter(v9);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.error.getter(v13);
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to find PlaybackContinuityController in graph", v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return 1;
}

uint64_t sub_1002C5834(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  _BYTE *v12;
  double v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  objc_super v37;
  id v38;

  v2 = sub_10003F544((uint64_t *)&unk_10055FF00);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MediaCacheDeleteProcessor(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for PlaybackController(0);
  BaseObjectGraph.inject<A>(_:)(&v38, v9, v9);
  v10 = v38;
  v11 = (objc_class *)type metadata accessor for SharedPlaybackController();
  v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR___MTSharedPlaybackController_isPlaying] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___MTSharedPlaybackController_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR___MTSharedPlaybackController_playbackController] = v10;
  v37.receiver = v12;
  v37.super_class = v11;
  *(_QWORD *)&v13 = swift_retain(v10).n128_u64[0];
  v14 = objc_msgSendSuper2(&v37, "init", v13);
  sub_100211BE4();

  swift_release(v10);
  v15 = (void *)qword_100573010;
  qword_100573010 = (uint64_t)v14;

  if ((static Podcasts.isBlueMoonEnabled()(v16) & 1) != 0)
  {
    v17 = type metadata accessor for UserActivityController();
    BaseObjectGraph.inject<A>(_:)(&v38, v17, v17);
    v18 = v38;
    sub_100232584();
    swift_release(v18);
    v19 = type metadata accessor for RemoteFollowCommandCenter(0);
    v20 = BaseObjectGraph.inject<A>(_:)(&v38, v19, v19);
    v21 = v38;
    dispatch thunk of RemoteFollowCommandCenter.beginObservingPlaybackQueue()(v20);

    v22 = type metadata accessor for NowPlayingItemPlayheadSynchronizer(0);
    v23 = BaseObjectGraph.inject<A>(_:)(&v38, v22, v22);
    v24 = v38;
    dispatch thunk of NowPlayingItemPlayheadSynchronizer.beginObserving()(v23);
    swift_release(v24);
  }
  v25 = sub_100005EC8(0, (unint64_t *)&unk_10055C450, &off_1004A4510);
  BaseObjectGraph.inject<A>(_:)(&v38, v25, v25);

  BaseObjectGraph.inject<A>(_:)(v8, v5, v5);
  MediaCacheDeleteProcessor.start()();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v26 = sub_10003F544((uint64_t *)&unk_10055C460);
  BaseObjectGraph.inject<A>(_:)(&v38, v26, v26);
  swift_unknownObjectRelease(v38);
  v27 = type metadata accessor for SiriIntentDonator(0);
  BaseObjectGraph.inject<A>(_:)(&v38, v27, v27);
  v28 = v38;
  SiriIntentDonator.beginObserving()();
  v29 = swift_release(v28);
  static TaskPriority.userInitiated.getter(v29);
  v30 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 0, 1, v30);
  type metadata accessor for MainActor(0);
  v31 = swift_retain(a1);
  v32 = static MainActor.shared.getter(v31);
  v33 = (_QWORD *)swift_allocObject(&unk_1004BE030, 40, 7);
  v33[2] = v32;
  v33[3] = &protocol witness table for MainActor;
  v33[4] = a1;
  v34 = sub_10034F744((uint64_t)v4, (uint64_t)&unk_100560B00, (uint64_t)v33);
  return swift_release(v34);
}

uint64_t sub_1002C5B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char v43;
  id v44;
  _QWORD v45[4];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v41 - v8;
  v10 = static Logger.lifecycle.getter(v7);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "willFinishLaunching. Preparing for background execution", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v42 = *(void (**)(char *, uint64_t))(v3 + 8);
  v42(v9, v2);
  v14 = type metadata accessor for Podcasts(0);
  v45[2] = v14;
  v45[3] = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v15 = sub_1000242A8(&v44);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, enum case for Podcasts.objectGraphBuilderInitialization(_:), v14);
  LOBYTE(v14) = isFeatureEnabled(_:)(&v44);
  sub_10003D380(&v44);
  if ((v14 & 1) != 0)
  {
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
    type metadata accessor for AppDependencyManager(0);
    swift_retain(v16);
    v18 = static AppDependencyManager.shared.getter(v17);
    v43 = 2;
    v19 = sub_100175104();
    AnyHashable.init<A>(_:)(&v43, &type metadata for AppDependencyKey, v19);
    v20 = type metadata accessor for BaseObjectGraph(0);
    v21 = swift_retain(v16);
    AppDependencyManager.add<A>(key:dependency:)(&v44, sub_1002C7AEC, v16, v20, v21);
    swift_release(v18);
    swift_release(v16);
    v22 = sub_100007A28((uint64_t)&v44, &qword_100554540);
    v23 = static AppDependencyManager.shared.getter(v22);
    v43 = 1;
    AnyHashable.init<A>(_:)(&v43, &type metadata for AppDependencyKey, v19);
    v24 = swift_retain(v16);
    AppDependencyManager.add<A>(key:dependency:)(&v44, sub_100175148, v16, v20, v24);
    swift_release(v23);
    swift_release(v16);
    sub_100007A28((uint64_t)&v44, &qword_100554540);
    goto LABEL_11;
  }
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appBootstrap);
  v26 = *(_QWORD *)(v25 + 24);
  if (!(v26 >> 62))
  {
    v16 = *(_QWORD *)(v25 + 16);
    goto LABEL_9;
  }
  if (v26 >> 62 == 1)
  {
    v16 = v26 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_9:
    swift_retain(v16);
    goto LABEL_11;
  }
  v16 = (uint64_t)sub_1002F1450();
  v27 = *(_QWORD *)(v25 + 16);
  v28 = *(_QWORD *)(v25 + 24);
  *(_QWORD *)(v25 + 16) = v16;
  *(_QWORD *)(v25 + 24) = 0;
  swift_retain(v16);
  sub_1002C77F0(v27, v28);
LABEL_11:
  sub_1002C5834(v16);
  v29 = swift_release(v16);
  v30 = static Logger.lifecycle.getter(v29);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.info.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v33 = 138412290;
    v35 = sub_100005EC8(0, &qword_100560AF0, &off_1004A4350);
    v36 = objc_msgSend((id)swift_getObjCClassFromMetadata(v35), "sharedInstance");
    v44 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v33 + 4, v33 + 12);
    *v34 = v36;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Starting spotlight controller: %@", v33, 0xCu);
    v37 = sub_10003F544((uint64_t *)&unk_100556480);
    swift_arrayDestroy(v34, 1, v37);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }

  v42(v6, v2);
  v38 = sub_100005EC8(0, &qword_100560AE8, off_1004A43C8);
  v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(v38), "sharedInstance");
  objc_msgSend(v39, "setup");

  return 1;
}

uint64_t sub_1002C5F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v13[5];

  v0 = type metadata accessor for StorageAnalyticsResponder(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (id *)((char *)&v13[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for PlaybackController(0);
  BaseObjectGraph.inject<A>(_:)(v13, v4, v4);
  swift_release(v13[0]);
  v5 = sub_10003F544((uint64_t *)&unk_10055C440);
  BaseObjectGraph.inject<A>(_:)(v13, v5, v5);
  sub_10003D380(v13);
  BaseObjectGraph.inject<A>(_:)(v3, v0, v0);
  StorageAnalyticsResponder.beginObserving()();
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v6 = type metadata accessor for LibraryActionController();
  BaseObjectGraph.inject<A>(_:)(v13, v6, v6);
  swift_release(v13[0]);
  v7 = sub_100005EC8(0, (unint64_t *)&unk_10055B1C0, off_1004A42F8);
  BaseObjectGraph.inject<A>(_:)(v13, v7, v7);

  v8 = type metadata accessor for RecommendationsMetadataProvider(0);
  BaseObjectGraph.inject<A>(_:)(v13, v8, v8);
  swift_release(v13[0]);
  v9 = sub_100005EC8(0, &qword_100554590, &off_1004A4480);
  BaseObjectGraph.inject<A>(_:)(v13, v9, v9);

  v10 = sub_10003F544(&qword_10055C4A0);
  BaseObjectGraph.inject<A>(_:)(v13, v10, v10);
  return swift_unknownObjectRelease(v13[0]);
}

void sub_1002C6120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for StorageAnalyticsResponder(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v20 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for AppExitMetricsEvent.ExitKind(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (void (*)(char *, uint64_t))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for MetricsPipeline(0);
  v21 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002C0430();
  if (v12)
  {
    v13 = v12;
    BaseObjectGraph.inject<A>(_:)(v11, v9, v9);
    (*(void (**)(void (*)(char *, uint64_t), _QWORD, uint64_t))(v6 + 104))(v8, enum case for AppExitMetricsEvent.ExitKind.taskSwitch(_:), v5);
    v14 = (char *)objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v19 = v3;
    v15 = v14;
    sub_1001D6418(v8, (uint64_t)v11, v14);

    v1 = v0;
    (*(void (**)(_QWORD, uint64_t))(v6 + 8))(v8, v5);
    v16 = v20;
    BaseObjectGraph.inject<A>(_:)(v20, v2, v2);
    StorageAnalyticsResponder.endObserving()();
    (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v16, v2);
    v17 = swift_release(v13);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v21 + 8))(v11, v9, v17);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_appHasBeenInBackground) = 1;
}

void sub_1002C6310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v0 = type metadata accessor for AppExitMetricsEvent.ExitKind(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (void (*)(char *, uint64_t))((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for MetricsPipeline(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002C0430();
  if (v8)
  {
    v9 = v8;
    BaseObjectGraph.inject<A>(_:)(v7, v4, v4);
    (*(void (**)(void (*)(char *, uint64_t), _QWORD, uint64_t))(v1 + 104))(v3, enum case for AppExitMetricsEvent.ExitKind.quit(_:), v0);
    v10 = (char *)objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    sub_1001D6418(v3, (uint64_t)v7, v10);
    swift_release(v9);

    (*(void (**)(_QWORD, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1002C6468(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for ShowInfo(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_100026844(&qword_100560A88, v10, (uint64_t)&protocol conformance descriptor for ShowInfo);
  result = Set.init(minimumCapacity:)(v9);
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_10035D640((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_1002C6590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD **v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = type metadata accessor for ActionMetricsBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionMetrics(0);
  v6 = __chkstk_darwin();
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = NSUserActivity.stateRestorationNavigationTab.getter(v6);
  if (result != 18)
  {
    v10 = result;
    sub_10013BE1C(result);
    v11 = Link.Presentation.init(rawValue:)(0);
    v12 = v11;
    static ActionMetrics.notInstrumented.getter(v11);
    v13 = type metadata accessor for TabChangeAction(0);
    swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    v14 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v10, 0, 0, 0, 0, 0, v12, v8);
    v15 = (uint64_t *)v14;
    v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
    if (v17)
    {
      v40 = v10;
      v18 = v14;
      v39 = v16[1];
      swift_unknownObjectRetain(v17);
      sub_1002C0430();
      if (v19)
      {
        v21 = v19;
        ObjectType = swift_getObjectType(v17, v20);
        v42 = v13;
        v43 = sub_100026844((unint64_t *)&unk_100560980, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (uint64_t)&protocol conformance descriptor for Action);
        v41[0] = v18;
        (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.notProcessed(_:), v2);
        swift_retain();
        v23 = ActionRunner.perform(_:withMetrics:asPartOf:)(v41, v5, v21, ObjectType, v39);
        swift_release(v18);
        swift_unknownObjectRelease(v17);
        swift_release(v21);
        swift_release(v23);
        sub_1002C7600(v40);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return sub_10003D380(v41);
      }
      swift_unknownObjectRelease(v17);
      v24 = *v16;
      v10 = v40;
    }
    else
    {
      v24 = 0;
    }
    v25 = v16[1];
    v26 = (_QWORD *)swift_allocObject(&unk_1004BDC98, 40, 7);
    v26[2] = v24;
    v26[3] = v25;
    v26[4] = v15;
    swift_unknownObjectRetain_n(v24, 3);
    swift_retain_n(v15, 2);
    sub_1002C0430();
    if (v27)
    {
      v28 = v27;
    }
    else
    {
      v29 = type metadata accessor for Podcasts(0);
      v42 = v29;
      v43 = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
      v30 = sub_1000242A8(v41);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v30, enum case for Podcasts.objectGraphBuilderInitialization(_:), v29);
      LOBYTE(v29) = isFeatureEnabled(_:)(v41);
      sub_10003D380(v41);
      if ((v29 & 1) == 0)
      {
        v31 = swift_allocObject(&unk_1004BDCC0, 32, 7);
        *(_QWORD *)(v31 + 16) = sub_1002C75D0;
        *(_QWORD *)(v31 + 24) = v26;
        v32 = (_QWORD **)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks);
        swift_beginAccess(v32, v41, 33, 0);
        v33 = *v32;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
        *v32 = v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v33 = sub_10027B720(0, v33[2] + 1, 1, v33);
          *v32 = v33;
        }
        v36 = v33[2];
        v35 = v33[3];
        if (v36 >= v35 >> 1)
        {
          v33 = sub_10027B720((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
          *v32 = v33;
        }
        v33[2] = v36 + 1;
        v37 = &v33[2 * v36];
        v37[4] = sub_100176EE8;
        v37[5] = v31;
        swift_endAccess(v41);
        swift_unknownObjectRelease(v24);
        swift_release(v26);
        goto LABEL_12;
      }
      v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph);
      swift_retain();
    }
    sub_1002C3910(v27, v24, v25, v15);
    swift_unknownObjectRelease(v24);
    swift_release(v26);
    swift_release(v28);
LABEL_12:
    swift_unknownObjectRelease(v24);
    swift_release_n(v15, 2);
    return sub_1002C7600(v10);
  }
  return result;
}

uint64_t sub_1002C69D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSString *v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  void *v60;
  __n128 v61;
  void *v62;
  char v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  void *v80;
  char *v81;
  __n128 v82;
  void *v83;
  uint64_t v84;
  __n128 v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  __n128 v90;
  void *v91;
  __n128 v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  void (*v102)(char *, uint64_t, __n128);
  __n128 v103;
  uint64_t v105;
  int v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;

  v119 = a1;
  v3 = type metadata accessor for MetricsActivity.PageReferrer(0);
  v124 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v124 + 64);
  __chkstk_darwin();
  v117 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v110 - v5;
  __chkstk_darwin();
  v125 = (char *)&v110 - v7;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v116 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v113 = (char *)&v110 - v11;
  __chkstk_darwin();
  v112 = (char *)&v110 - v12;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v118 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v110 - v14;
  __chkstk_darwin();
  v17 = (char *)&v110 - v16;
  __chkstk_darwin();
  v19 = (char *)&v110 - v18;
  __chkstk_darwin();
  v126 = v9;
  v127 = (uint64_t)&v110 - v20;
  if (!*(_QWORD *)(a2 + 16))
  {
    v130 = 0u;
    v131 = 0u;
    goto LABEL_13;
  }
  v21 = UIApplicationOpenURLOptionsSourceApplicationKey;
  v22 = sub_1001CCFBC(v21);
  if ((v23 & 1) == 0)
  {
    v130 = 0u;
    v131 = 0u;

    v9 = v126;
    goto LABEL_13;
  }
  sub_10003D344(*(_QWORD *)(a2 + 56) + 32 * v22, (uint64_t)&v130);

  v9 = v126;
  if (!*((_QWORD *)&v131 + 1))
  {
LABEL_13:
    sub_100007A28((uint64_t)&v130, (uint64_t *)&unk_100552300);
    v120 = 0;
    v121 = 0;
    goto LABEL_14;
  }
  v24 = swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v24)
    v25 = v128;
  else
    v25 = 0;
  if (v24)
    v26 = v129;
  else
    v26 = 0;
  v120 = v26;
  v121 = v25;
LABEL_14:
  v27 = *(_QWORD *)(a2 + 16);
  v123 = v3;
  v114 = v4;
  v115 = v6;
  if (!v27)
  {
    v130 = 0u;
    v131 = 0u;
LABEL_25:
    sub_100007A28((uint64_t)&v130, (uint64_t *)&unk_100552300);
    goto LABEL_26;
  }
  v28 = UIApplicationOpenURLOptionsAnnotationKey;
  v29 = sub_1001CCFBC(v28);
  if ((v30 & 1) != 0)
  {
    sub_10003D344(*(_QWORD *)(a2 + 56) + 32 * v29, (uint64_t)&v130);
  }
  else
  {
    v130 = 0u;
    v131 = 0u;
  }

  v9 = v126;
  if (!*((_QWORD *)&v131 + 1))
    goto LABEL_25;
  v31 = sub_10003F544(&qword_1005549E0);
  if ((swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, v31, 6) & 1) == 0)
  {
LABEL_26:
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v33(v127, 1, 1, v8);
    goto LABEL_27;
  }
  v32 = v128;
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v33(v127, 1, 1, v8);
  if (!v32)
  {
LABEL_27:
    v32 = 0;
    v130 = 0u;
    v131 = 0u;
    v41 = 1;
    goto LABEL_28;
  }
  v34 = LSReferrerURLKey;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(LSReferrerURLKey);
  if (*(_QWORD *)(v32 + 16))
  {
    v111 = v35;
    v37 = v36;
    swift_bridgeObjectRetain(v32);
    v38 = v111;
    v111 = v37;
    v39 = sub_10002E5D8(v38, v37);
    if ((v40 & 1) != 0)
    {
      sub_10003D344(*(_QWORD *)(v32 + 56) + 32 * v39, (uint64_t)&v130);
    }
    else
    {
      v130 = 0u;
      v131 = 0u;
    }
    swift_bridgeObjectRelease(v111);
    v105 = v32;
  }
  else
  {
    v130 = 0u;
    v131 = 0u;
    v105 = v36;
  }
  swift_bridgeObjectRelease(v105);
  if (*((_QWORD *)&v131 + 1))
  {
    v106 = swift_dynamicCast(v19, &v130, (char *)&type metadata for Any + 8, v8, 6);
    v33((uint64_t)v19, v106 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v19, 1, v8) != 1)
    {
      swift_bridgeObjectRelease(v32);
      v107 = v127;
      sub_100007A28(v127, (uint64_t *)&unk_100553DC0);
      v108 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v109 = v112;
      v108(v112, v19, v8);
      v108((char *)v107, v109, v8);
      v33(v107, 0, 1, v8);
      v42 = v126;
LABEL_39:
      v50 = (uint64_t)v118;
      v51 = v119;
      goto LABEL_41;
    }
    sub_100007A28((uint64_t)v19, (uint64_t *)&unk_100553DC0);
    goto LABEL_31;
  }
  v41 = 0;
LABEL_28:
  sub_100007A28((uint64_t)&v130, (uint64_t *)&unk_100552300);
  v33((uint64_t)v19, 1, 1, v8);
  sub_100007A28((uint64_t)v19, (uint64_t *)&unk_100553DC0);
  if ((v41 & 1) != 0)
  {
    v130 = 0u;
    v131 = 0u;
    v42 = v126;
    goto LABEL_40;
  }
  v34 = LSReferrerURLKey;
LABEL_31:
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v45 = v44;
  if (*(_QWORD *)(v32 + 16))
  {
    v46 = sub_10002E5D8(v43, v44);
    v42 = v126;
    if ((v47 & 1) != 0)
    {
      sub_10003D344(*(_QWORD *)(v32 + 56) + 32 * v46, (uint64_t)&v130);
    }
    else
    {
      v130 = 0u;
      v131 = 0u;
    }
  }
  else
  {
    v130 = 0u;
    v131 = 0u;
    v42 = v126;
  }
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v32);
  if (*((_QWORD *)&v131 + 1))
  {
    if ((swift_dynamicCast(&v128, &v130, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v48 = v129;
      URL.init(string:)(v128, v129);
      swift_bridgeObjectRelease(v48);
      v49 = v127;
      sub_100007A28(v127, (uint64_t *)&unk_100553DC0);
      sub_10003DC78((uint64_t)v17, v49, (uint64_t *)&unk_100553DC0);
    }
    goto LABEL_39;
  }
LABEL_40:
  v50 = (uint64_t)v118;
  sub_100007A28((uint64_t)&v130, (uint64_t *)&unk_100552300);
  v51 = v119;
LABEL_41:
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v52(v17, v51, v8);
  v33((uint64_t)v17, 0, 1, v8);
  sub_100007A64(v127, (uint64_t)v15, (uint64_t *)&unk_100553DC0);
  sub_100007A64((uint64_t)v17, v50, (uint64_t *)&unk_100553DC0);
  v53 = v125;
  MetricsActivity.PageReferrer.init(app:externalURL:openURL:)(v121, v120, v15, v50);
  sub_100007A28((uint64_t)v17, (uint64_t *)&unk_100553DC0);
  v54 = type metadata accessor for MetricsActivity(0);
  v55 = (void *)((uint64_t (*)(void))static MetricsActivity.shared.getter)();
  MetricsActivity.firstPageEventWithReferrer.setter(1);

  v56 = v122;
  sub_1002C0430();
  if (v57)
  {
    v59 = v57;
    v60 = (void *)static MetricsActivity.shared.getter(v58);
    MetricsActivity.beginActiveCrossfireReferral(_:)(v53);

    v62 = (void *)static MetricsActivity.shared.getter(v61);
    MetricsActivity.setupWidgetData(_:)(v51);

    v63 = sub_1002C2FB4(v51, v59);
    v64 = swift_release(v59);
    (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v53, v123, v64);
  }
  else
  {
    v120 = v54;
    v121 = v10;
    v65 = v123;
    v66 = v124;
    v67 = *(void (**)(void))(v124 + 16);
    v68 = v115;
    v67();
    v69 = v113;
    v52(v113, v51, v8);
    ((void (*)(char *, char *, uint64_t))v67)(v117, v68, v65);
    v52(v116, (uint64_t)v69, v8);
    v70 = *(unsigned __int8 *)(v66 + 80);
    v71 = (v70 + 16) & ~v70;
    v72 = *(unsigned __int8 *)(v42 + 80);
    v73 = (v114 + v72 + v71) & ~v72;
    v74 = (v121 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
    v75 = swift_allocObject(&unk_1004BDC48, v74 + 8, v70 | v72 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v75 + v71, v115, v65);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v75 + v73, v69, v8);
    *(_QWORD *)(v75 + v74) = v56;
    v76 = v56;
    sub_1002C0430();
    if (v77)
    {
      v79 = v77;
      v80 = (void *)static MetricsActivity.shared.getter(v78);
      v81 = v117;
      MetricsActivity.beginActiveCrossfireReferral(_:)(v117);

      v83 = (void *)static MetricsActivity.shared.getter(v82);
      v84 = (uint64_t)v116;
      MetricsActivity.setupWidgetData(_:)(v116);

      sub_1002C2FB4(v84, v79);
      swift_release(v75);
      v85 = swift_release(v79);
      v86 = v81;
    }
    else
    {
      v86 = v117;
      v87 = type metadata accessor for Podcasts(0);
      *((_QWORD *)&v131 + 1) = v87;
      v132 = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
      v88 = sub_1000242A8(&v130);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v88, enum case for Podcasts.objectGraphBuilderInitialization(_:), v87);
      LOBYTE(v87) = isFeatureEnabled(_:)(&v130);
      sub_10003D380(&v130);
      if ((v87 & 1) != 0)
      {
        v89 = *(_QWORD *)&v76[OBJC_IVAR____TtC8Podcasts11AppDelegate_objectGraph];
        v90 = swift_retain();
        v91 = (void *)static MetricsActivity.shared.getter(v90);
        MetricsActivity.beginActiveCrossfireReferral(_:)(v86);

        v93 = (void *)static MetricsActivity.shared.getter(v92);
        v84 = (uint64_t)v116;
        MetricsActivity.setupWidgetData(_:)(v116);

        sub_1002C2FB4(v84, v89);
        swift_release(v75);
        v85 = swift_release(v89);
      }
      else
      {
        v94 = v65;
        v95 = swift_allocObject(&unk_1004BDC70, 32, 7);
        *(_QWORD *)(v95 + 16) = sub_1002C7550;
        *(_QWORD *)(v95 + 24) = v75;
        v96 = &v76[OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks];
        swift_beginAccess(&v76[OBJC_IVAR____TtC8Podcasts11AppDelegate_pendingBootstrapBlocks], &v130, 33, 0);
        v97 = *(_QWORD **)v96;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v97);
        *(_QWORD *)v96 = v97;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v97 = sub_10027B720(0, v97[2] + 1, 1, v97);
          *(_QWORD *)v96 = v97;
        }
        v100 = v97[2];
        v99 = v97[3];
        if (v100 >= v99 >> 1)
        {
          v97 = sub_10027B720((_QWORD *)(v99 > 1), v100 + 1, 1, v97);
          *(_QWORD *)v96 = v97;
        }
        v97[2] = v100 + 1;
        v101 = &v97[2 * v100];
        v101[4] = sub_100176B90;
        v101[5] = v95;
        swift_endAccess(&v130);
        v85 = swift_release(v75);
        v84 = (uint64_t)v116;
        v86 = v117;
        v42 = v126;
        v65 = v94;
      }
    }
    v102 = *(void (**)(char *, uint64_t, __n128))(v124 + 8);
    v102(v86, v65, v85);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v84, v8);

    v63 = 1;
    v102(v125, v65, v103);
  }
  sub_100007A28(v127, (uint64_t *)&unk_100553DC0);
  return v63 & 1;
}

uint64_t sub_1002C7488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for MetricsActivity.PageReferrer(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_1002C7550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for MetricsActivity.PageReferrer(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1002C3C1C(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1002C75D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C3910(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_1002C75DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C7600(uint64_t result)
{
  if (result != 18)
    return sub_100175988(result);
  return result;
}

uint64_t sub_1002C7610()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002C763C()
{
  uint64_t v0;

  sub_1002C3F60(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1002C7664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = dispatch thunk of BaseObjectGraph.adding(allDependenciesOf:)(*(_QWORD *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1002C7690()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002C76B4(__n128 a1, __n128 a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(__n128, __n128, double))(v2 + 16))(a1, a2, *(double *)(v2 + 32));
}

uint64_t sub_1002C76DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002C7704(uint64_t a1)
{
  uint64_t v1;

  sub_1002C4724(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002C770C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002C7740()
{
  uint64_t v0;

  sub_1002C4818(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002C774C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002C7770()
{
  uint64_t v0;

  sub_1002C4924(*(void **)(v0 + 16));
}

uint64_t sub_1002C7778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002C0178(2, 1, 4, (uint64_t)sub_1002C1B58, 0, (uint64_t)sub_1002C1D38, 0);
  *a1 = result;
  return result;
}

uint64_t sub_1002C77C4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002C1DA8(a1, v1);
}

uint64_t sub_1002C77CC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002C2248(a1, v1);
}

uint64_t sub_1002C77D8()
{
  return 8;
}

_QWORD *sub_1002C77E4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002C77F0(uint64_t result, unint64_t a2)
{
  uint64_t v2;

  if (a2 >> 62)
  {
    if (a2 >> 62 != 1)
      return result;
    v2 = a2 & 0x3FFFFFFFFFFFFFFFLL;
    swift_release(result);
    result = v2;
  }
  return swift_release(result);
}

uint64_t sub_1002C7828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AppEnterMetricsEvent.EnterKind(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002C789C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppEnterMetricsEvent.EnterKind(0) - 8) + 80);
  return sub_1002C0E80(a1, *(void **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_1002C78DC()
{
  uint64_t v0;

  sub_1002C1250(*(void **)(v0 + 24));
}

uint64_t sub_1002C7900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for AppEnterMetricsEvent.EnterKind(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for MetricsPipeline(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002C79BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for AppEnterMetricsEvent.EnterKind(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MetricsPipeline(0) - 8) + 80);
  return sub_1001D6118(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

void sub_1002C7A30()
{
  sub_1002C0970();
}

uint64_t sub_1002C7A54()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002C7A80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100560AFC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100191178;
  return sub_1002C4E94();
}

id sub_1002C7B44()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(id *)(v0 + 72);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
    objc_msgSend(v3, "setMaxConcurrentOperationCount:", 1);
    v4 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_1002C7BC0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = static os_log_type_t.default.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v3 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Received request to attempt post-restore if necessary.", 54, 2, _swiftEmptyArrayStorage);

  v4 = OS_dispatch_queue.sync<A>(execute:)(&v9, sub_10004AAE0, a1, &type metadata for Bool);
  if (v9 == 1)
  {
    v5 = static os_log_type_t.default.getter(v4);
    v6 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v6, "Post-restore request has been processed already, and user might have been prompted already.", 91, 2, _swiftEmptyArrayStorage);

  }
  else
  {
    v7 = swift_allocObject(&unk_1004BE110, 24, 7);
    swift_weakInit(v7 + 16, a1);
    v8 = (_QWORD *)swift_allocObject(&unk_1004BE1D8, 40, 7);
    v8[2] = v7;
    v8[3] = UInt64.int64Representation.getter;
    v8[4] = 0;
    swift_retain(v7);
    sub_1000199A0((uint64_t)sub_10004AAA8, (uint64_t)v8);
    swift_release(v7);
    swift_release(v8);
  }
}

void sub_1002C7D3C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  void *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void **aBlock;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  void *v51;
  _QWORD *v52;

  v6 = v5;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v16 = __chkstk_darwin(v15);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a2 == 1)
    {
      v20 = static os_log_type_t.default.getter(v16);
      sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
      v21 = (uint64_t)a4;
      v22 = (void *)static OS_os_log.restore.getter();
      os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v22, "App needs to re-download most recent episodes first.", 52, 2, _swiftEmptyArrayStorage);

      v23 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v24 = String._bridgeToObjectiveC()();
      v51 = sub_1002C8B78;
      v52 = v6;
      aBlock = _NSConcreteStackBlock;
      v48 = 1107296256;
      v49 = sub_100027AF8;
      v50 = &unk_1004BE178;
      v25 = _Block_copy(&aBlock);
      v26 = a5;
      v27 = v52;
      swift_retain(v6);
      swift_release(v27);
      v28 = objc_msgSend(v23, "beginBackgroundTaskWithName:expirationHandler:", v24, v25);
      _Block_release(v25);

      v6[7] = v28;
      sub_1002C8664((uint64_t)v28, v21, v26);
    }
    else
    {
      v44 = v17;
      v45 = v16;
      v32 = swift_allocObject(&unk_1004BE0E8, 32, 7);
      *(_QWORD *)(v32 + 16) = a4;
      *(_QWORD *)(v32 + 24) = a5;
      sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
      sub_1002C8AE8(a1, a2, a3);
      v33 = swift_retain(a5);
      v43 = static OS_dispatch_queue.main.getter(v33);
      v34 = swift_allocObject(&unk_1004BE110, 24, 7);
      swift_weakInit(v34 + 16, v6);
      v35 = (_QWORD *)swift_allocObject(&unk_1004BE138, 64, 7);
      v35[2] = a1;
      v35[3] = v34;
      v35[4] = a2;
      v35[5] = a3;
      v35[6] = sub_1002C8AD4;
      v35[7] = v32;
      v51 = sub_1002C8B54;
      v52 = v35;
      aBlock = _NSConcreteStackBlock;
      v48 = 1107296256;
      v49 = sub_100027AF8;
      v50 = &unk_1004BE150;
      v36 = _Block_copy(&aBlock);
      v37 = v52;
      sub_1002C8AE8(a1, a2, a3);
      swift_retain(v32);
      v38 = swift_release(v37);
      static DispatchQoS.unspecified.getter(v38);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v39 = sub_10017F258();
      v40 = sub_10003F544((uint64_t *)&unk_10055B200);
      v41 = sub_100026534();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v12, v39);
      v42 = (void *)v43;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v14, v36);
      _Block_release(v36);
      swift_release(v32);

      sub_1002C8B64(a1, a2, a3);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v12);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
    }
  }
  else
  {
    v29 = static os_log_type_t.default.getter(v16);
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v30 = a4;
    v31 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)(v29, &_mh_execute_header, v31, "Post-restore is not needed.", 27, 2, _swiftEmptyArrayStorage);

    v30(1);
  }
}

void sub_1002C8188(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = static os_log_type_t.default.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v3 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Time given to kick off downloads restoration is up.", 51, 2, _swiftEmptyArrayStorage);

  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v4, "endBackgroundTask:", *(_QWORD *)(a1 + 56));

}

uint64_t sub_1002C8248(uint64_t a1, uint64_t a2, __int16 a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  void *v6;
  char v8;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a3 & 0x100) != 0)
  {
    v8 = a3;
    v11 = sub_100047858(a1, a2, a3);
    v12 = static os_log_type_t.error.getter(v11);
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v13 = (void *)static OS_os_log.restore.getter();
    v14 = sub_10003F544(&qword_1005559A0);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1003CA200;
    v16 = sub_10004A190();
    v17 = Error.localizedDescription.getter(&type metadata for RestoreRunnerError, v16);
    v19 = v18;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_10003E198();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v13, "Error occured during post-restore episode downloads run, error: %{public}s", 74, 2, v15);

    swift_bridgeObjectRelease(v15);
    a4(0);
    return sub_10004861C(a1, a2, v8, 1);
  }
  else
  {
    v5 = static os_log_type_t.default.getter(a1);
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v6 = (void *)static OS_os_log.restore.getter();
    os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v6, "Post-restore run has been completed successfully.", 49, 2, _swiftEmptyArrayStorage);

    return a4(1);
  }
}

uint64_t sub_1002C83F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  _BYTE v21[24];

  v11 = a2 + 16;
  v12 = static os_log_type_t.default.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v13 = (void *)static OS_os_log.restore.getter();
  v14 = sub_10003F544(&qword_1005559A0);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v15 + 56) = &type metadata for Int;
  *(_QWORD *)(v15 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 32) = a1;
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v13, "Number of episodes for post-restore download %d", v20);

  swift_bridgeObjectRelease(v15);
  swift_beginAccess(v11, v21, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v17 = result;
    v18 = *(_QWORD *)(result + 16);
    swift_unknownObjectRetain(v18);
    swift_release(v17);
    v19 = (_QWORD *)swift_allocObject(&unk_1004BE1B0, 48, 7);
    v19[2] = a3;
    v19[3] = a4;
    v19[4] = a5;
    v19[5] = a6;
    swift_retain(a4);
    swift_retain(a6);
    sub_1001C9A28(a1, (uint64_t)sub_1002C8BAC, (uint64_t)v19);
    swift_release(v19);
    return swift_unknownObjectRelease(v18);
  }
  return result;
}

uint64_t sub_1002C857C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v8 = a1;
  v9 = static os_log_type_t.default.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v10 = (void *)static OS_os_log.restore.getter();
  if ((v8 & 1) != 0)
  {
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "User decided to delete all remaining episodes in post-restore prompt.", 69, 2, _swiftEmptyArrayStorage);
    v11 = 0;
  }
  else
  {
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "User decided to download all remaining episodes in post-restore prompt.", 71, 2, _swiftEmptyArrayStorage);
    v11 = 1;
  }

  return a2(v11, a4, a5);
}

void sub_1002C8664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  objc_class *v11;
  char *v12;
  char *v13;
  uint64_t (**v14)(uint64_t, uint64_t, uint64_t);
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Class isa;
  uint64_t v22;
  objc_super v23;

  v4 = v3;
  v8 = static os_log_type_t.default.getter(a1);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Restore previously downloaded episodes.", 39, 2, _swiftEmptyArrayStorage);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1004BE098, 48, 7);
  *((_QWORD *)v10 + 2) = v4;
  *((_QWORD *)v10 + 3) = a2;
  *((_QWORD *)v10 + 4) = a3;
  *((_QWORD *)v10 + 5) = a1;
  v11 = (objc_class *)sub_10003F544(&qword_1005540C8);
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[*(_QWORD *)((swift_isaMask & *(_QWORD *)v12) + 0x180)];
  *(_QWORD *)v13 = 0;
  v13[8] = 2;
  v14 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v12[*(_QWORD *)((swift_isaMask & *(_QWORD *)v12) + 0x188)];
  *v14 = sub_1002C8A68;
  v14[1] = v10;
  v23.receiver = v12;
  v23.super_class = v11;
  swift_retain(v4);
  *(_QWORD *)&v15 = swift_retain(a3).n128_u64[0];
  v16 = objc_msgSendSuper2(&v23, "init", v15);
  v17 = sub_1002C7B44();
  v18 = sub_10003F544((uint64_t *)&unk_100553780);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1003CA250;
  *(_QWORD *)(v19 + 32) = v16;
  v22 = v19;
  specialized Array._endMutation()(v19);
  sub_100005EC8(0, &qword_1005540C0, NSOperation_ptr);
  v20 = v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  objc_msgSend(v17, "addOperations:waitUntilFinished:", isa, 0);

}

uint64_t sub_1002C8854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v10 = (_QWORD *)swift_allocObject(&unk_1004BE0C0, 40, 7);
  v10[2] = a5;
  v10[3] = a6;
  v10[4] = a7;
  swift_retain(a6);
  v12 = static os_log_type_t.default.getter(v11);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v13 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v13, "About to restore previously downloaded episodes.", 48, 2, _swiftEmptyArrayStorage);

  sub_100243270(0, (void (*)(uint64_t, uint64_t, _QWORD))sub_1002C8A98, (uint64_t)v10);
  return swift_release(v10);
}

void sub_1002C892C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t (*a4)(BOOL), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v7 = a4((a3 & 0x100) == 0);
  v8 = static os_log_type_t.default.getter(v7);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v9 = (void *)static OS_os_log.restore.getter();
  os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, v9, "Restore attempt has been processed.", 35, 2, _swiftEmptyArrayStorage);

  if (UIBackgroundTaskInvalid != a6)
  {
    v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v10, "endBackgroundTask:", a6);

  }
}

uint64_t sub_1002C8A24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1002C8A60()
{
  return sub_1002C8BC4(48);
}

uint64_t sub_1002C8A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1002C8854(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1002C8A74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002C8A98(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  sub_1002C892C(a1, a2, a3 & 0x1FF, *(uint64_t (**)(BOOL))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1002C8AB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C8AD4(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  return sub_1002C8248(a1, a2, a3 & 0x1FF, *(uint64_t (**)(uint64_t))(v3 + 16));
}

double sub_1002C8AE8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  double result;

  if (a2 >= 2)
    *(_QWORD *)&result = swift_retain(a3).n128_u64[0];
  return result;
}

uint64_t sub_1002C8AFC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C8B20()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002C8B54()
{
  uint64_t *v0;

  return sub_1002C83F8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1002C8B64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_release(a3);
  return result;
}

void sub_1002C8B78()
{
  uint64_t v0;

  sub_1002C8188(v0);
}

uint64_t sub_1002C8B80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002C8BAC(char a1)
{
  uint64_t v1;

  return sub_1002C857C(a1 & 1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1002C8BBC()
{
  return sub_1002C8BC4(40);
}

uint64_t sub_1002C8BC4(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1002C8BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002C8C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C8C30(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_100047BD0(result, a2, a3);
  else
    return sub_1002C8B64(result, a2, a3);
}

uint64_t sub_1002C8C3C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts28PlayNextPodcastContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002C8CA4()
{
  return type metadata accessor for PlayNextPodcastContextAction(0);
}

uint64_t type metadata accessor for PlayNextPodcastContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100560C70;
  if (!qword_100560C70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayNextPodcastContextAction);
  return result;
}

uint64_t sub_1002C8CE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002C8D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts28PlayNextPodcastContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002C8DB4()
{
  return 26;
}

uint64_t MTInlineNowPlayingIndicatorView.indicatorState.getter()
{
  void *v0;
  unint64_t v1;

  v1 = (unint64_t)objc_msgSend(v0, "playbackState");
  if (v1 >= 4)
    return 0;
  else
    return 0x3010200u >> (8 * v1);
}

id MTInlineNowPlayingIndicatorView.indicatorState.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setPlaybackState:", qword_1003D38C0[a1]);
}

id (*MTInlineNowPlayingIndicatorView.indicatorState.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  unint64_t v3;
  unsigned int v4;

  *(_QWORD *)a1 = v1;
  v3 = (unint64_t)objc_msgSend(v1, "playbackState");
  v4 = 0x3010200u >> (8 * v3);
  if (v3 >= 4)
    LOBYTE(v4) = 0;
  *(_BYTE *)(a1 + 8) = v4;
  return sub_1002C8E6C;
}

id sub_1002C8E6C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, "setPlaybackState:", qword_1003D38C0[*(char *)(a1 + 8)]);
}

id MTInlineNowPlayingIndicatorView.view.getter()
{
  void *v0;

  return v0;
}

id sub_1002C8E94()
{
  void *v0;

  return objc_msgSend(v0, "sizeThatFitsBarHeight:");
}

void (*sub_1002C8EA4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MTInlineNowPlayingIndicatorView.indicatorState.modify((uint64_t)v2);
  return sub_100179DD8;
}

uint64_t MTInlineNowPlayingIndicatorView.accessibilityIdentifier.getter()
{
  void *v0;
  Swift::String v1;
  unint64_t v2;
  unsigned int v3;
  Swift::String v4;
  char v6;
  _QWORD v7[2];

  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(75);
  v1._object = (void *)0x800000010043AC90;
  v1._countAndFlagsBits = 0xD000000000000048;
  String.append(_:)(v1);
  v2 = (unint64_t)objc_msgSend(v0, "playbackState");
  v3 = 0x3010200u >> (8 * v2);
  if (v2 >= 4)
    LOBYTE(v3) = 0;
  v6 = v3;
  _print_unlocked<A, B>(_:_:)(&v6, v7, &type metadata for NowPlayingIndicatorState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 93;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return v7[0];
}

uint64_t MTInlineNowPlayingIndicatorView.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

unint64_t sub_1002C9020()
{
  unint64_t result;
  unint64_t v1;

  result = qword_100560D68;
  if (!qword_100560D68)
  {
    v1 = sub_1002C9068();
    result = swift_getWitnessTable(&protocol conformance descriptor for MTInlineNowPlayingIndicatorView, v1);
    atomic_store(result, (unint64_t *)&qword_100560D68);
  }
  return result;
}

unint64_t sub_1002C9068()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005586D0;
  if (!qword_1005586D0)
  {
    v1 = objc_opt_self(MTInlineNowPlayingIndicatorView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005586D0);
  }
  return result;
}

uint64_t property wrapper backing initializer of PodcastsPlayerAdapter.playbackSpeedMenu(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10003F544(&qword_100560D70);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenu.getter(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1003D38E0, a2);
  v4 = swift_getKeyPath(&unk_1003D3908, v3);
  static Published.subscript.getter(&v6);
  swift_release(v4);
  swift_release(KeyPath);
  return v6;
}

uint64_t sub_1002C9158@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_1003D38E0, a1);
  v5 = swift_getKeyPath(&unk_1003D3908, v4);
  static Published.subscript.getter(&v7);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1002C91D8(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003D38E0, a2);
  v6 = swift_getKeyPath(&unk_1003D3908, v5);
  v9 = v2;
  v7 = v2;
  return static Published.subscript.setter(&v9, v3, KeyPath, v6);
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenu.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1003D38E0, a2);
  v6 = swift_getKeyPath(&unk_1003D3908, v5);
  v8 = a1;
  return static Published.subscript.setter(&v8, v2, KeyPath, v6);
}

void (*PodcastsPlayerAdapter.playbackSpeedMenu.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003D38E0, v4);
  v3[4] = KeyPath;
  v7 = swift_getKeyPath(&unk_1003D3908, v6);
  v3[5] = v7;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v7);
  return sub_1002C932C;
}

void sub_1002C932C(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t PodcastsPlayerAdapter.playbackSpeedMenuPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter__playbackSpeedMenu, v3, 33, 0);
  v1 = sub_10003F544(&qword_100560D80);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t PodcastsPlayerAdapter.$playbackSpeedMenu.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_10003F544(&qword_100560D88);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter__playbackSpeedMenu, v10, 33, 0);
  v7 = sub_10003F544(&qword_100560D80);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*PodcastsPlayerAdapter.$playbackSpeedMenu.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10003F544(&qword_100560D88);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter__playbackSpeedMenu;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10003F544(&qword_100560D80);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1002C9574;
}

void sub_1002C9574(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id PodcastsPlayerAdapter.playerPathCoordinator.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator);
}

id PodcastsPlayerAdapter.playbackPlayerPath.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "metadataPlayerPath");
}

id PodcastsPlayerAdapter.route.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "metadataPlayerPath");
  v2 = objc_msgSend(v1, "route");

  return v2;
}

void PodcastsPlayerAdapter.route.setter(void *a1)
{
  uint64_t v1;

  (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v1
                                                   + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator))
                    + 0xF0))();

}

void (*PodcastsPlayerAdapter.route.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator);
  a1[1] = v3;
  v4 = objc_msgSend(v3, "metadataPlayerPath");
  v5 = objc_msgSend(v4, "route");

  *a1 = v5;
  return sub_1002C9944;
}

void sub_1002C9944(uint64_t a1, char a2)
{
  void (*v2)(id);
  id v3;
  void *v4;
  id v5;

  v2 = *(void (**)(id))((swift_isaMask & **(_QWORD **)(a1 + 8)) + 0xF0);
  v5 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v5;
    v2(v5);

    v4 = v3;
  }
  else
  {
    v2(v5);
    v4 = v5;
  }

}

uint64_t PodcastsPlayerAdapter.playerID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t PodcastsPlayerAdapter.playerID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*PodcastsPlayerAdapter.playerID.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerID, a1, 33, 0);
  return j__swift_endAccess;
}

id PodcastsPlayerAdapter.avPlayer.getter()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "player");
  return v2;
}

id PodcastsPlayerAdapter.isHandoffEnabled.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "commandCenter");
  v3 = objc_msgSend(v2, "setPlaybackSessionCommand");

  v4 = objc_msgSend(v3, "isEnabled");
  return v4;
}

void PodcastsPlayerAdapter.isHandoffEnabled.setter(char a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v3 = objc_msgSend(v2, "player");

  v4 = objc_msgSend(v3, "commandCenter");
  v5 = objc_msgSend(v4, "setPlaybackSessionCommand");

  objc_msgSend(v5, "setEnabled:", a1 & 1);
}

void (*PodcastsPlayerAdapter.isHandoffEnabled.modify(uint64_t a1))(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = (void *)objc_opt_self(MTPlayerController);
  *(_QWORD *)a1 = v2;
  v3 = objc_msgSend(v2, "defaultInstance");
  v4 = objc_msgSend(v3, "player");

  v5 = objc_msgSend(v4, "commandCenter");
  v6 = objc_msgSend(v5, "setPlaybackSessionCommand");

  LOBYTE(v5) = objc_msgSend(v6, "isEnabled");
  *(_BYTE *)(a1 + 8) = (_BYTE)v5;
  return sub_1002C9D78;
}

void sub_1002C9D78(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = objc_msgSend(*(id *)a1, "defaultInstance");
  v3 = objc_msgSend(v2, "player");

  v4 = objc_msgSend(v3, "commandCenter");
  v5 = objc_msgSend(v4, "setPlaybackSessionCommand");

  objc_msgSend(v5, "setEnabled:", v1);
}

id PodcastsPlayerAdapter.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController], "endAutomaticResponseLoading");
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PodcastsPlayerAdapter(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t PodcastsPlayerAdapter.isTargetPlaying.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying, v3, 0, 0);
  return *v1;
}

void sub_1002CA044(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;
  id v6;
  uint64_t v7;
  NSString v8;
  _BYTE v9[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying, v9, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v7 = *(_QWORD *)(PlayerNotification_PlaystateDidChange.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v7);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v6, "postNotificationName:object:", v8, v1);

  }
}

uint64_t PodcastsPlayerAdapter.PlayerNotification_JumpDurationDidChange_String.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v0 = (uint64_t *)PlayerNotification_JumpDurationDidChange.unsafeMutableAddressor();
  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

id PodcastsPlayerAdapter.isLocal.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "playbackPlayerPath");
  v2 = objc_msgSend(v1, "route");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "isDeviceRoute");

  return v3;
}

id PodcastsPlayerAdapter.localPlaybackRequested.getter()
{
  return sub_1002CA230((SEL *)&selRef_isPlaybackRequested);
}

id PodcastsPlayerAdapter.localHasChapters.getter()
{
  return sub_1002CA230((SEL *)&selRef_hasChapters);
}

id sub_1002CA230(SEL *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v3 = objc_msgSend(v2, "player");

  v4 = objc_msgSend(v3, *a1);
  return v4;
}

uint64_t PodcastsPlayerAdapter.autoStopMode.getter()
{
  return sub_1002CDC2C();
}

void PodcastsPlayerAdapter.autoStopMode.setter(uint64_t a1, char a2)
{
  double v4;
  char v5;
  char v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v4 = COERCE_DOUBLE(sub_1002CDC2C());
  v6 = v5;
  v7 = (void *)objc_opt_self(MTPlayerController);
  v8 = objc_msgSend(v7, "defaultInstance");
  v9 = objc_msgSend(v8, "player");

  objc_msgSend(v9, "setAutoStop:", 0);
  v10 = objc_msgSend(v7, "defaultInstance");
  v11 = objc_msgSend(v10, "player");

  if ((a2 & 1) != 0)
  {
    objc_msgSend(v11, "setAutoStop:", qword_1003D39D0[a1]);

    v14 = objc_msgSend(v7, "defaultInstance");
    v13 = objc_msgSend(v14, "player");

    objc_msgSend(v13, "setAutoStopTimerTime:", 0.0);
  }
  else
  {
    objc_msgSend(v11, "setAutoStop:", 1);

    v12 = objc_msgSend(v7, "defaultInstance");
    v13 = objc_msgSend(v12, "player");

    objc_msgSend(v13, "setAutoStopTimerTime:", *(double *)&a1);
  }

  if ((v6 & 1) != 0)
    __asm { BR              X9 }
  if ((a2 & 1) != 0 || v4 != *(double *)&a1)
    sub_1002CCA50();
}

void (*PodcastsPlayerAdapter.autoStopMode.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = sub_1002CDC2C();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return sub_1002CA550;
}

void sub_1002CA550(uint64_t a1)
{
  PodcastsPlayerAdapter.autoStopMode.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

id PodcastsPlayerAdapter.localChapterIndex.getter()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "currentChapterIndexSwift");
  return v2;
}

uint64_t PodcastsPlayerAdapter.localChapterCount.getter()
{
  id v0;
  id v1;
  unint64_t v2;
  uint64_t result;
  char v4;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = (unint64_t)objc_msgSend(v1, "chapterCount");
  if ((v2 & 0x8000000000000000) == 0)
    return v2;
  v4 = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v4, 3451, 0);
  __break(1u);
  return result;
}

double PodcastsPlayerAdapter.localLoadedDuration.getter()
{
  return sub_1002CC9CC((SEL *)&selRef_loadedDuration);
}

double PodcastsPlayerAdapter.localTotalDuration.getter()
{
  return sub_1002CC9CC((SEL *)&selRef_duration);
}

id PodcastsPlayerAdapter.currentItemDescriptionHasHTML.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "currentItem");

  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "episode");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "itemDescriptionHasHTML");

    v1 = v3;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id PodcastsPlayerAdapter.currentItemIsLocal.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "currentItem");
  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "isLocal");

  return v3;
}

uint64_t PodcastsPlayerAdapter.explicitCharacter.getter()
{
  return ExplicitContentPresenter.symbol.getter();
}

float PodcastsPlayerAdapter.volume.getter()
{
  id v0;
  id v1;
  float v2;
  float v3;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  objc_msgSend(v1, "volume");
  v3 = v2;

  return v3;
}

void PodcastsPlayerAdapter.volume.setter(float a1)
{
  id v2;
  double v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v4 = objc_msgSend(v2, "player");

  *(float *)&v3 = a1;
  objc_msgSend(v4, "setVolume:", v3);

}

void (*PodcastsPlayerAdapter.volume.modify(uint64_t a1))(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  int v5;
  int v6;

  v2 = (void *)objc_opt_self(MTPlayerController);
  *(_QWORD *)a1 = v2;
  v3 = objc_msgSend(v2, "defaultInstance");
  v4 = objc_msgSend(v3, "player");

  objc_msgSend(v4, "volume");
  v6 = v5;

  *(_DWORD *)(a1 + 8) = v6;
  return sub_1002CA9EC;
}

void sub_1002CA9EC(uint64_t a1)
{
  int v1;
  id v2;
  double v3;
  id v4;

  v1 = *(_DWORD *)(a1 + 8);
  v2 = objc_msgSend(*(id *)a1, "defaultInstance");
  v4 = objc_msgSend(v2, "player");

  LODWORD(v3) = v1;
  objc_msgSend(v4, "setVolume:", v3);

}

id PodcastsPlayerAdapter.currentItem.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "currentItem");

  return v1;
}

uint64_t PodcastsPlayerAdapter.currentItemType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v25 - v8;
  v10 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v11 = objc_msgSend(v10, "currentItem");

  if (v11)
  {
    v12 = objc_msgSend(v11, "podcastUuid");
    if (v12)
    {
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v16 = v15;

      *a1 = v14;
      a1[1] = v16;
      v17 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
      swift_storeEnumTagMultiPayload(a1, v17, 0);
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
    }
    v20 = objc_msgSend((id)objc_opt_self(MTURLResolver), "podcastUrlForStoreId:", objc_msgSend(v11, "podcastStoreId"));
    if (v20)
    {
      v21 = v20;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v22(v3, v7, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        v22(v9, v3, v4);
        v22((char *)a1, v9, v4);
        v23 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
        swift_storeEnumTagMultiPayload(a1, v23, 1);
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 0, 1, v23);
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    sub_100007A28((uint64_t)v3, (uint64_t *)&unk_100553DC0);
    v24 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
  }
  else
  {
    v19 = type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
}

void PodcastsPlayerAdapter.infoCenterDataSourceQueue.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "infoCenter");
  v3 = objc_msgSend(v2, "dataSourceQueue");

  if (!v3)
    __break(1u);
}

id PodcastsPlayerAdapter.placeholderArtwork(for:)(double a1, double a2)
{
  uint64_t v4;
  id v5;
  id v6;

  v4 = sub_100005EC8(0, &qword_1005536C0, MTImageStore_ptr);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v4), "defaultStore");
  v6 = objc_msgSend(v5, "imageForKey:size:", kMTLibraryDefaultImageKey, a1, a2);

  return v6;
}

uint64_t PodcastsPlayerAdapter.isLocalVideo.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  unsigned __int8 v6;

  v1 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v2 = objc_msgSend(v1, "player");

  v3 = objc_msgSend(v2, "currentItem");
  if (v3)
  {
    if (objc_msgSend(v3, "isVideo")
      && (v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "playbackPlayerPath"), v5 = objc_msgSend(v4, "route"), v4, v5))
    {
      v6 = objc_msgSend(v5, "isDeviceRoute");

      if ((v6 & 1) != 0)
        return 1;
    }
    else
    {

    }
  }
  return 0;
}

id PodcastsPlayerAdapter.videoViewController.getter()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "videoViewController");
  return v2;
}

uint64_t PodcastsPlayerAdapter.presentationSize.getter()
{
  return sub_1002CDFC4();
}

void PodcastsPlayerAdapter.playPause(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v5;
  _BYTE v6[24];

  v5 = (_BYTE *)(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying, v6, 0, 0);
  if (*v5 == 1)
    PodcastsPlayerAdapter.pause(completion:)(a1, a2);
  else
    PodcastsPlayerAdapter.play(completion:)(a1, a2);
}

void PodcastsPlayerAdapter.play(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CB238(a1, a2, (SEL *)&selRef_play, (uint64_t)&unk_1004BE3D8, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE3F0);
}

void sub_1002CB1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = _convertErrorToNSError(_:)(a1);
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void PodcastsPlayerAdapter.pause(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CB238(a1, a2, (SEL *)&selRef_pause, (uint64_t)&unk_1004BE428, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE440);
}

void sub_1002CB238(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v13 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController), "response");
  v14 = objc_msgSend(v13, *a3);

  v15 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v16 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v19[4] = a5;
  v20 = v16;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100004B9C;
  v19[3] = a6;
  v17 = _Block_copy(v19);
  v18 = v20;
  sub_10002CA20(a1, a2);
  objc_msgSend(v15, "performRequest:options:completion:", v14, 0x10000, v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

}

Swift::Bool __swiftcall PodcastsPlayerAdapter.nextAvailable()()
{
  return sub_1002CB430((SEL *)&selRef_nextItem);
}

void PodcastsPlayerAdapter.next(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CB514(a1, a2, (SEL *)&selRef_nextItem, (uint64_t)&unk_1004BE478, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE490);
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.previousAvailable()()
{
  return sub_1002CB430((SEL *)&selRef_previousItem);
}

uint64_t sub_1002CB430(SEL *a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  id v5;
  id v6;
  id v7;

  result = (uint64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController), "response");
  if (result)
  {
    v4 = (void *)result;
    v5 = objc_msgSend((id)result, "tracklist");

    v6 = objc_msgSend(v5, "changeItemCommand");
    if (v6 && (v7 = objc_msgSend(v6, *a1), swift_unknownObjectRelease(v6), v7))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void PodcastsPlayerAdapter.previous(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CB514(a1, a2, (SEL *)&selRef_previousItem, (uint64_t)&unk_1004BE4C8, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE4E0);
}

void sub_1002CB514(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v13 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerRequestController), "response");
  if (v13
    && (v14 = v13,
        v15 = objc_msgSend(v13, "tracklist"),
        v14,
        v16 = objc_msgSend(v15, "changeItemCommand"),
        v15,
        v16))
  {
    v17 = objc_msgSend(v16, *a3);
    swift_unknownObjectRelease(v16);
  }
  else
  {
    v17 = 0;
  }
  v18 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v19 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  v22[4] = a5;
  v23 = v19;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100004B9C;
  v22[3] = a6;
  v20 = _Block_copy(v22);
  v21 = v23;
  sub_10002CA20(a1, a2);
  objc_msgSend(v18, "performRequest:options:completion:", v17, 0x10000, v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);

}

double PodcastsPlayerAdapter.jumpForwardsAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount, v3, 0, 0);
  return *(double *)v1;
}

void PodcastsPlayerAdapter.jumpForwardsAmount.setter(double a1)
{
  sub_1002CB864(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount, a1);
}

uint64_t (*PodcastsPlayerAdapter.jumpForwardsAmount.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1002CB748;
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.jumpForwardsAvailable()()
{
  return sub_1002CBF38(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount);
}

void PodcastsPlayerAdapter.jumpForwards(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CC00C(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount, (uint64_t)&unk_1004BE518, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE530);
}

double PodcastsPlayerAdapter.jumpBackwardsAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount, v3, 0, 0);
  return *(double *)v1;
}

void PodcastsPlayerAdapter.jumpBackwardsAmount.setter(double a1)
{
  sub_1002CB864(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount, a1);
}

void sub_1002CB864(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;
  double v5;
  id v6;
  uint64_t v7;
  NSString v8;
  _BYTE v9[24];

  v4 = (double *)(v2 + *a1);
  swift_beginAccess(v4, v9, 1, 0);
  v5 = *v4;
  *v4 = a2;
  if (v5 != a2)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v7 = *(_QWORD *)(PlayerNotification_JumpDurationDidChange.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v7);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v6, "postNotificationName:object:", v8, v2);

  }
}

uint64_t (*PodcastsPlayerAdapter.jumpBackwardsAmount.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1002CB748;
}

void sub_1002CB99C(uint64_t a1, char a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSString v10;

  v2 = *(_QWORD **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(double *)(v5 + v4);
  *(double *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    if (v6 != v3)
      goto LABEL_5;
  }
  else if (v6 != v3)
  {
LABEL_5:
    v7 = v2[4];
    v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v9 = *(_QWORD *)(PlayerNotification_JumpDurationDidChange.unsafeMutableAddressor() + 8);
    swift_bridgeObjectRetain(v9);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v8, "postNotificationName:object:", v10, v7);

  }
  free(v2);
}

Swift::String __swiftcall PodcastsPlayerAdapter.stringForSkipDuration(_:)(Swift::Double a1)
{
  void *v2;
  Class isa;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;
  uint64_t v11;
  unint64_t v12;

  v2 = (void *)objc_opt_self(NSString);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v4 = objc_msgSend(v2, "localizedStringWithNumber:", isa);

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v11 = 0;
    v12 = 0xE000000000000000;
    Double.write<A>(to:)(&v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
    v5 = v11;
    v7 = (void *)v12;
  }
  v8 = v5;
  v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t PodcastsPlayerAdapter.localizedStringForSkipForward.getter()
{
  uint64_t v0;
  double *v1;
  double v2;
  void *v3;
  Class isa;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  char v19[24];
  Swift::String v20;

  v1 = (double *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount, v19, 0, 0);
  v2 = *v1;
  v3 = (void *)objc_opt_self(NSString);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v5 = objc_msgSend(v3, "localizedStringWithNumber:", isa);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    Double.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v2);
    v6 = v17;
    v8 = v18;
  }
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0x2040252070696B53;
  v10._object = (void *)0xEB00000000636573;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v20);

  v13 = sub_10003F544(&qword_1005559A0);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_10003E198();
  *(_QWORD *)(v14 + 32) = v6;
  *(_QWORD *)(v14 + 40) = v8;
  v15 = String.init(format:_:)(v12._countAndFlagsBits, v12._object, v14);
  swift_bridgeObjectRelease(v12._object);
  return v15;
}

id sub_1002CBD14(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t PodcastsPlayerAdapter.localizedStringForSkipBackwards.getter()
{
  uint64_t v0;
  double *v1;
  double v2;
  void *v3;
  Class isa;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  char v19[24];
  Swift::String v20;

  v1 = (double *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount, v19, 0, 0);
  v2 = fabs(*v1);
  v3 = (void *)objc_opt_self(NSString);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v5 = objc_msgSend(v3, "localizedStringWithNumber:", isa);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    Double.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v2);
    v6 = v17;
    v8 = v18;
  }
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0x2520646E69776552;
  v10._object = (void *)0xED00006365732040;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v20);

  v13 = sub_10003F544(&qword_1005559A0);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1003CA200;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_10003E198();
  *(_QWORD *)(v14 + 32) = v6;
  *(_QWORD *)(v14 + 40) = v8;
  v15 = String.init(format:_:)(v12._countAndFlagsBits, v12._object, v14);
  swift_bridgeObjectRelease(v12._object);
  return v15;
}

Swift::Bool __swiftcall PodcastsPlayerAdapter.jumpBackwardsAvailable()()
{
  return sub_1002CBF38(&OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount);
}

uint64_t sub_1002CBF38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  id v5;
  double *v6;
  id v7;
  _BYTE v8[24];

  result = (uint64_t)sub_100023110();
  if (result)
  {
    v4 = (void *)result;
    v5 = objc_msgSend((id)result, "seekCommand");

    if (v5
      && (v6 = (double *)(v1 + *a1),
          swift_beginAccess(v6, v8, 0, 0),
          v7 = objc_msgSend(v5, "jumpByInterval:", *v6),
          swift_unknownObjectRelease(v5),
          v7))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void PodcastsPlayerAdapter.jumpBackwards(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1002CC00C(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount, (uint64_t)&unk_1004BE568, (uint64_t)sub_100198C7C, (uint64_t)&unk_1004BE580);
}

void sub_1002CC00C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v13;
  void *v14;
  id v15;
  double *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22[24];
  _QWORD aBlock[5];
  uint64_t v24;

  v13 = sub_100023110();
  if (v13
    && (v14 = v13, v15 = objc_msgSend(v13, "seekCommand"), v14, v15))
  {
    v16 = (double *)(v6 + *a3);
    swift_beginAccess(v16, v22, 0, 0);
    v17 = objc_msgSend(v15, "jumpByInterval:", *v16);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v19 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  aBlock[4] = a5;
  v24 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100004B9C;
  aBlock[3] = a6;
  v20 = _Block_copy(aBlock);
  v21 = v24;
  sub_10002CA20(a1, a2);
  objc_msgSend(v18, "performRequest:options:completion:", v17, 0x10000, v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);

}

uint64_t PodcastsPlayerAdapter.playbackSpeed(for:)(float a1)
{
  void *v2;
  double v3;
  id v4;

  v2 = (void *)objc_opt_self(IMAVPlayer);
  *(float *)&v3 = a1;
  v4 = objc_msgSend(v2, "playbackSpeedForRate:", v3);
  if ((unint64_t)v4 >= 6)
    return 1;
  else
    return (0x40205030001uLL >> (8 * v4));
}

uint64_t sub_1002CC264(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = sub_100023110();
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "playbackRateCommand");

      if (v7)
      {
        objc_msgSend(v7, "preferredPlaybackRate");
        swift_unknownObjectRelease(v7);
      }
    }
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1002CC480(void (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v7 = static PlayerPlaybackSpeed.allCases.getter();
  swift_retain(a4);
  v8 = (uint64_t)sub_1002CDACC(v7, a3);
  swift_bridgeObjectRelease(v7);
  swift_release(a4);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v12 = v8;
    else
      v12 = v8 & 0xFFFFFFFFFFFFFF8;
    v13 = sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v8);
    v10 = _bridgeCocoaArray<A>(_:)(v12, v13);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = swift_bridgeObjectRetain(v8);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
    v10 = v8;
  }
  swift_bridgeObjectRelease(v8);
  a1(v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1002CC590(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1004BE9E8, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v3(sub_1002CE7AC, v5, v6);
  swift_release(v2);
  return swift_release(v5);
}

void sub_1002CC600(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100005EC8(0, &qword_1005545A8, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

Swift::Bool __swiftcall PodcastsPlayerAdapter.playbackSpeedSupported()()
{
  id v0;
  id v1;

  v0 = sub_100023110();
  v1 = objc_msgSend(v0, "playbackRateCommand");

  if (v1)
    swift_unknownObjectRelease(v1);
  return v1 != 0;
}

uint64_t PodcastsPlayerAdapter.playbackSpeed.getter()
{
  id v0;
  void *v1;
  id v2;
  float v3;
  float v4;

  v0 = sub_100023110();
  if (!v0)
    return 1;
  v1 = v0;
  v2 = objc_msgSend(v0, "playbackRateCommand");

  if (!v2)
    return 1;
  objc_msgSend(v2, "preferredPlaybackRate");
  v4 = v3;
  swift_unknownObjectRelease(v2);
  if (v4 == 0.75)
    return 0;
  if (v4 == 1.0)
    return 1;
  if (v4 == 1.25)
    return 2;
  if (v4 == 1.5)
    return 3;
  if (v4 == 1.75)
    return 4;
  if (v4 != 2.0)
    return 1;
  return 5;
}

void PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(char a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  double v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v6 = sub_100023110();
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "playbackRateCommand");

    if (v8)
    {
      LODWORD(v9) = dword_1003D39F0[a1];
      v7 = objc_msgSend(v8, "setPlaybackRate:", v9);
      swift_unknownObjectRelease(v8);
    }
    else
    {
      v7 = 0;
    }
  }
  v10 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v11 = swift_allocObject(&unk_1004BE5B8, 32, 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v14[4] = sub_100198C7C;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100004B9C;
  v14[3] = &unk_1004BE5D0;
  v12 = _Block_copy(v14);
  v13 = v15;
  sub_10002CA20(a2, a3);
  swift_release(v13);
  objc_msgSend(v10, "performRequest:options:completion:", v7, 0x10000, v12);
  _Block_release(v12);

}

id PodcastsPlayerAdapter.volumeControlAvailable.getter()
{
  return sub_1002CC900((SEL *)&selRef_volumeControlAvailable);
}

id PodcastsPlayerAdapter.isPlayingVideoFullScreen.getter()
{
  return sub_1002CC900((SEL *)&selRef_isPlayingFullScreenVideo);
}

id sub_1002CC900(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v3 = objc_msgSend(v2, *a1);

  return v3;
}

Swift::Void __swiftcall PodcastsPlayerAdapter.increaseVolume()()
{
  sub_1002CC96C((SEL *)&selRef_increaseVolume);
}

Swift::Void __swiftcall PodcastsPlayerAdapter.decreaseVolume()()
{
  sub_1002CC96C((SEL *)&selRef_decreaseVolume);
}

void sub_1002CC96C(SEL *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  objc_msgSend(v2, *a1);

}

double PodcastsPlayerAdapter.autoStopTimeRemaining.getter()
{
  return sub_1002CC9CC((SEL *)&selRef_autoStopTimeRemaining);
}

double sub_1002CC9CC(SEL *a1)
{
  id v2;
  id v3;
  double v4;
  double v5;

  v2 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v3 = objc_msgSend(v2, "player");

  objc_msgSend(v3, *a1);
  v5 = v4;

  return v5;
}

uint64_t sub_1002CCA50()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1004BEA38, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_1002CE82C;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BEA50;
  v13 = _Block_copy(aBlock);
  v14 = v22;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10017F258();
  v18 = sub_10003F544((uint64_t *)&unk_10055B200);
  v19 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1002CCC28(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = *(_QWORD *)(PlayerNotification_AutoStopModeDidChange.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v2, "postNotificationName:object:", v4, a1);

}

void sub_1002CCD00()
{
  uint64_t v0;
  id v1;
  id v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  float v8;
  void *v9;
  id v10;
  float v11;
  float v12;
  id v13;
  id v14;
  id v15;
  float v16;
  float v17;
  id v18;
  id v19;
  id v20;
  float v21;
  float v22;
  char v23;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "playbackPlayerPath");
  v2 = objc_msgSend(v1, "route");

  if (v2)
  {
    v3 = objc_msgSend(v2, "isDeviceRoute");

    if (v3)
    {
      v4 = (void *)objc_opt_self(MTPlayerController);
      v5 = objc_msgSend(v4, "defaultInstance");
      v6 = objc_msgSend(v5, "player");

      LOBYTE(v5) = objc_msgSend(v6, "isSeeking");
      if ((v5 & 1) == 0)
      {
        v7 = sub_100023110();
        v8 = 1.0;
        if (v7)
        {
          v9 = v7;
          v10 = objc_msgSend(v7, "playbackRateCommand");

          if (v10)
          {
            objc_msgSend(v10, "preferredPlaybackRate");
            v12 = v11;
            swift_unknownObjectRelease(v10);
            v8 = 0.75;
            if (v12 != 0.75)
            {
              v8 = 1.0;
              if (v12 != 1.0)
              {
                v8 = 1.25;
                if (v12 != 1.25)
                {
                  v8 = 1.5;
                  if (v12 != 1.5)
                  {
                    v8 = 1.75;
                    if (v12 != 1.75)
                    {
                      v8 = 1.0;
                      if (v12 == 2.0)
                        v8 = 2.0;
                    }
                  }
                }
              }
            }
          }
        }
        v13 = objc_msgSend(v4, "defaultInstance");
        v14 = objc_msgSend(v13, "player");

        v15 = objc_msgSend(v14, "player");
        objc_msgSend(v15, "rate");
        v17 = v16;

        if (v8 != v17)
        {
          v18 = objc_msgSend(v4, "defaultInstance");
          v19 = objc_msgSend(v18, "player");

          v20 = objc_msgSend(v19, "player");
          objc_msgSend(v20, "rate");
          v22 = v21;

          if (v22 == 0.75)
          {
            v23 = 0;
          }
          else if (v22 == 1.0)
          {
            v23 = 1;
          }
          else if (v22 == 1.25)
          {
            v23 = 2;
          }
          else if (v22 == 1.5)
          {
            v23 = 3;
          }
          else if (v22 == 1.75)
          {
            v23 = 4;
          }
          else
          {
            if (v22 != 2.0)
              return;
            v23 = 5;
          }
          PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(v23, 0, 0);
        }
      }
    }
  }
}

void (*sub_1002CD020(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.route.modify(v2);
  return sub_100179A78;
}

void (*sub_1002CD064(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.isHandoffEnabled.modify((uint64_t)v2);
  return sub_100179A78;
}

id sub_1002CD0A0(uint64_t a1, uint64_t a2)
{
  return sub_1002CD0B8(a1, a2, (SEL *)&selRef_isPlaybackRequested);
}

id sub_1002CD0AC(uint64_t a1, uint64_t a2)
{
  return sub_1002CD0B8(a1, a2, (SEL *)&selRef_hasChapters);
}

id sub_1002CD0B8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v5 = objc_msgSend(v4, "player");

  v6 = objc_msgSend(v5, *a3);
  return v6;
}

double sub_1002CD134(uint64_t a1, uint64_t a2)
{
  return sub_1002CD208(a1, a2, (SEL *)&selRef_loadedDuration);
}

double sub_1002CD140(uint64_t a1, uint64_t a2)
{
  return sub_1002CD208(a1, a2, (SEL *)&selRef_duration);
}

void (*sub_1002CD14C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PodcastsPlayerAdapter.volume.modify((uint64_t)v2);
  return sub_100179A78;
}

uint64_t sub_1002CD18C(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1003D38E0, a2);
  v4 = swift_getKeyPath(&unk_1003D3908, v3);
  static Published.subscript.getter(&v6);
  swift_release(KeyPath);
  swift_release(v4);
  return v6;
}

double sub_1002CD1FC(uint64_t a1, uint64_t a2)
{
  return sub_1002CD208(a1, a2, (SEL *)&selRef_autoStopTimeRemaining);
}

double sub_1002CD208(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  double v6;
  double v7;

  v4 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v5 = objc_msgSend(v4, "player");

  objc_msgSend(v5, *a3);
  v7 = v6;

  return v7;
}

void sub_1002CD28C(uint64_t a1, char a2)
{
  PodcastsPlayerAdapter.autoStopMode.setter(a1, a2 & 1);
}

id sub_1002CD294()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "isPlayingFullScreenVideo");

  return v1;
}

id sub_1002CD2E8()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator), "playbackPlayerPath");
  v2 = objc_msgSend(v1, "route");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "isDeviceRoute");

  return v3;
}

uint64_t sub_1002CD36C()
{
  _QWORD *v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

double sub_1002CD3B4()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount;
  swift_beginAccess(v1, v3, 0, 0);
  return *(double *)v1;
}

double sub_1002CD3FC()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount;
  swift_beginAccess(v1, v3, 0, 0);
  return *(double *)v1;
}

uint64_t sub_1002CD444()
{
  id v0;
  float v1;
  void *v2;
  id v3;
  float v4;
  uint64_t result;

  v0 = sub_100023110();
  v1 = 0.0;
  if (v0)
  {
    v2 = v0;
    v3 = objc_msgSend(v0, "playbackRateCommand");

    if (v3)
    {
      objc_msgSend(v3, "preferredPlaybackRate");
      v1 = v4;
      swift_unknownObjectRelease(v3);
    }
  }
  LODWORD(result) = sub_1002CDBB4(v1);
  if (result == 6)
    return 1;
  else
    return result;
}

double sub_1002CD4C8()
{
  id v0;
  id v1;
  double v2;
  double v3;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  objc_msgSend(v1, "autoStopTimeRemaining");
  v3 = v2;

  return v3;
}

uint64_t sub_1002CD544()
{
  return PodcastsPlayerAdapter.localizedStringForSkipForward.getter();
}

uint64_t sub_1002CD564()
{
  return PodcastsPlayerAdapter.localizedStringForSkipBackwards.getter();
}

uint64_t sub_1002CD584@<X0>(uint64_t *a1@<X8>)
{
  return PodcastsPlayerAdapter.currentItemType.getter(a1);
}

void sub_1002CD598(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v5;
  _BYTE v6[24];

  v5 = (_BYTE *)(*v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  swift_beginAccess(v5, v6, 0, 0);
  if (*v5 == 1)
    PodcastsPlayerAdapter.pause(completion:)(a1, a2);
  else
    PodcastsPlayerAdapter.play(completion:)(a1, a2);
}

void sub_1002CD60C(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.play(completion:)(a1, a2);
}

void sub_1002CD62C(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.pause(completion:)(a1, a2);
}

BOOL sub_1002CD64C()
{
  return PodcastsPlayerAdapter.nextAvailable()();
}

void sub_1002CD670(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.next(completion:)(a1, a2);
}

BOOL sub_1002CD690()
{
  return PodcastsPlayerAdapter.previousAvailable()();
}

void sub_1002CD6B4(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.previous(completion:)(a1, a2);
}

uint64_t sub_1002CD6D4(uint64_t a1, uint64_t a2)
{
  return sub_1002CD70C(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpForwardsAmount);
}

void sub_1002CD6E0(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.jumpForwards(completion:)(a1, a2);
}

uint64_t sub_1002CD700(uint64_t a1, uint64_t a2)
{
  return sub_1002CD70C(a1, a2, &OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_jumpBackwardsAmount);
}

uint64_t sub_1002CD70C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  void *v7;
  id v8;
  double *v9;
  id v10;
  _BYTE v11[24];

  v5 = *v3;
  result = (uint64_t)sub_100023110();
  if (result)
  {
    v7 = (void *)result;
    v8 = objc_msgSend((id)result, "seekCommand");

    if (v8
      && (v9 = (double *)(v5 + *a3),
          swift_beginAccess(v9, v11, 0, 0),
          v10 = objc_msgSend(v8, "jumpByInterval:", *v9),
          swift_unknownObjectRelease(v8),
          v10))
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1002CD7C0(uint64_t a1, uint64_t a2)
{
  PodcastsPlayerAdapter.jumpBackwards(completion:)(a1, a2);
}

BOOL sub_1002CD7E0()
{
  id v0;
  id v1;

  v0 = sub_100023110();
  v1 = objc_msgSend(v0, "playbackRateCommand");

  if (v1)
    swift_unknownObjectRelease(v1);
  return v1 != 0;
}

void sub_1002CD834(char a1, uint64_t a2, uint64_t a3)
{
  PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(a1, a2, a3);
}

id sub_1002CD854()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "volumeControlAvailable");

  return v1;
}

void sub_1002CD8A8(uint64_t a1, uint64_t a2)
{
  sub_1002CD8C0(a1, a2, (SEL *)&selRef_increaseVolume);
}

void sub_1002CD8B4(uint64_t a1, uint64_t a2)
{
  sub_1002CD8C0(a1, a2, (SEL *)&selRef_decreaseVolume);
}

void sub_1002CD8C0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;

  v4 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  objc_msgSend(v4, *a3);

}

uint64_t PodcastsPlayerAdapter.controller(_:shouldRetryFailedRequestWithError:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t result;
  void *v9;

  v4 = objc_msgSend(a1, "request");
  v5 = objc_opt_self(MPCPlayerRequest);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
  {
    swift_unknownObjectRelease(v4);
    return 1;
  }
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_playerPathCoordinator);
  result = (uint64_t)objc_msgSend(v6, "playerPath");
  if (result)
  {
    v9 = (void *)result;
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v7) + 0x118))(result, a2);
    swift_unknownObjectRelease(v4);

    return 1;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002CDACC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    do
    {
      v7 = a2(*(unsigned __int8 *)(a1 + v4 + 31));
      if (v7)
      {
        v8 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v10 >= v9 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
        specialized Array._endMutation()(v6);
      }
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1002CDBB4(float a1)
{
  unsigned int v2;

  if (a1 == 0.75)
    return 0;
  if (a1 == 1.0)
    return 1;
  if (a1 == 1.25)
    return 2;
  if (a1 == 1.5)
    return 3;
  if (a1 == 2.0)
    v2 = 5;
  else
    v2 = 6;
  if (a1 == 1.75)
    return 4;
  else
    return v2;
}

uint64_t sub_1002CDC2C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v0 = (void *)objc_opt_self(MTPlayerController);
  v1 = objc_msgSend(v0, "defaultInstance");
  v2 = objc_msgSend(v1, "player");

  v3 = objc_msgSend(v2, "autoStop");
  v4 = objc_msgSend(v0, "defaultInstance");
  v5 = objc_msgSend(v4, "player");

  objc_msgSend(v5, "autoStopTimerTime");
  v7 = v6;

  switch((unint64_t)v3)
  {
    case 1uLL:
      result = v7;
      break;
    case 2uLL:
      result = 1;
      break;
    case 3uLL:
      result = 2;
      break;
    case 4uLL:
      result = 3;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t _s8Podcasts0A13PlayerAdapterC28currentItemPlainEpisodeNotesSSSgvg_0()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "currentItem");

  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "episode");
  if (!v2)
  {

    return 0;
  }
  v3 = v2;
  if (!objc_msgSend(v2, "itemDescriptionHasHTML"))
  {
    v4 = objc_msgSend(v3, "itemDescription");
    if (v4)
      goto LABEL_5;
    goto LABEL_8;
  }
  v4 = objc_msgSend(v3, "itemDescriptionWithoutHTML");
  if (!v4)
  {
LABEL_8:

    return 0;
  }
LABEL_5:
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v6;
}

id _s8Podcasts0A13PlayerAdapterC23currentItemEpisodeNotesSo18NSAttributedStringCSgvg_0()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "currentItem");

  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "episode");
  if (!v2)
  {
    v3 = v1;
    goto LABEL_8;
  }
  v3 = v2;
  v4 = sub_100005EC8(0, (unint64_t *)&unk_100560F90, &off_1004A4390);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v4), "sharedInstance");
  v6 = objc_msgSend(v5, "descriptionForEpisode:options:", v3, 48);

  if (!v6)
  {

    goto LABEL_8;
  }
  v7 = v6;
  v8 = objc_msgSend(v7, "length");

  if (!v8)
  {
    v3 = v7;
LABEL_8:

    return 0;
  }
  return v6;
}

uint64_t type metadata accessor for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1)
{
  return sub_10003EAF4(a1, qword_100560EB8, (uint64_t)&nominal type descriptor for PodcastsPlayerAdapter.CurrentItemType);
}

uint64_t sub_1002CDFC4()
{
  id v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v1 = objc_msgSend(v0, "player");

  v2 = objc_msgSend(v1, "player");
  v3 = objc_msgSend(v2, "currentItem");

  if (!v3)
    return 0;
  objc_msgSend(v3, "presentationSize");
  v5 = v4;

  return v5;
}

uint64_t _s8Podcasts0A13PlayerAdapterC22incrementPlaybackSpeed08playbackF012NowPlayingUI0beF0OAH_tF_0(char a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(IMAVPlayer), "incrementPlaybackSpeed:", qword_1003D3A08[a1]);
  if ((unint64_t)v1 >= 6)
    return 1;
  else
    return (0x40205030001uLL >> (8 * v1));
}

BOOL _s8Podcasts0A13PlayerAdapterC15autoStopEnabledSbyF_0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;

  v0 = (void *)objc_opt_self(MTPlayerController);
  v1 = objc_msgSend(v0, "defaultInstance");
  v2 = objc_msgSend(v1, "player");

  v3 = objc_msgSend(v2, "autoStop");
  if (v3 != (id)3)
  {
    v4 = objc_msgSend(v0, "defaultInstance");
    v5 = objc_msgSend(v4, "player");

    v6 = objc_msgSend(v5, "autoStop");
    if (v6 != (id)2)
    {
      v7 = objc_msgSend(v0, "defaultInstance");
      v8 = objc_msgSend(v7, "player");

      v9 = objc_msgSend(v8, "autoStop");
      if (v9 != (id)1)
        return 0;
    }
  }
  v10 = objc_msgSend(v0, "defaultInstance");
  v11 = objc_msgSend(v10, "player");

  objc_msgSend(v11, "autoStopTimeRemaining");
  v13 = v12;

  return v13 > 0.0;
}

uint64_t sub_1002CE2A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002CE2D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8Podcasts21PodcastsPlayerAdapter_isTargetPlaying);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

void sub_1002CE320(char *a1)
{
  sub_1002CA044(*a1);
}

uint64_t sub_1002CE344()
{
  return type metadata accessor for PodcastsPlayerAdapter(0);
}

uint64_t *initializeBufferWithCopyOfBuffer for PodcastsPlayerAdapter.CurrentItemType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for PodcastsPlayerAdapter.CurrentItemType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *initializeWithCopy for PodcastsPlayerAdapter.CurrentItemType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for PodcastsPlayerAdapter.CurrentItemType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_10022754C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *initializeWithTake for PodcastsPlayerAdapter.CurrentItemType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PodcastsPlayerAdapter.CurrentItemType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10022754C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002CE6B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1003D3988;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1002CE728()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002CE74C(uint64_t a1)
{
  uint64_t v1;

  sub_1002CB1C8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002CE754()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002CE778(char a1)
{
  uint64_t v1;

  return sub_1002CC264(a1, v1);
}

uint64_t sub_1002CE780()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002CE7A4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1002CC480(a1, a2, *(uint64_t (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1002CE7AC(uint64_t a1)
{
  uint64_t v1;

  sub_1002CC600(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002CE7B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1002CE7D8()
{
  uint64_t v0;

  PodcastsPlayerAdapter.setPlaybackSpeed(_:completion:)(*(_BYTE *)(v0 + 24), 0, 0);
}

uint64_t sub_1002CE808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002CE82C()
{
  uint64_t v0;

  sub_1002CCC28(*(_QWORD *)(v0 + 16));
}

ValueMetadata *type metadata accessor for PlayStationIntentImplementation()
{
  return &type metadata for PlayStationIntentImplementation;
}

void sub_1002CE89C(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void **__return_ptr, _OWORD *);
  void *v21;
  void (*v22)(__int128 *__return_ptr, _QWORD *);
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  id v50;
  _QWORD *v51;
  void *v52;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;
  _QWORD v56[5];
  void *v57;

  v7 = sub_10003F544(&qword_10055F1B8);
  __chkstk_darwin();
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "objectWithID:", a2);
  v11 = objc_opt_self(MTPlaylist);
  v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
  if (!v12)
  {

    v34 = sub_1002CF854();
    v35 = swift_allocError(&type metadata for PlayStationIntentImplementation.PlayStationError, v34, 0, 0);
    *v36 = 1;
    swift_willThrow(v35);
    return;
  }
  v13 = objc_msgSend(v12, "episodes");
  if (v13)
  {
    v50 = v10;
    v47 = a3;
    v48 = v3;
    v14 = v13;
    NSOrderedSet.makeIterator()();
    v49 = v14;

    v15 = &v9[*(int *)(sub_10003F544(&qword_10055F1C0) + 44)];
    *(_QWORD *)v15 = sub_100299B6C;
    *((_QWORD *)v15 + 1) = 0;
    v16 = &v9[*(int *)(sub_10003F544(&qword_10055F1C8) + 36)];
    *(_QWORD *)v16 = sub_100299C38;
    *((_QWORD *)v16 + 1) = 0;
    v17 = &v9[*(int *)(v7 + 44)];
    *(_QWORD *)v17 = sub_100299C48;
    *((_QWORD *)v17 + 1) = 0;
    v18 = type metadata accessor for NSFastEnumerationIterator(0);
    v19 = sub_100026844((unint64_t *)&qword_10055F1D0, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
    dispatch thunk of IteratorProtocol.next()(v56, v18, v19);
    v20 = *(void (**)(void **__return_ptr, _OWORD *))v15;
    sub_10000773C((uint64_t)v56, (uint64_t)&v54);
    if (v55)
    {
      v51 = _swiftEmptyArrayStorage;
      do
      {
        sub_10013B9CC(&v54, v53);
        v20(&v52, v53);
        v21 = v52;
        sub_10003D380(v53);
        v57 = v21;
        if (((*(uint64_t (**)(void **))v16)(&v57) & 1) != 0)
        {
          v22 = *(void (**)(__int128 *__return_ptr, _QWORD *))v17;
          v56[0] = v21;
          v22(&v54, v56);

          v23 = (void *)v54;
          v24 = objc_msgSend((id)v54, "uuid");
          if (v24)
          {
            v25 = v24;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            v45 = v27;
            v46 = v26;

            v28 = v51;
            if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
              v28 = sub_10027AE00(0, v28[2] + 1, 1, v28);
            v30 = v28[2];
            v29 = v28[3];
            v51 = v28;
            if (v30 >= v29 >> 1)
              v51 = sub_10027AE00((_QWORD *)(v29 > 1), v30 + 1, 1, v51);
            v31 = v51;
            v51[2] = v30 + 1;
            v32 = &v31[2 * v30];
            v33 = v45;
            v32[4] = v46;
            v32[5] = v33;
          }
          else
          {

          }
        }
        else
        {

        }
        dispatch thunk of IteratorProtocol.next()(v56, v18, v19);
        v20 = *(void (**)(void **__return_ptr, _OWORD *))v15;
        sub_10000773C((uint64_t)v56, (uint64_t)&v54);
      }
      while (v55);
    }
    else
    {
      v51 = _swiftEmptyArrayStorage;
    }
    sub_1002CF8DC((uint64_t)v9);

    v37 = v51;
    if (v51[2])
    {
      v38 = v51[4];
      v39 = v51[5];
      swift_bridgeObjectRetain(v39);

      swift_bridgeObjectRelease(v37);
      v40 = v47;
      *v47 = v38;
      v40[1] = v39;
      return;
    }
    swift_bridgeObjectRelease(v51);
    v10 = v50;
  }
  v41 = sub_1002CF854();
  v42 = swift_allocError(&type metadata for PlayStationIntentImplementation.PlayStationError, v41, 0, 0);
  *v43 = 2;
  swift_willThrow(v42);

}

uint64_t sub_1002CEC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100560FA0 + dword_100560FA0);
  v6 = (_QWORD *)swift_task_alloc(unk_100560FA4);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1001B8890;
  return v8(a2, a3);
}

uint64_t sub_1002CECD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_10003F544(&qword_10055B788);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10003F544(&qword_10055B790);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MediaIdentifier(0);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v2[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntent(0);
  v2[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[14] = v8;
  v2[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v2[16] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[17] = v10;
  v2[18] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StationEntity(0);
  v2[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[20] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v13);
  v2[22] = swift_task_alloc(v13);
  v14 = type metadata accessor for TaskPriority(0);
  v2[23] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[24] = v15;
  v2[25] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PlaybackController(0);
  v17 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v2[26] = v17;
  *v17 = v2;
  v17[1] = sub_1002CEE6C;
  return BaseObjectGraph.inject<A>(_:)(v2 + 4, v16, v16);
}

uint64_t sub_1002CEE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002CF650;
  else
    v3 = sub_1002CEED0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002CEED0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[28] = v0[4];
  v1 = sub_10003F544(&qword_10055E200);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[29] = v2;
  *v2 = v0;
  v2[1] = sub_1002CEF50;
  return BaseObjectGraph.inject<A>(_:)(v0 + 5, v1, v1);
}

uint64_t sub_1002CEF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002CF6E8;
  else
    v3 = sub_1002CEFB4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002CEFB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v3 = v2[5];
  v2[31] = v3;
  ObjectType = swift_getObjectType(v3, a2);
  j___sScTss5NeverORszABRs_rlE15currentPriorityScPvgZ();
  v5 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContextProvider.managedObjectContext(for:)[1]);
  v2[32] = v5;
  *v5 = v2;
  v5[1] = sub_1002CF034;
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v2[25], ObjectType);
}

uint64_t sub_1002CF034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = a1;
  swift_task_dealloc(v2);
  swift_unknownObjectRelease(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return swift_task_switch(sub_1002CF0B8, 0, 0);
}

uint64_t sub_1002CF0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_QWORD *)(v1 + 152);
  v4 = *(_QWORD *)(v1 + 160);
  v5 = PlayStationIntent.station.getter(a1);
  v6 = StationEntity.uuid.getter(v5);
  v8 = v7;
  *(_QWORD *)(v1 + 272) = v6;
  *(_QWORD *)(v1 + 280) = v7;
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v10 = v9(v2, v3);
  if (v8)
  {
    v11 = *(_QWORD *)(v1 + 168);
    v12 = *(_QWORD *)(v1 + 152);
    v13 = PlayStationIntent.station.getter(v10);
    v14 = (void *)StationEntity.objectID.getter(v13);
    *(_QWORD *)(v1 + 288) = v14;
    v9(v11, v12);
    if (v14)
    {
      v15 = *(void **)(v1 + 264);
      v17 = *(_QWORD *)(v1 + 136);
      v16 = *(_QWORD *)(v1 + 144);
      v18 = *(_QWORD *)(v1 + 128);
      v19 = swift_allocObject(&unk_1004BEAB0, 32, 7);
      *(_QWORD *)(v1 + 296) = v19;
      *(_QWORD *)(v19 + 16) = v15;
      *(_QWORD *)(v19 + 24) = v14;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v18);
      v20 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
      v21 = v15;
      v22 = v14;
      v23 = (_QWORD *)swift_task_alloc(v20);
      *(_QWORD *)(v1 + 304) = v23;
      *v23 = v1;
      v23[1] = sub_1002CF2C8;
      return NSManagedObjectContext.perform<A>(schedule:_:)(v1 + 16, *(_QWORD *)(v1 + 144), sub_1002CF8C4, v19, &type metadata for String);
    }
    swift_bridgeObjectRelease(v8);
  }
  v25 = *(void **)(v1 + 264);
  v26 = *(_QWORD *)(v1 + 224);
  v27 = sub_1002CF854();
  v28 = swift_allocError(&type metadata for PlayStationIntentImplementation.PlayStationError, v27, 0, 0);
  *v29 = 0;
  swift_willThrow(v28);

  swift_release(v26);
  v31 = *(_QWORD *)(v1 + 168);
  v30 = *(_QWORD *)(v1 + 176);
  v32 = *(_QWORD *)(v1 + 144);
  v33 = *(_QWORD *)(v1 + 120);
  v34 = *(_QWORD *)(v1 + 96);
  v36 = *(_QWORD *)(v1 + 64);
  v35 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 200));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1002CF2C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc(v3);
  v4 = v2[37];
  (*(void (**)(_QWORD, _QWORD))(v2[17] + 8))(v2[18], v2[16]);
  swift_release(v4);
  if (v0)
    v5 = sub_1002CF4B4;
  else
    v5 = sub_1002CF350;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002CF350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 272);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v2, enum case for MediaIdentifier.station(_:), v3);
  v8 = type metadata accessor for EpisodeListSettings(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = type metadata accessor for PodcastsMediaLibrary.MediaItem(0);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v11 = static Set<>.default.getter(v10);
  PlaybackIntent.init(id:listSettings:initialItem:options:)(v2, v4, v5, v11);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to PlaybackController.performIntent(_:)[1]);
  *(_QWORD *)(v0 + 320) = v12;
  *v12 = v0;
  v12[1] = sub_1002CF448;
  return PlaybackController.performIntent(_:)(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1002CF448(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  *(_QWORD *)(*(_QWORD *)v2 + 328) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1002CF788;
  }
  else
  {

    v5 = sub_1002CF570;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002CF4B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 224);

  swift_bridgeObjectRelease(v1);
  swift_release(v3);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CF570()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 64);

  swift_release(v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1002CF650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CF6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 224));
  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CF788()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 104);

  swift_release(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1002CF854()
{
  unint64_t result;

  result = qword_100560FB0;
  if (!qword_100560FB0)
  {
    result = swift_getWitnessTable(&unk_1003D3B3C, &type metadata for PlayStationIntentImplementation.PlayStationError);
    atomic_store(result, (unint64_t *)&qword_100560FB0);
  }
  return result;
}

uint64_t sub_1002CF898()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002CF8C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1002CE89C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1002CF8DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_10055F1B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for PlayStationIntentImplementation.PlayStationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002CF968 + 4 * byte_1003D3A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002CF99C + 4 * byte_1003D3A40[v4]))();
}

uint64_t sub_1002CF99C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CF9A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CF9ACLL);
  return result;
}

uint64_t sub_1002CF9B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CF9C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002CF9C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CF9CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayStationIntentImplementation.PlayStationError()
{
  return &type metadata for PlayStationIntentImplementation.PlayStationError;
}

unint64_t sub_1002CF9EC()
{
  unint64_t result;

  result = qword_100560FB8;
  if (!qword_100560FB8)
  {
    result = swift_getWitnessTable(&unk_1003D3B14, &type metadata for PlayStationIntentImplementation.PlayStationError);
    atomic_store(result, (unint64_t *)&qword_100560FB8);
  }
  return result;
}

id AccessAppDelegate.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessAppDelegate();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for AccessAppDelegate()
{
  return objc_opt_self(_TtC8Podcasts17AccessAppDelegate);
}

id AccessAppDelegate.__deallocating_deinit(uint64_t a1)
{
  return sub_1001C3784(a1, type metadata accessor for AccessAppDelegate);
}

id sub_1002CFAA8(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_1002CFAE4(uint64_t a1)
{
  return sub_1001C3784(a1, type metadata accessor for PlatformAppController);
}

uint64_t type metadata accessor for PlatformAppController()
{
  return objc_opt_self(_TtC8Podcasts21PlatformAppController);
}

uint64_t type metadata accessor for AppTraits_Mac()
{
  return objc_opt_self(_TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppTraits_Mac);
}

id sub_1002CFB60()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = v1;
  v4 = objc_msgSend(v2, "sharedApplication");
  v5 = objc_msgSend(v4, "delegate");

  if (v5)
  {
    if ((objc_msgSend(v5, "respondsToSelector:", "window") & 1) != 0)
      v6 = objc_msgSend(v5, "window");
    else
      v6 = 0;
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(v6, "rootViewController");

  return v7;
}

uint64_t sub_1002CFC84()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = v1;
  v4 = objc_msgSend(v2, "sharedApplication");
  v5 = objc_msgSend(v4, "delegate");

  if (v5)
  {
    if ((objc_msgSend(v5, "respondsToSelector:", "window") & 1) != 0)
      v6 = objc_msgSend(v5, "window");
    else
      v6 = 0;
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(v6, "rootViewController");

  result = 0;
  if (v7)
  {
    v9 = type metadata accessor for NowPlayingTabController(0);
    result = swift_dynamicCastClass(v7, v9);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void sub_1002CFF90(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  char *v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  int v58;
  unsigned __int8 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  _OWORD v83[2];
  Swift::String v84;

  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v81 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FlowDestinationPageHeader(0);
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  __chkstk_darwin();
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowPresentationContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v77 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v75 - v10;
  __chkstk_darwin();
  v76 = (char *)&v75 - v12;
  v13 = type metadata accessor for FlowDestination(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (uint64_t *)((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v18 = (uint64_t *)((char *)&v75 - v17);
  sub_100005EC8(0, (unint64_t *)&qword_100561290, UITraitCollection_ptr);
  if ((static UITraitCollection.interfaceIdiomIsMac.getter() & 1) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for FlowPresentationContext.showDetail(_:), v7);
    type metadata accessor for StationDetail(0);
    sub_1002DA298(a1, 0, 1, 1);
    if (v45)
    {
      v46 = v45;
      *v16 = v45;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FlowDestination.station(_:), v13);
      v47 = swift_retain();
      v48 = StationDetail.title.getter(v47);
      v50 = v49;
      v75 = v8;
      v76 = (char *)v7;
      v51 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 16);
      v52 = v77;
      v53 = v51(v77, v11, v7);
      v54 = static Link.Presentation.textFollowsTintColor.getter(v53);
      v55 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v56 = Link.Presentation.init(rawValue:)(0);
      v57 = Link.Presentation.init(rawValue:)(v56);
      if (Link.Presentation.init(rawValue:)(v57 & v54) != v54)
        v56 = Link.Presentation.init(rawValue:)(v56 | v54);
      v58 = Link.Presentation.init(rawValue:)(v56);
      v59 = Link.Presentation.init(rawValue:)(v58 & v55);
      v40 = v81;
      v60 = v48;
      if (v59 != v55)
        v56 = Link.Presentation.init(rawValue:)(v56 | v55);
      type metadata accessor for FlowAction(0);
      v61 = v80;
      v62 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v78 + 104))(v80, enum case for FlowDestinationPageHeader.standard(_:), v79);
      static ActionMetrics.notInstrumented.getter(v62);
      v63 = dispatch thunk of FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v16, 0, 0, v60, v50, v52, 0, v56, v61, v40);
      v64 = swift_release(v46);
      (*(void (**)(char *, char *, __n128))(v75 + 8))(v11, v76, v64);
      v65 = sub_10003F544((uint64_t *)&unk_100553780);
      v20 = 7;
      v66 = swift_allocObject(v65, 40, 7);
      *(_OWORD *)(v66 + 16) = xmmword_1003CA250;
      *(_QWORD *)(v66 + 32) = v63;
      *(_QWORD *)&v83[0] = v66;
      specialized Array._endMutation()(v66);
      v34 = v82;
      v44 = *(_QWORD **)&v83[0];
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v44 = _swiftEmptyArrayStorage;
    v20 = 7;
    goto LABEL_17;
  }
  type metadata accessor for StationDetail(0);
  sub_1002DA298(a1, 0, 0, 0);
  if (v19)
  {
    v20 = v19;
    if ((a2 & 1) != 0)
    {
      swift_retain();
      *v18 = StationDetail.uuid.getter(v21);
      v18[1] = v22;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v18, enum case for FlowDestination.stationSettings(_:), v13);
      v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v84._object = (void *)0xE000000000000000;
      v24._object = (void *)0x800000010043B2D0;
      v24._countAndFlagsBits = 0xD000000000000010;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v84._countAndFlagsBits = 0;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v84);

      v27 = v76;
      v28 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v76, enum case for FlowPresentationContext.presentModalFormSheet(_:), v7);
      v29 = static Link.Presentation.textFollowsTintColor.getter(v28);
      v30 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
      v31 = Link.Presentation.init(rawValue:)(0);
      v32 = Link.Presentation.init(rawValue:)(v31);
      if (Link.Presentation.init(rawValue:)(v32 & v29) != v29)
        v31 = Link.Presentation.init(rawValue:)(v31 | v29);
      v33 = Link.Presentation.init(rawValue:)(v31);
      if (Link.Presentation.init(rawValue:)(v33 & v30) != v30)
        v31 = Link.Presentation.init(rawValue:)(v31 | v30);
      v34 = v82;
      v35 = v80;
      v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v78 + 104))(v80, enum case for FlowDestinationPageHeader.standard(_:), v79);
      v37 = v81;
      static ActionMetrics.notInstrumented.getter(v36);
      v38 = type metadata accessor for FlowAction(0);
      swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
      v39 = v18;
      v40 = v37;
      v41 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v39, 0, 0, v26._countAndFlagsBits, v26._object, v27, 0, v31, v35, v37);
      v42 = sub_10003F544((uint64_t *)&unk_100553780);
      v43 = swift_allocObject(v42, 40, 7);
      *(_OWORD *)(v43 + 16) = xmmword_1003CA250;
      *(_QWORD *)(v43 + 32) = v41;
      *(_QWORD *)&v83[0] = v43;
      specialized Array._endMutation()(v43);
      v44 = *(_QWORD **)&v83[0];
      swift_release(v20);
      goto LABEL_18;
    }
    v44 = _swiftEmptyArrayStorage;
LABEL_17:
    v40 = v81;
    v34 = v82;
LABEL_18:
    sub_10013BE1C(v20);
    v67 = sub_100179264((uint64_t)v44);
    swift_bridgeObjectRelease(v44);
    v68 = Link.Presentation.init(rawValue:)(0);
    v69 = v68;
    static ActionMetrics.notInstrumented.getter(v68);
    v70 = type metadata accessor for TabChangeAction(0);
    swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
    LOBYTE(v74) = v69;
    v71 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v20, v67, 0, 0, 0, 0, v74, v40);
    memset(v83, 0, sizeof(v83));
    swift_retain();
    v73 = sub_1002D2584(v72, (uint64_t)v83, 0, v34, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
    swift_release(v71);
    swift_release(v73);
    sub_100175988(v20);
    sub_100007A28((uint64_t)v83, (uint64_t *)&unk_100552300);
    swift_release(v71);
    return;
  }
  __break(1u);
}

uint64_t sub_1002D0818()
{
  return sub_1002D0C10(8);
}

uint64_t sub_1002D0998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = v0;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A520(v0 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appTraits, (uint64_t)&v14);
  v4 = *((_QWORD *)&v15 + 1);
  v5 = v16;
  sub_10003A834(&v14, *((uint64_t *)&v15 + 1));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = Link.Presentation.init(rawValue:)(0);
  LOBYTE(v4) = v7;
  static ActionMetrics.notInstrumented.getter(v7);
  v8 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v13 = v4;
  v9 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v6, _swiftEmptyArrayStorage, 0, 0, 0, 0, v13, v3);
  sub_10003D380(&v14);
  v14 = 0u;
  v15 = 0u;
  swift_retain();
  v11 = sub_1002D2584(v10, (uint64_t)&v14, 0, v1, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
  swift_release(v11);
  sub_100007A28((uint64_t)&v14, (uint64_t *)&unk_100552300);
  return swift_release_n(v9, 2);
}

uint64_t sub_1002D0C08()
{
  return sub_1002D0C10(9);
}

uint64_t sub_1002D0C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[2];

  v3 = v1;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Link.Presentation.init(rawValue:)(0);
  v7 = v6;
  static ActionMetrics.notInstrumented.getter(v6);
  v8 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, a1, 0, 0, 0, 0, 0, v7, v5);
  memset(v13, 0, sizeof(v13));
  swift_retain();
  v11 = sub_1002D2584(v10, (uint64_t)v13, 0, v3, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
  swift_release(v11);
  sub_100007A28((uint64_t)v13, (uint64_t *)&unk_100552300);
  return swift_release_n(v9, 2);
}

uint64_t sub_1002D0FA0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v32 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v1 = (char *)&v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  __chkstk_darwin();
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTimeInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v30 = static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()(v30);
  *v8 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v5);
  + infix(_:_:)(v12, v8);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17 = v9;
  v16(v12, v9);
  v18 = swift_allocObject(&unk_1004BECC0, 24, 7);
  v19 = v31;
  *(_QWORD *)(v18 + 16) = v31;
  aBlock[4] = sub_1002D29A0;
  v37 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BECD8;
  v20 = _Block_copy(aBlock);
  v21 = v37;
  v22 = v19;
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_10003F544((uint64_t *)&unk_10055B200);
  v26 = sub_100026534();
  v27 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v32, v24);
  v28 = (void *)v30;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v4, v1, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v1, v27);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v34);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v17);
}

void sub_1002D1298(char *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v2 = *(void **)&a1[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate];
  v3 = (void *)objc_opt_self(UIApplication);
  v4 = v2;
  v5 = objc_msgSend(v3, "sharedApplication");
  v6 = objc_msgSend(v5, "delegate");

  if (v6)
  {
    if ((objc_msgSend(v6, "respondsToSelector:", "window") & 1) != 0)
      v7 = objc_msgSend(v6, "window");
    else
      v7 = 0;
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v7, "rootViewController");

  if (v8)
  {
    v9 = objc_msgSend(v8, "presentedViewController");

    if (v9)
    {
      ObjectType = swift_getObjectType(v9, v10);
      v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for UserAcknowledgementRequiring);
      if (v12)
        v13 = v12;
      else
        v13 = 0;
      if (v12)
        v14 = v9;
      else
        v14 = 0;
      if (v14)
      {
        v15 = static os_log_type_t.default.getter();
        sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
        v16 = (void *)static OS_os_log.iTunesMigration.getter();
        os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "Deferring presentation of migration screen until user acknowledgement received.", 79, 2, _swiftEmptyArrayStorage);

        v18 = swift_getObjectType(v14, v17);
        v19 = swift_allocObject(&unk_1004BED10, 24, 7);
        *(_QWORD *)(v19 + 16) = a1;
        v20 = a1;
        dispatch thunk of UserAcknowledgementRequiring.deferUntilAcknowledged(_:)(sub_1002D29CC, v19, v18, v13);

        swift_release(v19);
        return;
      }

    }
  }
  sub_1002D14EC();
}

void sub_1002D14EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for FlowPresentationContext(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v27[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FlowPresentationHints(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowDestination(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v27[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled) & 1) != 0)
  {
    v14 = static os_log_type_t.default.getter();
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v26 = (id)static OS_os_log.iTunesMigration.getter();
    os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v26, "Not showing migration screen, presentation has been cancelled.", 62, 2, _swiftEmptyArrayStorage);

  }
  else
  {
    *(_BYTE *)(v1
             + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled) = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for FlowDestination.migration(_:), v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FlowPresentationContext.presentModalCard(_:), v2);
    FlowPresentationHints.init(context:animate:)(v5, 2);
    v15 = static os_log_type_t.default.getter();
    sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
    v16 = (void *)static OS_os_log.iTunesMigration.getter();
    os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "Present migration screen.", 25, 2, _swiftEmptyArrayStorage);

    v17 = *(void **)(v1 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
    v18 = (void *)objc_opt_self(UIApplication);
    v19 = v17;
    v20 = objc_msgSend(v18, "sharedApplication");
    v21 = objc_msgSend(v20, "delegate");

    if (v21)
    {
      if ((objc_msgSend(v21, "respondsToSelector:", "window") & 1) != 0)
        v22 = objc_msgSend(v21, "window");
      else
        v22 = 0;
      swift_unknownObjectRelease(v21);
    }
    else
    {
      v22 = 0;
    }
    v23 = objc_msgSend(v22, "rootViewController");

    if (v23)
    {
      UIResponder.nearestFlowController.getter(v27);

      v24 = v28;
      if (v28)
      {
        v25 = v29;
        sub_10003A834(v27, v28);
        dispatch thunk of FlowController.show(destination:hints:referrer:)(v13, v9, 0, 0, v24, v25);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_10003D380(v27);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_100007A28((uint64_t)v27, &qword_100554570);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_1002D18A8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin();
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v37 - v11;
  v0[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_migrationPresentationCanceled] = 1;
  v13 = *(void **)&v0[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate];
  v14 = (void *)objc_opt_self(UIApplication);
  v15 = v13;
  v16 = objc_msgSend(v14, "sharedApplication");
  v17 = objc_msgSend(v16, "delegate");

  if (v17)
  {
    if ((objc_msgSend(v17, "respondsToSelector:", "window") & 1) != 0)
      v18 = objc_msgSend(v17, "window");
    else
      v18 = 0;
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(v18, "rootViewController");

  if (v19)
  {
    v44 = objc_msgSend(v19, "presentedViewController");

    if (v44)
    {
      v20 = type metadata accessor for MigrationViewController(0);
      v21 = swift_dynamicCastClass(v44, v20);
      if (v21)
      {
        v22 = v21;
        dispatch thunk of MigrationViewController.isAcknowledgementRequired.setter(0);
        v23 = static os_log_type_t.default.getter();
        sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
        v24 = (void *)static OS_os_log.iTunesMigration.getter();
        os_log(_:dso:log:_:_:)(v23, &_mh_execute_header, v24, "Dismiss migration screen.", 25, 2);

        sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
        v38 = static OS_dispatch_queue.main.getter(v25);
        static DispatchTime.now()(v38);
        + infix(_:_:)(v10, 2.0);
        v39 = *(void (**)(char *, uint64_t))(v8 + 8);
        v26 = v40;
        v39(v10, v40);
        v27 = swift_allocObject(&unk_1004BEC70, 32, 7);
        *(_QWORD *)(v27 + 16) = v1;
        *(_QWORD *)(v27 + 24) = v22;
        aBlock[4] = sub_1002D257C;
        v46 = v27;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100027AF8;
        aBlock[3] = &unk_1004BEC88;
        v28 = _Block_copy(aBlock);
        v29 = v46;
        v30 = v1;
        v31 = v44;
        swift_release(v29);
        static DispatchQoS.unspecified.getter(v32);
        aBlock[0] = _swiftEmptyArrayStorage;
        v33 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v34 = sub_10003F544((uint64_t *)&unk_10055B200);
        v35 = sub_100026534();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v2, v33);
        v36 = (void *)v38;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v7, v4, v28);
        _Block_release(v28);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
        v39(v12, v26);
      }
      else
      {

      }
    }
  }
}

double sub_1002D1CF4(uint64_t a1, void *a2)
{
  unsigned int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  double result;
  _QWORD v12[4];

  v4 = static Link.Presentation.textFollowsTintColor.getter(a1);
  v5 = Link.Presentation.init(rawValue:)(0);
  v6 = Link.Presentation.init(rawValue:)(v5);
  if (Link.Presentation.init(rawValue:)(v6 & v4) != v4)
    v5 = Link.Presentation.init(rawValue:)(v5 | v4);
  v7 = type metadata accessor for DismissAction(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = DismissAction.init(title:animationBehavior:presentationStyle:)(0, 0, 0, v5);
  v12[3] = type metadata accessor for MigrationViewController(0);
  v9 = objc_msgSend(a2, "view", a2);
  v10 = sub_1002D2584(v8, (uint64_t)v12, v9, a1, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (unint64_t *)&unk_100561270);

  swift_release(v10);
  sub_100007A28((uint64_t)v12, (uint64_t *)&unk_100552300);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_1002D1E40(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Class isa;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v3 = v2;
  v35 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin();
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  __chkstk_darwin();
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10003F544(&qword_100561268);
  v15 = type metadata accessor for UTType(0);
  v16 = swift_allocObject(v14, ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) | 7);
  *(_OWORD *)(v16 + 16) = xmmword_1003CA200;
  static UTType.folder.getter();
  v17 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v17, "initForOpeningContentTypes:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  objc_msgSend(v19, "setDelegate:", v3);
  objc_msgSend(v19, "setAllowsMultipleSelection:", 0);
  v20 = &v3[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection];
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection];
  v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection
                     + 8];
  *(_QWORD *)v20 = v35;
  *((_QWORD *)v20 + 1) = a2;
  swift_retain();
  sub_10002CA30(v21, v22);
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  static DispatchTime.now()(v24);
  v25 = swift_allocObject(&unk_1004BEC20, 32, 7);
  *(_QWORD *)(v25 + 16) = v3;
  *(_QWORD *)(v25 + 24) = v19;
  aBlock[4] = sub_1002D2574;
  v42 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BEC38;
  v26 = _Block_copy(aBlock);
  v27 = v42;
  v28 = v3;
  v29 = v19;
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  v31 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_10003F544((uint64_t *)&unk_10055B200);
  v33 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v5, v31);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v10, v7, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v13, v37);
}

void sub_1002D218C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  v4 = (void *)objc_opt_self(UIApplication);
  v5 = v3;
  v6 = objc_msgSend(v4, "sharedApplication");
  v7 = objc_msgSend(v6, "delegate");

  if (v7)
  {
    if ((objc_msgSend(v7, "respondsToSelector:", "window") & 1) != 0)
      v8 = objc_msgSend(v7, "window");
    else
      v8 = 0;
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v8, "rootViewController");

  if (v9)
  {
    objc_msgSend(v9, "presentViewController:animated:completion:", a2, 1, 0);

  }
}

void sub_1002D2330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSURL *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007A64(a1, (uint64_t)v5, (uint64_t *)&unk_100553DC0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    v9 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  (*(void (**)(uint64_t, void *))(a2 + 16))(a2, v9);

}

id sub_1002D24EC()
{
  return sub_1001C3784(0, type metadata accessor for AppController);
}

uint64_t sub_1002D2548()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002D2574()
{
  uint64_t v0;

  sub_1002D218C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_1002D257C()
{
  uint64_t v0;

  return sub_1002D1CF4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002D2584(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  Swift::String v46;
  __n128 v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[32];
  _QWORD v58[5];
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;

  v51 = a2;
  v52 = a3;
  v10 = type metadata accessor for ActionOutcome(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin();
  v54 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LogMessage.StringInterpolation(0);
  __chkstk_darwin();
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OSLogger(0);
  v53 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ActionMetricsBehavior(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin();
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5(0);
  v61 = sub_100026844(a6, a5, (uint64_t)&protocol conformance descriptor for Action);
  v59[0] = a1;
  v21 = OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate;
  v22 = *(void **)(a4 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appDelegate);
  swift_retain();
  v23 = v22;
  sub_1002C0430();
  v25 = v24;

  if (!v25)
    goto LABEL_5;
  v27 = (uint64_t *)(*(_QWORD *)(a4 + v21) + OBJC_IVAR____TtC8Podcasts11AppDelegate_urlActionRunner);
  v28 = *v27;
  if (!*v27)
  {
    swift_release(v25);
LABEL_5:
    static OSLogger.actions.getter(v26);
    v39 = sub_10003F544(&qword_100557CA8);
    v40 = type metadata accessor for LogMessage(0);
    v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) | 7);
    *(_OWORD *)(v41 + 16) = xmmword_1003CA200;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(44, 1);
    v42._object = (void *)0x800000010043A810;
    v42._countAndFlagsBits = 0xD000000000000012;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    v43 = v60;
    v44 = sub_10003A834(v59, v60);
    v58[3] = v43;
    v45 = sub_1000242A8(v58);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v45, v44, v43);
    LogMessage.StringInterpolation.appendInterpolation(sensitive:)(v58);
    sub_100007A28((uint64_t)v58, (uint64_t *)&unk_100552300);
    v46._countAndFlagsBits = 0xD00000000000001ALL;
    v46._object = (void *)0x8000000100437FF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    LogMessage.init(stringInterpolation:)(v13);
    Logger.error(_:)(v41, v14, &protocol witness table for OSLogger);
    v47 = swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v16, v14, v47);
    sub_10003F544((uint64_t *)&unk_100561280);
    v48 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, enum case for ActionOutcome.unsupported(_:), v56);
    v37 = Promise.__allocating_init(value:)(v48);
    goto LABEL_6;
  }
  v29 = v27[1];
  type metadata accessor for ActionRunnerOptions(0);
  swift_unknownObjectRetain(v28);
  v30 = swift_retain();
  v31 = BaseObjectGraph.__allocating_init(_:)(v30);
  sub_100007A64(v51, (uint64_t)v57, (uint64_t *)&unk_100552300);
  v32 = v52;
  v33 = v52;
  ActionOrigin.init(sender:view:)(v58, v57, v32);
  v34 = ActionRunnerOptions.withActionOrigin(_:)(v58);
  sub_100007A28((uint64_t)v58, (uint64_t *)&unk_100557CB0);
  swift_release(v31);
  ObjectType = swift_getObjectType(v28, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for ActionMetricsBehavior.fromAction(_:), v17);
  v37 = ActionRunner.perform(_:withMetrics:asPartOf:)(v59, v20, v34, ObjectType, v29);
  swift_release(v25);
  swift_unknownObjectRelease(v28);
  v38 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v38);
LABEL_6:
  sub_10003D380(v59);
  return v37;
}

void sub_1002D29A0()
{
  uint64_t v0;

  sub_1002D1298(*(char **)(v0 + 16));
}

uint64_t sub_1002D29A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002D29CC()
{
  sub_1002D14EC();
}

uint64_t sub_1002D29EC(uint64_t a1, NSString a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  Class isa;
  uint64_t v20;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v20 - v9;
  if (a2)
    a2 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(MTURLResolver), "searchUrlForSearchText:", a2);

  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

    v12 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v12(v4, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v12(v10, v4, v5);
      v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      v17 = sub_100138698((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_100026844(&qword_10055B800, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003C9B68);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v13, "openURL:options:completionHandler:", v16, isa, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  return sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
}

double sub_1002D2C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _OWORD v27[2];

  v1 = v0;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FlowDestinationPageHeader(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FlowPresentationContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FlowDestination(0);
  __chkstk_darwin();
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v14 + 104))(v13, enum case for FlowDestination.downloadingEpisodes(_:));
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FlowPresentationContext.infer(_:), v8);
  v16 = static Link.Presentation.textFollowsTintColor.getter(v15);
  v17 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v18 = Link.Presentation.init(rawValue:)(0);
  v19 = Link.Presentation.init(rawValue:)(v18);
  if (Link.Presentation.init(rawValue:)(v19 & v16) != v16)
    v18 = Link.Presentation.init(rawValue:)(v18 | v16);
  v20 = Link.Presentation.init(rawValue:)(v18);
  if (Link.Presentation.init(rawValue:)(v20 & v17) != v17)
    v18 = Link.Presentation.init(rawValue:)(v18 | v17);
  v21 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for FlowDestinationPageHeader.standard(_:), v4);
  static ActionMetrics.notInstrumented.getter(v21);
  v22 = type metadata accessor for FlowAction(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v13, 0, 0, 0, 0, v11, 0, v18, v7, v3);
  memset(v27, 0, sizeof(v27));
  swift_retain();
  v25 = sub_1002D2584(v24, (uint64_t)v27, 0, v1, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (unint64_t *)&qword_10055B7D0);
  swift_release(v23);
  swift_release(v25);
  sub_100007A28((uint64_t)v27, (uint64_t *)&unk_100552300);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_1002D2ED8(char *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  char *v27;
  int v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  void *v35;
  NSString v36;
  id v37;
  id v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, _QWORD, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  unint64_t v58;
  unint64_t v59;
  NSString v60;
  int v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t);
  id v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[2];

  v73 = a3;
  v70 = a5;
  LODWORD(v65) = a4;
  v71 = a2;
  v66 = a1;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowDestinationPageHeader(0);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  __chkstk_darwin();
  v69 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FlowPresentationContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for FlowDestination(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = (id)objc_opt_self(MTPlayerController);
  v19 = objc_msgSend(v64, "defaultInstance");
  objc_msgSend(v19, "dismissNowPlayingAnimated:completion:", 1, 0);

  if (v73)
  {
    v20 = v73;
    v65 = v12;
    v66 = v6;
    *(_QWORD *)v18 = v71;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v20;
    *((_QWORD *)v18 + 3) = 0;
    *((_QWORD *)v18 + 4) = 0;
    *((_QWORD *)v18 + 2) = 0;
    v18[40] = 1;
    *((_QWORD *)v18 + 6) = 0;
    v18[56] = 1;
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FlowDestination.episodeDetails(_:), v15);
    v63 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
    v63(v14, enum case for FlowPresentationContext.infer(_:), v9);
    swift_bridgeObjectRetain(v21);
    v23 = static Link.Presentation.textFollowsTintColor.getter(v22);
    v24 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
    v25 = Link.Presentation.init(rawValue:)(0);
    v26 = Link.Presentation.init(rawValue:)(v25);
    v27 = v14;
    if (Link.Presentation.init(rawValue:)(v26 & v23) != v23)
      v25 = Link.Presentation.init(rawValue:)(v25 | v23);
    v28 = Link.Presentation.init(rawValue:)(v25);
    if (Link.Presentation.init(rawValue:)(v28 & v24) != v24)
      v25 = Link.Presentation.init(rawValue:)(v25 | v24);
    v29 = v70;
    v30 = v69;
    v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v67 + 104))(v69, enum case for FlowDestinationPageHeader.standard(_:), v68);
    v6 = v66;
    static ActionMetrics.notInstrumented.getter(v31);
    v32 = type metadata accessor for FlowAction(0);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    v33 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v18, 0, 0, 0, 0, v27, 0, v25, v30, v6);
    if ((v29 & 1) != 0)
    {
      v35 = (void *)objc_opt_self(MTPlaybackQueueFactory);
      swift_retain();
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend(v35, "playEpisodeUuid:", v36);

      if (!v37)
      {
        swift_release_n(v33, 2);
        return;
      }
      v38 = objc_msgSend(v64, "defaultInstance");
      objc_msgSend(v38, "playManifest:reason:", v37, 3);

      v34 = swift_release(v33);
    }
    v39 = v72;
    v12 = v65;
    ((void (*)(char *, _QWORD, uint64_t, __n128))v63)(v65, enum case for FlowPresentationContext.showDetail(_:), v9, v34);
    goto LABEL_12;
  }
  v40 = (char)v65;
  v32 = type metadata accessor for FlowAction(0);
  v41 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v42 = v9;
  v41(v12, enum case for FlowPresentationContext.infer(_:), v9);
  v43 = v66;
  static ActionMetrics.notInstrumented.getter(v43);
  v44 = FlowAction.init(podcast:presentationContext:actionMetrics:)(v43, (uint64_t)v12, (uint64_t)v6);
  if (v44)
  {
    v33 = v44;
    v39 = v72;
    ((void (*)(char *, _QWORD, uint64_t, __n128))v41)(v12, enum case for FlowPresentationContext.showDetail(_:), v42, v45);
LABEL_12:
    v46 = swift_retain();
    dispatch thunk of FlowAction.presentationContext.setter(v12, v46);
    swift_release(v33);
    v47 = sub_10003F544(&qword_1005612A0);
    v48 = swift_allocObject(v47, 72, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1003CA200;
    type metadata accessor for FlowAction(0);
    *(_QWORD *)(v48 + 56) = v32;
    *(_QWORD *)(v48 + 64) = sub_100026844((unint64_t *)&qword_10055B7D0, (uint64_t (*)(uint64_t))&type metadata accessor for FlowAction, (uint64_t)&protocol conformance descriptor for Action);
    *(_QWORD *)(v48 + 32) = v33;
    swift_retain_n(v33, 2);
    v49 = Link.Presentation.init(rawValue:)(0);
    v50 = v49;
    static ActionMetrics.notInstrumented.getter(v49);
    v51 = type metadata accessor for TabChangeAction(0);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    LOBYTE(v61) = v50;
    v52 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, 7, v48, 0, 0, 0, 0, v61, v6);
    memset(v74, 0, sizeof(v74));
    swift_retain();
    v54 = sub_1002D2584(v53, (uint64_t)v74, 0, v39, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
    swift_release(v33);
    swift_release(v52);
    swift_release(v54);
    sub_100007A28((uint64_t)v74, (uint64_t *)&unk_100552300);
    swift_release(v33);
    swift_release(v52);
    return;
  }
  if ((v40 & 1) != 0)
  {
    v55 = objc_msgSend(objc_allocWithZone((Class)MTEpisodeUnavailableUtil), "init");
    v56 = objc_msgSend(v43, "title");
    if (v56)
    {
      v57 = v56;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

    }
    else
    {
      v59 = 0xE000000000000000;
    }
    v60 = String._bridgeToObjectiveC()();
    objc_msgSend(v55, "showDialogForReason:podcastTitle:completion:", 3, v60, 0, swift_bridgeObjectRelease(v59).n128_f64[0]);

  }
}

void sub_1002D3500()
{
  id v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    if ((objc_msgSend(v1, "respondsToSelector:", "window") & 1) != 0)
    {
      v2 = objc_msgSend(v1, "window");
      swift_unknownObjectRelease(v1);
      v1 = objc_msgSend(v2, "rootViewController");

    }
    else
    {
      swift_unknownObjectRelease(v1);
      v1 = 0;
    }
  }
  v3 = objc_msgSend(v1, "tabBarController");
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  v5 = objc_msgSend(v3, "selectedViewController");
  if (!v5)
  {

LABEL_10:
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "tabBarItem");

  if (v7)
  {
    objc_msgSend(v7, "tag");

  }
  else
  {
    __break(1u);
  }
}

double sub_1002D3674(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  double result;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = v2;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A520(v2 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_appTraits, (uint64_t)&v19);
  v8 = *((_QWORD *)&v20 + 1);
  v9 = v21;
  sub_10003A834(&v19, *((uint64_t *)&v20 + 1));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v11 = Link.Presentation.init(rawValue:)(0);
  LOBYTE(v8) = v11;
  static ActionMetrics.notInstrumented.getter(v11);
  v12 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v18 = v8;
  v13 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, v10, _swiftEmptyArrayStorage, a1, 0, 0, 0, v18, v7);
  sub_10003D380(&v19);
  v19 = 0u;
  v20 = 0u;
  swift_retain();
  v15 = sub_1002D2584(v14, (uint64_t)&v19, 0, v3, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
  swift_release(v15);
  sub_100007A28((uint64_t)&v19, (uint64_t *)&unk_100552300);
  v16 = swift_release(v13);
  if (a2)
    a2(v16);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_1002D3804(uint64_t a1, void (*a2)(__n128), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  double result;
  _OWORD v19[2];

  v6 = v4;
  type metadata accessor for ActionMetrics(0);
  __chkstk_darwin();
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Link.Presentation.init(rawValue:)(0);
  v12 = v11;
  static ActionMetrics.notInstrumented.getter(v11);
  v13 = type metadata accessor for TabChangeAction(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(0, 0, a4, 0, a1, 0, 0, 0, v12, v10);
  memset(v19, 0, sizeof(v19));
  swift_retain();
  v16 = sub_1002D2584(v15, (uint64_t)v19, 0, v6, (uint64_t (*)(uint64_t))&type metadata accessor for TabChangeAction, (unint64_t *)&unk_100560980);
  swift_release(v16);
  sub_100007A28((uint64_t)v19, (uint64_t *)&unk_100552300);
  v17 = swift_release(v14);
  if (a2)
    a2(v17);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

void sub_1002D3B8C(char a1, void *a2, uint64_t a3)
{
  id v6;
  double v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v6 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  if (a2)
  {
    v9[4] = a2;
    v10 = a3;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100027AF8;
    v9[3] = &unk_1004BED78;
    a2 = _Block_copy(v9);
    v8 = v10;
    swift_retain();
    *(_QWORD *)&v7 = swift_release(v8).n128_u64[0];
  }
  objc_msgSend(v6, "dismissNowPlayingAnimated:completion:", a1 & 1, a2, v7);
  _Block_release(a2);

}

uint64_t sub_1002D3C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, unint64_t, uint64_t);
  void (*v12)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (*v22)(char *, __n128);
  uint64_t v23;
  __n128 v24;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v26 - v5;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_100007A28((uint64_t)v6, (uint64_t *)&unk_100553DC0);
  }
  v11 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  v11(v6, a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
  v12 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v12(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_100007A28((uint64_t)v6, (uint64_t *)&unk_100553DC0);
  v26 = v12;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v13 = static os_log_type_t.default.getter();
  v27 = v1;
  v14 = v13;
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v15 = (void *)static OS_os_log.iTunesMigration.getter();
  v16 = sub_10003F544(&qword_1005559A0);
  v17 = swift_allocObject(v16, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1003CA200;
  v18 = URL.path.getter(v17);
  v20 = v19;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  *(_QWORD *)(v17 + 64) = sub_10003E198();
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v20;
  os_log(_:dso:log:_:_:)(v14, &_mh_execute_header, v15, "Picked library for importing %{public}s.", 40, 2, v17);

  v21 = swift_bridgeObjectRelease(v17);
  v22 = *(void (**)(char *, __n128))(v27
                                              + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection);
  if (v22)
  {
    v23 = *(_QWORD *)(v27
                    + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection
                    + 8);
    ((void (*)(char *, char *, uint64_t, __n128))v11)(v4, v10, v7, v21);
    v26(v4, 0, 1, v7);
    v24 = swift_retain();
    v22(v4, v24);
    sub_10002CA30((uint64_t)v22, v23);
    sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v21);
}

void sub_1002D3F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void (*v7)(char *, __n128);
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;

  v1 = v0;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = static os_log_type_t.default.getter();
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v5 = (void *)static OS_os_log.iTunesMigration.getter();
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "Cancel iTunes library picker.", 29, 2, _swiftEmptyArrayStorage);

  v6 = v1 + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection;
  v7 = *(void (**)(char *, __n128))(v1
                                             + OBJC_IVAR____TtC8PodcastsP33_9AAABDB1DF664191160F6CD588B99E9913AppController_onLibrarySelection);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 8);
    v9 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
    v10 = swift_retain();
    v7(v3, v10);
    sub_10002CA30((uint64_t)v7, v8);
    sub_100007A28((uint64_t)v3, (uint64_t *)&unk_100553DC0);
  }
}

uint64_t sub_1002D402C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002D4050(uint64_t a1)
{
  uint64_t v1;

  sub_1002D2330(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002D4084@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  id v17;
  unint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint8_t *v51;
  uint8_t *v52;
  NSObject *v53;
  uint8_t *v54;
  NSObject **v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  NSObject **v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v66 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v62 - v7;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint8_t *)type metadata accessor for CLSContextMetadata(0);
  v12 = *((_QWORD *)v11 - 1);
  __chkstk_darwin();
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1002D564C((uint64_t (*)(void))&ServerPodcastBase.id.getter);
  if ((v16 & 1) != 0
    || (v17 = objc_msgSend((id)objc_opt_self(MTStoreIdentifier), "isEmpty:", v15),
        (v17 & 1) != 0))
  {
    v18 = sub_100181038();
    static OS_os_log.classKit.getter(v18);
    v19 = v1;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v65 = v4;
      v24 = v23;
      *(_QWORD *)&v71[0] = v23;
      v25.n128_u64[0] = 136315138;
      v63 = v11;
      v64 = v12;
      *(_DWORD *)v22 = 136315138;
      v26 = ServerPodcastBase.id.getter(v25);
      v28 = v27;
      v67 = sub_10003D274(v26, v27, (uint64_t *)v71);
      v11 = v63;
      v12 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v22 + 4, v22 + 12);

      swift_bridgeObjectRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Show has empty or invalid store ID - %s", v22, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v6, v65);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v66 + 8))(v6, v4);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v12 + 56))(a1, 1, 1, v11);
  }
  v65 = v4;
  v29 = ServerPodcastBase.attributes.getter(v17);
  if (!v29 || (v30 = v29, v31 = PodcastAttributes.name.getter(), v33 = v32, v34 = swift_release(v30), !v33))
  {
    v46 = sub_100181038();
    static OS_os_log.classKit.getter(v46);
    v47 = v2;
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.debug.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v64 = v12;
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v62 = (NSObject **)swift_slowAlloc(8, -1);
      v63 = v50;
      *(_DWORD *)v50 = 138412290;
      v51 = v50 + 12;
      v52 = v50 + 4;
      *(_QWORD *)&v71[0] = v47;
      v53 = v47;
      v54 = v52;
      v12 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, (char *)v71 + 8, v54, v51);
      v55 = v62;
      *v62 = v47;

      v56 = v63;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Unable to find title for show - %@", v63, 0xCu);
      v57 = sub_10003F544((uint64_t *)&unk_100556480);
      swift_arrayDestroy(v55, 1, v57);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v56, -1, -1);
    }
    else
    {

      v48 = v47;
    }
    v58 = v65;
    v59 = v66;

    (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v12 + 56))(a1, 1, 1, v11);
  }
  v64 = v12;
  v66 = a1;
  v35 = ServerPodcastBase.id.getter(v34);
  v37 = v36;
  v72 = 0;
  memset(v71, 0, sizeof(v71));
  v14[40] = 1;
  *((_QWORD *)v14 + 6) = 0;
  v38 = v11;
  v39 = (uint64_t)&v14[*((int *)v11 + 9)];
  v40 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  v41 = (uint64_t (**)())&v14[*((int *)v38 + 10)];
  *v41 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v41[1] = 0;
  *(_QWORD *)&v14[*((int *)v38 + 11)] = 0;
  v63 = v38;
  v42 = *((int *)v38 + 12);
  *(_QWORD *)&v14[v42] = 0;
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = v35;
  *((_QWORD *)v14 + 2) = v37;
  *((_QWORD *)v14 + 3) = v31;
  *((_QWORD *)v14 + 4) = v33;
  sub_1002D5F74((uint64_t)v71, (uint64_t)&v67);
  v43 = v69;
  if (v69)
  {
    v44 = v70;
    sub_10003A834(&v67, v69);
    v45 = sub_1001F62CC(v43, v44);
    sub_100007A28((uint64_t)v71, &qword_100559AA8);
    sub_10003D380(&v67);
  }
  else
  {
    sub_100007A28((uint64_t)v71, &qword_100559AA8);
    sub_100007A28((uint64_t)&v67, &qword_100559AA8);
    v45 = 0;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v14[v42]);
  *(_QWORD *)&v14[v42] = v45;
  v14[40] = 0;
  sub_1002D4650((uint64_t)v10);
  sub_1001C99E0((uint64_t)v10, v39);
  swift_release(v41[1]);
  *v41 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v41[1] = 0;
  v61 = v66;
  sub_10014FDF8((uint64_t)v14, v66, type metadata accessor for CLSContextMetadata);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint8_t *))(v64 + 56))(v61, 0, 1, v63);
  return sub_10003F970((uint64_t)v14, type metadata accessor for CLSContextMetadata);
}

uint64_t sub_1002D4650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for URLComponents(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin();
  v10 = (char *)&v40 - v9;
  *((_QWORD *)v10 + 6) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v10[56] = 1;
  *(_WORD *)(v10 + 57) = 514;
  v11 = (char *)&v40 + *(int *)(v8 + 40) - v9;
  v12 = type metadata accessor for MetricsWidgetContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *((_QWORD *)v10 + 4) = sub_1002D564C((uint64_t (*)(void))&ServerPodcastBase.id.getter);
  v10[40] = v13 & 1;
  type metadata accessor for PodcastsURLScheme();
  sub_10014FDF8((uint64_t)v10, (uint64_t)v7, type metadata accessor for PodcastsURLEpisodeParameters);
  v14 = type metadata accessor for PodcastsURLShowCommand(0);
  v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  sub_1002D5FBC((uint64_t)v7, v15 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
  v16 = type metadata accessor for PodcastsURLNowPlayingCommand();
  if (!swift_dynamicCastClass(v15, v16))
  {
    v20 = type metadata accessor for PodcastsURLBrowseCommand();
    if (swift_dynamicCastClass(v15, v20))
    {
      swift_retain();
      URLComponents.init()(v21);
      URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
      v18 = 0x6573776F7262;
      v19 = 0xE600000000000000;
      goto LABEL_5;
    }
    v24 = type metadata accessor for PodcastsURLOpenCommand(0);
    v25 = swift_dynamicCastClass(v15, v24);
    if (v25)
    {
      v26 = v25;
      swift_retain();
      sub_100329BCC(v26, a1);
      goto LABEL_7;
    }
    v27 = swift_dynamicCastClass(v15, v14);
    if (v27)
    {
      v28 = v27;
      swift_retain();
      URLComponents.init()(v29);
      URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
      v30 = 2003789939;
    }
    else
    {
      v31 = type metadata accessor for PodcastsURLPlayCommand(0);
      v32 = swift_dynamicCastClass(v15, v31);
      if (!v32)
      {
        v36 = type metadata accessor for PodcastsURLShowAndPlayCommand(0);
        v37 = swift_dynamicCastClass(v15, v36);
        if (!v37)
        {
          v39 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 1, 1, v39);
          goto LABEL_8;
        }
        v28 = v37;
        swift_retain();
        URLComponents.init()(v38);
        URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
        v30 = 0x79616C70776F6873;
        v34 = 0xE800000000000000;
        goto LABEL_16;
      }
      v28 = v32;
      swift_retain();
      URLComponents.init()(v33);
      URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
      v30 = 2036427888;
    }
    v34 = 0xE400000000000000;
LABEL_16:
    URLComponents.host.setter(v30, v34);
    sub_10032AAE0(v28 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
    v22 = URLComponents.queryItems.setter(v35);
    goto LABEL_6;
  }
  swift_retain();
  URLComponents.init()(v17);
  URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
  v18 = 0x6979616C50776F6ELL;
  v19 = 0xEA0000000000676ELL;
LABEL_5:
  v22 = URLComponents.host.setter(v18, v19);
LABEL_6:
  URLComponents.url.getter(v22);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_7:
  swift_release(v15);
LABEL_8:
  swift_release(v15);
  return sub_10003F970((uint64_t)v10, type metadata accessor for PodcastsURLEpisodeParameters);
}

uint64_t sub_1002D4A20()
{
  return ServerPodcastBase.id.getter();
}

void sub_1002D4A40(uint64_t a1@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v2 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  if (!v2)
    goto LABEL_14;
  v3 = (void *)v2;
  v4 = (void *)PodcastEpisodeRelationships.podcast.getter();

  if (!v4)
    goto LABEL_14;
  v5 = PodcastRelationshipContainer.data.getter();

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v8 = v5;
    else
      v8 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v5);
    if (v9)
      goto LABEL_5;
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    swift_bridgeObjectRelease(v5);
LABEL_14:
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_8:
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)(a1 + 24) = type metadata accessor for ServerPodcastBase(0);
    *(_QWORD *)(a1 + 32) = &off_1004BEE18;
    *(_QWORD *)a1 = v7;
    return;
  }
  __break(1u);
}

void sub_1002D4B3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v0 = dispatch thunk of ServerPodcastEpisode.relationships.getter();
  if (v0)
  {
    v1 = (void *)v0;
    v2 = (void *)PodcastEpisodeRelationships.podcast.getter();

    if (v2)
    {
      v3 = PodcastRelationshipContainer.data.getter();

      if ((unint64_t)v3 >> 62)
      {
        if (v3 < 0)
          v5 = v3;
        else
          v5 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v6 = _CocoaArrayWrapper.endIndex.getter(v5);
        swift_bridgeObjectRelease(v3);
        if (!v6)
          goto LABEL_8;
      }
      else if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        swift_bridgeObjectRelease(v3);
        return;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
        goto LABEL_8;
      }
      if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v4 = *(id *)(v3 + 32);
        goto LABEL_8;
      }
      __break(1u);
    }
  }
}

uint64_t sub_1002D4C0C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  unint64_t v42;
  char *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (**v84)();
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t (**v97)();
  uint64_t v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE v111[16];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114[6];

  v2 = v1;
  v108 = a1;
  v3 = type metadata accessor for Logger(0);
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  __chkstk_darwin();
  v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v101 - v6;
  __chkstk_darwin();
  v103 = (char *)&v101 - v8;
  __chkstk_darwin();
  v104 = (char *)&v101 - v9;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for CLSContextMetadata(0);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin();
  v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544(&qword_1005522F0);
  __chkstk_darwin();
  v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1002D564C((uint64_t (*)(void))&ServerPodcastEpisode.id.getter);
  if ((v21 & 1) != 0
    || (objc_msgSend((id)objc_opt_self(MTStoreIdentifier), "isEmpty:", v20) & 1) != 0)
  {
    v22 = sub_100181038();
    static OS_os_log.classKit.getter(v22);
    v23 = v1;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.debug.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v114[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = ServerPodcastEpisode.id.getter(v27);
      v30 = v29;
      v110 = sub_10003D274(v28, v29, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v26 + 4, v26 + 12);

      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Episode has empty or invalid store ID - %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v5, v106);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v108, 1, 1, v109);
  }
  sub_1002D4B3C();
  v33 = v32;

  if (!v33)
  {
    v54 = sub_100181038();
    static OS_os_log.classKit.getter(v54);
    v55 = v1;
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.debug.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v114[0] = v59;
      *(_DWORD *)v58 = 136315138;
      v104 = (char *)(v58 + 4);
      v60 = v55;
      v61 = objc_msgSend(v60, "description");
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v64 = v63;

      v110 = sub_10003D274(v62, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v104, v58 + 12);

      swift_bridgeObjectRelease(v64);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Unable to find podcast for episode - %s", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v7, v106);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v108, 1, 1, v109);
  }
  v35 = ServerPodcastEpisode.attributes.getter(v34);
  v36 = PodcastEpisodeAttributes.name.getter();
  v38 = v37;
  swift_release(v35);
  if (!v38)
  {
    v65 = sub_100181038();
    v66 = v103;
    static OS_os_log.classKit.getter(v65);
    v67 = v2;
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.debug.getter(v68);
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(12, -1);
      v71 = swift_slowAlloc(32, -1);
      v114[0] = v71;
      *(_DWORD *)v70 = 136315138;
      v104 = (char *)(v70 + 4);
      v72 = v67;
      v73 = objc_msgSend(v72, "description");
      v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
      v76 = v75;

      v110 = sub_10003D274(v74, v76, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v104, v70 + 12);

      swift_bridgeObjectRelease(v76);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Unable to find title for episode - %s", v70, 0xCu);
      swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v66, v106);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v108, 1, 1, v109);
  }
  v40 = ServerPodcastEpisode.attributes.getter(v39);
  PodcastEpisodeAttributes.releaseDateResolved.getter();
  v41 = swift_release(v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v15, 1, v16, v41) == 1)
  {
    swift_bridgeObjectRelease(v38);
    sub_100007A28((uint64_t)v15, &qword_1005522F0);
    v42 = sub_100181038();
    v43 = v104;
    static OS_os_log.classKit.getter(v42);
    v44 = v2;
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.debug.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = swift_slowAlloc(32, -1);
      v114[0] = v48;
      *(_DWORD *)v47 = 136315138;
      v49 = v44;
      v50 = objc_msgSend(v49, "description");
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v53 = v52;

      v110 = sub_10003D274(v51, v53, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v47 + 4, v47 + 12);

      swift_bridgeObjectRelease(v53);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unable to resolve release date for episode - %s", v47, 0xCu);
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v105 + 8))(v43, v106);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v108, 1, 1, v109);
  }
  v77 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  v78 = ServerPodcastEpisode.id.getter(v77);
  v102 = v79;
  v103 = (char *)v78;
  sub_1002D4A40((uint64_t)v114);
  v13[40] = 1;
  *((_QWORD *)v13 + 6) = 0;
  v80 = (int *)v109;
  v81 = (uint64_t)&v13[*(int *)(v109 + 36)];
  v82 = type metadata accessor for URL(0);
  v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56);
  v106 = v81;
  v83(v81, 1, 1, v82);
  v84 = (uint64_t (**)())&v13[v80[10]];
  *v84 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v84[1] = 0;
  v85 = v80[11];
  v104 = (char *)v84;
  v105 = v85;
  *(_QWORD *)&v13[v85] = 0;
  v86 = v80[12];
  *(_QWORD *)&v13[v86] = 0;
  *(_QWORD *)v13 = 14;
  v87 = v102;
  *((_QWORD *)v13 + 1) = v103;
  *((_QWORD *)v13 + 2) = v87;
  *((_QWORD *)v13 + 3) = v36;
  *((_QWORD *)v13 + 4) = v38;
  sub_1002D5F74((uint64_t)v114, (uint64_t)&v110);
  v88 = v112;
  if (v112)
  {
    v89 = v113;
    sub_10003A834(&v110, v112);
    v90 = sub_1001F62CC(v88, v89);
    sub_100007A28((uint64_t)v114, &qword_100559AA8);
    sub_10003D380(&v110);
  }
  else
  {
    sub_100007A28((uint64_t)v114, &qword_100559AA8);
    sub_100007A28((uint64_t)&v110, &qword_100559AA8);
    v90 = 0;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v13[v86]);
  *(_QWORD *)&v13[v86] = v90;
  v92 = ServerPodcastEpisode.attributes.getter(v91);
  v93 = PodcastEpisodeAttributes.episodeNumber.getter();
  v95 = v94;
  swift_release(v92);
  if ((v95 & 1) != 0)
    v96 = 0;
  else
    v96 = v93;
  *((_QWORD *)v13 + 6) = v96;
  sub_1002D591C((uint64_t)v11);
  sub_1001C99E0((uint64_t)v11, v106);
  v97 = (uint64_t (**)())v104;
  swift_release(*((_QWORD *)v104 + 1));
  *v97 = variable initialization expression of MTNotificationSettingsPresentationController.activePresentedSettingsViewController;
  v97[1] = 0;
  v99 = Date.timeIntervalSince1970.getter(v98);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(double *)&v13[v105] = v99;
  v100 = v108;
  sub_10014FDF8((uint64_t)v13, v108, type metadata accessor for CLSContextMetadata);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v100, 0, 1, v109);
  return sub_10003F970((uint64_t)v13, type metadata accessor for CLSContextMetadata);
}

uint64_t sub_1002D564C(uint64_t (*a1)(void))
{
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];

  result = a1();
  v3 = v2;
  v4 = HIBYTE(v2) & 0xF;
  v5 = result & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if ((v3 & 0x1000000000000000) == 0)
  {
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v3);
      v8 = (uint64_t)sub_1002D60FC(v7, v5, 10);
      v10 = v9 & 1;
      goto LABEL_44;
    }
    v24[0] = result;
    v24[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v4)
        goto LABEL_57;
      if (v4 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v8 = (BYTE1(result) - 48);
      if (v4 != 2)
      {
        if ((BYTE2(result) - 48) > 9u)
          goto LABEL_31;
        v8 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        v11 = v4 - 3;
        if (v11)
        {
          v12 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            v13 = *v12 - 48;
            if (v13 > 9)
              goto LABEL_31;
            v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
              goto LABEL_31;
            v8 = v14 + v13;
            if (__OFADD__(v14, v13))
              goto LABEL_31;
            v10 = 0;
            ++v12;
            if (!--v11)
              goto LABEL_44;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v4)
        {
          if (v4 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v4 == 2)
            {
              v10 = 0;
              v8 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              v8 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              v19 = v4 - 3;
              if (!v19)
                goto LABEL_43;
              v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                v21 = *v20 - 48;
                if (v21 > 9)
                  break;
                v22 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
                  break;
                v8 = v22 - v21;
                if (__OFSUB__(v22, v21))
                  break;
                v10 = 0;
                ++v20;
                if (!--v19)
                  goto LABEL_44;
              }
            }
          }
LABEL_31:
          v8 = 0;
          v10 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v4 || (result - 48) > 9u)
        goto LABEL_31;
      v8 = (result - 48);
      if (v4 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_31;
        v8 = 10 * (result - 48) + (BYTE1(result) - 48);
        v15 = v4 - 2;
        if (v15)
        {
          v16 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            v17 = *v16 - 48;
            if (v17 > 9)
              goto LABEL_31;
            v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
              goto LABEL_31;
            v8 = v18 + v17;
            if (__OFADD__(v18, v17))
              goto LABEL_31;
            v10 = 0;
            ++v16;
            if (!--v15)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    v10 = 0;
    goto LABEL_44;
  }
  v8 = (uint64_t)sub_1002D6018(result, v3, 10);
  v10 = v23;
LABEL_44:
  swift_bridgeObjectRelease(v3);
  if ((v10 & 1) != 0)
    return 0;
  else
    return v8;
}

uint64_t sub_1002D591C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  v61 = a1;
  v60 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URLComponents(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin();
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  __chkstk_darwin();
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v58 - v12;
  sub_1002D4B3C();
  if (v14)
  {
    v15 = v14;
    v16 = sub_1002D564C((uint64_t (*)(void))&ServerPodcastBase.id.getter);
    v18 = v17;

    if ((v18 & 1) == 0)
    {
      *(_OWORD *)v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
      *(_WORD *)(v13 + 57) = 514;
      v19 = &v13[*(int *)(v9 + 40)];
      v20 = type metadata accessor for MetricsWidgetContext(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
      *((_QWORD *)v13 + 4) = v16;
      v13[40] = 0;
      *((_QWORD *)v13 + 6) = sub_1002D564C((uint64_t (*)(void))&ServerPodcastEpisode.id.getter);
      v13[56] = v21 & 1;
      type metadata accessor for PodcastsURLScheme();
      sub_10014FDF8((uint64_t)v13, (uint64_t)v11, type metadata accessor for PodcastsURLEpisodeParameters);
      v22 = type metadata accessor for PodcastsURLShowCommand(0);
      v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      sub_1002D5FBC((uint64_t)v11, v23 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
      v24 = type metadata accessor for PodcastsURLNowPlayingCommand();
      if (swift_dynamicCastClass(v23, v24))
      {
        swift_retain();
        URLComponents.init()(v25);
        URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
        v26 = 0x6979616C50776F6ELL;
        v27 = 0xEA0000000000676ELL;
LABEL_11:
        v41 = URLComponents.host.setter(v26, v27);
LABEL_12:
        URLComponents.url.getter(v41);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v59);
LABEL_13:
        swift_release(v23);
LABEL_14:
        swift_release(v23);
        return sub_10003F970((uint64_t)v13, type metadata accessor for PodcastsURLEpisodeParameters);
      }
      v39 = type metadata accessor for PodcastsURLBrowseCommand();
      if (swift_dynamicCastClass(v23, v39))
      {
        swift_retain();
        URLComponents.init()(v40);
        URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
        v26 = 0x6573776F7262;
        v27 = 0xE600000000000000;
        goto LABEL_11;
      }
      v42 = type metadata accessor for PodcastsURLOpenCommand(0);
      v43 = swift_dynamicCastClass(v23, v42);
      if (v43)
      {
        v44 = v43;
        swift_retain();
        sub_100329BCC(v44, v61);
        goto LABEL_13;
      }
      v45 = swift_dynamicCastClass(v23, v22);
      if (v45)
      {
        v46 = v45;
        swift_retain();
        URLComponents.init()(v47);
        URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
        v48 = 2003789939;
      }
      else
      {
        v49 = type metadata accessor for PodcastsURLPlayCommand(0);
        v50 = swift_dynamicCastClass(v23, v49);
        if (!v50)
        {
          v54 = type metadata accessor for PodcastsURLShowAndPlayCommand(0);
          v55 = swift_dynamicCastClass(v23, v54);
          if (!v55)
          {
            v57 = type metadata accessor for URL(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v61, 1, 1, v57);
            goto LABEL_14;
          }
          v46 = v55;
          swift_retain();
          URLComponents.init()(v56);
          URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
          v48 = 0x79616C70776F6873;
          v52 = 0xE800000000000000;
          goto LABEL_23;
        }
        v46 = v50;
        swift_retain();
        URLComponents.init()(v51);
        URLComponents.scheme.setter(0x7374736163646F70, 0xE800000000000000);
        v48 = 2036427888;
      }
      v52 = 0xE400000000000000;
LABEL_23:
      URLComponents.host.setter(v48, v52);
      sub_10032AAE0(v46 + OBJC_IVAR____TtC8Podcasts25PodcastsURLEpisodeCommand_episodeParameters);
      v41 = URLComponents.queryItems.setter(v53);
      goto LABEL_12;
    }
  }
  v28 = sub_100181038();
  static OS_os_log.classKit.getter(v28);
  v29 = v2;
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v63 = v33;
    *(_DWORD *)v32 = 136315138;
    v34 = ServerPodcastEpisode.id.getter();
    v36 = v35;
    v62 = sub_10003D274(v34, v35, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v32 + 4, v32 + 12);

    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unable to build share URL, unknown show for episode - %s", v32, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v60);
  v37 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v61, 1, 1, v37);
}

uint64_t sub_1002D5EBC()
{
  return ServerPodcastEpisode.id.getter();
}

void sub_1002D5EDC(uint64_t a1@<X8>)
{
  sub_1002D4A40(a1);
}

uint64_t sub_1002D5EFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t sub_1002D5F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_100559AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D5FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PodcastsURLEpisodeParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned __int8 *sub_1002D6000(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002D60FC(a1, a2, a3);
}

unsigned __int8 *sub_1002D6018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  v4 = swift_bridgeObjectRetain(a2);
  v5 = String.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v4);
  v7 = v5;
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1002D6378(v5, v6);
  v12 = v11;
  swift_bridgeObjectRelease(v8);
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v7, v8);
  }
LABEL_7:
  v13 = sub_1002D60FC(v9, v10, a3);
  swift_bridgeObjectRelease(v8);
  return v13;
}

unsigned __int8 *sub_1002D60FC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1002D6378(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_1002D63F4(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_1002D63F4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1002D6538(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_10003D760(v12, 0);
      v5 = sub_1002D6624((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_1002D6538(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1002D5EFC(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1002D5EFC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_1002D6624(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1002D5EFC(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1002D5EFC(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1002D6834(uint64_t a1)
{
  uint64_t v1;
  NSString v2;
  Class isa;
  void *v4;
  id v5;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  id v18;
  NSString v19;
  Class v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;
  Swift::String v30;

  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = a1;
  *(_QWORD *)(v1 + 16) = 0x7550726576726573;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone((Class)MTDynamicTypeConstant), "initWithDefaultConstant:textStyle:", UIFontTextStyleBody, 44.0);
  v2 = String._bridgeToObjectiveC()();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = (void *)objc_opt_self(MTSettingsGroup);
  v5 = objc_msgSend(v4, "groupWithTitle:footerText:settings:", v2, 0, isa);

  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v1 + 40) = v5;
  v6 = (void *)objc_opt_self(NSBundle);
  swift_retain_n(v1, 2);
  v7 = objc_msgSend(v6, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000029;
  v30._object = (void *)0xE000000000000000;
  v8._object = (void *)0x800000010043B3C0;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v30)._object;

  v11 = objc_allocWithZone((Class)NSAttributedString);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "initWithString:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

  v14 = sub_10003F544(&qword_1005547B0);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1003CA200;
  v16 = (void *)objc_opt_self(MTSetting);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "loadingSettingWithIdentifier:", v17);

  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v15 + 56) = sub_1002D735C();
  *(_QWORD *)(v15 + 32) = v18;
  v19 = String._bridgeToObjectiveC()();
  v20 = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v4, "groupWithTitle:footerText:settings:", v19, v13, v20, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if (v21)
  {
    v22 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v21;
    swift_release(v1);

    v23 = swift_allocObject(&unk_1004BEEC0, 24, 7);
    swift_weakInit(v23 + 16, v1);
    v24 = objc_msgSend(objc_allocWithZone((Class)IMFetchPushNotificationSettingsService), "init", swift_retain().n128_f64[0]);
    v25 = swift_allocObject(&unk_1004BEEE8, 32, 7);
    *(_QWORD *)(v25 + 16) = sub_1002D73BC;
    *(_QWORD *)(v25 + 24) = v23;
    aBlock[4] = sub_1002D73E8;
    v29 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E0DA8;
    aBlock[3] = &unk_1004BEF00;
    v26 = _Block_copy(aBlock);
    v27 = v29;
    swift_retain();
    swift_release(v27);
    objc_msgSend(v24, "performDataRequestWithCompletion:", v26);
    _Block_release(v26);
    swift_release_n(v23, 2);
    swift_release(v1);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1002D6C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    sub_1002D6C68(a1);
    return swift_release(v6);
  }
  return result;
}

void sub_1002D6C68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  NSString v15;
  Class isa;
  id v17;
  void *v18;
  NSString v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  __n128 v25;
  _BYTE v26[48];
  _QWORD v27[5];
  _BYTE v28[24];
  _BYTE v29[24];
  uint64_t v30;
  Swift::String v31;

  if (a1)
  {
    v3 = v1[11];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v3);
    sub_1002D707C(v4, a1);
    v6 = v5;
    swift_bridgeObjectRelease(v3);
    swift_release(v1);
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31._object = (void *)0xE000000000000000;
    v8._object = (void *)0x800000010043B3C0;
    v8._countAndFlagsBits = 0xD000000000000029;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v31._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v31)._object;

    v11 = objc_allocWithZone((Class)NSAttributedString);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithString:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

    v14 = sub_100178E10(v6);
    swift_bridgeObjectRelease(v6);
    v15 = String._bridgeToObjectiveC()();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v17 = objc_msgSend((id)objc_opt_self(MTSettingsGroup), "groupWithTitle:footerText:settings:", v15, v13, isa);

    if (v17)
    {
      swift_release(a1);
      v18 = (void *)v1[5];
      v1[5] = v17;
      goto LABEL_6;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v19 = String._bridgeToObjectiveC()();
  v20 = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend((id)objc_opt_self(MTSettingsGroup), "groupWithTitle:footerText:settings:", v19, 0, v20);

  if (!v21)
    goto LABEL_11;
  v18 = (void *)v1[5];
  v1[5] = v21;
LABEL_6:

  swift_beginAccess(v1 + 6, v28, 0, 0);
  sub_1001EA824((uint64_t)(v1 + 6), (uint64_t)v29);
  if (v30)
  {
    sub_10000A520((uint64_t)v29, (uint64_t)v27);
    sub_10020FF2C((uint64_t)v29);
    sub_10003A834(v27, v27[3]);
    v22 = sub_10003F544((uint64_t *)&unk_1005588B0);
    inited = swift_initStackObject(v22, v26);
    *(_OWORD *)(inited + 16) = xmmword_1003CA200;
    v24 = v1[3];
    *(_QWORD *)(inited + 32) = v1[2];
    *(_QWORD *)(inited + 40) = v24;
    v25 = swift_bridgeObjectRetain(v24);
    sub_1001A8AA4(inited, 100, v25);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for String);
    sub_10003D380(v27);
  }
  else
  {
    sub_10020FF2C((uint64_t)v29);
  }
}

uint64_t sub_1002D6F70(char a1, uint64_t a2, char a3)
{
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a3 & 1;
  swift_beginAccess(a2 + 16, v10, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a2 + 16));
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0x8000000000000000;
  sub_10021CB98(a1, v5, isUniquelyReferenced_nonNull_native);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v9;
  swift_bridgeObjectRelease(v7);
  swift_endAccess(v10);
  return sub_1002F49D0((uint64_t)UInt64.int64Representation.getter, 0);
}

uint64_t sub_1002D7010()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1002D7018()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  sub_10020FF2C(v0 + 48);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t _s17ServerPushSectionCMa()
{
  return objc_opt_self(_TtCC8Podcasts45MTNotificationSettingsSectionedViewController17ServerPushSection);
}

void sub_1002D707C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v5;
  uint64_t *v6;
  char v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  void *object;
  NSString v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;
  _QWORD *v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v31 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = (char *)(a1 + 32);
    v6 = (uint64_t *)(a2 + 16);
    v28 = (id)objc_opt_self(MTSetting);
    while (1)
    {
      v7 = *v5;
      v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      if ((v7 & 1) != 0)
      {
        v9 = 0xD00000000000002DLL;
        v27 = 0xE000000000000000;
        v10 = 0x800000010043B410;
      }
      else
      {
        v9 = 0xD000000000000030;
        v27 = 0xE000000000000000;
        v10 = 0x800000010043B440;
      }
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v12 = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, (NSBundle)v8, v11, *(Swift::String *)(&v27 + -8))._object;

      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      swift_beginAccess(a2 + 16, aBlock, 32, 0);
      v15 = *v6;
      if (!*(_QWORD *)(*v6 + 16))
        goto LABEL_9;
      v16 = sub_1001CD370(v7);
      if ((v17 & 1) != 0)
        v18 = *(unsigned __int8 *)(*(_QWORD *)(v15 + 56) + v16);
      else
LABEL_9:
        v18 = 0;
      swift_endAccess(aBlock);
      v19 = String._bridgeToObjectiveC()();
      v20 = swift_allocObject(&unk_1004BEE70, 25, 7);
      *(_QWORD *)(v20 + 16) = a2;
      *(_BYTE *)(v20 + 24) = v7;
      aBlock[4] = sub_1002D7350;
      v30 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001C290;
      aBlock[3] = &unk_1004BEE88;
      v21 = _Block_copy(aBlock);
      v22 = v30;
      swift_retain();
      swift_release(v22);
      v23 = objc_msgSend(v28, "switchSettingWithTitle:initialValue:identifier:changeHandler:", v14, v18, v19, v21);
      _Block_release(v21);

      if (!v23)
        break;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v25 = v31[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized ContiguousArray._endMutation()(v26);
      ++v5;
      if (!--v3)
        return;
    }
    __break(1u);
  }
}

uint64_t sub_1002D732C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002D7350(char a1)
{
  uint64_t v1;

  return sub_1002D6F70(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

unint64_t sub_1002D735C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100554908;
  if (!qword_100554908)
  {
    v1 = objc_opt_self(MTSetting);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100554908);
  }
  return result;
}

uint64_t sub_1002D7398()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D73BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D6C0C(a1, a2, v2);
}

uint64_t sub_1002D73C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D73E8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002F5978(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_1002D73F8(uint64_t a1, uint64_t a2)
{
  sub_1002D834C(a1, a2, (uint64_t)&unk_1004BF3F0, (uint64_t)sub_1002DA014, (uint64_t)&unk_1004BF408);
}

double sub_1002D7414(void *a1, void (*a2)(void), unint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  BOOL v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  double result;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  _QWORD *v44;
  id v45;
  void (*v46)(void);
  void *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[5];
  _QWORD *v52;

  type metadata accessor for CoreDataFetcher(0);
  v6 = objc_msgSend((id)objc_opt_self(MTPodcast), "predicateForSubscribedPodcasts");
  v7 = static CoreDataFetcher.fetchPodcasts(for:by:with:)();

  if (v7)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v7 >> 62)
      goto LABEL_41;
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    while (v9)
    {
      v46 = a2;
      v47 = a1;
      a2 = 0;
      v10 = v7 & 0xC000000000000001;
      v48 = a3;
      v49 = v7 + 32;
      v50 = v7;
      while (1)
      {
        v11 = v10
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v7)
            : *(id *)(v49 + 8 * (_QWORD)a2);
        v12 = v11;
        v13 = __OFADD__(a2, 1);
        a2 = (void (*)(void))((char *)a2 + 1);
        if (v13)
          break;
        v14 = objc_msgSend(v11, "episodes");
        if (v14)
        {
          v15 = v14;
          v16 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr);
          v17 = sub_10017F3E4();
          v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17);

          a3 = v18 & 0xC000000000000001;
          if ((v18 & 0xC000000000000001) != 0)
          {
            if (v18 < 0)
              v19 = v18;
            else
              v19 = v18 & 0xFFFFFFFFFFFFFF8;
            v20 = __CocoaSet.startIndex.getter(v19);
            v22 = v21;
            v23 = __CocoaSet.endIndex.getter(v19);
            v25 = static __CocoaSet.Index.== infix(_:_:)(v20, v22, v23, v24);
            swift_bridgeObjectRelease(v23);
            a1 = (void *)v20;
            if ((v25 & 1) == 0)
            {
LABEL_20:
              sub_100306B2C((uint64_t)a1, v22, a3 != 0, v18);
              v30 = v29;
              sub_1002D9F74((uint64_t)a1, v22, a3 != 0);

              swift_bridgeObjectRelease(v18);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
              v33 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              v32 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v33 >= v32 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
              v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
              specialized Array._endMutation()(v34);
              goto LABEL_37;
            }
          }
          else
          {
            v26 = *(_BYTE *)(v18 + 32);
            v20 = 1 << v26;
            v27 = *(_QWORD *)(v18 + 56);
            if (v27)
            {
              v28 = 0;
            }
            else
            {
              v35 = v26 & 0x3F;
              if (v35 < 7)
                goto LABEL_35;
              v27 = *(_QWORD *)(v18 + 64);
              if (v27)
              {
                v28 = 1;
              }
              else
              {
                if (v35 < 8)
                  goto LABEL_35;
                v27 = *(_QWORD *)(v18 + 72);
                if (!v27)
                {
                  v36 = 0;
                  v37 = (unint64_t)(v20 + 63) >> 6;
                  if (v37 <= 3)
                    v37 = 3;
                  v38 = v37 - 3;
                  while (v38 != v36)
                  {
                    v27 = *(_QWORD *)(v18 + 80 + 8 * v36++);
                    if (v27)
                    {
                      v28 = v36 + 2;
                      goto LABEL_19;
                    }
                  }
LABEL_35:
                  v22 = *(unsigned int *)(v18 + 36);
                  goto LABEL_36;
                }
                v28 = 2;
              }
            }
LABEL_19:
            a1 = (void *)(__clz(__rbit64(v27)) + (v28 << 6));
            v22 = *(unsigned int *)(v18 + 36);
            if (a1 != (void *)v20)
              goto LABEL_20;
          }
LABEL_36:
          sub_1002D9F74(v20, v22, a3 != 0);

          swift_bridgeObjectRelease(v18);
LABEL_37:
          v7 = v50;
          if (a2 == (void (*)(void))v9)
          {
LABEL_38:
            swift_bridgeObjectRelease(v7);
            v39 = (_QWORD *)aBlock[0];
            a1 = v47;
            a3 = v48;
            a2 = v46;
            goto LABEL_46;
          }
        }
        else
        {

          if (a2 == (void (*)(void))v9)
            goto LABEL_38;
        }
      }
      __break(1u);
LABEL_41:
      if (v7 >= 0)
        v41 = v8;
      else
        v41 = v7;
      swift_bridgeObjectRetain(v7);
      v9 = _CocoaArrayWrapper.endIndex.getter(v41);
    }
    swift_bridgeObjectRelease(v7);
    v39 = _swiftEmptyArrayStorage;
LABEL_46:
    swift_bridgeObjectRelease(v7);
    v42 = (_QWORD *)swift_allocObject(&unk_1004BF440, 48, 7);
    v42[2] = v39;
    v42[3] = a1;
    v42[4] = a2;
    v42[5] = a3;
    aBlock[4] = sub_1002DA224;
    v52 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BF458;
    v43 = _Block_copy(aBlock);
    v44 = v52;
    swift_bridgeObjectRetain(v39);
    v45 = a1;
    swift_retain();
    objc_msgSend(v45, "performBlock:", v43, swift_release(v44).n128_f64[0]);
    _Block_release(v43);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v39).n128_u64[0];
  }
  else
  {
    a2();
  }
  return result;
}

uint64_t _s34PostOneNotificationForEveryPodcastCMa()
{
  return objc_opt_self(_TtCC8Podcasts24MTNotificationTestAction34PostOneNotificationForEveryPodcast);
}

void sub_1002D7864(uint64_t a1, uint64_t a2)
{
  sub_1002D73F8(a1, a2);
}

void sub_1002D7884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kPodcastFeedChangedDate);
  v7 = v6;
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v11 = (void *)objc_opt_self(MTDB);
  v12 = objc_msgSend(v11, "sharedInstance", swift_retain().n128_f64[0]);
  v13 = objc_msgSend(v12, "mainOrPrivateContext", swift_release(v3).n128_f64[0]);

  v14 = (_QWORD *)swift_allocObject(&unk_1004BF350, 48, 7);
  v14[2] = v10;
  v14[3] = v13;
  v14[4] = a1;
  v14[5] = a2;
  v19[4] = sub_1002D9FD4;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100027AF8;
  v19[3] = &unk_1004BF368;
  v15 = _Block_copy(v19);
  v16 = v20;
  v17 = v10;
  v18 = v13;
  swift_retain();
  objc_msgSend(v18, "performBlock:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);

}

void sub_1002D7A2C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  type metadata accessor for CoreDataFetcher(0);
  v8 = objc_msgSend((id)objc_opt_self(MTPodcast), "predicateForSubscribedPodcasts");
  v9 = sub_10003F544((uint64_t *)&unk_100553780);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1003CA250;
  *(_QWORD *)(v10 + 32) = a1;
  aBlock[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = a1;
  v12 = static CoreDataFetcher.fetchPodcasts(for:by:with:)(v8, aBlock[0], a2);

  swift_bridgeObjectRelease(aBlock[0]);
  if (!v12)
    return;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 >= 0)
      v27 = v12 & 0xFFFFFFFFFFFFFF8;
    else
      v27 = v12;
    swift_bridgeObjectRetain(v12);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v12);
    if (v28)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v12);
    return;
  }
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_4:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
  }
  else
  {
    if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v13 = *(id *)(v12 + 32);
  }
  v29 = v13;
  v14 = objc_msgSend(v13, "episodes", swift_bridgeObjectRelease(v12).n128_f64[0]);
  if (v14
    && (v15 = v14,
        v16 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr),
        v17 = sub_10017F3E4(),
        v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17),
        v15,
        v19 = (void *)sub_10030627C(v18),
        swift_bridgeObjectRelease(v18),
        v19))
  {
    v20 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1003CA250;
    *(_QWORD *)(v20 + 32) = v19;
    aBlock[0] = v20;
    specialized Array._endMutation()(v20);
    v21 = aBlock[0];
    v22 = (_QWORD *)swift_allocObject(&unk_1004BF3A0, 48, 7);
    v22[2] = aBlock[0];
    v22[3] = a2;
    v22[4] = a3;
    v22[5] = a4;
    aBlock[4] = sub_1002DA224;
    v31 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BF3B8;
    v23 = _Block_copy(aBlock);
    v24 = v31;
    v25 = v19;
    swift_bridgeObjectRetain(v21);
    v26 = a2;
    swift_retain();
    objc_msgSend(v26, "performBlock:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);

    swift_bridgeObjectRelease(v21);
  }
  else
  {

  }
}

uint64_t _s22PostOldestNotificationCMa()
{
  return objc_opt_self(_TtCC8Podcasts24MTNotificationTestAction22PostOldestNotification);
}

void sub_1002D7D4C(uint64_t a1, uint64_t a2)
{
  sub_1002D7884(a1, a2);
}

void sub_1002D7D6C(uint64_t a1, uint64_t a2)
{
  sub_1002D834C(a1, a2, (uint64_t)&unk_1004BF2B0, (uint64_t)sub_1002D9F90, (uint64_t)&unk_1004BF2C8);
}

void sub_1002D7D88(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  _QWORD *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  _QWORD aBlock[5];
  _QWORD *v61;

  v6 = (void *)objc_opt_self(MTPodcast);
  v7 = objc_msgSend(v6, "predicateForSubscribedPodcasts");
  v8 = objc_msgSend(v6, "sortDescriptorsForRecentlyUpdatedAscending:", 0);
  if (!v8)
    goto LABEL_60;
  v9 = v8;
  type metadata accessor for CoreDataFetcher(0);
  v10 = sub_100005EC8(0, (unint64_t *)&qword_1005547A0, NSSortDescriptor_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = static CoreDataFetcher.fetchPodcasts(for:by:with:)(v7, v11, a1);
  swift_bridgeObjectRelease(v11);
  if (!v12)
    return;
  aBlock[0] = _swiftEmptyArrayStorage;
  v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v12 >> 62)
    goto LABEL_41;
  v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v12);
  while (v14)
  {
    v57 = a2;
    v58 = a1;
    v59 = a3;
    a3 = 0;
    while (1)
    {
      v15 = (v12 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a3, v12)
          : *(id *)(v12 + 32 + 8 * a3);
      v16 = v15;
      if (__OFADD__(a3++, 1))
        break;
      v18 = objc_msgSend(v15, "episodes");
      if (v18)
      {
        v19 = v18;
        v20 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr);
        v21 = sub_10017F3E4();
        v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v19, v20, v21);

        a1 = (void *)(v22 & 0xC000000000000001);
        if ((v22 & 0xC000000000000001) != 0)
        {
          if (v22 < 0)
            v23 = v22;
          else
            v23 = v22 & 0xFFFFFFFFFFFFFF8;
          v24 = __CocoaSet.startIndex.getter(v23);
          v26 = v25;
          v27 = __CocoaSet.endIndex.getter(v23);
          a2 = static __CocoaSet.Index.== infix(_:_:)(v24, v26, v27, v28);
          swift_bridgeObjectRelease(v27);
          v29 = v24;
          if ((a2 & 1) == 0)
          {
LABEL_22:
            a2 = a1 != 0;
            sub_100306B2C(v29, v26, a1 != 0, v22);
            v34 = v33;
            sub_1002D9F74(v29, v26, a1 != 0);

            swift_bridgeObjectRelease(v22);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
            v37 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v36 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v37 >= v36 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
            v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v34);
            specialized Array._endMutation()(v38);
            goto LABEL_7;
          }
          goto LABEL_38;
        }
        v30 = *(_BYTE *)(v22 + 32);
        v24 = 1 << v30;
        v31 = *(_QWORD *)(v22 + 56);
        if (v31)
        {
          v32 = 0;
LABEL_21:
          v29 = __clz(__rbit64(v31)) + (v32 << 6);
          v26 = *(unsigned int *)(v22 + 36);
          if (v29 != v24)
            goto LABEL_22;
        }
        else
        {
          v39 = v30 & 0x3F;
          if (v39 >= 7)
          {
            v31 = *(_QWORD *)(v22 + 64);
            if (v31)
            {
              v32 = 1;
              goto LABEL_21;
            }
            if (v39 >= 8)
            {
              v31 = *(_QWORD *)(v22 + 72);
              if (v31)
              {
                v32 = 2;
                goto LABEL_21;
              }
              v40 = 0;
              v41 = (unint64_t)(v24 + 63) >> 6;
              if (v41 <= 3)
                v41 = 3;
              v42 = v41 - 3;
              while (v42 != v40)
              {
                v31 = *(_QWORD *)(v22 + 80 + 8 * v40++);
                if (v31)
                {
                  v32 = v40 + 2;
                  goto LABEL_21;
                }
              }
            }
          }
          v26 = *(unsigned int *)(v22 + 36);
        }
LABEL_38:
        sub_1002D9F74(v24, v26, a1 != 0);

        swift_bridgeObjectRelease(v22);
        goto LABEL_7;
      }

LABEL_7:
      if (a3 == v14)
      {
        swift_bridgeObjectRelease(v12);
        v43 = aBlock[0];
        a1 = v58;
        a3 = v59;
        a2 = v57;
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_41:
    if (v12 >= 0)
      v44 = v13;
    else
      v44 = v12;
    swift_bridgeObjectRetain(v12);
    v14 = _CocoaArrayWrapper.endIndex.getter(v44);
  }
  swift_bridgeObjectRelease(v12);
  v43 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_46:
  swift_bridgeObjectRelease(v12);
  if (!((unint64_t)v43 >> 62))
  {
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_48;
LABEL_57:
    swift_bridgeObjectRelease(v43);
    return;
  }
  if (v43 < 0)
    v55 = v43;
  else
    v55 = v43 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v43);
  v56 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v43);
  if (!v56)
    goto LABEL_57;
LABEL_48:
  if ((v43 & 0xC000000000000001) != 0)
  {
    v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v43);
    goto LABEL_51;
  }
  if (!*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  v45 = *(id *)(v43 + 32);
LABEL_51:
  v46 = v45;
  swift_bridgeObjectRelease(v43);
  v47 = sub_10003F544((uint64_t *)&unk_100553780);
  v48 = swift_allocObject(v47, 40, 7);
  *(_OWORD *)(v48 + 16) = xmmword_1003CA250;
  *(_QWORD *)(v48 + 32) = v46;
  aBlock[0] = v48;
  specialized Array._endMutation()(v48);
  v49 = aBlock[0];
  v50 = (_QWORD *)swift_allocObject(&unk_1004BF300, 48, 7);
  v50[2] = aBlock[0];
  v50[3] = a1;
  v50[4] = a2;
  v50[5] = a3;
  aBlock[4] = sub_1002DA224;
  v61 = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF318;
  v51 = _Block_copy(aBlock);
  v52 = v61;
  v53 = v46;
  swift_bridgeObjectRetain(v49);
  v54 = a1;
  swift_retain();
  objc_msgSend(v54, "performBlock:", v51, swift_release(v52).n128_f64[0]);
  _Block_release(v51);

  swift_bridgeObjectRelease(v49);
}

uint64_t _s26PostMostRecentNotificationCMa()
{
  return objc_opt_self(_TtCC8Podcasts24MTNotificationTestAction26PostMostRecentNotification);
}

void sub_1002D8310(uint64_t a1, uint64_t a2)
{
  sub_1002D7D6C(a1, a2);
}

void sub_1002D8330(uint64_t a1, uint64_t a2)
{
  sub_1002D834C(a1, a2, (uint64_t)&unk_1004BF210, (uint64_t)sub_1002D9F64, (uint64_t)&unk_1004BF228);
}

void sub_1002D834C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  void *v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  v9 = v5;
  v12 = (void *)objc_opt_self(MTDB);
  v13 = objc_msgSend(v12, "sharedInstance", swift_retain().n128_f64[0]);
  v14 = objc_msgSend(v13, "mainOrPrivateContext", swift_release(v9).n128_f64[0]);

  v15 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v19[4] = a4;
  v20 = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100027AF8;
  v19[3] = a5;
  v16 = _Block_copy(v19);
  v17 = v20;
  v18 = v14;
  swift_retain();
  objc_msgSend(v18, "performBlock:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

}

void sub_1002D8480(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  type metadata accessor for CoreDataFetcher(0);
  v6 = objc_msgSend((id)objc_opt_self(MTPodcast), "predicateForSubscribedPodcasts");
  v7 = static CoreDataFetcher.fetchPodcasts(for:by:with:)(v6, _swiftEmptyArrayStorage, a1);

  if (!v7)
    return;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
LABEL_20:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 >= 0)
    v26 = v7 & 0xFFFFFFFFFFFFFF8;
  else
    v26 = v7;
  swift_bridgeObjectRetain(v7);
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v7);
  if (!v27)
    goto LABEL_20;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v7);
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_24:
    __break(1u);
    return;
  }
  if (!v8)
  {
    __break(1u);
    goto LABEL_20;
  }
LABEL_4:
  v9 = sub_1002D9A6C(v8);
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v9 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_8:
  v28 = v10;
  v11 = objc_msgSend(v10, "episodes", swift_bridgeObjectRelease(v7).n128_f64[0]);
  if (v11
    && (v12 = v11,
        v13 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr),
        v14 = sub_10017F3E4(),
        v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14),
        v12,
        v17 = (void *)sub_1002D9950(v16, v15),
        swift_bridgeObjectRelease(v15),
        v17))
  {
    v18 = sub_10003F544((uint64_t *)&unk_100553780);
    v19 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1003CA250;
    *(_QWORD *)(v19 + 32) = v17;
    aBlock[0] = v19;
    specialized Array._endMutation()(v19);
    v20 = aBlock[0];
    v21 = (_QWORD *)swift_allocObject(&unk_1004BF260, 48, 7);
    v21[2] = aBlock[0];
    v21[3] = a1;
    v21[4] = a2;
    v21[5] = a3;
    aBlock[4] = sub_1002DA224;
    v30 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BF278;
    v22 = _Block_copy(aBlock);
    v23 = v30;
    v24 = v17;
    swift_bridgeObjectRetain(v20);
    v25 = a1;
    swift_retain();
    objc_msgSend(v25, "performBlock:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);

    swift_bridgeObjectRelease(v20);
  }
  else
  {

  }
}

uint64_t _s22PostRandomNotificationCMa()
{
  return objc_opt_self(_TtCC8Podcasts24MTNotificationTestAction22PostRandomNotification);
}

void sub_1002D8788(uint64_t a1, uint64_t a2)
{
  sub_1002D8330(a1, a2);
}

double sub_1002D87A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  double result;

  v5 = type metadata accessor for MTNotificationTestActionEpisodePicker();
  v6 = (_QWORD *)swift_allocObject(v5, 48, 7);
  v6[4] = 0;
  v6[5] = &_swiftEmptySetSingleton;
  v6[2] = 0;
  v6[3] = 0;
  v7 = (_QWORD *)swift_allocObject(&unk_1004BEFB8, 40, 7);
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v2;
  swift_retain();
  swift_retain();
  sub_10029B12C(0x1000000000000010, 0x800000010043B6F0, 0, 1, (uint64_t)sub_1002D98B0, (uint64_t)v7);
  swift_release(v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1002D8870(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  id v20;
  __n128 v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[5];
  _QWORD *v40;

  v36 = a4;
  v35 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin();
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(type metadata accessor for DispatchTime(0) - 8);
  __chkstk_darwin();
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin();
  v18 = (char *)&v31 - v17;
  if (!*(_QWORD *)(a1 + 16))
    return a2(v16);
  v38 = v16;
  v33 = v10;
  v34 = v7;
  result = UIApp;
  if (UIApp)
  {
    v20 = objc_msgSend(UIApp, "beginBackgroundTaskWithExpirationHandler:", 0);
    sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
    v31 = static OS_dispatch_queue.main.getter(v21);
    static DispatchTime.now()(v31);
    + infix(_:_:)(v15, 0.5);
    v32 = *(void (**)(char *, uint64_t))(v13 + 8);
    v32(v15, v38);
    v22 = (_QWORD *)swift_allocObject(&unk_1004BEFE0, 56, 7);
    v22[2] = v36;
    v22[3] = a1;
    v22[4] = a2;
    v22[5] = a3;
    v22[6] = v20;
    aBlock[4] = sub_1002D98C0;
    v40 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BEFF8;
    v23 = _Block_copy(aBlock);
    v24 = v40;
    swift_retain();
    swift_bridgeObjectRetain(a1);
    swift_retain();
    swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_10017F258();
    v27 = sub_10003F544((uint64_t *)&unk_10055B200);
    v28 = sub_100026534();
    v29 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v35, v26);
    v30 = (void *)v31;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v12, v9, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v29);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v33);
    return ((uint64_t (*)(char *, uint64_t))v32)(v18, v38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D8B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  __n128 v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[5];
  _QWORD *v40;

  v32 = a3;
  v33 = a5;
  v34 = a1;
  v35 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  __chkstk_darwin();
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v31 - v16;
  result = UIApp;
  if (UIApp)
  {
    objc_msgSend(UIApp, "suspend");
    sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
    v20 = (void *)static OS_dispatch_queue.main.getter(v19);
    static DispatchTime.now()(v20);
    + infix(_:_:)(v15, 2.0);
    v31 = *(void (**)(char *, uint64_t))(v13 + 8);
    v31(v15, v12);
    v21 = (_QWORD *)swift_allocObject(&unk_1004BF030, 56, 7);
    v21[2] = v34;
    v21[3] = a2;
    v22 = v32;
    v32 = v12;
    v23 = a2;
    v24 = v35;
    v21[4] = v22;
    v21[5] = v24;
    v21[6] = v33;
    aBlock[4] = sub_1002D9904;
    v40 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027AF8;
    aBlock[3] = &unk_1004BF048;
    v25 = _Block_copy(aBlock);
    v26 = v40;
    swift_retain();
    swift_bridgeObjectRetain(v23);
    swift_retain();
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_10017F258();
    v29 = sub_10003F544((uint64_t *)&unk_10055B200);
    v30 = sub_100026534();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v6, v28);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v11, v8, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
    return ((uint64_t (*)(char *, uint64_t))v31)(v17, v32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002D8E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  _QWORD v18[5];
  _QWORD *v19;

  v10 = (_QWORD *)swift_allocObject(&unk_1004BF080, 40, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v11 = (void *)objc_opt_self(MTDB);
  swift_retain();
  v12 = objc_msgSend(v11, "sharedInstance", swift_retain().n128_f64[0]);
  v13 = objc_msgSend(v12, "mainOrPrivateContext", swift_release(a1).n128_f64[0]);

  v14 = (_QWORD *)swift_allocObject(&unk_1004BF0A8, 48, 7);
  v14[2] = a2;
  v14[3] = v13;
  v14[4] = sub_1002D9934;
  v14[5] = v10;
  v18[4] = sub_1002D9944;
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100027AF8;
  v18[3] = &unk_1004BF0C0;
  v15 = _Block_copy(v18);
  v16 = v19;
  swift_bridgeObjectRetain(a2);
  v17 = v13;
  swift_retain();
  objc_msgSend(v17, "performBlock:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  swift_release(v10);

}

uint64_t sub_1002D8F98(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin();
  v17 = (char *)&v28 - v16;
  a1(v15);
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  static DispatchTime.now()(v19);
  + infix(_:_:)(v14, 2.0);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  v21 = swift_allocObject(&unk_1004BF1C0, 24, 7);
  *(_QWORD *)(v21 + 16) = a3;
  aBlock[4] = sub_1002D9F3C;
  v33 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF1D8;
  v22 = _Block_copy(aBlock);
  swift_release(v33);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_10017F258();
  v25 = sub_10003F544((uint64_t *)&unk_10055B200);
  v26 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v5, v24);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

double sub_1002D9204(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  double result;
  _QWORD aBlock[5];
  _QWORD *v15;

  v7 = a2;
  v8 = sub_1002D9DD0(a1, v7);

  v9 = (_QWORD *)swift_allocObject(&unk_1004BF0F8, 48, 7);
  v9[2] = v8;
  v9[3] = v7;
  v9[4] = a3;
  v9[5] = a4;
  aBlock[4] = sub_1002D9EF4;
  v15 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF110;
  v10 = _Block_copy(aBlock);
  v11 = v15;
  v12 = v7;
  swift_bridgeObjectRetain(v8);
  swift_retain();
  objc_msgSend(v12, "performBlock:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1002D9308()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s37PickEpisodesThenPostNotificationsStepCMa()
{
  return objc_opt_self(_TtCC8Podcasts24MTNotificationTestAction37PickEpisodesThenPostNotificationsStep);
}

double sub_1002D9338(uint64_t a1, uint64_t a2)
{
  return sub_1002D87A8(a1, a2);
}

void sub_1002D9358(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v8)
      goto LABEL_3;
LABEL_13:
    objc_msgSend(a2, "saveInCurrentBlock", swift_bridgeObjectRelease(a1).n128_f64[0]);
    v13 = sub_100005EC8(0, &qword_100554590, &off_1004A4480);
    v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(v13), "sharedInstance");
    v15 = swift_allocObject(&unk_1004BF148, 32, 7);
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    v18[4] = sub_1002D9F24;
    v19 = v15;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_100027AF8;
    v18[3] = &unk_1004BF160;
    v16 = _Block_copy(v18);
    v17 = v19;
    swift_retain();
    objc_msgSend(v14, "processNotificationsForDebuggingWithCompletion:", v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);

    return;
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v8 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      objc_msgSend(v10, "setIsNew:", 1);
      objc_msgSend(v11, "setSentNotification:", 0);

    }
    while (v8 != v9);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1002D9534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  aBlock[4] = a1;
  v22 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF188;
  v14 = _Block_copy(aBlock);
  v15 = v22;
  swift_retain();
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10017F258();
  v18 = sub_10003F544((uint64_t *)&unk_10055B200);
  v19 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1002D96F4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(__n128))
{
  uint64_t v6;
  uint64_t Strong;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  _BYTE v12[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_10003A834(a3, a3[3]);
    sub_1002DA024(*v10);
    v8 = swift_release(v9);
  }
  return a4(v8);
}

void sub_1002D9770(void *a1, _QWORD *a2)
{
  uint64_t v3;
  NSString v4;
  id v5;

  v3 = *(_QWORD *)(*sub_10003A834(a2, a2[3]) + 40);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "podcastForUuid:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  if (v5)
    objc_msgSend(v5, "setNotifications:", 1);
  objc_msgSend(a1, "saveInCurrentBlock");

}

uint64_t sub_1002D9828()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D9830()
{
  uint64_t v0;

  sub_10002CA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for MTNotificationTestActionEpisodePicker()
{
  return objc_opt_self(_TtC8PodcastsP33_D26F2BA843D962D0DCAA033C526748EB37MTNotificationTestActionEpisodePicker);
}

uint64_t sub_1002D9884()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002D98B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D8870(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002D98C0()
{
  return sub_10002A264(sub_1002D8B54);
}

uint64_t sub_1002D98D0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002D9904()
{
  return sub_10002A264((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002D8E1C);
}

uint64_t sub_1002D9910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002D9934()
{
  uint64_t v0;

  return sub_1002D8F98(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_1002D9944()
{
  uint64_t v0;

  return sub_1002D9204(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1002D9950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  if ((a2 & 0xC000000000000001) == 0)
  {
    v10 = *(_QWORD *)(a2 + 16);
    if (v10)
    {
      v5 = sub_1002D9A6C(v10);
      v6 = sub_1002D9D48(a2);
      v8 = v11;
      v9 = v12 & 1;
      goto LABEL_11;
    }
    return 0;
  }
  if (a2 < 0)
    v3 = a2;
  else
    v3 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!__CocoaSet.count.getter(v3))
    return 0;
  result = __CocoaSet.count.getter(v3);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result)
  {
    v5 = sub_1002D9A6C(result);
    v6 = __CocoaSet.startIndex.getter(v3);
    v8 = v7;
    v9 = 1;
LABEL_11:
    v13 = sub_1002D9AF4(v6, v8, v9, v5, a2);
    v15 = v14;
    v17 = v16 & 1;
    sub_1002D9F74(v6, v8, v9);
    sub_100306B2C(v13, v15, v17, a2);
    v19 = v18;
    sub_1002D9F74(v13, v15, v17);
    return v19;
  }
  __break(1u);
  return result;
}

unint64_t sub_1002D9A6C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D9AF4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  _BYTE v23[32];
  int64_t v24;
  uint64_t v25;
  char v26;

  if (a4 < 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    v5 = a4;
    v6 = result;
    v24 = result;
    v25 = a2;
    v26 = a3 & 1;
    if (a4)
    {
      v8 = a5 & 0xC000000000000001;
      result = sub_1002D9F80(result, a2, a3 & 1);
      if (a5 < 0)
        v9 = a5;
      else
        v9 = a5 & 0xFFFFFFFFFFFFFF8;
      do
      {
        while (!v8)
        {
          v10 = v24;
          v11 = v25;
          v12 = v26;
          v13 = sub_1002D9C64(v24, v25, v26, a5);
          v15 = v14;
          v17 = v16;
          result = sub_1002D9F74(v10, v11, v12);
          v24 = v13;
          v25 = v15;
          v26 = v17 & 1;
          if (!--v5)
            return v24;
        }
        if ((v26 & 1) == 0)
          goto LABEL_17;
        v18 = __CocoaSet.Index.handleBitPattern.getter(v24, v25);
        if (v18)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v20 = sub_10003F544(&qword_100561878);
        v21 = (uint64_t (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v23, v20);
        __CocoaSet.formIndex(after:isUnique:)(v22, isUniquelyReferenced_nonNull_native, v9);
        result = v21(v23, 0);
        --v5;
      }
      while (v5);
      return v24;
    }
    else
    {
      sub_1002D9F80(result, a2, a3 & 1);
    }
    return v6;
  }
  return result;
}

int64_t sub_1002D9C64(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1002D9D48(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1002D9DD0(uint64_t a1, void *a2)
{
  _QWORD *result;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  unint64_t v11;
  unint64_t v12;

  result = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (_QWORD *)(a1 + 40);
    do
    {
      v8 = *v6;
      swift_bridgeObjectRetain(*v6);
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(a2, "episodeForUuid:", v9);
      swift_bridgeObjectRelease(v8);

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v7);
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1002D9EF4()
{
  uint64_t v0;

  sub_1002D9358(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D9F00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D9F24()
{
  uint64_t v0;

  return sub_1002D9534(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002D9F2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002D9F3C()
{
  uint64_t v0;
  id result;

  result = (id)UIApp;
  if (UIApp)
    return objc_msgSend(UIApp, "endBackgroundTask:", *(_QWORD *)(v0 + 16));
  __break(1u);
  return result;
}

void sub_1002D9F64()
{
  uint64_t v0;

  sub_1002D8480(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1002D9F74(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1002D9F80(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(result);
  return result;
}

void sub_1002D9F90()
{
  uint64_t v0;

  sub_1002D7D88(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1002D9FA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002D9FD4()
{
  uint64_t v0;

  sub_1002D7A2C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002D9FE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1002DA014()
{
  uint64_t v0;

  return sub_1002D7414(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1002DA024(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;
  __int128 v12[2];
  _QWORD v13[5];

  v13[3] = type metadata accessor for ShowData();
  v13[4] = &off_1004BC1C8;
  v13[0] = a1;
  v2 = (void *)objc_opt_self(MTDB);
  v3 = objc_msgSend(v2, "sharedInstance", swift_retain().n128_f64[0]);
  v4 = objc_msgSend(v3, "mainOrPrivateContext");

  sub_10000A520((uint64_t)v13, (uint64_t)v12);
  v5 = swift_allocObject(&unk_1004BF490, 64, 7);
  *(_QWORD *)(v5 + 16) = v4;
  sub_10002099C(v12, v5 + 24);
  v6 = swift_allocObject(&unk_1004BF4B8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1002DA208;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_100029B3C;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100029B1C;
  v10[3] = &unk_1004BF4D0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v4;
  swift_retain();
  objc_msgSend(v9, "performBlockAndWait:", v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v6, "", 147, 181, 32, 1);
  swift_release(v5);
  swift_release(v6);
  if ((v9 & 1) != 0)
    __break(1u);
  else
    sub_10003D380(v13);
}

uint64_t sub_1002DA1DC()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1002DA208()
{
  uint64_t v0;

  sub_1002D9770(*(void **)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1002DA214()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002DA298(void *a1, char a2, char a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  unsigned int v49;
  id v50;
  void *v51;
  uint64_t v52;
  char v53;
  id v54;
  id v55;
  unint64_t v56;
  _QWORD *v57;
  unint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  unint64_t *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  id v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  id v87;
  void *v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  unsigned int *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  id v125;
  double v126;
  id v127;
  NSPredicate_optional *v128;
  void *v129;
  id v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  _BYTE v165[32];
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  void *v172;

  LODWORD(v164) = a4;
  v149 = type metadata accessor for Date(0);
  v151 = *(_QWORD *)(v149 - 8);
  v7 = __chkstk_darwin(v149);
  v150 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v159 = (char *)&v139 - v9;
  v158 = type metadata accessor for StationType(0);
  v157 = *(_QWORD *)(v158 - 8);
  v10 = __chkstk_darwin(v158);
  v155 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v156 = (char *)&v139 - v12;
  v13 = type metadata accessor for NSFastEnumerationIterator(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v139 - v18;
  v20 = sub_10003F544(&qword_100553E10);
  __chkstk_darwin(v20);
  v22 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for StationSortOrder(0);
  v161 = *(_QWORD *)(v23 - 8);
  v162 = v23;
  v24 = __chkstk_darwin(v23);
  v154 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v160 = (char *)&v139 - v26;
  v27 = sub_10003F544(&qword_10055D840);
  v28 = __chkstk_darwin(v27);
  v153 = (uint64_t)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v139 - v31;
  __chkstk_darwin(v30);
  v163 = (uint64_t)&v139 - v33;
  v34 = objc_msgSend(a1, "uuid");
  if (!v34)
    goto LABEL_8;
  v35 = v34;
  v146 = v14;
  v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  v38 = objc_msgSend(a1, "title");
  if (!v38)
  {
    swift_bridgeObjectRelease(v37);
LABEL_8:

    return;
  }
  v39 = v38;
  v152 = v37;
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v144 = v41;

  v42 = type metadata accessor for ArtworkModel(0);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v163, 1, 1, v42);
  if ((a2 & 1) == 0)
  {
    MTPlaylist.artworkModel.getter(v43);
    v44 = v163;
    sub_100007A28(v163, &qword_10055D840);
    sub_1002DB0DC((uint64_t)v32, v44);
  }
  sub_1002E5BF4(objc_msgSend(a1, "containerOrder"), (uint64_t)v22);
  v46 = v161;
  v45 = v162;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v22, 1, v162) == 1)
  {
    static StationSortOrder.default.getter();
    sub_100007A28((uint64_t)v22, &qword_100553E10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v160, v22, v45);
  }
  v143 = objc_msgSend(a1, "isUngroupedList");
  v47 = objc_msgSend(a1, "defaultSettings");
  if (v47)
  {
    v48 = v47;
    v49 = objc_msgSend(v47, "showPlayedEpisodes");

    v142 = v49 ^ 1;
    if ((a3 & 1) != 0)
      goto LABEL_18;
  }
  else
  {
    if ((a3 & 1) != 0)
    {
      v142 = 1;
      goto LABEL_18;
    }
    v142 = 1;
  }
  v50 = objc_msgSend(a1, "episodes");
  if (v50)
  {
    v51 = v50;
    v52 = v152;
    swift_bridgeObjectRetain(v152);
    v141 = sub_1002DB16C(v51, v148, v52);

    swift_bridgeObjectRelease(v52);
    goto LABEL_19;
  }
LABEL_18:
  v141 = 0;
LABEL_19:
  v53 = (char)v164;
  v172 = &_swiftEmptySetSingleton;
  v171 = (unint64_t)_swiftEmptyArrayStorage;
  v54 = objc_msgSend(a1, "settings");
  v164 = a1;
  v145 = v40;
  if ((v53 & 1) != 0)
  {
    if (v54)
    {
      v55 = v54;
      NSOrderedSet.makeIterator()();
      v140 = v55;

      v56 = sub_1001C5800();
      dispatch thunk of IteratorProtocol.next()(&v168, v13, v56);
      if (v169)
      {
        v57 = _swiftEmptyArrayStorage;
        v58 = &qword_100553DA0;
        v59 = MTPodcastPlaylistSettings_ptr;
        do
        {
          sub_10013B9CC(&v168, &v167);
          sub_10003D344((uint64_t)&v167, (uint64_t)v165);
          v60 = sub_100005EC8(0, v58, v59);
          if (swift_dynamicCast(&v170, v165, (char *)&type metadata for Any + 8, v60, 6)
            && (v61 = (id)v170,
                v62 = objc_msgSend((id)v170, "podcast"),
                v61,
                v62))
          {
            v63 = v13;
            v64 = v17;
            v65 = v59;
            v66 = v58;
            v67 = objc_msgSend(v62, "uuid");

            if (v67)
            {
              v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
              v147 = v69;

              sub_10003D380(&v167);
              if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
                v57 = sub_10027AE00(0, v57[2] + 1, 1, v57);
              v71 = v57[2];
              v70 = v57[3];
              if (v71 >= v70 >> 1)
                v57 = sub_10027AE00((_QWORD *)(v70 > 1), v71 + 1, 1, v57);
              v57[2] = v71 + 1;
              v72 = &v57[2 * v71];
              v73 = v147;
              v72[4] = v68;
              v72[5] = v73;
              a1 = v164;
            }
            else
            {
              sub_10003D380(&v167);
            }
            v58 = v66;
            v59 = v65;
            v17 = v64;
            v13 = v63;
          }
          else
          {
            sub_10003D380(&v167);
          }
          dispatch thunk of IteratorProtocol.next()(&v168, v13, v56);
        }
        while (v169);
      }
      else
      {
        v57 = _swiftEmptyArrayStorage;
      }
      (*(void (**)(char *, uint64_t))(v146 + 8))(v17, v13);

      swift_bridgeObjectRelease(v172);
      v118 = sub_10002B070((uint64_t)v57);
      swift_bridgeObjectRelease(v57);
LABEL_73:
      v147 = *(_QWORD *)(v118 + 16);
      swift_bridgeObjectRelease(v118);
      goto LABEL_74;
    }
  }
  else if (v54)
  {
    v170 = (unint64_t)_swiftEmptyArrayStorage;
    v74 = v54;
    NSOrderedSet.makeIterator()();

    v75 = sub_1001C5800();
    dispatch thunk of IteratorProtocol.next()(&v168, v13, v75);
    while (v169)
    {
      sub_10013B9CC(&v168, &v167);
      sub_10003D344((uint64_t)&v167, (uint64_t)v165);
      v77 = sub_100005EC8(0, &qword_100553DA0, MTPodcastPlaylistSettings_ptr);
      if ((swift_dynamicCast(&v166, v165, (char *)&type metadata for Any + 8, v77, 6) & 1) == 0)
        v166 = 0;
      v78 = sub_10003D380(&v167);
      v79 = v166;
      if (v166)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
        v81 = *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v80 = *(_QWORD *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v81 >= v80 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
        v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
        specialized Array._endMutation()(v76);
        a1 = v164;
      }
      dispatch thunk of IteratorProtocol.next()(&v168, v13, v75);
    }
    (*(void (**)(char *, uint64_t))(v146 + 8))(v19, v13);
    v82 = v170;

    if ((unint64_t)v82 >> 62)
    {
      if (v82 < 0)
        v138 = v82;
      else
        v138 = v82 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v82);
      v83 = _CocoaArrayWrapper.endIndex.getter(v138);
      swift_bridgeObjectRelease(v82);
    }
    else
    {
      v83 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v84 = v152;
    if (v83)
    {
      if (v83 < 1)
      {
        __break(1u);
        return;
      }
      v85 = 0;
      v86 = v82 & 0xC000000000000001;
      v147 = v82 & 0xC000000000000001;
      v146 = v83;
      do
      {
        if (v86)
          v87 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v85, v82);
        else
          v87 = *(id *)(v82 + 8 * v85 + 32);
        v88 = v87;
        v89 = objc_msgSend(v87, "podcast");
        if (v89
          && (v90 = v89, v91 = objc_msgSend(v89, "uuid"), v90, v91))
        {
          v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
          v94 = v93;

          v95 = (uint64_t)v172;
          swift_bridgeObjectRetain(v172);
          v96 = sub_10029113C(v92, v94, v95);
          swift_bridgeObjectRelease(v95);
          if ((v96 & 1) != 0)
          {
            swift_bridgeObjectRelease(v94);

          }
          else
          {
            swift_bridgeObjectRetain(v84);
            v97 = v88;
            v98 = v84;
            v99 = v97;
            v100 = objc_msgSend(v97, "uuid");
            if (v100)
            {
              v101 = v100;
              v102 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
              v104 = v103;

              v105 = objc_msgSend(v99, "podcast");
              if (v105)
              {
                v106 = v105;
                v140 = v102;
                type metadata accessor for PodcastDetail(0);
                v107 = v106;
                v108 = sub_1001D0F44(v107, 0, 0, 0, 1u);
                if (v108)
                {
                  v109 = v108;
                  type metadata accessor for StationShow(0);
                  v110 = objc_msgSend(v99, "episodeCount", swift_retain(v109).n128_f64[0]);
                  v111 = dispatch thunk of StationShow.__allocating_init(uuid:stationUuid:podcast:episodeCount:)(v140, v104, v148, v152, v109, v110);
                  swift_release(v109);

                  swift_retain(v111);
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
                  v114 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v113 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v114 >= v113 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v113 > 1, v114 + 1, 1);
                  v115 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v114, v111);
                  specialized Array._endMutation()(v115);
                  sub_10002B270((uint64_t *)&v168, v92, v94);

                  swift_release(v111);
                  swift_bridgeObjectRelease(*((_QWORD *)&v168 + 1));
                  a1 = v164;
                  v84 = v152;
                }
                else
                {
                  swift_bridgeObjectRelease(v94);
                  swift_bridgeObjectRelease(v104);

                  v117 = v152;
                  swift_bridgeObjectRelease(v152);

                  v84 = v117;
                  a1 = v164;
                }
              }
              else
              {
                swift_bridgeObjectRelease(v94);
                swift_bridgeObjectRelease(v104);
                v116 = v152;
                swift_bridgeObjectRelease(v152);

                v84 = v116;
              }
            }
            else
            {
              swift_bridgeObjectRelease(v94);
              swift_bridgeObjectRelease(v98);

              v84 = v98;
            }
          }
          v86 = v147;
          v83 = v146;
        }
        else
        {

        }
        ++v85;
      }
      while (v83 != v85);
    }
    swift_bridgeObjectRelease(v82);
    v118 = (uint64_t)v172;
    goto LABEL_73;
  }
  v147 = 0;
LABEL_74:
  v119 = v149;
  LODWORD(v164) = v143 ^ 1;
  v120 = objc_msgSend(a1, "isItunesPlaylist");
  v121 = (unsigned int *)&enum case for StationType.manual(_:);
  if (!v120)
    v121 = (unsigned int *)&enum case for StationType.dynamic(_:);
  v122 = v157;
  v123 = v156;
  v124 = v158;
  (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v156, *v121, v158);
  v125 = objc_msgSend(a1, "unplayedCount");
  objc_msgSend(a1, "generatedDate");
  Date.init(timeIntervalSinceReferenceDate:)(v126);
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v155, v123, v124);
  sub_1002DB124(v163, v153);
  (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v154, v160, v162);
  v127 = objc_msgSend(a1, "episodes");
  if (v127)
  {
    v129 = v127;
    v130 = objc_msgSend(v127, "count");

  }
  else
  {
    v130 = 0;
  }
  v131 = v171;
  MTPlaylist.unsafePredicateForAllEpisodesMatchingSettings()(v128);
  v133 = v132;
  v134 = objc_msgSend(a1, "objectID");
  v135 = v151;
  v136 = v150;
  v137 = v159;
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v150, v159, v119);
  dispatch thunk of StationDetail.__allocating_init(uuid:type:title:artwork:sortOrder:grouped:hidePlayedEpisodes:episodeCount:showCount:unplayedCount:episodes:shows:predicateForEpisodes:objectID:dateCreated:)(v148, v152, v155, v145, v144, v153, v154, v164, (_BYTE)v142, v130, v147, v125, v141, v131, v133, v134, v136);

  (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v119);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v156, v158);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v160, v162);
  sub_100007A28(v163, &qword_10055D840);
}

uint64_t sub_1002DB0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055D840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002DB124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_10055D840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002DB16C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BYTE v23[32];
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  unint64_t v27;

  v6 = type metadata accessor for NSFastEnumerationIterator(0);
  v21 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = a1;
  NSOrderedSet.makeIterator()();

  v10 = sub_1001C5800();
  dispatch thunk of IteratorProtocol.next()(&v25, v6, v10);
  while (v26)
  {
    sub_10013B9CC(&v25, v24);
    sub_10003D344((uint64_t)v24, (uint64_t)v23);
    v11 = sub_100005EC8(0, (unint64_t *)&qword_10055FDB0, MTEpisode_ptr);
    swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v11, 7);
    v12 = v22;
    type metadata accessor for StationEpisode(0);
    swift_bridgeObjectRetain(a3);
    v13 = sub_1002716B8(v12, a2, a3);
    if (v13)
    {
      v14 = v13;
      v15 = sub_10003D380(v24);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
      specialized Array._endMutation()(v18);
    }
    else
    {
      sub_10003D380(v24);
    }
    dispatch thunk of IteratorProtocol.next()(&v25, v6, v10);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  return v27;
}

void sub_1002DB358(uint64_t a1)
{
  sub_1002DB364(a1, (uint64_t)&off_1004B46A8);
}

void sub_1002DB364(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v4 = static Podcasts.isBlueMoonEnabled()(a1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if ((v4 & 1) != 0)
  {
    if ((v5 & 1) == 0)
    {
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
      v7 = dispatch thunk of PlaybackController.queueController.getter(v6);
      swift_release(v6);
      LOBYTE(v6) = dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter(v8);
      swift_release(v7);
      if ((v6 & 1) == 0)
        return;
    }
LABEL_7:
    sub_1002DBC04(a1, a2);
    return;
  }
  if ((v5 & 1) != 0)
    goto LABEL_7;
  v9 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v10 = objc_msgSend(v9, "upNextController");

  LODWORD(v9) = objc_msgSend(v10, "hasItemsInQueue");
  if ((_DWORD)v9)
    goto LABEL_7;
}

void sub_1002DB47C(uint64_t a1)
{
  sub_1002DB488(a1, (uint64_t)&off_1004B46A8);
}

void sub_1002DB488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __n128 v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  id v62;
  id v63;
  Class v64;
  __n128 v65;
  void *v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  Class isa;
  __n128 v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void **aBlock;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  void *v97;
  void (*v98)();
  uint64_t v99;
  char v100[32];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PlaybackController.QueueCommand.Location(0);
  v89 = *(_QWORD *)(v13 - 8);
  v90 = v13;
  __chkstk_darwin();
  v88 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = a1;
  v93 = a2;
  v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 16);
  v91 = v2;
  v18 = v17(a1);
  if (!v18)
    return;
  v19 = v18;
  v20 = v18 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v100, 0, 0);
  sub_10016E904(v20, (uint64_t)v16);
  swift_release(v19);
  v21 = (void *)sub_1001E2CF0();
  sub_10016E98C((uint64_t)v16);
  if (!v21)
    return;
  sub_1002DBF1C((uint64_t)v21, v92, v93);
  v23 = v22;
  if (!((unint64_t)v22 >> 62))
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
    {
      v81 = v21;
      v82 = v12;
      v83 = v10;
      v84 = v8;
      v85 = v6;
      v86 = v9;
      v87 = v5;
      swift_bridgeObjectRetain(v22);
      goto LABEL_6;
    }
    goto LABEL_25;
  }
  if (v22 < 0)
    v37 = v22;
  else
    v37 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v23);
  if (v38 <= 0)
    goto LABEL_25;
  v81 = v21;
  v82 = v12;
  v83 = v10;
  v84 = v8;
  v85 = v6;
  v86 = v9;
  v87 = v5;
  swift_bridgeObjectRetain(v23);
  v39 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (v39)
  {
    v24 = v39;
    if (v39 >= 1)
    {
LABEL_6:
      v25 = 0;
      v26 = _swiftEmptyArrayStorage;
      do
      {
        if ((v23 & 0xC000000000000001) != 0)
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
        else
          v27 = *(id *)(v23 + 8 * v25 + 32);
        v28 = v27;
        v29 = objc_msgSend(v27, "uuid");
        if (v29)
        {
          v30 = v29;
          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          v33 = v32;

          if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
            v26 = sub_10027AE00(0, v26[2] + 1, 1, v26);
          v35 = v26[2];
          v34 = v26[3];
          if (v35 >= v34 >> 1)
            v26 = sub_10027AE00((_QWORD *)(v34 > 1), v35 + 1, 1, v26);
          v26[2] = v35 + 1;
          v36 = &v26[2 * v35];
          v36[4] = v31;
          v36[5] = v33;
        }
        else
        {

        }
        ++v25;
      }
      while (v24 != v25);
      goto LABEL_27;
    }
    __break(1u);
LABEL_25:

    swift_bridgeObjectRelease(v23);
    return;
  }
  v26 = _swiftEmptyArrayStorage;
LABEL_27:
  swift_bridgeObjectRelease_n(v23, 2);
  v40 = (*(uint64_t (**)(uint64_t))(v93 + 16))(v92);
  v41 = v40;
  v42 = static Podcasts.isBlueMoonEnabled()(v40);
  if ((v41 & 1) != 0)
  {
    v44 = v83;
    v43 = v84;
    v45 = v82;
    v54 = v81;
    if ((v42 & 1) != 0)
    {
      v55 = (*(uint64_t (**)(uint64_t))(v93 + 24))(v92);
      v56 = dispatch thunk of PlaybackController.queueController.getter(v55);
      v57 = swift_release(v55);
      v59 = v88;
      v58 = v89;
      v60 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v89 + 104))(v88, enum case for PlaybackController.QueueCommand.Location.queueHead(_:), v90, v57);
      dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)(v26, v59);
      swift_release(v56);
      v61 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v59, v60, v61);
    }
    else
    {
      v72 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
      v73 = objc_msgSend(v72, "upNextController");

      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v73, "addEpisodeUuidsToPlayNext:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
    sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
    v66 = (void *)static OS_dispatch_queue.main.getter(v75);
    v98 = sub_1002DC438;
    v99 = 0;
    aBlock = _NSConcreteStackBlock;
    v95 = 1107296256;
    v96 = sub_100027AF8;
    v97 = &unk_1004BF520;
    v76 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v76);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v77 = sub_10017F258();
    v78 = sub_10003F544((uint64_t *)&unk_10055B200);
    v79 = sub_100026534();
    v71 = v87;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v78, v79, v87, v77);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v43, v76);

    _Block_release(v76);
  }
  else
  {
    v44 = v83;
    v43 = v84;
    v45 = v82;
    v46 = v81;
    if ((v42 & 1) != 0)
    {
      v47 = (*(uint64_t (**)(uint64_t))(v93 + 24))(v92);
      v48 = dispatch thunk of PlaybackController.queueController.getter(v47);
      v49 = swift_release(v47);
      v51 = v88;
      v50 = v89;
      v52 = v90;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v89 + 104))(v88, enum case for PlaybackController.QueueCommand.Location.queueTail(_:), v90, v49);
      dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)(v26, v51);
      swift_bridgeObjectRelease(v26);
      v53 = swift_release(v48);
      (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v51, v52, v53);
    }
    else
    {
      v62 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
      v63 = objc_msgSend(v62, "upNextController");

      v64 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v63, "addEpisodeUuidsToUpNext:", v64, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
    sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
    v66 = (void *)static OS_dispatch_queue.main.getter(v65);
    v98 = sub_1002DC42C;
    v99 = 0;
    aBlock = _NSConcreteStackBlock;
    v95 = 1107296256;
    v96 = sub_100027AF8;
    v97 = &unk_1004BF548;
    v67 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v67);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v68 = sub_10017F258();
    v69 = sub_10003F544((uint64_t *)&unk_10055B200);
    v70 = sub_100026534();
    v71 = v87;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v69, v70, v87, v68);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v43, v67);
    _Block_release(v67);

  }
  (*(void (**)(char *, uint64_t))(v85 + 8))(v43, v71);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v86);
}

void sub_1002DBBEC(uint64_t a1)
{
  sub_1002DB364(a1, (uint64_t)&off_1004BE348);
}

void sub_1002DBBF8(uint64_t a1)
{
  sub_1002DB488(a1, (uint64_t)&off_1004BE348);
}

void sub_1002DBC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;
  char v22;
  char v23[24];

  type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 16))(a1);
  if (v6)
  {
    v7 = v6;
    v8 = v6 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess(v6 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type, v23, 0, 0);
    sub_10016E904(v8, (uint64_t)v5);
    swift_release(v7);
    v9 = (void *)sub_1001E2CF0();
    sub_10016E98C((uint64_t)v5);
    if (v9)
    {
      v10 = objc_msgSend(v9, "uuid");
      if (v10)
      {

        v22 = 0;
        v11 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
        v12 = objc_msgSend(v11, "mainOrPrivateContext");

        v13 = swift_allocObject(&unk_1004BF670, 32, 7);
        *(_QWORD *)(v13 + 16) = &v22;
        *(_QWORD *)(v13 + 24) = v9;
        v14 = swift_allocObject(&unk_1004BF698, 32, 7);
        *(_QWORD *)(v14 + 16) = sub_1002DCA90;
        *(_QWORD *)(v14 + 24) = v13;
        aBlock[4] = sub_1001529CC;
        v21 = v14;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100029B1C;
        aBlock[3] = &unk_1004BF6B0;
        v15 = _Block_copy(aBlock);
        v16 = v21;
        v17 = v9;
        swift_retain();
        objc_msgSend(v12, "performBlockAndWait:", v15, swift_release(v16).n128_f64[0]);
        _Block_release(v15);
        LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v14, "", 118, 54, 28, 1);
        swift_release(v14);
        if ((v15 & 1) != 0)
        {
          __break(1u);
        }
        else if ((static Podcasts.isBlueMoonEnabled()(v18) & 1) != 0)
        {

          swift_release(v13);
        }
        else
        {
          if (v22 == 1)
          {
            v19 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
            objc_msgSend(v19, "isPlayerTargetLocal");
            swift_release(v13);

          }
          else
          {
            swift_release(v13);
          }

        }
      }
      else
      {

      }
    }
  }
}

void sub_1002DBECC(BOOL *a1, id a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "smartPlayEpisode");
  v4 = v3;
  if (v3)

  *a1 = v4 != 0;
}

void sub_1002DBF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  double (*v39)();
  void *v40;
  uint64_t v41;
  id v42;
  void (*v43)();
  _QWORD *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  void *v65;
  _QWORD aBlock[5];
  uint64_t v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  uint64_t (*v73)();
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v65 = (void *)a1;
  v61 = type metadata accessor for EpisodeListSettings(0);
  v60 = *(_QWORD *)(v61 - 8);
  v5 = *(_QWORD *)(v60 + 64);
  __chkstk_darwin();
  v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v63 = (char *)&v53 - v6;
  v7 = objc_msgSend((id)objc_opt_self(MTDB), "sharedInstance");
  v64 = objc_msgSend(v7, "mainOrPrivateContext");

  v68 = _swiftEmptyArrayStorage;
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 16))(a2);
  if (!v8)
    goto LABEL_5;
  v9 = v8;
  v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType);
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 8);
  v12 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 56);
  v13 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 64);
  v52 = *(_BYTE *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 64);
  v14 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 16);
  v15 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 24);
  v16 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 32);
  v17 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 40);
  v62 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_groupedEpisodeListType + 48);
  v18 = v12;
  sub_10004AE48(v10, v11, v14, v15, v16, v17, v62, v12, v52);
  swift_release(v9);
  if (v13 == 255)
  {
LABEL_5:
    v44 = (_QWORD *)swift_allocObject(&unk_1004BF580, 40, 7);
    v45 = v64;
    v46 = v65;
    v44[2] = v65;
    v44[3] = &v68;
    v44[4] = v45;
    v47 = swift_allocObject(&unk_1004BF5A8, 32, 7);
    v43 = sub_1002DC97C;
    *(_QWORD *)(v47 + 16) = sub_1002DC97C;
    *(_QWORD *)(v47 + 24) = v44;
    v73 = sub_100029B3C;
    v74 = v47;
    v69 = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_100029B1C;
    v72 = &unk_1004BF5C0;
    v48 = _Block_copy(&v69);
    v49 = v74;
    v50 = v45;
    v51 = v46;
    swift_retain();
    objc_msgSend(v50, "performBlockAndWait:", v48, swift_release(v49).n128_f64[0]);

    _Block_release(v48);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation(v47, "", 118, 133, 32, 1);
    swift_release(v47);
    if ((v48 & 1) == 0)
    {
      v39 = 0;
      v36 = 0;
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v69 = (void **)v10;
    v70 = v11;
    v71 = (uint64_t (*)(uint64_t))v14;
    v72 = (void *)v15;
    v19 = v14;
    v58 = v14;
    v20 = v15;
    v73 = (uint64_t (*)())v16;
    v74 = v17;
    v57 = v16;
    v56 = v17;
    v75 = v62;
    v76 = v18;
    v21 = v18;
    v55 = v18;
    v22 = v13;
    v77 = v13;
    sub_100168ED4(v10, v11, v19, v15, v16, v17, v62, v21, v13);
    v24 = MTPodcast.episodeSortType.getter(v23);
    v25 = EpisodeListType.pubDateLimit.getter();
    v65 = (void *)v10;
    v26 = v25;
    v27 = EpisodeListType.hidePlayedEpisodes.getter();
    v28 = v63;
    EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(&v69, v24, v26, v27 & 1, 0, 0);
    v29 = v60;
    v30 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    v31 = v59;
    v54 = v11;
    v32 = v61;
    v30(v59, v28, v61);
    v33 = *(unsigned __int8 *)(v29 + 80);
    v34 = (v33 + 24) & ~v33;
    v35 = (v5 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject(&unk_1004BF5F8, v35 + 8, v33 | 7);
    v37 = v64;
    *(_QWORD *)(v36 + 16) = v64;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v36 + v34, v31, v32);
    *(_QWORD *)(v36 + v35) = &v68;
    v38 = swift_allocObject(&unk_1004BF620, 32, 7);
    v39 = sub_1002DCA18;
    *(_QWORD *)(v38 + 16) = sub_1002DCA18;
    *(_QWORD *)(v38 + 24) = v36;
    aBlock[4] = sub_1001529CC;
    v67 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100029B1C;
    aBlock[3] = &unk_1004BF638;
    v40 = _Block_copy(aBlock);
    v41 = v67;
    v42 = v37;
    swift_retain();
    objc_msgSend(v42, "performBlockAndWait:", v40, swift_release(v41).n128_f64[0]);
    _Block_release(v40);

    sub_1001930D0((uint64_t)v65, v54, v58, v20, v57, v56, v62, v55, v22);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v63, v32);
    LOBYTE(v42) = swift_isEscapingClosureAtFileLocation(v38, "", 118, 124, 32, 1);
    swift_release(v38);
    if ((v42 & 1) == 0)
    {
      v43 = 0;
      v44 = 0;
LABEL_7:
      sub_10002CA30((uint64_t)v39, v36);
      sub_10002CA30((uint64_t)v43, (uint64_t)v44);
      return;
    }
  }
  __break(1u);
}

void sub_1002DC42C()
{
  sub_1002DC444((unsigned int *)&enum case for HUDViewController.HUDType.addToQueue(_:));
}

void sub_1002DC438()
{
  sub_1002DC444(&enum case for HUDViewController.HUDType.playNext(_:));
}

void sub_1002DC444(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  v2 = type metadata accessor for HUDViewController.HUDType(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v5 + 104))(v4, *a1);
  v6 = objc_allocWithZone((Class)type metadata accessor for HUDViewController(0));
  v7 = (void *)HUDViewController.init(type:)(v4);
  dispatch thunk of HUDViewController.present()();

}

double sub_1002DC4D4(void *a1, uint64_t a2, uint64_t *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  double result;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = kMTEpisodeEntityName;
  v6 = (void *)EpisodeListSettings.predicate.getter(v5);
  v7 = EpisodeListSettings.sort.getter(v6);
  v8 = EpisodeSortType.descriptors.getter(v7);
  v9 = sub_100178E24(v8);
  swift_bridgeObjectRelease(v8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(a1, "objectsInEntity:predicate:sortDescriptors:", v5, v6, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (v11)
  {
    v13 = sub_100005EC8(0, (unint64_t *)&qword_100553790, NSManagedObject_ptr);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v13);

    v15 = sub_10034E70C(v14);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
    if (v15)
    {
      v16 = *a3;
      *a3 = (uint64_t)v15;
      *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
    }
  }
  return result;
}

void sub_1002DC604(void *a1, _QWORD *a2, void *a3)
{
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  id v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;

  v6 = objc_msgSend(a1, "smartPlayEpisode");
  if (v6)
  {
    v31 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v8 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v31);
    specialized Array._endMutation()(v9);
    v10 = objc_msgSend(a1, "uuid");
    if (v10)
    {
      v11 = v10;
      if (!objc_msgSend(a1, "isSerialShowTypeInFeed"))
        goto LABEL_10;
      v12 = (void *)objc_opt_self(MTEpisode);
      v13 = objc_msgSend(v12, "predicateForSeasonNumber:", objc_msgSend(v31, "seasonNumber"));
      v14 = objc_msgSend(v12, "predicateForEpisodesWithEpisodeNumbersGreaterThan:", objc_msgSend(v31, "episodeNumber"));
      v15 = objc_msgSend(v13, "AND:", v14);

      v16 = objc_msgSend(v12, "predicateForAllEpisodesOnPodcastUuid:", v11);
      v17 = objc_msgSend(v15, "AND:", v16);

      v18 = objc_msgSend(v12, "predicateForEntitledEpisodes");
      v19 = objc_msgSend(v17, "AND:", v18);

      v20 = kMTEpisodeEntityName;
      v11 = v19;
      v21 = objc_msgSend(v12, "sortDescriptorsForEpisodeNumberAscending:", 1);
      v22 = sub_100005EC8(0, (unint64_t *)&qword_1005547A0, NSSortDescriptor_ptr);
      v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

      v24 = sub_100178E24(v23);
      swift_bridgeObjectRelease(v23);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v26 = objc_msgSend(a3, "objectsInEntity:predicate:sortDescriptors:", v20, v11, isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

      if (!v26)
        goto LABEL_10;
      v27 = sub_100005EC8(0, (unint64_t *)&qword_100553790, NSManagedObject_ptr);
      v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

      v29 = sub_10034E70C(v28);
      swift_bridgeObjectRelease(v28);
      if (v29)
      {
        sub_100173DB8((uint64_t)v29);
        v30 = v11;
      }
      else
      {
LABEL_10:
        v30 = v31;
        v31 = v11;
      }

    }
  }
}

uint64_t sub_1002DC950()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002DC97C()
{
  uint64_t v0;

  sub_1002DC604(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1002DC988()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DC998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for EpisodeListSettings(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_1002DCA18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for EpisodeListSettings(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002DC4D4(*(void **)(v0 + 16), v0 + v2, *(uint64_t **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002DCA5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DCA6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002DCA90()
{
  uint64_t v0;

  sub_1002DBECC(*(BOOL **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1002DCA98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasLibraryEpisodesInPodcast(withUUID:)(Swift::String withUUID)
{
  void *v1;
  void *v2;
  NSString v3;
  id v4;
  unsigned __int8 v5;

  v2 = (void *)objc_opt_self(MTEpisode);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "predicateForLibraryEpisodesOnPodcastUuid:", v3);

  v5 = objc_msgSend(v1, "hasAnyObjectsInEntity:satisfyingPredicate:", kMTEpisodeEntityName, v4);
  return v5;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasPlayedEpisodesInPodcast(withUUID:)(Swift::String withUUID)
{
  void *v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  unsigned __int8 v7;

  v2 = (void *)objc_opt_self(MTEpisode);
  v3 = objc_msgSend(v2, "predicateForHasAnyVisualPlayState");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "predicateForAllEpisodesOnPodcastUuid:", v4);

  v6 = objc_msgSend(v3, "AND:", v5);
  v7 = objc_msgSend(v1, "hasAnyObjectsInEntity:satisfyingPredicate:", kMTEpisodeEntityName, v6);

  return v7;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSManagedObjectContext.fetchHasEpisodes(for:)(NSPredicate *a1)
{
  void *v1;

  return objc_msgSend(v1, "hasAnyObjectsInEntity:satisfyingPredicate:", kMTEpisodeEntityName, a1);
}

uint64_t sub_1002DCC88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    v4 = v1 - 1;
    do
    {
      v5 = v4;
      v6 = v3[3];
      v7 = v3[4];
      sub_10003A834(v3, v6);
      v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
      if ((v8 & 1) != 0)
        break;
      v4 = v5 - 1;
      v3 += 5;
    }
    while (v5);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1002DCD28(uint64_t a1)
{
  return sub_10004A7F0(a1, (uint64_t (*)(_QWORD))&type metadata accessor for OSSignposter, qword_100561928, (uint64_t (*)(void))&static OSSignposter.database.getter);
}

uint64_t static DataMigrator.requiresMigration.getter()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1005520D8 != -1)
    swift_once(&qword_1005520D8, sub_10004A76C);
  v0 = off_100561958;
  v1 = *((_QWORD *)off_100561958 + 2);
  if (v1)
  {
    v2 = (_QWORD *)((char *)off_100561958 + 32);
    swift_bridgeObjectRetain(off_100561958);
    v3 = v1 - 1;
    do
    {
      v4 = v3;
      v5 = v2[3];
      v6 = v2[4];
      sub_10003A834(v2, v5);
      LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      if ((v1 & 1) != 0)
        break;
      v3 = v4 - 1;
      v2 += 5;
    }
    while (v4);
    swift_bridgeObjectRelease(v0);
  }
  return v1 & 1;
}

id DataMigrator.init()(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for DataMigrator()
{
  return objc_opt_self(MTDataMigrator);
}

uint64_t (*sub_1002DCE94())(uint64_t a1)
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v1 = v0[20];
  v2 = v0[21];
  if (v1)
  {
    v3 = (uint64_t (*)(uint64_t))v0[20];
  }
  else
  {
    v4 = v0[19];
    v3 = sub_100181074;
    v0[20] = sub_100181074;
    v0[21] = v4;
    swift_retain_n(v4, 2);
    sub_10002CA30(0, v2);
  }
  sub_10002CA20(v1, v2);
  return v3;
}

double sub_1002DCF0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100181038();
  static OS_os_log.carPlay.getter(v6);
  v7 = swift_bridgeObjectRetain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = (unint64_t)a1 >> 62;
  if (os_log_type_enabled(v8, v9))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    if (v10)
    {
      if (a1 < 0)
        v27 = a1;
      else
        v27 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v12 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v29 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "CarPlayShowcaseProvider: section total items count is %ld.", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v13 = sub_10003F544((uint64_t *)&unk_100553780);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1003CA250;
  if (v10)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v25 = sub_10003F544(&qword_1005544F0);
    v26 = _bridgeCocoaArray<A>(_:)(v24, v25);
    swift_bridgeObjectRelease(a1);
    a1 = v26;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v15);
  }
  v16 = objc_allocWithZone((Class)CPListSection);
  v17 = sub_100180784(a1);
  swift_bridgeObjectRelease(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithItems:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  *(_QWORD *)(v14 + 32) = v19;
  v29 = v14;
  specialized Array._endMutation()(v20);
  v21 = v29;
  CurrentValueSubject.send(_:)(&v29, v22);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

uint64_t sub_1002DD1B8()
{
  _QWORD *v0;

  sub_10003D380(v0 + 8);
  sub_10003D380(v0 + 13);
  swift_release(v0[18]);
  swift_release(v0[19]);
  sub_10002CA30(v0[20], v0[21]);
  return swift_deallocClassInstance(v0, 176, 7);
}

uint64_t type metadata accessor for CarPlayShowcaseProvider()
{
  return objc_opt_self(_TtC8Podcasts23CarPlayShowcaseProvider);
}

void sub_1002DD21C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v1);
    v10 = sub_10003F544(&qword_1005544F8);
    v11 = sub_10002F9C8((unint64_t *)&unk_100554500, &qword_1005544F8, (uint64_t)&protocol conformance descriptor for [A]);
    Collection.isNotEmpty.getter(v10, v11, v12);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
  if (v1 < 0)
    v9 = *a1;
  else
    v9 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v2)
    goto LABEL_14;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      else
        v4 = *(id *)(v1 + 8 * v3 + 32);
      v5 = v4;
      ++v3;
      v6 = objc_msgSend(v4, "items");
      v7 = sub_10003F544(&qword_1005544F0);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      sub_1001734C4(v8);
    }
    while (v2 != v3);
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_1002DD3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_10003F544(&qword_100561A58);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v5 = v12;
  swift_retain();
  v6 = sub_10003F544((uint64_t *)&unk_100561A60);
  v7 = sub_10002F9C8(&qword_100560130, (uint64_t *)&unk_100561A60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher.filter(_:)(sub_1002DD21C, 0, v6, v7);
  swift_release(v5);
  v8 = sub_10002F9C8((unint64_t *)&unk_100561A70, &qword_100561A58, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  v9 = Publisher.eraseToAnyPublisher()(v1, v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_1002DD4D0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544((uint64_t *)&unk_1005550F0);
  v1 = sub_10002F9C8(&qword_100554FB0, (uint64_t *)&unk_1005550F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

_QWORD *sub_1002DD540(uint64_t a1, unint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20[3];

  v4 = (_QWORD *)v3;
  *(_QWORD *)&v20[0] = _swiftEmptyArrayStorage;
  v7 = sub_10003F544((uint64_t *)&unk_100561A60);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)(v3 + 144) = CurrentValueSubject.init(_:)(v20);
  v8 = sub_10003F544((uint64_t *)&unk_1005550F0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v10 = PassthroughSubject.init()(v9);
  *(_QWORD *)(v3 + 160) = 0;
  *(_QWORD *)(v3 + 168) = 0;
  *(_QWORD *)(v3 + 152) = v10;
  v11 = a3[1];
  *(_OWORD *)(v3 + 16) = *a3;
  *(_OWORD *)(v3 + 32) = v11;
  *(_OWORD *)(v3 + 48) = a3[2];
  v12 = sub_10003F544((uint64_t *)&unk_100555120);
  BaseObjectGraph.inject<A>(_:)(v20, v12, v12);
  sub_10002099C(v20, v3 + 64);
  v13 = sub_10003F544((uint64_t *)&unk_1005588D0);
  BaseObjectGraph.inject<A>(_:)(v20, v13, v13);
  sub_10002099C(v20, v3 + 104);
  v14 = *(_OWORD *)(v3 + 32);
  v20[0] = *(_OWORD *)(v3 + 16);
  v20[1] = v14;
  v20[2] = *(_OWORD *)(v3 + 48);
  v15 = sub_1002DCE94();
  v17 = v16;
  v18 = v4[18];
  swift_retain();
  sub_10031081C(v4 + 8, (double *)v20, v4 + 13, (uint64_t)v15, v17, (uint64_t)sub_1002DD6B0, v18, a2);
  swift_release(v17);
  swift_release(v18);
  return v4;
}

double sub_1002DD6B0(uint64_t a1)
{
  return sub_1002DCF0C(a1);
}

uint64_t sub_1002DD6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  if (!v3
    || (v17[0] = v3,
        v4 = type metadata accessor for ContextActionsConfiguration(0),
        swift_retain(),
        v5 = sub_10003F544(&qword_10055E5F0),
        (swift_dynamicCast(&v14, v17, v4, v5, 6) & 1) == 0))
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_100286A6C((uint64_t)&v14);
  }
  if (!*((_QWORD *)&v15 + 1))
    return sub_100286A6C((uint64_t)&v14);
  sub_10002099C(&v14, (uint64_t)v17);
  v6 = v18;
  sub_10003A834(v17, v18);
  v7 = sub_1001B7E90(v6);
  if ((v8 & 1) == 0)
  {
    v9 = v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID;
    *(_QWORD *)v9 = v7;
    *(_BYTE *)(v9 + 8) = 0;
    v10 = InterestStateController.stateMachine(for:)();
    v11 = InterestStateMachine.currentState.getter();
    swift_release(v10);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState) = v11;
  }
  return sub_10003D380(v17);
}

uint64_t sub_1002DD7EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) != 0
    || (v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestState),
        (_DWORD)v1 == 4))
  {
    v2 = 0;
  }
  else
  {
    v3 = InterestState.rawValue.getter(v1);
    v5 = v4;
    v6 = InterestState.rawValue.getter(0);
    if (v3 == v6 && v5 == v7)
    {
      v2 = 1;
      v9 = v5;
    }
    else
    {
      v9 = v7;
      v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
    }
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v9);
  }
  return v2 & 1;
}

uint64_t sub_1002DD89C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[4]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestRepository));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_interestStateController));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002DD924()
{
  return type metadata accessor for UndoSuggestLessContextAction(0);
}

uint64_t type metadata accessor for UndoSuggestLessContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100561AB8;
  if (!qword_100561AB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UndoSuggestLessContextAction);
  return result;
}

uint64_t sub_1002DD968(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_1003D3FA0;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1003D3FB8;
    v4[4] = &unk_1003D3FD0;
    v4[5] = &unk_1003D3FE8;
    v4[6] = &unk_1003D4000;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002DDA24()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v5._object = (void *)0x800000010043B810;
  v1._object = (void *)0x800000010043B7F0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD000000000000011;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1002DDAD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002DDB18()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_contextActionType);
}

uint64_t sub_1002DDB2C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID + 8) & 1) == 0)
    return InterestRepository.undoSuggestLess(forAdamID:)(*(_QWORD *)(v0
                                                                    + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_adamID));
  return result;
}

double sub_1002DDB70()
{
  uint64_t v0;
  _QWORD *v1;
  double result;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration, v3, 0, 0);
  *(_QWORD *)&result = swift_retain(*v1).n128_u64[0];
  return result;
}

uint64_t sub_1002DDBB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1002DDC08(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts28UndoSuggestLessContextAction_configuration, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1002DDC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  _QWORD *v11;
  NSString v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  void **v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  void *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;

  v11 = (_QWORD *)swift_allocObject(&unk_1004BF818, 48, 7);
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a4;
  v11[5] = a5;
  if ((a3 & 0x100000000) != 0)
  {
    swift_bridgeObjectRetain(a2);
    swift_retain();
    v12 = String._bridgeToObjectiveC()();
    v20 = sub_1002DE25C;
    v21 = v11;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_1002DE078;
    v19 = &unk_1004BF830;
    v13 = _Block_copy(&v16);
    v15 = v21;
    swift_retain();
    objc_msgSend(v5, "asyncImageURLForKey:completionHandler:", v12, v13, swift_release(v15).n128_f64[0]);
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    swift_retain();
    v12 = String._bridgeToObjectiveC()();
    v20 = sub_1002DE25C;
    v21 = v11;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_1002DE078;
    v19 = &unk_1004BF858;
    v13 = _Block_copy(&v16);
    v14 = v21;
    swift_retain();
    swift_release(v14);
    objc_msgSend(v5, "asyncImageURLForKey:squareDimension:cacheKeyModifier:completionHandler:", v12, 0, v13, *(float *)&a3);
  }
  _Block_release(v13);
  swift_release(v11);

}

uint64_t sub_1002DDE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v26;
  void (*v27)(char *);

  v27 = a6;
  v9 = sub_10003F544(&qword_100553330);
  __chkstk_darwin();
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100036A44(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v18 = sub_100007A28((uint64_t)v13, (uint64_t *)&unk_100553DC0);
    v19 = static os_log_type_t.error.getter(v18);
    v20 = sub_100181038();
    v21 = (void *)static OS_os_log.downloads.getter(v20);
    v22 = sub_10003F544(&qword_1005559A0);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1003CA200;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_10003E198();
    *(_QWORD *)(v23 + 32) = a4;
    *(_QWORD *)(v23 + 40) = a5;
    *(_QWORD *)&v24 = swift_bridgeObjectRetain(a5).n128_u64[0];
    os_log(_:dso:log:_:_:)(v19, &_mh_execute_header, v21, "Could not fetch artwork for key %{public}s", 42, 2, v23, v24);

    swift_bridgeObjectRelease(v23);
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    v27(v11);
    return sub_100007A28((uint64_t)v11, &qword_100553330);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v14);
    swift_storeEnumTagMultiPayload(v11, v9, 0);
    v27(v11);
    sub_100007A28((uint64_t)v11, &qword_100553330);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_1002DE078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, __n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v14 = v13;
  v15 = swift_retain();
  v9(v7, v12, v14, v15);
  swift_release(v8);
  swift_bridgeObjectRelease(v14);
  return sub_100007A28((uint64_t)v7, (uint64_t *)&unk_100553DC0);
}

void sub_1002DE18C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1002DDC4C(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32), a4, a5);
}

double sub_1002DE1C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMTLibraryDefaultImageKey);
  v8 = v7;
  sub_1002DDC4C(v6, v7, a1 | ((HIDWORD(a1) & 1) << 32), a2, a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1002DE230()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002DE25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002DDE0C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(char *))(v3 + 32));
}

uint64_t sub_1002DE268(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  _OWORD v32[2];
  uint64_t v33;

  v6 = v5;
  v12 = sub_10003F544((uint64_t *)&unk_100562BF0);
  __chkstk_darwin(v12);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v15);
  v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ArtworkRequest(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_allocObject(&unk_1004BF8E8, 17, 7);
  *(_BYTE *)(v22 + 16) = 0;
  sub_100297098(v6, (uint64_t)v17);
  v23 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
  v33 = 0;
  memset(v32, 0, sizeof(v32));
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v17, 1, 0, v14, 0, _swiftEmptyArrayStorage, v32, a4, a5, v26);
  v27 = a1[3];
  v28 = a1[4];
  sub_10003A834(a1, v27);
  v29 = (_QWORD *)swift_allocObject(&unk_1004BF910, 40, 7);
  v29[2] = v22;
  v29[3] = a2;
  v29[4] = a3;
  swift_retain();
  v30 = swift_retain();
  ImageProvider.load(artwork:receiveImage:receiveCompletion:)(v21, sub_1002DE7B4, v29, 0, 0, v27, v28, v30);
  swift_release(v29);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return swift_release(v22);
}

uint64_t sub_1002DE4C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002C5E0();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1004BF898, 48, 7);
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a1;
  aBlock[4] = sub_1002DE76C;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF8B0;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  swift_retain();
  swift_retain();
  v19 = a1;
  v20 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_10017F258();
  v22 = sub_10003F544((uint64_t *)&unk_10055B200);
  v23 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1002DE6B4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = (_BYTE *)(a1 + 16);
  result = swift_beginAccess(a1 + 16, v10, 0, 0);
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess(v7, &v9, 1, 0);
    *v7 = 1;
    return a2(a4);
  }
  return result;
}

uint64_t sub_1002DE738()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002DE76C()
{
  uint64_t v0;

  return sub_1002DE6B4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002DE778()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002DE788()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002DE7B4(void *a1)
{
  uint64_t *v1;

  return sub_1002DE4C4(a1, v1[2], v1[3], v1[4]);
}

void sub_1002DE7C0()
{
  uint64_t v0;
  NSString v1;
  Class isa;
  id v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 88) = objc_msgSend(objc_allocWithZone((Class)MTButtonTableViewCell), "init", swift_retain().n128_f64[0]);
  swift_release(v0);
  *(_QWORD *)(v0 + 80) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 16) = 0xD000000000000019;
  *(_QWORD *)(v0 + 24) = 0x800000010042DEF0;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)MTDynamicTypeConstant), "initWithDefaultConstant:textStyle:", UIFontTextStyleBody, UITableViewAutomaticDimension);
  v1 = String._bridgeToObjectiveC()();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend((id)objc_opt_self(MTSettingsGroup), "groupWithTitle:footerText:settings:", v1, 0, isa);

  if (v3)
  {
    *(_QWORD *)(v0 + 40) = v3;
    swift_retain();
    sub_1002DEDC0();
    v4 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = v5;
    swift_release(v0);

  }
  else
  {
    __break(1u);
  }
}

double sub_1002DE914()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  double v11;
  double v12;
  double result;
  Swift::String v14;

  v1 = *(void **)(v0 + 88);
  v2 = objc_msgSend(v1, "buttonLabel");
  v3 = sub_1002DECE0();
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = v3;
  v7._object = v5;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14)._object;
  swift_bridgeObjectRelease(v5);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v1, "fittingSize");
  if (v12 != 0.0 || v11 != 0.0)
    return v11;
  objc_msgSend(*(id *)(v0 + 32), "currentConstant");
  return result;
}

void sub_1002DEA5C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_100244FC8();

}

void sub_1002DEAA0(char a1)
{
  uint64_t v1;
  NSString v2;
  Class isa;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  _BYTE v8[24];
  _BYTE v9[24];
  uint64_t v10;

  if ((a1 & 1) != 0)
  {
    v2 = String._bridgeToObjectiveC()();
    isa = Array._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend((id)objc_opt_self(MTSettingsGroup), "groupWithTitle:footerText:settings:", v2, 0, isa);

    if (!v4)
    {
      __break(1u);
      return;
    }
    v5 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v4;
  }
  else
  {
    sub_1002DEDC0();
    v5 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v6;
  }

  swift_beginAccess(v1 + 48, v8, 0, 0);
  sub_1001EA824(v1 + 48, (uint64_t)v9);
  if (v10)
  {
    sub_10000A520((uint64_t)v9, (uint64_t)v7);
    sub_10020FF2C((uint64_t)v9);
    sub_10003A834(v7, v7[3]);
    sub_1001A8AA4((uint64_t)&off_1004ACEB0, 100);
    swift_arrayDestroy(&unk_1004ACED0, 1, &type metadata for String);
    sub_10003D380(v7);
  }
  else
  {
    sub_10020FF2C((uint64_t)v9);
  }
}

uint64_t _s25AllowNotificationsSectionCMa()
{
  return objc_opt_self(_TtCC8Podcasts45MTNotificationSettingsSectionedViewController25AllowNotificationsSection);
}

unint64_t sub_1002DEC00()
{
  unint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = 0xD000000000000032;
  v1 = (void *)objc_opt_self(UIDevice);
  v2 = objc_msgSend(v1, "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3)
  {
    v4 = objc_msgSend(v1, "currentDevice");
    v5 = objc_msgSend(v4, "userInterfaceIdiom");

    if (v5 == (id)1)
      return 0xD000000000000030;
  }
  return v0;
}

unint64_t sub_1002DECE0()
{
  unint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = 0xD000000000000031;
  v1 = (void *)objc_opt_self(UIDevice);
  v2 = objc_msgSend(v1, "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3)
  {
    v4 = objc_msgSend(v1, "currentDevice");
    v5 = objc_msgSend(v4, "userInterfaceIdiom");

    if (v5 == (id)1)
      return 0xD00000000000002FLL;
  }
  return v0;
}

void sub_1002DEDC0()
{
  unint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  void *v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  NSString v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  Class isa;
  id v30;
  _QWORD aBlock[6];
  _BYTE v32[40];
  Swift::String v33;
  Swift::String v34;

  v0 = sub_1002DEC00();
  v2 = v1;
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v33._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = v0;
  v5._object = v2;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v33)._object;
  swift_bridgeObjectRelease(v2);

  v8 = (void *)objc_opt_self(MTSettingsGroup);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "footerAttributedString:", v9, swift_bridgeObjectRelease(object).n128_f64[0]);

  v11 = sub_10003F544((uint64_t *)&unk_100553780);
  inited = swift_initStackObject(v11, v32);
  *(_OWORD *)(inited + 16) = xmmword_1003CA250;
  v13 = (void *)objc_opt_self(MTSetting);
  v14 = sub_1002DECE0();
  v16 = v15;
  v17 = objc_msgSend(v3, "mainBundle");
  v34._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = v14;
  v18._object = v16;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v34)._object;
  swift_bridgeObjectRelease(v16);

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_1002DEA5C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BF928;
  v23 = _Block_copy(aBlock);
  v24 = objc_msgSend(v13, "appThemeButtonSettingWithTitle:identifier:changeHandler:", v21, v22, v23);
  _Block_release(v23);

  if (v24)
  {
    *(_QWORD *)(inited + 32) = v24;
    aBlock[0] = inited;
    specialized Array._endMutation()(v25);
    v26 = aBlock[0];
    v27 = v10;
    v28 = sub_100178E10(v26);
    swift_bridgeObjectRelease(v26);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v8, "groupWithTitle:footerText:settings:", 0, v27, isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    if (v30)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *DebouncedAutoDownloadProcessor.sharedInstance.unsafeMutableAddressor()
{
  if (qword_1005520E0 != -1)
    swift_once(&qword_1005520E0, sub_10000E4D4);
  return &static DebouncedAutoDownloadProcessor.sharedInstance;
}

id DebouncedAutoDownloadProcessor.__allocating_init(context:)(uint64_t a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor____lazy_storage___debouncedProcessor] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_debounceInterval] = 0x3FF0000000000000;
  v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_context] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

id static DebouncedAutoDownloadProcessor.sharedInstance.getter()
{
  if (qword_1005520E0 != -1)
    swift_once(&qword_1005520E0, sub_10000E4D4);
  return (id)static DebouncedAutoDownloadProcessor.sharedInstance;
}

uint64_t DebouncedAutoDownloadProcessor.isRunning.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning);
  swift_beginAccess(v0 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning, v3, 0, 0);
  return *v1;
}

uint64_t DebouncedAutoDownloadProcessor.isRunning.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DebouncedAutoDownloadProcessor.isRunning.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning, a1, 33, 0);
  return j__swift_endAccess;
}

id DebouncedAutoDownloadProcessor.init(context:)(uint64_t a1)
{
  _BYTE *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor____lazy_storage___debouncedProcessor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_debounceInterval] = 0x3FF0000000000000;
  v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_isRunning] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MTDebouncedAutoDownloadProcessor_context] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DebouncedAutoDownloadProcessor();
  return objc_msgSendSuper2(&v3, "init");
}

Swift::Void __swiftcall DebouncedAutoDownloadProcessor.reevaluate()()
{
  id v0;

  v0 = sub_1000055E8();
  dispatch thunk of DebouncedEpisodeAndShowProcessor.requestEvaluation()();
  swift_release(v0);
}

void DebouncedAutoDownloadProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Podcasts.DebouncedAutoDownloadProcessor", 39, "init()", 6, 0);
  __break(1u);
}

id DebouncedAutoDownloadProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebouncedAutoDownloadProcessor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1002DF3F8()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  result = objc_msgSend(v0, "setStyle:", 1);
  qword_100573098 = (uint64_t)v0;
  return result;
}

uint64_t sub_1002DF444()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(__n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  type metadata accessor for InteractionContext.Page(0);
  __chkstk_darwin();
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = type metadata accessor for InteractionContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_QWORD *)(v0 + 16)
    && *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText + 8))
  {
    swift_beginAccess(v0 + 24, v14, 0, 0);
    v7 = *(_QWORD *)(v0 + 24);
    if (v7)
    {
      v8 = *(void (**)(__n128))(*(_QWORD *)v7 + 168);
      v9 = swift_retain();
      v8(v9);
      swift_release(v7);
      InteractionContext.page.getter(v10);
      v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      LOBYTE(v7) = InteractionContext.Page.isTranscriptView.getter(v11);
      sub_10017603C((uint64_t)v2);
    }
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  return v7 & 1;
}

double sub_1002DF574()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33[24];

  *(_QWORD *)&result = swift_beginAccess(v0 + 24, v33, 0, 0).n128_u64[0];
  v2 = *(_QWORD *)(v0 + 24);
  if (v2)
  {
    v3 = type metadata accessor for TranscriptSelectionContextActionConfiguration(0);
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Podcasts45TranscriptSelectionContextActionConfiguration_selectedText), "string", swift_retain().n128_f64[0]);
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

      v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
      v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText + 8);
      *v10 = v7;
      v10[1] = v9;
      swift_bridgeObjectRelease(v11);
      if (qword_1005520E8 != -1)
        swift_once(&qword_1005520E8, sub_1002DF3F8);
      v12 = objc_msgSend((id)qword_100573098, "stringFromSeconds:", *(double *)(v5+ OBJC_IVAR____TtC8Podcasts45TranscriptSelectionContextActionConfiguration_referenceStartTime));
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;
      swift_release(v2);

      v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
      v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp + 8);
      *v16 = v13;
      v16[1] = v15;
    }
    else
    {
      v18 = type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration(0);
      v19 = swift_dynamicCastClass(v2, v18);
      if (!v19)
        return result;
      v20 = v19;
      v21 = objc_msgSend(*(id *)(v19+ direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.selectedText), "string", swift_retain().n128_f64[0]);
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v25 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
      v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText + 8);
      *v25 = v22;
      v25[1] = v24;
      swift_bridgeObjectRelease(v26);
      if ((*(_BYTE *)(v20
                     + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime
                     + 8) & 1) != 0)
      {
        swift_release(v2);
        v27 = 0;
        v28 = 0;
      }
      else
      {
        if (qword_1005520E8 != -1)
        {
          v32 = *(_QWORD *)(v20
                          + direct field offset for NowPlayingTranscriptSelectionContextActionConfiguration.referenceStartTime);
          swift_once(&qword_1005520E8, sub_1002DF3F8);
        }
        v29 = objc_msgSend((id)qword_100573098, "stringFromSeconds:", v32);
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v28 = v30;
        swift_release(v2);

      }
      v31 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
      v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp + 8);
      *v31 = v27;
      v31[1] = v28;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002DF7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD v23[33];
  uint64_t v24;

  v23[18] = a2;
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v23[20] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for URLQueryItem(0);
  v23[32] = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v23[27] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v23[26] = (char *)v23 - v7;
  __chkstk_darwin();
  v23[25] = (char *)v23 - v8;
  __chkstk_darwin();
  v23[24] = (char *)v23 - v9;
  __chkstk_darwin();
  v23[23] = (char *)v23 - v10;
  __chkstk_darwin();
  v23[22] = (char *)v23 - v11;
  __chkstk_darwin();
  v23[21] = (char *)v23 - v12;
  sub_10003F544(&qword_10055A410);
  __chkstk_darwin();
  v23[28] = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URLComponents(0);
  v23[29] = *(_QWORD *)(v14 - 8);
  v23[30] = v14;
  __chkstk_darwin();
  v23[19] = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v23[31] = (char *)v23 - v16;
  type metadata accessor for ShowOffer(0);
  __chkstk_darwin();
  type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin();
  if (a1)
  {
    v23[13] = v3;
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp);
    v18 = (char *)&loc_1002DFA90 + *((int *)qword_1002E1230 + *(unsigned __int8 *)(a1 + 32));
    v23[15] = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText);
    v23[14] = v17;
    __asm { BR              X10 }
  }
  v19 = sub_1002E1890();
  v20 = swift_allocError(&type metadata for TranscriptionErrorTTRContextAction.BuildURLError, v19, 0, 0);
  *v21 = 0;
  return swift_willThrow(v20);
}

uint64_t sub_1002E1240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  Class isa;
  _QWORD v14[4];

  sub_10003F544(qword_1005542D8);
  __chkstk_darwin();
  v14[3] = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  __chkstk_darwin();
  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  swift_retain();
  sub_1002DF7E4(v6, (uint64_t)v4);
  swift_release(v5);
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  v11 = sub_100138698((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1001F8128();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "openURL:options:completionHandler:", v10, isa, 0, swift_bridgeObjectRelease(v11).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1002E16BC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[8]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_selectedText
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_timestamp
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002E1754()
{
  return type metadata accessor for TranscriptionErrorTTRContextAction(0);
}

uint64_t type metadata accessor for TranscriptionErrorTTRContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100561E20;
  if (!qword_100561E20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TranscriptionErrorTTRContextAction);
  return result;
}

uint64_t sub_1002E1798(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1003D4150;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = &unk_1003D4168;
  result = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_1003D4168;
    v4[7] = &unk_1003D4168;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002E1838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts34TranscriptionErrorTTRContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002E187C()
{
  return 45;
}

unint64_t sub_1002E1890()
{
  unint64_t result;

  result = qword_100561F90;
  if (!qword_100561F90)
  {
    result = swift_getWitnessTable(&unk_1003D4228, &type metadata for TranscriptionErrorTTRContextAction.BuildURLError);
    atomic_store(result, (unint64_t *)&qword_100561F90);
  }
  return result;
}

uint64_t sub_1002E18D4(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

uint64_t sub_1002E195C(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  result = swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
    if (v10 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for LibraryEpisodeLockup(0);
    v11 = 0;
    do
    {
      v12 = v11 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v11);
      v11 = v12;
    }
    while (v7 != v12);
  }
  if (v4)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v13 = _CocoaArrayWrapper.subscript.getter(0, v7, v14);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  return v13;
}

uint64_t storeEnumTagSinglePayload for TranscriptionErrorTTRContextAction.BuildURLError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002E1B40 + 4 * byte_1003D40C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002E1B74 + 4 * asc_1003D40C0[v4]))();
}

uint64_t sub_1002E1B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E1B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E1B84);
  return result;
}

uint64_t sub_1002E1B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E1B98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002E1B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E1BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionErrorTTRContextAction.BuildURLError()
{
  return &type metadata for TranscriptionErrorTTRContextAction.BuildURLError;
}

unint64_t sub_1002E1BC4()
{
  unint64_t result;

  result = qword_100561F98;
  if (!qword_100561F98)
  {
    result = swift_getWitnessTable(&unk_1003D4200, &type metadata for TranscriptionErrorTTRContextAction.BuildURLError);
    atomic_store(result, (unint64_t *)&qword_100561F98);
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyTranscriptSelectionProvider()
{
  return &type metadata for CopyTranscriptSelectionProvider;
}

uint64_t sub_1002E1C18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t result;
  Swift::String v32;
  __n128 v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *object;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  Swift::String v57;
  void *v58;
  void *v59;
  __n128 v60;
  id v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  void *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  Swift::String v78;
  _QWORD aBlock[5];
  uint64_t v80;
  Swift::String v81;
  Swift::String v82;

  v72 = a6;
  v73 = a7;
  v70 = a4;
  v71 = a5;
  v68 = a2;
  v69 = a3;
  v10 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v10);
  v74 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  __chkstk_darwin(v12);
  v67 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CharacterSet(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.whitespacesAndNewlines.getter(v16);
  isa = CharacterSet._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v20 = objc_msgSend(a1, "attributedStringByTrimmingCharactersInCharacterSet:", isa);

  if (!v20)
    v20 = a1;
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  v21 = swift_allocObject(&unk_1004BFB90, 24, 7);
  *(_QWORD *)(v21 + 16) = 0;
  v22 = swift_allocObject(&unk_1004BFBB8, 17, 7);
  *(_BYTE *)(v22 + 16) = 0;
  v23 = (_BYTE *)(v22 + 16);
  v24 = (void *)static NSAttributedStringKey.contentType.getter();
  v25 = objc_msgSend(v20, "length");
  v26 = (_QWORD *)swift_allocObject(&unk_1004BFBE0, 56, 7);
  v26[2] = &v81;
  v26[3] = v20;
  v26[4] = v21;
  v26[5] = a8;
  v26[6] = v22;
  v27 = swift_allocObject(&unk_1004BFC08, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_1002E2878;
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = sub_100029B44;
  v80 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002E2994;
  aBlock[3] = &unk_1004BFC20;
  v28 = _Block_copy(aBlock);
  v29 = v80;
  v30 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(v29);
  objc_msgSend(v30, "enumerateAttribute:inRange:options:usingBlock:", v24, 0, v25, 0, v28);

  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v27, "", 116, 89, 84, 1);
  result = swift_release(v27);
  if ((v28 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess(v23, aBlock, 0, 0);
    if (*v23 == 1)
    {
      v32._countAndFlagsBits = 0x5DA680E25BLL;
      v32._object = (void *)0xA500000000000000;
      String.append(_:)(v32);
    }
    v78 = v81;
    v33 = swift_bridgeObjectRetain(v81._object);
    v34 = String.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v33);
    v36 = v35;
    swift_release(v21);
    swift_release(v22);
    object = v81._object;
    swift_release(v26);
    swift_bridgeObjectRelease(object);
    v81._countAndFlagsBits = 10256610;
    v81._object = (void *)0xA300000000000000;
    v38._countAndFlagsBits = v34;
    v38._object = v36;
    String.append(_:)(v38);
    swift_bridgeObjectRelease(v36);
    v39 = v81._object;
    swift_bridgeObjectRetain(v81._object);
    v40._countAndFlagsBits = 10322146;
    v40._object = (void *)0xA300000000000000;
    String.append(_:)(v40);
    swift_bridgeObjectRelease(v39);
    v41 = v81._object;
    v78._countAndFlagsBits = 10;
    v78._object = (void *)0xE100000000000000;
    v77[0] = 2570;
    v77[1] = 0xE200000000000000;
    v42 = sub_10016D37C();
    v43 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v78, v77, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v42, v42, v42);
    v45 = v44;
    swift_bridgeObjectRelease(v41);
    v81._countAndFlagsBits = v43;
    v81._object = v45;
    v46 = sub_1002E2A24(v68, v69, v70, v71, v72);
    v48 = v47;
    v49._countAndFlagsBits = 10;
    v49._object = (void *)0xE100000000000000;
    String.append(_:)(v49);
    v78._countAndFlagsBits = 10;
    v78._object = (void *)0xE100000000000000;
    v50._countAndFlagsBits = v46;
    v50._object = v48;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v48);
    v51 = v78._object;
    String.append(_:)(v78);
    swift_bridgeObjectRelease(v51);
    v52 = v74;
    sub_100007A64(v73, v74, (uint64_t *)&unk_100553DC0);
    v54 = v75;
    v53 = v76;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v52, 1, v76) == 1)
    {
      sub_100007A28(v52, (uint64_t *)&unk_100553DC0);
    }
    else
    {
      v55 = v67;
      v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 32))(v67, v52, v53);
      v57._countAndFlagsBits = URL.absoluteString.getter(v56);
      v58 = v57._object;
      v78._countAndFlagsBits = 10;
      v78._object = (void *)0xE100000000000000;
      String.append(_:)(v57);
      swift_bridgeObjectRelease(v58);
      v59 = v78._object;
      String.append(_:)(v78);
      v60 = swift_bridgeObjectRelease(v59);
      (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v55, v53, v60);
    }
    v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v82._countAndFlagsBits = 0xD00000000000002CLL;
    v82._object = (void *)0x800000010043BC50;
    v62._object = (void *)0x800000010043BC30;
    v62._countAndFlagsBits = 0xD00000000000001ELL;
    v63._countAndFlagsBits = 0;
    v63._object = (void *)0xE000000000000000;
    v64 = NSLocalizedString(_:tableName:bundle:value:comment:)(v62, (Swift::String_optional)0, (NSBundle)v61, v63, v82);

    v78._countAndFlagsBits = 10;
    v78._object = (void *)0xE100000000000000;
    String.append(_:)(v64);
    swift_bridgeObjectRelease(v64._object);
    v65 = v78._object;
    String.append(_:)(v78);
    swift_bridgeObjectRelease(v65);

    return v81._countAndFlagsBits;
  }
  return result;
}

uint64_t sub_1002E2218()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E2228()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002E2238(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v8 = sub_10003F544(&qword_1005522F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a2, "title");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0xE000000000000000;
  }
  v16 = objc_msgSend(a2, "author");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
  }
  v21 = objc_msgSend(a2, "pubDate");
  if (v21)
  {
    v22 = v21;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
  }
  else
  {
    v24 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
  }
  v25 = sub_1002E1C18(a1, v13, v15, v18, v20, (uint64_t)v10, a3, a4);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v20);
  sub_100007A28((uint64_t)v10, &qword_1005522F0);
  return v25;
}

double sub_1002E23F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double result;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unint64_t v41;
  void *v42;
  void *v43;
  unint64_t v44;
  __n128 v45;
  Swift::String v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  void *object;
  Swift::String v61;
  void *v62;
  uint64_t *v63;
  _QWORD v64[3];
  Swift::String v65;
  uint64_t v66;
  void *v67;
  Swift::String v68;

  v63 = a5;
  v16 = type metadata accessor for CharacterSet(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v64[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007A64(a1, (uint64_t)&v65, (uint64_t *)&unk_100552300);
  if (v67)
  {
    if (swift_dynamicCast(v64, &v65, (char *)&type metadata for Any + 8, &type metadata for TranscriptSelectionContentType, 6))
    {
      if ((v64[0] & 1) != 0)
      {
        v21 = objc_msgSend(a6, "attributedSubstringFromRange:", a2, a3);
        v22 = objc_msgSend(v21, "string");

        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        v26 = HIBYTE(v25) & 0xF;
        if ((v25 & 0x2000000000000000) == 0)
          v26 = v23;
        v27 = 7;
        if (((v25 >> 60) & ((v23 & 0x800000000000000) == 0)) != 0)
          v27 = 11;
        v28 = v27 | (v26 << 16);
        v29 = swift_allocObject(&unk_1004BFB90, 24, 7);
        *(_QWORD *)(v29 + 16) = v28;
        v65._countAndFlagsBits = v23;
        v65._object = (void *)v25;
        v64[0] = 15;
        v64[1] = v28;
        v30 = (_QWORD *)swift_allocObject(&unk_1004BFC58, 56, 7);
        v30[2] = a7;
        v30[3] = a8;
        v30[4] = v29;
        v30[5] = a9;
        v30[6] = a4;
        swift_retain();
        swift_retain();
        swift_retain();
        v31 = sub_10003F544(&qword_100561FA0);
        v32 = sub_10016D37C();
        v33 = sub_1002E2DB8();
        StringProtocol.enumerateSubstrings<A>(in:options:_:)(v64, 3, sub_1002E2D88, v30, &type metadata for String, v31, v32, v33);
        swift_release(v30);
        swift_beginAccess(v29 + 16, v64, 0, 0);
        v34 = String.subscript.getter(15, *(_QWORD *)(v29 + 16), v23, v25);
        v36 = v35;
        v38 = v37;
        v40 = v39;
        swift_bridgeObjectRelease(v25);
        v65._countAndFlagsBits = v34;
        v65._object = v36;
        v66 = v38;
        v67 = v40;
        v41 = sub_1002E2E04();
        String.append<A>(contentsOf:)(&v65, &type metadata for Substring, v41);
        swift_release(v29);
        v42 = v40;
      }
      else
      {
        v43 = (void *)v63[1];
        v65._countAndFlagsBits = *v63;
        v65._object = v43;
        v44 = sub_10016DD80();
        if ((Collection.isNotEmpty.getter(&type metadata for String, v44, v45) & 1) != 0)
        {
          v46._countAndFlagsBits = 10;
          v46._object = (void *)0xE100000000000000;
          String.append(_:)(v46);
        }
        v47 = objc_msgSend(a6, "attributedSubstringFromRange:", a2, a3, v63);
        v48 = objc_msgSend(v47, "string");

        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v65._countAndFlagsBits = v49;
        v65._object = v51;
        static CharacterSet.whitespacesAndNewlines.getter();
        v52 = sub_10016D37C();
        v53 = StringProtocol.trimmingCharacters(in:)(v19, &type metadata for String, v52);
        v55 = v54;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRelease(v65._object);
        v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v68._object = (void *)0xE100000000000000;
        v57._countAndFlagsBits = 0x4E4F4C4F43;
        v57._object = (void *)0xE500000000000000;
        v58._countAndFlagsBits = 0;
        v58._object = (void *)0xE000000000000000;
        v68._countAndFlagsBits = 58;
        v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v68);

        v65._countAndFlagsBits = v53;
        v65._object = v55;
        swift_bridgeObjectRetain(v55);
        String.append(_:)(v59);
        swift_bridgeObjectRelease(v55);
        swift_bridgeObjectRelease(v59._object);
        object = v65._object;
        swift_bridgeObjectRetain(v65._object);
        v61._countAndFlagsBits = 10;
        v61._object = (void *)0xE100000000000000;
        String.append(_:)(v61);
        swift_bridgeObjectRelease(object);
        v62 = v65._object;
        String.append(_:)(v65);
        v42 = v62;
      }
      *(_QWORD *)&result = swift_bridgeObjectRelease(v42).n128_u64[0];
    }
  }
  else
  {
    sub_100007A28((uint64_t)&v65, (uint64_t *)&unk_100552300);
  }
  return result;
}

uint64_t sub_1002E2844()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_1002E2878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002E23F4(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_1002E28A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12)
{
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v15 = (_QWORD *)(a8 + 16);
  result = swift_beginAccess(a8 + 16, v23, 1, 0);
  v17 = *(_QWORD *)(a8 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *v15 = v19;
    if (v19 == a9)
    {
      swift_beginAccess(a10 + 16, &v20, 1, 0);
      *(_QWORD *)(a10 + 16) = a4;
    }
    result = swift_beginAccess(v15, v22, 0, 0);
    if (*v15 > a9)
    {
      result = swift_beginAccess(a11 + 16, v21, 1, 0);
      *(_BYTE *)(a11 + 16) = 1;
      *a7 = 1;
      *a12 = 1;
    }
  }
  return result;
}

uint64_t sub_1002E2984()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E2994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType(a2, a2);
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain(a2);
  v9(&v11, a3, a4, a5);
  return sub_100007A28((uint64_t)&v11, (uint64_t *)&unk_100552300);
}

uint64_t sub_1002E2A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  Swift::String v34;
  __n128 v35;
  uint64_t v37;
  uint64_t countAndFlagsBits;
  Swift::String v39;
  Swift::String v40;

  v10 = sub_10003F544(&qword_1005522F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007A64(a5, (uint64_t)v12, &qword_1005522F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100007A28((uint64_t)v12, &qword_1005522F0);
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0x4F48535F4D4F5246;
    v18._object = (void *)0xEC00000050455F57;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v39._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v39);

    v21 = sub_10003F544(&qword_1005559A0);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1003CA220;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    v23 = sub_10003E198();
    *(_QWORD *)(v22 + 32) = a3;
    *(_QWORD *)(v22 + 40) = a4;
    *(_QWORD *)(v22 + 96) = &type metadata for String;
    *(_QWORD *)(v22 + 104) = v23;
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v22 + 72) = a1;
    *(_QWORD *)(v22 + 80) = a2;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a2);
    v24 = static String.localizedStringWithFormat(_:_:)(v20._countAndFlagsBits, v20._object, v22);
    swift_bridgeObjectRelease(v20._object);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v40._object = (void *)0xE000000000000000;
    v26._object = (void *)0x800000010043BC80;
    v26._countAndFlagsBits = 0xD000000000000011;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v40);
    countAndFlagsBits = v28._countAndFlagsBits;

    v29 = sub_10003F544(&qword_1005559A0);
    v30 = swift_allocObject(v29, 152, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1003CA240;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    v31 = sub_10003E198();
    v32 = a3;
    v33 = v31;
    *(_QWORD *)(v30 + 32) = v32;
    *(_QWORD *)(v30 + 40) = a4;
    *(_QWORD *)(v30 + 96) = &type metadata for String;
    *(_QWORD *)(v30 + 104) = v31;
    *(_QWORD *)(v30 + 64) = v31;
    *(_QWORD *)(v30 + 72) = a1;
    *(_QWORD *)(v30 + 80) = a2;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a2);
    v34 = Date.lessVerboseDisplayStringWithoutTime()();
    *(_QWORD *)(v30 + 136) = &type metadata for String;
    *(_QWORD *)(v30 + 144) = v33;
    *(Swift::String *)(v30 + 112) = v34;
    v24 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, v28._object, v30);
    swift_bridgeObjectRelease(v28._object);
    v35 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v35);
  }
  return v24;
}

uint64_t sub_1002E2D54()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002E2D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;

  return sub_1002E28A4(a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_BYTE **)(v7 + 48));
}

unint64_t sub_1002E2DB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100561FA8;
  if (!qword_100561FA8)
  {
    v1 = sub_10003CA40(&qword_100561FA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100561FA8);
  }
  return result;
}

unint64_t sub_1002E2E04()
{
  unint64_t result;

  result = qword_100561FB0;
  if (!qword_100561FB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_100561FB0);
  }
  return result;
}

uint64_t *ForegroundSyncUtil.shared.unsafeMutableAddressor()
{
  if (qword_1005520F0 != -1)
    swift_once(&qword_1005520F0, sub_10000597C);
  return &static ForegroundSyncUtil.shared;
}

id static ForegroundSyncUtil.shared.getter()
{
  if (qword_1005520F0 != -1)
    swift_once(&qword_1005520F0, sub_10000597C);
  return (id)static ForegroundSyncUtil.shared;
}

Swift::Void __swiftcall ForegroundSyncUtil.setNeedsSyncing()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR___MTForegroundSyncUtil_needsSyncing) = 1;
}

uint64_t ForegroundSyncUtil.lastExpectedFeedsUpdateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR___MTForegroundSyncUtil_lastExpectedFeedsUpdateDate;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ForegroundSyncUtil.lastExpectedFeedsUpdateDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR___MTForegroundSyncUtil_lastExpectedFeedsUpdateDate;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*ForegroundSyncUtil.lastExpectedFeedsUpdateDate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___MTForegroundSyncUtil_lastExpectedFeedsUpdateDate, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Void __swiftcall ForegroundSyncUtil.startCloudSyncAfterPrivacy()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  v13 = static OS_os_log.feedUpdate.getter();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    v28 = v8;
    v17 = v5;
    v18 = v1;
    v19 = v2;
    v20 = v3;
    v21 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Foreground Sync] Initiating cloud sync after privacy acknowledgement.", v16, 2u);
    v22 = v21;
    v3 = v20;
    v2 = v19;
    v1 = v18;
    v5 = v17;
    v8 = v28;
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v23 = swift_allocObject(&unk_1004BFC80, 24, 7);
  *(_QWORD *)(v23 + 16) = v1;
  aBlock[4] = sub_1002E4148;
  v33 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BFC98;
  v24 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v1);
  v31 = _swiftEmptyArrayStorage;
  v25 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_10003F544((uint64_t *)&unk_10055B200);
  v27 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v26, v27, v2, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  swift_release(v33);
}

id sub_1002E3480()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter;
  v2 = *(void **)(v0 + OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___MTForegroundSyncUtil____lazy_storage___formatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;

    v6 = (void *)sub_1002E3480();
    objc_msgSend(v6, "setDateStyle:", 2);

    v7 = (void *)sub_1002E3480();
    objc_msgSend(v7, "setTimeStyle:", 2);

    v8 = (void *)sub_1002E3480();
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

uint64_t sub_1002E3538()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR___MTForegroundSyncUtil_needsSyncing] = 0;
  v15 = *(_QWORD *)&v0[OBJC_IVAR___MTForegroundSyncUtil_workQueue];
  v9 = swift_allocObject(&unk_1004BFDE8, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_1002E41D0;
  v18 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004BFE00;
  v10 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100026844((unint64_t *)&qword_100556BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_10003F544((uint64_t *)&unk_10055B200);
  v13 = sub_10003AEC0((unint64_t *)&qword_100556BC0, (uint64_t *)&unk_10055B200);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v18);
}

void sub_1002E3728(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[3];
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = type metadata accessor for Podcasts(0);
  v11 = (void *)v5;
  v12 = sub_100026844((unint64_t *)&qword_100554040, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
  v6 = sub_1000242A8(v10);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, enum case for Podcasts.batchFeedFetch(_:), v5);
  LOBYTE(v5) = isFeatureEnabled(_:)(v10);
  sub_10003D380(v10);
  if ((v5 & 1) != 0 && !a3 && a1)
  {
    if (objc_msgSend(a1, "BOOLValue"))
    {
      v7 = sub_100005EC8(0, &qword_100553B78, &off_1004A43D0);
      v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v7), "sharedInstance");
      v12 = (uint64_t)sub_1002E387C;
      v13 = 0;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_10001C290;
      v11 = &unk_1004BFE78;
      v9 = _Block_copy(v10);
      objc_msgSend(v8, "updateAllMediaAPIPodcastsWithSource:started:", 24, v9);
      _Block_release(v9);

    }
  }
}

uint64_t sub_1002E387C(uint64_t a1)
{
  return sub_10001C2CC(a1, "[Foreground Sync] Started updating %ld out of date podcasts.");
}

Swift::Void __swiftcall ForegroundSyncUtil.updatePlaybackSettingIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  NSObject *v50;
  uint64_t v51;
  uint8_t *v52;
  uint8_t *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  NSObject *v60;
  NSObject *v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  double v72;
  int v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  NSString v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  NSString v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _OWORD v90[2];
  _QWORD v91[4];

  v1 = type metadata accessor for Logger(0);
  v89 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v3 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v86 - v4;
  __chkstk_darwin();
  v7 = (char *)&v86 - v6;
  __chkstk_darwin();
  v9 = (char *)&v86 - v8;
  __chkstk_darwin();
  v88 = (char *)&v86 - v10;
  v11 = sub_100005EC8(0, (unint64_t *)&unk_10055B1C0, off_1004A42F8);
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(v11), "sharedInstance");
  v13 = objc_msgSend(v12, "activeAccount");

  v14 = *(void **)(v0 + OBJC_IVAR___MTForegroundSyncUtil_defaults);
  ((void (*)(void))static String.Account.lastSignedInDSIDKey.getter)();
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  v18 = v14;
  v19 = objc_msgSend(v14, "stringForKey:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  if (!v19)
  {
    v21 = 0;
    v23 = 0;
    if (!v13)
      goto LABEL_13;
LABEL_5:
    v20 = -[NSObject ams_DSID](v13, "ams_DSID");
    if (!v20)
      goto LABEL_13;
    v24 = v20;
    v87 = v1;
    v25 = objc_msgSend(v20, "stringValue");

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    type metadata accessor for AnalyticsIdentifierManager(0);
    v29 = static AnalyticsIdentifierManager.hashDSIDWithSalt(_:)(v26, v28);
    v31 = v30;
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v28).n128_u64[0];
    if (!v31)
    {
      swift_bridgeObjectRelease(v23);
      v56 = static Logger.playback.getter(v55);
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.error.getter(v57);
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v59 = 0;
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "[Foreground Sync] Not setting Continuous Playback. Failed to hash DSID.", v59, 2u);
        swift_slowDealloc(v59, -1, -1);
        v60 = v13;
      }
      else
      {
        v60 = v57;
        v57 = v13;
      }
      v65 = v87;
      v66 = v89;

      (*(void (**)(char *, uint64_t))(v66 + 8))(v5, v65);
      return;
    }
    if (v23
      && (v21 == v29 && v23 == v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v29, v31, 0) & 1) != 0))
    {
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v23);
      v34 = static Logger.playback.getter(v33);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Foreground Sync] User hasn't changed. Not updating Continuous Playback setting.", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
        v38 = v13;
      }
      else
      {
        v38 = v35;
        v35 = v13;
      }
      v67 = v87;
      v68 = v89;

      (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v67);
      return;
    }
    v61 = v13;
    v62 = -[NSObject ams_accountFlagValueForAccountFlag:](v13, "ams_accountFlagValueForAccountFlag:", AMSAccountFlagUnderThirteen, v32);
    v63 = v87;
    if (v62)
    {
      v64 = v62;
      _bridgeAnyObjectToAny(_:)(v90, v62);
      swift_unknownObjectRelease(v64);
    }
    else
    {
      memset(v90, 0, sizeof(v90));
    }
    v69 = v18;
    v70 = v88;
    sub_10000773C((uint64_t)v90, (uint64_t)v91);
    v86 = v29;
    if (v91[3])
    {
      v71 = swift_dynamicCast(v90, v91, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
      if ((_DWORD)v71 && (v90[0] & 1) != 0)
      {
        *(_QWORD *)&v72 = swift_bridgeObjectRelease(v23).n128_u64[0];
        v73 = 1;
        goto LABEL_36;
      }
    }
    else
    {
      v71 = sub_1000485DC((uint64_t)v91);
    }
    if (!v23)
    {
      v79 = static Logger.playback.getter(v71);
      v75 = Logger.logObject.getter(v79);
      v80 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v75, v80))
      {
        v70 = v9;
        goto LABEL_43;
      }
      v77 = swift_slowAlloc(8, -1);
      *(_DWORD *)v77 = 67109120;
      LODWORD(v91[0]) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v91, (char *)v91 + 4, v77 + 4, v77 + 8);
      _os_log_impl((void *)&_mh_execute_header, v75, v80, "[Foreground Sync] User has changed but doesn't need setting reset. U13=%{BOOL}d", (uint8_t *)v77, 8u);
      v70 = v9;
LABEL_41:
      swift_slowDealloc(v77, -1, -1);
      v63 = v87;
LABEL_43:
      v78 = v89;
      goto LABEL_44;
    }
    *(_QWORD *)&v72 = swift_bridgeObjectRelease(v23).n128_u64[0];
    v73 = 0;
LABEL_36:
    v74 = static Logger.playback.getter(objc_msgSend(v69, "setBool:forKey:", v73 ^ 1u, kMTContinuousPlaybackEnabledKey, v72, v86));
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v75, v76))
    {
      v78 = v89;
      v61 = v13;
LABEL_44:

      (*(void (**)(char *, uint64_t))(v78 + 8))(v70, v63);
      v81 = String._bridgeToObjectiveC()();
      v82 = swift_bridgeObjectRelease(v31);
      static String.Account.lastSignedInDSIDKey.getter(v82);
      v84 = v83;
      v85 = String._bridgeToObjectiveC()();
      objc_msgSend(v69, "setObject:forKey:", v81, v85, swift_bridgeObjectRelease(v84).n128_f64[0]);

      return;
    }
    v77 = swift_slowAlloc(14, -1);
    *(_DWORD *)v77 = 67109376;
    LODWORD(v91[0]) = v73 ^ 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v91, (char *)v91 + 4, v77 + 4, v77 + 8);
    *(_WORD *)(v77 + 8) = 1024;
    LODWORD(v91[0]) = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v91, (char *)v91 + 4, v77 + 10, v77 + 14);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "[Foreground Sync] Setting Continuous Playback to %{BOOL}d for user U13=%{BOOL}d.", (uint8_t *)v77, 0xEu);
    v61 = v13;
    goto LABEL_41;
  }
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  if (v13)
    goto LABEL_5;
LABEL_13:
  v39 = v89;
  if (v23)
  {
    v91[0] = v21;
    v91[1] = v23;
    v40 = sub_10016DD80();
    v42 = Collection.isNotEmpty.getter(&type metadata for String, v40, v41);
    v43 = swift_bridgeObjectRelease(v23);
    if ((v42 & 1) != 0)
    {
      static String.Account.lastSignedInDSIDKey.getter(v43);
      v45 = v44;
      v46 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "setURL:forKey:", 0, v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

    }
  }
  v47 = static Logger.playback.getter(v20);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter();
  v50 = v13;
  if (os_log_type_enabled(v48, v49))
  {
    v51 = v1;
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "[Foreground Sync] Not setting Continuous Playback. No current signed in user.", v52, 2u);
    v53 = v52;
    v1 = v51;
    swift_slowDealloc(v53, -1, -1);
    v54 = v50;
  }
  else
  {
    v54 = v48;
    v48 = v13;
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v1);
}

id ForegroundSyncUtil.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ForegroundSyncUtil(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002E4124()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002E4148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR___MTForegroundSyncUtil_syncController;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___MTForegroundSyncUtil_syncController), "syncEverything");
  return objc_msgSend(*(id *)(v1 + v2), "startUPPSyncTimerAfterPrivacy");
}

uint64_t sub_1002E4188()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E41AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E41D0()
{
  uint64_t v0;

  return sub_10001C414(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002E4210(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  char *v40;
  _OWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  id v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  id v119;

  v6 = v5;
  v116 = a1;
  v117 = a5;
  v104 = a3;
  v9 = sub_10003F544((uint64_t *)&unk_100562030);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10003F544(&qword_1005564A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_10003F544((uint64_t *)&unk_100562040);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10003F544((uint64_t *)&unk_1005670B0);
  v105 = *(_QWORD *)(v17 - 8);
  v106 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10003F544((uint64_t *)&unk_100562050);
  v108 = *(_QWORD *)(v20 - 8);
  v109 = v20;
  __chkstk_darwin(v20);
  v107 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10003F544(&qword_1005670C0);
  v111 = *(_QWORD *)(v22 - 8);
  v112 = v22;
  __chkstk_darwin(v22);
  v110 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10003F544((uint64_t *)&unk_100562060);
  v114 = *(_QWORD *)(v24 - 8);
  v115 = v24;
  __chkstk_darwin(v24);
  v113 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = objc_msgSend(v6, "metadataObject");
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, "podcastEpisode");

    if (v28)
    {
      v29 = objc_msgSend(v28, "title");
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

      }
      else
      {
        v31 = 0;
        v33 = 0;
      }
      v37 = objc_msgSend(v28, "podcast");
      v100 = v6;
      v99 = a4;
      v98 = v31;
      v97 = v33;
      if (v37
        && (v38 = v37, v39 = objc_msgSend(v37, "author"), v38, v39))
      {
        v40 = v19;
        v41 = a2;
        v42 = objc_msgSend(v39, "name");

        if (v42)
        {
          v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          v88 = v43;

LABEL_13:
          v96 = objc_msgSend(v28, "isExplicitEpisode");
          *(_QWORD *)&v118 = sub_1002E5740();
          v44 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
          v90 = v44;
          v119 = (id)static OS_dispatch_queue.uiAssetPreparationQueue.getter(v44);
          v94 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
          v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56);
          v45 = (uint64_t)v15;
          v93(v15, 1, 1, v94);
          v46 = sub_10003F544((uint64_t *)&unk_100562080);
          v47 = sub_10002F9C8((unint64_t *)&unk_1005670D0, (uint64_t *)&unk_100562080, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
          v92 = sub_1000489AC();
          v48 = v101;
          v91 = v45;
          Publisher.receive<A>(on:options:)(&v119, v45, v46, v44, v47, v92);
          sub_100007A28(v45, &qword_1005564A0);

          swift_release(v118);
          v49 = v104;
          sub_10000A520(v104, (uint64_t)&v118);
          v50 = swift_allocObject(&unk_1004BFEB0, 104, 7);
          v51 = sub_10002099C(&v118, v50 + 16);
          v52 = v41[1];
          *(_OWORD *)(v50 + 56) = *v41;
          *(_OWORD *)(v50 + 72) = v52;
          *(_OWORD *)(v50 + 88) = v41[2];
          v53 = static Subscribers.Demand.unlimited.getter(v51);
          v54 = sub_10003F544((uint64_t *)&unk_1005670E0);
          v95 = v28;
          v55 = sub_10003F544((uint64_t *)&unk_100562090);
          v56 = sub_10002F9C8((unint64_t *)&unk_1005670F0, (uint64_t *)&unk_100562040, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v57 = sub_10002F9C8((unint64_t *)&unk_1005620A0, (uint64_t *)&unk_100562090, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
          v58 = v53;
          v59 = v103;
          Publisher.flatMap<A, B>(maxPublishers:_:)(v58, sub_1002E5AF8, v50, v103, v54, v55, v56, v57);
          swift_release(v50);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v59);
          sub_10000A520(v49, (uint64_t)&v118);
          v60 = swift_allocObject(&unk_1004BFED8, 104, 7);
          sub_10002099C(&v118, v60 + 16);
          v61 = v41[1];
          *(_OWORD *)(v60 + 56) = *v41;
          *(_OWORD *)(v60 + 72) = v61;
          *(_OWORD *)(v60 + 88) = v41[2];
          v62 = sub_10003F544((uint64_t *)&unk_100567100);
          v63 = sub_10002F9C8((unint64_t *)&unk_1005620B0, (uint64_t *)&unk_1005670B0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
          v64 = sub_10002F9C8((unint64_t *)&unk_100567110, (uint64_t *)&unk_100567100, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
          v65 = v106;
          v66 = v107;
          Publisher.catch<A>(_:)(sub_1002E5B04, v60, v106, v62, v63, v64);
          swift_release(v60);
          v67.n128_f64[0] = (*(double (**)(char *, uint64_t))(v105 + 8))(v40, v65);
          v68 = v90;
          *(_QWORD *)&v118 = static OS_dispatch_queue.main.getter(v67);
          v69 = v91;
          v93((char *)v91, 1, 1, v94);
          v70 = sub_10002F9C8(&qword_1005620C0, (uint64_t *)&unk_100562050, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
          v71 = v109;
          v72 = v110;
          Publisher.receive<A>(on:options:)(&v118, v69, v109, v68, v70, v92);
          sub_100007A28(v69, &qword_1005564A0);

          (*(void (**)(char *, uint64_t))(v108 + 8))(v66, v71);
          v73 = swift_allocObject(&unk_1004BFF00, 88, 7);
          v74 = v97;
          *(_QWORD *)(v73 + 16) = v98;
          *(_QWORD *)(v73 + 24) = v74;
          v75 = v88;
          *(_QWORD *)(v73 + 32) = v89;
          *(_QWORD *)(v73 + 40) = v75;
          *(_BYTE *)(v73 + 48) = v96;
          v76 = v100;
          v77 = v99;
          *(_QWORD *)(v73 + 56) = v100;
          *(_QWORD *)(v73 + 64) = v77;
          v78 = v116;
          *(_QWORD *)(v73 + 72) = v117;
          *(_QWORD *)(v73 + 80) = v78;
          v79 = v76;
          swift_retain();
          v80 = sub_10003F544(&qword_100560220);
          v81 = sub_10002F9C8(&qword_1005620C8, &qword_1005670C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v82 = v112;
          v83 = v113;
          Publisher.map<A>(_:)(sub_1002E5B4C, v73, v112, v80, v81);
          swift_release(v73);
          (*(void (**)(char *, uint64_t))(v111 + 8))(v72, v82);
          v84 = sub_10002F9C8((unint64_t *)&unk_1005620D0, (uint64_t *)&unk_100562060, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
          v85 = v115;
          v36 = Publisher.eraseToAnyPublisher()(v115, v84);

          (*(void (**)(char *, uint64_t))(v114 + 8))(v83, v85);
          return v36;
        }
      }
      else
      {
        v40 = v19;
        v41 = a2;
      }
      v89 = 0;
      v88 = 0;
      goto LABEL_13;
    }
  }
  v34 = sub_10003F544(&qword_100560220);
  Empty.init(completeImmediately:)(1, v34, &type metadata for Never, &protocol witness table for Never);
  v35 = sub_10002F9C8((unint64_t *)&unk_100562070, (uint64_t *)&unk_100562030, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
  v36 = Publisher.eraseToAnyPublisher()(v9, v35);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v36;
}

uint64_t sub_1002E4AB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD v45[5];

  v39 = a1;
  v44 = a4;
  v41 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F544((uint64_t *)&unk_100562BF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ArtworkRequest(0);
  v15 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10003F544((uint64_t *)&unk_100562120);
  v19 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  v43 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a2[3];
  v38 = a2[4];
  sub_10003A834(a2, v22);
  sub_100297098(v39, (uint64_t)v14);
  v23 = *a3;
  v24 = a3[1];
  v25 = a3[4];
  v26 = type metadata accessor for CropCode(0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 1, 1, v26);
  v28 = static Logger.artwork.getter(v27);
  v29 = static os_log_type_t.info.getter(v28);
  SignpostAndLogTrace(domain:level:)(v45, v8, v29);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v41);
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v14, 0, 0, v11, 0, _swiftEmptyArrayStorage, v45, v23, v24, v25);
  v30 = dispatch thunk of ImageProvider.load(artwork:)(v17, v22, v38);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v40);
  v45[0] = v30;
  v31 = sub_10003F544((uint64_t *)&unk_100562BB0);
  v32 = sub_10003F544((uint64_t *)&unk_1005670E0);
  v33 = sub_10002F9C8((unint64_t *)&unk_100562100, (uint64_t *)&unk_100562BB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_1002E5BEC, 0, v31, v32, v33);
  swift_release(v30);
  v34 = sub_10002F9C8((unint64_t *)&unk_100567160, (uint64_t *)&unk_100562120, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v35 = v42;
  v36 = Publisher.eraseToAnyPublisher()(v42, v34);
  result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v35);
  *v44 = v36;
  return result;
}

uint64_t sub_1002E4DBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  double *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a2;
  v56 = a3;
  v61 = sub_10003F544((uint64_t *)&unk_1005620E0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544((uint64_t *)&unk_100567130);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F544((uint64_t *)&unk_1005620F0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v60 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  static Logger.artwork.getter(v14);
  swift_errorRetain(v17);
  v18 = swift_errorRetain(v17);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v51 = v11;
    v21 = swift_slowAlloc(12, -1);
    v52 = v7;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v53 = v10;
    v24 = v23;
    v62 = v17;
    v63 = v23;
    v49 = v13;
    v50 = a4;
    *(_DWORD *)v22 = 136315138;
    swift_errorRetain(v17);
    v25 = sub_10003F544((uint64_t *)&unk_10055A340);
    v26 = String.init<A>(describing:)(&v62, v25);
    v28 = v27;
    v62 = sub_10003D274(v26, v27, &v63);
    a4 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v22 + 4, v22 + 12);
    v29 = v28;
    v11 = v51;
    swift_bridgeObjectRelease(v29);
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to load artwork, falling back to placeholder: %s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v30 = v24;
    v10 = v53;
    swift_slowDealloc(v30, -1, -1);
    v31 = v22;
    v7 = v52;
    swift_slowDealloc(v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v49);
  }
  else
  {
    swift_errorRelease(v17);
    swift_errorRelease(v17);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v13);
  }
  v32 = v55[3];
  v33 = v55[4];
  sub_10003A834(v55, v32);
  v34 = dispatch thunk of ImageProvider.placeholder(for:)(v32, v33, *v56, v56[1]);
  v63 = v34;
  v35 = sub_10003F544((uint64_t *)&unk_100562BB0);
  v36 = sub_10002F9C8((unint64_t *)&unk_100562100, (uint64_t *)&unk_100562BB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v37 = v57;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, 0, 0, sub_1002E5244, 0, 0, 0, v38, 0, 0, v35, v36);
  swift_release(v34);
  v39 = sub_10003F544((uint64_t *)&unk_1005670E0);
  v40 = sub_10002F9C8((unint64_t *)&unk_100567140, (uint64_t *)&unk_1005620E0, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v41 = v58;
  v42 = v61;
  Publisher.map<A>(_:)(sub_100183858, 0, v61, v39, v40);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v42);
  v63 = 0;
  v43 = sub_10002F9C8((unint64_t *)&unk_100562110, (uint64_t *)&unk_100567130, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v44 = v60;
  Publisher.replaceError(with:)(&v63, v7, v43);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v7);
  v45 = sub_10002F9C8((unint64_t *)&unk_100567150, (uint64_t *)&unk_1005620F0, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
  v46 = Publisher.eraseToAnyPublisher()(v10, v45);
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v44, v10);
  *a4 = v46;
  return result;
}

uint64_t sub_1002E5244(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  result = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  if (v7)
  {
    v8 = swift_errorRetain(v7);
    static Logger.artwork.getter(v8);
    swift_errorRetain(v7);
    v9 = swift_errorRetain(v7);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v20 = v7;
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      v19 = v12 + 4;
      swift_errorRetain(v7);
      v14 = sub_10003F544((uint64_t *)&unk_10055A340);
      v15 = String.init<A>(describing:)(&v20, v14);
      v17 = v16;
      v20 = sub_10003D274(v15, v16, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v19, v12 + 12);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "CRITICAL FAILURE: Unable to load placeholder image: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      swift_errorRelease(v7);
    }
    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

void sub_1002E5440(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  _BYTE *v27;
  uint64_t v28;
  void *v29;
  _BYTE *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD aBlock[5];
  uint64_t v46;
  id v47;

  v40 = a6;
  v39 = a4;
  v44 = a9;
  v42 = a8;
  v43 = a11;
  v41 = a10;
  v16 = sub_10003F544((uint64_t *)&unk_100555310);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CarPlayTemplateInfo.TemplateType(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  sub_100005EC8(0, (unint64_t *)&qword_100559F60, CPListItem_ptr);
  v24 = v23;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a5);
  v47 = sub_10037F130(a2, a3, v39, a5, v23);
  objc_msgSend(v47, "setExplicitContent:", v40 & 1);
  *(_QWORD *)v22 = a7;
  v22[8] = 2;
  swift_storeEnumTagMultiPayload(v22, v19, 2);
  v25 = objc_allocWithZone((Class)type metadata accessor for CarPlayTemplateInfo(0));
  v26 = a7;
  v27 = objc_msgSend(v25, "init");
  sub_10013BE30((uint64_t)v22, (uint64_t)v18, type metadata accessor for CarPlayTemplateInfo.TemplateType);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  v28 = (uint64_t)&v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type];
  swift_beginAccess(&v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_type], aBlock, 33, 0);
  sub_10017FE64((uint64_t)v18, v28);
  swift_endAccess(aBlock);
  v27[OBJC_IVAR____TtC8Podcasts19CarPlayTemplateInfo_playbackSource] = 9;
  sub_100005EC8(0, &qword_100554ED0, NSString_ptr);
  v29 = (void *)NSString.init(stringLiteral:)("templateInfo", 12, 2);
  v30 = v27;
  sub_10017FF38((uint64_t)v29, (uint64_t)v27);

  v31 = v47;
  v32 = swift_allocObject(&unk_1004BFF28, 32, 7);
  v33 = v41;
  *(_QWORD *)(v32 + 16) = v42;
  *(_QWORD *)(v32 + 24) = v33;
  aBlock[4] = sub_10017FF60;
  v46 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017FEAC;
  aBlock[3] = &unk_1004BFF40;
  v34 = _Block_copy(aBlock);
  v35 = v46;
  v36 = v31;
  swift_retain();
  swift_release(v35);
  objc_msgSend(v36, "setHandler:", v34);
  _Block_release(v34);

  v37 = v44;
  *v44 = v43;
  v37[1] = v36;
}

uint64_t sub_1002E5740()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v0 = sub_10003F544((uint64_t *)&unk_100562130);
  v37 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10003F544(&qword_100567170);
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F544(&qword_100562140);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F544(&qword_100562148);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v33 - v17;
  MPModelPodcastEpisode.showArtworkData.getter(v16);
  v19 = type metadata accessor for NowPlayingArtwork.Data(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_100007A28((uint64_t)v11, &qword_100562148);
LABEL_6:
    v26 = type metadata accessor for LibraryImageProviderError(0);
    v27 = sub_1002E5BA4();
    v28 = swift_allocError(v26, v27, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v29, enum case for LibraryImageProviderError.failedToPrepareImage(_:), v26);
    v38 = v28;
    v30 = sub_10003F544((uint64_t *)&unk_10055A340);
    Fail.init(error:)(&v38, v12, v30, &protocol self-conformance witness table for Error);
    v31 = sub_10002F9C8(&qword_100562158, (uint64_t *)&unk_100562130, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v25 = Publisher.eraseToAnyPublisher()(v0, v31);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v2, v0);
    return v25;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v11, v19) != enum case for NowPlayingArtwork.Data.model(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v11, v19);
  sub_10013BE30((uint64_t)v11, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  sub_100297098((uint64_t)v18, (uint64_t)v15);
  Just.init(_:)(v15, v12);
  v21 = sub_10003F544((uint64_t *)&unk_10055A340);
  v22 = v34;
  Just.setFailureType<A>(to:)(v21, v34, v21, &protocol self-conformance witness table for Error);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v22);
  v23 = sub_10002F9C8((unint64_t *)&unk_100562160, &qword_100562140, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
  v24 = v36;
  v25 = Publisher.eraseToAnyPublisher()(v36, v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v24);
  sub_1001D2CD0((uint64_t)v18);
  return v25;
}

uint64_t sub_1002E5AD4()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1002E5AF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1002E4AB0(a1, (_QWORD *)(v2 + 16), (double *)(v2 + 56), a2);
}

uint64_t sub_1002E5B04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1002E4DBC(a1, (_QWORD *)(v2 + 16), (double *)(v2 + 56), a2);
}

uint64_t sub_1002E5B10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

void sub_1002E5B4C(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1002E5440(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_1002E5B80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1002E5BA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100562150;
  if (!qword_100562150)
  {
    v1 = type metadata accessor for LibraryImageProviderError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryImageProviderError, v1);
    atomic_store(result, (unint64_t *)&qword_100562150);
  }
  return result;
}

uint64_t sub_1002E5BF4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for StationSortOrder(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 6)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *(unsigned int *)*(&off_1004BFF68 + (int)a1), v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t (*sub_1002E5CE0())(uint64_t a1)
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v1 = v0[32];
  v2 = v0[33];
  if (v1)
  {
    v3 = (uint64_t (*)(uint64_t))v0[32];
  }
  else
  {
    v4 = v0[30];
    v3 = sub_100181074;
    v0[32] = sub_100181074;
    v0[33] = v4;
    swift_retain_n(v4, 2);
    sub_10002CA30(0, v2);
  }
  sub_10002CA20(v1, v2);
  return v3;
}

uint64_t sub_1002E5D58()
{
  uint64_t v0;

  sub_10003F49C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  sub_10003D380((_QWORD *)(v0 + 136));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 176));
  swift_release(*(_QWORD *)(v0 + 192));
  sub_10003D380((_QWORD *)(v0 + 200));
  swift_release(*(_QWORD *)(v0 + 240));
  swift_release(*(_QWORD *)(v0 + 248));
  sub_10002CA30(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  return v0;
}

uint64_t sub_1002E5DC8()
{
  uint64_t v0;

  sub_1002E5D58();
  return swift_deallocClassInstance(v0, 272, 7);
}

uint64_t type metadata accessor for CarPlayEpisodesProvider()
{
  return objc_opt_self(_TtC8Podcasts23CarPlayEpisodesProvider);
}

uint64_t sub_1002E5E08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  _BYTE v38[72];

  v1 = sub_10003F544(&qword_100562260);
  v32 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10003F544(&qword_100562268);
  v35 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin();
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10003F544((uint64_t *)&unk_100562270);
  v36 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0[23];
  ObjectType = swift_getObjectType(v0[22], v9);
  sub_10016965C((uint64_t)(v0 + 2), (uint64_t)v38);
  v31 = dispatch thunk of LibraryDataProviderProtocol.episodeListSettingsPublisher(listType:)(v38, ObjectType, v8);
  v30 = dispatch thunk of LibraryDataProviderProtocol.episodeListShelfPublisher(episodeSettingsPublisher:pageSize:)(v31, v0[16], ObjectType, v8);
  v37[0] = v0[31];
  v37[1] = v30;
  v11 = sub_10003F544(&qword_100553988);
  v12 = sub_10003F544((uint64_t *)&unk_100555110);
  v13 = sub_10002F9C8(&qword_100562280, &qword_100553988, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v14 = sub_10002F9C8(&qword_1005564C0, (uint64_t *)&unk_100555110, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher.combineLatest<A>(_:)(v37, v11, v12, v13, v14);
  v15 = swift_allocObject(&unk_1004BFFD0, 24, 7);
  swift_weakInit(v15 + 16, v0);
  v16 = swift_allocObject(&unk_1004BFFF8, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1002E74C8;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = sub_10003F544((uint64_t *)&unk_100556430);
  v18 = sub_10002F9C8(&qword_100562288, &qword_100562260, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  Publisher.compactMap<A>(_:)(sub_1002E74F4, v16, v1, v17, v18);
  v19 = swift_release(v16);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v32 + 8))(v3, v1, v19);
  v21 = static Subscribers.Demand.unlimited.getter(v20);
  v22 = sub_10002F9C8((unint64_t *)&unk_100562290, &qword_100562268, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v23 = sub_10002F9C8(&qword_1005551B8, (uint64_t *)&unk_100556430, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v24 = v33;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v21, sub_100183D00, 0, v33, v17, v22, v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v24);
  v25 = sub_10002F9C8((unint64_t *)&unk_1005622A0, (uint64_t *)&unk_100562270, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v26 = v34;
  v27 = Publisher.eraseToAnyPublisher()(v34, v25);
  swift_release(v31);
  v28 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v7, v26, v28);
  return v27;
}

uint64_t sub_1002E6170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87[32];

  v4 = sub_10003F544(&qword_100553E28);
  v83 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v81 = v5;
  v82 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_10003F544((uint64_t *)&unk_1005622B0);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin();
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544((uint64_t *)&unk_100559FB0);
  __chkstk_darwin();
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_10003F544(&qword_1005622C0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10003F544(&qword_1005622C8);
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  __chkstk_darwin();
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10003F544(&qword_1005622D0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v75 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10003F544(&qword_1005622D8);
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  __chkstk_darwin();
  v77 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10003F544((uint64_t *)&unk_1005622E0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v87, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v23 = Strong;
    FRPOutput.content.getter(&v86, v4);
    v24 = v86;
    v84 = v86;
    v25 = sub_10003F544(&qword_100553E40);
    Loadable.item.getter(&v85, v25);
    sub_1002E751C(v24);
    v26 = v85;
    if (v85)
    {
      v67 = a1;
      v68 = v4;
      v27 = *(_QWORD *)(v85 + 16);
      v28 = type metadata accessor for ModernShelf(0);
      v29 = *(_QWORD *)(v28 - 8);
      if (v27)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v9, v26 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)), v28);
        v30 = 0;
      }
      else
      {
        v30 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v9, v30, 1, v28);
      v34 = swift_bridgeObjectRelease(v26);
      v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48))(v9, 1, v28, v34);
      if ((_DWORD)v35 == 1)
      {
        swift_release(v23);
        sub_100007A28((uint64_t)v9, (uint64_t *)&unk_100559FB0);
        return 0;
      }
      else
      {
        v36 = ModernShelf.items.getter(v35);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
        v84 = v36;
        v37 = sub_10003F544(&qword_10055D870);
        v38 = sub_10002F9C8((unint64_t *)&unk_1005622F8, &qword_10055D870, (uint64_t)&protocol conformance descriptor for [A]);
        Sequence.publisher.getter(v37, v38);
        swift_bridgeObjectRelease(v36);
        swift_retain();
        v40 = static Subscribers.Demand.unlimited.getter(v39);
        v41 = sub_10003F544(&qword_1005552C0);
        v42 = sub_10002F9C8(&qword_100562308, (uint64_t *)&unk_1005622B0, (uint64_t)&protocol conformance descriptor for Publishers.Sequence<A, B>);
        v43 = sub_10002F9C8((unint64_t *)&unk_1005552D0, &qword_1005552C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v44 = v40;
        v45 = v71;
        Publisher<>.flatMap<A>(maxPublishers:_:)(v44, sub_1002E752C, v23, v71, v41, v42, v43);
        v46 = swift_release(v23);
        (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v7, v45, v46);
        v47 = sub_100005EC8(0, (unint64_t *)&qword_100559F60, CPListItem_ptr);
        v48 = sub_10002F9C8(&qword_100562310, &qword_1005622C0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
        v49 = v72;
        Publisher.compactMap<A>(_:)(sub_100183858, 0, v72, v47, v48);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v49);
        v50 = sub_10002F9C8(&qword_100562318, &qword_1005622C8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
        v51 = v74;
        v52 = v75;
        Publisher.collect()(v74, v50);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v51);
        v54 = v82;
        v53 = v83;
        v55 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v67, v68);
        v56 = *(unsigned __int8 *)(v53 + 80);
        v57 = (v56 + 16) & ~v56;
        v58 = swift_allocObject(&unk_1004C0020, v57 + v81, v56 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v58 + v57, v54, v55);
        v59 = sub_10003F544(&qword_1005545E0);
        v60 = sub_10002F9C8(&qword_100562320, &qword_1005622D0, (uint64_t)&protocol conformance descriptor for Publishers.Collect<A>);
        v62 = v77;
        v61 = v78;
        Publisher.map<A>(_:)(sub_1002E7598, v58, v78, v59, v60);
        v63 = swift_release(v58);
        (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v52, v61, v63);
        v64 = sub_10002F9C8((unint64_t *)&unk_100562328, &qword_1005622D8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
        v65 = v80;
        v33 = Publisher.eraseToAnyPublisher()(v80, v64);
        swift_release(v23);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v65);
      }
    }
    else
    {
      swift_release(v23);
      return 0;
    }
  }
  else
  {
    v31 = sub_10003F544(&qword_1005545E0);
    Empty.init(completeImmediately:)(1, v31, &type metadata for Never, &protocol witness table for Never);
    v32 = sub_10002F9C8(&qword_1005622F0, (uint64_t *)&unk_1005622E0, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
    v33 = Publisher.eraseToAnyPublisher()(v18, v32);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return v33;
}

uint64_t sub_1002E6828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  int64x2_t v69;
  __int128 v70;
  __int128 v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v56 = a1;
  v55 = a3;
  v54 = sub_10003F544((uint64_t *)&unk_100555320);
  v53 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(unsigned __int8 *)(a2 + 80);
  sub_10000A520(v56, (uint64_t)v58);
  v59 = v6;
  v60 = v5;
  v61 = v8;
  v62 = v7;
  v63 = v10;
  v64 = v9;
  v65 = v11;
  v66 = v12;
  v67 = v13;
  LODWORD(v56) = v13;
  v50 = v6;
  v51 = v7;
  sub_100168ED4(v6, v5, v8, v7, v10, v9, v11, v12, v13);
  v14 = sub_10003F544(&qword_1005545F0);
  v15 = type metadata accessor for LibraryEpisodeLockup(0);
  if (swift_dynamicCast(&v73, v58, v14, v15, 0))
  {
    v17 = v73;
    v18 = sub_1002E6C9C(a2);
    v19 = a2 + 136;
    v20 = *(_QWORD *)(a2 + 192);
    v68 = *(_OWORD *)(a2 + 88);
    v21 = *(_OWORD *)(a2 + 120);
    v69 = *(int64x2_t *)(a2 + 104);
    v70 = v21;
    v22 = a2 + 200;
    v23 = sub_1002E5CE0();
    v25 = v24;
    v26 = sub_1002F8AB8(v19, v20, 1, 0, v18, &v68, v22, (uint64_t)v23, v24);
    swift_release(v25);
    swift_release(v17);
    *v55 = v26;
LABEL_3:
    sub_10003F49C(v59, v60, v61, v62, v63, v64, v65, v66, v67);
    return sub_10003D380(v58);
  }
  v28 = type metadata accessor for LibraryShowLockup(0, v16);
  if (swift_dynamicCast(&v57, v58, v14, v28, 0))
  {
    if ((_DWORD)v56 == 9)
    {
      v30 = v10 | v9 | v11;
      if (!(v8 | v5 | v50 | v51 | v30 | v12))
      {
        v31 = a2 + 136;
        v32 = v57;
        v43 = LibraryShowLockup.uuid.getter(v29);
        v35 = v44;
        *(_QWORD *)&v68 = v43;
        *((_QWORD *)&v68 + 1) = v44;
        v69 = vdupq_n_s64(2uLL);
        v70 = 0u;
        v71 = 0u;
        v72 = 7;
        v45 = *(_OWORD *)(a2 + 104);
        v73 = *(_OWORD *)(a2 + 88);
        v74 = v45;
        v75 = *(_OWORD *)(a2 + 120);
        v37 = a2 + 200;
        goto LABEL_14;
      }
      if (v50 == 4 && !(v8 | v5 | v51 | v30 | v12))
      {
        v31 = a2 + 136;
        v32 = v57;
        v33 = LibraryShowLockup.uuid.getter(v29);
        v35 = v34;
        *(_QWORD *)&v68 = v33;
        *((_QWORD *)&v68 + 1) = v34;
        v69 = (int64x2_t)xmmword_1003D4360;
        v70 = 0u;
        v71 = 0u;
        v72 = 7;
        v36 = *(_OWORD *)(a2 + 104);
        v73 = *(_OWORD *)(a2 + 88);
        v74 = v36;
        v37 = a2 + 200;
        v75 = *(_OWORD *)(a2 + 120);
LABEL_14:
        v46 = sub_1002E5CE0();
        v48 = v47;
        v49 = sub_1002F99C8(v31, (uint64_t)&v68, 0, &v73, v37, (uint64_t)v46, v47);
        swift_bridgeObjectRelease(v35);
        swift_release(v48);
        swift_release(v32);
        *v55 = v49;
        goto LABEL_3;
      }
    }
    swift_release(v57);
  }
  *(_QWORD *)&v68 = 0;
  v38 = sub_10003F544(&qword_100559FA0);
  v39 = v52;
  Just.init(_:)(&v68, v38);
  v40 = sub_10002F9C8((unint64_t *)&unk_100555330, (uint64_t *)&unk_100555320, (uint64_t)&protocol conformance descriptor for Just<A>);
  v41 = v54;
  v42 = Publisher.eraseToAnyPublisher()(v54, v40);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v41);
  *v55 = v42;
  return sub_100007A28((uint64_t)v58, &qword_100562338);
}

uint64_t sub_1002E6C9C(uint64_t a1)
{
  int v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(a1 + 80) - 4;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  result = 7;
  switch(v1)
  {
    case 0:
      result = 10;
      break;
    case 1:
      return result;
    case 3:
      if (v3 == 3)
        v6 = 6;
      else
        v6 = 0;
      if (v3 == 2)
        v6 = 4;
      if (v4 == 2)
        result = v6;
      else
        result = 0;
      break;
    case 5:
      v8 = *(_QWORD *)(a1 + 64);
      v7 = *(_QWORD *)(a1 + 72);
      v10 = *(_QWORD *)(a1 + 48);
      v9 = *(_QWORD *)(a1 + 56);
      v12 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v13 = v4 | v3;
      v14 = v8 | v9 | v10;
      if (v13 | v12 | v7 | v14 | v11)
      {
        v15 = v13 | v7 | v14 | v11;
        if (v12 != 1 || v15)
        {
          if (v12 != 3 || v15)
          {
            if (v12 != 4 || v15)
              goto LABEL_22;
            result = 6;
          }
          else
          {
            result = 5;
          }
        }
        else
        {
          result = 8;
        }
      }
      else
      {
        result = 4;
      }
      break;
    default:
LABEL_22:
      result = 0;
      break;
  }
  return result;
}

void sub_1002E6D84(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  Class isa;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F544((uint64_t *)&unk_100559FB0);
  __chkstk_darwin();
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = sub_10003F544(&qword_100553E28);
  FRPOutput.content.getter(&v72, v11);
  v12 = v72;
  v70 = v72;
  v13 = sub_10003F544(&qword_100553E40);
  Loadable.item.getter(&v71, v13);
  sub_1002E751C(v12);
  v14 = v71;
  if (v71)
  {
    v15 = *(_QWORD *)(v71 + 16);
    v16 = type metadata accessor for ModernShelf(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (v15)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v9, v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, v18, 1, v16);
    v19 = swift_bridgeObjectRelease(v14);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v9, 1, v16, v19);
    if ((_DWORD)v20 == 1)
    {
      sub_100007A28((uint64_t)v9, (uint64_t *)&unk_100559FB0);
      goto LABEL_35;
    }
    v21 = ModernShelf.items.getter(v20);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    v22 = (uint64_t)sub_10034F548(v21);
    swift_bridgeObjectRelease(v21);
    if (v22)
    {
      if ((unint64_t)v22 >> 62)
      {
        if (v22 >= 0)
          v45 = v22 & 0xFFFFFFFFFFFFFF8;
        else
          v45 = v22;
        swift_bridgeObjectRetain(v22);
        v24 = _CocoaArrayWrapper.endIndex.getter(v45);
        v23 = v24;
        if (v24)
        {
LABEL_10:
          if (v23 < 1)
          {
            __break(1u);
            swift_bridgeObjectRelease(v24);
            swift_release(v72);
            __break(1u);
            return;
          }
          v67 = v5;
          v68 = v4;
          v69 = a2;
          if ((v22 & 0xC000000000000001) != 0)
          {
            v25 = 0;
            v26 = _swiftEmptyArrayStorage;
            do
            {
              v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
              v30 = LegacyLockup.title.getter(v28, v29);
              v32 = v31;
              swift_unknownObjectRelease(v28);
              if (v32)
              {
                if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
                  v26 = sub_10027AE00(0, v26[2] + 1, 1, v26);
                v34 = v26[2];
                v33 = v26[3];
                if (v34 >= v33 >> 1)
                  v26 = sub_10027AE00((_QWORD *)(v33 > 1), v34 + 1, 1, v26);
                v26[2] = v34 + 1;
                v27 = &v26[2 * v34];
                v27[4] = v30;
                v27[5] = v32;
              }
              ++v25;
            }
            while (v23 != v25);
          }
          else
          {
            v35 = 0;
            v26 = _swiftEmptyArrayStorage;
            do
            {
              v37 = *(_QWORD *)(v22 + 8 * v35 + 32);
              swift_retain();
              v40 = LegacyLockup.title.getter(v38, v39);
              v42 = v41;
              swift_release(v37);
              if (v42)
              {
                if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
                  v26 = sub_10027AE00(0, v26[2] + 1, 1, v26);
                v44 = v26[2];
                v43 = v26[3];
                if (v44 >= v43 >> 1)
                  v26 = sub_10027AE00((_QWORD *)(v43 > 1), v44 + 1, 1, v26);
                v26[2] = v44 + 1;
                v36 = &v26[2 * v44];
                v36[4] = v40;
                v36[5] = v42;
              }
              ++v35;
            }
            while (v23 != v35);
          }
          swift_bridgeObjectRelease_n(v22, 2);
          v4 = v68;
          a2 = v69;
          v5 = v67;
          if (v10 < 0)
            goto LABEL_48;
          goto LABEL_36;
        }
      }
      else
      {
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v22);
        if (v23)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease_n(v22, 2);
    }
  }
LABEL_35:
  v26 = _swiftEmptyArrayStorage;
  if (v10 < 0)
  {
LABEL_48:
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v10);
    v46 = (uint64_t)sub_1001F9A98(v63);
    swift_bridgeObjectRelease(v10);
    goto LABEL_38;
  }
LABEL_36:
  if ((v10 & 0x4000000000000000) != 0)
    goto LABEL_48;
  v46 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v10);
LABEL_38:
  v72 = v46;
  sub_1001FCB68(&v72, v26);
  swift_bridgeObjectRelease_n(v26, 2);
  v47 = v72;
  v48 = sub_100005EC8(0, (unint64_t *)&qword_100554A00, OS_os_log_ptr);
  static OS_os_log.carPlay.getter(v48);
  v49 = swift_retain_n(v47, 2);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v52 = 134217984;
    if (v47 < 0 || (v47 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain(v47);
      v53 = _CocoaArrayWrapper.endIndex.getter(v65);
      swift_release(v47);
    }
    else
    {
      v53 = *(_QWORD *)(v47 + 16);
    }
    swift_release(v47);
    v72 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v52 + 4, v52 + 12);
    swift_release(v47);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "CarPlayEpisodesProvider: section total items count is %ld.", v52, 0xCu);
    swift_slowDealloc(v52, -1, -1);

  }
  else
  {

    swift_release_n(v47, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v54 = sub_10003F544((uint64_t *)&unk_100553780);
  v55 = swift_allocObject(v54, 40, 7);
  *(_OWORD *)(v55 + 16) = xmmword_1003CA250;
  swift_bridgeObjectRetain(v47);
  if (v47 < 0 || (v47 & 0x4000000000000000) != 0)
  {
    v64 = sub_10003F544(&qword_1005544F0);
    v57 = _bridgeCocoaArray<A>(_:)(v47, v64);
    swift_release(v47);
  }
  else
  {
    v57 = v47;
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v56);
  }
  swift_release(v47);
  v58 = objc_allocWithZone((Class)CPListSection);
  v59 = sub_100180784(v57);
  swift_bridgeObjectRelease(v57);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v61 = objc_msgSend(v58, "initWithItems:", isa, swift_bridgeObjectRelease(v59).n128_f64[0]);

  *(_QWORD *)(v55 + 32) = v61;
  v72 = v55;
  specialized Array._endMutation()(v62);
  *a2 = v72;
}

uint64_t sub_1002E73B4()
{
  return sub_1002E5E08();
}

uint64_t sub_1002E73D4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544((uint64_t *)&unk_1005550F0);
  v1 = sub_10002F9C8(&qword_100554FB0, (uint64_t *)&unk_1005550F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1002E7444()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544((uint64_t *)&unk_100555110);
  v1 = sub_10002F9C8(&qword_100562258, (uint64_t *)&unk_100555110, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Subject<>.send()(v0, v1);
}

uint64_t sub_1002E74A4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E74C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E6170(a1, v1);
}

uint64_t sub_1002E74D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E74F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

unint64_t sub_1002E751C(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1002E752C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1002E6828(a1, v2, a2);
}

uint64_t sub_1002E7534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10003F544(&qword_100553E28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002E7598(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_10003F544(&qword_100553E28);
  sub_1002E6D84(a1, a2);
}

uint64_t sub_1002E75E8(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18[3];

  v4 = v3;
  v7 = sub_10003F544((uint64_t *)&unk_1005550F0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)(v3 + 240) = PassthroughSubject.init()(v8);
  v9 = sub_10003F544((uint64_t *)&unk_100555110);
  v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v11 = CurrentValueSubject.init(_:)(v10);
  *(_QWORD *)(v3 + 256) = 0;
  *(_QWORD *)(v3 + 264) = 0;
  *(_QWORD *)(v3 + 248) = v11;
  sub_10016965C(a2, v3 + 16);
  v12 = a3[1];
  *(_OWORD *)(v3 + 88) = *a3;
  *(_OWORD *)(v3 + 104) = v12;
  *(_OWORD *)(v3 + 120) = a3[2];
  v13 = sub_10003F544((uint64_t *)&unk_100555120);
  sub_1001860CC(a2);
  BaseObjectGraph.inject<A>(_:)(v18, v13, v13);
  sub_10002099C(v18, v4 + 136);
  v14 = sub_10003F544(&qword_1005609B0);
  BaseObjectGraph.inject<A>(_:)(v18, v14, v14);
  *(_OWORD *)(v4 + 176) = v18[0];
  v15 = sub_10003F544(&qword_100553720);
  BaseObjectGraph.inject<A>(_:)(v18, v15, v15);
  *(_QWORD *)(v4 + 192) = *(_QWORD *)&v18[0];
  v16 = sub_10003F544((uint64_t *)&unk_1005588D0);
  BaseObjectGraph.inject<A>(_:)(v18, v16, v16);
  sub_10002099C(v18, v4 + 200);
  return v4;
}

void sub_1002E7734()
{
  void *v0;
  id v1;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "reportBrowse:", v1);

}

_QWORD *sub_1002E776C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  specialized ContiguousArray.reserveCapacity(_:)(0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
LABEL_7:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_12;
        v7 = sub_1002E7904(v3, v4);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v9 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized ContiguousArray._endMutation()(v10);
        ++v3;
        if (v6 == v2)
          goto LABEL_17;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      if (a1 < 0)
        v11 = a1;
      else
        v11 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v2 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (!v2)
        goto LABEL_17;
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *ChannelLockupGenerator.channelLockups(for:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;

  swift_bridgeObjectRetain(a1);
  v3 = sub_1002E776C(v2);
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_1002E7904(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD);
  __n128 v24;
  unint64_t *v25;
  unint64_t *v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  void (*v32)(_QWORD *, _QWORD);
  void (*v33)(_QWORD *, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  _QWORD v38[3];
  uint64_t v39;

  v4 = type metadata accessor for MetricsData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationFields(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LegacyChannelLockup(0);
  v13 = sub_100322244(a2, 1);
  swift_retain();
  dispatch thunk of LegacyLockup.clickAction.getter(v38, v14);
  swift_release(v13);
  if (v39)
  {
    v15 = sub_10003F544(&qword_100554920);
    v16 = type metadata accessor for FlowAction(0);
    if ((swift_dynamicCast(v37, v38, v15, v16, 6) & 1) != 0)
    {
      v34 = v4;
      v35 = v9;
      v36 = v8;
      v17 = v37[0];
      v39 = v12;
      v38[0] = v13;
      v18 = swift_retain();
      v19 = FlowAction.generateClickEventWithItemLevelFields(sender:interactionView:)(v38, 7, v18);
      sub_100007A28((uint64_t)v38, (uint64_t *)&unk_100552300);
      v39 = v12;
      v38[0] = v13;
      v20 = swift_retain();
      FlowAction.generateItemLevelLocationFields(locationPosition:sender:interactionView:)(a1, v38, 7, v20);
      sub_100007A28((uint64_t)v38, (uint64_t *)&unk_100552300);
      v21 = swift_retain();
      v22 = LocationFields.metricsFields.getter(v21);
      v39 = sub_10003F544(&qword_1005549E0);
      v38[0] = v22;
      v23 = (void (*)(_QWORD *, _QWORD))dispatch thunk of MetricsEvent.eventFields.modify(v37);
      sub_100214438((uint64_t)v38, 0x6E6F697461636F6CLL, 0xE800000000000000);
      v23(v37, 0);
      swift_release(v19);
      v24 = swift_retain();
      dispatch thunk of MetricsEvent.metricsData.getter(v24);
      v33 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Action.actionMetrics.modify(v38);
      v32 = (void (*)(_QWORD *, _QWORD))ActionMetrics.data.modify(v37);
      v26 = v25;
      v27 = *v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
      *v26 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_10027BD98(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        *v26 = v27;
      }
      v30 = *(_QWORD *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 24);
      if (v30 >= v29 >> 1)
      {
        v27 = sub_10027BD98(v29 > 1, v30 + 1, 1, v27);
        *v26 = v27;
      }
      *(_QWORD *)(v27 + 16) = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v30, v7, v34);
      v32(v37, 0);
      v33(v38, 0);
      swift_release(v19);
      swift_release_n(v17, 2);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
    }
  }
  else
  {
    sub_100007A28((uint64_t)v38, (uint64_t *)&unk_100554FF0);
  }
  return v13;
}

_QWORD *sub_1002E7C3C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100048628(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    v15 = v1 & 0xC000000000000001;
    v5 = v1;
    while (v2 != v4)
    {
      if (v15)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        v7 = swift_retain(v6);
      }
      v8 = LibraryEpisodeLockup.uuid.getter(v7);
      v10 = v9;
      swift_release(v6);
      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_100048628(v11 > 1, v12 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      v1 = v5;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v14 = v1;
    else
      v14 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E7DAC(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];
  char v18;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v7)
      return swift_release(v1);
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      v2 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release(v1);
      v15 = *(_QWORD *)(v3 + 8 * v2);
      if (!v15)
      {
        v2 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release(v1);
        v15 = *(_QWORD *)(v3 + 8 * v2);
        if (!v15)
        {
          v2 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release(v1);
          v15 = *(_QWORD *)(v3 + 8 * v2);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v15 - 1) & v15;
    v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 24 * v9;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(_BYTE *)(v10 + 16);
    sub_10003CAD8(*(_QWORD *)v10, v12, v13);
    sub_10035D398((uint64_t)v17, v11, v12, v13);
    result = sub_10003CA84(v17[0], v17[1], v18);
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release(v1);
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v2 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v2 >= v7)
      return swift_release(v1);
    v15 = *(_QWORD *)(v3 + 8 * v2);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_1002E7F38(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, double a5)
{
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  objc_class *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v124;
  void (*v125)(char *);
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t ObjectType;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  __int128 v168;
  objc_super v169;
  _OWORD v170[4];
  char v171;

  v165 = a4;
  v167 = a3;
  v129 = a2;
  v166 = a1;
  ObjectType = swift_getObjectType(v5, a2);
  v162 = type metadata accessor for Logger(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_10003F544(&qword_1005624D0);
  v151 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v149 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for Publishers.PrefetchStrategy(0);
  v146 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v144 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10003F544(&qword_1005564A0);
  __chkstk_darwin(v11);
  v138 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_10003F544(&qword_1005624D8);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_10003F544(&qword_1005624E0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v134 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_10003F544(&qword_1005624E8);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_10003F544(&qword_1005624F0);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v142 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_10003F544(&qword_1005624F8);
  v150 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v147 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10003F544(&qword_100562500);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for EpisodeListSettings(0);
  v128 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v127 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v24 = *(_QWORD *)(v23 - 8);
  v126 = (char *)v23;
  __chkstk_darwin(v23);
  v26 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = (uint64_t)v5;
  v122 = OBJC_IVAR____TtC8Podcasts13WidgetManager_playerController;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Podcasts13WidgetManager_playerController] = 0;
  v164 = OBJC_IVAR____TtC8Podcasts13WidgetManager_workQueue;
  v30 = sub_100005EC8(0, (unint64_t *)&qword_100555190, OS_dispatch_queue_ptr);
  v31 = v5;
  static DispatchQoS.userInitiated.getter();
  v124 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  v125 = *(void (**)(char *))(v24 + 104);
  v125(v26);
  *(_QWORD *)&v170[0] = _swiftEmptyArrayStorage;
  v32 = sub_100026844((unint64_t *)&qword_1005521B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v33 = sub_10003F544(&qword_100555A00);
  v34 = sub_10002F9C8((unint64_t *)&qword_1005521C0, &qword_100555A00, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v170, v33, v34, v20, v32);
  v35 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000017, 0x800000010043BF70, v29, v22, v26, 0);
  *(_QWORD *)(v163 + v164) = v35;
  v123 = OBJC_IVAR____TtC8Podcasts13WidgetManager_refreshQueue;
  static DispatchQoS.userInitiated.getter();
  ((void (*)(char *, _QWORD, char *))v125)(v26, v124, v126);
  *(_QWORD *)&v170[0] = _swiftEmptyArrayStorage;
  v36 = v33;
  v37 = v129;
  dispatch thunk of SetAlgebra.init<A>(_:)(v170, v36, v34, v20, v32);
  v164 = v30;
  v38 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ALL, 0x800000010043BF90, v29, v22, v26, 0);
  *(_QWORD *)&v31[v123] = v38;
  v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_waitToReloadUntilSave] = 0;
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_seenEpisodeUUIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_subscriptions] = _swiftEmptyArrayStorage;
  v39 = OBJC_IVAR____TtC8Podcasts13WidgetManager_artworkPrefetchReceiver;
  v40 = sub_10003F544(&qword_100562508);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  *(_QWORD *)&v31[v39] = PassthroughSubject.init()();
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_artworkPrefetchPipeline] = 0;
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_playerSubscriptions] = _swiftEmptyArrayStorage;
  v41 = &v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo];
  v42 = sub_10003F544(&qword_1005624A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v43 = &v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_libraryDataProvider];
  v45 = v166;
  v44 = v167;
  *(_QWORD *)v43 = v166;
  *((_QWORD *)v43 + 1) = v37;
  sub_10000A520((uint64_t)v44, (uint64_t)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_imageProvider]);
  *(double *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_imageUpdateThrottleInterval] = a5;
  v46 = v165;
  *(_QWORD *)&v31[OBJC_IVAR____TtC8Podcasts13WidgetManager_playbackController] = v165;
  swift_unknownObjectRetain(v45);
  swift_retain(v46);
  v48 = v31;
  if ((static Podcasts.isBlueMoonEnabled()(v47) & 1) == 0)
  {
    v49 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
    v48 = *(char **)(v163 + v122);
    *(_QWORD *)(v163 + v122) = v49;

  }
  v50 = (objc_class *)type metadata accessor for WidgetManager(0);
  v169.receiver = v31;
  v169.super_class = v50;
  v51 = objc_msgSendSuper2(&v169, "init");
  v53 = swift_getObjectType(v166, v52);
  memset(v170, 0, sizeof(v170));
  v171 = 5;
  v54 = (char *)v51;
  v55 = v127;
  EpisodeListSettings.init(_:sort:pubDateLimit:hidePlayedEpisodes:hideTrailers:hideVideoEpisodes:)(v170, 17, 3, 0, 0, 0);
  v56 = *(_QWORD *)&v54[OBJC_IVAR____TtC8Podcasts13WidgetManager_workQueue];
  v57 = OBJC_IVAR____TtC8Podcasts13WidgetManager_workQueue;
  v163 = OBJC_IVAR____TtC8Podcasts13WidgetManager_workQueue;
  v58 = dispatch thunk of LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:queue:)(v55, 6, v56, v53, v37);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v55, v130);
  *(_QWORD *)&v168 = v58;
  v59 = swift_allocObject(&unk_1004C0118, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v54);
  v60 = sub_10003F544(&qword_100553E68);
  v61 = sub_10002F9C8(&qword_100562510, &qword_100553E68, (uint64_t)&protocol conformance descriptor for AnyPaginatedPublisher<A, B>);
  v62 = Publisher<>.sink(receiveValue:)(sub_1002EB5A4, v59, v60, v61);
  swift_release(v59);
  swift_release(v168);
  v63 = &v54[OBJC_IVAR____TtC8Podcasts13WidgetManager_subscriptions];
  swift_beginAccess(&v54[OBJC_IVAR____TtC8Podcasts13WidgetManager_subscriptions], &v168, 33, 0);
  v64 = sub_10003F544((uint64_t *)&unk_100556450);
  v65 = sub_10002F9C8(qword_1005551D0, (uint64_t *)&unk_100556450, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v63, v64, v65);
  swift_endAccess(&v168);
  swift_release(v62);
  v66 = *(_QWORD *)&v54[OBJC_IVAR____TtC8Podcasts13WidgetManager_artworkPrefetchReceiver];
  v126 = v54;
  *(_QWORD *)&v168 = v66;
  v67 = sub_10002F9C8(&qword_100562518, &qword_100562508, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v68 = swift_retain(v66);
  v69 = v131;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(0, 0, sub_1002E901C, 0, 0, 0, 0, 0, v68, 0, 0, v40, v67);
  swift_release(v66);
  v70 = swift_allocObject(&unk_1004C05A0, 24, 7);
  *(_QWORD *)(v70 + 16) = ObjectType;
  v71 = static Subscribers.Demand.unlimited.getter(v70);
  v72 = sub_10003F544(&qword_100562520);
  v73 = sub_10002F9C8(&qword_100562528, &qword_1005624D8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v74 = sub_10002F9C8(&qword_100562530, &qword_100562520, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v75 = v134;
  v76 = v133;
  Publisher<>.flatMap<A>(maxPublishers:_:)(v71, sub_1002EB5BC, v70, v133, v72, v73, v74);
  swift_release(v70);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v69, v76);
  *(_QWORD *)&v168 = *(_QWORD *)&v54[v57];
  v77 = (void *)v168;
  v78 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v79 = (uint64_t)v138;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v138, 1, 1, v78);
  v80 = sub_10002F9C8(&qword_100562538, &qword_1005624E0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v81 = sub_1000489AC();
  ObjectType = v81;
  v82 = v77;
  v83 = v139;
  v84 = v136;
  Publisher.receive<A>(on:options:)(&v168, v79, v136, v164, v80, v81);
  sub_100007A28(v79, &qword_1005564A0);

  (*(void (**)(char *, uint64_t))(v135 + 8))(v75, v84);
  v85 = v146;
  v86 = v144;
  v87 = v148;
  (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v144, enum case for Publishers.PrefetchStrategy.keepFull(_:), v148);
  v88 = v151;
  v89 = v149;
  v90 = v153;
  (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v149, enum case for Publishers.BufferingStrategy.dropOldest<A>(_:), v153);
  v91 = sub_10002F9C8(&qword_100562540, &qword_1005624E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v92 = v142;
  v93 = v141;
  Publisher.buffer(size:prefetch:whenFull:)(10000, v86, v89, v141, v91);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
  v94 = v83;
  v95 = v126;
  (*(void (**)(char *, uint64_t))(v140 + 8))(v94, v93);
  sub_10000A520((uint64_t)v167, (uint64_t)&v168);
  v96 = swift_allocObject(&unk_1004C05C8, 56, 7);
  sub_10002099C(&v168, v96 + 16);
  v97 = sub_100005EC8(0, (unint64_t *)&unk_100562EE0, UIImage_ptr);
  v98 = sub_10003F544(&qword_100562548);
  v99 = sub_10002F9C8(&qword_100562550, &qword_1005624F0, (uint64_t)&protocol conformance descriptor for Publishers.Buffer<A>);
  v100 = sub_10002F9C8(&qword_100562558, &qword_100562548, (uint64_t)&protocol conformance descriptor for EmitLifecycle<A>);
  v101 = v147;
  v102 = v145;
  Publisher.flatMap<A, B>(maxPublishers:_:)(4, sub_1002EB608, v96, v145, v97, v98, v99, v100);
  swift_release(v96);
  v103 = (*(uint64_t (**)(char *, uint64_t))(v143 + 8))(v92, v102);
  v104 = v157;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v103, a5);
  *(_QWORD *)&v168 = *(_QWORD *)&v95[v163];
  v105 = sub_10002F9C8(&qword_100562560, &qword_1005624F8, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v106 = v154;
  v107 = v152;
  Publisher.throttle<A>(for:scheduler:latest:)(v104, &v168, 0, v152, v164, v105, ObjectType);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v104, v159);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v101, v107);
  v108 = swift_allocObject(&unk_1004C0118, 24, 7);
  swift_unknownObjectWeakInit(v108 + 16, v95);
  v109 = sub_10002F9C8(&qword_100562568, &qword_100562500, (uint64_t)&protocol conformance descriptor for Publishers.Throttle<A, B>);
  v110 = v156;
  v111 = Publisher.sink(receiveCompletion:receiveValue:)(UInt64.int64Representation.getter, 0, sub_1002EB610, v108, v156, v109);
  swift_release(v108);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v106, v110);
  v112 = *(_QWORD *)&v95[OBJC_IVAR____TtC8Podcasts13WidgetManager_artworkPrefetchPipeline];
  *(_QWORD *)&v95[OBJC_IVAR____TtC8Podcasts13WidgetManager_artworkPrefetchPipeline] = v111;
  v113 = swift_release(v112);
  sub_100024E50(v113);
  v114 = sub_10004A698();
  v115 = v160;
  v116 = static Logger.widget.getter(v114);
  v117 = Logger.logObject.getter(v116);
  v118 = static os_log_type_t.default.getter(v117);
  if (os_log_type_enabled(v117, v118))
  {
    v119 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v119 = 0;
    _os_log_impl((void *)&_mh_execute_header, v117, v118, "WidgetManager initialized", v119, 2u);
    swift_slowDealloc(v119, -1, -1);
  }
  swift_release(v165);

  swift_unknownObjectRelease(v166);
  sub_10003D380(v167);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v115, v162);
  return v95;
}

uint64_t sub_1002E8F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v12[3];
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100010514();

  }
  v5 = sub_10003F544(&qword_1005625D0);
  FRPOutput.content.getter(v12, v5);
  v6 = v12[0];
  v7 = sub_1002E7C3C(v12[0]);
  swift_bridgeObjectRelease(v6);
  swift_beginAccess(v2, v12, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v2);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = sub_10002B070((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    sub_10001FE34(v10);

    v7 = (_QWORD *)v10;
  }
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_1002E901C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  static Logger.widget.getter(v4);
  v9 = swift_bridgeObjectRetain_n(v8, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(12, -1);
    v17 = v2;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain(v8);
    v18 = sub_10003D274(v7, v8, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(v8, 3);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Responding to artwork fetch for episode: %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v17);
  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_1002E91E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v9[5];
  uint64_t v10;

  v3 = a2[3];
  v4 = a2[4];
  sub_10003A834(a2, v3);
  v10 = dispatch thunk of ImageProvider.load(artwork:)(a1, v3, v4);
  ArtworkRequest.trace.getter(v9);
  v5 = sub_10003F544((uint64_t *)&unk_100562BB0);
  v6 = sub_10002F9C8((unint64_t *)&unk_100562100, (uint64_t *)&unk_100562BB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v7 = static EmitLifecycle.defaultVerbosity.getter(v5, v6);
  Publisher.emitLifecycle(for:name:definesInterval:context:verbose:)(v9, "WidgetArtwork", 13, 2, 1, 0, 0, v7 & 1, v5, v6);
  sub_100007A28((uint64_t)v9, &qword_100562570);
  return swift_release(v10);
}

void sub_1002E92D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  void *v14;
  _BYTE v16[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  v9 = static Logger.widget.getter(v5);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Received new widget artwork, refreshing", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  swift_beginAccess(v8, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v14 = (void *)Strong;
    sub_10004A698();

  }
}

id sub_1002E93FC()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  objc_super v10;
  _BYTE v11[24];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens], v11, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v2, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    v10.receiver = v0;
    v10.super_class = (Class)type metadata accessor for WidgetManager(0);
    return objc_msgSendSuper2(&v10, "dealloc");
  }
  if (v2 < 0)
    v9 = v2;
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = (id)objc_opt_self(NSNotificationCenter);
  if (v3 >= 1)
  {
    v5 = result;
    v6 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2);
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 8 * v6 + 32);
        swift_unknownObjectRetain(v7);
      }
      ++v6;
      v8 = objc_msgSend(v5, "defaultCenter");
      objc_msgSend(v8, "removeObserver:", v7);
      swift_unknownObjectRelease(v7);

    }
    while (v3 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E967C()
{
  return type metadata accessor for WidgetManager(0);
}

uint64_t sub_1002E9684()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v38 = sub_10003F544((uint64_t *)&unk_100563120);
  __chkstk_darwin(v38);
  v1 = (char *)&v36 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10003F544(&qword_100563110);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003F544((uint64_t *)&unk_10055FF90);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F544(&qword_1005624B8);
  v39 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = dispatch thunk of PlaybackController.$nowPlayingItem.getter(v9);
  v13 = dispatch thunk of PlaybackController.$durationSnapshot.getter(v12);
  dispatch thunk of PlaybackController.$isPlaying.getter(v13);
  v14 = sub_10002F9C8(&qword_100556758, (uint64_t *)&unk_10055FF90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v15 = sub_10002F9C8((unint64_t *)&unk_100563130, &qword_100563110, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v16 = sub_10002F9C8(&qword_100556560, (uint64_t *)&unk_100563120, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publishers.CombineLatest3.init(_:_:_:)(v7, v4, v1, v5, v2, v38, v14, v15, v16);
  v17 = swift_allocObject(&unk_1004C0118, 24, 7);
  v18 = v37;
  swift_unknownObjectWeakInit(v17 + 16, v37);
  v19 = swift_allocObject(&unk_1004C0500, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_1002EB510;
  *(_QWORD *)(v19 + 24) = v17;
  v20 = sub_10002F9C8(&qword_1005624C0, &qword_1005624B8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  v21 = Publisher<>.sink(receiveValue:)(sub_1002EB518, v19, v8, v20);
  swift_release(v19);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
  v22 = v18 + OBJC_IVAR____TtC8Podcasts13WidgetManager_playerSubscriptions;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Podcasts13WidgetManager_playerSubscriptions, aBlock, 33, 0);
  v23 = sub_10003F544((uint64_t *)&unk_100556450);
  v24 = sub_10002F9C8(qword_1005551D0, (uint64_t *)&unk_100556450, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v22, v23, v24);
  swift_endAccess(aBlock);
  swift_release(v21);
  v25 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v26 = MTApplicationWillResignActiveNotification;
  v27 = swift_allocObject(&unk_1004C0118, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, v18);
  aBlock[4] = sub_1002EB56C;
  v41 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002BF30;
  aBlock[3] = &unk_1004C0518;
  v28 = _Block_copy(aBlock);
  swift_release(v41);
  v29 = objc_msgSend(v25, "addObserverForName:object:queue:usingBlock:", v26, 0, 0, v28);
  _Block_release(v28);

  v30 = (_QWORD *)(v18 + OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens);
  v31 = swift_beginAccess(v18 + OBJC_IVAR____TtC8Podcasts13WidgetManager_observerTokens, aBlock, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v29);
  specialized Array._endMutation()(v34);
  return swift_endAccess(aBlock);
}

void sub_1002E9AB8(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t Strong;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v33[24];
  char v34[24];
  char v35[24];
  _BYTE v36[24];
  _OWORD v37[3];
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;

  v8 = type metadata accessor for WidgetNowPlayingInfo(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)&v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10003F544(&qword_1005624A8);
  v12 = __chkstk_darwin(v11);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v16 = (uint64_t *)&v33[-v15 - 8];
  if (a1)
  {
    sub_10003DC78(a2, (uint64_t)v37, &qword_1005624C8);
    if (v38 != 2)
    {
      v17 = a4 + 16;
      v39[0] = v37[0];
      v39[1] = v37[1];
      v39[2] = v37[2];
      v40 = v38;
      if ((a3 & 1) != 0
        && (swift_beginAccess(a4 + 16, v33, 0, 0), (Strong = swift_unknownObjectWeakLoadStrong(a4 + 16)) != 0))
      {
        v19 = (char *)Strong;
        v20 = sub_10003F544(&qword_1005624A0);
        v21 = a1;
        v22 = MPModelObject.uuid.getter();
        *v16 = v22;
        v16[1] = v23;
        Date.init()(v22);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 0, 1, v20);
        v24 = (uint64_t)&v19[OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo];
        swift_beginAccess(&v19[OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo], v36, 33, 0);
        sub_1002EB358((uint64_t)v16, v24);
        swift_endAccess(v36);

      }
      else
      {
        v25 = a1;
      }
      swift_beginAccess(v17, v36, 0, 0);
      v26 = swift_unknownObjectWeakLoadStrong(v17);
      if (v26)
      {
        v27 = (void *)v26;
        swift_beginAccess(v17, v35, 0, 0);
        v28 = swift_unknownObjectWeakLoadStrong(v17);
        if (v28)
        {
          v29 = (void *)v28;
          v30 = v28 + OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo;
          swift_beginAccess(v28 + OBJC_IVAR____TtC8Podcasts13WidgetManager_lastPlayedInfo, v34, 0, 0);
          sub_100007A64(v30, (uint64_t)v14, &qword_1005624A8);

        }
        else
        {
          v31 = sub_10003F544(&qword_1005624A0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
        }
        sub_1002E9D64(a3 & 1, a1, (uint64_t)v39, (uint64_t)v14, v10);
        sub_100032488(v10);

      }
    }
  }
}

uint64_t sub_1002E9D64@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  double v8;
  double v9;
  double v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v50;
  char v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t result;
  double *v84;
  double *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v95 = a4;
  v8 = *(double *)a3;
  v10 = *(double *)(a3 + 24);
  v9 = *(double *)(a3 + 32);
  v89 = a3;
  v11 = *(float *)(a3 + 40);
  v12 = sub_10003F544(&qword_1005624A8);
  v13 = __chkstk_darwin(v12);
  v88 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v90 = (char *)&v86 - v15;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10003F544(&qword_1005522F0);
  v21 = __chkstk_darwin(v20);
  v92 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v93 = (char *)&v86 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v86 - v26;
  v28 = __chkstk_darwin(v25);
  v87 = (char *)&v86 - v29;
  v30 = __chkstk_darwin(v28);
  v94 = (uint64_t)&v86 - v31;
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v86 - v33;
  v35 = __chkstk_darwin(v32);
  v97 = (uint64_t)&v86 - v36;
  __chkstk_darwin(v35);
  v96 = (uint64_t)&v86 - v37;
  v38 = a2;
  v39 = MPModelObject.uuid.getter();
  v41 = v40;

  *a5 = v39;
  a5[1] = v41;
  v43 = a1;
  *((_BYTE *)a5 + 16) = a1;
  if (v11 <= 0.0)
  {
    v48 = v9 + (static Date.timeIntervalSinceReferenceDate.getter(v42) - v8) * v11;
    if (v48 >= v10)
      v48 = v10;
    v47 = v10 - fmax(v48, 0.0);
    if ((a1 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v44 = v11;
    v46 = v9 + (static Date.timeIntervalSinceReferenceDate.getter(v42) - v8) * v44;
    if (v46 >= v10)
      v46 = v10;
    v47 = (v10 - fmax(v46, 0.0)) / v44;
    v10 = v10 / v44;
    if ((a1 & 1) == 0)
      goto LABEL_14;
  }
  if (v47 > 0.0 && v47 <= v10)
  {
    v50 = Date.init()(v45);
    v51 = a1;
    Date.addingTimeInterval(_:)(v50, v47 - v10);
    v91 = a5;
    v52 = v27;
    v53 = *(void (**)(char *, uint64_t))(v17 + 8);
    v53(v19, v16);
    v54 = *(_QWORD **)(v17 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v54)(v34, 0, 1, v16);
    v55 = sub_10003DC78((uint64_t)v34, v96, &qword_1005522F0);
    v56 = Date.init()(v55);
    Date.addingTimeInterval(_:)(v56, v47);
    v43 = v51;
    v53(v19, v16);
    v27 = v52;
    a5 = v91;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v54)(v34, 0, 1, v16);
    sub_10003DC78((uint64_t)v34, v97, &qword_1005522F0);
    goto LABEL_15;
  }
LABEL_14:
  v54 = *(_QWORD **)(v17 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54)(v96, 1, 1, v16);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54)(v97, 1, 1, v16);
LABEL_15:
  v57 = v94;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54)(v94, 1, 1, v16);
  v91 = v54;
  if ((v43 & 1) != 0)
  {

LABEL_21:
    sub_100007A28(v95, &qword_1005624A8);
    v68 = (uint64_t)v92;
    v67 = (uint64_t)v93;
    goto LABEL_41;
  }
  v58 = v38;
  MPModelObject.uuid.getter();
  v60 = v59;

  swift_bridgeObjectRelease(v60);
  if (!v60)
  {

    goto LABEL_21;
  }
  v61 = v90;
  sub_100007A64(v95, (uint64_t)v90, &qword_1005624A8);
  v62 = sub_10003F544(&qword_1005624A0);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48);
  v64 = v63(v61, 1, v62);
  v86 = v17;
  if (v64 == 1)
  {
    sub_100007A28((uint64_t)v61, &qword_1005624A8);
    v65 = 0;
    v66 = 0;
  }
  else
  {
    v65 = *(_QWORD *)v61;
    v66 = *((_QWORD *)v61 + 1);
    (*(void (**)(char *, uint64_t))(v17 + 8))(&v61[*(int *)(v62 + 48)], v16);
  }
  v69 = v58;
  v70 = MPModelObject.uuid.getter();
  v72 = v71;

  if (!v66)
  {
    v68 = (uint64_t)v92;
    v67 = (uint64_t)v93;
    if (!v72)
      goto LABEL_32;

    swift_bridgeObjectRelease(v72);
    goto LABEL_39;
  }
  if (!v72)
  {

    swift_bridgeObjectRelease(v66);
    v17 = v86;
    v68 = (uint64_t)v92;
    v67 = (uint64_t)v93;
LABEL_40:
    v57 = v94;
    sub_100007A28(v95, &qword_1005624A8);
    goto LABEL_41;
  }
  if (v65 == v70 && v66 == v72)
  {
    swift_bridgeObjectRelease(v66);
    v73 = swift_bridgeObjectRelease(v72);
    v68 = (uint64_t)v92;
    v67 = (uint64_t)v93;
    goto LABEL_32;
  }
  v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v66, v70, v72, 0);
  swift_bridgeObjectRelease(v66);
  v73 = swift_bridgeObjectRelease(v72);
  v68 = (uint64_t)v92;
  v67 = (uint64_t)v93;
  if ((v74 & 1) == 0)
  {

LABEL_39:
    v17 = v86;
    goto LABEL_40;
  }
LABEL_32:
  if ((MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter(v73) & 1) != 0)
  {

    sub_100007A28(v95, &qword_1005624A8);
    v17 = v86;
    v57 = v94;
  }
  else
  {
    v75 = v95;
    v76 = v88;
    sub_100007A64(v95, v88, &qword_1005624A8);
    if (v63((char *)v76, 1, v62) == 1)
    {

      sub_100007A28(v75, &qword_1005624A8);
      v57 = v94;
      sub_100007A28(v94, &qword_1005522F0);
      sub_100007A28(v76, &qword_1005624A8);
      v77 = 1;
      v17 = v86;
      v78 = (uint64_t)v87;
    }
    else
    {
      v79 = swift_bridgeObjectRelease(*(_QWORD *)(v76 + 8));
      v80 = v76 + *(int *)(v62 + 48);
      v78 = (uint64_t)v87;
      Date.addingTimeInterval(_:)(v79, 480.0);

      sub_100007A28(v75, &qword_1005624A8);
      v57 = v94;
      sub_100007A28(v94, &qword_1005522F0);
      v17 = v86;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v80, v16);
      v77 = 0;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v91)(v78, v77, 1, v16);
    sub_10003DC78(v78, v57, &qword_1005522F0);
  }
LABEL_41:
  v81 = (int *)type metadata accessor for WidgetNowPlayingInfo(0);
  sub_10003DC78(v96, (uint64_t)a5 + v81[6], &qword_1005522F0);
  v82 = v97;
  sub_100007A64(v97, (uint64_t)a5 + v81[7], &qword_1005522F0);
  sub_10003DC78(v57, v67, &qword_1005522F0);
  sub_10003DC78(v82, v68, &qword_1005522F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v67, 1, v16) == 1)
  {
    sub_10003DC78(v68, (uint64_t)v27, &qword_1005522F0);
    sub_100007A28(v67, &qword_1005522F0);
  }
  else
  {
    sub_100007A28(v68, &qword_1005522F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v27, v67, v16);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v91)(v27, 0, 1, v16);
  }
  result = sub_10003DC78((uint64_t)v27, (uint64_t)a5 + v81[10], &qword_1005522F0);
  v84 = (double *)((char *)a5 + v81[8]);
  *v84 = v47;
  *((_BYTE *)v84 + 8) = 0;
  v85 = (double *)((char *)a5 + v81[9]);
  *v85 = v10;
  *((_BYTE *)v85 + 8) = 0;
  return result;
}

id sub_1002EA500@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C04B0, (uint64_t)&unk_1004C04D8, (uint64_t)sub_1002EB4F0, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA524@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C0460, (uint64_t)&unk_1004C0488, (uint64_t)sub_10004A684, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA548@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C0410, (uint64_t)&unk_1004C0438, (uint64_t)sub_10004A684, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA56C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C03C0, (uint64_t)&unk_1004C03E8, (uint64_t)sub_10004A684, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA590@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C0370, (uint64_t)&unk_1004C0398, (uint64_t)sub_10004A684, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA5B4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C0320, (uint64_t)&unk_1004C0348, (uint64_t)sub_10004A684, (uint64_t)sub_1002AE2B8, a2);
}

id sub_1002EA5D8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002EA5FC(a1, (uint64_t)&unk_1004C02D0, (uint64_t)&unk_1004C02F8, (uint64_t)sub_1000459B0, (uint64_t)sub_100029B44, a2);
}

id sub_1002EA5FC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  id v13;

  v13 = *a1;
  v10 = swift_allocObject(a2, 24, 7);
  *(_QWORD *)(v10 + 16) = v13;
  v11 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = v10;
  *a6 = a5;
  a6[1] = v11;
  return v13;
}

id sub_1002EA67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  id v17;
  _QWORD v19[5];
  _QWORD *v20;

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v12 = swift_allocObject(&unk_1004C0118, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a5);
  v13 = (_QWORD *)swift_allocObject(&unk_1004C0230, 56, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v12;
  v13[5] = a3;
  v13[6] = a4;
  v19[4] = sub_10002C1FC;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10002BF30;
  v19[3] = &unk_1004C0248;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v10;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  swift_release(v15);
  v17 = objc_msgSend(v11, "addObserverForName:object:queue:usingBlock:", v16, 0, 0, v14);
  _Block_release(v14);

  return v17;
}

uint64_t sub_1002EA7E4()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  char *v15;
  char *v16;
  uint64_t v18;

  v0 = (int *)type metadata accessor for WidgetNowPlayingInfo(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Logger.widget.getter(v5);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "App is quiting", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v12 = &v2[v0[6]];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v2[v0[7]], 1, 1, v13);
  v14(&v2[v0[10]], 1, 1, v13);
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 0;
  v15 = &v2[v0[8]];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = &v2[v0[9]];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  sub_100032488((uint64_t *)v2);
  return sub_100027DA0();
}

void sub_1002EA9B4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;

  v65 = a2;
  v4 = sub_10003F544(&qword_10055D840);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F544(&qword_100554930);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v60 - v13;
  v15 = __chkstk_darwin(v12);
  v67 = (uint64_t)&v60 - v16;
  v17 = __chkstk_darwin(v15);
  v62 = (char *)&v60 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v60 - v20;
  v22 = __chkstk_darwin(v19);
  v63 = (uint64_t)&v60 - v23;
  __chkstk_darwin(v22);
  v64 = (uint64_t)&v60 - v24;
  v25 = String._bridgeToObjectiveC()();
  v26 = (char *)objc_msgSend(a1, "episodeForUuid:", v25);

  if (!v26)
    goto LABEL_6;
  v27 = objc_msgSend(v26, "podcast");
  if (!v27)
  {

LABEL_6:
    v32 = 0;
    goto LABEL_30;
  }
  v61 = v27;
  MTPodcast.artworkModel.getter();
  v28 = type metadata accessor for ArtworkModel(0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v6, 1, v28);
  if ((_DWORD)v29 == 1)
  {
    sub_100007A28((uint64_t)v6, &qword_10055D840);
    v30 = type metadata accessor for ArtworkRequest(0);
    v31 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v64, 1, 1, v30);
  }
  else
  {
    v31 = v64;
    ArtworkModel.preferredRequest.getter(v29);
    sub_10003F970((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    v33 = type metadata accessor for ArtworkRequest(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 0, 1, v33);
  }
  v34 = sub_10003F544(&qword_100554928);
  v35 = *(_QWORD *)(v8 + 72);
  v36 = *(unsigned __int8 *)(v8 + 80);
  v37 = (v36 + 32) & ~v36;
  v38 = swift_allocObject(v34, v37 + v35, v36 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_1003CA200;
  v66 = v37;
  v39 = v38;
  sub_100007A64(v31, v38 + v37, &qword_100554930);
  if (qword_1005520F8 != -1)
    swift_once(&qword_1005520F8, sub_10000CEB0);
  v40 = v63;
  if (byte_1005623E0 == 1)
  {
    v60 = v35;
    v41 = v26;
    sub_100007A64(v31, (uint64_t)v21, &qword_100554930);
    v42 = type metadata accessor for ArtworkRequest(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v21, 1, v42) == 1)
    {
      sub_100007A28((uint64_t)v21, &qword_100554930);
      v44 = 1;
    }
    else
    {
      ArtworkRequest.replacingEffects(_:)(&off_1004AD298);
      v40 = v63;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v42);
      v44 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v40, v44, 1, v42);
    sub_100007A64(v40, (uint64_t)v62, &qword_100554930);
    v46 = *(_QWORD *)(v39 + 16);
    v45 = *(_QWORD *)(v39 + 24);
    if (v46 >= v45 >> 1)
      v39 = sub_10027BDAC(v45 > 1, v46 + 1, 1, v39);
    v26 = v41;
    *(_QWORD *)(v39 + 16) = v46 + 1;
    v35 = v60;
    sub_10003DC78((uint64_t)v62, v39 + v66 + v46 * v60, &qword_100554930);
    sub_100007A28(v63, &qword_100554930);
  }
  v47 = *(_QWORD *)(v39 + 16);
  if (v47)
  {
    v62 = v26;
    v63 = v2;
    v68 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v39);
    sub_10017B40C(0, v47, 0);
    v60 = v39;
    v48 = v39 + v66;
    v49 = kMTWidgetArtworkWidth;
    v50 = kMTWidgetArtworkHeight;
    do
    {
      sub_100007A64(v48, (uint64_t)v14, &qword_100554930);
      sub_100007A64((uint64_t)v14, (uint64_t)v11, &qword_100554930);
      v51 = type metadata accessor for ArtworkRequest(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v11, 1, v51) == 1)
      {
        sub_100007A28((uint64_t)v11, &qword_100554930);
        v53 = 1;
        v54 = v67;
      }
      else
      {
        v55 = v14;
        v56 = v35;
        v57 = v67;
        ArtworkRequest.resized(to:displayScale:)(0, 1, v49, v50);
        v54 = v57;
        v35 = v56;
        v14 = v55;
        (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
        v53 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v54, v53, 1, v51);
      sub_100007A28((uint64_t)v14, &qword_100554930);
      v32 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
      {
        sub_10017B40C(0, v32[2] + 1, 1);
        v32 = v68;
      }
      v59 = v32[2];
      v58 = v32[3];
      if (v59 >= v58 >> 1)
      {
        sub_10017B40C(v58 > 1, v59 + 1, 1);
        v32 = v68;
      }
      v32[2] = v59 + 1;
      sub_10003DC78(v67, (uint64_t)v32 + v66 + v59 * v35, &qword_100554930);
      v48 += v35;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease_n(v60, 2);

  }
  else
  {
    swift_bridgeObjectRelease(v39);

    v32 = _swiftEmptyArrayStorage;
  }
  sub_100007A28(v64, &qword_100554930);
LABEL_30:
  *v65 = v32;
}

uint64_t sub_1002EB030()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10003F544(&qword_100562598);
  v1 = sub_10002F9C8(&qword_1005625C8, &qword_100562598, (uint64_t)&protocol conformance descriptor for [A]);
  return Sequence.publisher.getter(v0, v1);
}

uint64_t sub_1002EB0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100007A64(a1, a2, &qword_100554930);
}

_QWORD *sub_1002EB0F0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t (*(*)(uint64_t a1))(), uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v33;
  uint64_t v34;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    result = (_QWORD *)sub_100048D58(v2);
    v6 = (uint64_t)result;
    v7 = 0;
    v8 = v2 + 64;
    v29 = v2 + 80;
    v30 = v3;
    v34 = v2;
    v31 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      v10 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v2 + 36) != v5)
        goto LABEL_23;
      v33 = v7;
      v11 = *(_QWORD *)(v2 + 48);
      v12 = *(_QWORD *)(v34 + 56);
      v13 = (uint64_t *)(v11 + 16 * v6);
      v14 = *v13;
      v15 = v13[1];
      v16 = swift_allocObject(&unk_1004C01E0, 32, 7);
      v17 = *(_OWORD *)(v12 + 16 * v6);
      *(_OWORD *)(v16 + 16) = v17;
      v18 = *((_QWORD *)&v17 + 1);
      swift_retain_n(*((_QWORD *)&v17 + 1), 2);
      swift_bridgeObjectRetain(v15);
      v19 = a2(v14, v15, sub_1002EB434, v16);
      swift_release(v18);
      swift_bridgeObjectRelease(v15);
      v20 = swift_release(v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = v19;
      v2 = v34;
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v22);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v23);
      v9 = 1 << *(_BYTE *)(v34 + 32);
      if (v6 >= v9)
        goto LABEL_24;
      v24 = *(_QWORD *)(v8 + 8 * v10);
      if ((v24 & (1 << v6)) == 0)
        goto LABEL_25;
      v5 = v31;
      if (*(_DWORD *)(v34 + 36) != v31)
        goto LABEL_26;
      v25 = v24 & (-2 << (v6 & 0x3F));
      if (v25)
      {
        v9 = __clz(__rbit64(v25)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = v10 + 1;
        v27 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v27)
        {
          v28 = *(_QWORD *)(v8 + 8 * v26);
          if (v28)
          {
LABEL_18:
            v9 = __clz(__rbit64(v28)) + (v26 << 6);
          }
          else
          {
            while (v27 - 2 != v10)
            {
              v28 = *(_QWORD *)(v29 + 8 * v10++);
              if (v28)
              {
                v26 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v33 + 1;
      v6 = v9;
      if (v33 + 1 == v30)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EB358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10003F544(&qword_1005624A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002EB3A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002EB3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002EA67C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1002EB3CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002EB3F0(uint64_t a1)
{
  uint64_t v1;

  sub_1002A41E4(a1, v1, (void (*)(void))sub_1002EA7E4);
}

uint64_t sub_1002EB410()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t (*sub_1002EB434(uint64_t a1))()
{
  uint64_t v1;
  void (*v2)(__int128 *__return_ptr, uint64_t *);
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v2 = *(void (**)(__int128 *__return_ptr, uint64_t *))(v1 + 16);
  v6 = a1;
  v2(&v5, &v6);
  v3 = swift_allocObject(&unk_1004C0208, 32, 7);
  *(_OWORD *)(v3 + 16) = v5;
  return sub_100029B44;
}

uint64_t sub_1002EB490()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002EB4C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002EB4F0()
{
  return sub_10004A698();
}

void sub_1002EB510(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_1002E9AB8(a1, a2, a3, v3);
}

uint64_t sub_1002EB518(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _BYTE *, _QWORD);
  uint64_t v4;
  _BYTE v6[56];

  v3 = *(uint64_t (**)(uint64_t, _BYTE *, _QWORD))(v1 + 16);
  v4 = *a1;
  sub_10003DC78((uint64_t)(a1 + 1), (uint64_t)v6, &qword_1005624C8);
  return v3(v4, v6, *((unsigned __int8 *)a1 + 64));
}

void sub_1002EB56C(uint64_t a1)
{
  uint64_t v1;

  sub_1002A41E4(a1, v1, (void (*)(void))sub_10004A698);
}

void sub_1002EB58C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Podcasts13WidgetManager_waitToReloadUntilSave) = 1;
}

uint64_t sub_1002EB5A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E8F34(a1, v1);
}

uint64_t sub_1002EB5AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EB5BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003C788(*a1, a1[1], a2);
}

uint64_t sub_1002EB5E4()
{
  uint64_t v0;

  sub_10003D380((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002EB608(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E91E0(a1, (_QWORD *)(v1 + 16));
}

void sub_1002EB610(uint64_t a1)
{
  uint64_t v1;

  sub_1002E92D4(a1, v1);
}

uint64_t sub_1002EB618()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002EB63C(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1002EA9B4(a1, a2);
}

uint64_t sub_1002EB6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];

  v4 = type metadata accessor for ShowOffer(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for PodcastContextActionDataType(0);
  __chkstk_darwin();
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v14 = &v28[-v13 - 8];
  __chkstk_darwin();
  v16 = &v28[-v15 - 8];
  if (a1)
  {
    v17 = a1 + OBJC_IVAR____TtC8Podcasts24PodcastContextActionData_type;
    swift_beginAccess(v17, v28, 0, 0);
    sub_10016E904(v17, (uint64_t)v14);
    sub_10016E948((uint64_t)v14, (uint64_t)v16);
    sub_10016E904((uint64_t)v16, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
    {
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
      ShowOffer.storeUrl.getter(v18);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return sub_10016E98C((uint64_t)v16);
    }
    else
    {
      swift_bridgeObjectRelease(*((_QWORD *)v12 + 1));
      v21 = (void *)sub_1001E2CF0();
      if (v21)
      {
        v22 = v21;
        v23 = objc_msgSend(v21, "shareURL");

        if (v23)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

          sub_10016E98C((uint64_t)v16);
          v24 = type metadata accessor for URL(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
        }
        else
        {
          sub_10016E98C((uint64_t)v16);
          v26 = type metadata accessor for URL(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
        }
        return sub_1001C9998((uint64_t)v9, a2);
      }
      else
      {
        sub_10016E98C((uint64_t)v16);
        v25 = type metadata accessor for URL(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
      }
    }
  }
  else
  {
    v20 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
  }
}

uint64_t sub_1002EB9A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  _BYTE v14[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess(v7, v14, 0, 0);
  sub_100036A44(v7, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1001C9958((uint64_t)v2);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v9 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  URL.absoluteString.getter(v9);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setString:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002EBB18()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[6]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1001C9958((uint64_t)v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002EBB90()
{
  return type metadata accessor for CopyLinkPodcastContextAction(0);
}

uint64_t type metadata accessor for CopyLinkPodcastContextAction(uint64_t a1)
{
  uint64_t result;

  result = qword_100562600;
  if (!qword_100562600)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CopyLinkPodcastContextAction);
  return result;
}

void sub_1002EBBD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = "\b";
  v6[1] = "\b";
  v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[3] = &unk_1003D4598;
  v2 = type metadata accessor for MetricsLabel(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000048DC(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

uint64_t sub_1002EBC80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002EBCC4()
{
  return 41;
}

BOOL sub_1002EBCCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  _BYTE v8[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess(v3, v8, 0, 0);
  sub_100036A44(v3, (uint64_t)v2);
  v4 = type metadata accessor for URL(0);
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_1001C9958((uint64_t)v2);
  return v5;
}

uint64_t sub_1002EBD88()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v8[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = *(_QWORD *)(v0 + 16);
  swift_retain();
  sub_1002EB6CC(v4, (uint64_t)v2);
  swift_release(v3);
  v5 = v0 + OBJC_IVAR____TtC8Podcasts28CopyLinkPodcastContextAction_shareLink;
  swift_beginAccess(v5, v8, 33, 0);
  sub_1001C99E0((uint64_t)v2, v5);
  return swift_endAccess(v8);
}

void sub_1002EBE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  void (*v11)(id *, __n128);
  uint64_t v12;
  __n128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(id *, __n128);
  uint64_t v27;
  __n128 v28;
  const char *v29[3];
  _BYTE v30[16];
  id v31;
  char v32;
  uint64_t v33;

  v1 = v0;
  v2 = static os_log_type_t.default.getter();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_log);
  os_log(_:dso:log:_:_:)(v2, &_mh_execute_header, v3, "Delete file", 11, 2, _swiftEmptyArrayStorage);
  v4 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_file);
  v6 = v5;
  v31 = 0;
  v7 = objc_msgSend(v4, "removeItemAtURL:error:", v5, &v31);

  v8 = v31;
  if (v7)
  {
    v9 = v31;
    v10 = static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v3, "File has been deleted successfuly.", 34, 2, _swiftEmptyArrayStorage);
    v11 = *(void (**)(id *, __n128))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v11)
    {
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8);
      v33 = sub_10003F544(&qword_10055A088);
      v31 = 0;
      v32 = 0;
      v13 = swift_retain();
      v11(&v31, v13);
      sub_10002CA30((uint64_t)v11, v12);
      sub_10003D380(&v31);
    }
    sub_100044BF0();
  }
  else
  {
    v14 = v31;
    v15 = _convertNSErrorToError(_:)(v8);

    v17 = swift_willThrow(v16);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = sub_100181038();
    v20 = (void *)static OS_os_log.downloads.getter(v19);
    v21 = sub_10003F544(&qword_1005559A0);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1003CA200;
    swift_getErrorValue(v15, v30, v29);
    v23 = Error.localizedDescription.getter(v29[1], v29[2]);
    v25 = v24;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_10003E198();
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v25;
    os_log(_:dso:log:_:_:)(v18, &_mh_execute_header, v20, "Failed to delete asset file %s", v29[0]);

    swift_bridgeObjectRelease(v22);
    v26 = *(void (**)(id *, __n128))(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler);
    if (v26)
    {
      v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts13BaseOperation_resultHandler + 8);
      v33 = sub_10003F544(&qword_10055A088);
      v31 = 0;
      v32 = 0;
      v28 = swift_retain();
      v26(&v31, v28);
      sub_10002CA30((uint64_t)v26, v27);
      sub_10003D380(&v31);
    }
    sub_100044BF0();
    swift_errorRelease();
  }
}

uint64_t sub_1002EC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10003A858(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input + 8));

  v1 = v0 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_file;
  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1002EC208()
{
  return type metadata accessor for DeleteFileOperation(0);
}

uint64_t type metadata accessor for DeleteFileOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_100562770;
  if (!qword_100562770)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DeleteFileOperation);
  return result;
}

uint64_t sub_1002EC24C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1003D4620;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 368);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002EC2D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = v1 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts19DeleteFileOperation_input);
  *(_QWORD *)a1 = v3;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_10003A8DC(v3, v4);
}

id sub_1002EC2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  Class isa;
  Class v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSString *v30;
  NSString *v31;
  NSString *v32;
  NSString *v33;
  NSString *v34;
  NSString *v35;
  id v36;
  NSString *v37;
  Class v38;
  uint64_t (*v39)(void);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin();
  v11 = (char *)&v46 - v10;
  v12 = 0;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 272))(v9) & 1) != 0)
  {
    v13 = v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, v51, 0, 0);
    sub_100036A44(v13, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      v14 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v14(v8, v11, v5);
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
      v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
      swift_bridgeObjectRetain(v16);
      v17 = sub_1002ED3A4((uint64_t)v8, v15, v16);
      v49 = v6;
      v50 = a1;
      v47 = v11;
      v48 = v5;
      if (v17)
      {
        v18 = v17;
        v19 = sub_10003F544(&qword_1005547B0);
        v20 = swift_allocObject(v19, 64, 7);
        *(_OWORD *)(v20 + 16) = xmmword_1003CA200;
        *(_QWORD *)(v20 + 56) = type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
        *(_QWORD *)(v20 + 32) = v18;
      }
      else
      {
        v21 = sub_10003F544(&qword_1005547B0);
        v20 = swift_allocObject(v21, 64, 7);
        *(_OWORD *)(v20 + 16) = xmmword_1003CA200;
        *(_QWORD *)(v20 + 56) = v5;
        v22 = (char *)sub_1000242A8((_QWORD *)(v20 + 32));
        v14(v22, v11, v5);
      }
      v46 = type metadata accessor for ShareOtherContextAction(0);
      v23 = ShareAction.applicationActivities.getter(v46, &off_1004C0760);
      v24 = objc_allocWithZone((Class)UIActivityViewController);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v20);
      sub_1002ED5A0();
      v26 = Array._bridgeToObjectiveC()().super.isa;
      v12 = objc_msgSend(v24, "initWithActivityItems:applicationActivities:", isa, v26, swift_bridgeObjectRelease(v23).n128_f64[0]);

      v27 = sub_10003F544((uint64_t *)&unk_1005629A0);
      v28 = swift_allocObject(v27, 104, 7);
      *(_OWORD *)(v28 + 16) = xmmword_1003CC170;
      *(_QWORD *)(v28 + 32) = UIActivityTypePrint;
      *(_QWORD *)(v28 + 40) = UIActivityTypeAssignToContact;
      *(_QWORD *)(v28 + 48) = UIActivityTypeAddToReadingList;
      *(_QWORD *)(v28 + 56) = UIActivityTypePostToFlickr;
      *(_QWORD *)(v28 + 64) = UIActivityTypePostToVimeo;
      *(_QWORD *)(v28 + 72) = UIActivityTypeSaveToCameraRoll;
      v29 = (void *)UIActivityTypeCreateReminder;
      *(_QWORD *)(v28 + 80) = UIActivityTypeCreateReminder;
      *(_QWORD *)(v28 + 88) = UIActivityTypeCopyToPasteboard;
      v30 = UIActivityTypePrint;
      v31 = UIActivityTypeAssignToContact;
      v32 = UIActivityTypeAddToReadingList;
      v33 = UIActivityTypePostToFlickr;
      v34 = UIActivityTypePostToVimeo;
      v35 = UIActivityTypeSaveToCameraRoll;
      v36 = v29;
      v37 = UIActivityTypeCopyToPasteboard;
      *(_QWORD *)(v28 + 96) = String._bridgeToObjectiveC()();
      type metadata accessor for ActivityType(0);
      v38 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v12, "setExcludedActivityTypes:", v38, swift_bridgeObjectRelease(v28).n128_f64[0]);

      v39 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 288);
      v40 = v12;
      v41 = v39();
      v43 = v42;
      ShareAction.prepareShareController(_:customShareTitle:sharingStyle:)(v12, v41, v42, v50, v46, &off_1004C0760);

      v44 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v47, v48, v44);
    }
  }
  return v12;
}

id sub_1002EC714()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Class isa;
  _BYTE v25[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v25[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __chkstk_darwin();
  v9 = &v25[-v8 - 8];
  v10 = 0;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 272))(v7) & 1) != 0)
  {
    v11 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, v25, 0, 0);
    sub_100036A44(v11, (uint64_t)v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_100007A28((uint64_t)v2, (uint64_t *)&unk_100553DC0);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
    if (v13)
    {
      v14 = *v12;
      v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v15(v6, v9, v3);
      swift_bridgeObjectRetain(v13);
      v16 = sub_1002ED3A4((uint64_t)v6, v14, v13);
      if (v16)
        goto LABEL_9;
    }
    else
    {
      v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    }
    v15(v6, v9, v3);
    v16 = sub_1002ED3A4((uint64_t)v6, 0, 0xE000000000000000);
    if (!v16)
    {
      v10 = 0;
      goto LABEL_11;
    }
LABEL_9:
    v17 = v16;
    v18 = (void *)objc_opt_self(UIActivityItemsConfiguration);
    v19 = sub_10003F544(&qword_1005547B0);
    v20 = swift_allocObject(v19, 64, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1003CA200;
    *(_QWORD *)(v20 + 56) = type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
    *(_QWORD *)(v20 + 32) = v17;
    v21 = v17;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v18, "mt_configurationWithActivityItems:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

LABEL_11:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v10;
}

id sub_1002EC988()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id result;
  void *v4;
  uint64_t v5;
  void (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  sub_10003F544(qword_1005542D8);
  __chkstk_darwin();
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = sub_1002EC2F8(0);
  if (result)
  {
    v4 = result;
    swift_beginAccess(v0 + 16, v12, 0, 0);
    v5 = *(_QWORD *)(v0 + 16);
    if (v5)
    {
      v6 = *(void (**)(__n128))(*(_QWORD *)v5 + 120);
      v7 = swift_retain();
      v6(v7);
      swift_release(v5);
      v8 = type metadata accessor for PresentationSource(0);
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) != 1)
      {
        PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v4, 1, 15, 1, 0, 0);

        return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v2, v8);
      }
    }
    else
    {
      v10 = type metadata accessor for PresentationSource(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 1, 1, v10);
    }

    return (id)sub_100007A28((uint64_t)v2, qword_1005542D8);
  }
  return result;
}

double sub_1002ECAD8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v4 = &v23[-v3];
  v5 = sub_10003F544((uint64_t *)&unk_100562990);
  __chkstk_darwin();
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&result = swift_beginAccess(v0 + 16, v24, 0, 0).n128_u64[0];
  v13 = *(_QWORD *)(v0 + 16);
  if (v13)
  {
    v14 = type metadata accessor for OtherContextActionConfiguration(0);
    v15 = swift_dynamicCastClass(v13, v14);
    if (v15)
    {
      v16 = (uint64_t *)(v15 + OBJC_IVAR____TtC8Podcasts31OtherContextActionConfiguration_sharableInfo + *(int *)(v5 + 48));
      (*(void (**)(_BYTE *))(v9 + 16))(v7);
      v18 = *v16;
      v17 = v16[1];
      v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
      v19(v11, v7, v8);
      v19(v4, v11, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
      sub_1001C9998((uint64_t)v4, (uint64_t)v2);
      v20 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
      swift_beginAccess(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, v23, 33, 0);
      swift_bridgeObjectRetain(v17);
      sub_1001C99E0((uint64_t)v2, v20);
      swift_endAccess(v23);
      v21 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle);
      v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8);
      *v21 = v18;
      v21[1] = v17;
      *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
    }
  }
  return result;
}

BOOL sub_1002ECCDC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  _BYTE v8[24];

  sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin();
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link;
  swift_beginAccess(v3, v8, 0, 0);
  sub_100036A44(v3, (uint64_t)v2);
  v4 = type metadata accessor for URL(0);
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100007A28((uint64_t)v2, (uint64_t *)&unk_100553DC0);
  return v5;
}

uint64_t sub_1002ECDA4()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0xAC000000A680E24CLL;
  v1._countAndFlagsBits = 0xA680E26572616853;
  v1._object = (void *)0xA800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x5255206572616853;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_1002ED054()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002ED0DC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  sub_10003D380(v0 + 3);
  sub_100007A28((uint64_t)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_link, (uint64_t *)&unk_100553DC0);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_shareTitle + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName
                                      + 8));
  v1 = (char *)v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  v2 = type metadata accessor for MetricsLabel(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1002ED17C()
{
  return type metadata accessor for ShareOtherContextAction(0);
}

uint64_t type metadata accessor for ShareOtherContextAction(uint64_t a1)
{
  return sub_10003EAF4(a1, qword_1005627E8, (uint64_t)&nominal type descriptor for ShareOtherContextAction);
}

void sub_1002ED198(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = "\b";
  v6[1] = &unk_1003D46B0;
  sub_1000048DC(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_1003D46C8;
    v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[5] = &unk_1003D46C8;
    v4 = type metadata accessor for MetricsLabel(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = &unk_1003D46E0;
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

uint64_t sub_1002ED254()
{
  return type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
}

uint64_t type metadata accessor for ShareOtherContextAction.ActivityItemProvider(uint64_t a1)
{
  return sub_10003EAF4(a1, qword_100562978, (uint64_t)&nominal type descriptor for ShareOtherContextAction.ActivityItemProvider);
}

uint64_t sub_1002ED270(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1003D4718;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002ED2E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t sub_1002ED2F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_systemImageName + 8));
  return v1;
}

uint64_t sub_1002ED32C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_metricsLabel;
  v4 = type metadata accessor for MetricsLabel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1002ED370()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Podcasts23ShareOtherContextAction_contextActionType);
}

uint64_t sub_1002ED380()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t sub_1002ED390()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

id sub_1002ED3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  uint64_t v25;
  objc_super v27;
  Swift::String v28;

  v6 = (objc_class *)type metadata accessor for ShareOtherContextAction.ActivityItemProvider(0);
  v7 = objc_allocWithZone(v6);
  v8 = v7;
  if (a3)
  {
    v9 = (char *)v7
       + OBJC_IVAR____TtCC8Podcasts23ShareOtherContextActionP33_EEA9E3C8BAC5199A99988C7A83F9625320ActivityItemProvider_link;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = v8;
    v14 = objc_msgSend(v12, "mainBundle");
    v28._object = (void *)0xE000000000000000;
    v15._object = (void *)0x800000010043C1A0;
    v15._countAndFlagsBits = 0xD00000000000002DLL;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v28);

    v18 = sub_10003F544(&qword_1005559A0);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1003CA200;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_10003E198();
    *(_QWORD *)(v19 + 32) = a2;
    *(_QWORD *)(v19 + 40) = a3;
    v20 = String.init(format:_:)(v17._countAndFlagsBits, v17._object, v19);
    v22 = v21;
    swift_bridgeObjectRelease(v17._object);
    v23 = (_QWORD *)((char *)v13
                   + OBJC_IVAR____TtCC8Podcasts23ShareOtherContextActionP33_EEA9E3C8BAC5199A99988C7A83F9625320ActivityItemProvider_title);
    *v23 = v20;
    v23[1] = v22;

    v27.receiver = v13;
    v27.super_class = v6;
    v24 = objc_msgSendSuper2(&v27, "init");
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  else
  {
    v25 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
    swift_deallocPartialClassInstance(v8, v6, *(unsigned int *)((swift_isaMask & *v8) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v8) + 0x34));
    return 0;
  }
  return v24;
}

unint64_t sub_1002ED5A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055AAA8;
  if (!qword_10055AAA8)
  {
    v1 = objc_opt_self(UIActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055AAA8);
  }
  return result;
}

id SyncControllerFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncControllerFactory();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SyncControllerFactory()
{
  return objc_opt_self(_TtC8Podcasts21SyncControllerFactory);
}

id SyncControllerFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncControllerFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1002ED6E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10055C498;
  if (!qword_10055C498)
  {
    v1 = objc_opt_self(MTSyncController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10055C498);
  }
  return result;
}

void NowPlayingTabController.perform(testCase:runner:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t (*v19)();
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  id v33;

  v2 = v1;
  v4 = type metadata accessor for PerformanceTestCase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  v8 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = PerformanceTestCase.name.getter(v7);
  v11 = v9;
  if (v10 == 0xD000000000000016)
  {
    v12 = 0x800000010043C280;
    if (v9 == 0x800000010043C280)
      goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x800000010043C280, v10, v9, 0) & 1) != 0)
    goto LABEL_4;
  if (v10 == 0xD00000000000001FLL && v11 == 0x800000010043C2A0)
  {
    v12 = 0x800000010043C2A0;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001FLL, 0x800000010043C2A0, v10, v11, 0) & 1) != 0)
  {
LABEL_4:
    v12 = v11;
LABEL_8:
    v13 = swift_bridgeObjectRelease(v12);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v13);
    v14 = *(unsigned __int8 *)(v5 + 80);
    v15 = (v14 + 16) & ~v14;
    v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v17 = swift_allocObject(&unk_1004C0850, v16 + 8, v14 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v8, v4);
    *(_QWORD *)(v17 + v16) = v2;
    v18 = v2;
    v19 = sub_1002EEAE8;
LABEL_9:
    sub_1002EE870((uint64_t)v19, v17, 3.0);
    swift_release(v17);
    return;
  }
  if (v10 == 0xD00000000000001BLL)
  {
    v20 = 0x800000010043C2C0;
    if (v11 == 0x800000010043C2C0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x800000010043C2C0, v10, v11, 0) & 1) != 0)
  {
    v21 = v11;
    goto LABEL_16;
  }
  if (v10 == 0xD000000000000024)
  {
    v20 = 0x800000010043C2E0;
    if (v11 == 0x800000010043C2E0)
    {
LABEL_13:
      v21 = v20;
LABEL_16:
      v22 = swift_bridgeObjectRelease(v21);
LABEL_17:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v22);
      v23 = *(unsigned __int8 *)(v5 + 80);
      v24 = (v23 + 16) & ~v23;
      v25 = (v6 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
      v17 = swift_allocObject(&unk_1004C0828, v25 + 8, v23 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v24, v8, v4);
      *(_QWORD *)(v17 + v25) = v2;
      v26 = v2;
      v19 = sub_1002EE06C;
      goto LABEL_9;
    }
  }
  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010043C2E0, v10, v11, 0);
  v22 = swift_bridgeObjectRelease(v11);
  if ((v27 & 1) != 0)
    goto LABEL_17;
  if (UIApp)
  {
    v28 = UIApp;
    PerformanceTestCase.name.getter(v28);
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "failedTest:withFailure:", v31, v33);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002EDA5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;

  sub_10003F544(&qword_1005629D8);
  __chkstk_darwin();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    v6 = UIApp;
    PerformanceTestCase.name.getter();
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "startedTest:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x200))();
    if (v10)
    {
      v11 = v10;
      if (object_getClass(v10) == (Class)_TtC8Podcasts19NowPlayingBootstrap)
      {
        v12 = type metadata accessor for NowPlayingHostedContentID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
        v13 = sub_10000C3B0();
        v14 = *(_QWORD *)(v13 + 16);
        swift_retain();
        v15 = swift_release(v13);
        dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)(v5, 0, v15);
        swift_unknownObjectRelease(v11);
        swift_release(v14);
        sub_1002EEB44((uint64_t)v5);
      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
    sub_1002EDBE4(a1, 0, 5);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002EDBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, double (*)(), uint64_t);
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v7 = type metadata accessor for PerformanceTestCase(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= a3)
  {
    if (UIApp)
    {
      v32 = UIApp;
      PerformanceTestCase.name.getter();
      v34 = v33;
      v39 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
      objc_msgSend(v32, "finishedTest:", v39, v35);

      return;
    }
  }
  else
  {
    v37 = a2;
    v38 = a3;
    v39 = v3;
    if (UIApp)
    {
      v11 = UIApp;
      v12 = String._bridgeToObjectiveC()();
      PerformanceTestCase.name.getter();
      v14 = v13;
      v15 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "startedSubTest:forTest:", v12, v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      v16 = (void *)UIApp;
      if (UIApp)
      {
        v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        v17((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
        v18 = *(unsigned __int8 *)(v8 + 80);
        v19 = (v18 + 16) & ~v18;
        v36 = v18 | 7;
        v20 = swift_allocObject(&unk_1004C0878, v19 + v9, v18 | 7);
        v21 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
        v21(v20 + v19, (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
        aBlock[4] = sub_1002EEB88;
        v41 = v20;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100027AF8;
        aBlock[3] = &unk_1004C0890;
        v22 = _Block_copy(aBlock);
        v23 = v41;
        v24 = v16;
        objc_msgSend(v24, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
        _Block_release(v22);

        v17((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
        v25 = (v18 + 24) & ~v18;
        v26 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
        v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
        v28 = swift_allocObject(&unk_1004C08C8, v27 + 8, v36);
        v29 = v39;
        *(_QWORD *)(v28 + 16) = v39;
        v21(v28 + v25, v10, v7);
        *(_QWORD *)(v28 + v26) = v37;
        *(_QWORD *)(v28 + v27) = v38;
        v30 = *(void (**)(uint64_t, double (*)(), uint64_t))((swift_isaMask & *v29) + 0x1B0);
        v31 = v29;
        v30(1, sub_1002EEBB8, v28);
        swift_release(v28);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1002EDED8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;

  sub_10003F544(&qword_1005629D8);
  __chkstk_darwin();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    v6 = UIApp;
    PerformanceTestCase.name.getter();
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "startedTest:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x200))();
    if (v10)
    {
      v11 = v10;
      if (object_getClass(v10) == (Class)_TtC8Podcasts19NowPlayingBootstrap)
      {
        static NowPlayingHostedContentID.queue.getter();
        v12 = type metadata accessor for NowPlayingHostedContentID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
        v13 = sub_10000C3B0();
        v14 = *(_QWORD *)(v13 + 16);
        swift_retain();
        v15 = swift_release(v13);
        dispatch thunk of NowPlayingViewModel.updateContentSelection(_:animated:)(v5, 0, v15);
        swift_unknownObjectRelease(v11);
        swift_release(v14);
        sub_1002EEB44((uint64_t)v5);
      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
    sub_1002EDBE4(a1, 0, 5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002EE06C()
{
  return sub_1002EEAF4((uint64_t (*)(unint64_t, _QWORD))sub_1002EDED8);
}

void sub_1002EE078(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v23 = a4;
  v6 = type metadata accessor for PerformanceTestCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    v10 = UIApp;
    v11 = String._bridgeToObjectiveC()();
    PerformanceTestCase.name.getter();
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "finishedSubTest:forTest:waitForCommit:", v11, v14, 1, swift_bridgeObjectRelease(v13).n128_f64[0]);

    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_1004C0918, v19 + 8, v15 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20 + v16, v9, v6);
    *(_QWORD *)(v20 + v17) = a2;
    *(_QWORD *)(v20 + v18) = v22;
    *(_QWORD *)(v20 + v19) = v23;
    v21 = a2;
    sub_1002EE870((uint64_t)sub_1002EEBE0, v20, 0.5);
    swift_release(v20);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002EE214(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, double (*)(), uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v35 = a3;
  v36 = a4;
  v37 = a2;
  v5 = type metadata accessor for PerformanceTestCase(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v34 = v7;
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (UIApp)
  {
    v9 = UIApp;
    v10 = String._bridgeToObjectiveC()();
    v11 = a1;
    PerformanceTestCase.name.getter();
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "startedSubTest:forTest:", v10, v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

    v15 = (void *)UIApp;
    if (UIApp)
    {
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v16(v8, a1, v5);
      v17 = *(unsigned __int8 *)(v6 + 80);
      v18 = (v17 + 16) & ~v17;
      v19 = v34;
      v33 = v17 | 7;
      v20 = swift_allocObject(&unk_1004C0940, v18 + v34, v17 | 7);
      v21 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
      v21(v20 + v18, v8, v5);
      aBlock[4] = sub_1002EEC50;
      v39 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100027AF8;
      aBlock[3] = &unk_1004C0958;
      v22 = _Block_copy(aBlock);
      v23 = v39;
      v24 = v15;
      objc_msgSend(v24, "installCACommitCompletionBlock:", v22, swift_release(v23).n128_f64[0]);
      _Block_release(v22);

      v16(v8, v11, v5);
      v25 = (v17 + 24) & ~v17;
      v26 = (v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
      v28 = swift_allocObject(&unk_1004C0990, v27 + 8, v33);
      v29 = v37;
      *(_QWORD *)(v28 + 16) = v37;
      v21(v28 + v25, v8, v5);
      *(_QWORD *)(v28 + v26) = v35;
      *(_QWORD *)(v28 + v27) = v36;
      v30 = *(void (**)(uint64_t, double (*)(), uint64_t))((swift_isaMask & *v29) + 0x1B8);
      v31 = v29;
      v30(1, sub_1002EED84, v28);
      swift_release(v28);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002EE49C()
{
  id v0;
  NSString v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (UIApp)
  {
    v0 = UIApp;
    v1 = String._bridgeToObjectiveC()();
    PerformanceTestCase.name.getter();
    v3 = v2;
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v0, "finishedSubTest:forTest:", v1, v4);

    if (UIApp)
    {
      v5 = UIApp;
      v6 = String._bridgeToObjectiveC()();
      PerformanceTestCase.name.getter();
      v8 = v7;
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v8);
      objc_msgSend(v5, "startedSubTest:forTest:", v6, v9);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1002EE5B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  double result;
  uint64_t v22;
  uint64_t v23;

  v22 = a4;
  v23 = a6;
  v10 = type metadata accessor for PerformanceTestCase(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(a5, v18 + 8, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19 + v15, v13, v10);
  *(_QWORD *)(v19 + v16) = a1;
  *(_QWORD *)(v19 + v17) = a3;
  *(_QWORD *)(v19 + v18) = v22;
  v20 = a1;
  sub_1002EE870(v23, v19, 0.5);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

void sub_1002EE6CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a3;
  v20 = a4;
  v6 = type metadata accessor for PerformanceTestCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  if (UIApp)
  {
    v9 = UIApp;
    v10 = String._bridgeToObjectiveC()();
    PerformanceTestCase.name.getter();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "finishedSubTest:forTest:waitForCommit:", v10, v13, 1, swift_bridgeObjectRelease(v12).n128_f64[0]);

    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v14 = *(unsigned __int8 *)(v7 + 80);
    v15 = (v14 + 40) & ~v14;
    v16 = (char *)swift_allocObject(&unk_1004C09E0, v15 + v8, v14 | 7);
    v17 = v20;
    *((_QWORD *)v16 + 2) = v19;
    *((_QWORD *)v16 + 3) = v17;
    *((_QWORD *)v16 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v18 = a2;
    sub_1002EE870((uint64_t)sub_1002EEF7C, (uint64_t)v16, 0.5);
    swift_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002EE850(uint64_t a1)
{
  NowPlayingTabController.perform(testCase:runner:)(a1);
}

uint64_t sub_1002EE870(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  _QWORD *v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v26 - v13;
  sub_10002C5E0();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v12, a3);
  v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  aBlock[4] = a1;
  v29 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100027AF8;
  aBlock[3] = &unk_1004C09F8;
  v18 = _Block_copy(aBlock);
  v27 = _swiftEmptyArrayStorage;
  v19 = sub_10017F258();
  swift_retain();
  v20 = sub_10003F544((uint64_t *)&unk_10055B200);
  v21 = sub_100026534();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v20, v21, v6, v19);
  v22 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = DispatchWorkItem.init(flags:block:)(v8, v18);
  swift_release(v29);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v14, v23);

  v24 = swift_release(v23);
  return ((uint64_t (*)(char *, uint64_t, __n128))v17)(v14, v9, v24);
}

uint64_t sub_1002EEA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1002EEAE8()
{
  return sub_1002EEAF4((uint64_t (*)(unint64_t, _QWORD))sub_1002EDA5C);
}

uint64_t sub_1002EEAF4(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002EEB44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10003F544(&qword_1005629D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002EEB88()
{
  sub_1002EEC90();
}

double sub_1002EEBB8()
{
  return sub_1002EED98((uint64_t)&unk_1004C08F0, (uint64_t)sub_1002EEBD0);
}

uint64_t sub_1002EEBD0()
{
  return sub_1002EEEA0((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD))sub_1002EE078);
}

uint64_t sub_1002EEBE0()
{
  return sub_1002EEEA0((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD))sub_1002EE214);
}

uint64_t sub_1002EEBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002EEC50()
{
  sub_1002EEC90();
}

void sub_1002EEC90()
{
  type metadata accessor for PerformanceTestCase(0);
  sub_1002EE49C();
}

uint64_t sub_1002EECFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_1002EED84()
{
  return sub_1002EED98((uint64_t)&unk_1004C09B8, (uint64_t)sub_1002EEE94);
}

double sub_1002EED98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1002EE5B0(*(void **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a1, a2);
}

uint64_t sub_1002EEE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1002EEE94()
{
  return sub_1002EEEA0((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD))sub_1002EE6CC);
}

uint64_t sub_1002EEEA0(uint64_t (*a1)(unint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(v1 + v3, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002EEF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002EEF7C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = type metadata accessor for PerformanceTestCase(0);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 < *(_QWORD *)(v0 + 24))
  {
    v3 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
    return sub_1002EDBE4(v0 + ((v3 + 40) & ~v3), v2 + 1);
  }
  return result;
}

void sub_1002EEFD0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7)
{
  sub_1002EEFF0(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1002EEFF0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7)
{
  void *v7;
  void *v9;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v9 = a5;
  if (!a3)
  {
    v12 = 0;
    if (!a5)
      goto LABEL_4;
    goto LABEL_3;
  }
  v19 = a3;
  v20 = a4;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1002EF11C;
  v18 = &unk_1004C0AF0;
  v12 = _Block_copy(&v15);
  v13 = v20;
  swift_retain();
  *(_QWORD *)&a7 = swift_release(v13).n128_u64[0];
  if (v9)
  {
LABEL_3:
    v19 = v9;
    v20 = a6;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_1002EF158;
    v18 = &unk_1004C0AC8;
    v9 = _Block_copy(&v15);
    v14 = v20;
    swift_retain();
    *(_QWORD *)&a7 = swift_release(v14).n128_u64[0];
  }
LABEL_4:
  objc_msgSend(v7, "performImport:fromSource:withProgressBlock:completionHandler:", a1, a2, v12, v9, a7);
  _Block_release(v9);
  _Block_release(v12);
}

uint64_t sub_1002EF11C(uint64_t a1, float a2)
{
  void (*v3)(float);
  uint64_t v4;

  v3 = *(void (**)(float))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  swift_retain(v4);
  v3(a2);
  return swift_release(v4);
}

void sub_1002EF158(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v4;
  uint64_t v6;
  void (*v7)(uint64_t, void *, void *, unint64_t);
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;

  v4 = a4;
  v7 = *(void (**)(uint64_t, void *, void *, unint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (a4)
  {
    swift_retain();
    v8 = a3;
    v9 = v4;
    v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v11 = v10;

  }
  else
  {
    swift_retain();
    v12 = a3;
    v11 = 0xF000000000000000;
  }
  v7(a2, a3, v4, v11);
  sub_1001C0F60((uint64_t)v4, v11);
  swift_release(v6);

}

id sub_1002EF208(uint64_t a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, "itemWithPersistentID:verifyExistence:", a1, a2 & 1);
}

uint64_t sub_1002EF238()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)ML3ArtworkTokenSet), "initWithEntity:artworkType:", v0, 1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "artworkTokenForSource:", 500);
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v5;
}

void sub_1002EF2CC(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  NSString v4;
  id v5;

  v3 = *v2;
  if (a2)
    v4 = String._bridgeToObjectiveC()();
  else
    v4 = 0;
  v5 = v4;
  objc_msgSend(v3, "populateLocationPropertiesWithPath:protectionType:");

}

id sub_1002EF324(uint64_t a1, unint64_t a2)
{
  void **v2;
  void *v3;
  Class isa;
  id v5;

  v3 = *v2;
  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "populateArtworkCacheWithArtworkData:", isa);

  return v5;
}

uint64_t sub_1002EF37C()
{
  return sub_1002EF238();
}

id sub_1002EF39C(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  NSString v4;
  id v5;

  v3 = *v2;
  if (a2)
    v4 = String._bridgeToObjectiveC()();
  else
    v4 = 0;
  v5 = objc_msgSend(v3, "removeArtworkAssetWithToken:", v4);

  return v5;
}

double sub_1002EF3EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  id v4;
  id v5;
  double result;

  v4 = objc_msgSend(objc_allocWithZone((Class)ML3Track), "initWithPersistentID:inLibrary:", MediaLibraryPid.value.getter(a1), *v2);
  if (v4)
  {
    v5 = v4;
    *(_QWORD *)(a2 + 24) = sub_1002EF470();
    *(_QWORD *)(a2 + 32) = &off_1004C0A70;
    *(_QWORD *)a2 = v5;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1002EF470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005629E0;
  if (!qword_1005629E0)
  {
    v1 = objc_opt_self(ML3Track);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005629E0);
  }
  return result;
}

void MTPlayerController.startPlayback(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for PendingPlaybackMetadata(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Podcasts.isBlueMoonEnabled()(v6) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v9 = objc_allocWithZone((Class)type metadata accessor for PlaceholderManifest());
    sub_1001861BC((uint64_t)v8);
    v11 = v10;
    objc_msgSend(v2, "playManifest:reason:interactive:completion:", v10, 3, 0, 0);

  }
}

void sub_1002EF578(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v3 = type metadata accessor for PendingPlaybackMetadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  if ((static Podcasts.isBlueMoonEnabled()(v5) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    v9 = objc_allocWithZone((Class)type metadata accessor for PlaceholderManifest());
    sub_1001861BC((uint64_t)v7);
    v11 = v10;
    objc_msgSend(v8, "playManifest:reason:interactive:completion:", v10, 3, 0, 0);

  }
}

id sub_1002EF640(uint64_t a1, char a2)
{
  void *v3;

  if ((a2 & 1) != 0)
    __asm { BR              X9 }
  v3 = (void *)objc_opt_self(MTPodcast);
  if (a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x1002EF89CLL);
  }
  return objc_msgSend(v3, "predicateForNotImplicitlyFollowedPodcastsWithChannelStoreId:", a1);
}

uint64_t AppBootstrap.buildForegroundDependencies()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24) >> 62;
  if ((_DWORD)v2)
  {
    if ((_DWORD)v2 != 2)
    {
      swift_retain(*(_QWORD *)(v0 + 16));
      return v1;
    }
    v1 = (uint64_t)sub_1002F1450();
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = 0;
    swift_retain(v1);
    sub_1002C77F0(v3, v4);
  }
  else
  {
    swift_retain(*(_QWORD *)(v0 + 16));
  }
  v5 = _s8Podcasts12AppBootstrapC27buildForegroundDependencies7basedOn9JetEngine15BaseObjectGraphCAH_tF_0(v1);
  v6 = v1 | 0x4000000000000000;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v6;
  swift_retain(v5);
  sub_1002C77F0(v7, v8);
  return v5;
}

uint64_t AppBootstrap.buildBackgroundDependencies()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    if (v1 >> 62 != 1)
    {
      v2 = (uint64_t)sub_1002F1450();
      v3 = *(_QWORD *)(v0 + 16);
      v4 = *(_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 16) = v2;
      *(_QWORD *)(v0 + 24) = 0;
      swift_retain();
      sub_1002C77F0(v3, v4);
      return v2;
    }
    v2 = v1 & 0x3FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
  }
  swift_retain();
  return v2;
}

void AppBootstrap.foregroundGraph.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >> 62 == 1)
    swift_retain(*(_QWORD *)(v0 + 16));
}

void AppBootstrap.backgroundGraph.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    if (v1 >> 62 != 1)
      return;
    v2 = v1 & 0x3FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
  }
  swift_retain(v2);
}

double AppBootstrap.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = swift_allocObject(v0, 32, 7);
  result = 0.0;
  *(_OWORD *)(v1 + 16) = xmmword_1003D3590;
  return result;
}

Swift::Void __swiftcall AppBootstrap.storefrontDidChange()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 16) = xmmword_1003D3590;
  sub_1002C77F0(v1, v2);
}

double AppBootstrap.init()()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_1003D3590;
  return result;
}

uint64_t AppBootstrap.deinit()
{
  uint64_t v0;

  sub_1002C77F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t AppBootstrap.__deallocating_deinit()
{
  uint64_t v0;

  sub_1002C77F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1002EFAD4(uint64_t a1)
{
  return sub_1002EFDC8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingItemPlayheadSynchronizer, (uint64_t)sub_1002EFAE8);
}

uint64_t sub_1002EFAE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F0B98(a1, (uint64_t (*)(_QWORD))&type metadata accessor for NowPlayingItemPlayheadSynchronizer, (uint64_t (*)(__n128))&NowPlayingItemPlayheadSynchronizer.init(asPartOf:), a2);
}

_QWORD *sub_1002EFB0C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002F0864(a1);
}

uint64_t sub_1002EFB20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F0B98(a1, (uint64_t (*)(_QWORD))&type metadata accessor for BookmarksController, (uint64_t (*)(__n128))&BookmarksController.init(asPartOf:), a2);
}

uint64_t sub_1002EFB44@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v2;
  id v3;
  uint64_t result;

  v2 = (objc_class *)type metadata accessor for LibraryViewControllerProvider();
  v3 = objc_msgSend(objc_allocWithZone(v2), "init");
  a1[3] = v2;
  result = sub_100026844(&qword_10055C4E0, (uint64_t (*)(uint64_t))type metadata accessor for LibraryViewControllerProvider, (uint64_t)&unk_1003CD210);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1002EFBC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002EFC1C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for HeaderButtonTipProvider, (uint64_t (*)(__n128))&HeaderButtonTipProvider.init(asPartOf:), (uint64_t)&protocol witness table for HeaderButtonTipProvider, a2);
}

uint64_t sub_1002EFBF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002EFC1C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for LibraryRemovalController, (uint64_t (*)(__n128))&LibraryRemovalController.init(asPartOf:), (uint64_t)&protocol witness table for LibraryRemovalController, a2);
}

uint64_t sub_1002EFC1C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(__n128)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  __n128 v10;
  uint64_t result;

  v9 = a2(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = swift_retain(a1);
  result = a3(v10);
  a5[3] = v9;
  a5[4] = a4;
  *a5 = result;
  return result;
}

uint64_t sub_1002EFC90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F0B98(a1, (uint64_t (*)(_QWORD))&type metadata accessor for RecommendationsMetadataProvider, (uint64_t (*)(__n128))&RecommendationsMetadataProvider.init(asPartOf:), a2);
}

uint64_t sub_1002EFCB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for HomePageProvider(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  swift_retain(a1);
  result = HomePageProvider.init(asPartOf:platformContext:)(v5, 0);
  *a2 = result;
  return result;
}

uint64_t sub_1002EFD14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F0B98(a1, (uint64_t (*)(_QWORD))&type metadata accessor for EpisodeUpsellBannerDataProvider, (uint64_t (*)(__n128))&EpisodeUpsellBannerDataProvider.init(asPartOf:), a2);
}

uint64_t sub_1002EFD38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v4 = type metadata accessor for PodcastsContextActionProvider();
  swift_allocObject(v4, 248, 7);
  swift_retain(a1);
  v6 = sub_10034E128(v5);
  result = swift_release(a1);
  a2[3] = v4;
  a2[4] = &off_1004C4928;
  *a2 = v6;
  return result;
}

uint64_t sub_1002EFDB4(uint64_t a1)
{
  return sub_1002EFDC8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for RemoteFollowCommandCenter, (uint64_t)sub_1002EFE14);
}

uint64_t sub_1002EFDC8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v4;

  v4 = a2(0);
  return BaseObjectGraph.satisfying<A>(_:with:)(v4, a3, 0, v4);
}

uint64_t sub_1002EFE14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t result;

  v4 = objc_msgSend(objc_allocWithZone((Class)MTSubscribeUtil), "init", swift_retain(a1).n128_f64[0]);
  v5 = objc_allocWithZone((Class)type metadata accessor for RemoteFollowCommandCenter(0));
  result = RemoteFollowCommandCenter.init(asPartOf:subscriptionUtility:)(a1, v4);
  *a2 = result;
  return result;
}

void sub_1002EFE94(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  NSString v20;
  unsigned __int8 v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  unsigned __int8 v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;

  v45 = a1;
  v2 = sub_10003F544((uint64_t *)&unk_100553DC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v43 = (char *)&v41 - v10;
  v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "stringForKey:", v12);

  if (!v13)
  {
LABEL_8:
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v11, "stringForKey:", v22);

    if (v23)
    {
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v27 = String._bridgeToObjectiveC()();
      v28 = objc_msgSend(v11, "stringForKey:", v27);

      if (v28)
      {
        v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v31 = v30;

        v32 = String._bridgeToObjectiveC()();
        v33 = objc_msgSend(v11, "BOOLForKey:", v32);

        if ((v33 & 1) == 0)
        {
          v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v37 = type metadata accessor for BundleAssetTranscriptProvider(0);
          v38 = v45;
          v45[3] = v37;
          v38[4] = &protocol witness table for BundleAssetTranscriptProvider;
          sub_1000242A8(v38);
          BundleAssetTranscriptProvider.init(ttmlFileName:signatureFileName:bundle:)(v24, v26, v29, v31, v36);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease(v26);
      }
      else
      {
        v31 = v26;
      }
      swift_bridgeObjectRelease(v31);
    }
    v34 = type metadata accessor for TimeBombedTranscriptProvider(0);
    v35 = v45;
    v45[3] = v34;
    v35[4] = &protocol witness table for TimeBombedTranscriptProvider;
    sub_1000242A8(v35);
    static TimeBombedTranscriptProvider.foreground.getter();
LABEL_16:

    return;
  }
  v44 = v1;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v11, "URLForKey:", v16);

  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v18(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease(v15);
    sub_100007A28((uint64_t)v4, (uint64_t *)&unk_100553DC0);
    goto LABEL_8;
  }
  v41 = v15;
  v19 = v43;
  v18(v43, v4, v5);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v11, "BOOLForKey:", v20);

  if ((v21 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
    swift_bridgeObjectRelease(v41);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v19, v5);
  v39 = type metadata accessor for KCUTranscriptProvider(0);
  v40 = v45;
  v45[3] = v39;
  v40[4] = &protocol witness table for KCUTranscriptProvider;
  sub_1000242A8(v40);
  KCUTranscriptProvider.init(bearerToken:basePath:kcuTranscriptPath:kcuSignaturePath:)(v42, v41, v9, 0x697263736E617274, 0xEA00000000007470, 0xD000000000000010, 0x8000000100437850);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
}

uint64_t sub_1002F0374@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F07AC(a1, (void (*)(_QWORD))&type metadata accessor for NowPlayingAlignmentCoordinator, (uint64_t (*)(__n128))&NowPlayingAlignmentCoordinator.__allocating_init(asPartOf:), a2);
}

uint64_t sub_1002F039C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002F1310(a1, a2);
}

uint64_t sub_1002F03B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v14[5];

  v4 = type metadata accessor for AMSOAuthEndpointSubscriber(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AMSOAuthEndpointSubscriber.init()(v5);
  v8 = type metadata accessor for OAuthHUDViewHandler(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(a1);
  v10 = OAuthHUDViewHandler.init(asPartOf:)(v9);
  v14[3] = v8;
  v14[4] = sub_100026844((unint64_t *)&unk_10055C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for OAuthHUDViewHandler, (uint64_t)&protocol conformance descriptor for OAuthHUDViewHandler);
  v14[0] = v10;
  v11 = type metadata accessor for OAuthController(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  result = OAuthController.init(endpointSubscriber:hudViewHandler:)(v7, v14);
  *a2 = result;
  return result;
}

char *sub_1002F04B0(const char *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  char *result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  char *v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  char *v39;

  v38 = a3;
  v39 = (char *)a1;
  v5 = type metadata accessor for OSSignpostError(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v37 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - v12;
  v14 = type metadata accessor for OSSignposter(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static OSSignposter.bootstrap.getter(v16);
  v20 = OSSignposter.logHandle.getter(v19);
  v21 = OSSignpostIntervalState.signpostID.getter();
  v34 = static os_signpost_type_t.end.getter(v21);
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    goto LABEL_5;
  v33 = v15;
  v22 = v9;
  if ((v38 & 1) == 0)
  {
    if (!v39)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
      return (char *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
    goto LABEL_10;
  }
  result = v39;
  if ((unint64_t)v39 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v39 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v39 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v39 = sub_10017425C();
LABEL_10:
  swift_retain(a4);
  checkForErrorAndConsumeState(state:)(v24);
  swift_release(a4);
  v26 = v35;
  v25 = v36;
  if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v7, v36) == enum case for OSSignpostError.doubleEnd(_:))
  {
    v27 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
    v27 = "";
  }
  v28 = v14;
  v29 = v37;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v37, v13, v8);
  v30 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v30 = 0;
  v31 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, (os_signpost_type_t)v34, v31, v39, v27, v30, 2u);
  swift_slowDealloc(v30, -1, -1);

  v32 = *(void (**)(char *, uint64_t))(v22 + 8);
  v32(v13, v8);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v28);
  return (char *)((uint64_t (*)(char *, uint64_t))v32)(v29, v8);
}

uint64_t sub_1002F0788@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F07AC(a1, (void (*)(_QWORD))&type metadata accessor for PlaybackController, (uint64_t (*)(__n128))&PlaybackController.__allocating_init(asPartOf:), a2);
}

uint64_t sub_1002F07AC@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t (*a3)(__n128)@<X2>, uint64_t *a4@<X8>)
{
  __n128 v7;
  uint64_t result;

  a2(0);
  v7 = swift_retain(a1);
  result = a3(v7);
  *a4 = result;
  return result;
}

uint64_t sub_1002F0800@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v4 = type metadata accessor for EpisodeController();
  swift_allocObject(v4, 144, 7);
  swift_retain(a1);
  v6 = sub_10026CA40(v5);
  result = swift_release(a1);
  *a2 = v6;
  return result;
}

_QWORD *sub_1002F0864@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeController();
  a1[3] = v2;
  a1[4] = sub_100026844((unint64_t *)&unk_10055C4E8, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeController, (uint64_t)&unk_1003D0CB0);
  return BaseObjectGraph.inject<A>(_:)(a1, v2, v2);
}

void sub_1002F08D4(_QWORD *a1@<X8>)
{
  objc_class *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  objc_super v11;

  v2 = (objc_class *)type metadata accessor for ChapterResultsController(0);
  v3 = (char *)objc_allocWithZone(v2);
  v4 = qword_10055ACA0;
  v5 = objc_allocWithZone((Class)MTChapterResultsController);
  v6 = v3;
  *(_QWORD *)&v3[v4] = objc_msgSend(v5, "init");

  v7 = *(void **)&v3[v4];
  v8 = &v6[qword_10055ABB0];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *(_QWORD *)&v6[qword_10055ABB8] = v7;
  v9 = v7;
  v11.receiver = v6;
  v11.super_class = (Class)sub_10003F544((uint64_t *)&unk_100562B30);
  v10 = objc_msgSendSuper2(&v11, "init");
  objc_msgSend(v9, "setDelegate:", v10);

  a1[3] = v2;
  a1[4] = &off_1004B6780;
  *a1 = v10;
}

uint64_t sub_1002F09EC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v4;

  v0 = sub_100005EC8(0, (unint64_t *)&unk_10055B850, off_1004A44A0);
  v1 = objc_msgSend((id)objc_opt_self(MTPlayerController), "defaultInstance");
  v4 = v1;
  v2 = BaseObjectGraph.satisfying<A>(_:with:)(v0, &v4, v0);

  return v2;
}

uint64_t sub_1002F0A78(uint64_t a1)
{
  return sub_1002EFDC8(a1, (uint64_t (*)(_QWORD))type metadata accessor for UserActivityController, (uint64_t)sub_1002F0A8C);
}

id sub_1002F0A8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  uint64_t v10;
  id result;
  objc_super v12;
  uint64_t v13;

  v4 = type metadata accessor for UserActivityController();
  v5 = (_QWORD *)swift_allocObject(v4, 72, 7);
  v5[2] = _swiftEmptyArrayStorage;
  v5[4] = 0;
  v5[6] = 0;
  v5[7] = 0;
  v5[8] = a1;
  v6 = type metadata accessor for PlaybackController(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v13, v6, v6);
  v7 = v13;
  v5[3] = v13;
  v8 = (objc_class *)type metadata accessor for PlaybackContinuityActivityDelegate();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = swift_weakInit(&v9[OBJC_IVAR____TtC8Podcasts34PlaybackContinuityActivityDelegate_playbackController], 0);
  swift_weakAssign(v10, v7);
  v12.receiver = v9;
  v12.super_class = v8;
  result = objc_msgSendSuper2(&v12, "init");
  v5[5] = result;
  *a2 = v5;
  return result;
}

uint64_t sub_1002F0B74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002F0B98(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SiriIntentDonator, (uint64_t (*)(__n128))&SiriIntentDonator.init(asPartOf:), a2);
}

uint64_t sub_1002F0B98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(__n128)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  __n128 v8;
  uint64_t result;

  v7 = a2(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = swift_retain(a1);
  result = a3(v8);
  *a4 = result;
  return result;
}

uint64_t sub_1002F0BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  ValueMetadata *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;

  v90 = a1;
  v1 = type metadata accessor for NativeIntentDispatcher(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v92 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v93 = (char *)&v85 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v85 - v8;
  v10 = __chkstk_darwin(v7);
  v101 = (char *)&v85 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v85 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v85 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v85 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v85 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v85 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v85 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v85 - v31;
  NativeIntentDispatcher.init()(v30);
  v33 = sub_10024FB54();
  v95 = v32;
  NativeIntentDispatcher.registering<A>(_:)(v33, &type metadata for FetchShowEntitiesIntentImplementation, v33);
  v94 = v2;
  v34 = *(void (**)(char *, uint64_t))(v2 + 8);
  v34(v29, v1);
  v35 = type metadata accessor for OpenTranscriptIntentImplementation(0);
  v36 = sub_100026844(&qword_10055C5B0, type metadata accessor for OpenTranscriptIntentImplementation, (uint64_t)&unk_1003D72E8);
  v96 = v26;
  v37 = static NativeIntentDispatcher.Builder.buildExpression<A>(_:)(v35, v35, v36);
  NativeIntentDispatcher.init()(v37);
  v38 = sub_10024FB98();
  v97 = v23;
  NativeIntentDispatcher.registering<A>(_:)(v38, &type metadata for UpdateEpisodePlayStateIntentImplementation, v38);
  v39 = ((uint64_t (*)(char *, uint64_t))v34)(v29, v1);
  NativeIntentDispatcher.init()(v39);
  v40 = sub_10024FBDC();
  v98 = v20;
  NativeIntentDispatcher.registering<A>(_:)(v40, &type metadata for FetchShowLatestLocalEpisodesIntentImplementation, v40);
  v41 = ((uint64_t (*)(char *, uint64_t))v34)(v29, v1);
  NativeIntentDispatcher.init()(v41);
  v42 = sub_10024FC20();
  v99 = v17;
  NativeIntentDispatcher.registering<A>(_:)(v42, &type metadata for FetchShowLatestEpisodesIntentImplementation, v42);
  v43 = ((uint64_t (*)(char *, uint64_t))v34)(v29, v1);
  NativeIntentDispatcher.init()(v43);
  v44 = sub_10024FC64();
  v100 = v14;
  NativeIntentDispatcher.registering<A>(_:)(v44, &type metadata for UnfollowShowIntentImplementation, v44);
  v102 = v29;
  v45 = ((uint64_t (*)(char *, uint64_t))v34)(v29, v1);
  v46 = static Podcasts.isBlueMoonEnabled()(v45);
  LOBYTE(v35) = v46;
  v91 = v9;
  NativeIntentDispatcher.init()(v46);
  v89 = v34;
  if ((v35 & 1) != 0)
  {
    v47 = sub_10024FD74();
    v48 = v102;
    v49 = v91;
    NativeIntentDispatcher.registering<A>(_:)(v47, &type metadata for EnqueueMediaItemForPlaybackIntentImplementation, v47);
    v50 = ((uint64_t (*)(char *, uint64_t))v34)(v49, v1);
    v51 = v93;
    NativeIntentDispatcher.init()(v50);
    v52 = sub_10024FDB8();
    NativeIntentDispatcher.registering<A>(_:)(v52, &type metadata for PlayEpisodeIntentImplementation, v52);
    v53 = ((uint64_t (*)(char *, uint64_t))v34)(v51, v1);
    v54 = v92;
    NativeIntentDispatcher.init()(v53);
    v55 = sub_10024FDFC();
    v56 = &type metadata for PlayStationIntentImplementation;
  }
  else
  {
    v57 = sub_10024FCA8();
    v48 = v102;
    v49 = v91;
    NativeIntentDispatcher.registering<A>(_:)(v57, &type metadata for LegacyEnqueueMediaItemForPlaybackIntentImplementation, v57);
    v58 = ((uint64_t (*)(char *, uint64_t))v34)(v49, v1);
    v51 = v93;
    NativeIntentDispatcher.init()(v58);
    v59 = sub_10024FCEC();
    NativeIntentDispatcher.registering<A>(_:)(v59, &type metadata for LegacyPlayEpisodeIntentImplementation, v59);
    v60 = ((uint64_t (*)(char *, uint64_t))v34)(v51, v1);
    v54 = v92;
    NativeIntentDispatcher.init()(v60);
    v55 = sub_10024FD30();
    v56 = &type metadata for LegacyPlayStationIntentImplementation;
  }
  NativeIntentDispatcher.registering<A>(_:)(v55, v56, v55);
  v34(v54, v1);
  v61 = sub_10003F544((uint64_t *)&unk_100562B00);
  v62 = v94;
  v63 = *(_QWORD *)(v94 + 72);
  v64 = *(unsigned __int8 *)(v94 + 80);
  v65 = (v64 + 32) & ~v64;
  v88 = 3 * v63;
  v85 = v64 | 7;
  v66 = swift_allocObject(v61, v65 + 3 * v63, v64 | 7);
  v86 = v65;
  v67 = v66 + v65;
  v68 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 16);
  v68(v67, v48, v1);
  v68(v67 + v63, v49, v1);
  v87 = 2 * v63;
  v69 = ((uint64_t (*)(uint64_t, char *, uint64_t))v68)(v67 + 2 * v63, v51, v1);
  v70 = v92;
  NativeIntentDispatcher.init()(v69);
  NativeIntentDispatcher.register(contentsOf:)(v67);
  NativeIntentDispatcher.register(contentsOf:)(v67 + v63);
  NativeIntentDispatcher.register(contentsOf:)(v67 + 2 * v63);
  swift_setDeallocating(v66);
  swift_arrayDestroy(v67, 3, v1);
  swift_deallocClassInstance(v66, 32, 7);
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v101, v70, v1);
  v71 = v89;
  v89(v93, v1);
  v71(v91, v1);
  v71(v102, v1);
  v72 = type metadata accessor for CategoryPageFromYourShowsShelfIntentImplementation(0);
  v73 = sub_100026844((unint64_t *)&unk_10055C680, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryPageFromYourShowsShelfIntentImplementation, (uint64_t)&protocol conformance descriptor for CategoryPageFromYourShowsShelfIntentImplementation);
  static NativeIntentDispatcher.Builder.buildExpression<A>(_:)(v72, v72, v73);
  v74 = sub_10003F544((uint64_t *)&unk_100562B00);
  v75 = v86;
  v94 = swift_allocObject(v74, v86 + 8 * v63, v85);
  v76 = v94 + v75;
  v68(v94 + v75, v95, v1);
  v93 = (char *)(v76 + v63);
  ((void (*)(void))v68)();
  v92 = (char *)(v76 + v87);
  ((void (*)(void))v68)();
  v77 = v76 + v88;
  v68(v76 + v88, v98, v1);
  v78 = v76 + 4 * v63;
  v68(v78, v99, v1);
  v79 = v76 + 5 * v63;
  v68(v79, v100, v1);
  v80 = v76 + 6 * v63;
  v68(v80, v101, v1);
  v81 = v76 + 7 * v63;
  v82 = ((uint64_t (*)(uint64_t, char *, uint64_t))v68)(v81, v102, v1);
  NativeIntentDispatcher.init()(v82);
  NativeIntentDispatcher.register(contentsOf:)(v76);
  NativeIntentDispatcher.register(contentsOf:)(v93);
  NativeIntentDispatcher.register(contentsOf:)(v92);
  NativeIntentDispatcher.register(contentsOf:)(v77);
  NativeIntentDispatcher.register(contentsOf:)(v78);
  NativeIntentDispatcher.register(contentsOf:)(v79);
  NativeIntentDispatcher.register(contentsOf:)(v80);
  NativeIntentDispatcher.register(contentsOf:)(v81);
  v83 = v94;
  swift_setDeallocating(v94);
  swift_arrayDestroy(v76, 8, v1);
  swift_deallocClassInstance(v83, 32, 7);
  v71(v102, v1);
  v71(v101, v1);
  v71(v100, v1);
  v71(v99, v1);
  v71(v98, v1);
  v71(v97, v1);
  v71(v96, v1);
  return ((uint64_t (*)(char *, uint64_t))v71)(v95, v1);
}

