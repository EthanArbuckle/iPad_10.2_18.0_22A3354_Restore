uint64_t sub_100B79E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t refreshed;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter);
  if (v2)
  {
    v3 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter);
  }
  else
  {
    v4 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16, v0);
    refreshed = type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter();
    v3 = swift_allocObject(refreshed, 104, 7);
    *(_QWORD *)(v3 + 32) = 0;
    *(_WORD *)(v3 + 40) = 1;
    *(_BYTE *)(v3 + 72) = 0;
    *(_QWORD *)(v3 + 88) = 0;
    *(_QWORD *)(v3 + 96) = 0;
    *(_QWORD *)(v3 + 80) = 0;
    *(_QWORD *)(v3 + 16) = 0xD00000000000001DLL;
    *(_QWORD *)(v3 + 24) = 0x8000000100FFCA40;
    *(_QWORD *)(v3 + 48) = &_swiftEmptySetSingleton;
    *(_QWORD *)(v3 + 56) = sub_100BBA570;
    *(_QWORD *)(v3 + 64) = v4;
    v6 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v6);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

void sub_100B79F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100B7E16C((*(_BYTE *)(Strong
                            + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController) & 1) == 0);
    sub_100B82A94();

  }
}

id sub_100B7A024()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  objc_super v24;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "removeObserver:", v0);

  v3 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (v4)
  {
    v5 = objc_msgSend(v1, "defaultCenter", swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver]).n128_f64[0]);
    objc_msgSend(v5, "removeObserver:", v4);
    swift_release(v4);

    v6 = *(_QWORD *)&v0[v3];
    *(_QWORD *)&v0[v3] = 0;
    swift_release(v6);
  }
  v7 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver];
  if (v8)
  {
    v9 = objc_msgSend(v1, "defaultCenter", swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver]).n128_f64[0]);
    objc_msgSend(v9, "removeObserver:", v8);
    swift_release(v8);

    v10 = *(_QWORD *)&v0[v7];
    *(_QWORD *)&v0[v7] = 0;
    swift_release(v10);
  }
  v11 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver];
  if (v12)
  {
    v13 = objc_msgSend(v1, "defaultCenter", swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver]).n128_f64[0]);
    objc_msgSend(v13, "removeObserver:", v12);
    swift_unknownObjectRelease(v12);

    v14 = *(_QWORD *)&v0[v11];
    *(_QWORD *)&v0[v11] = 0;
    swift_unknownObjectRelease(v14);
  }
  v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver;
  v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver];
  if (v16)
  {
    v17 = objc_msgSend(v1, "defaultCenter", swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver]).n128_f64[0]);
    objc_msgSend(v17, "removeObserver:", v16);

    swift_unknownObjectRelease(v16);
    v18 = *(_QWORD *)&v0[v15];
  }
  else
  {
    v18 = 0;
  }
  *(_QWORD *)&v0[v15] = 0;
  swift_unknownObjectRelease(v18);
  v19 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver;
  v20 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver];
  if (v20)
  {
    v21 = objc_msgSend(v1, "defaultCenter", swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver]).n128_f64[0]);
    objc_msgSend(v21, "removeObserver:", v20);

    swift_unknownObjectRelease(v20);
    v22 = *(_QWORD *)&v0[v19];
  }
  else
  {
    v22 = 0;
  }
  *(_QWORD *)&v0[v19] = 0;
  swift_unknownObjectRelease(v22);
  objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "removeKeyboardObserver:", v0);
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
  return objc_msgSendSuper2(&v24, "dealloc");
}

uint64_t sub_100B7A4A4()
{
  return type metadata accessor for CRLiOSFolderGridViewController(0);
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_101406ED0;
  if (!qword_101406ED0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSFolderGridViewController);
  return result;
}

uint64_t sub_100B7A4E8()
{
  char *v0;
  objc_class *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  _QWORD v33[4];
  objc_super v34;

  v1 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController(0);
  v34.receiver = v0;
  v34.super_class = v1;
  objc_msgSendSuper2(&v34, "viewDidLoad");
  v2 = objc_msgSend(v0, "collectionView");
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  objc_msgSend(v2, "setPreservesSuperviewLayoutMargins:", 1);

  v4 = objc_msgSend(v0, "collectionView");
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  objc_msgSend(v4, "setAlwaysBounceVertical:", 1);

  v6 = objc_msgSend(v0, "collectionView");
  if (!v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = v6;
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer()), "initWithTarget:action:", v0, "didRecognizeSingleContinuousTouchGesture:");
  objc_msgSend(v7, "addGestureRecognizer:", v8);

  v9 = (void *)sub_100B7A968();
  v10 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout;
  v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = v9;
  v12 = v9;

  if (*(_QWORD *)&v0[v10])
  {
    v13 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout;
    if ((v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout] & 1) != 0)
      sub_100B792A4();

    v14 = sub_100B79B6C();
    v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout;
    v16 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout];
    *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = v14;
    v17 = v14;

    if (!*(_QWORD *)&v0[v15])
    {
      v32 = 221;
      sub_100757E04(&_mh_execute_header, (uint64_t)"listLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 221, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"listLayout", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 221, (uint64_t)"invalid nil value found", 23, 2u);
      goto LABEL_24;
    }
    if ((v0[v13] & 1) == 0)
      sub_100B792A4();

    sub_100DA9EB4();
    sub_100B792A4();
    sub_100B7E16C(0);
    sub_100B84118();
    sub_100B83548();
    v18 = objc_msgSend(v0, "collectionView");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, "setAllowsSelectionDuringEditing:", 1);

      v20 = objc_msgSend(v0, "collectionView");
      if (v20)
      {
        v21 = v20;
        objc_msgSend(v20, "setAllowsMultipleSelectionDuringEditing:", 1);

        v22 = objc_msgSend(v0, "collectionView");
        if (v22)
        {
          v23 = v22;
          v24 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
          objc_msgSend(v23, "setBackgroundColor:", v24);

          v25 = objc_msgSend(v0, "collectionView");
          if (v25)
          {
            v26 = v25;
            objc_msgSend(v25, "setAllowsMultipleSelection:", 1);

            sub_100B7AC5C();
            v27 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
            v28 = swift_allocObject(v27, 48, 7);
            *(_OWORD *)(v28 + 16) = xmmword_100EF5E40;
            *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
            *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
            v33[3] = v1;
            v33[0] = v0;
            v29 = v0;
            v30 = UIViewController.registerForTraitChanges(_:target:action:)(v28, v33, "observedTraitsDidChange");
            swift_unknownObjectRelease(v30);
            swift_bridgeObjectRelease();
            return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_22:
  v32 = 210;
  sub_100757E04(&_mh_execute_header, (uint64_t)"gridLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 210, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"gridLayout", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 210, (uint64_t)"invalid nil value found", 23, 2u);
LABEL_24:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLiOSFolderGridViewController.swift", 45, 2, v32, 0);
  __break(1u);
  return result;
}

uint64_t sub_100B7A968()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, "isViewLoaded", v5))
  {

    v8 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v9);

    v11 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v3, v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
    swift_unknownObjectRetain(v12);
    swift_bridgeObjectRetain(v11);
    v14 = sub_100BB2AF0(v13, v12);
    swift_unknownObjectRelease(v12);
    swift_bridgeObjectRelease();
    v15 = v14[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = sub_100B787A8();
    v17 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
    if (qword_1013DC960 != -1)
      swift_once(&qword_1013DC960, sub_100559BA0);
    objc_msgSend(v17, "setInterSectionSpacing:", *(double *)&qword_1013E22D0);
    v18 = swift_allocObject(&unk_101297558, 32, 7);
    *(_QWORD *)(v18 + 24) = &off_1012A64A0;
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (_QWORD *)swift_allocObject(&unk_101297580, 40, 7);
    v19[2] = ObjectType;
    v19[3] = v16;
    v19[4] = v18;
    objc_allocWithZone((Class)type metadata accessor for CRLCollectionViewCompositionalLayout());
    v20 = v16;
    swift_retain(v19);
    v21 = v17;
    v22 = (char *)sub_1005B861C(0, v15 != 0, (uint64_t)sub_100BBC2B4, (uint64_t)v19, v17);
    if (qword_1013DC998 != -1)
      swift_once(&qword_1013DC998, sub_100559C10);
    objc_msgSend((id)qword_1013E2308, "dimension");
    v24 = v23;
    swift_release(v19);

    *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = v24;
    return (uint64_t)v22;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000058, 0x8000000100FFD1C0, "Freeform/CRLiOSFolderGridViewController.swift", 45, 2, 3227, 0);
    __break(1u);
  }
  return result;
}

double sub_100B7AC5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  double result;
  _QWORD v20[5];
  uint64_t v21;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = objc_msgSend(v2, "defaultCenter");
  if (qword_1013DDD68 != -1)
    swift_once(&qword_1013DDD68, sub_100BC0B9C);
  objc_msgSend(v3, "addObserver:selector:name:object:", v1, "handleBoardLibrarySnapshotUpdateWithNotification:", qword_101480E38, *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider));

  if (qword_1013DCAC8 != -1)
    swift_once(&qword_1013DCAC8, sub_100589738);
  v4 = (void *)qword_10147EA38;
  v5 = (void *)objc_opt_self(NSOperationQueue);
  v6 = v4;
  v7 = objc_msgSend(v5, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  v8 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = type metadata accessor for CRLiOSFolderGridViewController.NotificationObserver();
  v10 = swift_allocObject(v9, 40, 7);
  sub_100B9C9A4(v6, (uint64_t)v20, v7, (uint64_t)sub_100BBC238, v8);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver) = v10;
  v12 = objc_msgSend(v2, "defaultCenter", swift_release(v11).n128_f64[0]);
  objc_msgSend(v12, "addObserver:selector:name:object:", v1, "reloadAllItems", NSCurrentLocaleDidChangeNotification, 0);

  v13 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v13, "addObserver:selector:name:object:", v1, "reloadAllItems", NSSystemClockDidChangeNotification, 0);

  v14 = objc_msgSend(v2, "defaultCenter");
  v15 = objc_msgSend(v5, "mainQueue");
  v16 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v20[4] = sub_100BBC240;
  v21 = v16;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = *(_QWORD *)"";
  v20[2] = sub_100568280;
  v20[3] = &unk_1012974A8;
  v17 = _Block_copy(v20);
  v18 = objc_msgSend(v14, "addObserverForName:object:queue:usingBlock:", NSCalendarDayChangedNotification, 0, v15, v17, swift_release(v21).n128_f64[0]);
  _Block_release(v17);

  *(_QWORD *)&result = swift_unknownObjectRelease(v18).n128_u64[0];
  return result;
}

void sub_100B7AFA8(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  unsigned int v6;
  double v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  void *v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  void *v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void **aBlock;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  void *v83;
  double (*v84)(uint64_t);
  uint64_t v85;
  objc_super v86;

  v2 = v1;
  v86.receiver = v2;
  v86.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
  objc_msgSendSuper2(&v86, "viewWillAppear:", a1 & 1);
  v4 = (void *)objc_opt_self(UIApplication);
  v5 = objc_msgSend(v4, "sharedApplication");
  v6 = objc_msgSend(v5, "isRunningTest");

  if (v6)
  {
    v8 = objc_msgSend(v4, "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (!v9)
    {
      __break(1u);
      return;
    }
    v10 = type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
    v11 = qword_10147FC10;
    if (qword_10147FC10)
    {
      v12 = qword_10147FC20;
      ObjectType = swift_getObjectType(qword_10147FC10);
      aBlock = (void **)v11;
      v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 24);
      v15 = swift_unknownObjectRetain(v11);
      v14(v2, ObjectType, v12, v15);
      swift_unknownObjectRelease(v11);
    }
    *(_QWORD *)&v7 = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  v16 = objc_msgSend(v2, "navigationController", v7);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "navigationBar");

    if (v18)
    {
      v19 = v18;
      objc_msgSend(v19, "setPrefersLargeTitles:", 1);
      v20 = sub_1004B804C((uint64_t *)&unk_1013F4250);
      inited = swift_initStackObject(v20, &v79);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      v22 = NSForegroundColorAttributeName;
      sub_100BCE1AC();
      v24 = v23;
      *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
      *(_QWORD *)(inited + 40) = v24;
      sub_1008D4FE0(inited);
      type metadata accessor for Key(0);
      sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "setLargeTitleTextAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  sub_100B7D2B4();
  v26 = sub_100B79E5C();
  v27 = *(_QWORD *)(v26 + 48);
  swift_bridgeObjectRetain(v27);
  swift_release(v26);
  if (*(_QWORD *)(v27 + 16)
    && (Hasher.init(_seed:)(&aBlock, *(_QWORD *)(v27 + 40)),
        Hasher._combine(_:)(3uLL),
        v28 = Hasher._finalize()(),
        v29 = -1 << *(_BYTE *)(v27 + 32),
        v30 = v28 & ~v29,
        ((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0))
  {
    v31 = ~v29;
    while (1)
    {
      v32 = *(_QWORD *)(v27 + 48) + 16 * v30;
      if (*(unsigned __int8 *)(v32 + 8) >= 3u && !*(_QWORD *)v32)
        break;
      v30 = (v30 + 1) & v31;
      if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    v33 = sub_100B79E5C();
    sub_100B9BC30(0, 3);
    v34 = *(_QWORD *)(v33 + 48);
    Hasher.init(_seed:)(&aBlock, *(_QWORD *)(v34 + 40));
    Hasher._combine(_:)(3uLL);
    v35 = Hasher._finalize()();
    v36 = -1 << *(_BYTE *)(v34 + 32);
    v37 = v35 & ~v36;
    if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
    {
      v38 = ~v36;
      while (1)
      {
        v39 = *(_QWORD *)(v34 + 48) + 16 * v37;
        if (*(unsigned __int8 *)(v39 + 8) >= 3u && !*(_QWORD *)v39)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_40;
      }
      swift_bridgeObjectRetain(v34);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
      aBlock = (void **)v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100AEB3C0();
        v34 = (uint64_t)aBlock;
      }
      v42 = *(_QWORD *)(v34 + 48) + 16 * v37;
      v43 = *(void **)v42;
      v44 = *(_BYTE *)(v42 + 8);
      sub_100BA1C50(v37);
      v34 = (uint64_t)aBlock;
      swift_bridgeObjectRelease();
      sub_1006B8384(v43, v44);
    }
    else
    {
LABEL_40:
      swift_bridgeObjectRetain(v34);
    }
    v64 = *(_QWORD *)(v33 + 48);
    swift_bridgeObjectRetain(v64);
    sub_100B9A254(v34);
    *(_QWORD *)(v33 + 48) = v34;
    swift_bridgeObjectRelease();
    sub_100B9A568(v64);
    swift_bridgeObjectRelease();
    swift_release(v33);
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
  }
  v45 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (v45)
  {
    v46 = *(_QWORD *)(v45 + 16);
    if (v46)
    {
      v47 = *(_QWORD *)(v46 + 48);
      if (*(_QWORD *)(v47 + 16))
      {
        Hasher.init(_seed:)(&aBlock, *(_QWORD *)(v47 + 40));
        Hasher._combine(_:)(3uLL);
        v48 = Hasher._finalize()();
        v49 = -1 << *(_BYTE *)(v47 + 32);
        v50 = v48 & ~v49;
        if (((*(_QWORD *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) != 0)
        {
          v51 = ~v49;
          while (1)
          {
            v52 = *(_QWORD *)(v47 + 48) + 16 * v50;
            if (*(unsigned __int8 *)(v52 + 8) >= 3u && !*(_QWORD *)v52)
              break;
            v50 = (v50 + 1) & v51;
            if (((*(_QWORD *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
              goto LABEL_44;
          }
          swift_retain(v46);
          sub_100B9BC30(0, 3);
          v53 = *(_QWORD *)(v46 + 48);
          Hasher.init(_seed:)(&aBlock, *(_QWORD *)(v53 + 40));
          Hasher._combine(_:)(3uLL);
          v54 = Hasher._finalize()();
          v55 = -1 << *(_BYTE *)(v53 + 32);
          v56 = v54 & ~v55;
          if (((*(_QWORD *)(v53 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
          {
            v57 = ~v55;
            while (1)
            {
              v58 = *(_QWORD *)(v53 + 48) + 16 * v56;
              if (*(unsigned __int8 *)(v58 + 8) >= 3u && !*(_QWORD *)v58)
                break;
              v56 = (v56 + 1) & v57;
              if (((*(_QWORD *)(v53 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
                goto LABEL_42;
            }
            swift_bridgeObjectRetain(v53);
            v60 = swift_isUniquelyReferenced_nonNull_native(v59);
            aBlock = (void **)v53;
            if ((v60 & 1) == 0)
            {
              sub_100AEB3C0();
              v53 = (uint64_t)aBlock;
            }
            v61 = *(_QWORD *)(v53 + 48) + 16 * v56;
            v62 = *(void **)v61;
            v63 = *(_BYTE *)(v61 + 8);
            sub_100BA1C50(v56);
            v53 = (uint64_t)aBlock;
            swift_bridgeObjectRelease();
            sub_1006B8384(v62, v63);
          }
          else
          {
LABEL_42:
            swift_bridgeObjectRetain(v53);
          }
          v65 = *(_QWORD *)(v46 + 48);
          swift_bridgeObjectRetain(v65);
          sub_100B9A254(v53);
          *(_QWORD *)(v46 + 48) = v53;
          swift_bridgeObjectRelease();
          sub_100B9A568(v65);
          swift_bridgeObjectRelease();
          swift_release(v46);
        }
      }
    }
  }
LABEL_44:
  v66 = (void *)objc_opt_self(NSNotificationCenter);
  v67 = objc_msgSend(v66, "defaultCenter");
  if (qword_1013DDAE8 != -1)
    swift_once(&qword_1013DDAE8, sub_100B031E8);
  v68 = qword_101480AF8;
  v69 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16);
  v84 = sub_100BBC108;
  v85 = v69;
  aBlock = _NSConcreteStackBlock;
  v81 = *(_QWORD *)"";
  v82 = sub_100568280;
  v83 = &unk_101297408;
  v70 = _Block_copy(&aBlock);
  v71 = objc_msgSend(v67, "addObserverForName:object:queue:usingBlock:", v68, 0, 0, v70, swift_release(v85).n128_f64[0]);
  _Block_release(v70);

  v72 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = v71;
  v73 = objc_msgSend(v66, "defaultCenter", swift_unknownObjectRelease(v72).n128_f64[0]);
  if (qword_1013DDAE0 != -1)
    swift_once(&qword_1013DDAE0, sub_100B031B4);
  v74 = qword_101480AF0;
  v75 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v75 + 16);
  v84 = sub_100BBC130;
  v85 = v75;
  aBlock = _NSConcreteStackBlock;
  v81 = *(_QWORD *)"";
  v82 = sub_100568280;
  v83 = &unk_101297430;
  v76 = _Block_copy(&aBlock);
  v77 = objc_msgSend(v73, "addObserverForName:object:queue:usingBlock:", v74, 0, 0, v76, swift_release(v85).n128_f64[0]);
  _Block_release(v76);

  v78 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = v77;
  swift_unknownObjectRelease(v78);
}

uint64_t sub_100B7B854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100BBC570, v6, v7);
}

double sub_100B7B8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v19[24];

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    type metadata accessor for MainActor(0);
    v14 = v12;
    v15 = static MainActor.shared.getter(v14);
    v16 = (_QWORD *)swift_allocObject(a3, 40, 7);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v14;
    v17 = sub_100521B98((uint64_t)v9, a4, (uint64_t)v16);

    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_100B7B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100B7BA4C, v6, v7);
}

uint64_t sub_100B7BA4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_100B87C38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100B7BAC0(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  unsigned int v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  __n128 v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  objc_super v26;

  v2 = v1;
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
  objc_msgSendSuper2(&v26, "viewDidAppear:", a1 & 1);
  v4 = (void *)objc_opt_self(UIApplication);
  v5 = objc_msgSend(v4, "sharedApplication");
  v6 = objc_msgSend(v5, "delegate");

  if (!v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  v7 = type metadata accessor for CRLiOSAppDelegate();
  v8 = swift_dynamicCastClassUnconditional(v6, v7, 0, 0, 0);
  v9 = objc_msgSend(v4, "sharedApplication");
  if (objc_msgSend(v9, "shouldRecordExtendedLaunchTime")
    && (v10 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
        (*(_BYTE *)(v8 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
  {
    v11 = objc_msgSend(v9, "_launchTestName");
    objc_msgSend(v9, "finishedTest:", v11);

    *(_BYTE *)(v8 + v10) = 1;
  }
  else
  {

  }
  v12 = objc_msgSend(v4, "sharedApplication", swift_unknownObjectRelease(v6).n128_f64[0]);
  v13 = objc_msgSend(v12, "isRunningTest");

  if (v13)
  {
    v15 = objc_msgSend(v4, "sharedApplication");
    v16 = objc_msgSend(v15, "delegate");

    if (!v16)
    {
LABEL_17:
      __break(1u);
      return;
    }
    swift_dynamicCastClassUnconditional(v16, v7, 0, 0, 0);
    v17 = qword_10147FC10;
    if (qword_10147FC10)
    {
      v18 = qword_10147FC20;
      ObjectType = swift_getObjectType(qword_10147FC10);
      v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 32);
      v21 = swift_unknownObjectRetain(v17);
      v20(v2, ObjectType, v18, v21);
      swift_unknownObjectRelease(v17);
    }
    *(_QWORD *)&v14 = swift_unknownObjectRelease(v16).n128_u64[0];
  }
  v22 = objc_msgSend(v2, "collectionView", v14);
  if (!v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "collectionViewLayout");

  objc_msgSend(v24, "invalidateLayout");
  v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 1;
  v25 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider]
                 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
  if ((objc_msgSend(v25, "containsObject:", v2) & 1) == 0)
    objc_msgSend(v25, "addObject:", v2);
  objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "addKeyboardObserver:", v2);
}

void sub_100B7BE78(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_native;
  int v13;
  unint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD v46[9];
  objc_super v47;

  v2 = v1;
  v47.receiver = v2;
  v47.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
  objc_msgSendSuper2(&v47, "viewDidDisappear:", a1 & 1);
  v4 = sub_100B79E5C();
  sub_100B9BC30(0, 3);
  v5 = *(_QWORD *)(v4 + 48);
  Hasher.init(_seed:)(v46, *(_QWORD *)(v5 + 40));
  Hasher._combine(_:)(3uLL);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    while (1)
    {
      v10 = *(_QWORD *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v10 + 8) >= 3u && !*(_QWORD *)v10)
        break;
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    swift_bridgeObjectRetain(v5);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRetain(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v13 = isUniquelyReferenced_nonNull_native;
    v45 = v5;
    v14 = *(_QWORD *)(v5 + 16);
    if (*(_QWORD *)(v5 + 24) <= v14)
    {
      v15 = v14 + 1;
      if (v13)
        sub_100AE204C(v15);
      else
        sub_100AF10B8(v15);
      Hasher.init(_seed:)(v46, *(_QWORD *)(v5 + 40));
      Hasher._combine(_:)(3uLL);
      v16 = Hasher._finalize()();
      v17 = -1 << *(_BYTE *)(v5 + 32);
      v8 = v16 & ~v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
      {
        v18 = ~v17;
        do
        {
          v19 = *(_QWORD *)(v5 + 48) + 16 * v8;
          if (*(unsigned __int8 *)(v19 + 8) >= 3u && !*(_QWORD *)v19)
            goto LABEL_40;
          v8 = (v8 + 1) & v18;
        }
        while (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
      }
    }
    else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEB3C0();
    }
    *(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
    v20 = *(_QWORD *)(v5 + 48) + 16 * v8;
    *(_QWORD *)v20 = 0;
    *(_BYTE *)(v20 + 8) = 3;
    v21 = *(_QWORD *)(v5 + 16);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
      goto LABEL_48;
    }
    *(_QWORD *)(v5 + 16) = v23;
    swift_bridgeObjectRelease();
  }
  v24 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain(v24);
  sub_100B9A254(v5);
  *(_QWORD *)(v4 + 48) = v5;
  swift_bridgeObjectRelease();
  sub_100B9A568(v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25 = swift_release(v4).n128_u64[0];
  v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (!v26)
    goto LABEL_44;
  v4 = *(_QWORD *)(v26 + 16);
  if (!v4)
    goto LABEL_44;
  swift_retain(*(_QWORD *)(v26 + 16));
  sub_100B9BC30(0, 3);
  v5 = *(_QWORD *)(v4 + 48);
  Hasher.init(_seed:)(v46, *(_QWORD *)(v5 + 40));
  Hasher._combine(_:)(3uLL);
  v27 = Hasher._finalize()();
  v28 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v27 & ~v28;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v29 = ~v28;
    while (1)
    {
      v30 = *(_QWORD *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v30 + 8) >= 3u && !*(_QWORD *)v30)
        break;
      v8 = (v8 + 1) & v29;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_29;
    }
    swift_bridgeObjectRetain(v5);
    goto LABEL_43;
  }
LABEL_29:
  swift_bridgeObjectRetain(v5);
  v32 = swift_isUniquelyReferenced_nonNull_native(v31);
  v33 = v32;
  v45 = v5;
  v34 = *(_QWORD *)(v5 + 16);
  if (*(_QWORD *)(v5 + 24) > v34)
  {
    if ((v32 & 1) == 0)
      sub_100AEB3C0();
    goto LABEL_41;
  }
  v35 = v34 + 1;
  if (v33)
    sub_100AE204C(v35);
  else
    sub_100AF10B8(v35);
  Hasher.init(_seed:)(v46, *(_QWORD *)(v5 + 40));
  Hasher._combine(_:)(3uLL);
  v36 = Hasher._finalize()();
  v37 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v36 & ~v37;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v38 = ~v37;
    while (1)
    {
      v39 = *(_QWORD *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v39 + 8) >= 3u && !*(_QWORD *)v39)
        break;
      v8 = (v8 + 1) & v38;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_41;
    }
LABEL_40:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
    __break(1u);
  }
LABEL_41:
  *(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
  v40 = *(_QWORD *)(v5 + 48) + 16 * v8;
  *(_QWORD *)v40 = 0;
  *(_BYTE *)(v40 + 8) = 3;
  v41 = *(_QWORD *)(v5 + 16);
  v22 = __OFADD__(v41, 1);
  v42 = v41 + 1;
  if (v22)
  {
LABEL_48:
    __break(1u);
    return;
  }
  *(_QWORD *)(v5 + 16) = v42;
  swift_bridgeObjectRelease();
LABEL_43:
  v43 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain(v43);
  sub_100B9A254(v5);
  *(_QWORD *)(v4 + 48) = v5;
  swift_bridgeObjectRelease();
  sub_100B9A568(v43);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25 = swift_release(v4).n128_u64[0];
LABEL_44:
  v44 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider]
                 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
  if (objc_msgSend(v44, "containsObject:", v2, v25, v45))
    objc_msgSend(v44, "removeObject:", v2);
}

double sub_100B7C3B4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double result;
  uint64_t v18;
  double *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B7D2B4();
  sub_100B82A94();
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  v10 = swift_allocObject(&unk_1012969A0, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_100BBA568;
  v21 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_1012969B8;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v16 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100B7C5B4(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "collectionViewLayout");

    objc_msgSend(v3, "invalidateLayout");
  }
  else
  {
    __break(1u);
  }
}

double sub_100B7C658(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_native;
  int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  unsigned __int8 v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[9];

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController) == (a1 & 1))
    return result;
  v3 = v1;
  v5 = sub_100B79E5C();
  if ((a1 & 1) != 0)
  {
    sub_100B9BC30(1, 3);
    v6 = *(_QWORD *)(v5 + 48);
    Hasher.init(_seed:)(v69, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(4uLL);
    v7 = Hasher._finalize()();
    v8 = -1 << *(_BYTE *)(v6 + 32);
    v9 = v7 & ~v8;
    if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    {
      v10 = ~v8;
      while (1)
      {
        v11 = *(_QWORD *)(v6 + 48) + 16 * v9;
        if (*(unsigned __int8 *)(v11 + 8) >= 3u && *(_QWORD *)v11 == 1)
          break;
        v9 = (v9 + 1) & v10;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_16;
      }
      swift_bridgeObjectRetain(v6);
    }
    else
    {
LABEL_16:
      swift_bridgeObjectRetain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
      v24 = isUniquelyReferenced_nonNull_native;
      v25 = *(_QWORD *)(v6 + 16);
      if (*(_QWORD *)(v6 + 24) <= v25)
      {
        v40 = v25 + 1;
        if (v24)
          sub_100AE204C(v40);
        else
          sub_100AF10B8(v40);
        Hasher.init(_seed:)(v69, *(_QWORD *)(v6 + 40));
        Hasher._combine(_:)(4uLL);
        v41 = Hasher._finalize()();
        v42 = -1 << *(_BYTE *)(v6 + 32);
        v9 = v41 & ~v42;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
        {
          v43 = ~v42;
          do
          {
            v44 = *(_QWORD *)(v6 + 48) + 16 * v9;
            if (*(unsigned __int8 *)(v44 + 8) >= 3u && *(_QWORD *)v44 == 1)
              goto LABEL_61;
            v9 = (v9 + 1) & v43;
          }
          while (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
        }
      }
      else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100AEB3C0();
      }
      *(_QWORD *)(v6 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v9;
      v45 = *(_QWORD *)(v6 + 48) + 16 * v9;
      *(_QWORD *)v45 = 1;
      *(_BYTE *)(v45 + 8) = 3;
      v46 = *(_QWORD *)(v6 + 16);
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        sub_100AEB3C0();
        v12 = v69[0];
        goto LABEL_15;
      }
      *(_QWORD *)(v6 + 16) = v48;
      swift_bridgeObjectRelease(0x8000000000000000);
    }
    v9 = *(_QWORD *)(v5 + 48);
    swift_bridgeObjectRetain(v9);
    sub_100B9A254(v6);
    v49 = *(_QWORD *)(v5 + 48);
    *(_QWORD *)(v5 + 48) = v6;
    swift_bridgeObjectRelease(v49);
    sub_100B9A568(v9);
    swift_release(v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
    v50 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver);
    if (!v50)
      return result;
    v3 = *(_QWORD *)(v50 + 16);
    if (!v3)
      return result;
    swift_retain(*(_QWORD *)(v50 + 16));
    sub_100B9BC30(1, 3);
    v5 = *(_QWORD *)(v3 + 48);
    Hasher.init(_seed:)(v69, *(_QWORD *)(v5 + 40));
    Hasher._combine(_:)(4uLL);
    v51 = Hasher._finalize()();
    v52 = -1 << *(_BYTE *)(v5 + 32);
    v6 = v51 & ~v52;
    if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v53 = ~v52;
      while (1)
      {
        v54 = *(_QWORD *)(v5 + 48) + 16 * v6;
        if (*(unsigned __int8 *)(v54 + 8) >= 3u && *(_QWORD *)v54 == 1)
          break;
        v6 = (v6 + 1) & v53;
        if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_50;
      }
LABEL_48:
      swift_bridgeObjectRetain(v5);
LABEL_64:
      v67 = *(_QWORD *)(v3 + 48);
      swift_bridgeObjectRetain(v67);
      sub_100B9A254(v5);
      v68 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)(v3 + 48) = v5;
      swift_bridgeObjectRelease(v68);
      sub_100B9A568(v67);
      swift_release(v3);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v67).n128_u64[0];
      return result;
    }
LABEL_50:
    swift_bridgeObjectRetain(v5);
    v56 = swift_isUniquelyReferenced_nonNull_native(v55);
    v57 = v56;
    v58 = *(_QWORD *)(v5 + 16);
    if (*(_QWORD *)(v5 + 24) > v58)
    {
      if ((v56 & 1) == 0)
        sub_100AEB3C0();
LABEL_62:
      *(_QWORD *)(v5 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
      v64 = *(_QWORD *)(v5 + 48) + 16 * v6;
      *(_QWORD *)v64 = 1;
      *(_BYTE *)(v64 + 8) = 3;
      v65 = *(_QWORD *)(v5 + 16);
      v47 = __OFADD__(v65, 1);
      v66 = v65 + 1;
      if (!v47)
      {
        *(_QWORD *)(v5 + 16) = v66;
        swift_bridgeObjectRelease(0x8000000000000000);
        goto LABEL_64;
      }
      goto LABEL_66;
    }
    v59 = v58 + 1;
    if (v57)
      sub_100AE204C(v59);
    else
      sub_100AF10B8(v59);
    Hasher.init(_seed:)(v69, *(_QWORD *)(v5 + 40));
    Hasher._combine(_:)(4uLL);
    v60 = Hasher._finalize()();
    v61 = -1 << *(_BYTE *)(v5 + 32);
    v6 = v60 & ~v61;
    if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_62;
    v62 = ~v61;
    while (1)
    {
      v63 = *(_QWORD *)(v5 + 48) + 16 * v6;
      if (*(unsigned __int8 *)(v63 + 8) >= 3u && *(_QWORD *)v63 == 1)
        break;
      v6 = (v6 + 1) & v62;
      if (((*(_QWORD *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_62;
    }
LABEL_61:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
    __break(1u);
    goto LABEL_62;
  }
  sub_100B9BC30(1, 3);
  v12 = *(_QWORD *)(v5 + 48);
  Hasher.init(_seed:)(v69, *(_QWORD *)(v12 + 40));
  Hasher._combine(_:)(4uLL);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v9 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRetain(v12);
    goto LABEL_20;
  }
  v15 = ~v14;
  while (1)
  {
    v2 = 16 * v9;
    v16 = *(_QWORD *)(v12 + 48) + 16 * v9;
    if (*(unsigned __int8 *)(v16 + 8) >= 3u && *(_QWORD *)v16 == 1)
      break;
    v9 = (v9 + 1) & v15;
    if (((*(_QWORD *)(v12 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_19;
  }
  swift_bridgeObjectRetain(v12);
  v18 = swift_isUniquelyReferenced_nonNull_native(v17);
  v69[0] = v12;
  if ((v18 & 1) == 0)
    goto LABEL_67;
LABEL_15:
  v19 = *(_QWORD *)(v12 + 48) + v2;
  v20 = *(void **)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_100BA1C50(v9);
  v12 = v69[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1006B8384(v20, v21);
LABEL_20:
  v26 = *(_QWORD *)(v5 + 48);
  swift_bridgeObjectRetain(v26);
  sub_100B9A254(v12);
  v27 = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(v5 + 48) = v12;
  swift_bridgeObjectRelease(v27);
  sub_100B9A568(v26);
  swift_release(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  v29 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver);
  if (v29)
  {
    v3 = *(_QWORD *)(v29 + 16);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v29 + 16));
      sub_100B9BC30(1, 3);
      v5 = *(_QWORD *)(v3 + 48);
      Hasher.init(_seed:)(v69, *(_QWORD *)(v5 + 40));
      Hasher._combine(_:)(4uLL);
      v30 = Hasher._finalize()();
      v31 = -1 << *(_BYTE *)(v5 + 32);
      v32 = v30 & ~v31;
      if (((*(_QWORD *)(v5 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
      {
        v33 = ~v31;
        while (1)
        {
          v34 = *(_QWORD *)(v5 + 48) + 16 * v32;
          if (*(unsigned __int8 *)(v34 + 8) >= 3u && *(_QWORD *)v34 == 1)
            break;
          v32 = (v32 + 1) & v33;
          if (((*(_QWORD *)(v5 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
            goto LABEL_48;
        }
        swift_bridgeObjectRetain(v5);
        v36 = swift_isUniquelyReferenced_nonNull_native(v35);
        v69[0] = v5;
        if ((v36 & 1) == 0)
        {
          sub_100AEB3C0();
          v5 = v69[0];
        }
        v37 = *(_QWORD *)(v5 + 48) + 16 * v32;
        v38 = *(void **)v37;
        v39 = *(_BYTE *)(v37 + 8);
        sub_100BA1C50(v32);
        v5 = v69[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_1006B8384(v38, v39);
        goto LABEL_64;
      }
      goto LABEL_48;
    }
  }
  return result;
}

double sub_100B7CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  void *v43;
  unsigned __int8 v44;
  id v45;
  uint64_t v46;
  double result;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[9];
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[72];
  _BYTE v67[32];

  v3 = v2;
  v62 = a1;
  v4 = type metadata accessor for Notification(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD740 != -1)
    swift_once(&qword_1013DD740, sub_100A02288);
  swift_beginAccess(&static OS_os_log.crlFolderUI, v67, 0, 0);
  v8 = (void *)static OS_os_log.crlFolderUI;
  v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v59, v66);
  v58 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v11 = v8;
  v61 = v10;
  sub_100BCAD68();
  v13 = v12;
  v15 = v14;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v60 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v60;
  *(_QWORD *)(inited + 32) = v13;
  v16 = inited + 32;
  *(_QWORD *)(inited + 40) = v15;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v18, "Folder view (%@) received snapshot update", 41, 2, inited);
  swift_setDeallocating(inited);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v16, 1, v19);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v62, v4);
  if (sub_100BC1960((uint64_t)v7))
  {
    v21 = v20;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh, v63, 33, 0);
    swift_bridgeObjectRetain(v21);
    sub_100512568(v22);
    swift_endAccess(v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = sub_100B79E5C();
    v24 = sub_100B9A860();
    swift_release(v23);
    v25 = (void *)static OS_os_log.crlFolderUI;
    if ((v24 & 1) != 0)
    {
      v26 = swift_initStackObject(v59, &v64);
      *(_OWORD *)(v26 + 16) = v58;
      v27 = v25;
      sub_100BCAD68();
      v28 = v60;
      *(_QWORD *)(v26 + 56) = &type metadata for String;
      *(_QWORD *)(v26 + 64) = v28;
      *(_QWORD *)(v26 + 32) = v29;
      *(_QWORD *)(v26 + 40) = v30;
      v32 = static os_log_type_t.default.getter(v31);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v32, "Folder view (%@) ignoring snapshot update", 41, 2, v26);
      swift_setDeallocating(v26);
      swift_arrayDestroy(v26 + 32, 1, v19);

      v33 = sub_100B79E5C();
      sub_100B9BC30(2, 3);
      v34 = *(_QWORD *)(v33 + 48);
      Hasher.init(_seed:)(v63, *(_QWORD *)(v34 + 40));
      Hasher._combine(_:)(5uLL);
      v35 = Hasher._finalize()();
      v36 = -1 << *(_BYTE *)(v34 + 32);
      v37 = v35 & ~v36;
      if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
      {
        v38 = ~v36;
        while (1)
        {
          v39 = *(_QWORD *)(v34 + 48) + 16 * v37;
          if (*(unsigned __int8 *)(v39 + 8) >= 3u && *(_QWORD *)v39 >= 2uLL)
            break;
          v37 = (v37 + 1) & v38;
          if (((*(_QWORD *)(v34 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
            goto LABEL_15;
        }
        swift_bridgeObjectRetain(v34);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
        v63[0] = v34;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100AEB3C0();
          v34 = v63[0];
        }
        v42 = *(_QWORD *)(v34 + 48) + 16 * v37;
        v43 = *(void **)v42;
        v44 = *(_BYTE *)(v42 + 8);
        sub_100BA1C50(v37);
        v34 = v63[0];
        swift_bridgeObjectRelease();
        sub_1006B8384(v43, v44);
      }
      else
      {
LABEL_15:
        swift_bridgeObjectRetain(v34);
      }
      v57 = *(_QWORD *)(v33 + 48);
      swift_bridgeObjectRetain(v57);
      sub_100B9A254(v34);
      *(_QWORD *)(v33 + 48) = v34;
      swift_bridgeObjectRelease();
      sub_100B9A568(v57);
      swift_bridgeObjectRelease();
      v56 = v33;
    }
    else
    {
      v48 = swift_initStackObject(v59, &v65);
      *(_OWORD *)(v48 + 16) = v58;
      v49 = v25;
      sub_100BCAD68();
      v50 = v60;
      *(_QWORD *)(v48 + 56) = &type metadata for String;
      *(_QWORD *)(v48 + 64) = v50;
      *(_QWORD *)(v48 + 32) = v51;
      *(_QWORD *)(v48 + 40) = v52;
      v54 = static os_log_type_t.default.getter(v53);
      sub_100A06EBC((uint64_t)v49, &_mh_execute_header, v54, "Folder view (%@) requesting refresh", 35, 2, v48);
      swift_setDeallocating(v48);
      swift_arrayDestroy(v48 + 32, 1, v19);

      v55 = sub_100B79E5C();
      sub_100B9A924();
      v56 = v55;
    }
    *(_QWORD *)&result = swift_release(v56).n128_u64[0];
  }
  else
  {
    v45 = (id)static OS_os_log.crlFolderUI;
    v46 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v46, "Invalid snapshot update notification.", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  return result;
}

void sub_100B7D2B4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t inited;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  id v16;
  _BYTE v17[72];

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    v15 = objc_msgSend(v1, "parentViewController");

    if (v15)
    {
      v3 = objc_opt_self(UINavigationController);
      v4 = (void *)swift_dynamicCastObjCClass(v15, v3);
      if (v4)
      {
        v5 = v4;
        v6 = objc_msgSend(v4, "navigationBar");
        if (v6)
        {
          v7 = v6;
          objc_msgSend(v7, "setPrefersLargeTitles:", 1);
          v8 = sub_1004B804C((uint64_t *)&unk_1013F4250);
          inited = swift_initStackObject(v8, v17);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
          v10 = NSForegroundColorAttributeName;
          sub_100BCE1AC();
          v12 = v11;
          *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
          *(_QWORD *)(inited + 40) = v12;
          sub_1008D4FE0(inited);
          type metadata accessor for Key(0);
          sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v7, "setLargeTitleTextAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

        }
        v14 = objc_msgSend(v5, "navigationItem", v15);
        objc_msgSend(v14, "setLargeTitleDisplayMode:", 1);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_100B7D4A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  __n128 v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v39 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - v6;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v36 - v19;
  v38 = v1;
  v21 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v22);

  v24 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v2, v23);
  v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v7, v2);
  sub_100BCDA80(v39, v24, (uint64_t)v10);
  v26 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v26) == 1)
    return sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E3830);
  sub_1004B84E0((uint64_t)v10, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v40 = &_swiftEmptySetSingleton;
  sub_1004B8460((uint64_t)v20, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100AD896C((uint64_t)v17, (uint64_t)v14);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v28 = (uint64_t)v40;
  v29 = sub_100B787A8();
  v30 = (uint64_t)v37;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v31);

  v33 = (uint64_t)v20;
  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v34 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v2, v32);
  swift_bridgeObjectRetain(v28);
  v35 = sub_100BB3270(v34, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v35);
  swift_bridgeObjectRelease();
  sub_100B7E664(v30, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v25((char *)v30, v2);
  swift_bridgeObjectRelease();
  return sub_1004B84A4(v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100B7D84C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  int v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  char v31;
  char v32;
  char *v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  int64_t v48;
  uint64_t v49;
  int isUniquelyReferenced_nonNull_native;
  int64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  BOOL v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  unint64_t i;
  unint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  char v76;
  char v77;
  _QWORD *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  int v95;
  _QWORD v96[3];
  char v97;
  char v98[24];
  char v99[32];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1014072C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections, v99, 0, 0);
  sub_1004CB7BC(v11, (uint64_t)v6, (uint64_t *)&unk_1014072C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1014072C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
  }
  v83 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v83(v10, v6, v7);
  v13 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v7);
  v14 = v13;
  v88 = *(_QWORD *)(v13 + 16);
  if (!v88)
  {
    swift_bridgeObjectRelease(v13);
    v78 = _swiftEmptyArrayStorage;
LABEL_39:
    NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v78);
    v79 = swift_bridgeObjectRelease(v78);
    ((void (*)(uint64_t, char *, uint64_t, __n128))v83)(a1, v10, v7, v79);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  v84 = v10;
  v81 = v8;
  v85 = v7;
  v82 = a1;
  v87 = v13 + 32;
  v92 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections, v98, 0, 0);
  v15 = 0;
  v16 = _swiftEmptyArrayStorage;
  v17 = v88;
  v86 = v14;
  while (v15 < *(_QWORD *)(v14 + 16))
  {
    v18 = *v92;
    if (*(_QWORD *)(*v92 + 16))
    {
      v19 = v87 + 32 * v15;
      v20 = *(void **)v19;
      v21 = *(char **)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(unsigned __int8 *)(v19 + 24);
      Hasher.init(_seed:)(v96, *(_QWORD *)(v18 + 40));
      sub_1004DD884(v20, v21, v22, v23);
      swift_bridgeObjectRetain(v18);
      sub_1009E3D90((uint64_t)v96, (uint64_t)v20, (uint64_t)v21, v22, v23);
      v24 = Hasher._finalize()();
      v25 = -1 << *(_BYTE *)(v18 + 32);
      v26 = v24 & ~v25;
      v93 = (char *)(v18 + 56);
      if (((*(_QWORD *)(v18 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
      {
        v90 = v25;
        v91 = v15;
        v89 = v16;
        v27 = *(_QWORD *)(v18 + 48) + 32 * v26;
        v28 = *(id *)v27;
        v29 = *(void **)(v27 + 8);
        v30 = *(_QWORD *)(v27 + 16);
        v31 = *(_BYTE *)(v27 + 24);
        sub_1004DD884(*(id *)v27, v29, v30, v31);
        v94 = v22;
        v95 = v23;
        v32 = sub_1009E554C((uint64_t)v28, (uint64_t)v29, v30, v31, (uint64_t)v20, (uint64_t)v21, v22, v23, v80, v81, v82, v83, v84, v85);
        sub_1004DD8B8(v28, v29, v30, v31);
        v33 = v21;
        v34 = v20;
        if ((v32 & 1) == 0)
        {
          v90 = ~v90;
          v35 = (v26 + 1) & v90;
          if (((*(_QWORD *)&v93[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
            goto LABEL_36;
          v36 = *(_QWORD *)(v18 + 48) + 32 * v35;
          v37 = *(id *)v36;
          v38 = *(void **)(v36 + 8);
          v39 = *(_QWORD *)(v36 + 16);
          v40 = *(_BYTE *)(v36 + 24);
          sub_1004DD884(*(id *)v36, v38, v39, v40);
          v41 = sub_1009E554C((uint64_t)v37, (uint64_t)v38, v39, v40, (uint64_t)v34, (uint64_t)v33, v94, v95, v80, v81, v82, v83, v84, v85);
          sub_1004DD8B8(v37, v38, v39, v40);
          if ((v41 & 1) == 0)
          {
            for (i = v35 + 1; ; i = v71 + 1)
            {
              v71 = i & v90;
              if (((*(_QWORD *)&v93[(v71 >> 3) & 0xFFFFFFFFFFFFF8] >> v71) & 1) == 0)
                break;
              v72 = *(_QWORD *)(v18 + 48) + 32 * v71;
              v73 = *(id *)v72;
              v74 = *(void **)(v72 + 8);
              v75 = *(_QWORD *)(v72 + 16);
              v76 = *(_BYTE *)(v72 + 24);
              sub_1004DD884(*(id *)v72, v74, v75, v76);
              v77 = sub_1009E554C((uint64_t)v73, (uint64_t)v74, v75, v76, (uint64_t)v34, (uint64_t)v33, v94, v95, v80, v81, v82, v83, v84, v85);
              sub_1004DD8B8(v73, v74, v75, v76);
              if ((v77 & 1) != 0)
                goto LABEL_13;
            }
LABEL_36:
            swift_bridgeObjectRelease(v18);
            sub_1004DD8B8(v34, v33, v94, v95);
            v14 = v86;
            v17 = v88;
            v16 = v89;
            v15 = v91;
            goto LABEL_6;
          }
        }
LABEL_13:
        v42 = swift_bridgeObjectRelease(v18);
        v96[0] = v34;
        v96[1] = v33;
        v93 = v33;
        v43 = v94;
        v96[2] = v94;
        v44 = v95;
        v97 = v95;
        v45 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v96, v85, v42);
        v46 = *(_QWORD *)(v45 + 16);
        v16 = v89;
        v47 = v89[2];
        v48 = v47 + v46;
        if (__OFADD__(v47, v46))
          goto LABEL_42;
        v49 = v45;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v89);
        if (!isUniquelyReferenced_nonNull_native || v48 > v16[3] >> 1)
        {
          if (v47 <= v48)
            v51 = v47 + v46;
          else
            v51 = v47;
          v16 = (_QWORD *)sub_100D0FAA0(isUniquelyReferenced_nonNull_native, v51, 1, (unint64_t)v16);
        }
        v14 = v86;
        v17 = v88;
        v15 = v91;
        if (*(_QWORD *)(v49 + 16))
        {
          v52 = v34;
          v53 = v86;
          v54 = v88;
          v55 = v16[2];
          v56 = (v16[3] >> 1) - v55;
          v57 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
          if (v56 < v46)
            goto LABEL_44;
          v58 = *(_QWORD *)(v57 - 8);
          v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
          v60 = *(_QWORD *)(v58 + 72);
          v61 = (char *)v16 + v59 + v60 * v55;
          v62 = v49 + v59;
          v63 = v60 * v46;
          v64 = &v61[v63];
          v65 = v62 + v63;
          v66 = v62 >= (unint64_t)v64 || (unint64_t)v61 >= v65;
          v15 = v91;
          if (!v66)
            goto LABEL_46;
          swift_arrayInitWithCopy(v61);
          v17 = v54;
          v14 = v53;
          v34 = v52;
          if (v46)
          {
            v67 = v16[2];
            v68 = __OFADD__(v67, v46);
            v69 = v67 + v46;
            if (v68)
              goto LABEL_45;
            v16[2] = v69;
          }
        }
        else if (v46)
        {
          goto LABEL_43;
        }
        sub_1004DD8B8(v34, v93, v43, v44);
        swift_bridgeObjectRelease(v49);
      }
      else
      {
        swift_bridgeObjectRelease(v18);
        sub_1004DD8B8(v20, v21, v22, v23);
        v17 = v88;
      }
    }
LABEL_6:
    if (++v15 == v17)
    {
      swift_bridgeObjectRelease(v14);
      a1 = v82;
      v7 = v85;
      v78 = v16;
      v8 = v81;
      v10 = v84;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

BOOL sub_100B7DF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  double (*v20)(char *, char *, uint64_t);
  _BOOL8 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  _BYTE v32[24];

  v1 = sub_1004B804C((uint64_t *)&unk_1014072C0);
  v2 = __chkstk_darwin(v1);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v32[-v5 - 8];
  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = __chkstk_darwin(v9);
  v14 = &v32[-v13 - 8];
  __chkstk_darwin(v12);
  v16 = &v32[-v15 - 8];
  v17 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections, v32, 0, 0);
  sub_1004CB7BC(v17, (uint64_t)v6, (uint64_t *)&unk_1014072C0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v18(v6, 1, v7) == 1)
  {
    v19 = (uint64_t)v6;
LABEL_5:
    sub_1004CB800(v19, (uint64_t *)&unk_1014072C0);
    return 0;
  }
  v20 = *(double (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v16, v6, v7);
  sub_100B7D84C((uint64_t)v4);
  if (v18(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    v19 = (uint64_t)v4;
    goto LABEL_5;
  }
  v22.n128_f64[0] = v20(v14, v4, v7);
  v23 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7, v22);
  v24 = *(_QWORD *)(v23 + 16);
  v25 = swift_bridgeObjectRelease(v23);
  (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 16))(v11, v16, v7, v25);
  if (v24)
  {
    v21 = 0;
  }
  else
  {
    v27 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7, v26);
    v28 = *(_QWORD *)(v27 + 16);
    swift_bridgeObjectRelease(v27);
    v21 = v28 != 0;
  }
  v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29(v11, v7);
  v29(v14, v7);
  v29(v16, v7);
  return v21;
}

double sub_100B7E16C(char a1)
{
  _BYTE *v1;
  double result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;

  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v4 = (_QWORD *)sub_100B78510((uint64_t)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder]);
    if (v4)
    {
      v5 = (uint64_t)v4;
      v6 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
      v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8];
      v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString] & 0xFFFFFFFFFFFFLL;
      if ((v7 & 0x2000000000000000) != 0)
        v8 = HIBYTE(v7) & 0xF;
      if (v8)
      {
        v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
        sub_100B78EE8();
        v10 = *v6;
        v9 = v6[1];
        v11 = swift_allocObject(&unk_101296950, 25, 7);
        *(_QWORD *)(v11 + 16) = v1;
        v12 = a1 & 1;
        *(_BYTE *)(v11 + 24) = a1 & 1;
        v13 = swift_allocObject(&unk_101296568, 24, 7);
        swift_unknownObjectWeakInit(v13 + 16, v1);
        v14 = swift_allocObject(&unk_101296978, 40, 7);
        *(_QWORD *)(v14 + 16) = v1;
        *(_BYTE *)(v14 + 24) = v12;
        *(_QWORD *)(v14 + 32) = v13;
        v15 = v1;
        swift_bridgeObjectRetain(v9);
        swift_retain(v13);
        sub_1006B88A0(v5, v10, v9, (uint64_t)sub_100BBA4F8, v11, (uint64_t)sub_100BBA530, v14);
        swift_release(v14);
        swift_release(v13);
        swift_release(v11);
        swift_bridgeObjectRelease(v9);
      }
      else
      {
        sub_100B7E32C(v4, (uint64_t)v1, a1 & 1);
      }
      *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100B7E32C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE v32[24];

  v29 = a3;
  v30 = a1;
  v31 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v4 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FA378);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1014072C0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v27 - v16;
  v18 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1);
  v19 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions))
    v20 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2);
  else
    v20 = 0;
  sub_1004B8460(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
  sub_100B765A0(v30, v19, v20, v18, (uint64_t)v8, (uint64_t)v17);
  v22 = (uint64_t)v8;
  v23 = v31;
  sub_1004CB800(v22, &qword_1013FA378);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v17, 0, 1, v23);
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1014072C0);
  v24 = a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections, v32, 33, 0);
  sub_100582338((uint64_t)v15, v24, (uint64_t *)&unk_1014072C0);
  swift_endAccess(v32);
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1014072C0);
  sub_100B7D84C((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v23) == 1)
    return sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1014072C0);
  v26 = (uint64_t)v28;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v28, v12, v23);
  sub_100B7E664(v26, v29 & 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  sub_100B87C38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v23);
}

uint64_t sub_100B7E5FC(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v8[24];

  v4 = a4 + 16;
  sub_100B7E32C(a1, a2, a3);
  swift_beginAccess(v4, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete) = 1;
    sub_100B78EE8();

  }
  return 0;
}

uint64_t sub_100B7E664(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  id v32;
  _QWORD v34[2];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[112];
  _BYTE v40[24];
  _BYTE v41[32];

  v5 = v4;
  v38 = a4;
  v37 = a3;
  v35 = a2;
  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  __chkstk_darwin(v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v10;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v34[1] = a1;
  v11(v9, a1, v7);
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh);
  swift_beginAccess(v5 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh, v41, 1, 0);
  v13 = *v12;
  v14 = qword_1013DD740;
  swift_bridgeObjectRetain(*v12);
  if (v14 != -1)
    swift_once(&qword_1013DD740, sub_100A02288);
  swift_beginAccess(&static OS_os_log.crlFolderUI, v40, 0, 0);
  v15 = (void *)static OS_os_log.crlFolderUI;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v39);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v18 = v15;
  sub_100BCAD68();
  v20 = v19;
  v22 = v21;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v23 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 104) = &protocol witness table for Int;
  *(_QWORD *)(inited + 72) = v23;
  v25 = static os_log_type_t.default.getter(v24);
  sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v25, "Folder view (%@) updating snapshot with %d board identifiers to refresh", 71, 2, inited);
  swift_setDeallocating(inited);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v26);

  if (*(_QWORD *)(v13 + 16))
  {
    v27 = *v12;
    *v12 = (uint64_t)&_swiftEmptySetSingleton;
    v28 = swift_bridgeObjectRelease(v27);
    v29 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7, v28);
    v30 = sub_100BB342C(v29, v13);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v29);
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v30);
    v31 = v30;
  }
  else
  {
    v31 = (_QWORD *)v13;
  }
  swift_bridgeObjectRelease(v31);
  v32 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v9, v35 & 1, v37, v38);

  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v9, v7);
}

double sub_100B7E928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t);
  uint64_t v12;
  id v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  double *v17;
  double result;
  _BYTE v19[16];

  v0 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v19[-v5];
  v7 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v8);

  v10 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v0, v9);
  v11 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v11(v6, v0);
  v12 = sub_100AF8094(v10);
  swift_bridgeObjectRelease();
  v13 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v14);

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v16 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v0, v15);
  swift_bridgeObjectRetain(v12);
  v17 = sub_100BB3270(v16, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v17);
  swift_bridgeObjectRelease();
  sub_100B7E664((uint64_t)v3, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v11(v3, v0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100B7EB98(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  unsigned __int8 v19;
  id v20;
  NSString *v21;
  SEL v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  objc_super v33;
  _QWORD v34[3];
  uint64_t v35;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((static Selector.== infix(_:_:)("undo:", a1) & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (v9)
    {
      v10 = type metadata accessor for CRLiOSAppDelegate();
      v11 = *(void **)(swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v12, "canUndo", swift_unknownObjectRelease(v9).n128_f64[0]);
LABEL_9:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v9);
    __break(1u);
    goto LABEL_27;
  }
  if ((static Selector.== infix(_:_:)("redo:", a1) & 1) != 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v9 = objc_msgSend(v13, "delegate");

    if (v9)
    {
      v14 = type metadata accessor for CRLiOSAppDelegate();
      v15 = *(void **)(swift_dynamicCastClassUnconditional(v9, v14, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      if (v15)
      {
        v12 = v15;
        objc_msgSend(v12, "canRedo", swift_unknownObjectRelease(v9).n128_f64[0]);
        goto LABEL_9;
      }
LABEL_28:
      sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_unknownObjectRelease(v9);
      __break(1u);
      return;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((static Selector.== infix(_:_:)("find:", a1) & 1) != 0)
  {
    v16 = objc_msgSend(v2, "navigationItem");
    v17 = objc_msgSend(v16, "searchController");

    if (v17)
    {
      v18 = objc_msgSend(v17, "searchBar");

      v19 = objc_msgSend(v18, "isFirstResponder");
      if ((v19 & 1) == 0)
        objc_msgSend(v2, "isEditing");
    }
  }
  else if ((static Selector.== infix(_:_:)("newBoard:", a1) & 1) != 0)
  {
    v20 = objc_msgSend(v2, "presentedViewController");

    if (!v20)
    {
      v30 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      v31 = sub_1004B804C(&qword_1013E1790);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 5, 5, v31);
      sub_100BD0ED4(v30, (uint64_t)v7);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    }
  }
  else
  {
    v21 = (NSString *)String._bridgeToObjectiveC()();
    v22 = NSSelectorFromString(v21);

    if ((static Selector.== infix(_:_:)(v22, a1) & 1) != 0)
    {
      sub_100B7F42C();
    }
    else
    {
      sub_1004CB7BC(a2, (uint64_t)v34, &qword_1013E0230);
      v23 = v35;
      if (v35)
      {
        v24 = sub_1004BB5A4(v34, v35);
        v25 = *(_QWORD *)(v23 - 8);
        v26 = __chkstk_darwin(v24);
        v28 = (char *)&v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v25 + 16))(v28, v26);
        v29 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v23);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
      }
      else
      {
        v29 = 0;
      }
      v32 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController(0);
      v33.receiver = v2;
      v33.super_class = v32;
      objc_msgSendSuper2(&v33, "canPerformAction:withSender:", a1, v29);
      swift_unknownObjectRelease(v29);
    }
  }
}

void sub_100B7F2A4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  if ((objc_msgSend(v0, "isEditing") & 1) == 0)
  {
    v1 = objc_msgSend(v0, "navigationItem");
    v2 = objc_msgSend(v1, "searchController");

    if (v2)
    {
      objc_msgSend(v2, "setActive:", 1);

    }
    v3 = objc_msgSend(v0, "navigationItem");
    v4 = objc_msgSend(v3, "searchController");

    if (v4)
    {
      v5 = objc_msgSend(v4, "searchBar");

      objc_msgSend(v5, "becomeFirstResponder");
    }
  }
}

id sub_100B7F42C()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGPoint v18;
  CGRect v19;

  result = objc_msgSend(v0, "collectionView");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "contextMenuInteraction");

    if (!v3)
      return 0;
    v4 = objc_msgSend(v0, "collectionView");
    objc_msgSend(v3, "locationInView:", v4);
    v6 = v5;
    v8 = v7;

    result = objc_msgSend(v0, "collectionView");
    if (result)
    {
      v9 = result;
      objc_msgSend(result, "bounds");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

      v19.origin.x = v11;
      v19.origin.y = v13;
      v19.size.width = v15;
      v19.size.height = v17;
      v18.x = v6;
      v18.y = v8;
      return (id)CGRectContainsPoint(v19, v18);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B7F578(void *a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  id v9;
  uint64_t v10;
  id v11;
  _OWORD v13[2];

  if (a3)
  {
    v9 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v13, v10);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v11 = a1;
  }
  sub_100BB823C((uint64_t)v13, a4, a5);

  return sub_1004CB800((uint64_t)v13, &qword_1013E0230);
}

void sub_100B7F604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unsigned __int8 v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  id v30;
  unint64_t v31;
  Class isa;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  _BYTE v45[24];
  _QWORD v46[3];
  unsigned __int8 v47;

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1014072C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed;
  LOBYTE(v9) = *(_BYTE *)(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed);
  v12 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle;
  *(_BYTE *)(a1
           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle) = 1;
  *(_BYTE *)(a1 + v11) = (v9 & 1) == 0;
  sub_1004DB940();
  *(_BYTE *)(a1 + v12) = 0;
  v13 = a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier;
  v14 = *(unsigned __int8 *)(a1
                           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                           + 24);
  if (v14 >= 0xFE)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"sectionHeaderDidTapCollapseButton(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 714, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sectionHeaderDidTapCollapseButton(_:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 714, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v41 = v10;
  v15 = *(void **)v13;
  v16 = *(void **)(v13 + 8);
  v17 = *(_QWORD *)(v13 + 16);
  v18 = *(_BYTE *)(a1 + v11) == 1;
  v43 = v16;
  v44 = v15;
  v42 = v17;
  if (v18)
  {
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections, v45, 33, 0);
    sub_1004DD884(v15, v16, v17, v14);
    sub_1004DD884(v15, v16, v17, v14);
    sub_100AD7BE8((uint64_t)v46, v15, (uint64_t)v16, v17, v14);
    v19 = (void *)v46[0];
    v20 = (void *)v46[1];
    v21 = v46[2];
    v22 = v47;
    swift_endAccess(v45);
    sub_1004DD8B8(v19, v20, v21, v22);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
    {
LABEL_8:
      v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v31 = sub_100DA9FF0();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v31);
      sub_100BCB498();
      v34 = v33;
      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setObject:forKey:", isa, v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

    }
  }
  else
  {
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections, v46, 33, 0);
    sub_1004DD884(v15, v16, v17, v14);
    v23 = (void *)sub_100B27228(v15, (uint64_t)v16, v17, v14);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    swift_endAccess(v46);
    sub_1004DD8A4(v23, v25, v27, v29);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
      goto LABEL_8;
  }
  sub_100B87C38();
  v37 = v43;
  v36 = v44;
  v38 = v42;
  sub_100B7D84C((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1014072C0);
  }
  else
  {
    v39 = (uint64_t)v41;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v6, v7);
    sub_100B7E664(v39, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    sub_100B87C38();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v39, v7);
  }
  sub_1004DD8A4(v36, v37, v38, v14);
}

void sub_100B7FA54()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  Class isa;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Class v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[104];
  char v28[56];

  v1 = v0;
  v2 = sub_100B7FDBC();
  if (!v2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 733, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUserActivities()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 733, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v3 = v2;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v4, v28);
  *(_OWORD *)(inited + 16) = xmmword_100EF5560;
  *(_QWORD *)(inited + 32) = sub_1009093EC();
  v6 = sub_1009093FC();
  *(_QWORD *)(inited + 40) = v6;
  v25 = inited;
  specialized Array._endMutation()(v6);
  if ((inited & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
  }
  else
  {
    if (*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return;
    }
    v7 = *(id *)(v25 + 32);
  }
  v8 = v7;
  objc_msgSend(v0, "loadViewIfNeeded");
  v9 = sub_1004B804C(&qword_1013E49B0);
  v10 = swift_initStackObject(v9, v27);
  *(_OWORD *)(v10 + 16) = xmmword_100EF5E40;
  sub_100BCB498();
  v25 = v11;
  v26 = v12;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  v13 = sub_100DA9FF0();
  *(_QWORD *)(v10 + 96) = sub_1004B804C(&qword_1013FA4C0);
  *(_QWORD *)(v10 + 72) = v13;
  v14 = sub_1008D5828(v10);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "addUserInfoEntriesFromDictionary:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v8, "setNeedsSave:", 1);
  if ((inited & 0xC000000000000001) != 0)
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, inited);
  else
    v16 = *(id *)(inited + 40);
  v17 = v16;
  objc_msgSend(v1, "loadViewIfNeeded");
  v18 = sub_1004B804C(&qword_1013E49B0);
  v19 = swift_initStackObject(v18, v27);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
  sub_100BCB498();
  v25 = v20;
  v26 = v21;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  v22 = sub_100DA9FF0();
  *(_QWORD *)(v19 + 96) = sub_1004B804C(&qword_1013FA4C0);
  *(_QWORD *)(v19 + 72) = v22;
  v23 = sub_1008D5828(v19);
  v24 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "addUserInfoEntriesFromDictionary:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  objc_msgSend(v17, "setNeedsSave:", 1);
  swift_bridgeObjectRelease(inited);

}

id sub_100B7FDBC()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;

  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v2 = result;
  v3 = objc_msgSend(result, "window");

  if (v3)
  {
    v4 = objc_msgSend(v3, "windowScene");

    if (v4)
    {
      v5 = objc_msgSend(v4, "delegate");

      if (v5)
      {
        v6 = type metadata accessor for CRLiOSSceneDelegate(0);
        result = (id)swift_dynamicCastClass(v5, v6);
        if (result)
          return result;
        swift_unknownObjectRelease(v5);
      }
    }
  }
  return 0;
}

void sub_100B7FE84(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  objc_super v12;
  uint64_t v13[2];
  _BYTE v14[40];
  __int128 v15;
  __int128 v16;

  v2 = v1;
  v4 = objc_msgSend(a1, "userInfo");
  if (v4)
  {
    v5 = v4;
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    objc_msgSend(v2, "loadViewIfNeeded");
    sub_100BCB498();
    v13[0] = v7;
    v13[1] = v8;
    AnyHashable.init<A>(_:)(v13, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v6 + 16) && (v9 = sub_1008432BC((uint64_t)v14), (v10 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)&v15);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1004B89A4((uint64_t)v14);
    if (*((_QWORD *)&v16 + 1))
    {
      v11 = sub_1004B804C(&qword_1013FA4C0);
      if ((swift_dynamicCast(v13, &v15, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
      {
        sub_100DAA244(v13[0]);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
    }
    v12.receiver = v2;
    v12.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController(0);
    objc_msgSendSuper2(&v12, "restoreUserActivityState:", a1);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"restoreUserActivityState(_:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 759, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreUserActivityState(_:)", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 759, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

id sub_100B800D0()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem, (uint64_t (*)(void))sub_100B82280);
}

id sub_100B800E4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

objc_class *sub_100B8013C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  objc_class *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  Swift::String_optional v21;
  UIBarButtonItem v22;
  uint64_t v23;
  int v24;
  void *v25;
  id v26;
  uint64_t v28;
  UIImage_optional v29;
  UIAction_optional v30;
  UIMenu_optional v31;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard);
  if (v6)
  {
    v7 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard);
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v17 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BBA4CC, v17);
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v19 = v16;
    v20 = v18;
    v21.value._countAndFlagsBits = v12;
    v21.value._object = v14;
    v29.value.super.isa = (Class)v16;
    v29.is_nil = (char)v18;
    v30.value.super.super.isa = 0;
    v22.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v21, v29, v30, v31).super.super.isa;
    sub_1004B8460(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v23 = sub_1004B804C(&qword_1013E1790);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v4, 5, v23);
    if (v24 != 5)
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    -[objc_class setEnabled:](v22.super.super.isa, "setEnabled:", v24 != 5);

    v25 = *(void **)(v1 + v5);
    *(UIBarButtonItem *)(v1 + v5) = v22;
    v7 = v22.super.super.isa;

    v6 = 0;
  }
  v26 = v6;
  return v7;
}

objc_class *sub_100B80428()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  Swift::String_optional v9;
  UIBarButtonItem v10;
  void *v11;
  id v12;
  UIImage_optional v14;
  UIAction_optional v15;
  UIMenu_optional v16;

  v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone);
  if (v2)
  {
    v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone);
  }
  else
  {
    v4 = v0;
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v5 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BBA4C4, v5);
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v7 = *(_QWORD *)(v4
                   + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone);
    v8 = *(void **)(v4
                  + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone
                  + 8);
    swift_bridgeObjectRetain(v8);
    v9.value._countAndFlagsBits = v7;
    v9.value._object = v8;
    v14.value.super.isa = 0;
    v14.is_nil = v6;
    v15.value.super.super.isa = 0;
    v10.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v9, v14, v15, v16).super.super.isa;
    v11 = *(void **)(v4 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v10;
    v3 = v10.super.super.isa;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

objc_class *sub_100B80560()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  Swift::String_optional v13;
  UIBarButtonItem v14;
  void *v15;
  id v16;
  UIImage_optional v18;
  UIAction_optional v19;
  UIMenu_optional v20;

  v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems);
  if (v2)
  {
    v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v12 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v4);
    LOBYTE(v5) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BB9E5C, v12);
    v19.is_nil = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v13.value._countAndFlagsBits = v9;
    v13.value._object = v11;
    v18.value.super.isa = 0;
    v18.is_nil = (char)v5;
    v19.value.super.super.isa = 0;
    v14.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v13, v18, v19, v20).super.super.isa;
    v15 = *(void **)(v4 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v14;
    v3 = v14.super.super.isa;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

void sub_100B8072C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "setEditing:animated:", objc_msgSend(Strong, "isEditing") ^ 1, 1);
    v5 = objc_msgSend(v4, "collectionView");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "selectItemAtIndexPath:animated:scrollPosition:", 0, 0, 1);

    }
    else
    {
      __break(1u);
    }
  }
}

Class sub_100B807DC()
{
  void *v0;
  void *v1;
  Class result;
  Class v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  objc_class *v15;
  Swift::String_optional v16;
  UIBarButtonItem v17;
  Class v18;
  uint64_t v19;
  UIAction_optional v20;
  UIImage_optional v21;
  UIMenu_optional v22;
  UIAction_optional v23;
  UIMenu_optional v24;

  v1 = v0;
  result = (Class)objc_msgSend(v0, "collectionView");
  if (result)
  {
    v3 = result;
    v4 = sub_100703FB0();

    v5 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease(v4);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v6 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v1);
    v7 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, v5 == 0, 0, sub_100BBA484, v6);
    if (objc_msgSend(v1, "isEditing"))
    {
      v22.value.super.super.isa = (Class)sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      v20.value.super.super.isa = v7;
      v20.is_nil = 0;
      return UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v20, v22).super.super.isa;
    }
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v15 = v7;
    v16.value._countAndFlagsBits = v12;
    v16.value._object = v14;
    v21.value.super.isa = 0;
    v21.is_nil = (char)v7;
    v23.value.super.super.isa = 0;
    v17.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v16, v21, v23, v24).super.super.isa;
    result = (Class)objc_msgSend(v1, "collectionView");
    if (result)
    {
      v18 = result;
      v19 = sub_100703FB0();

      -[objc_class setEnabled:](v17.super.super.isa, "setEnabled:", *(_QWORD *)(v19 + 16) != 0, swift_bridgeObjectRelease(v19).n128_f64[0]);
      return v17.super.super.isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100B80A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100B80AA8();

  }
}

void sub_100B80AA8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  __n128 v20;
  double v21;
  id v22;
  void *v23;
  __n128 v24;
  int64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t i;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  id v35;
  void *v36;
  Class isa;
  uint64_t v38;
  int64_t v39;
  id v40;
  _BYTE *v41;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v0;
  v8 = objc_msgSend(v0, "collectionView");
  if (!v8)
    goto LABEL_44;
  v9 = v8;
  v10 = sub_100703FB0();

  if (!*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRelease(v10);
    return;
  }
  v11 = objc_msgSend(v40, "collectionView");
  if (!v11)
    goto LABEL_45;
  v12 = v11;
  v13 = objc_msgSend(v11, "indexPathsForSelectedItems");

  if (v13)
  {
    v14 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v1);

  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v15 = v14[2];
  v16 = *(_QWORD *)(v10 + 16);
  if (v15 < v16)
  {
    v17 = sub_100AF8CB8(v10);
    swift_bridgeObjectRelease(v10);
    v18 = sub_100AF8CB8((uint64_t)v14);
    swift_bridgeObjectRelease(v14);
    if (*(_QWORD *)(v18 + 16) <= *(_QWORD *)(v17 + 16) >> 3)
    {
      v41 = (_BYTE *)v17;
      sub_100DB6D34(v18);
      v20 = swift_bridgeObjectRelease(v18);
      v19 = v41;
    }
    else
    {
      v19 = sub_100DB9C78(v18, v17);
      v20 = swift_bridgeObjectRelease(v18);
    }
    v25 = 0;
    v26 = v19 + 56;
    v27 = 1 << v19[32];
    v28 = -1;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    v29 = v28 & *((_QWORD *)v19 + 7);
    v39 = (unint64_t)(v27 + 63) >> 6;
    if (!v29)
      goto LABEL_19;
LABEL_18:
    v30 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    for (i = v30 | (v25 << 6); ; i = __clz(__rbit64(v33)) + (v25 << 6))
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v2 + 16))(v7, *((_QWORD *)v19 + 6) + *(_QWORD *)(v2 + 72) * i, v1, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
        goto LABEL_39;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      v35 = objc_msgSend(v40, "collectionView");
      if (!v35)
        goto LABEL_43;
      v36 = v35;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v36, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      if (v29)
        goto LABEL_18;
LABEL_19:
      v32 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_42;
      }
      if (v32 >= v39)
        goto LABEL_38;
      v33 = *(_QWORD *)&v26[8 * v32];
      ++v25;
      if (!v33)
      {
        v25 = v32 + 1;
        if (v32 + 1 >= v39)
          goto LABEL_38;
        v33 = *(_QWORD *)&v26[8 * v25];
        if (!v33)
        {
          v25 = v32 + 2;
          if (v32 + 2 >= v39)
            goto LABEL_38;
          v33 = *(_QWORD *)&v26[8 * v25];
          if (!v33)
          {
            v34 = v32 + 3;
            if (v34 >= v39)
            {
LABEL_38:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))(v7, 1, 1, v1, v20);
LABEL_39:
              v24 = swift_release(v19);
              goto LABEL_40;
            }
            v33 = *(_QWORD *)&v26[8 * v34];
            if (!v33)
            {
              while (1)
              {
                v25 = v34 + 1;
                if (__OFADD__(v34, 1))
                  break;
                if (v25 >= v39)
                  goto LABEL_38;
                v33 = *(_QWORD *)&v26[8 * v25];
                ++v34;
                if (v33)
                  goto LABEL_32;
              }
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
              return;
            }
            v25 = v34;
          }
        }
      }
LABEL_32:
      v29 = (v33 - 1) & v33;
    }
  }
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v10).n128_u64[0];
  if (v15 == v16)
  {
    v22 = objc_msgSend(v40, "collectionView", v21);
    if (!v22)
      goto LABEL_46;
    v23 = v22;
    objc_msgSend(v22, "selectItemAtIndexPath:animated:scrollPosition:", 0, 0, 0);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectAllOrNone()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2359, "There are more IndexPaths in the current selection than its collection view exists!", 83, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectAllOrNone()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2359, (uint64_t)"There are more IndexPaths in the current selection than its collection view exists!", 83, 2u);
  }
LABEL_40:
  sub_100B82A94(v24);
  sub_100B83B88();
}

void sub_100B80F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate);
    if (v5)
    {
      v6 = v5;
      sub_100913210(v4);

      swift_unknownObjectRelease(v6);
    }
    else
    {

    }
  }
}

double sub_100B8100C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100BCDE20(a1);
  v7 = sub_100AF87D0((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    v9 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v1);
    type metadata accessor for MainActor(0);
    swift_retain(v9);
    v10 = v1;
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_101296810, 56, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v7;
    v12[5] = v9;
    v12[6] = v10;
    swift_release(v9);
    v13 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_101407358, (uint64_t)v12);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

void sub_100B81170(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *Strong;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double *v14;
  uint64_t v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE v28[24];

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "collectionView");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "indexPathsForSelectedItems");

      if (v10)
      {
        v11 = type metadata accessor for IndexPath(0);
        v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

        v13 = v7;
        v14 = (double *)sub_100BB19EC(v12, (uint64_t)v13);

        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = _swiftEmptyArrayStorage;
      }
      v15 = *((_QWORD *)v14 + 2);
      *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
      if (!v15)
        goto LABEL_15;
      v17 = objc_msgSend(v7, "collectionView", v16);
      if (v17)
      {
        v18 = v17;
        v19 = objc_msgSend(v17, "indexPathsForSelectedItems");

        if (v19)
        {
          v20 = type metadata accessor for IndexPath(0);
          v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

          v22 = v7;
          v23 = (double *)sub_100BB19EC(v21, (uint64_t)v22);

          swift_bridgeObjectRelease();
        }
        else
        {
          v23 = _swiftEmptyArrayStorage;
        }
        v24 = (uint64_t)v7 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
        v25 = sub_1004B804C(&qword_1013E1790);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 5, 5, v25);
        sub_100BD0ED4(v24, (uint64_t)v5);
        LOBYTE(v24) = v26;
        sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        if ((v24 & 1) != 0)
          sub_100B92EB4((uint64_t)v23);
        else
          sub_100B9397C((uint64_t)v23, 0, 0);
        objc_msgSend(v7, "setEditing:animated:", 0, 1, swift_bridgeObjectRelease().n128_f64[0]);
LABEL_15:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100B813C4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, __n128))
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _BYTE v24[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "collectionView");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "indexPathsForSelectedItems");

      if (v9)
      {
        v10 = type metadata accessor for IndexPath(0);
        v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

        v12 = v6;
        v13 = sub_100BB19EC(v11, (uint64_t)v12);

        swift_bridgeObjectRelease(v11);
      }
      else
      {
        v13 = _swiftEmptyArrayStorage;
      }
      v14 = v13[2];
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
      if (!v14)
        goto LABEL_12;
      v16 = objc_msgSend(v6, "collectionView", v15);
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "indexPathsForSelectedItems");

        if (v18)
        {
          v20 = type metadata accessor for IndexPath(0);
          v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v20);

          v22 = v6;
          v23 = sub_100BB19EC(v21, (uint64_t)v22);

          v19 = swift_bridgeObjectRelease(v21);
        }
        else
        {
          v23 = _swiftEmptyArrayStorage;
        }
        a3(v23, v19);
        objc_msgSend(v6, "setEditing:animated:", 0, 1, swift_bridgeObjectRelease(v23).n128_f64[0]);
LABEL_12:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

double sub_100B8157C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100BCDE20(a1);
  v6 = sub_100AF87D0((uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v8 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v8);
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_1012965E0, 48, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v6;
    v11[5] = v8;
    swift_release(v8);
    v12 = sub_100618920((uint64_t)v4, (uint64_t)&unk_1014072E0, (uint64_t)v11);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_100B816D0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  _BOOL8 v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;
  UIMenu v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  char **v41;
  unsigned __int8 v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  Swift::String v49;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  id v53;
  NSString v54;
  NSString v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  Swift::String v71;
  UIMenu v72;
  Class v73;
  objc_class *v74;
  char *v75;
  UIMenuElementSize v76;
  id v77;
  NSString v78;
  NSString v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  Swift::String v88;
  objc_class *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  objc_class *v95;
  uint64_t v96;
  Swift::OpaquePointer childrena;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrenb;
  Swift::OpaquePointer childrenc;
  id v101;
  uint64_t v102;
  objc_class *v103;
  id v104;
  id v105;
  void (*v106)(uint64_t);
  objc_class *v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  UIMenuElementSize preferredElementSize[3];
  uint64_t v115;
  char v116[24];
  char v117[24];
  char v118[32];
  UIImage_optional v119;
  UIImage_optional v120;
  UIImage_optional v121;
  UIImage_optional v122;

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v118, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
  {
    a1((uint64_t)_swiftEmptyArrayStorage);
    return;
  }
  v108 = a4;
  v106 = a1;
  v113 = (char *)Strong;
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v111 = v14;

  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIImage);
  v17 = objc_msgSend(v16, "systemImageNamed:", v15);

  v109 = &v113[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  v18 = v113[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v19 = swift_allocObject(&unk_101296568, 24, 7);
  swift_beginAccess(v6, v117, 0, 0);
  v20 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  swift_unknownObjectWeakInit(v19 + 16, v20);

  v112 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v13, v111, 0, 0, v17, 0, 0, 0, 0, 0, v18, sub_100BBA46C, v19);
  v21 = objc_msgSend(v8, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = String._bridgeToObjectiveC()();
  v101 = v16;
  v29 = objc_msgSend(v16, "systemImageNamed:", v28);

  v30 = (*v109 & 1) == 0;
  v31 = swift_allocObject(&unk_101296568, 24, 7);
  swift_beginAccess(v6, v116, 0, 0);
  v102 = v6;
  v32 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  swift_unknownObjectWeakInit(v31 + 16, v32);

  v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v25, v27, 0, 0, v29, 0, 0, 0, 0, 0, v30, sub_100BBA474, v31);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v110 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v34 = swift_allocObject(v110, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v34 + 32) = v112;
  *(_QWORD *)(v34 + 40) = v33;
  preferredElementSize[0] = v34;
  specialized Array._endMutation()(v34);
  v104 = v112;
  v105 = v33;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v119.value.super.isa = 0;
  v119.is_nil = 0;
  v36.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v119, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], childrena).super.super.isa;
  sub_100BCD968();
  v38 = v37;
  preferredElementSize[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(v37 + 16);
  if (v39)
  {
    v40 = (unsigned __int8 *)(v37 + 32);
    v113;
    v41 = &selRef_isLineSegment;
    do
    {
      v42 = *v40++;
      v43 = sub_100B826E8(v42);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v45 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v44 = *(_QWORD *)((preferredElementSize[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v45 >= v44 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
      v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      specialized Array._endMutation()(v46);
      --v39;
    }
    while (v39);
    v47 = (_QWORD *)preferredElementSize[0];
  }
  else
  {
    v48 = v113;
    v47 = _swiftEmptyArrayStorage;
    v41 = &selRef_isLineSegment;
  }

  swift_bridgeObjectRelease(v38);
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v120.value.super.isa = 0;
  v120.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v49, (Swift::String_optional)0, v120, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v47, children).super.super.isa;
  v51 = v110;
  v52 = swift_allocObject(v110, 48, 7);
  *(_OWORD *)(v52 + 16) = xmmword_100EF5560;
  *(UIMenu *)(v52 + 32) = v36;
  *(_QWORD *)(v52 + 40) = isa;
  preferredElementSize[0] = v52;
  specialized Array._endMutation()(v52);
  v115 = preferredElementSize[0];
  v103 = v36.super.super.isa;
  v107 = isa;
  if ((v108 & 1) == 0)
    goto LABEL_15;
  v53 = objc_msgSend(v8, v41[428]);
  v54 = String._bridgeToObjectiveC()();
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v53, "localizedStringForKey:value:table:", v54, v55, 0);

  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v59 = v58;

  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v101, "systemImageNamed:", v60);

  v62 = objc_msgSend(v113, "collectionView");
  if (!v62)
    goto LABEL_25;
  v63 = v62;
  v64 = sub_100703FB0();

  v65 = *(_QWORD *)(v64 + 16);
  swift_bridgeObjectRelease(v64);
  v66 = v65 == 0;
  v67 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v67 + 16, v113);
  v68 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v57, v59, 0, 0, v61, 0, 0, 0, 0, v66, 0, sub_100BBA484, v67);
  v51 = v110;
  v69 = swift_allocObject(v110, 40, 7);
  *(_OWORD *)(v69 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v69 + 32) = v68;
  preferredElementSize[0] = v69;
  specialized Array._endMutation()(v69);
  v70 = v68;
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  v121.value.super.isa = 0;
  v121.is_nil = 0;
  v72.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v71, (Swift::String_optional)0, v121, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], childrenb).super.super.isa;
  v73 = v72.super.super.isa;
  if ((unint64_t)v115 >> 62)
  {
    if (v115 < 0)
      v94 = v115;
    else
      v94 = v115 & 0xFFFFFFFFFFFFFF8;
    v95 = v72.super.super.isa;
    swift_bridgeObjectRetain(v115);
    v96 = _CocoaArrayWrapper.endIndex.getter(v94);
    swift_bridgeObjectRelease(v115);
    if ((v96 & 0x8000000000000000) == 0)
      goto LABEL_14;
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  v74 = v72.super.super.isa;
LABEL_14:
  sub_100CFBC30(0, 0, (uint64_t)v73);

LABEL_15:
  v75 = &v113[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions];
  if (v113[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions])
  {
    v76 = swift_allocObject(v51, 40, 7);
    *(_OWORD *)(v76 + 16) = xmmword_100EEF400;
    v77 = objc_msgSend(v8, v41[428]);
    v78 = String._bridgeToObjectiveC()();
    v79 = String._bridgeToObjectiveC()();
    v80 = objc_msgSend(v77, "localizedStringForKey:value:table:", v78, v79, 0);

    v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
    v83 = v82;

    v84 = v75[2];
    v85 = swift_allocObject(&unk_101296568, 24, 7);
    swift_beginAccess(v102, preferredElementSize, 0, 0);
    v86 = (void *)swift_unknownObjectWeakLoadStrong(v102);
    swift_unknownObjectWeakInit(v85 + 16, v86);

    v87 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v81, v83, 0, 0, 0, 0, 0, 0, 0, 0, v84, sub_100BBA47C, v85);
    *(_QWORD *)(v76 + 32) = v87;
    specialized Array._endMutation()(v87);
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    v122.value.super.isa = 0;
    v122.is_nil = 0;
    v89 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v88, (Swift::String_optional)0, v122, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v76, childrenc).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
    v91 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v90 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v91 >= v90 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
    v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
    specialized Array._endMutation()(v92);
    v93 = v115;
    v106(v115);

    swift_bridgeObjectRelease(v93);
  }
  else
  {
    v106(v115);

    swift_bridgeObjectRelease(v115);
  }
}

void sub_100B82140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) = 1;
    if ((v5 & 1) == 0)
      sub_100B792A4();

  }
}

void sub_100B821A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  int v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) = 0;
    if (v5 == 1)
      sub_100B792A4();

  }
}

void sub_100B82210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100B7976C(*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions), *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1), (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) & 1) == 0);

  }
}

objc_class *sub_100B82280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  UIMenuElementSize v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  Swift::String v10;
  Class isa;
  objc_class *v12;
  Class v13;
  void *v14;
  objc_class *v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  Swift::OpaquePointer v24;
  UIMenuElementSize aBlock[5];
  uint64_t v26;
  UIImage_optional v27;
  UIImage_optional v28;
  UIAction_optional v29;
  UIMenu_optional v30;

  v1 = v0;
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EEF400;
  v4 = (void *)objc_opt_self(UIDeferredMenuElement);
  v5 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  v6 = swift_allocObject(&unk_1012968B0, 25, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_BYTE *)(v6 + 24) = 0;
  aBlock[4] = (UIMenuElementSize)sub_100BBC5FC;
  v26 = v6;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  aBlock[2] = (UIMenuElementSize)sub_100524B50;
  aBlock[3] = (UIMenuElementSize)&unk_1012968C8;
  v7 = _Block_copy(aBlock);
  v8 = objc_msgSend(v4, "elementWithUncachedProvider:", v7, swift_release(v26).n128_f64[0]);
  _Block_release(v7);
  *(_QWORD *)(v3 + 32) = v8;
  aBlock[0] = v3;
  specialized Array._endMutation()(v9);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v28.value.super.isa = 0;
  v28.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v28, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v24).super.super.isa;
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v12 = isa;
  v27.value.super.isa = 0;
  v27.is_nil = 0;
  v29.value.super.super.isa = isa;
  v13 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v27, v29, v30).super.super.isa;
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = v13;
  v16 = objc_msgSend(v14, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v15, "setAccessibilityLabel:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  sub_100BB79F0(v15, *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout));
  sub_100B8256C();

  return v15;
}

void sub_100B8256C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  UIMenuElementSize v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  Swift::String v9;
  Class isa;
  Swift::OpaquePointer v11;
  UIMenuElementSize aBlock[5];
  uint64_t v13;
  UIImage_optional v14;

  v1 = v0;
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EEF400;
  v4 = (void *)objc_opt_self(UIDeferredMenuElement);
  v5 = swift_allocObject(&unk_101296900, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  aBlock[4] = (UIMenuElementSize)sub_100BBA4BC;
  v13 = v5;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  aBlock[2] = (UIMenuElementSize)sub_100524B50;
  aBlock[3] = (UIMenuElementSize)&unk_101296918;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend(v4, "elementWithUncachedProvider:", v6, swift_release(v13).n128_f64[0]);
  _Block_release(v6);
  *(_QWORD *)(v3 + 32) = v7;
  aBlock[0] = v3;
  specialized Array._endMutation()(v8);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v11).super.super.isa;
  objc_msgSend(v1, "setMenuRepresentation:", isa);

}

void *sub_100B826E8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  NSString v23;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  v5 = sub_1009E353C();
  v7 = v6;
  if (v4 == a1)
  {
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

  }
  else
  {
    v15 = 0;
    v9 = 0;
  }
  v16 = v4 == a1;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v17 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v2);
  v18 = swift_allocObject(&unk_101296888, 25, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(_BYTE *)(v18 + 24) = a1;
  v19 = v9;
  v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v5, v7, 0, 0, v9, 0, 0, 0, 0, 0, v16, sub_100BBA48C, v18);
  v21 = v20;
  if (v15)
  {
    v23 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v20, "setAccessibilityValue:", v23, v22);

  return v20;
}

void sub_100B82A14(uint64_t a1, uint64_t a2, _BOOL8 a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100B7976C(a3, (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1) ^ (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions) == a3)) & 1, *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2));

  }
}

void sub_100B82A94()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  uint64_t v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  Class isa;
  id v51;
  Class v52;
  __int128 v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "horizontalSizeClass");

  v4 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  if (!objc_msgSend(v1, "isEditing"))
  {
    v19 = objc_msgSend(v1, "navigationItem");
    v20 = objc_msgSend(v19, "searchController");

    if (v20)
    {
      v21 = objc_msgSend(v20, "searchBar");

      objc_msgSend(v21, "_setEnabled:", 1);
    }
    sub_100BCAD68();
    v23 = v22;
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

    if (v3 == (id)1)
    {
      v25 = (void *)objc_opt_self(UIDeferredMenuElement);
      v26 = swift_allocObject(&unk_101296568, 24, 7);
      swift_unknownObjectWeakInit(v26 + 16, v1);
      v27 = swift_allocObject(&unk_101296838, 25, 7);
      *(_QWORD *)(v27 + 16) = v26;
      *(_BYTE *)(v27 + 24) = 1;
      aBlock[4] = sub_100BBA460;
      v55 = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100524B50;
      aBlock[3] = &unk_101296850;
      v28 = _Block_copy(aBlock);
      v17 = objc_msgSend(v25, "elementWithUncachedProvider:", v28, swift_release(v55).n128_f64[0]);
      _Block_release(v28);
      v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v30 = swift_allocObject(v29, 40, 7);
      v53 = xmmword_100EEF400;
      *(_OWORD *)(v30 + 16) = xmmword_100EEF400;
      sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
      v31 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100EEF400;
      v32 = sub_100B8013C();
      *(_QWORD *)(v31 + 32) = v32;
      aBlock[0] = v31;
      specialized Array._endMutation()(v32);
      v33 = aBlock[0];
      v34 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, aBlock[0]);
      swift_bridgeObjectRelease(v33);
      *(_QWORD *)(v30 + 32) = v34;
      aBlock[0] = v30;
      specialized Array._endMutation()(v35);
LABEL_14:
      v18 = aBlock[0];
      v6 = _swiftEmptyArrayStorage;
      goto LABEL_15;
    }
    v44 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v41 = swift_allocObject(v44, 40, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EEF400;
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    v42 = swift_allocObject(v44, 56, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100EF7300;
    v43 = sub_100B8013C();
    goto LABEL_12;
  }
  sub_100B83174();
  if (v3 == (id)1)
  {
    v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v6 = (_QWORD *)swift_allocObject(v5, 40, 7);
    v53 = xmmword_100EEF400;
    *((_OWORD *)v6 + 1) = xmmword_100EEF400;
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    v7 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
    v8 = sub_100B80428();
    *(_QWORD *)(v7 + 32) = v8;
    specialized Array._endMutation()(v8);
    v9 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v7);
    swift_bridgeObjectRelease(v7);
    v6[4] = v9;
    specialized Array._endMutation()(v10);
    v11 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EEF400;
    v12 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EF7300;
    *(_QWORD *)(v12 + 32) = sub_100B800D0();
    v13 = sub_100B807DC();
    *(_QWORD *)(v12 + 40) = v13;
    *(_QWORD *)(v12 + 48) = v4;
    specialized Array._endMutation()(v13);
    v14 = v4;
    v15 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v12);
    swift_bridgeObjectRelease(v12);
    *(_QWORD *)(v11 + 32) = v15;
    aBlock[0] = v11;
    specialized Array._endMutation()(v16);
    v17 = 0;
    v18 = v11;
LABEL_15:
    v48 = objc_msgSend(v1, "navigationItem", v53);
    objc_msgSend(v48, "setAdditionalOverflowItems:", v17);

    v49 = objc_msgSend(v1, "navigationItem");
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v49, "setLeadingItemGroups:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v51 = objc_msgSend(v1, "navigationItem");
    v52 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v51, "setTrailingItemGroups:", v52, swift_bridgeObjectRelease(v18).n128_f64[0]);

    return;
  }
  v36 = objc_msgSend(v1, "collectionView");
  if (v36)
  {
    v37 = v36;
    v38 = sub_100703FB0();

    v39 = *(_QWORD *)(v38 + 16);
    swift_bridgeObjectRelease(v38);
    v40 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v41 = swift_allocObject(v40, 40, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EEF400;
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    if (!v39)
    {
      v42 = swift_allocObject(v40, 48, 7);
      *(_OWORD *)(v42 + 16) = xmmword_100EF5560;
      *(_QWORD *)(v42 + 32) = sub_100B800D0();
      v45 = sub_100B807DC();
      *(_QWORD *)(v42 + 40) = v45;
      goto LABEL_13;
    }
    v42 = swift_allocObject(v40, 56, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100EF7300;
    v43 = sub_100B80428();
LABEL_12:
    *(_QWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 40) = sub_100B800D0();
    v45 = sub_100B807DC();
    *(_QWORD *)(v42 + 48) = v45;
LABEL_13:
    specialized Array._endMutation()(v45);
    v46 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v42);
    swift_bridgeObjectRelease(v42);
    *(_QWORD *)(v41 + 32) = v46;
    aBlock[0] = v41;
    specialized Array._endMutation()(v47);
    v17 = 0;
    goto LABEL_14;
  }
  __break(1u);
}

void sub_100B83174()
{
  void *v0;
  void *v1;
  objc_class *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  unint64_t v35;
  objc_class *v36;

  v1 = v0;
  v2 = sub_100B80428();
  v3 = objc_msgSend(v0, "collectionView");
  if (!v3)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = sub_100703FB0();

  -[objc_class setEnabled:](v2, "setEnabled:", *(_QWORD *)(v5 + 16) != 0, swift_bridgeObjectRelease(v5).n128_f64[0]);
  v6 = objc_msgSend(v1, "navigationItem");
  v7 = objc_msgSend(v6, "searchController");

  if (v7)
  {
    v8 = objc_msgSend(v7, "searchBar");

    objc_msgSend(v8, "_setEnabled:", 0);
  }
  v9 = objc_msgSend(v1, "navigationItem");
  v10 = objc_msgSend(v9, "searchController");

  if (v10)
  {
    objc_msgSend(v10, "setActive:", 0);

  }
  v11 = objc_msgSend(v1, "collectionView");
  if (!v11)
    goto LABEL_16;
  v12 = v11;
  v13 = objc_msgSend(v11, "indexPathsForSelectedItems");

  if (v13)
  {
    v15 = type metadata accessor for IndexPath(0);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v15);

    v17 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(v1, "collectionView", v14);
  if (!v18)
    goto LABEL_17;
  v19 = v18;
  v20 = sub_100703FB0();

  v21 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v20).n128_f64[0]);
  v22 = objc_msgSend(v21, "horizontalSizeClass");

  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v22 == (id)1)
  {
    v35 = 0x8000000100FFC4B0;
    v24 = 0x72616F4220756C25;
    v25 = 0xEA00000000007364;
  }
  else
  {
    v24 = 0xD000000000000013;
    v35 = 0x8000000100FFC4B0;
    v25 = 0x8000000100FFC490;
  }
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = 0xD00000000000002FLL;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v24, (Swift::String_optional)0, (NSBundle)v23, v26, *(Swift::String *)(&v35 - 1));

  v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v30 = swift_allocObject(v29, 72, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v30 + 56) = &type metadata for Int;
  *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v30 + 32) = v17;
  static String.localizedStringWithFormat(_:_:)(v28._countAndFlagsBits, v28._object, v30);
  v32 = v31;
  swift_bridgeObjectRelease(v28._object);
  swift_bridgeObjectRelease(v30);
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v36 = sub_100B80428();
  v34 = String._bridgeToObjectiveC()();
  -[objc_class setTitle:](v36, "setTitle:", v34);

}

void sub_100B83548()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  Swift::String_optional v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  Swift::String_optional v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  UIImage_optional v37;
  UIAction_optional v38;
  UIMenu_optional v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSString v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  UIBarButtonItem v50;
  Class isa;
  _QWORD v52[2];
  UIImage_optional v53;
  UIImage_optional v54;
  UIAction_optional v55;
  UIAction_optional v56;
  UIMenu_optional v57;
  UIMenu_optional v58;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v13 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  LOBYTE(v13) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BB9E5C, v13);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v14.value._countAndFlagsBits = v10;
  v14.value._object = v12;
  v53.value.super.isa = 0;
  v53.is_nil = v13;
  v55.value.super.super.isa = 0;

  v15 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v16 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 5, 5, v16);
  sub_100BD0ED4(v15, (uint64_t)v4);
  LOBYTE(v15) = v17;
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v19 = swift_allocObject(v18, 56, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF7300;
  if ((v15 & 1) != 0)
  {
    v20 = objc_msgSend(v5, "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    v54.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BB9E84, v27);
    v28.value._countAndFlagsBits = v24;
    v28.value._object = v26;
    v54.value.super.isa = 0;
    v56.value.super.super.isa = 0;
    *(UIBarButtonItem *)(v19 + 32) = UIBarButtonItem.init(title:image:primaryAction:menu:)(v28, v54, v56, v58);
    *(_QWORD *)(v19 + 40) = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
    v29 = objc_msgSend(v5, "mainBundle");
    v30 = String._bridgeToObjectiveC()();
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16);
    v37.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BB9E7C, v36);
    v40 = v33;
    v41 = v35;
  }
  else
  {
    *(_QWORD *)(v19 + 32) = sub_100B80560();
    *(_QWORD *)(v19 + 40) = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
    v42 = objc_msgSend(v5, "mainBundle");
    v43 = String._bridgeToObjectiveC()();
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, v44, 0);

    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    v49 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v49 + 16);
    v37.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100BB9E7C, v49);
    v40 = v46;
    v41 = v48;
  }
  v37.value.super.isa = 0;
  v38.value.super.super.isa = 0;
  v50.super.super.isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(*(Swift::String_optional *)&v40, v37, v38, v39).super.super.isa;
  *(UIBarButtonItem *)(v19 + 48) = v50;
  v52[1] = v19;
  specialized Array._endMutation()(v50.super.super.isa);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setToolbarItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_100B83B88()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  uint64_t v21;
  char **v22;
  uint64_t i;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  objc_class *v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v55 = (uint64_t)&v51 - v9;
  v10 = objc_msgSend(v0, "toolbarItems");
  if (!v10)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateEditModeToolbar()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1222, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateEditModeToolbar()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1222, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v11 = v10;
  v12 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  v14 = objc_msgSend(v1, "collectionView");
  if (!v14)
    goto LABEL_42;
  v15 = v14;
  v53 = v1;
  v16 = objc_msgSend(v14, "indexPathsForSelectedItems");

  v54 = v8;
  if (v16)
  {
    v17 = type metadata accessor for IndexPath(0);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    v19 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease(v18);
    v20 = v19 == 0;
    if (v13 < 0)
      goto LABEL_16;
  }
  else
  {
    v20 = 1;
    if (v13 < 0)
      goto LABEL_16;
  }
  if ((v13 & 0x4000000000000000) == 0)
  {
    v21 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    v22 = &selRef_setAnchorPointForTexture_;
    if (!v21)
      goto LABEL_20;
    goto LABEL_10;
  }
LABEL_16:
  if (v13 < 0)
    v26 = v13;
  else
    v26 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v21 = _CocoaArrayWrapper.endIndex.getter(v26);
  v22 = &selRef_setAnchorPointForTexture_;
  if (!v21)
    goto LABEL_20;
LABEL_10:
  if (v21 < 1)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
    else
      v24 = *(id *)(v13 + 8 * i + 32);
    v25 = v24;
    objc_msgSend(v24, "setEnabled:", !v20);

  }
LABEL_20:
  swift_bridgeObjectRelease_n(v13, 2);
  if (v20)
    return;
  v27 = v53;
  v28 = objc_msgSend(v53, "collectionView");
  if (!v28)
  {
LABEL_43:
    __break(1u);
    return;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "indexPathsForSelectedItems");

  if (v30)
  {
    v31 = type metadata accessor for IndexPath(0);
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

    v33 = v27;
    v34 = sub_100BB19EC(v32, (uint64_t)v33);

    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v34 = _swiftEmptyArrayStorage;
  }
  v35 = sub_100BCDE20((uint64_t)v34);
  swift_bridgeObjectRelease(v34);
  v36 = v35[2];
  if (v36)
  {
    v37 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
    v38 = (uint64_t)v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v39 = *(_QWORD *)(v37 + 72);
    v52 = v35;
    swift_bridgeObjectRetain(v35);
    while (1)
    {
      sub_100C9F8F8(v38, (uint64_t)v4);
      v40 = v22;
      v41 = v57;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v4, 0, 1, v57);
      v42 = v55;
      sub_1004B84E0((uint64_t)v4, v55, type metadata accessor for CRLBoardViewModelMetadata);
      LOBYTE(v41) = *(_BYTE *)(v42 + *(int *)(v41 + 40));
      v43 = v42;
      v44 = (uint64_t)v54;
      sub_1004B8460(v43, (uint64_t)v54, type metadata accessor for CRLBoardViewModelMetadata);
      if ((v41 & 1) != 0)
        break;
      v45 = v44 + *(int *)(v57 + 44);
      if ((*(_BYTE *)(v45 + 8) & 1) != 0)
      {
        sub_1004B84A4(v44, type metadata accessor for CRLBoardViewModelMetadata);
        sub_1004B84A4(v55, type metadata accessor for CRLBoardViewModelMetadata);
        v22 = v40;
      }
      else
      {
        v46 = *(_QWORD *)v45;
        v47 = sub_1001E9730();
        sub_1004B84A4((uint64_t)v54, type metadata accessor for CRLBoardViewModelMetadata);
        sub_1004B84A4(v55, type metadata accessor for CRLBoardViewModelMetadata);
        v48 = v46 >= v47;
        v22 = v40;
        if (v48)
          goto LABEL_38;
      }
      v38 += v39;
      if (!--v36)
      {
        swift_bridgeObjectRelease_n(v52, 2);
        goto LABEL_36;
      }
    }
    sub_1004B84A4(v44, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v55, type metadata accessor for CRLBoardViewModelMetadata);
    v22 = v40;
LABEL_38:
    swift_bridgeObjectRelease_n(v52, 2);
    v49 = sub_100B80560();
    v50 = 0;
  }
  else
  {
    swift_bridgeObjectRelease(v35);
LABEL_36:
    v49 = sub_100B80560();
    v50 = sub_100B79D0C();
  }
  objc_msgSend(v49, v22[279], v50 & 1);

}

void sub_100B84118()
{
  void *v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t inited;
  NSString *v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  _BYTE v25[72];

  v1 = v0;
  sub_100BCAD68();
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v2, swift_bridgeObjectRelease().n128_f64[0]);

  v3 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v3, "setStyle:", 0);

  sub_100B82A94();
  v4 = objc_msgSend(objc_allocWithZone((Class)UISearchController), "init");
  objc_msgSend(v4, "setSearchResultsUpdater:", v1);
  objc_msgSend(v4, "setDelegate:", v1);
  v5 = objc_msgSend(v4, "searchBar");
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setLargeContentTitle:", v10, swift_bridgeObjectRelease().n128_f64[0]);

  v11 = objc_msgSend(v4, "searchBar");
  objc_msgSend(v11, "setShowsLargeContentViewer:", 1);

  v12 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v12, "setSearchController:", v4);

  v13 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v13, "setHidesSearchBarWhenScrolling:", 0);

  v14 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v14, "setLargeTitleDisplayMode:", 1);

  v15 = objc_msgSend(v1, "navigationController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "navigationBar");

    if (v17)
    {
      v18 = v17;
      objc_msgSend(v18, "setPrefersLargeTitles:", 1);
      v19 = sub_1004B804C((uint64_t *)&unk_1013F4250);
      inited = swift_initStackObject(v19, v25);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      v21 = NSForegroundColorAttributeName;
      sub_100BCE1AC();
      v23 = v22;
      *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
      *(_QWORD *)(inited + 40) = v23;
      sub_1008D4FE0(inited);
      type metadata accessor for Key(0);
      sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "setLargeTitleTextAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  sub_100B7D2B4();

}

id sub_100B844F4(int a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  void *v14;
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t, __n128);
  __n128 v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v24;
  void *v25;
  char *v26;
  Class isa;
  id v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t, __n128);
  uint64_t v47;
  _BYTE v48[24];
  char v49[24];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  objc_super v54;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController(0);
  v54.receiver = v3;
  v54.super_class = v12;
  objc_msgSendSuper2(&v54, "setEditing:animated:", a1 & 1, a2 & 1);
  sub_100B82A94();
  v13 = objc_msgSend(v3, "navigationController");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setToolbarHidden:", (a1 & 1) == 0);

  }
  sub_100B83B88();
  result = objc_msgSend(v3, "collectionView");
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v16 = result;
  v44 = a1;
  v17 = sub_100703FB0();

  v18 = *(_QWORD *)(v17 + 16);
  v43 = v17;
  if (v18)
  {
    v19 = v47;
    v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v47 + 16);
    v45 = *(_QWORD *)(v47 + 72);
    v46 = v21;
    v22 = swift_bridgeObjectRetain(v17);
    while (1)
    {
      v46(v11, v20, v6, v22);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v19 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v23)(v11, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v6) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v11, v6);
      v24 = v3;
      result = objc_msgSend(v3, "collectionView");
      if (!result)
      {
        __break(1u);
        goto LABEL_30;
      }
      v25 = result;
      v26 = v8;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v28 = objc_msgSend(v25, "cellForItemAtIndexPath:", isa);

      if (v28)
      {
        ObjectType = swift_getObjectType(v28);
        v30 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
        if (v30)
          v31 = v30;
        else
          v31 = 0;
        if (v30)
          v32 = v28;
        else
          v32 = 0;
        if (v32)
        {
          v33 = swift_getObjectType(v32);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v31 + 112))(v44 & 1, v33, v31);
        }

      }
      v19 = v47;
      v8 = v26;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v6);
      v20 += v45;
      --v18;
      v3 = v24;
      if (!v18)
        goto LABEL_20;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v47 + 56);
    v22 = swift_bridgeObjectRetain(v17);
LABEL_20:
    v23(v11, 1, 1, v6, v22);
  }
  swift_bridgeObjectRelease_n(v43, 2);
  if ((v44 & 1) == 0)
  {
    result = objc_msgSend(v3, "collectionView");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "selectItemAtIndexPath:animated:scrollPosition:", 0, 0, 0);

      v37 = (uint64_t)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
      swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver], v49, 0, 0);
      sub_1004CB7BC(v37, (uint64_t)&v50, &qword_1013E0230);
      if (!*((_QWORD *)&v51 + 1))
        return (id)sub_1004CB800((uint64_t)&v50, &qword_1013E0230);
      sub_10050CB14(&v50, &v52);
      v38 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      v39 = v53;
      v40 = sub_1004BB5A4(&v52, v53);
      v41 = _bridgeAnythingToObjectiveC<A>(_:)(v40, v39);
      objc_msgSend(v38, "removeObserver:", v41);
      swift_unknownObjectRelease(v41);

      v50 = 0u;
      v51 = 0u;
      swift_beginAccess(v37, v48, 33, 0);
      sub_100582338((uint64_t)&v50, v37, &qword_1013E0230);
      swift_endAccess(v48);
      return (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v52);
    }
LABEL_31:
    __break(1u);
    return result;
  }
  v53 = (uint64_t)&type metadata for () + 8;
  v34 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD568 != -1)
    swift_once(&qword_1013DD568, sub_100946FB4);
  objc_msgSend(v34, "addObserver:selector:name:object:", v3, "iCloudStatusDidChangeWithNotification:", qword_10147FFC0, 0);

  v35 = (uint64_t)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
  swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver], &v50, 33, 0);
  sub_100582338((uint64_t)&v52, v35, &qword_1013E0230);
  return (id)swift_endAccess(&v50);
}

uint64_t sub_100B84A54(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _BYTE v33[72];

  v3 = v2;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v9);
  v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2, v17);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E3830);
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v33);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v20 = type metadata accessor for IndexPath(0);
    v21 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v20, v21);
    v24 = v23;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v22;
    *(_QWORD *)(inited + 40) = v24;
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1314, "No item for index path: %@", 26, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1314, (uint64_t)"No item for index path: %@", 26, 2u);
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v25);
    v26 = 0;
  }
  else
  {
    sub_1004B84E0((uint64_t)v11, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (objc_msgSend(a1, "isEditing"))
    {
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v26 = 1;
    }
    else
    {
      v27 = v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      v28 = sub_1004B804C(&qword_1013E1790);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 5, 5, v28);
      sub_100BD0ED4(v27, (uint64_t)v8);
      v30 = v29;
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if ((v30 & 1) != 0)
        sub_100B85EA0((uint64_t)v15);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v26 = v30 ^ 1;
    }
  }
  return v26 & 1;
}

uint64_t sub_100B84E3C(void *a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  __n128 v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  Class isa;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t Strong;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Class v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t inited;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  NSURL *v95;
  void *v96;
  void *v97;
  Class v98;
  _QWORD v99[3];
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char v114[80];
  _BYTE v115[32];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v109 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v111 = (uint64_t)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v10);
  v110 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v113 = (char *)&v100 - v13;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v14);
  v16 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v100 - v18;
  v20 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v108 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v112 = (char *)&v100 - v24;
  v107 = v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v100 - v27;
  v29 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2, v30);

  v106 = v21;
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v31(v16, 1, v20) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1333, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1333, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1013E3830);
  if (v31(v19, 1, v20) == 1)
    return sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E3830);
  sub_1004B84E0((uint64_t)v19, (uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (v34)
  {

    if ((objc_msgSend(a1, "isEditing") & 1) != 0
      || (v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] & 1) != 0)
    {
      sub_100B83B88();
LABEL_31:
      sub_100B82A94();
      v35 = (uint64_t)v28;
      return sub_1004B84A4(v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    v36 = type metadata accessor for CRLBoardViewModelMetadata(0);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v38(v113, 1, 1, v36);
    v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
    v40 = type metadata accessor for CRLBoardLibrary();
    v41 = swift_dynamicCastClass(v39, v40);
    v104 = v28;
    if (v41)
    {
      v42 = (char *)v41;
      v43 = (uint64_t)v28;
      v44 = (uint64_t)v112;
      sub_1004B8460(v43, (uint64_t)v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44, v20);
      v105 = v42;
      if (EnumCaseMultiPayload == 2)
      {
        v103 = v36;
        sub_1004B804C((uint64_t *)&unk_1013EA630);
        v102 = v39;
        swift_unknownObjectRetain_n(v39, 2);
        swift_bridgeObjectRelease();
        v46 = v111;
        sub_1004B84E0(v44, v111, type metadata accessor for CRLBoardIdentifier);
        v47 = v110;
        sub_100C9F8F8(v46, v110);
        v48 = (uint64_t)v113;
        v38((char *)v47, 0, 1, v103);
        v76 = sub_100582338(v47, v48, &qword_1013E4690);
        v77 = *(_QWORD *)(*(_QWORD *)&v105[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController]
                        + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
        __chkstk_darwin(v76);
        v78 = v111;
        v99[2] = v111;
        swift_bridgeObjectRetain(v77);
        v79 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_100BBC47C, (uint64_t)v99, v77);
        swift_bridgeObjectRelease();
        sub_1004B84A4(v78, type metadata accessor for CRLBoardIdentifier);
        v80 = swift_unknownObjectRelease(v102);
        if (v79)
        {
          v81 = v103;
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v37 + 48))(v48, 1, v103, v80)
            && *(_BYTE *)(v48 + *(int *)(v81 + 32)) == 1)
          {
            v101 = a2;
            v82 = qword_1013DD8C8;
            v83 = v79;
            if (v82 != -1)
              swift_once(&qword_1013DD8C8, sub_100A069BC);
            swift_beginAccess(&static OS_os_log.shareState, v115, 0, 0);
            v84 = (void *)static OS_os_log.shareState;
            v85 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v85, v114);
            *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
            v87 = v84;
            v88 = URL.absoluteString.getter(v87);
            v90 = v89;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v88;
            *(_QWORD *)(inited + 40) = v90;
            v92 = static os_log_type_t.default.getter(v91);
            sub_100A06EBC((uint64_t)v87, &_mh_execute_header, v92, "Opening URL to accept share: ", 29, 2, inited);
            swift_setDeallocating(inited);
            v93 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 1, v93);

            v94 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
            URL._bridgeToObjectiveC()(v95);
            v97 = v96;
            sub_1008D711C((uint64_t)_swiftEmptyArrayStorage);
            type metadata accessor for OpenExternalURLOptionsKey(0);
            sub_1004B7878((unint64_t *)&qword_1013DEE88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF47EC);
            v98 = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v94, "openURL:options:completionHandler:", v97, v98, 0, swift_bridgeObjectRelease().n128_f64[0]);

            v48 = (uint64_t)v113;
LABEL_30:
            v75 = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(a1, "deselectItemAtIndexPath:animated:", v75, 0);

            sub_1004CB800(v48, &qword_1013E4690);
            v28 = v104;
            goto LABEL_31;
          }
        }
LABEL_16:
        v49 = objc_msgSend(v3, "navigationItem");
        v50 = objc_msgSend(v49, "searchController");

        if (v50)
        {
          v51 = objc_msgSend(v50, "searchBar");

          objc_msgSend(v51, "resignFirstResponder");
        }
        Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate]);
        if (Strong)
        {
          v53 = Strong;
          v54 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
          v55 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
          if (v55 && (objc_msgSend(v55, "isUserInteractionEnabled") & 1) != 0)
          {
            v56 = *(void **)(v53 + v54);
            v100 = a1;
            v101 = a2;
            v112 = v79;
            if (!v56
              || (v57 = objc_msgSend(v56, "rootViewController")) == 0
              || (v58 = v57,
                  v59 = objc_msgSend(v57, "crl_windowWrapper"),
                  v58,
                  !v59)
              || (v60 = objc_msgSend(v59, "newWrapperBeginningIgnoringUserInteractionSafely"), v59, !v60))
            {
              if (qword_1013DD6C8 != -1)
                swift_once(&qword_1013DD6C8, sub_100A00D28);
              swift_beginAccess(&static OS_os_log.crlError, v115, 0, 0);
              v61 = (id)static OS_os_log.crlError;
              v62 = static os_log_type_t.error.getter(v61);
              sub_100A06EBC((uint64_t)v61, &_mh_execute_header, v62, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
                90,
                2,
                (uint64_t)_swiftEmptyArrayStorage);

              v60 = 0;
            }
            v63 = swift_allocObject(&unk_101297378, 24, 7);
            *(_QWORD *)(v63 + 16) = v60;
            v64 = type metadata accessor for TaskPriority(0);
            v65 = (uint64_t)v109;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v109, 1, 1, v64);
            v66 = v108;
            sub_1004B8460((uint64_t)v104, v108, type metadata accessor for CRLBoardLibraryViewModel.Item);
            type metadata accessor for MainActor(0);
            swift_retain(v63);
            swift_unknownObjectRetain(v53);
            v68 = static MainActor.shared.getter(v67);
            v69 = *(unsigned __int8 *)(v106 + 80);
            v70 = (v69 + 32) & ~v69;
            v71 = (v107 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
            v72 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
            v73 = swift_allocObject(&unk_1012973A0, v72 + 8, v69 | 7);
            *(_QWORD *)(v73 + 16) = v68;
            *(_QWORD *)(v73 + 24) = &protocol witness table for MainActor;
            sub_1004B84E0(v66, v73 + v70, type metadata accessor for CRLBoardLibraryViewModel.Item);
            *(_QWORD *)(v73 + v71) = v63;
            *(_QWORD *)(v73 + v72) = v53;
            v74 = sub_100521B98(v65, (uint64_t)&unk_1013FA5E0, v73);
            swift_release(v74);
            swift_release(v63);
            swift_unknownObjectRelease(v53);
            a1 = v100;
            v79 = v112;
            v48 = (uint64_t)v113;
          }
          else
          {
            swift_unknownObjectRelease(v53);
          }
        }
        goto LABEL_30;
      }
      swift_unknownObjectRetain(v39);
      sub_1004B84A4(v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v79 = 0;
    }
    else
    {
      v79 = 0;
      v105 = 0;
    }
    v48 = (uint64_t)v113;
    goto LABEL_16;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1334, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1334, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  v35 = (uint64_t)v28;
  return sub_1004B84A4(v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

void sub_100B859D0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  unsigned int v14;
  Class isa;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE v30[72];
  _BYTE v31[24];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2, v11);

  v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (v13(v6, 1, v12) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1371, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1371, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_1013E3830);
  v14 = v13(v9, 1, v12);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E3830);
  if (v14 != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

    if (v16)
    {

      if ((objc_msgSend(a1, "isEditing") & 1) != 0)
      {
        sub_100B83B88();
      }
      else
      {
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, v31, 0, 0);
        v17 = (void *)static OS_os_log.crlDefault;
        v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v18, v30);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v28 = 0;
        v29 = 0xE000000000000000;
        v20 = v17;
        _StringGuts.grow(_:)(58);
        v21._object = (void *)0x8000000100FFD0F0;
        v21._countAndFlagsBits = 0xD000000000000024;
        String.append(_:)(v21);
        v22._countAndFlagsBits = 0xD000000000000038;
        v22._object = (void *)0x8000000100FFD120;
        String.append(_:)(v22);
        v23 = v28;
        v24 = v29;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v23;
        *(_QWORD *)(inited + 40) = v24;
        v26 = static os_log_type_t.default.getter(v25);
        sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v26, "%@", 2, 2, inited);
        swift_setDeallocating(inited);
        v27 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v27);

      }
      sub_100B82A94();
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1372, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1372, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

uint64_t sub_100B85DE4(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  a5(v13, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_100B85EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  NSString v24;
  void *v25;
  id v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v39 = a1;
  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
  v5 = (void *)static OS_os_log.default.getter();
  v7 = static os_log_type_t.default.getter(v6);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "Show recovery alert in response to attempting to open a deleted board", 69, 2, (uint64_t)_swiftEmptyArrayStorage);

  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v13 = objc_msgSend(v8, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

  v20 = objc_msgSend(v8, "mainBundle");
  v21 = String._bridgeToObjectiveC()();
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v25 = (void *)objc_opt_self(UIAlertAction);
  v26 = objc_msgSend(v25, "actionWithTitle:style:handler:", v24, 1, 0);

  objc_msgSend(v19, "addAction:", v26);
  v27 = objc_msgSend(v8, "mainBundle");
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v31 = swift_allocObject(&unk_101296568, 24, 7);
  v32 = v42;
  swift_unknownObjectWeakInit(v31 + 16);
  sub_1004B8460(v39, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v33 = *(unsigned __int8 *)(v40 + 80);
  v34 = (v33 + 24) & ~v33;
  v35 = swift_allocObject(&unk_101296590, v34 + v41, v33 | 7);
  *(_QWORD *)(v35 + 16) = v31;
  sub_1004B84E0((uint64_t)v4, v35 + v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_retain(v31);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100BB9DC0;
  v44 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_1012965A8;
  v37 = _Block_copy(aBlock);
  v38 = objc_msgSend(v25, "actionWithTitle:style:handler:", v36, 0, v37, swift_release(v44).n128_f64[0]);
  _Block_release(v37);

  objc_msgSend(v19, "addAction:", v38, swift_release(v31).n128_f64[0]);
  objc_msgSend(v32, "presentViewController:animated:completion:", v19, 1, 0);

}

void sub_100B86404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = sub_1004B804C(&qword_1014072D0);
    v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(unsigned __int8 *)(v9 + 80);
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v7, v12 + v10, v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
    v14 = v13 + v12;
    sub_1004B8460(a3, v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100B8157C(v13);
    swift_setDeallocating(v13);
    swift_arrayDestroy(v14, *(_QWORD *)(v13 + 16), v8);
    swift_deallocClassInstance(v13, 32, 7);

  }
}

uint64_t sub_100B866B0(void *a1)
{
  Class isa;
  id v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (v3)
  {
    ObjectType = swift_getObjectType(v3);
    v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
    if (v5)
      v6 = v5;
    else
      v6 = 0;
    if (v5)
      v7 = v3;
    else
      v7 = 0;
    if (v7)
    {
      v8 = swift_getObjectType(v7);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 136))(v8, v6);

      return v9;
    }

  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1446, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1446, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  return 0;
}

UIMenu sub_100B867F0(uint64_t a1, uint64_t a2, char *a3)
{
  void *v5;
  id v6;
  char **v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::OpaquePointer v40;
  UIImage_optional v41;

  v5 = *(void **)&a3[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
  v6 = objc_msgSend(v5, "hideContextMenu");
  v7 = &selRef_startAnimation;
  if (v6)
  {
    v8 = v6;
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v9 = objc_msgSend(v8, "title");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

    v15 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16);
    v16 = (_QWORD *)swift_allocObject(&unk_101296D88, 40, 7);
    v16[2] = v15;
    v16[3] = v8;
    v16[4] = a3;
    v17 = a3;
    v18 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v12, 0, 0, v14, 0, 0, 0, 0, 0, 0, sub_100BBAF60, v16);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);

    v7 = &selRef_startAnimation;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v22 = objc_msgSend(v5, "replyContextMenuWithPresentingViewController:", a2);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend((id)objc_opt_self(UIImage), v7[234], v31);

    v33 = swift_allocObject(&unk_101296D60, 24, 7);
    *(_QWORD *)(v33 + 16) = v23;
    v34 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28, v30, 0, 0, v32, 0, 0, 0, 0, 0, 0, sub_100BBAF58, v33);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v36 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v35 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v36 >= v35 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
    specialized Array._endMutation()(v37);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v41.value.super.isa = 0;
  v41.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v41, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v40);
}

id sub_100B86D28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void **aBlock;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;

  v40 = a2;
  v43 = a3;
  v37 = a1;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v42 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v41 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = sub_1004B804C(&qword_1014072D0);
  v11 = *(_QWORD *)(v5 + 72);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 32) & ~v12;
  v38 = v12 | 7;
  v14 = swift_allocObject(v10, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
  v15 = v14 + v13;
  sub_1004B8460(a1, v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100AF8094(v14);
  swift_setDeallocating(v14);
  swift_arrayDestroy(v15, 1, v4);
  swift_deallocClassInstance(v14, 32, 7);
  sub_1004B7878((unint64_t *)&qword_101407360, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A520);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v17 = swift_allocObject(&unk_101296568, 24, 7);
  v18 = v39;
  swift_unknownObjectWeakInit(v17 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v7);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = swift_allocObject(&unk_101296DB0, v20 + v9, v19 | 7);
  *(_QWORD *)(v21 + 16) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v22 = v41;
  sub_1004B8460(v37, v41, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v23 = (v12 + 24) & ~v12;
  v24 = (v42 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_101296DD8, v24 + 8, v38);
  *(_QWORD *)(v25 + 16) = v18;
  sub_1004B84E0(v22, v25 + v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v26 = v43;
  *(_QWORD *)(v25 + v24) = v43;
  v27 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v48 = sub_100BBAFE0;
  v49 = v21;
  aBlock = _NSConcreteStackBlock;
  v45 = *(_QWORD *)"";
  v46 = sub_100528418;
  v47 = &unk_101296DF0;
  v28 = _Block_copy(&aBlock);
  v29 = v49;
  v30 = v26;
  swift_retain(v21);
  v31 = v18;
  swift_release(v29);
  v48 = sub_100BBB164;
  v49 = v25;
  aBlock = _NSConcreteStackBlock;
  v45 = *(_QWORD *)"";
  v46 = sub_100524AAC;
  v47 = &unk_101296E18;
  v32 = _Block_copy(&aBlock);
  v33 = v49;
  swift_retain(v25);
  v34 = objc_msgSend(v27, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v28, v32, swift_release(v33).n128_f64[0]);
  swift_release(v25);
  swift_release(v21);

  _Block_release(v32);
  _Block_release(v28);
  return v34;
}

void sub_100B87158(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t, __n128);
  int v37;
  uint64_t v38;
  id v39;
  char *v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  void *v49;
  void *v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  void **aBlock;
  uint64_t v76;
  double (*v77)(uint64_t);
  void *v78;
  void (*v79)();
  uint64_t v80;
  uint64_t v81;

  v74 = a2;
  v69 = a1;
  v5 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v5);
  v72 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v63 - v8;
  v73 = type metadata accessor for IndexPath(0);
  v71 = *(_QWORD *)(v73 - 8);
  v9 = *(_QWORD *)(v71 + 64);
  __chkstk_darwin(v73);
  v67 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (char *)&v63 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - v16;
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a3;
  objc_msgSend(a3, "setPreferredCommitStyle:", 0, v23);
  v27 = v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v28 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 5, 5, v28);
  sub_100BD0ED4(v27, (uint64_t)v25);
  LOBYTE(v27) = v29;
  sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v27 & 1) == 0)
  {
    v30 = v18;
    v31 = (uint64_t)v17;
    v63 = v9;
    v64 = v26;
    v65 = v3;
    v66 = v21;
    v32 = v73;
    aBlock = (void **)objc_msgSend(v74, "identifier");
    v33 = sub_1004B804C((uint64_t *)&unk_101407400);
    v34 = sub_1004B804C((uint64_t *)&unk_1013E49B8);
    if (swift_dynamicCast(&v81, &aBlock, v33, v34, 6))
    {
      if (*(_QWORD *)(v81 + 16) == 1)
      {
        sub_1008580F4(v81, (uint64_t)v14);
        v35 = swift_bridgeObjectRelease();
        v36 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48);
        if (v36(v14, 1, v30, v35) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1479, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1479, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        sub_1004C4938((uint64_t)v14, v31, (uint64_t *)&unk_1013E3830);
        v37 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v36)(v31, 1, v30);
        v38 = (uint64_t)v66;
        if (v37 == 1)
        {
          sub_1004CB800(v31, (uint64_t *)&unk_1013E3830);
        }
        else
        {
          sub_1004B84E0(v31, (uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v39 = sub_100B787A8();
          v40 = v72;
          dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v38, v41);

          v42 = v40;
          v43 = v71;
          v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
          v45 = v32;
          if (v44(v42, 1, v32) == 1)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1480, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            v43 = v71;
            v42 = v72;
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1480, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          }
          v46 = (uint64_t)v42;
          v47 = v70;
          sub_1004C4938(v46, v70, (uint64_t *)&unk_101407260);
          v48 = v44((char *)v47, 1, v32);
          v49 = v64;
          v50 = v69;
          if (v48 == 1)
          {
            sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_1004CB800(v47, (uint64_t *)&unk_101407260);
          }
          else
          {
            v51 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
            v52 = v68;
            v51(v68, v47, v45);
            v53 = swift_allocObject(&unk_101296568, 24, 7);
            swift_unknownObjectWeakInit(v53 + 16);
            v79 = sub_100BBAE1C;
            v80 = v53;
            aBlock = _NSConcreteStackBlock;
            v76 = *(_QWORD *)"";
            v77 = sub_1005D2FC0;
            v78 = &unk_101296C38;
            v54 = _Block_copy(&aBlock);
            objc_msgSend(v49, "addAnimations:", v54, swift_release(v80).n128_f64[0]);
            _Block_release(v54);
            v55 = swift_allocObject(&unk_101296568, 24, 7);
            swift_unknownObjectWeakInit(v55 + 16);
            v56 = v67;
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v67, v52, v45);
            v57 = *(unsigned __int8 *)(v43 + 80);
            v58 = (v57 + 32) & ~v57;
            v59 = swift_allocObject(&unk_101296C70, v58 + v63, v57 | 7);
            *(_QWORD *)(v59 + 16) = v55;
            *(_QWORD *)(v59 + 24) = v50;
            v51((char *)(v59 + v58), (uint64_t)v56, v45);
            v79 = sub_100BBAEA0;
            v80 = v59;
            aBlock = _NSConcreteStackBlock;
            v76 = *(_QWORD *)"";
            v77 = sub_1005D2FC0;
            v78 = &unk_101296C88;
            v60 = _Block_copy(&aBlock);
            v61 = v80;
            v62 = v50;
            objc_msgSend(v49, "addCompletion:", v60, swift_release(v61).n128_f64[0]);
            _Block_release(v60);
            (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v45);
            sub_1004B84A4((uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1477, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1477, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

void sub_100B878CC(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "setEditing:animated:", 0, 1);

  }
}

void sub_100B8792C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  Class isa;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "collectionView:didSelectItemAtIndexPath:", a2, isa);

  }
}

void sub_100B87A3C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v10;
  id v11;
  id v12;

  v12 = a3;
  v10 = a4;
  swift_unknownObjectRetain(a5);
  v11 = a1;
  a6(v10);

  swift_unknownObjectRelease(a5);
}

void sub_100B87AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController;
  v6 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController);
  if (v6)
    goto LABEL_4;
  sub_1004B8460(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v8 = objc_msgSend(v7, "delegate");

  if (v8)
  {
    v9 = type metadata accessor for CRLiOSAppDelegate();
    v10 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v10);
    swift_unknownObjectRelease(v8);
    v11 = sub_1009446C0();
    swift_release(v10);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
    swift_bridgeObjectRetain(v13);
    v14 = (void *)sub_10088AC64((uint64_t)v4, v11, v12, v13);
    v15 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v14;
    v14;

    v6 = 0;
LABEL_4:
    v16 = v6;
    return;
  }
  __break(1u);
}

void sub_100B87C38()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  BOOL v22;
  __n128 v23;
  BOOL v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  double v35;
  int v36;
  double v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  char *v42;
  char v43;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1014072C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B7D84C((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1014072C0);
    v9 = v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
    v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 1;
    sub_100B8826C(v9);
    return;
  }
  v10 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v42 = v8;
  v10(v8, v4, v5);
  sub_100B87AB8();
  v12 = v11;
  v13 = (void *)objc_opt_self(UIApplication);
  v14 = objc_msgSend(v13, "sharedApplication");
  v15 = objc_msgSend(v14, "delegate");

  if (!v15)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v16 = type metadata accessor for CRLiOSAppDelegate();
  v17 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
  swift_retain(v17);
  swift_unknownObjectRelease(v15);
  v18 = sub_1009446C0();
  swift_release(v17);
  v19 = *(_QWORD *)&v12[qword_1013F6BF8];
  KeyPath = swift_getKeyPath(&unk_100F29340);
  v21 = swift_getKeyPath(&unk_100F29368);
  v43 = v18;
  swift_retain(v19);
  static Published.subscript.setter(&v43, v19, KeyPath, v21);

  v22 = sub_100B7DF1C();
  v24 = 0;
  v25 = v42;
  if (!v22)
  {
    v26 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v5, v23);
    v27 = *(_QWORD *)(v26 + 16);
    swift_bridgeObjectRelease(v26);
    v24 = v27 == 0;
  }
  v28 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView;
  v29 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
  v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = v24;
  sub_100B8826C(v29);
  if (v1[v28] != 1)
    goto LABEL_23;
  v30 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
  if (!v30 || *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] != 0.0)
    goto LABEL_23;
  v31 = v30;
  v32 = objc_msgSend(v13, "sharedApplication");
  v33 = objc_msgSend(v32, "delegate");

  if (!v33)
    goto LABEL_25;
  v34 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v33, v16, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (!v34)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 203, "Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v25 = v42;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 203, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u);
    swift_unknownObjectRelease(v33);
    v35 = 0.0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(v34 + 136) & 1) != 0)
  {
    swift_unknownObjectRelease(v33);
  }
  else
  {
    v36 = *(unsigned __int8 *)(v34 + 137);
    swift_unknownObjectRelease(v33);
    v35 = 0.0;
    if (v36 != 1)
      goto LABEL_18;
  }
  if (qword_1013DDD60 != -1)
    swift_once(&qword_1013DDD60, sub_100B9E798);
  v35 = -*(double *)&qword_101406D08;
LABEL_18:
  objc_msgSend(v31, "constant");
  if (v35 == v37)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v5);

    return;
  }
  objc_msgSend(v31, "setConstant:", v35);
  v38 = objc_msgSend(v1, "view");
  if (!v38)
    goto LABEL_26;
  v39 = v38;
  objc_msgSend(v38, "setNeedsUpdateConstraints");

  v40 = objc_msgSend(v1, "view");
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "setNeedsLayout");

LABEL_23:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v5);
    return;
  }
LABEL_27:
  __break(1u);
}

void sub_100B88118(double a1)
{
  char *v1;
  uint64_t v2;
  double v3;
  void *v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] == 1)
  {
    v2 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight;
    v3 = *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight];
    if (v3 != a1)
    {
      v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
      if (v4)
      {
        v5 = -v3;
        v6 = v4;
        objc_msgSend(v6, "setConstant:", v5);
        v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
        v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8];
        swift_bridgeObjectRetain(v8);
        v9 = String.count.getter(v7, v8);
        swift_bridgeObjectRelease(v8);
        if (v9 > 0 || *(double *)&v1[v2] == 0.0)
        {
          v10 = objc_msgSend(v1, "view");
          if (!v10)
          {
LABEL_12:
            __break(1u);
            return;
          }
          v11 = v10;
          objc_msgSend(v10, "setNeedsUpdateConstraints");

        }
        v12 = objc_msgSend(v1, "view");
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v12, "setNeedsLayout");

          return;
        }
        __break(1u);
        goto LABEL_12;
      }
    }
  }
}

void sub_100B8826C(char a1)
{
  char *v1;
  int v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  void *v44;
  uint64_t v45;
  id v46;
  Class v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;

  v2 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
  if (v2 != (a1 & 1))
  {
    v3 = v1;
    sub_100B87AB8();
    v5 = v4;
    v50 = objc_msgSend(v4, "view");

    if (!v2)
    {
      if (v50)
      {
        objc_msgSend(v50, "removeFromSuperview");

        sub_100B87AB8();
        v50 = v48;
        objc_msgSend(v48, "removeFromParentViewController");
LABEL_15:

        return;
      }
      __break(1u);
      goto LABEL_17;
    }
    if (v50)
    {
      v6 = objc_msgSend(v50, "bottomAnchor");
      v7 = objc_msgSend(v3, "view");
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, "bottomAnchor");

        v10 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v9, -*(double *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight]);
        v11 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint;
        v12 = *(void **)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
        *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = v10;

        objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v13 = objc_msgSend(v3, "view");
        if (v13)
        {
          v14 = v13;
          objc_msgSend(v13, "addSubview:", v50);

          sub_100B87AB8();
          v16 = v15;
          objc_msgSend(v3, "addChildViewController:", v15);

          v17 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v18 = swift_allocObject(v17, 64, 7);
          *(_OWORD *)(v18 + 16) = xmmword_100EF7310;
          v19 = objc_msgSend(v50, "leadingAnchor");
          v20 = objc_msgSend(v3, "view");
          if (v20)
          {
            v21 = v20;
            v22 = objc_msgSend(v20, "leadingAnchor");

            v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);
            *(_QWORD *)(v18 + 32) = v23;
            v24 = objc_msgSend(v50, "trailingAnchor");
            v25 = objc_msgSend(v3, "view");
            if (v25)
            {
              v26 = v25;
              v49 = v17;
              v27 = objc_msgSend(v25, "trailingAnchor");

              v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
              *(_QWORD *)(v18 + 40) = v28;
              v29 = objc_msgSend(v50, "topAnchor");
              v30 = objc_msgSend(v3, "view");
              if (v30)
              {
                v31 = v30;
                v32 = objc_msgSend(v30, "safeAreaLayoutGuide");

                v33 = objc_msgSend(v32, "topAnchor");
                v34 = objc_msgSend(v29, "constraintEqualToAnchor:", v33);

                *(_QWORD *)(v18 + 48) = v34;
                v35 = objc_msgSend(v50, "bottomAnchor");
                v36 = objc_msgSend(v3, "view");
                if (v36)
                {
                  v37 = v36;
                  v38 = (void *)objc_opt_self(NSLayoutConstraint);
                  v39 = objc_msgSend(v37, "safeAreaLayoutGuide");

                  v40 = objc_msgSend(v39, "bottomAnchor");
                  v41 = objc_msgSend(v35, "constraintEqualToAnchor:", v40);

                  *(_QWORD *)(v18 + 56) = v41;
                  specialized Array._endMutation()(v42);
                  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v38, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

                  v44 = *(void **)&v3[v11];
                  if (v44)
                  {
                    v45 = swift_allocObject(v49, 40, 7);
                    *(_OWORD *)(v45 + 16) = xmmword_100EEF400;
                    *(_QWORD *)(v45 + 32) = v44;
                    v51 = v45;
                    specialized Array._endMutation()(v45);
                    v46 = v44;
                    v47 = Array._bridgeToObjectiveC()().super.isa;
                    objc_msgSend(v38, "activateConstraints:", v47, swift_bridgeObjectRelease(v51).n128_f64[0]);

                  }
                  goto LABEL_15;
                }
                goto LABEL_22;
              }
LABEL_21:
              __break(1u);
LABEL_22:
              __break(1u);
              return;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
  }
}

void sub_100B887D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[36];

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100F29140;
    v6[2] = &unk_100F29140;
    v6[3] = &unk_100F29158;
    v6[4] = &unk_100F29170;
    v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[8] = &unk_100F29158;
    v6[9] = &unk_100F29158;
    v6[10] = &unk_100F29158;
    v6[11] = &unk_100F29170;
    v6[12] = &unk_100F29188;
    v6[13] = &unk_100F29188;
    v6[14] = &unk_100F29188;
    v6[15] = &unk_100F291A0;
    v6[16] = &unk_100F29158;
    v6[17] = &unk_100F29158;
    v6[18] = &unk_100F291B8;
    v6[19] = &unk_100F29158;
    v6[20] = &unk_100F29158;
    v6[21] = &unk_100F29158;
    v6[22] = &unk_100F29188;
    sub_100B8890C(319);
    if (v5 <= 0x3F)
    {
      v6[23] = *(_QWORD *)(v4 - 8) + 64;
      v6[24] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[25] = &unk_100F29188;
      v6[26] = &unk_100F29158;
      v6[27] = &unk_100F29158;
      v6[28] = &unk_100F29158;
      v6[29] = &unk_100F29158;
      v6[30] = &unk_100F29170;
      v6[31] = &unk_100F29170;
      v6[32] = &unk_100F29158;
      v6[33] = &unk_100F29158;
      v6[34] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[35] = &unk_100F29188;
      swift_updateClassMetadata2(a1, 256, 36, v6, a1 + 80);
    }
  }
}

void sub_100B8890C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_101406EE0)
  {
    v2 = sub_1004CB6A4((uint64_t *)&unk_1013FA380);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_101406EE0);
  }
}

uint64_t sub_100B88A00(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 112) = a1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v3 + 32) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(_QWORD *)(v3 + 40) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  *(_QWORD *)(v3 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(_QWORD *)(v3 + 56) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 64) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v3 + 72) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v10);
  *(_QWORD *)(v3 + 88) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v11;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_100B88B18, v12, v13);
}

uint64_t sub_100B88B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 104));
  sub_1004CB7BC(v4, v3, (uint64_t *)&unk_1013E3830);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v5 = *(unsigned __int8 *)(v0 + 112);
    sub_1004B84E0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 88), type metadata accessor for CRLBoardLibraryViewModel.Item);
    __asm { BR              X9 }
  }
  sub_1004CB800(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_1013E3830);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100B89280(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void **aBlock;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = a1;
  sub_1004B8460(a1, (uint64_t)&v46 - v12, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v13, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCAD68();
      v18 = v17;
      v20 = v19;
      v21 = (uint64_t)v6;
      v22 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v24 = (uint64_t *)&v13[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v18 = *v24;
      v20 = v24[1];
      v22 = type metadata accessor for CRLBoardIdentifier;
      v21 = (uint64_t)v13;
    }
    sub_1004B84A4(v21, v22);
  }
  else
  {
    v18 = sub_100BCE3AC();
    v20 = v23;
  }
  v25 = v14;
  sub_1004B8460(v14, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v26 = *(unsigned __int8 *)(v8 + 80);
  v48 = ~v26;
  v27 = (v26 + 24) & ~v26;
  v49 = v26 | 7;
  v28 = swift_allocObject(&unk_101296F68, v27 + v9, v26 | 7);
  *(_QWORD *)(v28 + 16) = v2;
  sub_1004B84E0((uint64_t)v10, v28 + v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v29 = v2;
  v30 = sub_100557CE8(v18, v20, (uint64_t)sub_100BBB4EC, v28);
  swift_bridgeObjectRelease(v20);
  swift_release(v28);
  v31 = swift_allocObject(&unk_101296F90, 24, 7);
  *(_QWORD *)(v31 + 16) = v30;
  v54 = sub_100BBB53C;
  v55 = v31;
  aBlock = _NSConcreteStackBlock;
  v51 = *(_QWORD *)"";
  v52 = sub_1005D2FC0;
  v53 = &unk_101296FA8;
  v32 = _Block_copy(&aBlock);
  v33 = v55;
  v34 = v30;
  objc_msgSend(v29, "presentViewController:animated:completion:", v34, 1, v32, swift_release(v33).n128_f64[0]);
  _Block_release(v32);
  v35 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDAA0 != -1)
    swift_once(&qword_1013DDAA0, sub_100A7424C);
  v47 = qword_101480A48;
  v36 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  sub_1004B8460(v25, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v37 = (v26 + 16) & v48;
  v38 = (v9 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_101296FE0, v39 + 8, v49);
  sub_1004B84E0((uint64_t)v10, v40 + v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(_QWORD *)(v40 + v38) = v36;
  *(_QWORD *)(v40 + v39) = v34;
  v54 = sub_100BBB680;
  v55 = v40;
  aBlock = _NSConcreteStackBlock;
  v51 = *(_QWORD *)"";
  v52 = sub_100568280;
  v53 = &unk_101296FF8;
  v41 = _Block_copy(&aBlock);
  v42 = v55;
  v43 = v34;
  *(_QWORD *)&v44 = swift_release(v42).n128_u64[0];
  v45 = objc_msgSend(v35, "addObserverForName:object:queue:usingBlock:", v47, 0, 0, v41, v44);
  _Block_release(v41);

  sub_100B78CDC((uint64_t)v45);
}

void sub_100B89698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v4 = type metadata accessor for CRLBoardLibrary();
  v5 = swift_dynamicCastClass(v3, v4);
  if (v5 && *(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable) == 1)
  {
    v6 = (void *)objc_opt_self(UIApplication);
    v7 = objc_msgSend(v6, "sharedApplication", swift_unknownObjectRetain(v3).n128_f64[0]);
    v8 = objc_msgSend(v7, "delegate");

    if (v8)
    {
      v9 = type metadata accessor for CRLiOSAppDelegate();
      v10 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0)
                      + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
      swift_retain(v10);
      swift_unknownObjectRelease(v8);
      v11 = sub_1009446C0();
      swift_release(v10);
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x100B8A3E8);
  }
  sub_1004D74F4();
}

void *sub_100B8A3F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BYTE v18[16];

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v10 = type metadata accessor for CRLBoardLibrary();
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
    return 0;
  v12 = v11;
  sub_1004B8460(a1, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v5, v3) != 2)
  {
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  v13 = *(_QWORD *)&v5[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48) + 8];
  swift_unknownObjectRetain(v9);
  swift_bridgeObjectRelease(v13);
  v14 = sub_1004B84E0((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v14);
  *(_QWORD *)&v18[-16] = v8;
  swift_bridgeObjectRetain(v15);
  v16 = sub_100C9D0C0((uint64_t (*)(id *))sub_100BBC47C, (uint64_t)&v18[-32], v15);
  swift_unknownObjectRelease(v9);
  swift_bridgeObjectRelease(v15);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  return v16;
}

double *sub_100B8A5D4(uint64_t a1, char *a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v45;
  char v46;
  double *v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  char v51;
  char *v52;
  void *v53;
  char *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  _BOOL4 v68;
  char *v69;
  id v70;
  id v71;
  id v72;
  NSString v73;
  NSString v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  unint64_t v97;
  unint64_t v98;
  int64_t v99;
  int v100;
  int v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  _BOOL4 v115;
  char *v116;
  uint64_t v117;
  unsigned int v118;
  char *v119;

  v116 = a2;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v119 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v6);
  v113 = (uint64_t)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v108 - v9;
  v11 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v11);
  v13 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v14 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v114 = (uint64_t)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v108 - v17;
  v19 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100B8B4E8(a1);
  sub_1004B8460(a1, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v21, v19) == 2)
  {
    v25 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v21[*(int *)(v25 + 48) + 8]);
    sub_1004B84E0((uint64_t)v21, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    v26 = v2;
    sub_100C9F8F8((uint64_t)v24, (uint64_t)v13);
    v32 = v117;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v13, 0, 1, v117);
    sub_1004B84E0((uint64_t)v13, (uint64_t)v18, type metadata accessor for CRLBoardViewModelMetadata);
    v111 = v18[*(int *)(v32 + 40)];
    sub_1004CB7BC((uint64_t)&v18[*(int *)(v32 + 28)], (uint64_t)v10, &qword_1013F5478);
    v33 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48);
    v35 = v34(v10, 1, v33);
    v30 = (uint64_t)v119;
    if (v35 == 1)
    {
      sub_1004CB800((uint64_t)v10, &qword_1013F5478);
      v112 = 1;
    }
    else
    {
      v112 = v10[24];
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    v27 = v18[1];
    v36 = v114;
    sub_100C9F8F8((uint64_t)v24, v114);
    v37 = v117;
    v38 = v36 + *(int *)(v117 + 28);
    v39 = v113;
    sub_1004CB7BC(v38, v113, &qword_1013F5478);
    v115 = v34((char *)v39, 1, v33) != 1;
    v2 = v37;
    sub_1004CB800(v39, &qword_1013F5478);
    sub_1004B84A4(v114, type metadata accessor for CRLBoardViewModelMetadata);
    v31 = v26;
    v29 = v111 ^ 1;
    v40 = &v18[*(int *)(v2 + 44)];
    if ((v40[8] & 1) != 0)
    {
      LODWORD(v117) = 0;
    }
    else
    {
      v41 = *(_QWORD *)v40;
      LODWORD(v117) = v41 >= sub_1001E9730();
    }
    v28 = v112;
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    LODWORD(v2) = v18[*(int *)(v2 + 32)];
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
    LODWORD(v117) = 0;
    v115 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 1;
    v30 = (uint64_t)v119;
    v31 = v2;
    LODWORD(v2) = 0;
  }
  v42 = v31 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v43 = sub_1004B804C(&qword_1013E1790);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v44(v30, 5, 5, v43);
  sub_100BD0ED4(v42, v30);
  v46 = v45;
  sub_1004B84A4(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v46 & 1) != 0)
  {
    v47 = sub_100D1112C(0, 1, 1, _swiftEmptyArrayStorage);
    v49 = *((_QWORD *)v47 + 2);
    v48 = *((_QWORD *)v47 + 3);
    v50 = v49 + 1;
    if (v49 >= v48 >> 1)
      v47 = sub_100D1112C((double *)(v48 > 1), v49 + 1, 1, v47);
    v51 = 8;
LABEL_15:
    *((_QWORD *)v47 + 2) = v50;
    *((_BYTE *)v47 + v49 + 32) = v51;
    goto LABEL_73;
  }
  if ((v118 & 1) != 0)
  {
    v47 = _swiftEmptyArrayStorage;
  }
  else
  {
    v52 = v116;
    if (v116)
    {
      LODWORD(v114) = v27;
      v110 = v29;
      v111 = v2;
      v113 = v42;
      v112 = v28;
      if ((_DWORD)v2)
      {
        v53 = *(void **)&v116[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        v54 = v116;
        v55 = objc_msgSend(v53, "hideContextMenu");
        if (v55)
        {
          v56 = v55;
          sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
          v57 = objc_msgSend(v56, "title");
          v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v59 = v58;

          v60 = String._bridgeToObjectiveC()();
          v61 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v60);

          v62 = swift_allocObject(&unk_101296568, 24, 7);
          v63 = v31;
          swift_unknownObjectWeakInit(v62 + 16);
          v64 = (_QWORD *)swift_allocObject(&unk_101297648, 40, 7);
          v64[2] = v62;
          v64[3] = v56;
          v64[4] = v54;
          v65 = v54;

          v47 = sub_100D1112C(0, 1, 1, _swiftEmptyArrayStorage);
          v67 = *((_QWORD *)v47 + 2);
          v66 = *((_QWORD *)v47 + 3);
          if (v67 >= v66 >> 1)
            v47 = sub_100D1112C((double *)(v66 > 1), v67 + 1, 1, v47);
          *((_QWORD *)v47 + 2) = v67 + 1;
          *((_BYTE *)v47 + v67 + 32) = 9;
          v30 = (uint64_t)v119;
          v68 = v115;
          v52 = v116;
        }
        else
        {
          v63 = v31;
          v47 = _swiftEmptyArrayStorage;
          sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          v52 = v116;
          v68 = v115;
        }
      }
      else
      {
        v63 = v31;
        v69 = v116;
        v47 = _swiftEmptyArrayStorage;
        v68 = v115;
      }
      v115 = v68;
      v70 = objc_msgSend(*(id *)&v52[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight], "replyContextMenuWithPresentingViewController:", v63);
      if (v70)
      {
        v71 = v70;
        v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v73 = String._bridgeToObjectiveC()();
        v74 = String._bridgeToObjectiveC()();
        v75 = objc_msgSend(v72, "localizedStringForKey:value:table:", v73, v74, 0);

        v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
        v78 = v77;

        sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
        v79 = String._bridgeToObjectiveC()();
        v80 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v79);

        v81 = swift_allocObject(&unk_101297620, 24, 7);
        *(_QWORD *)(v81 + 16) = v71;

        if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
          v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
        v29 = v110;
        v28 = v112;
        v83 = *((_QWORD *)v47 + 2);
        v82 = *((_QWORD *)v47 + 3);
        v30 = (uint64_t)v119;
        v42 = v113;
        if (v83 >= v82 >> 1)
          v47 = sub_100D1112C((double *)(v82 > 1), v83 + 1, 1, v47);
        *((_QWORD *)v47 + 2) = v83 + 1;
        *((_BYTE *)v47 + v83 + 32) = 10;
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        v29 = v110;
        v28 = v112;
        v42 = v113;
      }

      v27 = v114;
      LOBYTE(v2) = v111;
    }
    else
    {
      v47 = _swiftEmptyArrayStorage;
    }
    if ((v28 & v29) == 1)
    {
      v84 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v2 = *((_QWORD *)v47 + 2);
      v85 = *((_QWORD *)v47 + 3);
      if (v2 >= v85 >> 1)
        v47 = sub_100D1112C((double *)(v85 > 1), v2 + 1, 1, v47);
      *((_QWORD *)v47 + 2) = v2 + 1;
      *((_BYTE *)v47 + v2 + 32) = 0;
      LOBYTE(v2) = v84;
    }
  }
  if ((v2 & 1) == 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v47);
    if (v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v88 = *((_QWORD *)v47 + 2);
      v87 = *((_QWORD *)v47 + 3);
      v89 = v88 + 1;
      if (v88 >= v87 >> 1)
        v47 = sub_100D1112C((double *)(v87 > 1), v88 + 1, 1, v47);
      v90 = 6;
    }
    else
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v88 = *((_QWORD *)v47 + 2);
      v91 = *((_QWORD *)v47 + 3);
      v89 = v88 + 1;
      if (v88 >= v91 >> 1)
        v47 = sub_100D1112C((double *)(v91 > 1), v88 + 1, 1, v47);
      v90 = 5;
    }
    *((_QWORD *)v47 + 2) = v89;
    *((_BYTE *)v47 + v88 + 32) = v90;
  }
  v44(v30, 3, 5, v43);
  sub_100BD0ED4(v42, v30);
  v93 = v92;
  sub_1004B84A4(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v93 & 1) != 0
    || (v44(v30, 4, 5, v43),
        sub_100BD0ED4(v42, v30),
        v95 = v94,
        sub_1004B84A4(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder),
        (v95 & 1) != 0))
  {
    if ((v29 & 1) == 0)
      goto LABEL_73;
  }
  else
  {
    v44(v30, 5, 5, v43);
    sub_100BD0ED4(v42, v30);
    v101 = v100;
    sub_1004B84A4(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v29 & 1) == 0)
      goto LABEL_73;
    if (((v101 | v117) & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v103 = *((_QWORD *)v47 + 2);
      v102 = *((_QWORD *)v47 + 3);
      if (v103 >= v102 >> 1)
        v47 = sub_100D1112C((double *)(v102 > 1), v103 + 1, 1, v47);
      *((_QWORD *)v47 + 2) = v103 + 1;
      *((_BYTE *)v47 + v103 + 32) = 4;
    }
  }
  if (((v118 | v117) & 1) == 0)
  {
    v96 = swift_isUniquelyReferenced_nonNull_native(v47);
    if (v115)
    {
      if ((v96 & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v98 = *((_QWORD *)v47 + 2);
      v97 = *((_QWORD *)v47 + 3);
      v99 = v97 >> 1;
      v49 = v98 + 1;
      if (v97 >> 1 <= v98)
      {
        v47 = sub_100D1112C((double *)(v97 > 1), v98 + 1, 1, v47);
        v97 = *((_QWORD *)v47 + 3);
        v99 = v97 >> 1;
      }
      *((_QWORD *)v47 + 2) = v49;
      *((_BYTE *)v47 + v98 + 32) = 3;
      v50 = v98 + 2;
      if (v99 < v50)
        v47 = sub_100D1112C((double *)(v97 > 1), v50, 1, v47);
      v51 = 2;
    }
    else
    {
      if ((v96 & 1) == 0)
        v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
      v49 = *((_QWORD *)v47 + 2);
      v107 = *((_QWORD *)v47 + 3);
      v50 = v49 + 1;
      v51 = 1;
      if (v49 >= v107 >> 1)
        v47 = sub_100D1112C((double *)(v107 > 1), v49 + 1, 1, v47);
    }
    goto LABEL_15;
  }
LABEL_73:
  if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
    v47 = sub_100D1112C(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
  v105 = *((_QWORD *)v47 + 2);
  v104 = *((_QWORD *)v47 + 3);
  if (v105 >= v104 >> 1)
    v47 = sub_100D1112C((double *)(v104 > 1), v105 + 1, 1, v47);
  *((_QWORD *)v47 + 2) = v105 + 1;
  *((_BYTE *)v47 + v105 + 32) = 7;
  return v47;
}

id sub_100B8B4E8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  id result;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  __n128 v28;
  _QWORD v29[3];
  _QWORD v30[2];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v30 - v8;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v30[0] = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v14);

  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v15(v6, 1, v10) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"currentSelectionIsMultipleAndIncludes(item:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2717, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"currentSelectionIsMultipleAndIncludes(item:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2717, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_101407260);
  if (v15(v9, 1, v10) == 1)
  {
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101407260);
    return 0;
  }
  v16 = v30[0];
  (*(void (**)(_QWORD, char *, uint64_t))(v11 + 32))(v30[0], v9, v10);
  result = objc_msgSend(v2, "collectionView");
  if (result)
  {
    v18 = result;
    v19 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v19)
    {
      v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v10);

      v21 = *(_QWORD *)(v20 + 16);
      swift_bridgeObjectRelease(v20);
      v22 = v21 > 1;
    }
    else
    {
      v22 = 0;
    }
    result = objc_msgSend(v2, "collectionView");
    if (result)
    {
      v23 = result;
      v24 = objc_msgSend(result, "indexPathsForSelectedItems");

      if (v24)
      {
        v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v10);

        __chkstk_darwin(v26);
        v29[2] = v16;
        v27 = sub_100DAFC08((uint64_t (*)(char *))sub_100BBC494, (_BOOL8)v29, v25);
        v28 = swift_bridgeObjectRelease(v25);
        (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v16, v10, v28);
        if (v22)
          return (id)v27;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
      }
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B8B828(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100B8B894, v4, v5);
}

id sub_100B8B894()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id result;
  void *v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, double, double, double, double);

  v1 = sub_100B8E4C0(*(_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 56) = v1;
  if (!v1)
  {
    v38 = *(_QWORD *)(v0 + 32);
LABEL_8:
    v39 = swift_release(v38);
    return (id)(*(uint64_t (**)(__n128))(v0 + 8))(v39);
  }
  v2 = v1;
  v3 = sub_100B8E6DC(*(_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 64) = v3;
  if (!v3)
  {
    v38 = *(_QWORD *)(v0 + 32);

    goto LABEL_8;
  }
  v4 = v3;
  v5 = *(void **)(v0 + 24);
  v6 = objc_msgSend(v2, "contentView");
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v15 = objc_msgSend(v5, "collectionView");
  objc_msgSend(v2, "convertRect:toView:", v15, v8, v10, v12, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  result = objc_msgSend(v5, "collectionView");
  if (result)
  {
    v25 = result;
    v26 = *(void **)(v0 + 24);
    v27 = objc_msgSend(v26, "view");
    objc_msgSend(v25, "convertRect:toView:", v27, v17, v19, v21, v23);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v35 = v34;

    result = objc_msgSend(v26, "view");
    *(_QWORD *)(v0 + 72) = result;
    if (result)
    {
      v36 = (uint64_t)result;
      v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double, double, double))((char *)&dword_1013F05E0
                                                                                              + dword_1013F05E0);
      v37 = (_QWORD *)swift_task_alloc(unk_1013F05E4);
      *(_QWORD *)(v0 + 80) = v37;
      *v37 = v0;
      v37[1] = sub_100B8BACC;
      return (id)v40(v4, *(_QWORD *)(v0 + 24), v36, v29, v31, v33, v35);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B8BACC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_100B8BB7C;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_100B8BB38;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B8BB38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8BB7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(void **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);

  swift_release(v3);
  swift_release(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8BBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[35] = a4;
  v5[36] = a5;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5[37] = v6;
  v5[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v5[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[40] = v8;
  v5[41] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[42] = v9;
  v5[43] = v10;
  return swift_task_switch(sub_100B8BC88, v9, v10);
}

uint64_t sub_100B8BC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  *(_QWORD *)(v0 + 352) = v1;
  v2 = type metadata accessor for CRLBoardLibrary();
  v3 = swift_dynamicCastClass(v1, v2);
  *(_QWORD *)(v0 + 360) = v3;
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 304);
    sub_1004B8460(*(_QWORD *)(v0 + 288), v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v4, v5) == 2)
    {
      v7 = *(_QWORD *)(v0 + 312);
      v6 = *(_QWORD *)(v0 + 320);
      v8 = *(_QWORD *)(v0 + 304);
      sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_unknownObjectRetain(v1);
      swift_bridgeObjectRelease();
      v9 = sub_1004B84E0(v8, v7, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v0 + 368) = static MainActor.shared.getter(v9);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 376) = v10;
      *(_QWORD *)(v0 + 384) = v11;
      return swift_task_switch(sub_100B8BDE8, v10, v11);
    }
    v13 = *(_QWORD *)(v0 + 304);
    swift_release(*(_QWORD *)(v0 + 328));
    sub_1004B84A4(v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 328));
  }
  v14 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8BDE8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t **v5;
  uint64_t **v7;

  v1 = v0[39];
  v2 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v3 = v2[1];
  if (*v2)
    v4 = 0;
  else
    v4 = v3 == 0xE000000000000000;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v2, v3, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v5 = (uint64_t **)swift_task_alloc(dword_10140DFCC);
    v0[49] = (uint64_t)v5;
    *v5 = v0;
    v5[1] = (uint64_t *)sub_100B8BEB4;
    return sub_100C9F48C(v0[39]);
  }
  else
  {
    swift_release(v0[46]);
    v7 = (uint64_t **)swift_task_alloc(dword_10140746C);
    v0[50] = (uint64_t)v7;
    *v7 = v0;
    v7[1] = (uint64_t *)sub_100B8C3E0;
    return sub_100B8C640(v0[36]);
  }
}

uint64_t sub_100B8BEB4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 392);
  *(_BYTE *)(*v1 + 416) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100B8BF0C, *(_QWORD *)(v2 + 376), *(_QWORD *)(v2 + 384));
}

uint64_t sub_100B8BF0C()
{
  _QWORD *v0;

  swift_release(v0[46]);
  return swift_task_switch(sub_100B8BF44, v0[42], v0[43]);
}

uint64_t sub_100B8BF44()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (*(_BYTE *)(v0 + 416) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_10140746C);
    *(_QWORD *)(v0 + 400) = v1;
    *v1 = v0;
    v1[1] = sub_100B8C3E0;
    return sub_100B8C640(*(_QWORD *)(v0 + 288));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 328));
    v3 = (void *)objc_opt_self(NSBundle);
    v4 = objc_msgSend(v3, "mainBundle");
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = objc_msgSend(v3, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v17);
    v38 = v8;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v37 = v15;
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v18, v19, 1);

    v21 = objc_msgSend(v3, "mainBundle");
    v22 = String._bridgeToObjectiveC()();
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v25, 0, 0);

    objc_msgSend(v20, "addAction:", v26);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    v27 = *(_QWORD *)(v0 + 352);
    v28 = *(void **)(v0 + 280);
    swift_beginAccess(&static OS_os_log.shareState, v0 + 248, 0, 0);
    v29 = (void *)static OS_os_log.shareState;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v30, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v32 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v38;
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v32;
    *(_QWORD *)(inited + 64) = v32;
    *(_QWORD *)(inited + 72) = v37;
    *(_QWORD *)(inited + 80) = v17;
    v33 = v29;
    v34 = static os_log_type_t.error.getter(v33);
    sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v34, "Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating(inited);
    v35 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v35);

    objc_msgSend(v28, "presentViewController:animated:completion:", v20, 1, 0);
    swift_unknownObjectRelease(v27);
    sub_1004B84A4(*(_QWORD *)(v0 + 312), type metadata accessor for CRLBoardIdentifier);
    v36 = *(_QWORD *)(v0 + 304);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B8C3E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 400);
  *(_QWORD *)(*v1 + 408) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100B8C49C;
  else
    v4 = sub_100B8C440;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 336), *(_QWORD *)(v2 + 344));
}

uint64_t sub_100B8C440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release(*(_QWORD *)(v0 + 328));
  swift_unknownObjectRelease(v1);
  sub_1004B84A4(*(_QWORD *)(v0 + 312), type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8C49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 312);
  swift_release(*(_QWORD *)(v0 + 328));
  swift_unknownObjectRelease(v1);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v3 = *(_QWORD *)(v0 + 408);
  swift_beginAccess(&static OS_os_log.shareState, v0 + 200, 0, 0);
  v4 = (void *)static OS_os_log.shareState;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v3, v0 + 272, v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = v4;
  v10 = Error.localizedDescription.getter(v7, v8);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "Error showing share sheet: %@", 29, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  swift_errorRelease(v3);
  v16 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8C640(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[45] = a1;
  v2[46] = v1;
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[47] = v3;
  v2[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[49] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[50] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[51] = swift_task_alloc(v6);
  v2[52] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v2[53] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[54] = v8;
  v2[55] = v9;
  return swift_task_switch(sub_100B8C708, v8, v9);
}

uint64_t sub_100B8C708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t Strong;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 368) + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  *(_QWORD *)(v0 + 448) = v1;
  v2 = type metadata accessor for CRLBoardLibrary();
  v3 = swift_dynamicCastClass(v1, v2);
  *(_QWORD *)(v0 + 456) = v3;
  if (!v3)
  {
    v15 = *(_QWORD *)(v0 + 424);
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1822, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1822, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v16 = v15;
LABEL_8:
    swift_release(v16);
    goto LABEL_9;
  }
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  sub_1004B8460(*(_QWORD *)(v0 + 360), v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  v7 = *(_QWORD *)(v0 + 384);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 368);
    v10 = (_QWORD *)(v7 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    *(_QWORD *)(v0 + 464) = *v10;
    *(_QWORD *)(v0 + 472) = v10[1];
    sub_1004B84E0(v7, v8, type metadata accessor for CRLBoardIdentifier);
    Strong = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider);
    *(_QWORD *)(v0 + 480) = Strong;
    if (Strong)
    {
      v12 = dword_10140DEFC;
      swift_unknownObjectRetain(v1);
      v13 = (_QWORD *)swift_task_alloc(v12);
      *(_QWORD *)(v0 + 488) = v13;
      *v13 = v0;
      v13[1] = sub_100B8C9F8;
      return sub_100C9C704(*(_QWORD *)(v0 + 416), 0);
    }
    v17 = *(_QWORD *)(v0 + 416);
    v20 = *(_QWORD *)(v0 + 424);
    swift_unknownObjectRetain(v1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1824, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1824, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    sub_1004B84A4(v17, type metadata accessor for CRLBoardIdentifier);
    swift_unknownObjectRelease(v1);
    swift_bridgeObjectRelease();
    v16 = v20;
    goto LABEL_8;
  }
  swift_release(*(_QWORD *)(v0 + 424));
  sub_1004B84A4(v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_9:
  v18 = *(_QWORD *)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 384);
  swift_task_dealloc(*(_QWORD *)(v0 + 416));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8C9F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id (*v7)();

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 488));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = v4[54];
    v6 = v4[55];
    v7 = sub_100B8D72C;
  }
  else
  {
    v4[62] = a1;
    v5 = v4[54];
    v6 = v4[55];
    v7 = sub_100B8CA70;
  }
  return swift_task_switch(v7, v5, v6);
}

id sub_100B8CA70()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  id v22;
  char v23;
  void ***v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  void *v36;
  id v37;
  NSString v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  double v63;
  uint64_t v64;
  id v65;
  void *v66;
  void *v67;
  id v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  id v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  id result;
  void *v87;
  void *v88;
  id v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  id v98;
  uint64_t v99;
  objc_class *v100;
  char *v101;
  uint64_t v102;
  double *v103;
  double v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  objc_class *v110;
  char *v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  id v135;
  id v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *aBlock;
  void *v151;
  id v152;
  id v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  void *v162;
  unint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v1 = *(void **)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 416);
  swift_release(*(_QWORD *)(v0 + 424));
  v6 = type metadata accessor for CRLBoardShareItemProviderHelper();
  v162 = v1;
  v7 = sub_1009D993C(v1, v4, v5, v3, v2, 0, 0xF000000000000000);
  v158 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v8 = swift_allocObject(v158, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v8 + 32) = v7;
  v166 = v8;
  specialized Array._endMutation()(v8);
  v9 = v166;
  *(_QWORD *)(v0 + 232) = &type metadata for CRLFeatureFlags;
  v10 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 208) = 17;
  v163 = v10;
  *(_QWORD *)(v0 + 240) = v10;
  v161 = v7;
  LOBYTE(v7) = isFeatureEnabled(_:)(v0 + 208);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 208));
  if ((v7 & 1) != 0)
  {
    v11 = sub_1009D9BDC(*(void **)(v0 + 456), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
    specialized Array._endMutation()(v14);

    v9 = v166;
  }
  v16 = *(_QWORD *)(v0 + 472);
  v15 = *(void **)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 464);
  v18 = *(_QWORD *)(v0 + 416);
  v19 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
  swift_bridgeObjectRetain(v9);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v19, "initWithItemProviders:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v22 = sub_1005ABCA4(v18, v17, v16, v15, v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 272) = &type metadata for CRLFeatureFlags;
  *(_QWORD *)(v0 + 280) = v163;
  *(_BYTE *)(v0 + 248) = 17;
  v23 = isFeatureEnabled(_:)(v0 + 248);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 248));
  if ((v23 & 1) != 0)
  {
    v24 = (void ***)(v0 + 16);
    v156 = *(_QWORD *)(v0 + 456);
    v159 = *(_QWORD *)(v0 + 416);
    v25 = (void *)objc_opt_self(NSBundle);
    v26 = objc_msgSend(v25, "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v152 = v31;
    v154 = v30;

    v32 = objc_msgSend(v25, "mainBundle");
    v33 = String._bridgeToObjectiveC()();
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

    aBlock = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v151 = v36;

    v37 = objc_msgSend(v25, "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = v21;
    v40 = String._bridgeToObjectiveC()();
    v41 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v40, 0);

    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    v45 = objc_msgSend(v25, "mainBundle");
    v46 = String._bridgeToObjectiveC()();
    v47 = String._bridgeToObjectiveC()();

    v48 = *(id *)(v156 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    sub_100AC09D8(v159);

    v49 = sub_1008A03F0();
    v51 = v50;
    v52 = (_QWORD *)swift_allocObject(&unk_101297288, 88, 7);
    v52[2] = v22;
    v52[3] = v154;
    v52[4] = v152;
    v52[5] = v49;
    v52[6] = v51;
    v52[7] = v42;
    v52[8] = v44;
    v21 = v39;
    v52[9] = aBlock;
    v52[10] = v151;
    v53 = &unk_1012972A0;
    v54 = 40;
    *(_QWORD *)(v0 + 56) = v52;
    v55 = (uint64_t *)(v0 + 56);
    v56 = 32;
    v57 = 28;
    v58 = 24;
    *(_QWORD *)(v0 + 48) = sub_1005AC348;
  }
  else
  {
    v24 = (void ***)(v0 + 112);
    v59 = swift_allocObject(&unk_101297198, 24, 7);
    *(_QWORD *)(v59 + 16) = v22;
    *(_QWORD *)(v0 + 152) = v59;
    v55 = (uint64_t *)(v0 + 152);
    *(_QWORD *)(v0 + 144) = sub_100BBBBD0;
    v53 = &unk_1012971B0;
    v54 = 136;
    v56 = 128;
    v57 = 124;
    v58 = 120;
  }
  *v24 = _NSConcreteStackBlock;
  *(_DWORD *)(v0 + v58) = 1107296256;
  *(_DWORD *)(v0 + v57) = 0;
  *(_QWORD *)(v0 + v56) = sub_1005AB554;
  *(_QWORD *)(v0 + v54) = v53;
  v60 = _Block_copy(v24);
  v61 = *v55;
  v62 = v22;
  *(_QWORD *)&v63 = swift_release(v61).n128_u64[0];
  v64 = *(_QWORD *)(v0 + 360);
  objc_msgSend(v21, "setPerItemMetadataProvider:", v60, v63);
  _Block_release(v60);
  v65 = sub_100B8E4C0(v64);
  if (!v65)
  {
    v145 = *(_QWORD *)(v0 + 480);
    v146 = *(_QWORD *)(v0 + 448);
LABEL_21:
    swift_unknownObjectRelease(v145);

    swift_unknownObjectRelease(v146);
    v147 = *(_QWORD *)(v0 + 416);
    swift_bridgeObjectRelease();
    v144 = v147;
LABEL_22:
    sub_1004B84A4(v144, type metadata accessor for CRLBoardIdentifier);
    v148 = *(_QWORD *)(v0 + 408);
    v149 = *(_QWORD *)(v0 + 384);
    swift_task_dealloc(*(_QWORD *)(v0 + 416));
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v66 = v65;
  v160 = sub_100B8E6DC(*(_QWORD *)(v0 + 360));
  if (!v160)
  {
    v145 = *(_QWORD *)(v0 + 480);
    v146 = *(_QWORD *)(v0 + 448);

    goto LABEL_21;
  }
  v67 = *(void **)(v0 + 368);
  v68 = objc_msgSend(v66, "contentView");
  objc_msgSend(v68, "frame");
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v76 = v75;

  v77 = objc_msgSend(v67, "collectionView");
  objc_msgSend(v66, "convertRect:toView:", v77, v70, v72, v74, v76);
  v79 = v78;
  v81 = v80;
  v83 = v82;
  v85 = v84;

  result = objc_msgSend(v67, "collectionView");
  if (result)
  {
    v87 = result;
    v155 = v66;
    v157 = v62;
    v88 = *(void **)(v0 + 368);
    v89 = objc_msgSend(v88, "view");
    objc_msgSend(v87, "convertRect:toView:", v89, v79, v81, v83, v85);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v97 = v96;

    result = objc_msgSend(v88, "view");
    if (result)
    {
      v98 = result;
      v153 = v21;
      v99 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRelease();
      v100 = (objc_class *)type metadata accessor for CRLiOSExportAsPDFActivity();
      v101 = (char *)objc_allocWithZone(v100);
      v102 = swift_unknownObjectWeakInit(&v101[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_viewControllerToPresentFrom]);
      *(_QWORD *)&v101[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_boardActor] = v160;
      swift_unknownObjectWeakAssign(v102, v99);
      *(_QWORD *)&v101[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceView] = v98;
      v103 = (double *)&v101[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceRect];
      *v103 = v91;
      v103[1] = v93;
      v103[2] = v95;
      v103[3] = v97;
      *(_QWORD *)(v0 + 328) = v101;
      *(_QWORD *)(v0 + 336) = v100;
      *(_QWORD *)&v104 = swift_retain(v160).n128_u64[0];
      v105 = objc_msgSendSuper2((objc_super *)(v0 + 328), "init", v104);
      v106 = swift_allocObject(v158, 40, 7);
      *(_OWORD *)(v106 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v106 + 32) = v105;
      v167 = v106;
      specialized Array._endMutation()(v106);
      v107 = v167;
      *(_QWORD *)(v0 + 312) = &type metadata for CRLFeatureFlags;
      *(_QWORD *)(v0 + 320) = v163;
      *(_BYTE *)(v0 + 288) = 17;
      v164 = v105;
      v108 = isFeatureEnabled(_:)(v0 + 288);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 288));
      if ((v108 & 1) != 0)
      {
        v109 = *(_QWORD *)(v0 + 408);
        sub_1004B8460(*(_QWORD *)(v0 + 416), v109, type metadata accessor for CRLBoardIdentifier);
        v110 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i(0);
        v111 = (char *)objc_allocWithZone(v110);
        *(_QWORD *)&v111[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
        *(_QWORD *)&v111[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
        sub_1004B8460(v109, (uint64_t)&v111[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
        *(_QWORD *)(v0 + 344) = v111;
        *(_QWORD *)(v0 + 352) = v110;
        v112 = objc_msgSendSuper2((objc_super *)(v0 + 344), "init");
        v113 = sub_1004B84A4(v109, type metadata accessor for CRLBoardIdentifier);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
        v115 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v114 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v115 >= v114 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1);
        v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v112);
        specialized Array._endMutation()(v116);
        v107 = v167;
      }
      v117 = *(_QWORD *)(v0 + 456);
      v165 = *(_QWORD *)(v0 + 448);
      v118 = *(_QWORD *)(v0 + 408);
      v119 = *(_QWORD *)(v0 + 416);
      v121 = *(_QWORD *)(v0 + 392);
      v120 = *(_QWORD *)(v0 + 400);
      v122 = swift_allocObject(&unk_1012971E8, 24, 7);
      *(_QWORD *)(v122 + 16) = v107;
      *(_QWORD *)(v0 + 192) = sub_1005AC2FC;
      *(_QWORD *)(v0 + 200) = v122;
      *(_QWORD *)(v0 + 160) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 168) = *(_QWORD *)"";
      *(_QWORD *)(v0 + 176) = sub_1005AB204;
      *(_QWORD *)(v0 + 184) = &unk_101297200;
      v123 = _Block_copy((const void *)(v0 + 160));
      objc_msgSend(v153, "setApplicationActivitiesProvider:", v123, swift_release(*(_QWORD *)(v0 + 200)).n128_f64[0]);
      _Block_release(v123);
      v124 = type metadata accessor for CRLSelectionAwareActivityViewController();
      v126 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v124, v125));
      v127 = v153;
      v128 = objc_msgSend(v126, "initWithActivityItemsConfiguration:", v127);
      v129 = sub_100BC21B4(v128);

      sub_1004B8460(v119, v118, type metadata accessor for CRLBoardIdentifier);
      v130 = *(unsigned __int8 *)(v121 + 80);
      v131 = (v130 + 24) & ~v130;
      v132 = swift_allocObject(&unk_101297238, v131 + v120, v130 | 7);
      *(_QWORD *)(v132 + 16) = v117;
      sub_1004B84E0(v118, v132 + v131, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v0 + 96) = sub_100BBBC8C;
      *(_QWORD *)(v0 + 104) = v132;
      *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 72) = *(_QWORD *)"";
      *(_QWORD *)(v0 + 80) = sub_10075AF68;
      *(_QWORD *)(v0 + 88) = &unk_101297250;
      v133 = _Block_copy((const void *)(v0 + 64));
      v134 = *(_QWORD *)(v0 + 104);
      swift_unknownObjectRetain(v165);
      v135 = v129;
      swift_retain(v132);
      objc_msgSend(v135, "setCompletionWithItemsHandler:", v133, swift_release(v134).n128_f64[0]);
      _Block_release(v133);

      v136 = objc_msgSend(v135, "popoverPresentationController");
      if (v136)
      {
        v137 = v136;
        v138 = objc_msgSend(*(id *)(v0 + 368), "view");
        objc_msgSend(v137, "setSourceView:", v138);

      }
      v139 = *(_QWORD *)(v0 + 480);
      v140 = *(_QWORD *)(v0 + 448);
      v141 = *(_QWORD *)(v0 + 416);
      v142 = *(void **)(v0 + 368);
      v143 = objc_msgSend(v135, "popoverPresentationController");
      objc_msgSend(v143, "setSourceRect:", v91, v93, v95, v97);

      objc_msgSend(v142, "presentViewController:animated:completion:", v135, 1, 0);
      swift_release(v160);

      swift_unknownObjectRelease(v140);
      swift_release(v132);

      swift_unknownObjectRelease(v139);
      v144 = v141;
      goto LABEL_22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100B8D72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  id v20;
  id v21;
  char v22;
  void ***v23;
  void *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  void *v35;
  id v36;
  NSString v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  double v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  id result;
  void *v86;
  void *v87;
  id v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  id v97;
  uint64_t v98;
  objc_class *v99;
  char *v100;
  uint64_t v101;
  double *v102;
  double v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  objc_class *v109;
  char *v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  id v134;
  id v135;
  void *v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  void *aBlock;
  id v152;
  id v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  unint64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v2 = *(_QWORD *)(v0 + 464);
  v1 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 416);
  swift_release(*(_QWORD *)(v0 + 424));
  v5 = type metadata accessor for CRLBoardShareItemProviderHelper();
  v6 = sub_1009D993C(0, v3, v4, v2, v1, 0, 0xF000000000000000);
  v158 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v158, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v7 + 32) = v6;
  v165 = v7;
  specialized Array._endMutation()(v7);
  v8 = v165;
  *(_QWORD *)(v0 + 232) = &type metadata for CRLFeatureFlags;
  v9 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 208) = 17;
  v162 = v9;
  *(_QWORD *)(v0 + 240) = v9;
  v161 = v6;
  LOBYTE(v6) = isFeatureEnabled(_:)(v0 + 208);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 208));
  if ((v6 & 1) != 0)
  {
    v10 = sub_1009D9BDC(*(void **)(v0 + 456), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);

    v8 = v165;
  }
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(void **)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 464);
  v17 = *(_QWORD *)(v0 + 416);
  v18 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_1004B8930(0, &qword_10140B7E0, NSItemProvider_ptr);
  swift_bridgeObjectRetain(v8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v18, "initWithItemProviders:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v21 = sub_1005ABCA4(v17, v16, v14, v15, v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 272) = &type metadata for CRLFeatureFlags;
  *(_QWORD *)(v0 + 280) = v162;
  *(_BYTE *)(v0 + 248) = 17;
  v22 = isFeatureEnabled(_:)(v0 + 248);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 248));
  if ((v22 & 1) != 0)
  {
    v23 = (void ***)(v0 + 16);
    v156 = *(_QWORD *)(v0 + 456);
    v159 = *(_QWORD *)(v0 + 416);
    v24 = (void *)objc_opt_self(NSBundle);
    v25 = objc_msgSend(v24, "mainBundle");
    v149 = v21;
    v26 = String._bridgeToObjectiveC()();
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v152 = v30;
    v154 = v29;

    v31 = objc_msgSend(v24, "mainBundle");
    v32 = String._bridgeToObjectiveC()();
    v33 = String._bridgeToObjectiveC()();
    v34 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, v33, 0);

    v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    aBlock = v35;

    v36 = objc_msgSend(v24, "mainBundle");
    v37 = String._bridgeToObjectiveC()();
    v38 = v20;
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v39, 0);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v44 = objc_msgSend(v24, "mainBundle");
    v45 = String._bridgeToObjectiveC()();
    v46 = String._bridgeToObjectiveC()();

    v21 = v149;
    v47 = *(id *)(v156 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    sub_100AC09D8(v159);

    v48 = sub_1008A03F0();
    v50 = v49;
    v51 = (_QWORD *)swift_allocObject(&unk_101297288, 88, 7);
    v51[2] = v149;
    v51[3] = v154;
    v51[4] = v152;
    v51[5] = v48;
    v51[6] = v50;
    v51[7] = v41;
    v51[8] = v43;
    v20 = v38;
    v51[9] = v150;
    v51[10] = aBlock;
    v52 = &unk_1012972A0;
    v53 = 40;
    *(_QWORD *)(v0 + 56) = v51;
    v54 = (uint64_t *)(v0 + 56);
    v55 = 32;
    v56 = 28;
    v57 = 24;
    *(_QWORD *)(v0 + 48) = sub_1005AC348;
  }
  else
  {
    v23 = (void ***)(v0 + 112);
    v58 = swift_allocObject(&unk_101297198, 24, 7);
    *(_QWORD *)(v58 + 16) = v21;
    *(_QWORD *)(v0 + 152) = v58;
    v54 = (uint64_t *)(v0 + 152);
    *(_QWORD *)(v0 + 144) = sub_100BBBBD0;
    v52 = &unk_1012971B0;
    v53 = 136;
    v55 = 128;
    v56 = 124;
    v57 = 120;
  }
  *v23 = _NSConcreteStackBlock;
  *(_DWORD *)(v0 + v57) = 1107296256;
  *(_DWORD *)(v0 + v56) = 0;
  *(_QWORD *)(v0 + v55) = sub_1005AB554;
  *(_QWORD *)(v0 + v53) = v52;
  v59 = _Block_copy(v23);
  v60 = *v54;
  v61 = v21;
  *(_QWORD *)&v62 = swift_release(v60).n128_u64[0];
  v63 = *(_QWORD *)(v0 + 360);
  objc_msgSend(v20, "setPerItemMetadataProvider:", v59, v62);
  _Block_release(v59);
  v64 = sub_100B8E4C0(v63);
  if (!v64)
  {
    v144 = *(_QWORD *)(v0 + 480);
    v145 = *(_QWORD *)(v0 + 448);
LABEL_21:
    swift_unknownObjectRelease(v144);

    swift_unknownObjectRelease(v145);
    v146 = *(_QWORD *)(v0 + 416);
    swift_bridgeObjectRelease();
    v143 = v146;
LABEL_22:
    sub_1004B84A4(v143, type metadata accessor for CRLBoardIdentifier);
    v147 = *(_QWORD *)(v0 + 408);
    v148 = *(_QWORD *)(v0 + 384);
    swift_task_dealloc(*(_QWORD *)(v0 + 416));
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v65 = v64;
  v160 = sub_100B8E6DC(*(_QWORD *)(v0 + 360));
  if (!v160)
  {
    v144 = *(_QWORD *)(v0 + 480);
    v145 = *(_QWORD *)(v0 + 448);

    goto LABEL_21;
  }
  v66 = *(void **)(v0 + 368);
  v67 = objc_msgSend(v65, "contentView");
  objc_msgSend(v67, "frame");
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v74;

  v76 = objc_msgSend(v66, "collectionView");
  objc_msgSend(v65, "convertRect:toView:", v76, v69, v71, v73, v75);
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v84 = v83;

  result = objc_msgSend(v66, "collectionView");
  if (result)
  {
    v86 = result;
    v155 = v65;
    v157 = v61;
    v87 = *(void **)(v0 + 368);
    v88 = objc_msgSend(v87, "view");
    objc_msgSend(v86, "convertRect:toView:", v88, v78, v80, v82, v84);
    v90 = v89;
    v92 = v91;
    v94 = v93;
    v96 = v95;

    result = objc_msgSend(v87, "view");
    if (result)
    {
      v97 = result;
      v153 = v20;
      v98 = *(_QWORD *)(v0 + 368);
      swift_bridgeObjectRelease();
      v99 = (objc_class *)type metadata accessor for CRLiOSExportAsPDFActivity();
      v100 = (char *)objc_allocWithZone(v99);
      v101 = swift_unknownObjectWeakInit(&v100[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_viewControllerToPresentFrom]);
      *(_QWORD *)&v100[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_boardActor] = v160;
      swift_unknownObjectWeakAssign(v101, v98);
      *(_QWORD *)&v100[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceView] = v97;
      v102 = (double *)&v100[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceRect];
      *v102 = v90;
      v102[1] = v92;
      v102[2] = v94;
      v102[3] = v96;
      *(_QWORD *)(v0 + 328) = v100;
      *(_QWORD *)(v0 + 336) = v99;
      *(_QWORD *)&v103 = swift_retain(v160).n128_u64[0];
      v104 = objc_msgSendSuper2((objc_super *)(v0 + 328), "init", v103);
      v105 = swift_allocObject(v158, 40, 7);
      *(_OWORD *)(v105 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v105 + 32) = v104;
      v166 = v105;
      specialized Array._endMutation()(v105);
      v106 = v166;
      *(_QWORD *)(v0 + 312) = &type metadata for CRLFeatureFlags;
      *(_QWORD *)(v0 + 320) = v162;
      *(_BYTE *)(v0 + 288) = 17;
      v163 = v104;
      v107 = isFeatureEnabled(_:)(v0 + 288);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 288));
      if ((v107 & 1) != 0)
      {
        v108 = *(_QWORD *)(v0 + 408);
        sub_1004B8460(*(_QWORD *)(v0 + 416), v108, type metadata accessor for CRLBoardIdentifier);
        v109 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i(0);
        v110 = (char *)objc_allocWithZone(v109);
        *(_QWORD *)&v110[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
        *(_QWORD *)&v110[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
        sub_1004B8460(v108, (uint64_t)&v110[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
        *(_QWORD *)(v0 + 344) = v110;
        *(_QWORD *)(v0 + 352) = v109;
        v111 = objc_msgSendSuper2((objc_super *)(v0 + 344), "init");
        v112 = sub_1004B84A4(v108, type metadata accessor for CRLBoardIdentifier);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
        v114 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v113 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v114 >= v113 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v113 > 1, v114 + 1, 1);
        v115 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v114, v111);
        specialized Array._endMutation()(v115);
        v106 = v166;
      }
      v116 = *(_QWORD *)(v0 + 456);
      v164 = *(_QWORD *)(v0 + 448);
      v117 = *(_QWORD *)(v0 + 408);
      v118 = *(_QWORD *)(v0 + 416);
      v120 = *(_QWORD *)(v0 + 392);
      v119 = *(_QWORD *)(v0 + 400);
      v121 = swift_allocObject(&unk_1012971E8, 24, 7);
      *(_QWORD *)(v121 + 16) = v106;
      *(_QWORD *)(v0 + 192) = sub_1005AC2FC;
      *(_QWORD *)(v0 + 200) = v121;
      *(_QWORD *)(v0 + 160) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 168) = *(_QWORD *)"";
      *(_QWORD *)(v0 + 176) = sub_1005AB204;
      *(_QWORD *)(v0 + 184) = &unk_101297200;
      v122 = _Block_copy((const void *)(v0 + 160));
      objc_msgSend(v153, "setApplicationActivitiesProvider:", v122, swift_release(*(_QWORD *)(v0 + 200)).n128_f64[0]);
      _Block_release(v122);
      v123 = type metadata accessor for CRLSelectionAwareActivityViewController();
      v125 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v123, v124));
      v126 = v153;
      v127 = objc_msgSend(v125, "initWithActivityItemsConfiguration:", v126);
      v128 = sub_100BC21B4(v127);

      sub_1004B8460(v118, v117, type metadata accessor for CRLBoardIdentifier);
      v129 = *(unsigned __int8 *)(v120 + 80);
      v130 = (v129 + 24) & ~v129;
      v131 = swift_allocObject(&unk_101297238, v130 + v119, v129 | 7);
      *(_QWORD *)(v131 + 16) = v116;
      sub_1004B84E0(v117, v131 + v130, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v0 + 96) = sub_100BBBC8C;
      *(_QWORD *)(v0 + 104) = v131;
      *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 72) = *(_QWORD *)"";
      *(_QWORD *)(v0 + 80) = sub_10075AF68;
      *(_QWORD *)(v0 + 88) = &unk_101297250;
      v132 = _Block_copy((const void *)(v0 + 64));
      v133 = *(_QWORD *)(v0 + 104);
      swift_unknownObjectRetain(v164);
      v134 = v128;
      swift_retain(v131);
      objc_msgSend(v134, "setCompletionWithItemsHandler:", v132, swift_release(v133).n128_f64[0]);
      _Block_release(v132);

      v135 = objc_msgSend(v134, "popoverPresentationController");
      if (v135)
      {
        v136 = v135;
        v137 = objc_msgSend(*(id *)(v0 + 368), "view");
        objc_msgSend(v136, "setSourceView:", v137);

      }
      v138 = *(_QWORD *)(v0 + 480);
      v139 = *(_QWORD *)(v0 + 448);
      v140 = *(_QWORD *)(v0 + 416);
      v141 = *(void **)(v0 + 368);
      v142 = objc_msgSend(v134, "popoverPresentationController", v149);
      objc_msgSend(v142, "setSourceRect:", v90, v92, v94, v96);

      objc_msgSend(v141, "presentViewController:animated:completion:", v134, 1, 0);
      swift_release(v160);

      swift_unknownObjectRelease(v139);
      swift_release(v131);

      swift_unknownObjectRelease(v138);
      v143 = v140;
      goto LABEL_22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100B8E3C8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    if (a1)
    {
LABEL_7:
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return;
    }
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0 || a1)
      goto LABEL_7;
  }
  *(_QWORD *)(a4 + 24) = sub_1004B8930(0, (unint64_t *)&unk_1013FA430, LPLinkMetadata_ptr);
  *(_QWORD *)a4 = a3;
  v14 = a3;
}

id sub_100B8E4C0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __n128 v12;
  id v13;
  id result;
  void *v15;
  Class isa;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_101407260);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  result = objc_msgSend(v2, "collectionView");
  if (result)
  {
    v15 = result;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v15, "cellForItemAtIndexPath:", isa);

    if (!v13)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"cellView(for:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1947, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cellView(for:)", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1947, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100B8E6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v22;

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v13 = type metadata accessor for CRLBoardLibrary();
  v14 = swift_dynamicCastClass(v12, v13);
  if (!v14)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardActor(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1934, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardActor(for:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1934, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v15 = v14;
  sub_1004B8460(a1, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v5, v3) != 2)
  {
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_unknownObjectRetain(v12);
  swift_bridgeObjectRelease();
  sub_1004B84E0((uint64_t)v5, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  v16 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  v17 = type metadata accessor for CRLBoardActor(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = v16;
  swift_defaultActor_initialize(v18, v20);
  sub_1004B84E0((uint64_t)v8, v18 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v19;
  swift_unknownObjectRelease(v12);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  return v18;
}

double sub_100B8E968(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  char *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BYTE v28[24];

  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&result = __chkstk_darwin(v13).n128_u64[0];
  v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a2 & 1) == 0)
  {
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v28, 0, 0);
    v17 = (id)static OS_os_log.shareState;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "UIActivityViewController returned without completing. Delete any cached shares.", 79, 2, (uint64_t)_swiftEmptyArrayStorage);

    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
    sub_1004B8460(a6, (uint64_t)&v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor(0);
    v21 = a5;
    v22 = static MainActor.shared.getter(v21);
    v23 = *(unsigned __int8 *)(v10 + 80);
    v24 = (v23 + 40) & ~v23;
    v25 = (_QWORD *)swift_allocObject(&unk_1012972D8, v24 + v11, v23 | 7);
    v25[2] = v22;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v21;
    sub_1004B84E0((uint64_t)v12, (uint64_t)v25 + v24, type metadata accessor for CRLBoardIdentifier);
    v26 = sub_100521B98((uint64_t)v16, (uint64_t)&unk_101407488, (uint64_t)v25);
    *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  }
  return result;
}

uint64_t sub_100B8EB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[2] = v7;
  v5[3] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_10140DEF4);
  v5[4] = v8;
  *v8 = v5;
  v8[1] = sub_1004DF470;
  return sub_100CA11BC(a5);
}

uint64_t sub_100B8EBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v7 = type metadata accessor for MainActor(0);
  v5[18] = v7;
  v5[19] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_10140743C);
  v5[20] = v8;
  *v8 = v5;
  v8[1] = sub_100B8EC40;
  return sub_100B8EE6C(a5);
}

uint64_t sub_100B8EC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100B8ECF8;
  else
    v6 = sub_100B8ECC8;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100B8ECC8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100B8ECF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 152));
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v1 = *(_QWORD *)(v0 + 168);
  swift_beginAccess(&static OS_os_log.shareState, v0 + 88, 0, 0);
  v2 = (void *)static OS_os_log.shareState;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error showing manage share UI. Error: %@", 40, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8EE6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[8] = v6;
  v2[9] = v7;
  return swift_task_switch(sub_100B8EF1C, v6, v7);
}

uint64_t sub_100B8EF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = type metadata accessor for CRLBoardLibrary();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = v3;
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    sub_1004B8460(*(_QWORD *)(v0 + 16), v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    v8 = *(_QWORD *)(v0 + 40);
    if (EnumCaseMultiPayload == 2)
    {
      v9 = *(_QWORD *)(v0 + 48);
      sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_unknownObjectRetain(v1);
      swift_bridgeObjectRelease();
      sub_1004B84E0(v8, v9, type metadata accessor for CRLBoardIdentifier);
      v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
      *(_QWORD *)(v0 + 88) = v10;
      v11 = *(void **)(*(_QWORD *)(v10 + 112) + 112);
      *(_QWORD *)(v0 + 96) = v11;
      v12 = dword_10140DEFC;
      swift_retain(v10);
      v13 = v11;
      v14 = (_QWORD *)swift_task_alloc(v12);
      *(_QWORD *)(v0 + 104) = v14;
      *v14 = v0;
      v14[1] = sub_100B8F134;
      return sub_100C9C704(*(_QWORD *)(v0 + 48), 0);
    }
    swift_release(*(_QWORD *)(v0 + 56));
    sub_1004B84A4(v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 56);
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentCloudShareOptionsViewController(item:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1961, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCloudShareOptionsViewController(item:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1961, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v16);
  }
  v17 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8F134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v3[14] = a1;
  v3[15] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100B8F2E8;
  else
    v5 = sub_100B8F19C;
  return swift_task_switch(v5, v3[8], v3[9]);
}

uint64_t sub_100B8F19C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 56));
  if (v1)
  {
    v2 = *(void **)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(void **)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(void **)(v0 + 24);
    v8 = objc_allocWithZone((Class)UICloudSharingController);
    v9 = v2;
    v10 = objc_msgSend(v8, "initWithShare:container:", v9, v3);
    objc_msgSend(v10, "setDelegate:", v7);
    objc_msgSend(v10, "setModalPresentationStyle:", 2);
    objc_msgSend(v7, "presentViewController:animated:completion:", v10, 1, 0);

    swift_release(v4);
    swift_unknownObjectRelease(v5);

    sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(void **)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);
    sub_1004B84A4(*(_QWORD *)(v0 + 48), type metadata accessor for CRLBoardIdentifier);

    swift_release(v11);
    swift_unknownObjectRelease(v13);
  }
  v14 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B8F2E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void **)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(v1);
  swift_unknownObjectRelease(v3);

  sub_1004B84A4(v4, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100B8F52C(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v13[72];
  _BYTE v14[24];

  v2 = objc_msgSend(a1, "share");
  if (v2)
  {
    v3 = v2;
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v14, 0, 0);
    v4 = (void *)static OS_os_log.shareState;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v5, v13);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
    *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1013EF500, &qword_1013E0240, CKShare_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = v3;
    v7 = v4;
    v8 = v3;
    v10 = static os_log_type_t.default.getter(v9);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v10, "Share completed or updated for share %@", 39, 2, inited);
    swift_setDeallocating(inited);
    v11 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v11);

    v12 = objc_msgSend(a1, "share");
    sub_100BB96E8(v12, 0);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"cloudSharingControllerDidSaveShare(_:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2015, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudSharingControllerDidSaveShare(_:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2015, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_100B8F804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  uint64_t v11;
  _QWORD *v12;

  v11 = type metadata accessor for MainActor(0);
  v7[2] = v11;
  v7[3] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_10140DF04);
  v7[4] = v12;
  *v12 = v7;
  v12[1] = sub_1006897D0;
  return sub_100C9CCDC(a5, a6, a7);
}

id sub_100B8F9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id result;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  Class isa;
  id v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[5];
  _BYTE v24[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  result = objc_msgSend(Strong, "collectionView");
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(result, "indexPathsForVisibleItems");

    v9 = type metadata accessor for IndexPath(0);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    __chkstk_darwin(v11);
    v23[2] = a2;
    LOBYTE(v7) = sub_100DAFC08((uint64_t (*)(char *))sub_100BBC494, (_BOOL8)v23, v10);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v7 & 1) == 0)
      goto LABEL_14;
    result = objc_msgSend(v5, "collectionView", v12);
    if (result)
    {
      v13 = result;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v15 = objc_msgSend(v13, "cellForItemAtIndexPath:", isa);

      if (v15)
      {
        ObjectType = swift_getObjectType(v15);
        v17 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
        if (v17)
          v18 = v17;
        else
          v18 = 0;
        if (v17)
          v19 = v15;
        else
          v19 = 0;
        if (v19)
        {
          v20 = swift_getObjectType(v19);
          v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 136))(v20, v18);
          v22 = v5;
          v5 = v15;
        }
        else
        {
          v21 = 0;
          v22 = v15;
        }

        goto LABEL_18;
      }
LABEL_14:
      v21 = 0;
LABEL_18:

      return (id)v21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Class sub_100B8FBA8(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  int v30;
  int v31;
  int *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char v43;
  char v44;
  id v45;
  NSString v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  char *v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  id v84;
  id v85;
  id v86;
  NSString v87;
  NSString v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSString v93;
  id v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  id v100;
  NSString v101;
  NSString v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSString v107;
  id v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  double *v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  Class result;
  Class v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  double *v143;
  int v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  BOOL v157;
  unint64_t v158;
  id v159;
  NSString v160;
  NSString v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  NSString v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  Swift::String v182;
  Swift::OpaquePointer v183;
  _QWORD *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  void *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD aBlock[5];
  uint64_t v200;
  UIMenuElementSize v201;
  UIImage_optional v202;

  v186 = a4;
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v184 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v9);
  v187 = (uint64_t)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v11);
  v189 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v184 - v14;
  v195 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v197 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v191 = (uint64_t)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v198 = (uint64_t)&v184 - v18;
  __chkstk_darwin(v19);
  v185 = (uint64_t)&v184 - v20;
  v21 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v190 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v192 = v22;
  v193 = (uint64_t)&v184 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v184 - v24;
  v26 = type metadata accessor for CRLBoardIdentifier(0);
  v184 = *(_QWORD **)(v26 - 8);
  __chkstk_darwin(v26);
  v28 = (char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v194 = sub_100B8B4E8(a3);
  v196 = a3;
  sub_1004B8460(a3, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v25, v21) == 2)
  {
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84E0((uint64_t)v25, (uint64_t)v28, type metadata accessor for CRLBoardIdentifier);
    sub_100C9F8F8((uint64_t)v28, (uint64_t)v15);
    v29 = a2;
    v32 = (int *)v195;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v15, 0, 1, v195);
    v33 = v185;
    sub_1004B84E0((uint64_t)v15, v185, type metadata accessor for CRLBoardViewModelMetadata);
    v34 = *(unsigned __int8 *)(v33 + v32[10]);
    v35 = v187;
    sub_1004CB7BC(v33 + v32[7], v187, &qword_1013F5478);
    v36 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36);
    if (v37 == 1)
    {
      sub_1004CB800(v35, &qword_1013F5478);
      v31 = 1;
    }
    else
    {
      v31 = *(unsigned __int8 *)(v35 + 24);
      sub_1004B84A4(v35, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    v38 = v33 + v32[11];
    if ((*(_BYTE *)(v38 + 8) & 1) != 0)
    {
      LODWORD(v187) = 0;
    }
    else
    {
      v39 = *(_QWORD *)v38;
      LODWORD(v187) = v39 >= sub_1001E9730();
    }
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoardIdentifier);
    v30 = *(unsigned __int8 *)(v33 + v32[8]);
    sub_1004B84A4(v33, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v30 = 0;
    LODWORD(v187) = 0;
    v31 = 0;
    v34 = 0;
    v29 = a2;
  }
  v40 = (uint64_t)v29 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v41 = sub_1004B804C(&qword_1013E1790);
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v42(v8, 5, 5, v41);
  sub_100BD0ED4(v40, (uint64_t)v8);
  v44 = v43;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v188 = v29;
  if ((v44 & 1) != 0)
  {
    v42(v8, 5, 5, v41);
    sub_100589120(v40, (uint64_t)v8, &_mh_execute_header, (uint64_t)"createContextMenuElementToRecover(item:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2279);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v46 = String._bridgeToObjectiveC()();
    v47 = String._bridgeToObjectiveC()();
    v48 = objc_msgSend(v45, "localizedStringForKey:value:table:", v46, v47, 0);

    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v52);

    v54 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v54 + 16);
    v55 = v196;
    v56 = v193;
    sub_1004B8460(v196, v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v57 = *(unsigned __int8 *)(v190 + 80);
    v58 = (v57 + 24) & ~v57;
    v59 = swift_allocObject(&unk_101296F40, v58 + v192, v57 | 7);
    *(_QWORD *)(v59 + 16) = v54;
    sub_1004B84E0(v56, v59 + v58, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v60 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v49, v51, 0, 0, v53, 0, 0, 0, 0, 0, 0, sub_100BBB3BC, v59);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
    v62 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v61 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v62 >= v61 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
    v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
    specialized Array._endMutation()(v63);
    v64 = v55;
    goto LABEL_64;
  }
  LODWORD(v185) = v34;
  if ((v194 & 1) == 0)
  {
    v65 = v186;
    if (v186)
    {
      if (v30)
      {
        v66 = *(void **)&v186[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        v67 = v186;
        v68 = objc_msgSend(v66, "hideContextMenu");
        if (v68)
        {
          v69 = v68;
          sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
          v70 = objc_msgSend(v69, "title");
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
          v73 = v72;

          v74 = String._bridgeToObjectiveC()();
          v75 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v74);

          v76 = swift_allocObject(&unk_101296568, 24, 7);
          swift_unknownObjectWeakInit(v76 + 16);
          v77 = (_QWORD *)swift_allocObject(&unk_101296F18, 40, 7);
          v77[2] = v76;
          v77[3] = v69;
          v77[4] = v67;
          v78 = v67;
          v79 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v71, v73, 0, 0, v75, 0, 0, 0, 0, 0, 0, sub_100BBC4B8, v77);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
          v81 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v80 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v81 >= v80 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
          v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
          specialized Array._endMutation()(v82);

          v29 = v188;
          v34 = v185;
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v65 = v186;
      }
      else
      {
        v83 = v186;
      }
      v84 = objc_msgSend(*(id *)&v65[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight], "replyContextMenuWithPresentingViewController:", v29);
      if (v84)
      {
        v85 = v84;
        v86 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v87 = String._bridgeToObjectiveC()();
        v88 = String._bridgeToObjectiveC()();
        v89 = objc_msgSend(v86, "localizedStringForKey:value:table:", v87, v88, 0);

        v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
        v92 = v91;

        sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
        v93 = String._bridgeToObjectiveC()();
        v94 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v93);

        v95 = swift_allocObject(&unk_101296EF0, 24, 7);
        *(_QWORD *)(v95 + 16) = v85;
        v96 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v90, v92, 0, 0, v94, 0, 0, 0, 0, 0, 0, sub_100BBAF58, v95);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
        v98 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v97 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v98 >= v97 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
        v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
        specialized Array._endMutation()(v99);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }

    }
    if (((v31 ^ 1 | v34) & 1) == 0)
    {
      v186 = (char *)sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v100 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v101 = String._bridgeToObjectiveC()();
      v102 = String._bridgeToObjectiveC()();
      v103 = objc_msgSend(v100, "localizedStringForKey:value:table:", v101, v102, 0);

      v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
      v106 = v105;

      v107 = String._bridgeToObjectiveC()();
      v108 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v107);

      v109 = swift_allocObject(&unk_101296568, 24, 7);
      v110 = v29;
      swift_unknownObjectWeakInit(v109 + 16);
      v111 = v193;
      sub_1004B8460(v196, v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v112 = *(unsigned __int8 *)(v190 + 80);
      v113 = (v112 + 24) & ~v112;
      v114 = swift_allocObject(&unk_101296EC8, v113 + v192, v112 | 7);
      *(_QWORD *)(v114 + 16) = v109;
      sub_1004B84E0(v111, v114 + v113, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v115 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v104, v106, 0, 0, v108, 0, 0, 0, 0, 0, 0, sub_100BBB3A0, v114);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v115);
      v117 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v116 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v117 >= v116 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v116 > 1, v117 + 1, 1);
      v118 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v117, v115);
      specialized Array._endMutation()(v118);
      v29 = v110;
      v34 = v185;
    }
  }
  v119 = v34;
  v120 = v196;
  v121 = sub_100B92110(v196);
  v122 = (void *)objc_opt_self(UIDeferredMenuElement);
  v123 = swift_allocObject(&unk_101296568, 24, 7);
  v124 = v29;
  swift_unknownObjectWeakInit(v123 + 16);
  v125 = v193;
  sub_1004B8460(v120, v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v126 = *(unsigned __int8 *)(v190 + 80);
  v127 = (v126 + 32) & ~v126;
  v186 = (char *)v126;
  v190 = v126 | 7;
  v128 = swift_allocObject(&unk_101296E50, v127 + v192, v126 | 7);
  *(_QWORD *)(v128 + 16) = v121;
  *(_QWORD *)(v128 + 24) = v123;
  sub_1004B84E0(v125, v128 + v127, type metadata accessor for CRLBoardLibraryViewModel.Item);
  aBlock[4] = sub_100BBB2DC;
  v200 = v128;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100524B50;
  aBlock[3] = &unk_101296E68;
  v129 = _Block_copy(aBlock);
  v130 = objc_msgSend(v122, "elementWithUncachedProvider:", v129, swift_release(v200).n128_f64[0]);
  _Block_release(v129);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v131);
  v133 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v132 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v133 >= v132 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v133 + 1, 1);
  v134 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v133, v130);
  specialized Array._endMutation()(v134);
  v135 = (uint64_t)v189;
  v136 = v195;
  if ((v194 & 1) != 0)
  {
    result = (Class)objc_msgSend(v124, "collectionView");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v138 = result;
    v139 = -[objc_class indexPathsForSelectedItems](result, "indexPathsForSelectedItems");

    if (v139)
    {
      v140 = type metadata accessor for IndexPath(0);
      v141 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v139, v140);

      v142 = v124;
      v143 = (double *)sub_100BB19EC(v141, (uint64_t)v142);

      swift_bridgeObjectRelease();
    }
    else
    {
      v143 = _swiftEmptyArrayStorage;
    }
    v145 = v197;
    v146 = sub_100BCDE20((uint64_t)v143);
    swift_bridgeObjectRelease();
    v147 = v146[2];
    if (v147)
    {
      v148 = (uint64_t)v146
           + ((*((unsigned __int8 *)v184 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v184 + 80));
      v149 = v184[9];
      v184 = v146;
      swift_bridgeObjectRetain(v146);
      while (1)
      {
        sub_100C9F8F8(v148, v135);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v145 + 56))(v135, 0, 1, v136);
        v150 = v198;
        sub_1004B84E0(v135, v198, type metadata accessor for CRLBoardViewModelMetadata);
        v151 = *(_BYTE *)(v150 + *(int *)(v136 + 40));
        v152 = v150;
        v153 = v191;
        sub_1004B8460(v152, v191, type metadata accessor for CRLBoardViewModelMetadata);
        if ((v151 & 1) != 0)
          break;
        v154 = v153 + *(int *)(v136 + 44);
        if ((*(_BYTE *)(v154 + 8) & 1) != 0)
        {
          sub_1004B84A4(v153, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v198, type metadata accessor for CRLBoardViewModelMetadata);
          v145 = v197;
        }
        else
        {
          v155 = *(_QWORD *)v154;
          v156 = sub_1001E9730();
          sub_1004B84A4(v153, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v198, type metadata accessor for CRLBoardViewModelMetadata);
          v157 = v155 >= v156;
          v136 = v195;
          v135 = (uint64_t)v189;
          v145 = v197;
          if (v157)
            goto LABEL_61;
        }
        v148 += v149;
        if (!--v147)
        {
          swift_bridgeObjectRelease_n(v184, 2);
          goto LABEL_55;
        }
      }
      sub_1004B84A4(v153, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4(v198, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_61:
      swift_bridgeObjectRelease_n(v184, 2);
      v64 = v196;
      v144 = v185;
      goto LABEL_62;
    }
    swift_bridgeObjectRelease();
LABEL_55:
    v64 = v196;
    v144 = v185;
    if (((v185 | v187) & 1) != 0)
      goto LABEL_64;
LABEL_56:
    if ((sub_100B79D0C() & 1) != 0)
    {
      v158 = (unint64_t)v186;
      v198 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v159 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v160 = String._bridgeToObjectiveC()();
      v161 = String._bridgeToObjectiveC()();
      v162 = objc_msgSend(v159, "localizedStringForKey:value:table:", v160, v161, 0);

      v163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
      v165 = v164;

      v166 = String._bridgeToObjectiveC()();
      v167 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v166);

      v168 = swift_allocObject(&unk_101296568, 24, 7);
      swift_unknownObjectWeakInit(v168 + 16);
      v169 = v64;
      v170 = v193;
      sub_1004B8460(v64, v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v171 = (v158 + 24) & ~v158;
      v172 = swift_allocObject(&unk_101296EA0, v171 + v192, v190);
      *(_QWORD *)(v172 + 16) = v168;
      sub_1004B84E0(v170, v172 + v171, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v173 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v163, v165, 0, 0, v167, 0, 0, 0, 0, 0, 0, sub_100BBB330, v172);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v173);
      v175 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v174 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v175 >= v174 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v174 > 1, v175 + 1, 1);
      v176 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v175, v173);
      specialized Array._endMutation()(v176);
      v144 = v185;
      v64 = v169;
    }
LABEL_62:
    if (((v144 | v194 | v187) & 1) == 0)
    {
      v177 = sub_100B91134(v64);
      sub_100620D70(v177);
    }
    goto LABEL_64;
  }
  v144 = v119;
  v64 = v196;
  if (((v119 | v187) & 1) == 0)
    goto LABEL_56;
LABEL_64:
  v178 = sub_100B91A0C(v64);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v178);
  v180 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v179 = *(_QWORD *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v180 >= v179 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v179 > 1, v180 + 1, 1);
  v181 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v180, v178);
  specialized Array._endMutation()(v181);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v182._countAndFlagsBits = 0;
  v182._object = (void *)0xE000000000000000;
  v202.value.super.isa = 0;
  v202.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v182, (Swift::String_optional)0, v202, 0, 0xFFFFFFFFFFFFFFFFLL, v201, v183).super.super.isa;
}

uint64_t sub_100B91134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  NSString v41;
  uint64_t v42;
  id v43;
  NSString v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  NSString v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v2 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v75 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - v12;
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = (uint64_t)_swiftEmptyArrayStorage;
  v77 = a1;
  sub_1004B8460(a1, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v13, v8) != 2)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_4:
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = String._bridgeToObjectiveC()();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v24);

    v26 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    sub_1004B8460(v77, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v27 = *(unsigned __int8 *)(v75 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = swift_allocObject(&unk_101297058, v28 + v76, v27 | 7);
    *(_QWORD *)(v29 + 16) = v26;
    sub_1004B84E0((uint64_t)v10, v29 + v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v30 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, v25, 0, 0, 0, 0, 0, 0, sub_100BBB9D4, v29);
    goto LABEL_5;
  }
  sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease();
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  sub_100C9F8F8((uint64_t)v16, (uint64_t)v7);
  sub_1004CB7BC((uint64_t)&v7[*(int *)(v5 + 28)], (uint64_t)v4, &qword_1013F5478);
  v39 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v4, 1, v39);
  sub_1004CB800((uint64_t)v4, &qword_1013F5478);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  if (v40 == 1)
    goto LABEL_4;
  v41 = String._bridgeToObjectiveC()();
  v74 = (id)objc_opt_self(UIImage);
  v72 = objc_msgSend(v74, "systemImageNamed:", v41);

  v42 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v73 = (id)objc_opt_self(NSBundle);
  v43 = objc_msgSend(v73, "mainBundle");
  v44 = String._bridgeToObjectiveC()();
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v43, "localizedStringForKey:value:table:", v44, v45, 0);

  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16);
  sub_1004B8460(v77, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v51 = *(unsigned __int8 *)(v75 + 80);
  v52 = (v51 + 24) & ~v51;
  v53 = v51 | 7;
  v75 = v52 + v76;
  v54 = swift_allocObject(&unk_101297080, v52 + v76, v51 | 7);
  *(_QWORD *)(v54 + 16) = v50;
  sub_1004B84E0((uint64_t)v10, v54 + v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v76 = v42;
  v55 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v47, v49, 0, 0, v72, 0, 0, 0, 0, 0, 0, sub_100BBB9EC, v54);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
  v57 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v56 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v57 >= v56 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
  specialized Array._endMutation()(v58);
  v59 = objc_msgSend(v73, "mainBundle");
  v60 = String._bridgeToObjectiveC()();
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v59, "localizedStringForKey:value:table:", v60, v61, 0);

  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v65 = v64;

  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v74, "systemImageNamed:", v66);

  v68 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v68 + 16);
  sub_1004B8460(v77, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v69 = swift_allocObject(&unk_1012970A8, v75, v53);
  *(_QWORD *)(v69 + 16) = v68;
  sub_1004B84E0((uint64_t)v10, v69 + v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v30 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v63, v65, 0, 0, v67, 0, 0, 0, 0, 0, 0, sub_100BBB9FC, v69);
LABEL_5:
  v31 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
  v33 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  v35 = v78;
  if ((unint64_t)v78 >> 62)
  {
    if (v78 < 0)
      v70 = v78;
    else
      v70 = v78 & 0xFFFFFFFFFFFFFF8;
    v71 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v35);
    v37 = _bridgeCocoaArray<A>(_:)(v70, v71);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = swift_bridgeObjectRetain(v78);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
    sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    v37 = v35;
  }
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_100B91A0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  v14 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  sub_1004B8460(a1, (uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
  v15 = *(unsigned __int8 *)(v3 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_101297300, v16 + v4, v15 | 7);
  *(_QWORD *)(v17 + 16) = v14;
  sub_1004B84E0((uint64_t)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v11, 0, 0, v13, 0, 0, 0, 0, 2, 0, sub_100BBBE68, v17);
}

void sub_100B91C38(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(void);
  char *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  double *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28[40];
  char v29[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
    v10 = type metadata accessor for CRLBoardLibrary();
    v11 = swift_dynamicCastClass(v9, v10);
    if (!v11)
    {
      v14 = v8;
      goto LABEL_8;
    }
    v12 = v11;
    v13 = (void (**)(void))objc_msgSend(a3, "actionBlock", swift_unknownObjectRetain(v9).n128_f64[0]);
    v13[2]();
    _Block_release(v13);
    v14 = *(char **)(v12 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController);
    v15 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v15, v28);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    *(_QWORD *)(inited + 32) = a4;
    v27 = inited;
    specialized Array._endMutation()(inited);
    if ((unint64_t)v27 >> 62)
    {
      if (v27 < 0)
        v23 = v27;
      else
        v23 = v27 & 0xFFFFFFFFFFFFFF8;
      v24 = v14;
      v25 = a4;
      swift_bridgeObjectRetain(v27);
      v26 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease();
      if (!v26)
        goto LABEL_6;
    }
    else
    {
      v17 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      v18 = v14;
      v19 = a4;
      if (!v17)
      {
LABEL_6:
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease(v9);
LABEL_8:

        return;
      }
    }
    v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights];
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v20);
    v22 = sub_100CE1CA8(v21, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1004DED08((uint64_t)v22);
    goto LABEL_6;
  }
}

void sub_100B91DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _BYTE v22[24];

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    sub_1004B8460(a3, (uint64_t)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor(0);
    v15 = v13;
    v16 = static MainActor.shared.getter(v15);
    v17 = *(unsigned __int8 *)(v6 + 80);
    v18 = (v17 + 40) & ~v17;
    v19 = (_QWORD *)swift_allocObject(&unk_1012970D0, v18 + v7, v17 | 7);
    v19[2] = v16;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v15;
    sub_1004B84E0((uint64_t)v8, (uint64_t)v19 + v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v20 = sub_100521B98((uint64_t)v11, (uint64_t)&unk_101407430, (uint64_t)v19);
    swift_release(v20);

  }
}

void sub_100B91F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _BYTE v22[24];

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    sub_1004B8460(a3, (uint64_t)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor(0);
    v15 = v13;
    v16 = static MainActor.shared.getter(v15);
    v17 = *(unsigned __int8 *)(v6 + 80);
    v18 = (v17 + 40) & ~v17;
    v19 = (_QWORD *)swift_allocObject(&unk_1012970F8, v18 + v7, v17 | 7);
    v19[2] = v16;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v15;
    sub_1004B84E0((uint64_t)v8, (uint64_t)v19 + v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v20 = sub_100521B98((uint64_t)v11, (uint64_t)&unk_101407448, (uint64_t)v19);
    swift_release(v20);

  }
}

double *sub_100B92110(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  __n128 v15;
  unsigned int (*v16)(_BYTE *, uint64_t, uint64_t);
  _QWORD *v17;
  double *result;
  double *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  _BYTE v30[16];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v30[-v8];
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v15);

  v16 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  if (v16(v6, 1, v10) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"contextMenuActionTargets(for:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2724, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuActionTargets(for:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2724, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004C4938((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_101407260);
  if (v16(v9, 1, v10) == 1)
  {
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101407260);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
  result = (double *)objc_msgSend(v2, "collectionView");
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v20)
    {
      v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v10);

      __chkstk_darwin(v22);
      v29[2] = v13;
      if (sub_100DAFC08((uint64_t (*)(char *))sub_100BBC494, (_BOOL8)v29, v21))
      {
        v23 = v2;
        v17 = sub_100BB19EC(v21, (uint64_t)v23);

        (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
        swift_bridgeObjectRelease();
        return (double *)v17;
      }
      swift_bridgeObjectRelease();
    }
    v24 = sub_1004B804C(&qword_1014072D0);
    v25 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = *(unsigned __int8 *)(v25 + 80);
    v28 = (v27 + 32) & ~v27;
    v17 = (_QWORD *)swift_allocObject(v24, v28 + v26, v27 | 7);
    *((_OWORD *)v17 + 1) = xmmword_100EF5E40;
    sub_1004B8460(a1, (uint64_t)v17 + v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return (double *)v17;
  }
  __break(1u);
  return result;
}

void sub_100B92468(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  void *Strong;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  NSString v21;
  __n128 v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38[2];
  void (*v39)(uint64_t);
  uint64_t v40;
  char v41[24];

  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  v14 = sub_100BCDE20(a3);
  v15 = sub_100AF87D0((uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_beginAccess(a4, v41, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v17 = Strong;
    if (*(_QWORD *)(v15 + 16))
    {
      v38[0] = a5;
      v38[1] = a2;
      v18 = Strong;
      sub_100BB3C58(v15, (uint64_t)v18);

      swift_bridgeObjectRelease();
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v39 = a1;
      v20 = String._bridgeToObjectiveC()();
      v21 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v28 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v27);

      v29 = swift_allocObject(&unk_101296568, 24, 7);
      swift_unknownObjectWeakInit(v29 + 16);
      sub_1004B8460(v38[0], (uint64_t)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
      v30 = *(unsigned __int8 *)(v11 + 80);
      v31 = (v30 + 24) & ~v30;
      v32 = swift_allocObject(&unk_101297328, v31 + v12, v30 | 7);
      *(_QWORD *)(v32 + 16) = v29;
      sub_1004B84E0((uint64_t)v13, v32 + v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v24, v26, 0, 0, v28, 0, 0, 0, 0, 0, 0, sub_100BBBF94, v32);
      v34 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v35 = swift_allocObject(v34, 40, 7);
      *(_OWORD *)(v35 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v35 + 32) = v33;
      v40 = v35;
      specialized Array._endMutation()(v35);
      v36 = v40;
      v37 = v33;
      v39(v36);
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    v22 = swift_bridgeObjectRelease();
  }
  ((void (*)(double *, __n128))a1)(_swiftEmptyArrayStorage, v22);
}

double sub_100B9283C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  void *v10;
  double *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = sub_100B92110(a3);
    if (*((_QWORD *)v11 + 2))
    {
      v12 = sub_100BCDE20((uint64_t)v11);
      v13 = sub_100AF87D0((uint64_t)v12);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v13 + 16))
      {
        v14 = v10;
        sub_100BB3C58(v13, (uint64_t)v14);
        v16 = v15;

        v17 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
        v18 = swift_allocObject(&unk_101296568, 24, 7);
        swift_unknownObjectWeakInit(v18 + 16);
        type metadata accessor for MainActor(0);
        swift_retain(v18);
        v20 = static MainActor.shared.getter(v19);
        v21 = swift_allocObject(&unk_101297350, 49, 7);
        *(_QWORD *)(v21 + 16) = v20;
        *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v21 + 32) = v18;
        *(_QWORD *)(v21 + 40) = v13;
        *(_BYTE *)(v21 + 48) = v16 & 1;
        swift_release(v18);
        v22 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_1013EDF70, v21);
        objc_msgSend(v14, "setEditing:animated:", 0, 1, swift_release(v22).n128_f64[0]);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_100B92A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[24];

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_100B92110(a3);
    if (*((_QWORD *)v10 + 2))
    {
      v11 = (uint64_t)v9 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      v12 = sub_1004B804C(&qword_1013E1790);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 5, 5, v12);
      sub_100BD0ED4(v11, (uint64_t)v7);
      LOBYTE(v11) = v13;
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if ((v11 & 1) != 0)
        sub_100B92EB4((uint64_t)v10);
      else
        sub_100B9397C((uint64_t)v10, 0, 0);
    }
    swift_bridgeObjectRelease();

  }
}

void sub_100B92B44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double *))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  double *v9;
  _BYTE v10[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = sub_100B92110(a3);
    if (*((_QWORD *)v9 + 2))
      a4(v9);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_100B92BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = type metadata accessor for MainActor(0);
  v5[18] = v7;
  v8 = static MainActor.shared.getter(v7);
  v5[19] = v8;
  v5[20] = static MainActor.shared.getter(v8);
  v9 = (_QWORD *)swift_task_alloc(dword_101407454);
  v5[21] = v9;
  *v9 = v5;
  v9[1] = sub_100B92C40;
  return sub_100B8B828(a5);
}

uint64_t sub_100B92C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100B92D1C;
  else
    v6 = sub_100B92CC8;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100B92CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v0 + 144), &protocol witness table for MainActor);
  return swift_task_switch(sub_100BBC4B0, v1, v2);
}

uint64_t sub_100B92D1C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release(v0[20]);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v1 = v0[22];
  swift_beginAccess(&static OS_os_log.shareState, v0 + 11, 0, 0);
  v2 = (void *)static OS_os_log.shareState;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 17, v0 + 14);
  v5 = v0[15];
  v6 = v0[16];
  v7 = v2;
  v8 = Error.localizedDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.error.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Error showing share sheet: %@", 29, 2, inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  swift_errorRelease(v1);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v0[18], &protocol witness table for MainActor);
  return swift_task_switch(sub_100BBC4B0, v14, v15);
}

void sub_100B92EB4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  id v22;
  unint64_t v23;
  void *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  char **v36;
  NSString v37;
  NSString v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  id v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  CFArrayRef (__cdecl **v60)(CTFontDescriptorRef, CFSetRef);
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  NSString v69;
  NSString v70;
  id v71;
  uint64_t v72;
  void *v73;
  id v74;
  NSString v75;
  NSString v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  NSString v84;
  void *v85;
  void *v86;
  id v87;
  id v88;
  NSString v89;
  NSString v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void *v105;
  _QWORD aBlock[5];
  uint64_t v107;
  Swift::String v108;

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v96 - v8;
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v14 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 5, 5, v14);
  sub_100589120(v13, (uint64_t)v12, &_mh_execute_header, (uint64_t)"purgeDeleted(items:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2534);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v15 = sub_100BCDE20(a1);
  v16 = sub_100AF87D0((uint64_t)v15);
  swift_bridgeObjectRelease(v15);
  if (*(_QWORD *)(v16 + 16))
  {
    v100 = v4;
    v101 = v3;
    v102 = v7;
    v103 = v9;
    v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v18 = objc_msgSend(v17, "delegate");

    if (v18)
    {
      v105 = v1;
      v19 = type metadata accessor for CRLiOSAppDelegate();
      v20 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v18, v19, 0, 0, 0)
                      + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
      swift_retain(v20);
      swift_unknownObjectRelease(v18);
      v21 = sub_1009446C0();
      swift_release(v20);
      v22 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 1);
      v23 = *(_QWORD *)(v16 + 16);
      v24 = (void *)objc_opt_self(NSBundle);
      v25 = objc_msgSend(v24, "mainBundle");
      v104 = v16;
      if (v23 < 2)
      {
        v98 = v21;
        v99 = v24;
        v39 = String._bridgeToObjectiveC()();
        v40 = String._bridgeToObjectiveC()();
        v41 = objc_msgSend(v25, "localizedStringForKey:value:table:", v39, v40, 0);

        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v44 = v43;

        v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v46 = swift_allocObject(v45, 72, 7);
        *(_OWORD *)(v46 + 16) = xmmword_100EF5E40;
        if (*(_QWORD *)(a1 + 16))
        {
          v97 = v42;
          v47 = (uint64_t)v103;
          sub_1004B8460(a1 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80)), (uint64_t)v103, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v48 = (uint64_t)v102;
          sub_1004B8460(v47, (uint64_t)v102, type metadata accessor for CRLBoardLibraryViewModel.Item);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v48, v101);
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              sub_1004B84E0(v48, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              sub_100BCAD68();
              v51 = v50;
              v53 = v52;
              v54 = (uint64_t)v12;
              v55 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            }
            else
            {
              v62 = (uint64_t *)(v48 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
              v51 = *v62;
              v53 = v62[1];
              v55 = type metadata accessor for CRLBoardIdentifier;
              v54 = v48;
            }
            sub_1004B84A4(v54, v55);
          }
          else
          {
            v51 = sub_100BCE3AC();
            v53 = v61;
          }
          v36 = &selRef_isLineSegment;
          v60 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
          sub_1004B84A4(v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v42 = v97;
        }
        else
        {
          v51 = 0;
          v53 = 0;
          v36 = &selRef_isLineSegment;
          v60 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
        }
        *(_QWORD *)(v46 + 56) = &type metadata for String;
        *(_QWORD *)(v46 + 64) = sub_1004CFC2C();
        if (v53)
          v63 = v51;
        else
          v63 = 0;
        v64 = 0xE000000000000000;
        if (v53)
          v64 = v53;
        *(_QWORD *)(v46 + 32) = v63;
        *(_QWORD *)(v46 + 40) = v64;
        static String.localizedStringWithFormat(_:_:)(v42, v44, v46);
        v66 = v65;
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v46);
        v67 = String._bridgeToObjectiveC()();
        objc_msgSend(v22, "setTitle:", v67, swift_bridgeObjectRelease(v66).n128_f64[0]);

        v68 = objc_msgSend(v99, v36[428]);
        v69 = String._bridgeToObjectiveC()();
        v70 = String._bridgeToObjectiveC()();
        v71 = objc_msgSend(v68, "localizedStringForKey:value:table:", v69, v70, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
        v58 = v72;

        v59 = String._bridgeToObjectiveC()();
      }
      else
      {
        v108._countAndFlagsBits = 0xD000000000000023;
        v108._object = (void *)0x8000000100FFC270;
        v26._object = (void *)0x8000000100FFC250;
        v26._countAndFlagsBits = 0xD00000000000001ELL;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v108);

        v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v30 = swift_allocObject(v29, 72, 7);
        *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
        v31 = *(_QWORD *)(v16 + 16);
        *(_QWORD *)(v30 + 56) = &type metadata for Int;
        *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v30 + 32) = v31;
        static String.localizedStringWithFormat(_:_:)(v28._countAndFlagsBits, v28._object, v30);
        v33 = v32;
        swift_bridgeObjectRelease(v28._object);
        swift_bridgeObjectRelease(v30);
        v34 = String._bridgeToObjectiveC()();
        objc_msgSend(v22, "setTitle:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

        v35 = objc_msgSend(v24, "mainBundle");
        v36 = &selRef_isLineSegment;
        v37 = String._bridgeToObjectiveC()();
        v38 = String._bridgeToObjectiveC()();
        v56 = objc_msgSend(v35, "localizedStringForKey:value:table:", v37, v38, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v58 = v57;

        v59 = String._bridgeToObjectiveC()();
        v60 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
      }
      objc_msgSend(v22, "setMessage:", v59, swift_bridgeObjectRelease(v58).n128_f64[0]);

      v73 = (void *)objc_opt_self(v60[375]);
      v74 = objc_msgSend(v73, v36[428]);
      v75 = String._bridgeToObjectiveC()();
      v76 = String._bridgeToObjectiveC()();
      v77 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, v76, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
      v79 = v78;

      v80 = swift_allocObject(&unk_101296568, 24, 7);
      v81 = v105;
      swift_unknownObjectWeakInit(v80 + 16, v105);
      v82 = swift_allocObject(&unk_101296608, 32, 7);
      v83 = v104;
      *(_QWORD *)(v82 + 16) = v80;
      *(_QWORD *)(v82 + 24) = v83;
      swift_retain(v80);
      v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v79);
      aBlock[4] = sub_100BB9ED0;
      v107 = v82;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1004C6194;
      aBlock[3] = &unk_101296620;
      v85 = _Block_copy(aBlock);
      swift_release(v107);
      v86 = (void *)objc_opt_self(UIAlertAction);
      v87 = objc_msgSend(v86, "actionWithTitle:style:handler:", v84, 2, v85);
      _Block_release(v85);

      objc_msgSend(v22, "addAction:", v87, swift_release(v80).n128_f64[0]);
      v88 = objc_msgSend(v73, v36[428]);
      v89 = String._bridgeToObjectiveC()();
      v90 = String._bridgeToObjectiveC()();
      v91 = objc_msgSend(v88, "localizedStringForKey:value:table:", v89, v90, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
      v93 = v92;

      v94 = String._bridgeToObjectiveC()();
      v95 = objc_msgSend(v86, "actionWithTitle:style:handler:", v94, 1, 0, swift_bridgeObjectRelease(v93).n128_f64[0]);

      objc_msgSend(v22, "addAction:", v95);
      objc_msgSend(v81, "presentViewController:animated:completion:", v22, 1, 0);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v16);
  }
}

double sub_100B9397C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100BCDE20(a1);
  v11 = sub_100AF87D0((uint64_t)v10);
  swift_bridgeObjectRelease(v10);
  v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
  v13 = type metadata accessor for CRLBoardLibrary();
  v14 = swift_dynamicCastClass(v12, v13);
  if (v14)
  {
    if (*(_QWORD *)(v11 + 16))
    {
      v15 = v14;
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
      type metadata accessor for MainActor(0);
      swift_unknownObjectRetain_n(v12, 2);
      v17 = v3;
      sub_1004C0F54(a2, a3);
      swift_bridgeObjectRetain(a1);
      v19 = static MainActor.shared.getter(v18);
      v20 = (_QWORD *)swift_allocObject(&unk_101296680, 80, 7);
      v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v17;
      v20[5] = v11;
      v20[6] = v15;
      v20[7] = a2;
      v20[8] = a3;
      v20[9] = a1;
      v21 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_101407300, (uint64_t)v20);
      swift_unknownObjectRelease(v12);
      *(_QWORD *)&result = swift_release(v21).n128_u64[0];
      return result;
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2381, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"delete(items:deletionHandler:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2381, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

uint64_t sub_100B93BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8[19] = a8;
  v8[20] = v20;
  v8[17] = a6;
  v8[18] = a7;
  v8[15] = a4;
  v8[16] = a5;
  v9 = sub_1004B804C(&qword_101407308);
  v8[21] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[22] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[23] = swift_task_alloc(v11);
  v8[24] = swift_task_alloc(v11);
  v8[25] = swift_task_alloc(v11);
  v8[26] = swift_task_alloc(v11);
  v8[27] = swift_task_alloc(v11);
  v8[28] = swift_task_alloc(v11);
  v8[29] = swift_task_alloc(v11);
  v12 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v8[30] = v12;
  v8[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v8[32] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v14);
  v8[34] = swift_task_alloc(v14);
  v8[35] = swift_task_alloc(v14);
  v8[36] = swift_task_alloc(v14);
  v8[37] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_101407310) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[38] = swift_task_alloc(v15);
  v8[39] = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  v8[40] = v16;
  v8[41] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v8[42] = v17;
  v8[43] = v18;
  return swift_task_switch(sub_100B93D64, v17, v18);
}

uint64_t sub_100B93D64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[40];
  v1[44] = *(_QWORD *)(v1[15] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v1[45] = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[46] = v3;
  v1[47] = v4;
  return swift_task_switch(sub_100B93DD8, v3, v4);
}

uint64_t sub_100B93DD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[44];
  v2 = v0[16];
  v3 = sub_1004B804C(&qword_101407318);
  v4 = static MainActor.shared.getter(v3);
  v0[48] = v4;
  v5 = swift_task_alloc(32);
  v0[49] = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = sub_1004B804C(&qword_101407328);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[50] = v7;
  *v7 = v0;
  v7[1] = sub_100B93EB0;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 14, v3, v6, v4, &protocol witness table for MainActor, &unk_101407320, v5, v3);
}

uint64_t sub_100B93EB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 392);
  v3 = *(_QWORD *)(*v0 + 384);
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100B93F18, *(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 376));
}

uint64_t sub_100B93F18()
{
  _QWORD *v0;

  swift_release(v0[45]);
  v0[51] = v0[14];
  return swift_task_switch(sub_100B93F58, v0[42], v0[43]);
}

uint64_t sub_100B93F58()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t);
  double *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  NSString v85;
  NSString v86;
  id v87;
  _QWORD *v88;
  id v89;
  NSString v90;
  void *v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  _QWORD *v100;
  id v101;
  NSString v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  CKRecordID v117;
  Swift::String v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *aBlock;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  double *v133;
  double *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double *v143;
  char v144;
  uint64_t v145;
  void *v146;
  unint64_t v147;
  void *v148;
  uint64_t v149;
  double *v150;
  double *v151;

  v2 = (unint64_t)v1;
  v121 = v1 + 8;
  aBlock = v1 + 2;
  v3 = v1[51];
  v129 = v1[32];
  v127 = v1[30];
  v131 = v1[22];
  v135 = v1[21];
  v125 = v1[17];
  swift_release(v1[41]);
  result = swift_allocObject(&unk_1012966A8, 24, 7);
  v132 = 0;
  *(_QWORD *)(result + 16) = &_swiftEmptySetSingleton;
  v5 = _swiftEmptyArrayStorage;
  v126 = v3 + 64;
  v130 = v3;
  v6 = -1;
  v7 = -1 << *(_BYTE *)(v3 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(v3 + 64);
  v124 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController;
  v9 = type metadata accessor for CRLBoardIdentifier;
  v128 = (unint64_t)(63 - v7) >> 6;
  v10 = _swiftEmptyArrayStorage;
  v123 = result;
  v150 = (double *)v2;
  while (1)
  {
    if (v8)
    {
      v142 = (v8 - 1) & v8;
      v12 = __clz(__rbit64(v8)) | (v132 << 6);
      goto LABEL_8;
    }
    v16 = v132 + 1;
    if (__OFADD__(v132, 1))
      goto LABEL_114;
    if (v16 >= v128)
      goto LABEL_26;
    v17 = *(_QWORD *)(v126 + 8 * v16);
    if (v17)
      goto LABEL_12;
    v18 = v132 + 2;
    ++v132;
    if (v16 + 1 >= v128)
      goto LABEL_26;
    v17 = *(_QWORD *)(v126 + 8 * v18);
    if (v17)
      goto LABEL_15;
    v132 = v16 + 1;
    if (v16 + 2 >= v128)
      goto LABEL_26;
    v17 = *(_QWORD *)(v126 + 8 * (v16 + 2));
    if (v17)
    {
      v16 += 2;
LABEL_12:
      v142 = (v17 - 1) & v17;
      v12 = __clz(__rbit64(v17)) + (v16 << 6);
      v132 = v16;
LABEL_8:
      v13 = *(_QWORD *)(v2 + 304);
      sub_1004B8460(*(_QWORD *)(v130 + 48) + *(_QWORD *)(v129 + 72) * v12, v13, v9);
      v14 = *(_QWORD *)(v130 + 56);
      v15 = sub_1004B804C(&qword_101407330);
      *(_BYTE *)(v13 + *(int *)(v15 + 48)) = *(_BYTE *)(v14 + v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
      goto LABEL_27;
    }
    v18 = v16 + 3;
    v132 = v16 + 2;
    if (v16 + 3 >= v128)
      goto LABEL_26;
    v17 = *(_QWORD *)(v126 + 8 * v18);
    if (v17)
    {
LABEL_15:
      v16 = v18;
      goto LABEL_12;
    }
    while (1)
    {
      v16 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        return result;
      }
      if (v16 >= v128)
        break;
      v17 = *(_QWORD *)(v126 + 8 * v16);
      ++v18;
      if (v17)
        goto LABEL_12;
    }
    v132 = v128 - 1;
LABEL_26:
    v19 = *(_QWORD *)(v2 + 304);
    v20 = sub_1004B804C(&qword_101407330);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    v142 = 0;
LABEL_27:
    v21 = *(_QWORD *)(v2 + 312);
    sub_1004C4938(*(_QWORD *)(v2 + 304), v21, &qword_101407310);
    v22 = sub_1004B804C(&qword_101407330);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22) == 1)
      break;
    v23 = *(_QWORD *)(v2 + 312);
    v0 = *(_QWORD *)(v2 + 296);
    v24 = *(_QWORD *)(v2 + 248);
    v25 = *(unsigned __int8 *)(v23 + *(int *)(v22 + 48));
    sub_1004B84E0(v23, v0, v9);
    sub_100C9F8F8(v0, v24);
    v26 = *(_QWORD *)(v2 + 248);
    v27 = *(unsigned __int8 *)(v26 + *(int *)(v127 + 32));
    sub_1004B84A4(v26, type metadata accessor for CRLBoardViewModelMetadata);
    if (v27 != 1)
    {
      v46 = *(_QWORD *)(v2 + 296);
      if (v25)
      {
        v47 = *(_QWORD *)(v2 + 232);
        v48 = *(int *)(v135 + 48);
        sub_1004B8460(v46, v47, v9);
        *(_BYTE *)(v47 + v48) = v25;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = (double *)sub_100D11A44(0, *((_QWORD *)v10 + 2) + 1, 1, (unint64_t)v10);
        v0 = *((_QWORD *)v10 + 2);
        v49 = *((_QWORD *)v10 + 3);
        if (v0 >= v49 >> 1)
          v10 = (double *)sub_100D11A44(v49 > 1, v0 + 1, 1, (unint64_t)v10);
        v50 = *(_QWORD *)(v2 + 232);
        *((_QWORD *)v10 + 2) = v0 + 1;
        sub_1004C4938(v50, (uint64_t)v10+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(_QWORD *)(v131 + 72) * v0, &qword_101407308);
      }
      else
      {
        v11 = *(_QWORD *)(v2 + 264);
        v0 = *(_QWORD *)(v2 + 272);
        sub_1004B8460(v46, v11, v9);
        sub_100AD7844(v0, v11);
        sub_1004B84A4(v0, v9);
      }
      goto LABEL_5;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(v125 + v124) + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    v133 = v10;
    if (!((unint64_t)v28 >> 62))
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v28, 2);
      if (v29)
        goto LABEL_31;
LABEL_60:
      swift_bridgeObjectRelease_n(v28, 2);
      v10 = v133;
      v5 = _swiftEmptyArrayStorage;
      goto LABEL_5;
    }
    if (v28 < 0)
      v0 = *(_QWORD *)(*(_QWORD *)(v125 + v124)
                     + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    else
      v0 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v28, 2);
    v29 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (!v29)
      goto LABEL_60;
LABEL_31:
    v0 = 0;
    v137 = v29;
    v139 = v28 & 0xC000000000000001;
    while (2)
    {
      if (!v139)
      {
        v30 = (char *)*(id *)(v28 + 8 * v0 + 32);
        v31 = v0 + 1;
        if (!__OFADD__(v0, 1))
          goto LABEL_39;
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        if (v0 < 0)
          v119 = v0;
        else
          v119 = v0 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v0);
        v120 = _CocoaArrayWrapper.endIndex.getter(v119);
        swift_bridgeObjectRelease();
        if (!v120)
          goto LABEL_64;
LABEL_63:
        swift_bridgeObjectRetain(v0);
        sub_1004DEE44(v54);
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v28);
      v31 = v0 + 1;
      if (__OFADD__(v0, 1))
        goto LABEL_111;
LABEL_39:
      v10 = (double *)v28;
      v5 = (double *)v9;
      v33 = *(_QWORD *)(v2 + 288);
      v32 = *(_QWORD *)(v2 + 296);
      v34 = *(_QWORD *)(v2 + 280);
      v146 = v30;
      v35 = (uint64_t)&v30[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier];
      v36 = static UUID.== infix(_:_:)(&v30[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier]);
      sub_1004B8460(v35, v33, (uint64_t (*)(_QWORD))v5);
      sub_1004B8460(v32, v34, (uint64_t (*)(_QWORD))v5);
      v38 = *(_QWORD *)(v2 + 280);
      v37 = *(_QWORD *)(v2 + 288);
      if ((v36 & 1) == 0)
      {
        sub_1004B84A4(*(_QWORD *)(v2 + 280), (uint64_t (*)(_QWORD))v5);
        sub_1004B84A4(v37, (uint64_t (*)(_QWORD))v5);
        v9 = (uint64_t (*)(uint64_t))v5;
        v28 = (uint64_t)v10;
LABEL_33:

        ++v0;
        v2 = (unint64_t)v150;
        if (v31 == v137)
          goto LABEL_60;
        continue;
      }
      break;
    }
    v39 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v40 = *(_QWORD *)(v37 + v39);
    v41 = *(_QWORD *)(v37 + v39 + 8);
    v42 = (_QWORD *)(v38 + v39);
    v43 = v42[1];
    v44 = v40 == *v42 && v41 == v43;
    v28 = (uint64_t)v10;
    if (!v44)
    {
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, *v42, v43, 0);
      v9 = (uint64_t (*)(uint64_t))v5;
      sub_1004B84A4(v38, (uint64_t (*)(_QWORD))v5);
      sub_1004B84A4(v37, (uint64_t (*)(_QWORD))v5);
      if ((v45 & 1) != 0)
        goto LABEL_53;
      goto LABEL_33;
    }
    v9 = (uint64_t (*)(uint64_t))v5;
    sub_1004B84A4(v38, (uint64_t (*)(_QWORD))v5);
    sub_1004B84A4(v37, (uint64_t (*)(_QWORD))v5);
LABEL_53:
    swift_bridgeObjectRelease_n(v10, 2);
    v0 = v146;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v0);
    v52 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v52 >= v51 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v0);
    specialized Array._endMutation()(v53);

    v10 = v133;
    v5 = _swiftEmptyArrayStorage;
    v2 = (unint64_t)v150;
LABEL_5:
    result = sub_1004B84A4(*(_QWORD *)(v2 + 296), v9);
    v8 = v142;
  }
  swift_release(*(_QWORD *)(v2 + 408));
  v0 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_115;
  if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_63;
LABEL_64:
  v147 = *((_QWORD *)v10 + 2);
  if (v147)
  {
    v151 = v5;
    v134 = v10;
    swift_bridgeObjectRetain(v10);
    v55 = v5;
    v5 = 0;
    v10 = v150;
    while (1)
    {
      if ((unint64_t)v5 >= *((_QWORD *)v134 + 2))
        goto LABEL_112;
      v2 = *((_QWORD *)v150 + 27);
      v56 = *((_QWORD *)v150 + 28);
      v0 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      v57 = *(_QWORD *)(v131 + 72);
      sub_1004CB7BC((uint64_t)v134 + v0 + v57 * (_QWORD)v5, v56, &qword_101407308);
      v58 = *(int *)(v135 + 48);
      v59 = *(unsigned __int8 *)(v56 + v58);
      sub_1004B8460(v56, v2, type metadata accessor for CRLBoardIdentifier);
      *(_BYTE *)(v2 + v58) = v59;
      v60 = *((_QWORD *)v150 + 27);
      if (v59 == 2)
        break;
      sub_1004CB800(v60, &qword_101407308);
      if (v59 == 1)
        goto LABEL_72;
      sub_1004CB800(*((_QWORD *)v150 + 28), &qword_101407308);
LABEL_67:
      v5 = (double *)((char *)v5 + 1);
      if ((double *)v147 == v5)
      {
        swift_bridgeObjectRelease();
        v63 = (double *)*((_QWORD *)v134 + 2);
        swift_bridgeObjectRetain(v134);
        if (v63)
        {
          v5 = 0;
          v64 = (uint64_t)v134 + v0;
          v143 = v63;
          v10 = v150;
          while ((unint64_t)v5 < *((_QWORD *)v134 + 2))
          {
            v2 = *((_QWORD *)v150 + 25);
            sub_1004CB7BC(v64, v2, &qword_101407308);
            v65 = *((_QWORD *)v150 + 25);
            if (*(_BYTE *)(v2 + *(int *)(v135 + 48)) == 3)
            {
              sub_1004C4938(v65, *((_QWORD *)v150 + 24), &qword_101407308);
              if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
                sub_100600CB8(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1);
              v2 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
              v66 = _swiftEmptyArrayStorage[3];
              if (v2 >= *(_QWORD *)&v66 >> 1)
                sub_100600CB8(*(_QWORD *)&v66 > 1uLL, v2 + 1, 1);
              v67 = *((_QWORD *)v150 + 24);
              *(_QWORD *)&_swiftEmptyArrayStorage[2] = v2 + 1;
              sub_1004C4938(v67, (uint64_t)_swiftEmptyArrayStorage + v0 + v2 * v57, &qword_101407308);
              v63 = v143;
            }
            else
            {
              sub_1004CB800(v65, &qword_101407308);
            }
            v5 = (double *)((char *)v5 + 1);
            v64 += v57;
            if (v63 == v5)
              goto LABEL_89;
          }
          goto LABEL_113;
        }
LABEL_89:
        swift_bridgeObjectRelease();
        v73 = *((_QWORD *)v55 + 2);
        if (v73 == v147)
        {
          swift_release(_swiftEmptyArrayStorage);
          swift_release(v55);
          v74 = *((_QWORD *)v134 + 2);
          if (v74)
          {
            swift_bridgeObjectRetain(v134);
            v75 = (uint64_t)v134 + v0;
            while (1)
            {
              v76 = *((_QWORD *)v150 + 23);
              sub_1004CB7BC(v75, v76, &qword_101407308);
              v77 = *(unsigned __int8 *)(v76 + *(int *)(v135 + 48));
              sub_1004CB800(v76, &qword_101407308);
              if (v77 == 1)
                break;
              v75 += v57;
              if (!--v74)
              {
                v78 = 2;
                v79 = 2;
                goto LABEL_102;
              }
            }
            v78 = 0;
            v79 = 1;
LABEL_102:
            swift_bridgeObjectRelease();
          }
          else
          {
            v78 = 2;
            v79 = 2;
          }
        }
        else
        {
          v80 = _swiftEmptyArrayStorage[2];
          swift_release(_swiftEmptyArrayStorage);
          swift_release(v55);
          if (*(_QWORD *)&v80 == v147)
          {
            v79 = 3;
            v78 = 2;
          }
          else
          {
            v78 = 2;
            if (!v73 || v80 == 0.0)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2491, "should be impossible to get here. file a bug", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"should be impossible to get here. file a bug");
              sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"delete(items:deletionHandler:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2491, (uint64_t)"should be impossible to get here. file a bug", 44, 2u);
              SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v117, v118);
              return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
            }
            v79 = 4;
          }
        }
        swift_bridgeObjectRelease();
        v140 = v78;
        v144 = v79;
        if (v147 < 2)
        {
          sub_100BC00D8(v79);
          sub_100BC0558(v79);
        }
        else
        {
          sub_100BBFFD8(v79);
          sub_100BC0314(v79);
        }
        v2 = (unint64_t)v150;
        v81 = *((_QWORD *)v150 + 19);
        v82 = *((_QWORD *)v150 + 20);
        v83 = *((_QWORD *)v150 + 18);
        v84 = (void *)*((_QWORD *)v150 + 15);
        v85 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v86 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v87 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v85, v86, 1);

        sub_100BC07D0();
        v88 = (_QWORD *)swift_allocObject(&unk_1012966D0, 64, 7);
        v88[2] = v134;
        v88[3] = v84;
        v72 = v123;
        v88[4] = v123;
        v88[5] = v83;
        v88[6] = v81;
        v88[7] = v82;
        v89 = v84;
        swift_retain(v123);
        swift_bridgeObjectRetain(v82);
        sub_1004C0F54(v83, v81);
        v90 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        *((_QWORD *)v150 + 6) = sub_100BBA114;
        *((_QWORD *)v150 + 7) = v88;
        *((_QWORD *)v150 + 2) = _NSConcreteStackBlock;
        v150[3] = *(double *)"";
        *((_QWORD *)v150 + 4) = sub_1004C6194;
        *((_QWORD *)v150 + 5) = &unk_1012966E8;
        v91 = _Block_copy(aBlock);
        swift_release(*((_QWORD *)v150 + 7));
        v92 = (void *)objc_opt_self(UIAlertAction);
        v93 = objc_msgSend(v92, "actionWithTitle:style:handler:", v90, v140, v91);
        _Block_release(v91);

        objc_msgSend(v87, "addAction:", v93);
        sub_100BC08B8(v144);
        if (v94)
        {
          v96 = *((_QWORD *)v150 + 19);
          v95 = *((_QWORD *)v150 + 20);
          v148 = v92;
          v97 = *((_QWORD *)v150 + 18);
          v98 = v87;
          v99 = (void *)*((_QWORD *)v150 + 15);
          v100 = (_QWORD *)swift_allocObject(&unk_101296720, 56, 7);
          v100[2] = v99;
          v100[3] = v123;
          v100[4] = v97;
          v100[5] = v96;
          v100[6] = v95;
          v101 = v99;
          v87 = v98;
          swift_retain(v123);
          swift_bridgeObjectRetain(v95);
          sub_1004C0F54(v97, v96);
          v102 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          *((_QWORD *)v150 + 12) = sub_100BBA168;
          *((_QWORD *)v150 + 13) = v100;
          v72 = v123;
          v2 = (unint64_t)v150;
          *((_QWORD *)v150 + 8) = _NSConcreteStackBlock;
          v150[9] = *(double *)"";
          *((_QWORD *)v150 + 10) = sub_1004C6194;
          *((_QWORD *)v150 + 11) = &unk_101296738;
          v103 = _Block_copy(v121);
          v104 = objc_msgSend(v148, "actionWithTitle:style:handler:", v102, 1, v103, swift_release(*((_QWORD *)v150 + 13)).n128_f64[0]);
          _Block_release(v103);

          objc_msgSend(v98, "addAction:", v104);
        }
        objc_msgSend(*(id *)(v2 + 120), "presentViewController:animated:completion:", v87, 1, 0);

        goto LABEL_109;
      }
    }
    sub_1004CB800(v60, &qword_101407308);
LABEL_72:
    sub_1004C4938(*((_QWORD *)v150 + 28), *((_QWORD *)v150 + 26), &qword_101407308);
    if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
    {
      sub_100600CB8(0, *((_QWORD *)v55 + 2) + 1, 1);
      v55 = v151;
    }
    v2 = *((_QWORD *)v55 + 2);
    v61 = *((_QWORD *)v55 + 3);
    if (v2 >= v61 >> 1)
    {
      sub_100600CB8(v61 > 1, v2 + 1, 1);
      v55 = v151;
    }
    v62 = *((_QWORD *)v150 + 26);
    *((_QWORD *)v55 + 2) = v2 + 1;
    sub_1004C4938(v62, (uint64_t)v55 + v0 + v2 * v57, &qword_101407308);
    goto LABEL_67;
  }
  v69 = *(_QWORD *)(v2 + 152);
  v68 = *(_QWORD *)(v2 + 160);
  v70 = *(_QWORD *)(v2 + 144);
  v71 = *(void **)(v2 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = v123;
  sub_100B95A14(v71, v123, v70, v69, v68);
LABEL_109:
  swift_release(v72);
  v106 = *(_QWORD *)(v2 + 304);
  v105 = *(_QWORD *)(v2 + 312);
  v108 = *(_QWORD *)(v2 + 288);
  v107 = *(_QWORD *)(v2 + 296);
  v110 = *(_QWORD *)(v2 + 272);
  v109 = *(_QWORD *)(v2 + 280);
  v111 = *(_QWORD *)(v2 + 264);
  v112 = *(_QWORD *)(v2 + 248);
  v113 = v2;
  v116 = v2 + 224;
  v114 = *(_QWORD *)(v2 + 224);
  v115 = *(_QWORD *)(v116 + 8);
  v136 = *(_QWORD *)(v113 + 216);
  v138 = *(_QWORD *)(v113 + 208);
  v141 = *(_QWORD *)(v113 + 200);
  v145 = *(_QWORD *)(v113 + 192);
  v149 = *(_QWORD *)(v113 + 184);
  swift_task_dealloc(v105);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v115);
  swift_task_dealloc(v114);
  swift_task_dealloc(v136);
  swift_task_dealloc(v138);
  swift_task_dealloc(v141);
  swift_task_dealloc(v145);
  swift_task_dealloc(v149);
  return (*(uint64_t (**)(void))(v113 + 8))();
}

void sub_100B94F38(uint64_t a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  double (*v23)(char *, char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  __n128 v33;
  void (*v34)(char *, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  __chkstk_darwin(v19);
  v45 = (char *)&v43 - v20;
  if (*(_QWORD *)(a1 + 16))
  {
    v44 = a3;
    v21 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v22);

    if ((a2 & 1) != 0)
    {
      v23 = *(double (**)(char *, char *, uint64_t))(v10 + 16);
      v24.n128_f64[0] = v23(v18, v45, v9);
      v25 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v9, v24);
      swift_bridgeObjectRetain(a1);
      v26 = sub_100BB342C(v25, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v26);
      v27 = swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t, __n128))v23)(v15, v18, v9, v27);
      v23(v12, v45, v9);
      v28 = *(unsigned __int8 *)(v10 + 80);
      v29 = (v28 + 33) & ~v28;
      v30 = swift_allocObject(&unk_1012967E8, v29 + v11, v28 | 7);
      v31 = v44;
      *(_QWORD *)(v30 + 16) = v44;
      *(_QWORD *)(v30 + 24) = a1;
      *(_BYTE *)(v30 + 32) = 1;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v30 + v29, v12, v9);
      swift_bridgeObjectRetain(a1);
      v32 = v31;
      sub_100B7E664((uint64_t)v15, 1, (uint64_t)sub_100BBA17C, v30);
      v33 = swift_release(v30);
      v34 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
      v34(v15, v9, v33);
      ((void (*)(char *, uint64_t))v34)(v18, v9);
      ((void (*)(char *, uint64_t))v34)(v45, v9);
    }
    else
    {
      v35 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v8, 1, 1, v35);
      v36 = swift_allocObject(&unk_101296568, 24, 7);
      swift_unknownObjectWeakInit(v36 + 16);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v45, v9);
      type metadata accessor for MainActor(0);
      swift_bridgeObjectRetain(a1);
      swift_retain(v36);
      v38 = static MainActor.shared.getter(v37);
      v39 = *(unsigned __int8 *)(v10 + 80);
      v40 = (v39 + 49) & ~v39;
      v41 = swift_allocObject(&unk_1012967C0, v40 + v11, v39 | 7);
      *(_QWORD *)(v41 + 16) = v38;
      *(_QWORD *)(v41 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v41 + 32) = v36;
      *(_QWORD *)(v41 + 40) = a1;
      *(_BYTE *)(v41 + 48) = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v41 + v40, v18, v9);
      swift_release(v36);
      v42 = sub_100618920((uint64_t)v8, (uint64_t)&unk_101407348, v41);
      swift_release(v42);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v9);
    }
  }
}

uint64_t sub_100B95290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a7;
  *(_BYTE *)(v7 + 160) = a6;
  *(_QWORD *)(v7 + 40) = a4;
  v8 = type metadata accessor for IndexPath(0);
  *(_QWORD *)(v7 + 64) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 72) = v9;
  *(_QWORD *)(v7 + 80) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_101407260);
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 96) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 112) = v13;
  return swift_task_switch(sub_100B95350, v12, v13);
}

void sub_100B95350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 120) = Strong;
  if (Strong)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
    v4 = sub_100BE8EB8(v3);
    *(_QWORD *)(v0 + 128) = v4;
    v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v6 = objc_msgSend(v5, "delegate");

    if (v6)
    {
      v7 = type metadata accessor for CRLiOSAppDelegate();
      v8 = *(void **)(swift_dynamicCastClassUnconditional(v6, v7, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(_QWORD *)(v0 + 136) = v8;
      if (v8)
      {
        v8;
        swift_unknownObjectRelease(v6);
        v9 = (_QWORD *)swift_task_alloc(dword_101408D7C);
        *(_QWORD *)(v0 + 144) = v9;
        *v9 = v0;
        v9[1] = sub_100B95554;
        sub_100BE770C((uint64_t)v4);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v6);
    __break(1u);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v10 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v10);
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B95554()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 104);
    v5 = *(_QWORD *)(v2 + 112);
    v6 = sub_100B957C8;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 104);
    v5 = *(_QWORD *)(v2 + 112);
    v6 = sub_100B955C0;
  }
  return swift_task_switch(v6, v4, v5);
}

id sub_100B955C0()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, unint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  result = objc_msgSend(*(id *)(v0 + 120), "collectionView", swift_release(*(_QWORD *)(v0 + 96)).n128_f64[0]);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v3)
    {
      v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, *(_QWORD *)(v0 + 64));

      v5 = *(_QWORD *)(v4 + 16);
      v6 = *(_QWORD *)(v0 + 72);
      v21 = v4;
      if (v5)
      {
        v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v22 = *(_QWORD *)(v6 + 72);
        v8 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v6 + 16);
        v9 = swift_bridgeObjectRetain(v4);
        while (1)
        {
          v10 = *(_QWORD *)(v0 + 88);
          v11 = *(_QWORD *)(v0 + 64);
          v8(v10, v7, v11, v9);
          v12 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56);
          v12(v10, 0, 1, v11);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v11) == 1)
            break;
          v13 = *(void **)(v0 + 120);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
          result = objc_msgSend(v13, "collectionView");
          if (!result)
          {
            __break(1u);
            goto LABEL_14;
          }
          v14 = result;
          v15 = *(_QWORD *)(v0 + 80);
          v16 = *(_QWORD *)(v0 + 64);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v14, "deselectItemAtIndexPath:animated:", isa, 0);

          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v16);
          v7 += v22;
          if (!--v5)
            goto LABEL_10;
        }
      }
      else
      {
        v12 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56);
        v9 = swift_bridgeObjectRetain(v4);
LABEL_10:
        ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v12)(*(_QWORD *)(v0 + 88), 1, 1, *(_QWORD *)(v0 + 64), v9);
      }
      swift_bridgeObjectRelease_n(v21, 2);
    }
    v19 = *(void **)(v0 + 120);
    v18 = *(void **)(v0 + 128);
    sub_100B82A94();

    v20 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v20);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_100B957C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  __n128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(unsigned __int8 *)(v0 + 160);

  swift_release(v2);
  if (v3 == 1)
    sub_100B7E664(*(_QWORD *)(v0 + 56), 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v5 = *(void **)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  swift_willThrow(v4);

  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100B95868(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  type metadata accessor for MainActor(0);
  swift_retain(v15);
  swift_bridgeObjectRetain(a2);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 49) & ~v18;
  v20 = swift_allocObject(&unk_101296798, v19 + v9, v18 | 7);
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v20 + 32) = v15;
  *(_QWORD *)(v20 + 40) = a2;
  *(_BYTE *)(v20 + 48) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v10, v7);
  swift_release(v15);
  v21 = sub_100618920((uint64_t)v13, (uint64_t)&unk_101407340, v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100B95A14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  double (*v22)(char *, char *, uint64_t);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  __n128 v36;
  void (*v37)(uint64_t, uint64_t, __n128);
  uint64_t v38;
  void (*v39)(double *, __n128);
  uint64_t v40;
  double *v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(double *, __n128);
  char v53[24];

  v51 = a5;
  v52 = (void (*)(double *, __n128))a3;
  v49 = a4;
  v7 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v48 = (char *)&v43 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v50 = a2 + 16;
  swift_beginAccess(a2 + 16, v53, 0, 0);
  v19 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 16));
    v45 = a1;
    v20 = sub_100B787A8();
    v44 = v17;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v21);

    v22 = *(double (**)(char *, char *, uint64_t))(v8 + 16);
    v23.n128_f64[0] = v22(v14, v17, v7);
    v24 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v7, v23);
    swift_bridgeObjectRetain(v19);
    v25 = v8;
    v26 = sub_100BB342C(v24, v19);
    v46 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v26);
    v27 = swift_bridgeObjectRelease();
    v28 = (uint64_t)v48;
    ((void (*)(char *, char *, uint64_t, __n128))v22)(v48, v14, v7, v27);
    v29 = v47;
    v30 = v44;
    v22(v47, v44, v7);
    v31 = *(unsigned __int8 *)(v25 + 80);
    v32 = (v31 + 33) & ~v31;
    v33 = swift_allocObject(&unk_101296770, v32 + v9, v31 | 7);
    v34 = v45;
    *(_QWORD *)(v33 + 16) = v45;
    *(_QWORD *)(v33 + 24) = v19;
    *(_BYTE *)(v33 + 32) = 1;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v33 + v32, v29, v7);
    swift_bridgeObjectRetain(v19);
    v35 = v34;
    sub_100B7E664(v28, 1, (uint64_t)sub_100BBA17C, v33);
    v36 = swift_release(v33);
    v37 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
    v37(v28, v7, v36);
    ((void (*)(char *, uint64_t))v37)(v14, v7);
    ((void (*)(char *, uint64_t))v37)(v30, v7);
    swift_bridgeObjectRelease();
    if (!v52)
      return;
  }
  else
  {
    v46 = 0;
    if (!v52)
      return;
  }
  __chkstk_darwin(v18);
  v38 = v49;
  *(&v43 - 2) = v50;
  v39 = v52;
  sub_1004C0F54((uint64_t)v52, v38);
  swift_bridgeObjectRetain(v51);
  v41 = sub_100BB39B0(v40, sub_100BBA180, (uint64_t)(&v43 - 4));
  v42 = swift_bridgeObjectRelease();
  v39(v41, v42);
  swift_bridgeObjectRelease();
  sub_1004C1024((uint64_t)v39, v38);
}

uint64_t sub_100B95D34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(a2, v6, 0, 0);
  v4 = *a2;
  swift_bridgeObjectRetain(v4);
  LOBYTE(a1) = sub_100622DD8(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

void sub_100B95D98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;

  v35 = a4;
  v36 = a5;
  v34 = a3;
  v10 = sub_1004B804C(&qword_101407308);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - v15;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a2 + 16);
  v23 = _swiftEmptyArrayStorage;
  if (v22)
  {
    v32 = a6;
    v33 = a7;
    v38 = _swiftEmptyArrayStorage;
    v24 = v19;
    swift_bridgeObjectRetain(v19);
    sub_100600A18(0, v22, 0);
    v25 = *(unsigned __int8 *)(v11 + 80);
    v31 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
    v37 = *(_QWORD *)(v11 + 72);
    v23 = v38;
    do
    {
      sub_1004CB7BC(v26, (uint64_t)v16, &qword_101407308);
      sub_1004B8460((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84E0((uint64_t)v13, (uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB800((uint64_t)v16, &qword_101407308);
      if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      {
        sub_100600A18(0, *((_QWORD *)v23 + 2) + 1, 1);
        v23 = v38;
      }
      v28 = *((_QWORD *)v23 + 2);
      v27 = *((_QWORD *)v23 + 3);
      if (v28 >= v27 >> 1)
      {
        sub_100600A18(v27 > 1, v28 + 1, 1);
        v23 = v38;
      }
      *((_QWORD *)v23 + 2) = v28 + 1;
      sub_1004B84E0((uint64_t)v21, (uint64_t)v23+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v28, type metadata accessor for CRLBoardIdentifier);
      v26 += v37;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a6 = v32;
    a7 = v33;
  }
  v29 = sub_100AF87D0((uint64_t)v23);
  swift_bridgeObjectRelease();
  v30 = v34;
  sub_100B94F38(v29, 0, v34);
  swift_bridgeObjectRelease();
  sub_100B95A14(v30, v35, v36, a6, a7);
}

uint64_t sub_100B96000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_100B9606C, v7, v8);
}

void sub_100B9606C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  v3 = sub_100BE8FF8(v2);
  *(_QWORD *)(v0 + 80) = v3;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v7 = objc_msgSend(v6, "delegate");

    if (v7)
    {
      v8 = type metadata accessor for CRLiOSAppDelegate();
      v9 = *(void **)(swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(_QWORD *)(v0 + 88) = v9;
      if (!v9)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      v9;
      swift_unknownObjectRelease(v7);

      if (v9)
      {
        v10 = (_QWORD *)swift_task_alloc(dword_101408D7C);
        *(_QWORD *)(v0 + 96) = v10;
        *v10 = v0;
        v10[1] = sub_100B96274;
        sub_100BE770C((uint64_t)v3);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 56));

    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B96274()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100B9631C;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100B962E0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B962E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B9631C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100B9635C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v18[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v10);
    type metadata accessor for MainActor(0);
    swift_retain(v12);
    swift_bridgeObjectRetain(a3);
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_101296658, 48, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    v15[5] = a3;
    swift_release(v12);
    v16 = sub_100618920((uint64_t)v7, (uint64_t)&unk_1014072F0, (uint64_t)v15);

    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

uint64_t sub_100B964B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[8] = a4;
  v5[9] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[10] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[11] = v7;
  v5[12] = v8;
  return swift_task_switch(sub_100B96520, v7, v8);
}

uint64_t sub_100B96520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
    *(_QWORD *)(v0 + 104) = v4;
    swift_unknownObjectRetain(v4);

    v5 = (_QWORD *)swift_task_alloc(dword_10140E1FC);
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_100B96610;
    return sub_100CB8570(*(_QWORD *)(v0 + 72));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 80));
    v7 = *(_QWORD *)(v0 + 64) + 16;
    swift_beginAccess(v7, v0 + 40, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (v8)
    {
      v9 = (void *)v8;
      sub_100B82A94();

    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B96610()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100B966E8;
  }
  else
  {
    swift_unknownObjectRelease(v2[13]);
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100B9667C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B9667C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100B82A94();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B966E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B96728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v6 + 112) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 56) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = v9;
  return swift_task_switch(sub_100B96798, v8, v9);
}

uint64_t sub_100B96798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t result;
  __n128 v14;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = *(_BYTE *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = objc_allocWithZone((Class)type metadata accessor for CRLBoardFavoriteCommand());
    swift_bridgeObjectRetain(v4);
    v7 = sub_100BE5094(v6, v3);
    *(_QWORD *)(v0 + 88) = v7;
    v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v9 = objc_msgSend(v8, "delegate");

    if (v9)
    {
      v10 = type metadata accessor for CRLiOSAppDelegate();
      v11 = *(void **)(swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(_QWORD *)(v0 + 96) = v11;
      if (v11)
      {
        v11;
        swift_unknownObjectRelease(v9);
        v12 = (_QWORD *)swift_task_alloc(dword_101408D7C);
        *(_QWORD *)(v0 + 104) = v12;
        *v12 = v0;
        v12[1] = sub_100B969A8;
        return sub_100BE770C((uint64_t)v7);
      }
    }
    else
    {
      __break(1u);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    result = swift_unknownObjectRelease(v9);
    __break(1u);
  }
  else
  {
    v14 = swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
  }
  return result;
}

uint64_t sub_100B969A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(void **)(*v1 + 96);
  swift_task_dealloc(*(_QWORD *)(*v1 + 104));

  if (v0)
  {
    swift_errorRelease(v0);
    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100BBC4AC;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100B96A1C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B96A1C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 56));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B96A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6[41] = a5;
  v6[42] = a6;
  v6[40] = a4;
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_101407260) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[43] = swift_task_alloc(v7);
  v6[44] = swift_task_alloc(v7);
  v8 = type metadata accessor for IndexPath(0);
  v6[45] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[46] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[47] = swift_task_alloc(v10);
  v6[48] = swift_task_alloc(v10);
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6[49] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[50] = swift_task_alloc(v12);
  v6[51] = swift_task_alloc(v12);
  v13 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v6[52] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[53] = swift_task_alloc(v14);
  v6[54] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v6[55] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v6[56] = v16;
  v6[57] = v17;
  return swift_task_switch(sub_100B96B9C, v16, v17);
}

void sub_100B96B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  double *v6;
  id v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Class isa;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t inited;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328) + 16;
  v3 = (objc_class *)type metadata accessor for CRLBoardDuplicateCommand();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v1);
  v5 = v4;
  v6 = sub_10060043C(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers] = v6;

  *(_QWORD *)(v0 + 304) = v5;
  *(_QWORD *)(v0 + 312) = v3;
  v7 = objc_msgSendSuper2((objc_super *)(v0 + 304), "init");
  *(_QWORD *)(v0 + 464) = v7;
  swift_beginAccess(v2, v0 + 232, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v11 = objc_msgSend(v10, "delegate");

    if (!v11)
      goto LABEL_39;
    v12 = type metadata accessor for CRLiOSAppDelegate();
    v13 = *(void **)(swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
    *(_QWORD *)(v0 + 472) = v13;
    if (!v13)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    v13;

    swift_unknownObjectRelease(v11);
    if (!v13)
      goto LABEL_40;
    v14 = (_QWORD *)swift_task_alloc(dword_101408D7C);
    *(_QWORD *)(v0 + 480) = v14;
    *v14 = v0;
    v14[1] = sub_100B974C0;
    sub_100BE770C((uint64_t)v7);
    return;
  }
  swift_release(*(_QWORD *)(v0 + 440));
  v15 = *(_QWORD *)(v0 + 328) + 16;
  swift_beginAccess(v15, v0 + 160, 0, 0);
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v15);
  if (!v16)
  {
    v19 = *(char **)(v0 + 464);
    goto LABEL_35;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "isEditing");

  v19 = *(char **)(v0 + 464);
  if ((v18 & 1) == 0)
  {
LABEL_35:

LABEL_36:
    v78 = *(_QWORD *)(v0 + 424);
    v80 = *(_QWORD *)(v0 + 400);
    v79 = *(_QWORD *)(v0 + 408);
    v82 = *(_QWORD *)(v0 + 376);
    v81 = *(_QWORD *)(v0 + 384);
    v84 = *(_QWORD *)(v0 + 344);
    v83 = *(_QWORD *)(v0 + 352);
    swift_task_dealloc(*(_QWORD *)(v0 + 432));
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v20 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers];
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
LABEL_23:
    v49 = *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers];
    v50 = *(_QWORD *)(v49 + 16);
    if (v50)
    {
      v51 = *(_QWORD *)(v0 + 416);
      v88 = *(_QWORD *)(v0 + 368);
      v52 = *(_QWORD *)(v0 + 328) + 16;
      v53 = v49 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
      swift_bridgeObjectRetain(v49);
      swift_beginAccess(v52, v0 + 256, 0, 0);
      v86 = *(_QWORD *)(v51 + 72);
      do
      {
        v56 = *(_QWORD *)(v0 + 424);
        v58 = *(_QWORD *)(v0 + 392);
        v57 = *(_QWORD *)(v0 + 400);
        v59 = *(_QWORD *)(v0 + 360);
        v60 = *(_QWORD *)(v0 + 344);
        sub_1004B8460(v53, v56, type metadata accessor for CRLBoardIdentifier);
        v61 = (_QWORD *)(v57 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
        sub_1004B8460(v56, v57, type metadata accessor for CRLBoardIdentifier);
        *v61 = 0;
        v61[1] = 0xE000000000000000;
        swift_storeEnumTagMultiPayload(v57, v58, 2);
        v62 = sub_100B787A8();
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v57, v63);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v60, 1, v59) == 1)
        {
          sub_1004CB800(*(_QWORD *)(v0 + 344), (uint64_t *)&unk_101407260);
          if (qword_1013DD6B8 != -1)
            swift_once(&qword_1013DD6B8, sub_100A00A6C);
          swift_beginAccess(&static OS_os_log.crlDefault, v0 + 280, 0, 0);
          v64 = (void *)static OS_os_log.crlDefault;
          v65 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v65, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v67 = v64;
          v68 = UUID.uuidString.getter(v67);
          v70 = v69;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v68;
          *(_QWORD *)(inited + 40) = v70;
          v72 = static os_log_type_t.default.getter(v71);
          sub_100A06EBC((uint64_t)v67, &_mh_execute_header, v72, "Could not de-select an original board following its duplication (no IndexPath found for identifier %{public}@)", 110, 2, inited);
          swift_setDeallocating(inited);
          v73 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v73);

        }
        else
        {
          v74 = *(_QWORD *)(v0 + 328) + 16;
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v88 + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 360));
          v75 = (void *)swift_unknownObjectWeakLoadStrong(v74);
          if (v75)
          {
            v76 = v75;
            v77 = objc_msgSend(v75, "collectionView");

            if (!v77)
              goto LABEL_38;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v77, "deselectItemAtIndexPath:animated:", isa, 0);

          }
          (*(void (**)(_QWORD, _QWORD))(v88 + 8))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360));
        }
        v55 = *(_QWORD *)(v0 + 424);
        sub_1004B84A4(*(_QWORD *)(v0 + 400), type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v55, type metadata accessor for CRLBoardIdentifier);
        v53 += v86;
        --v50;
      }
      while (v50);

      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v0 + 416);
  v87 = *(_QWORD *)(v0 + 368);
  v23 = *(_QWORD *)(v0 + 328) + 16;
  v24 = v20 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  swift_bridgeObjectRetain(v20);
  swift_beginAccess(v23, v0 + 184, 0, 0);
  v85 = *(_QWORD *)(v22 + 72);
  while (1)
  {
    v27 = *(_QWORD *)(v0 + 432);
    v28 = *(_QWORD *)(v0 + 408);
    v29 = *(_QWORD *)(v0 + 392);
    v31 = *(_QWORD *)(v0 + 352);
    v30 = *(_QWORD *)(v0 + 360);
    sub_1004B8460(v24, v27, type metadata accessor for CRLBoardIdentifier);
    v32 = (_QWORD *)(v28 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    sub_1004B8460(v27, v28, type metadata accessor for CRLBoardIdentifier);
    *v32 = 0;
    v32[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload(v28, v29, 2);
    v33 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v28, v34);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v31, 1, v30) == 1)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 352), (uint64_t *)&unk_101407260);
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 208, 0, 0);
      v35 = (void *)static OS_os_log.crlDefault;
      v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v37 = swift_initStackObject(v36, v0 + 88);
      *(_OWORD *)(v37 + 16) = xmmword_100EF5E40;
      v38 = v35;
      v39 = UUID.uuidString.getter(v38);
      v41 = v40;
      *(_QWORD *)(v37 + 56) = &type metadata for String;
      *(_QWORD *)(v37 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v37 + 32) = v39;
      *(_QWORD *)(v37 + 40) = v41;
      v43 = static os_log_type_t.default.getter(v42);
      sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v43, "Could not select a new board which resulted from duplicating an existing board (no IndexPath found for identifier %{public}@)", 125, 2, v37);
      swift_setDeallocating(v37);
      v44 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v37 + 32, 1, v44);

      goto LABEL_13;
    }
    v45 = *(_QWORD *)(v0 + 328) + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v87 + 32))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
    v46 = (void *)swift_unknownObjectWeakLoadStrong(v45);
    if (v46)
      break;
LABEL_12:
    (*(void (**)(_QWORD, _QWORD))(v87 + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 360));
LABEL_13:
    v26 = *(_QWORD *)(v0 + 432);
    sub_1004B84A4(*(_QWORD *)(v0 + 408), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
    v24 += v85;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      v19 = *(char **)(v0 + 464);
      goto LABEL_23;
    }
  }
  v47 = v46;
  v48 = objc_msgSend(v46, "collectionView");

  if (v48)
  {
    v25 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v48, "selectItemAtIndexPath:animated:scrollPosition:", v25, 0, 1);

    goto LABEL_12;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t sub_100B974C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 480));
  v3 = (void *)v2[59];
  if (v0)
  {
    swift_errorRelease(v0);

    v4 = v2[56];
    v5 = v2[57];
    v6 = sub_100BBC56C;
  }
  else
  {

    v4 = v2[56];
    v5 = v2[57];
    v6 = sub_100B9753C;
  }
  return swift_task_switch(v6, v4, v5);
}

void sub_100B9753C()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  unsigned __int8 v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  Class v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  uint64_t inited;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  Class isa;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  swift_release(*(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 328) + 16;
  swift_beginAccess(v1, v0 + 160, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
  {
    v5 = *(char **)(v0 + 464);
    goto LABEL_27;
  }
  v3 = Strong;
  v4 = objc_msgSend(Strong, "isEditing");

  v5 = *(char **)(v0 + 464);
  if ((v4 & 1) == 0)
  {
LABEL_27:

LABEL_28:
    v64 = *(_QWORD *)(v0 + 424);
    v66 = *(_QWORD *)(v0 + 400);
    v65 = *(_QWORD *)(v0 + 408);
    v68 = *(_QWORD *)(v0 + 376);
    v67 = *(_QWORD *)(v0 + 384);
    v70 = *(_QWORD *)(v0 + 344);
    v69 = *(_QWORD *)(v0 + 352);
    swift_task_dealloc(*(_QWORD *)(v0 + 432));
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers];
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
LABEL_16:
    v35 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers];
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v37 = *(_QWORD *)(v0 + 416);
      v74 = *(_QWORD *)(v0 + 368);
      v38 = *(_QWORD *)(v0 + 328) + 16;
      v39 = v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
      swift_bridgeObjectRetain(v35);
      swift_beginAccess(v38, v0 + 256, 0, 0);
      v72 = *(_QWORD *)(v37 + 72);
      do
      {
        v41 = *(_QWORD *)(v0 + 424);
        v43 = *(_QWORD *)(v0 + 392);
        v42 = *(_QWORD *)(v0 + 400);
        v44 = *(_QWORD *)(v0 + 360);
        v45 = *(_QWORD *)(v0 + 344);
        sub_1004B8460(v39, v41, type metadata accessor for CRLBoardIdentifier);
        v46 = (_QWORD *)(v42 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
        sub_1004B8460(v41, v42, type metadata accessor for CRLBoardIdentifier);
        *v46 = 0;
        v46[1] = 0xE000000000000000;
        swift_storeEnumTagMultiPayload(v42, v43, 2);
        v47 = sub_100B787A8();
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v42, v48);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v45, 1, v44) == 1)
        {
          sub_1004CB800(*(_QWORD *)(v0 + 344), (uint64_t *)&unk_101407260);
          if (qword_1013DD6B8 != -1)
            swift_once(&qword_1013DD6B8, sub_100A00A6C);
          swift_beginAccess(&static OS_os_log.crlDefault, v0 + 280, 0, 0);
          v49 = (void *)static OS_os_log.crlDefault;
          v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v50, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v52 = v49;
          v53 = UUID.uuidString.getter(v52);
          v55 = v54;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v53;
          *(_QWORD *)(inited + 40) = v55;
          v57 = static os_log_type_t.default.getter(v56);
          sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v57, "Could not de-select an original board following its duplication (no IndexPath found for identifier %{public}@)", 110, 2, inited);
          swift_setDeallocating(inited);
          v58 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v58);

        }
        else
        {
          v59 = *(_QWORD *)(v0 + 328) + 16;
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v74 + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 360));
          v60 = (void *)swift_unknownObjectWeakLoadStrong(v59);
          if (v60)
          {
            v61 = v60;
            v62 = objc_msgSend(v60, "collectionView");

            if (!v62)
              goto LABEL_31;
            isa = IndexPath._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v62, "deselectItemAtIndexPath:animated:", isa, 0);

          }
          (*(void (**)(_QWORD, _QWORD))(v74 + 8))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360));
        }
        v40 = *(_QWORD *)(v0 + 424);
        sub_1004B84A4(*(_QWORD *)(v0 + 400), type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
        v39 += v72;
        --v36;
      }
      while (v36);

      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v8 = *(_QWORD *)(v0 + 416);
  v73 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 328) + 16;
  v10 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  swift_bridgeObjectRetain(v6);
  swift_beginAccess(v9, v0 + 184, 0, 0);
  v71 = *(_QWORD *)(v8 + 72);
  while (1)
  {
    v12 = *(_QWORD *)(v0 + 432);
    v13 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 392);
    v16 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 360);
    sub_1004B8460(v10, v12, type metadata accessor for CRLBoardIdentifier);
    v17 = (_QWORD *)(v13 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
    sub_1004B8460(v12, v13, type metadata accessor for CRLBoardIdentifier);
    *v17 = 0;
    v17[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload(v13, v14, 2);
    v18 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v13, v19);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v16, 1, v15) == 1)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 352), (uint64_t *)&unk_101407260);
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 208, 0, 0);
      v20 = (void *)static OS_os_log.crlDefault;
      v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v22 = swift_initStackObject(v21, v0 + 88);
      *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
      v23 = v20;
      v24 = UUID.uuidString.getter(v23);
      v26 = v25;
      *(_QWORD *)(v22 + 56) = &type metadata for String;
      *(_QWORD *)(v22 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v22 + 32) = v24;
      *(_QWORD *)(v22 + 40) = v26;
      v28 = static os_log_type_t.default.getter(v27);
      sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v28, "Could not select a new board which resulted from duplicating an existing board (no IndexPath found for identifier %{public}@)", 125, 2, v22);
      swift_setDeallocating(v22);
      v29 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v22 + 32, 1, v29);

      goto LABEL_6;
    }
    v30 = *(_QWORD *)(v0 + 328) + 16;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v73 + 32))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
    v31 = (void *)swift_unknownObjectWeakLoadStrong(v30);
    if (v31)
      break;
LABEL_5:
    (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 360));
LABEL_6:
    v11 = *(_QWORD *)(v0 + 432);
    sub_1004B84A4(*(_QWORD *)(v0 + 408), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4(v11, type metadata accessor for CRLBoardIdentifier);
    v10 += v71;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      v5 = *(char **)(v0 + 464);
      goto LABEL_16;
    }
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "collectionView");

  if (v33)
  {
    v34 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "selectItemAtIndexPath:animated:scrollPosition:", v34, 0, 1);

    goto LABEL_5;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_100B97C44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  id v9;

  v7 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver);
  if (v7)
  {
    v8 = (void *)objc_opt_self(NSNotificationCenter);
    v9 = objc_msgSend(v8, "defaultCenter", swift_unknownObjectRetain(v7).n128_f64[0]);
    objc_msgSend(v9, "removeObserver:", v7);

    sub_100B78CDC(0);
    swift_unknownObjectRelease(v7);
  }
  if (a2)
    sub_100B97CF8(a4, a1, a2);
}

void sub_100B97CF8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  id v55;
  uint64_t v56;
  uint64_t *v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  __n128 v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  Class isa;
  id v71;
  uint64_t ObjectType;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, unint64_t, uint64_t, uint64_t, __n128);
  __n128 v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  char v134[72];
  char v135[32];
  char v136[8];

  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v127 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v11);
  v13 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v129 = (uint64_t)&v114 - v15;
  v130 = type metadata accessor for IndexPath(0);
  v132 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v124 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v126 = (uint64_t)&v114 - v21;
  v125 = v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v114 - v24;
  v26 = type metadata accessor for CRLBoardIdentifier(0);
  v121 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v123 = (uint64_t)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v114 - v29;
  v133 = a1;
  sub_1004B8460(a1, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v25, v17) == 2)
  {
    v31 = &v25[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
    v32 = *((_QWORD *)v31 + 1);
    v33 = (uint64_t)v25;
    v34 = *(_QWORD *)v31;
    sub_1004B84E0(v33, (uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
    v35 = v34 == a2 && v32 == a3;
    if (v35 || (v36 = a3, (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v32, a2, a3, 0) & 1) != 0))
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v136, 0, 0);
      v37 = (void *)static OS_os_log.crlDefault;
      v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v38, v134);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v34;
      *(_QWORD *)(inited + 40) = v32;
      v40 = v37;
      v42 = static os_log_type_t.default.getter(v41);
      sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v42, "Skipping rename because there was no change: %@", 47, 2, inited);
      swift_setDeallocating(inited);
      v43 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v43);

      sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
      return;
    }
    v119 = v34;
    v120 = a2;
    v63 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v133, v64);

    v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
    v66 = v130;
    if (v65(v13, 1, v130) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2669, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      v36 = a3;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"finishRenaming(item:to:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2669, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    v67 = v129;
    sub_1004C4938((uint64_t)v13, v129, (uint64_t *)&unk_101407260);
    if (v65((char *)v67, 1, v66) == 1)
    {
      sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
      swift_bridgeObjectRelease(v32);
      sub_1004CB800(v67, (uint64_t *)&unk_101407260);
      return;
    }
    v118 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v128, v67, v66);
    v68 = objc_msgSend(v131, "collectionView");
    if (!v68)
    {
      __break(1u);
      return;
    }
    v69 = v68;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v71 = objc_msgSend(v69, "cellForItemAtIndexPath:", isa);

    if (v71)
    {
      ObjectType = swift_getObjectType(v71);
      v73 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
      if (v73)
        v74 = v73;
      else
        v74 = 0;
      if (v73)
        v75 = v71;
      else
        v75 = 0;
      if (v75)
      {
        v76 = (uint64_t)v30;
LABEL_35:
        v77 = v120;
        v78 = String.count.getter(v120, v36);
        swift_bridgeObjectRetain(v36);
        v79 = v77;
        v80 = v36;
        if (v78 >= 256)
        {
          v81 = sub_100C48F54(255, v77, v36);
          v83 = v82;
          v85 = v84;
          v87 = v86;
          v88 = swift_bridgeObjectRelease(v36);
          v79 = static String._fromSubstring(_:)(v81, v83, v85, v87, v88);
          v80 = v89;
          swift_bridgeObjectRelease(v87);
        }
        v129 = v74;
        v117 = v75;
        v90 = v36;
        if (v75)
        {
          v91 = swift_getObjectType(v75);
          v92 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, __n128))(v74 + 152);
          v93 = swift_unknownObjectRetain(v75);
          v92(v79, v80, v91, v74, v93);
          swift_unknownObjectRelease(v75);
          v94 = v75;
        }
        else
        {
          swift_bridgeObjectRelease(v80);
          v94 = 0;
        }
        v115 = v94;
        v95 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v127, 1, 1, v95);
        v96 = swift_allocObject(&unk_101296568, 24, 7);
        swift_unknownObjectWeakInit(v96 + 16);
        v116 = v76;
        v97 = v123;
        sub_1004B8460(v76, v123, type metadata accessor for CRLBoardIdentifier);
        sub_1004B8460(v133, v126, type metadata accessor for CRLBoardLibraryViewModel.Item);
        type metadata accessor for MainActor(0);
        swift_bridgeObjectRetain(v90);
        swift_unknownObjectRetain(v94);
        swift_retain(v96);
        v133 = static MainActor.shared.getter(v98);
        v99 = *(unsigned __int8 *)(v121 + 80);
        v100 = (v99 + 32) & ~v99;
        v101 = (v122 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
        v102 = (v101 + 23) & 0xFFFFFFFFFFFFFFF8;
        v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8;
        v104 = (v103 + 23) & 0xFFFFFFFFFFFFFFF8;
        v105 = *(unsigned __int8 *)(v124 + 80);
        v106 = (v105 + v104 + 16) & ~v105;
        v107 = swift_allocObject(&unk_101297030, v106 + v125, v99 | v105 | 7);
        *(_QWORD *)(v107 + 16) = v133;
        *(_QWORD *)(v107 + 24) = &protocol witness table for MainActor;
        sub_1004B84E0(v97, v107 + v100, type metadata accessor for CRLBoardIdentifier);
        v108 = (uint64_t *)(v107 + v101);
        *v108 = v120;
        v108[1] = v90;
        *(_QWORD *)(v107 + v102) = v96;
        v109 = (_QWORD *)(v107 + v103);
        v110 = v129;
        *v109 = v117;
        v109[1] = v110;
        v111 = (_QWORD *)(v107 + v104);
        v112 = v118;
        *v111 = v119;
        v111[1] = v112;
        sub_1004B84E0(v126, v107 + v106, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_release(v96);
        v113 = sub_100521B98(v127, (uint64_t)&unk_101407420, v107);
        swift_release(v113);
        swift_unknownObjectRelease(v115);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v128, v130);
        sub_1004B84A4(v116, type metadata accessor for CRLBoardIdentifier);
        return;
      }

    }
    v76 = (uint64_t)v30;
    sub_100757E04(&_mh_execute_header, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2673, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"finishRenaming(item:to:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2673, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v75 = 0;
    v74 = 0;
    goto LABEL_35;
  }
  sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v136, 0, 0);
  v44 = (void *)static OS_os_log.crlDefault;
  v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v46 = swift_initStackObject(v45, v135);
  *(_OWORD *)(v46 + 16) = xmmword_100EF5E40;
  sub_1004B8460(v133, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v19, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v48 = v44;
      sub_100BCAD68();
      v50 = v49;
      v52 = v51;
      v53 = (uint64_t)v8;
      v54 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v57 = (uint64_t *)&v19[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v50 = *v57;
      v52 = v57[1];
      v58 = v44;
      v54 = type metadata accessor for CRLBoardIdentifier;
      v53 = (uint64_t)v19;
    }
    sub_1004B84A4(v53, v54);
  }
  else
  {
    v55 = v44;
    v50 = sub_100BCE3AC();
    v52 = v56;
  }
  *(_QWORD *)(v46 + 56) = &type metadata for String;
  *(_QWORD *)(v46 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v46 + 32) = v50;
  *(_QWORD *)(v46 + 40) = v52;
  v60 = static os_log_type_t.default.getter(v59);
  sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v60, "Cannot rename item %@ (only board renaming is currently supported)", 66, 2, v46);
  swift_setDeallocating(v46);
  v61 = *(_QWORD *)(v46 + 16);
  v62 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v46 + 32, v61, v62);

}

void sub_100B98868(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = objc_msgSend(a1, "textFields");
  if (!v1)
    return;
  v2 = v1;
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013E2240, UITextField_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
    if (v7)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease(v4);
    return;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
LABEL_7:
    v8 = v5;
    objc_msgSend(v5, "selectAll:", 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

    return;
  }
  __break(1u);
}

uint64_t sub_100B98988(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *Strong;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  _QWORD v31[2];
  _QWORD v32[5];
  __int128 v33;
  __int128 v34;

  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(NSThread), "isMainThread");
  if ((v13 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"beginRenaming(item:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2647, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginRenaming(item:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2647, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    v13 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v14 = Notification.userInfo.getter(v13);
  if (!v14)
  {
    v33 = 0u;
    v34 = 0u;
    return sub_1004CB800((uint64_t)&v33, &qword_1013E0230);
  }
  v15 = v14;
  v31[0] = 0xD000000000000017;
  v31[1] = 0x8000000100FB5A40;
  AnyHashable.init<A>(_:)(v31, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1008432BC((uint64_t)v32), (v17 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v33);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease(v15);
  sub_1004B89A4((uint64_t)v32);
  if (!*((_QWORD *)&v34 + 1))
    return sub_1004CB800((uint64_t)&v33, &qword_1013E0230);
  v18 = sub_1004B804C(&qword_1013E4980);
  result = swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, v18, 6);
  if ((result & 1) != 0)
  {
    v20 = v32[0];
    sub_1004B8460(a2, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 2)
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v9[*(int *)(v21 + 48) + 8]);
      sub_1004B84E0((uint64_t)v9, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      v22 = sub_100622DD8((uint64_t)v12, v20);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
      {
        swift_beginAccess(a3 + 16, v32, 0, 0);
        Strong = (char *)swift_unknownObjectWeakLoadStrong(a3 + 16);
        if (Strong)
        {
          v24 = Strong;
          v25 = *(_QWORD *)&Strong[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver];
          if (v25)
          {
            v26 = (void *)objc_opt_self(NSNotificationCenter);
            v27 = objc_msgSend(v26, "defaultCenter", swift_unknownObjectRetain(v25).n128_f64[0]);
            objc_msgSend(v27, "removeObserver:", v25);

            sub_100B78CDC(0);
            swift_unknownObjectRelease(v25);
          }
          else
          {

          }
        }
        objc_msgSend(a4, "dismissViewControllerAnimated:completion:", 1, 0);
      }
      v28 = type metadata accessor for CRLBoardIdentifier;
      v29 = (uint64_t)v12;
    }
    else
    {
      swift_bridgeObjectRelease(v20);
      v28 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v29 = (uint64_t)v9;
    }
    return sub_1004B84A4(v29, v28);
  }
  return result;
}

uint64_t sub_100B98D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 312) = v17;
  *(_QWORD *)(v8 + 320) = v18;
  *(_OWORD *)(v8 + 296) = v16;
  *(_QWORD *)(v8 + 280) = a7;
  *(_QWORD *)(v8 + 288) = a8;
  *(_QWORD *)(v8 + 264) = a5;
  *(_QWORD *)(v8 + 272) = a6;
  *(_QWORD *)(v8 + 256) = a4;
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(_QWORD *)(v8 + 328) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(_QWORD *)(v8 + 336) = v10;
  *(_QWORD *)(v8 + 344) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v8 + 352) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 360) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 368) = v13;
  *(_QWORD *)(v8 + 376) = v14;
  return swift_task_switch(sub_100B98E38, v13, v14);
}

void sub_100B98E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  char *v8;
  double v9;
  id v10;
  uint64_t Strong;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  sub_1004B8460(*(_QWORD *)(v0 + 256), v1, type metadata accessor for CRLBoardIdentifier);
  v5 = (objc_class *)type metadata accessor for CRLSetBoardTitleCommand(0);
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  sub_1004B8460(v1, (uint64_t)&v6[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
  v8 = &v6[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle];
  *(_QWORD *)v8 = v4;
  *((_QWORD *)v8 + 1) = v2;
  *(_QWORD *)(v0 + 224) = v6;
  v3 += 16;
  *(_QWORD *)(v0 + 232) = v5;
  *(_QWORD *)&v9 = swift_bridgeObjectRetain(v2).n128_u64[0];
  v10 = objc_msgSendSuper2((objc_super *)(v0 + 224), "init", v9);
  *(_QWORD *)(v0 + 384) = v10;
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  swift_beginAccess(v3, v0 + 128, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v14 = objc_msgSend(v13, "delegate");

    if (v14)
    {
      v15 = type metadata accessor for CRLiOSAppDelegate();
      v16 = *(void **)(swift_dynamicCastClassUnconditional(v14, v15, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(_QWORD *)(v0 + 392) = v16;
      if (!v16)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      v16;
      swift_unknownObjectRelease(v14);

      if (v16)
      {
        v17 = (_QWORD *)swift_task_alloc(dword_101408D7C);
        *(_QWORD *)(v0 + 400) = v17;
        *v17 = v0;
        v17[1] = sub_100B990F8;
        sub_100BE770C((uint64_t)v10);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 360));

    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 352));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B990F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 400);
  *(_QWORD *)(*v1 + 408) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 368);
    v5 = *(_QWORD *)(v2 + 376);
    v6 = sub_100B991B8;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 368);
    v5 = *(_QWORD *)(v2 + 376);
    v6 = sub_100B99164;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B99164()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 384);
  swift_release(*(_QWORD *)(v0 + 360));

  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B991B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  NSString v23;
  id v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  int EnumCaseMultiPayload;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v2 = *(void **)(v0 + 384);
  v1 = *(void **)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 288);
  swift_release(*(_QWORD *)(v0 + 360));

  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 304);
    v4 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 296);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 288));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 152);
    v9 = swift_bridgeObjectRetain(v4);
    v8(v5, v4, ObjectType, v6, v9);
  }
  v10 = *(_QWORD *)(v0 + 280) + 16;
  swift_beginAccess(v10, v0 + 152, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 248) = v13;
    swift_errorRetain(v13);
    v14 = sub_1004B804C(&qword_1013E0210);
    if ((swift_dynamicCast(v0 + 200, v0 + 248, v14, &type metadata for CRLBoardTitleValidator.Error, 6) & 1) != 0)
    {
      v15 = *(_QWORD *)(v0 + 200);
      v16 = *(_QWORD *)(v0 + 208);
      v17 = *(_BYTE *)(v0 + 216);
      sub_100631F20(v15, v16, v17);
      if (v18)
      {
        sub_100632090(v15, v16, v17);
        v20 = v19;
        sub_1005E579C(v15, v16, v17);
        if (v20)
        {
          v21 = *(_QWORD *)(v0 + 408);
          v22 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v23 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v24 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v22, v23, 1);

          v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v26 = String._bridgeToObjectiveC()();
          v27 = String._bridgeToObjectiveC()();
          v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          v29 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v30 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v29, 0, 0);

          objc_msgSend(v24, "addAction:", v30);
          objc_msgSend(v12, "presentViewController:animated:completion:", v24, 1, 0);

          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E579C(v15, v16, v17);
      }
    }

  }
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v32 = *(_QWORD *)(v0 + 336);
  v31 = *(_QWORD *)(v0 + 344);
  v33 = *(_QWORD *)(v0 + 320);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 176, 0, 0);
  v12 = (void *)static OS_os_log.crlDefault;
  v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v34, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  sub_1004B8460(v33, v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v31, v32);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v37 = *(_QWORD *)(v0 + 328);
      sub_1004B84E0(*(_QWORD *)(v0 + 344), v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v38 = v12;
      sub_100BCAD68();
      v40 = v39;
      v42 = v41;
      v43 = v37;
      v44 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 344);
      v48 = (uint64_t *)(v47 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
      v40 = *v48;
      v42 = v48[1];
      v49 = v12;
      v44 = type metadata accessor for CRLBoardIdentifier;
      v43 = v47;
    }
    sub_1004B84A4(v43, v44);
  }
  else
  {
    v45 = v12;
    v40 = sub_100BCE3AC();
    v42 = v46;
  }
  v21 = *(_QWORD *)(v0 + 408);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v50 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v50;
  *(_QWORD *)(inited + 32) = v40;
  *(_QWORD *)(inited + 40) = v42;
  *(_QWORD *)(v0 + 240) = v21;
  swift_errorRetain(v21);
  v51 = sub_1004B804C(&qword_1013E0210);
  v52 = String.init<A>(describing:)(v0 + 240, v51);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v50;
  *(_QWORD *)(inited + 72) = v52;
  *(_QWORD *)(inited + 80) = v53;
  v54 = static os_log_type_t.error.getter(v52);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v54, "Error renaming item (%@): %@", 28, 2, inited);
  swift_setDeallocating(inited);
  v55 = *(_QWORD *)(inited + 16);
  v56 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v55, v56);
LABEL_20:

  swift_errorRelease(v21);
  v57 = *(_QWORD *)(v0 + 344);
  v58 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100B996B4(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = objc_msgSend(a1, "searchBar");
  v3 = objc_msgSend(v2, "text");

  if (v3)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0xE000000000000000;
  }
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
  *v7 = v4;
  v7[1] = v6;
  sub_100B78E14(v8, v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100B997A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  id v3;
  id v4;
  char *v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  char *v18;
  void *v19;
  unsigned __int8 v20;
  double result;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  void *v56;
  _QWORD v57[9];
  uint64_t *v58;

  sub_1004CB7BC(a1, (uint64_t)v57, &qword_1013E0230);
  if (!v57[3])
  {
    sub_1004CB800((uint64_t)v57, &qword_1013E0230);
    goto LABEL_13;
  }
  v1 = type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  if ((swift_dynamicCast(&v58, v57, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
  {
LABEL_13:
    sub_100757E04(&_mh_execute_header, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2780, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2780, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return result;
  }
  v2 = v58;
  v3 = *(id *)((char *)v58
             + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch);
  if (!v3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2781, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2781, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    return result;
  }
  v4 = v3;
  v5 = (char *)objc_msgSend(v2, "state");
  if ((unint64_t)(v5 - 3) < 3)
  {
    v6 = sub_100B79E5C();
    v7 = v4;
    sub_100B9BC30((uint64_t)v3, 0);
    v8 = *(_QWORD *)(v6 + 48);
    Hasher.init(_seed:)(v57, *(_QWORD *)(v8 + 40));
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain_n(v8, 2);
    v3 = v7;
    NSObject.hash(into:)(v57);

    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(v8 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    v55 = v2;
    v12 = ~v10;
    while (1)
    {
      v2 = (uint64_t *)(16 * v11);
      v13 = *(_QWORD *)(v8 + 48) + 16 * v11;
      if (!*(_BYTE *)(v13 + 8))
      {
        v14 = *(void **)v13;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v15 = v3;
        sub_1006B8360(v14, 0);
        v16 = static NSObject.== infix(_:_:)(v14, v15);

        sub_1006B8384(v14, 0);
        if ((v16 & 1) != 0)
          break;
      }
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v2 = v55;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
    v57[0] = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_43;
LABEL_11:
    v18 = (char *)v2 + *(_QWORD *)(v8 + 48);
    v19 = *(void **)v18;
    v20 = v18[8];
    sub_100BA1C50(v11);
    v8 = v57[0];
    swift_bridgeObjectRelease();
    sub_1006B8384(v19, v20);
    v2 = v55;
LABEL_25:
    v33 = *(_QWORD *)(v6 + 48);
    swift_bridgeObjectRetain(v33);
    sub_100B9A254(v8);
    *(_QWORD *)(v6 + 48) = v8;
    swift_bridgeObjectRelease();
    sub_100B9A568(v33);
    swift_release(v6);

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    return result;
  }
  if (v5 == (char *)1)
  {
    v22 = sub_100B79E5C();
    v23 = v4;
    sub_100B9BC30((uint64_t)v3, 0);
    v54 = v22;
    v11 = *(_QWORD *)(v22 + 48);
    Hasher.init(_seed:)(v57, *(_QWORD *)(v11 + 40));
    Hasher._combine(_:)(0);
    v24 = v23;
    swift_bridgeObjectRetain_n(v11, 2);
    v25 = v24;
    NSObject.hash(into:)(v57);
    v56 = v25;

    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v11 + 32);
    v6 = v26 & ~v27;
    v55 = v2;
    if (((*(_QWORD *)(v11 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v28 = ~v27;
      v2 = &qword_1013E0490;
      while (1)
      {
        v29 = *(_QWORD *)(v11 + 48) + 16 * v6;
        if (!*(_BYTE *)(v29 + 8))
        {
          v30 = *(void **)v29;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          v31 = v56;
          sub_1006B8360(v30, 0);
          v32 = static NSObject.== infix(_:_:)(v30, v31);

          sub_1006B8384(v30, 0);
          if ((v32 & 1) != 0)
            break;
        }
        v6 = (v6 + 1) & v28;
        if (((*(_QWORD *)(v11 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_27;
      }

    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      v34 = swift_isUniquelyReferenced_nonNull_native(v11);
      v58 = (uint64_t *)v11;
      v35 = *(_QWORD *)(v11 + 16);
      v36 = *(_QWORD *)(v11 + 24);
      v37 = v56;
      v38 = v37;
      if (v36 <= v35)
      {
        v40 = v35 + 1;
        if (v34)
          sub_100AE204C(v40);
        else
          sub_100AF10B8(v40);
        v41 = v58;
        Hasher.init(_seed:)(v57, v58[5]);
        Hasher._combine(_:)(0);
        v39 = v38;
        v42 = v38;
        NSObject.hash(into:)(v57);

        v43 = Hasher._finalize()();
        v44 = -1 << *((_BYTE *)v41 + 32);
        v6 = v43 & ~v44;
        if (((*(unint64_t *)((char *)v41 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v6) & 1) != 0)
        {
          v45 = ~v44;
          while (1)
          {
            v46 = v41[6] + 16 * v6;
            if (!*(_BYTE *)(v46 + 8))
            {
              v47 = *(void **)v46;
              sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
              v2 = (uint64_t *)v42;
              sub_1006B8360(v47, 0);
              v48 = static NSObject.== infix(_:_:)(v47, v2);

              sub_1006B8384(v47, 0);
              if ((v48 & 1) != 0)
                break;
            }
            v6 = (v6 + 1) & v45;
            if (((*(unint64_t *)((char *)v41 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v6) & 1) == 0)
              goto LABEL_39;
          }
          ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
          __break(1u);
        }
      }
      else
      {
        v39 = v37;
        if ((v34 & 1) == 0)
          sub_100AEB3C0();
      }
LABEL_39:
      v11 = (unint64_t)v58;
      *(uint64_t *)((char *)v58 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
      v49 = *(_QWORD *)(v11 + 48) + 16 * v6;
      *(_QWORD *)v49 = v3;
      *(_BYTE *)(v49 + 8) = 0;
      v50 = *(_QWORD *)(v11 + 16);
      v51 = __OFADD__(v50, 1);
      v52 = v50 + 1;
      if (v51)
      {
        __break(1u);
LABEL_43:
        sub_100AEB3C0();
        v8 = v57[0];
        goto LABEL_11;
      }
      *(_QWORD *)(v11 + 16) = v52;

    }
    swift_bridgeObjectRelease();
    v53 = *(_QWORD *)(v54 + 48);
    swift_bridgeObjectRetain(v53);
    sub_100B9A254(v11);
    *(_QWORD *)(v54 + 48) = v11;
    swift_bridgeObjectRelease();
    sub_100B9A568(v53);
    swift_release(v54);

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {

  }
  return result;
}

void sub_100B99F44(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_100B99F74()
{
  void *v0;
  uint64_t v1;
  id v2;

  Hasher._combine(_:)(0);
  v2 = v0;
  NSObject.hash(into:)(v1);
  sub_1006B8384(v0, 0);
}

void sub_100B9A024(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100B9A064()
{
  void *v0;
  id v1;
  uint64_t v3;

  Hasher._combine(_:)(0);
  v1 = v0;
  NSObject.hash(into:)(&v3);
  sub_1006B8384(v0, 0);
  return Hasher._finalize()();
}

void sub_100B9A128()
{
  uint64_t v0;

  sub_100B9A024(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_100B9A134(uint64_t a1)
{
  uint64_t v1;

  sub_100B99F44(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void sub_100B9A140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100B9A178()
{
  void *v0;
  id v1;
  uint64_t v3;

  Hasher._combine(_:)(0);
  v1 = v0;
  NSObject.hash(into:)(&v3);
  sub_1006B8384(v0, 0);
  return Hasher._finalize()();
}

void sub_100B9A23C(uint64_t a1)
{
  sub_100BB181C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_100B9A254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[112];
  _BYTE v28[112];
  _BYTE v29[24];

  v3 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain(v3);
  v4 = sub_1008D9F44(a1, v3);
  swift_bridgeObjectRelease(v3);
  if ((v4 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 16);
    if (*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16))
    {
      if (!v5)
      {
        if (qword_1013DD740 != -1)
          swift_once(&qword_1013DD740, sub_100A02288);
        swift_beginAccess(&static OS_os_log.crlFolderUI, v29, 0, 0);
        v6 = (void *)static OS_os_log.crlFolderUI;
        v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v7, v28);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        v9 = v6;
        v10 = sub_100B9BA48();
        v12 = v11;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v13 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v10;
        *(_QWORD *)(inited + 40) = v12;
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v13;
        *(_QWORD *)(inited + 64) = v13;
        *(_QWORD *)(inited + 72) = 0xD000000000000026;
        *(_QWORD *)(inited + 80) = 0x8000000100FFBA40;
        v14 = static os_log_type_t.info.getter();
        sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "%@: %@", 6, 2, inited);
        swift_setDeallocating(inited);
        v15 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v15);

        sub_100B9ADF8();
      }
    }
    else if (v5 && *(_BYTE *)(v1 + 72) == 1)
    {
      if (qword_1013DD740 != -1)
        swift_once(&qword_1013DD740, sub_100A02288);
      swift_beginAccess(&static OS_os_log.crlFolderUI, v29, 0, 0);
      v16 = (void *)static OS_os_log.crlFolderUI;
      v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v18 = swift_initStackObject(v17, v27);
      *(_OWORD *)(v18 + 16) = xmmword_100EF5A10;
      v19 = v16;
      v20 = sub_100B9BA48();
      v22 = v21;
      *(_QWORD *)(v18 + 56) = &type metadata for String;
      v23 = sub_1004CFC2C();
      *(_QWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 40) = v22;
      *(_QWORD *)(v18 + 96) = &type metadata for String;
      *(_QWORD *)(v18 + 104) = v23;
      *(_QWORD *)(v18 + 64) = v23;
      *(_QWORD *)(v18 + 72) = 0xD000000000000047;
      *(_QWORD *)(v18 + 80) = 0x8000000100FFBA70;
      v24 = static os_log_type_t.info.getter();
      sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v24, "%@: %@", 6, 2, v18);
      swift_setDeallocating(v18);
      v25 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v18 + 32, 2, v25);

      *(_BYTE *)(v1 + 72) = 0;
      v26 = *(_QWORD *)(v1 + 80);
      if (v26)
      {
        swift_retain(*(_QWORD *)(v1 + 80));
        sub_1004B804C(&qword_1013E83B0);
        sub_1004B804C(&qword_1013E0210);
        Task.cancel()();
        swift_release(v26);
      }
      sub_100B9AD28(0);
    }
  }
}

void sub_100B9A568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[112];
  _BYTE v31[112];
  _QWORD v32[9];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain(v4);
  v5 = sub_1008D9F44(a1, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6
      && (Hasher.init(_seed:)(v32, *(_QWORD *)(a1 + 40)),
          Hasher._combine(_:)(5uLL),
          v7 = Hasher._finalize()(),
          v8 = -1 << *(_BYTE *)(a1 + 32),
          v9 = v7 & ~v8,
          ((*(_QWORD *)(a1 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
    {
      v10 = ~v8;
      while (1)
      {
        v11 = *(_QWORD *)(a1 + 48) + 16 * v9;
        if (*(unsigned __int8 *)(v11 + 8) >= 3u && *(_QWORD *)v11 >= 2uLL)
          break;
        v9 = (v9 + 1) & v10;
        if (((*(_QWORD *)(a1 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_9;
      }
      sub_100B9A860();
    }
    else
    {
LABEL_9:
      if ((sub_100B9A860() & 1) != 0)
      {
        if (qword_1013DD740 != -1)
          swift_once(&qword_1013DD740, sub_100A02288);
        swift_beginAccess(&static OS_os_log.crlFolderUI, v32, 0, 0);
        v12 = (void *)static OS_os_log.crlFolderUI;
        v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v13, v30);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        v15 = v12;
        v16 = sub_100B9BA48();
        v18 = v17;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v19 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v16;
        v20 = inited + 32;
        *(_QWORD *)(inited + 40) = v18;
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v19;
        *(_QWORD *)(inited + 64) = v19;
        *(_QWORD *)(inited + 72) = 0xD000000000000017;
        v21 = "Now ignoring refreshes.";
        goto LABEL_18;
      }
    }
    if (!v6 && *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
    {
      if (qword_1013DD740 != -1)
        swift_once(&qword_1013DD740, sub_100A02288);
      swift_beginAccess(&static OS_os_log.crlFolderUI, v32, 0, 0);
      v22 = (void *)static OS_os_log.crlFolderUI;
      v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v23, v31);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v15 = v22;
      v24 = sub_100B9BA48();
      v26 = v25;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v27 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v24;
      v20 = inited + 32;
      *(_QWORD *)(inited + 40) = v26;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v27;
      *(_QWORD *)(inited + 64) = v27;
      *(_QWORD *)(inited + 72) = 0xD000000000000019;
      v21 = "Now suspending refreshes.";
LABEL_18:
      *(_QWORD *)(inited + 80) = (unint64_t)(v21 - 32) | 0x8000000000000000;
      v28 = static os_log_type_t.info.getter();
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v28, "%@: %@", 6, 2, inited);
      swift_setDeallocating(inited);
      v29 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v20, 2, v29);

    }
  }
}

uint64_t sub_100B9A860()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v1 = *(_QWORD *)(v0 + 48);
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(5uLL);
  v2 = Hasher._finalize()();
  v3 = -1 << *(_BYTE *)(v1 + 32);
  v4 = v2 & ~v3;
  if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
    return 0;
  v5 = ~v3;
  while (1)
  {
    v6 = *(_QWORD *)(v1 + 48) + 16 * v4;
    if (*(unsigned __int8 *)(v6 + 8) >= 3u && *(_QWORD *)v6 > 1uLL)
      break;
    v4 = (v4 + 1) & v5;
    if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      return 0;
  }
  return 1;
}

void sub_100B9A924()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[112];
  _BYTE v36[112];
  _BYTE v37[112];
  _BYTE v38[24];

  if (*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16) || (sub_100B9A860() & 1) != 0 || *(_BYTE *)(v0 + 72) == 1)
  {
    if ((sub_100B9A860() & 1) != 0)
    {
      if (qword_1013DD740 != -1)
        swift_once(&qword_1013DD740, sub_100A02288);
      swift_beginAccess(&static OS_os_log.crlFolderUI, v38, 0, 0);
      v1 = (void *)static OS_os_log.crlFolderUI;
      v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v2, v36);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v4 = v1;
      v5 = sub_100B9BA48();
      v7 = v6;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v8 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v5;
      *(_QWORD *)(inited + 40) = v7;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v8;
      *(_QWORD *)(inited + 64) = v8;
      *(_QWORD *)(inited + 72) = 0xD000000000000054;
      *(_QWORD *)(inited + 80) = 0x8000000100FFBF40;
      v10 = static os_log_type_t.info.getter(v9);
      sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v10, "%@: %@", 6, 2, inited);
      swift_setDeallocating(inited);
      v11 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v11);

    }
    else
    {
      if (qword_1013DD740 != -1)
        swift_once(&qword_1013DD740, sub_100A02288);
      swift_beginAccess(&static OS_os_log.crlFolderUI, v38, 0, 0);
      v12 = (void *)static OS_os_log.crlFolderUI;
      v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v14 = swift_initStackObject(v13, v37);
      *(_OWORD *)(v14 + 16) = xmmword_100EF5A10;
      v15 = v12;
      v16 = sub_100B9BA48();
      v18 = v17;
      *(_QWORD *)(v14 + 56) = &type metadata for String;
      v19 = sub_1004CFC2C();
      *(_QWORD *)(v14 + 32) = v16;
      *(_QWORD *)(v14 + 40) = v18;
      *(_QWORD *)(v14 + 96) = &type metadata for String;
      *(_QWORD *)(v14 + 104) = v19;
      *(_QWORD *)(v14 + 64) = v19;
      *(_QWORD *)(v14 + 72) = 0xD00000000000004ALL;
      *(_QWORD *)(v14 + 80) = 0x8000000100FFBEF0;
      v21 = static os_log_type_t.info.getter(v20);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v21, "%@: %@", 6, 2, v14);
      swift_setDeallocating(v14);
      v22 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v14 + 32, 2, v22);

      *(_BYTE *)(v0 + 41) = 1;
    }
  }
  else
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v38, 0, 0);
    v23 = (void *)static OS_os_log.crlFolderUI;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, v35);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5A10;
    v26 = v23;
    v27 = sub_100B9BA48();
    v29 = v28;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    v30 = sub_1004CFC2C();
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v30;
    *(_QWORD *)(v25 + 64) = v30;
    *(_QWORD *)(v25 + 72) = 0xD000000000000028;
    *(_QWORD *)(v25 + 80) = 0x8000000100FFBFA0;
    v32 = static os_log_type_t.info.getter(v31);
    sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v32, "%@: %@", 6, 2, v25);
    swift_setDeallocating(v25);
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 2, v33);

    *(_BYTE *)(v0 + 72) = 0;
    v34 = *(_QWORD *)(v0 + 80);
    if (v34)
    {
      swift_retain(*(_QWORD *)(v0 + 80));
      sub_1004B804C(&qword_1013E83B0);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v34);
    }
    sub_100B9AD28(0);
    *(_BYTE *)(v0 + 41) = 0;
    (*(void (**)(void))(v0 + 56))();
  }
}

void sub_100B9AD28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;

  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = a1;
  swift_retain(a1);
  if (v4 && v3)
  {
    v5 = swift_retain(v3);
    if ((swift_task_isCancelled(v5) & 1) != 0)
    {
      v6 = swift_release(a1);
      swift_release_n(v3, 2, v6);
    }
    else
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x8000000100FFBEB0, "Freeform/CRLiOSFolderGridViewController.swift", 45, 2, 2919, 0);
      __break(1u);
    }
  }
  else
  {
    swift_release(v3);
    swift_release(a1);
  }
}

void sub_100B9ADF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  _BYTE v34[112];
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE v38[32];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v34[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    sub_100B9B778();
  }
  else if (*(_BYTE *)(v0 + 72) == 1)
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v38, 0, 0);
    v5 = (void *)static OS_os_log.crlFolderUI;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v6, v34);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v8 = v5;
    v9 = sub_100B9BA48();
    v11 = v10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v12 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v11;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v12;
    *(_QWORD *)(inited + 64) = v12;
    *(_QWORD *)(inited + 72) = 0xD000000000000044;
    *(_QWORD *)(inited + 80) = 0x8000000100FFBDF0;
    v13 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "%@: %@", 6, 2, inited);
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v14);

  }
  else
  {
    v15 = *(double *)(v0 + 32);
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v38, 0, 0);
    v16 = (void *)static OS_os_log.crlFolderUI;
    v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v18 = swift_initStackObject(v17, &v37);
    *(_OWORD *)(v18 + 16) = xmmword_100EF5A10;
    v19 = v16;
    v20 = sub_100B9BA48();
    v22 = v21;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    v23 = sub_1004CFC2C();
    *(_QWORD *)(v18 + 64) = v23;
    *(_QWORD *)(v18 + 32) = v20;
    *(_QWORD *)(v18 + 40) = v22;
    v35 = 0;
    v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v24._countAndFlagsBits = 0x676E697472617453;
    v24._object = (void *)0xEB00000000206120;
    String.append(_:)(v24);
    Double.write<A>(to:)(&v35, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v15);
    v25._object = (void *)0x8000000100FFBDC0;
    v25._countAndFlagsBits = 0xD000000000000022;
    String.append(_:)(v25);
    v26 = v35;
    v27 = v36;
    *(_QWORD *)(v18 + 96) = &type metadata for String;
    *(_QWORD *)(v18 + 104) = v23;
    *(_QWORD *)(v18 + 72) = v26;
    *(_QWORD *)(v18 + 80) = v27;
    v28 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v28, "%@: %@", 6, 2, v18);
    swift_setDeallocating(v18);
    v29 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v18 + 32, 2, v29);

    *(_BYTE *)(v1 + 72) = 1;
    v30 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
    v31 = swift_allocObject(&unk_1012964A0, 24, 7);
    swift_weakInit(v31 + 16, v1);
    v32 = (double *)swift_allocObject(&unk_1012964C8, 56, 7);
    v32[2] = 0.0;
    v32[3] = 0.0;
    *((_QWORD *)v32 + 4) = v31;
    *((_QWORD *)v32 + 5) = v1;
    v32[6] = v15;
    swift_retain(v1);
    v33 = sub_100618BCC((uint64_t)v4, (uint64_t)&unk_1014072A0, (uint64_t)v32);
    sub_100B9AD28(v33);
  }
}

uint64_t sub_100B9B1F0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(double *)(v6 + 400) = a2;
  *(_QWORD *)(v6 + 384) = a5;
  *(_QWORD *)(v6 + 392) = a6;
  *(_QWORD *)(v6 + 376) = a1;
  return swift_task_switch(sub_100B9B210, 0, 0);
}

uint64_t sub_100B9B210()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  __n128 v9;
  uint64_t v10;

  result = *(_QWORD *)(*(_QWORD *)(v0 + 392) + 80);
  *(_QWORD *)(v0 + 408) = result;
  if (result)
  {
    v2 = *(double *)(v0 + 400) * 1000000000.0;
    if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -1.0)
      {
        if (v2 < 1.84467441e19)
        {
          v3 = (unint64_t)v2;
          v4 = async function pointer to static Task<>.sleep(nanoseconds:)[1];
          swift_retain(result);
          v5 = (_QWORD *)swift_task_alloc(v4);
          *(_QWORD *)(v0 + 416) = v5;
          *v5 = v0;
          v5[1] = sub_100B9B328;
          return static Task<>.sleep(nanoseconds:)(v3);
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v6 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(*(_QWORD *)(v0 + 376) + 24) = (char *)&type metadata for () + 8;
  v7 = v6 + 16;
  swift_beginAccess(v6 + 16, v0 + 288, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v10 = Strong;
    sub_100B9AD28(0);
    v9 = swift_release(v10);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

uint64_t sub_100B9B328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 416);
  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100B9B704;
  else
    v3 = sub_100B9B38C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100B9B38C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  __n128 v33;
  uint64_t v34;
  uint64_t v36;

  v2 = v1 + 312;
  *(_BYTE *)(*(_QWORD *)(v1 + 392) + 72) = 0;
  if ((swift_task_isCancelled(a1) & 1) != 0)
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    v3 = *(_QWORD *)(v1 + 408);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v1 + 336, 0, 0);
    v4 = (void *)static OS_os_log.crlFolderUI;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v5, v1 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v7 = v4;
    v8 = sub_100B9BA48();
    v10 = v9;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v11 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v11;
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 72) = 0xD000000000000010;
    *(_QWORD *)(inited + 80) = 0x8000000100FFBE60;
    v13 = static os_log_type_t.info.getter(v12);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "%@: %@", 6, 2, inited);
    swift_release(v3);
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v14);

  }
  else
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    v36 = *(_QWORD *)(v1 + 408);
    v15 = *(double *)(v1 + 400);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v1 + 240, 0, 0);
    v16 = (void *)static OS_os_log.crlFolderUI;
    v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v18 = swift_initStackObject(v17, v1 + 128);
    *(_OWORD *)(v18 + 16) = xmmword_100EF5A10;
    v19 = v16;
    v20 = sub_100B9BA48();
    v22 = v21;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    v23 = sub_1004CFC2C();
    *(_QWORD *)(v18 + 64) = v23;
    *(_QWORD *)(v18 + 32) = v20;
    *(_QWORD *)(v18 + 40) = v22;
    _StringGuts.grow(_:)(19);
    *(_QWORD *)(v1 + 360) = 0;
    *(_QWORD *)(v1 + 368) = 0xE000000000000000;
    Double.write<A>(to:)(v1 + 360, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v15);
    v24._countAndFlagsBits = 0xD000000000000011;
    v24._object = (void *)0x8000000100FFBE40;
    String.append(_:)(v24);
    v25 = *(_QWORD *)(v1 + 360);
    v26 = *(_QWORD *)(v1 + 368);
    *(_QWORD *)(v18 + 96) = &type metadata for String;
    *(_QWORD *)(v18 + 104) = v23;
    *(_QWORD *)(v18 + 72) = v25;
    *(_QWORD *)(v18 + 80) = v26;
    v28 = static os_log_type_t.info.getter(v27);
    sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v28, "%@: %@", 6, 2, v18);
    swift_setDeallocating(v18);
    v29 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v18 + 32, 2, v29);

    sub_100B9B778();
    swift_release(v36);
    v2 = v1 + 312;
  }
  v30 = *(_QWORD *)(v1 + 384);
  *(_QWORD *)(*(_QWORD *)(v1 + 376) + 24) = (char *)&type metadata for () + 8;
  v31 = v30 + 16;
  swift_beginAccess(v30 + 16, v2, 0, 0);
  Strong = swift_weakLoadStrong(v31);
  if (Strong)
  {
    v34 = Strong;
    sub_100B9AD28(0);
    v33 = swift_release(v34);
  }
  return (*(uint64_t (**)(__n128))(v1 + 8))(v33);
}

uint64_t sub_100B9B704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release(*(_QWORD *)(v0 + 408));
  v1 += 16;
  swift_beginAccess(v1, v0 + 264, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_100B9AD28(0);
    v3 = swift_release(v4);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

void sub_100B9B778()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[112];
  _BYTE v23[112];
  _BYTE v24[24];

  if (*(_BYTE *)(v0 + 41) == 1)
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v24, 0, 0);
    v1 = (void *)static OS_os_log.crlFolderUI;
    v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v2, v22);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v4 = v1;
    v5 = sub_100B9BA48();
    v7 = v6;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v8 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v5;
    *(_QWORD *)(inited + 40) = v7;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v8;
    *(_QWORD *)(inited + 64) = v8;
    *(_QWORD *)(inited + 72) = 0xD000000000000035;
    *(_QWORD *)(inited + 80) = 0x8000000100FFBD80;
    v9 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v9, "%@: %@", 6, 2, inited);
    swift_setDeallocating(inited);
    v10 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v10);

    *(_BYTE *)(v0 + 72) = 0;
    v11 = *(_QWORD *)(v0 + 80);
    if (v11)
    {
      swift_retain(*(_QWORD *)(v0 + 80));
      sub_1004B804C(&qword_1013E83B0);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v11);
    }
    sub_100B9AD28(0);
    *(_BYTE *)(v0 + 41) = 0;
    (*(void (**)(void))(v0 + 56))();
  }
  else
  {
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v24, 0, 0);
    v12 = (void *)static OS_os_log.crlFolderUI;
    v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v14 = swift_initStackObject(v13, v23);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5A10;
    v15 = v12;
    v16 = sub_100B9BA48();
    v18 = v17;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    v19 = sub_1004CFC2C();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    *(_QWORD *)(v14 + 96) = &type metadata for String;
    *(_QWORD *)(v14 + 104) = v19;
    *(_QWORD *)(v14 + 64) = v19;
    *(_QWORD *)(v14 + 72) = 0xD00000000000001DLL;
    *(_QWORD *)(v14 + 80) = 0x8000000100FFBD60;
    v20 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v20, "%@: %@", 6, 2, v14);
    swift_setDeallocating(v14);
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v14 + 32, 2, v21);

  }
}

uint64_t sub_100B9BA48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[12];
  if (v1)
  {
    v2 = v0[11];
  }
  else
  {
    v2 = sub_100B9BAB8((uint64_t)v0, *v0);
    v3 = v0[12];
    v0[11] = v2;
    v0[12] = v4;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_100B9BAB8(uint64_t a1, uint64_t a2)
{
  void *v4;
  Swift::String v5;
  uint64_t MetatypeMetadata;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v19;
  _QWORD v20[2];

  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  v4 = (void *)0xE100000000000000;
  v5._countAndFlagsBits = 60;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v19 = a2;
  MetatypeMetadata = swift_getMetatypeMetadata(a2);
  v7._countAndFlagsBits = String.init<A>(describing:)(&v19, MetatypeMetadata);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 8250;
  v9._object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  v19 = a1;
  _print_unlocked<A, B>(_:_:)(&v19, v20, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v11 = v20[0];
  v10 = v20[1];
  v12 = *(void **)(a1 + 24);
  if (v12)
  {
    v13 = *(_QWORD *)(a1 + 16);
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v20[1]);
    strcpy((char *)v20, ", identifier: ");
    HIBYTE(v20[1]) = -18;
    swift_bridgeObjectRetain(v12);
    v14._countAndFlagsBits = v13;
    v14._object = v12;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(v12);
    v15._countAndFlagsBits = 62;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    v16 = v20[0];
    v4 = (void *)v20[1];
  }
  else
  {
    v16 = 62;
  }
  v20[0] = v11;
  v20[1] = v10;
  swift_bridgeObjectRetain(v10);
  v17._countAndFlagsBits = v16;
  v17._object = v4;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v4);
  return v20[0];
}

void sub_100B9BC30(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_100B9BC98()
{
  uint64_t v0;
  unsigned __int8 v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;

  *(_QWORD *)(v4 - 160) = swift_getObjectType(v2);
  sub_1006B8360(v2, v1);
  sub_1006B8360(v2, v1);
  v5 = sub_1004B804C((uint64_t *)&unk_101407288);
  v6 = String.init<A>(describing:)(v4 - 160, v5);
  v7 = v0;
  v9 = v8;
  *(_QWORD *)(v4 - 160) = v2;
  v10 = String.init<A>(describing:)(v4 - 160, &type metadata for UnsafeMutableRawPointer);
  v12 = v11;
  *(_QWORD *)(v4 - 160) = 0x696C6C6F7263732ELL;
  *(_QWORD *)(v4 - 152) = 0xEA0000000000676ELL;
  v13._countAndFlagsBits = 15392;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v6;
  v14._object = v9;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v9);
  v15._countAndFlagsBits = 8250;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = v10;
  v16._object = v12;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v12);
  v17._countAndFlagsBits = 62;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  sub_1006B8384(v2, v1);
  v44 = *(Swift::String *)(v4 - 160);
  v18 = v2;
  v19 = *(_QWORD *)(v7 + 48);
  v20 = *(_QWORD *)(v19 + 16);
  if ((v3 & 1) != 0)
  {
    if (v20)
    {
      Hasher.init(_seed:)((_QWORD *)(v4 - 160), *(_QWORD *)(v19 + 40));
      __asm { BR              X10 }
    }
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v4 - 160, 0, 0);
    v21 = (void *)static OS_os_log.crlFolderUI;
    v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v22, &v45);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v24 = v21;
    v25 = sub_100B9BA48();
    v27 = v26;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v28 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v25;
    v29 = inited + 32;
    *(_QWORD *)(inited + 64) = v28;
    *(_QWORD *)(inited + 40) = v27;
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease(v47);
    v46 = 0xD000000000000017;
    v47 = 0x8000000100FFBCB0;
    String.append(_:)(v44);
    v30 = swift_bridgeObjectRelease(v44._object);
    v31 = v46;
    v32 = v47;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v28;
    *(_QWORD *)(inited + 72) = v31;
    *(_QWORD *)(inited + 80) = v32;
    v33 = ((uint64_t (*)(__n128))static os_log_type_t.info.getter)(v30);
  }
  else
  {
    if (v20)
    {
      Hasher.init(_seed:)((_QWORD *)(v4 - 160), *(_QWORD *)(v19 + 40));
      __asm { BR              X10 }
    }
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, v4 - 160, 0, 0);
    v34 = (void *)static OS_os_log.crlFolderUI;
    v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v35, &v48);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v24 = v34;
    v36 = sub_100B9BA48();
    v38 = v37;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v39 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v36;
    v29 = inited + 32;
    *(_QWORD *)(inited + 64) = v39;
    *(_QWORD *)(inited + 40) = v38;
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v40._countAndFlagsBits = 0xD00000000000001FLL;
    v40._object = (void *)0x8000000100FFBC50;
    String.append(_:)(v40);
    String.append(_:)(v44);
    swift_bridgeObjectRelease(v44._object);
    v41._object = (void *)0x8000000100FFBC70;
    v41._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v41);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v39;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0xE000000000000000;
    v33 = static os_log_type_t.error.getter(v42);
  }
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v33, "%@: %@", 6, 2, inited);
  swift_unknownObjectRelease(v18);
  swift_setDeallocating(inited);
  v43 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v29, 2, v43);

}

uint64_t sub_100B9C940()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController14RefreshLimiter);
}

_QWORD *sub_100B9C9A4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  id v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD *);
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  void **v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t refreshed;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void **aBlock;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  _QWORD *v46;
  double (*v47)(unint64_t);
  uint64_t v48;

  v6 = v5;
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = _swiftEmptyArrayStorage;
  v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v42 = a2;
  sub_1004CB7BC(a2, (uint64_t)&aBlock, &qword_1013E0230);
  v13 = v46;
  if (v46)
  {
    v14 = sub_1004BB5A4(&aBlock, (uint64_t)v46);
    v41 = (uint64_t)&v41;
    v15 = v12;
    v16 = a3;
    v17 = a4;
    v18 = a5;
    v19 = *(v13 - 1);
    v20 = __chkstk_darwin(v14);
    v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v19 + 16))(v22, v20);
    v23 = a1;
    v24 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v13);
    v25 = *(void (**)(char *, _QWORD *))(v19 + 8);
    a5 = v18;
    a4 = v17;
    a3 = v16;
    v12 = v15;
    v25(v22, v13);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
  }
  else
  {
    v26 = a1;
    v24 = 0;
  }
  v27 = swift_allocObject(&unk_1012974E0, 24, 7);
  swift_weakInit(v27 + 16, v6);
  v47 = sub_100BBC248;
  v48 = v27;
  aBlock = _NSConcreteStackBlock;
  v44 = *(_QWORD *)"";
  v45 = sub_100568280;
  v46 = &unk_1012974F8;
  v28 = _Block_copy(&aBlock);
  v29 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", a1, v24, a3, v28, swift_release(v48).n128_f64[0]);
  _Block_release(v28);
  swift_unknownObjectRelease(v24);

  v30 = v6[3];
  v6[3] = v29;
  swift_unknownObjectRelease(v30);
  aBlock = 0;
  v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  aBlock = (void **)0xD00000000000001ALL;
  v44 = 0x8000000100FFD1A0;
  v31._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = 34;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);

  v33 = aBlock;
  v34 = v44;
  sub_1004CB800(v42, &qword_1013E0230);
  v35 = swift_allocObject(&unk_1012974E0, 24, 7);
  swift_weakInit(v35 + 16, v6);
  v36 = (_QWORD *)swift_allocObject(&unk_101297530, 40, 7);
  v36[2] = v35;
  v36[3] = a4;
  v36[4] = a5;
  refreshed = type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter();
  v38 = swift_allocObject(refreshed, 104, 7);
  *(_QWORD *)(v38 + 32) = 0;
  *(_WORD *)(v38 + 40) = 1;
  *(_BYTE *)(v38 + 72) = 0;
  *(_QWORD *)(v38 + 88) = 0;
  *(_QWORD *)(v38 + 96) = 0;
  *(_QWORD *)(v38 + 80) = 0;
  *(_QWORD *)(v38 + 16) = v33;
  *(_QWORD *)(v38 + 24) = v34;
  *(_QWORD *)(v38 + 48) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v38 + 56) = sub_100BBC27C;
  *(_QWORD *)(v38 + 64) = v36;
  v39 = v6[2];
  v6[2] = v38;
  swift_release(v39);
  return v6;
}

double sub_100B9CCD8(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v7 = Strong;
    sub_100B9D074(a1, v5);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_100B9CD34(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  __n128 v15;
  unint64_t v16;
  int64_t v17;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  _BYTE v28[24];
  char v29[24];
  char v30[24];

  v26 = a2;
  v3 = type metadata accessor for Notification(0, a2);
  v27 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v30, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v7 = Strong;
    v8 = (unint64_t *)(Strong + 32);
    swift_beginAccess(Strong + 32, v29, 0, 0);
    v9 = *(_QWORD *)(v7 + 32);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v24 = v7;
      v25 = v11;
      v12 = v9 + v11;
      v13 = *(_QWORD *)(v27 + 72);
      v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16);
      v23 = v9;
      v15 = swift_bridgeObjectRetain(v9);
      while (1)
      {
        v14(v5, v12, v3, v15);
        swift_beginAccess(v8, v28, 33, 0);
        v16 = *v8;
        v17 = *(_QWORD *)(*v8 + 16);
        if (!v17)
          break;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
        if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v17 - 1) > *(_QWORD *)(v16 + 24) >> 1)
          v16 = sub_100D11A58(isUniquelyReferenced_nonNull_native, v17, 1, v16);
        v19 = v16 + v25;
        swift_arrayDestroy(v16 + v25, 1, v3);
        v20 = *(_QWORD *)(v16 + 16);
        if (!v20)
          goto LABEL_19;
        v21 = v20 - 1;
        v22 = v19 + v13;
        if (v13 > 0 || v19 >= v22 + v21 * v13)
        {
          swift_arrayInitWithTakeFrontToBack(v19, v22, v21, v3);
        }
        else if (v13)
        {
          swift_arrayInitWithTakeBackToFront(v19);
        }
        --*(_QWORD *)(v16 + 16);
        *v8 = v16;
        swift_endAccess(v28);
        v26(v5);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
        v12 += v13;
        if (!--v10)
        {
          swift_release(v24);
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_19:
      _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
      __break(1u);
    }
    else
    {
      swift_release(v7);
    }
  }
}

uint64_t sub_100B9CFA4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = v0[3];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

    v4 = v0[3];
  }
  else
  {
    v4 = 0;
  }
  v0[3] = 0;
  swift_unknownObjectRelease(v4);
  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.NotificationObserver()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController20NotificationObserver);
}

void sub_100B9D074(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t *v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __n128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t, __n128);
  unint64_t *v34;
  _BYTE v35[24];
  char v36[24];

  v4 = type metadata accessor for Notification(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - v9;
  v11 = (unint64_t *)(v2 + 32);
  v12 = swift_beginAccess(v2 + 32, v36, 0, 0);
  v13 = *(_QWORD *)(v2 + 32);
  v34 = *(unint64_t **)(v13 + 16);
  if (v34)
  {
    v31 = v2;
    v29 = v7;
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v33 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    v33(v10, v13 + v14, v4, v12);
    v7 = (char *)sub_1004B7878(&qword_101407280, (uint64_t (*)(uint64_t))&type metadata accessor for Notification, (uint64_t)&protocol conformance descriptor for Notification);
    swift_bridgeObjectRetain(v13);
    v2 = v4;
    v15 = dispatch thunk of static Equatable.== infix(_:_:)(v10, a1);
    v30 = v5;
    v5 = *(_QWORD *)(v5 + 8);
    ((void (*)(char *, uint64_t))v5)(v10, v4);
    if ((v15 & 1) != 0)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v31 + 16);
      if (!v26)
        return;
LABEL_17:
      swift_retain(v26);
      sub_100B9A924();
      swift_release(v26);
      return;
    }
    v28 = v13;
    if (v34 != (unint64_t *)1)
    {
      v32 = a1;
      v27 = v11;
      v17 = *(_QWORD *)(v30 + 72);
      v18 = v28 + v17 + v14;
      v19 = 1;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v33)(v10, v18, v4);
        v11 = (unint64_t *)(v19 + 1);
        if (__OFADD__(v19, 1))
          break;
        v2 = v4;
        v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v32);
        ((void (*)(char *, uint64_t))v5)(v10, v4);
        if ((v20 & 1) != 0)
          goto LABEL_19;
        ++v19;
        v18 += v17;
        if (v11 == v34)
        {
          v21 = swift_bridgeObjectRelease();
          v5 = v30;
          v2 = v31;
          v7 = v29;
          v11 = v27;
          v33(v29, v32, v4, v21);
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
    v16 = swift_bridgeObjectRelease();
    v7 = v29;
    v5 = v30;
    v2 = v31;
    v33(v29, a1, v4, v16);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, v4, v12);
  }
LABEL_12:
  swift_beginAccess(v11, v35, 33, 0);
  v17 = *v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  *v11 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    v23 = v11;
    goto LABEL_14;
  }
LABEL_22:
  v17 = sub_100D11A58(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
  v23 = v11;
  *v11 = v17;
LABEL_14:
  v25 = *(_QWORD *)(v17 + 16);
  v24 = *(_QWORD *)(v17 + 24);
  if (v25 >= v24 >> 1)
  {
    v17 = sub_100D11A58(v24 > 1, v25 + 1, 1, v17);
    *v23 = v17;
  }
  *(_QWORD *)(v17 + 16) = v25 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v25, v7, v4);
  swift_endAccess(v35);
  v26 = *(_QWORD *)(v2 + 16);
  if (v26)
    goto LABEL_17;
}

id sub_100B9D38C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  id v14;
  objc_super v16;
  _QWORD v17[3];
  uint64_t v18;

  *(_QWORD *)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch] = 0;
  sub_1004CB7BC(a1, (uint64_t)v17, &qword_1013E0230);
  v5 = v18;
  if (v18)
  {
    v6 = sub_1004BB5A4(v17, v18);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v17);
  }
  else
  {
    v11 = 0;
  }
  v12 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  v16.receiver = v2;
  v16.super_class = v12;
  v13 = objc_msgSendSuper2(&v16, "initWithTarget:action:", v11, a2);
  swift_unknownObjectRelease(v11);
  v14 = v13;
  objc_msgSend(v14, "setDelegate:", v14);
  objc_msgSend(v14, "setCancelsTouchesInView:", 0);

  sub_1004CB800(a1, &qword_1013E0230);
  return v14;
}

void sub_100B9D54C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char v34;
  int64_t v35;
  uint64_t v36;
  id v38;
  uint64_t v39;
  void *v40;
  _QWORD v41[5];

  v3 = v2;
  v4 = a1;
  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    if (__CocoaSet.count.getter(a1) != 1)
      goto LABEL_5;
  }
  else if (*(_QWORD *)(a1 + 16) != 1)
  {
LABEL_5:
    objc_msgSend(v3, "setState:", 5);
  }
  v6 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch;
  if (*(_QWORD *)&v3[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch])
  {
    if (v5)
    {
      if (v4 < 0)
        v7 = v4;
      else
        v7 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v8 = __CocoaSet.makeIterator()(v7);
      v9 = sub_1004B8930(0, &qword_101407270, UITouch_ptr);
      v10 = sub_1005A15B8(&qword_101407278, &qword_101407270, UITouch_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v11 = Set.Iterator.init(_cocoa:)(v41, v8, v9, v10);
      v4 = v41[0];
      v36 = v41[1];
      v12 = v41[2];
      v13 = v41[3];
      v14 = v41[4];
    }
    else
    {
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v36 = v4 + 56;
      v12 = ~v18;
      v19 = -v18;
      if (v19 < 64)
        v20 = ~(-1 << v19);
      else
        v20 = -1;
      v14 = v20 & *(_QWORD *)(v4 + 56);
      swift_bridgeObjectRetain(v4);
      v13 = 0;
    }
    v35 = (unint64_t)(v12 + 64) >> 6;
    while (1)
    {
      if (v4 < 0)
      {
        v24 = __CocoaSet.Iterator.next()(v11);
        if (!v24)
          goto LABEL_47;
        v25 = v24;
        v39 = v24;
        v26 = sub_1004B8930(0, &qword_101407270, UITouch_ptr);
        swift_unknownObjectRetain(v25);
        swift_dynamicCast(&v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
        v27 = v40;
        swift_unknownObjectRelease(v25);
        v23 = v13;
        v21 = v14;
        if (!v27)
          goto LABEL_47;
      }
      else
      {
        if (v14)
        {
          v21 = (v14 - 1) & v14;
          v22 = __clz(__rbit64(v14)) | (v13 << 6);
          v23 = v13;
        }
        else
        {
          v28 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            return;
          }
          if (v28 >= v35)
            goto LABEL_47;
          v29 = *(_QWORD *)(v36 + 8 * v28);
          v23 = v13 + 1;
          if (!v29)
          {
            v23 = v13 + 2;
            if (v13 + 2 >= v35)
              goto LABEL_47;
            v29 = *(_QWORD *)(v36 + 8 * v23);
            if (!v29)
            {
              v23 = v13 + 3;
              if (v13 + 3 >= v35)
                goto LABEL_47;
              v29 = *(_QWORD *)(v36 + 8 * v23);
              if (!v29)
              {
                v23 = v13 + 4;
                if (v13 + 4 >= v35)
                  goto LABEL_47;
                v29 = *(_QWORD *)(v36 + 8 * v23);
                if (!v29)
                {
                  v30 = v13 + 5;
                  while (v35 != v30)
                  {
                    v29 = *(_QWORD *)(v36 + 8 * v30++);
                    if (v29)
                    {
                      v23 = v30 - 1;
                      goto LABEL_42;
                    }
                  }
LABEL_47:
                  sub_1004D284C(v4);
                  return;
                }
              }
            }
          }
LABEL_42:
          v21 = (v29 - 1) & v29;
          v22 = __clz(__rbit64(v29)) + (v23 << 6);
        }
        v27 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v22);
        if (!v27)
          goto LABEL_47;
      }
      v31 = *(void **)&v3[v6];
      if (!v31
        || (sub_1004B8930(0, &qword_101407270, UITouch_ptr),
            v32 = v27,
            v33 = v31,
            v34 = static NSObject.== infix(_:_:)(v32, v33),
            v32,
            v33,
            (v34 & 1) == 0))
      {
        objc_msgSend(v3, "ignoreTouch:forEvent:", v27, a2);
      }

      v13 = v23;
      v14 = v21;
    }
  }
  swift_bridgeObjectRetain(v4);
  v16 = (void *)sub_1008581C0(v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    v17 = *(void **)&v3[v6];
    *(_QWORD *)&v3[v6] = v16;
    v38 = v16;

    objc_msgSend(v3, "setState:", 1);
  }
}

id sub_100B9DA2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer);
}

void sub_100B9DA8C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[9];

  v2 = sub_100B79E5C();
  sub_100B9BC30((uint64_t)a1, 1);
  v33 = v2;
  v3 = *(_QWORD *)(v2 + 48);
  Hasher.init(_seed:)(v34, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain_n(v3, 2);
  v32 = a1;
  v4 = a1;
  NSObject.hash(into:)(v34);
  v5 = Hasher._finalize()();
  v6 = -1 << *(_BYTE *)(v3 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_QWORD *)(v3 + 48) + 16 * v7;
      if (*(_BYTE *)(v9 + 8) == 1)
      {
        v10 = *(void **)v9;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v11 = v4;
        sub_1006B8360(v10, 1u);
        v12 = static NSObject.== infix(_:_:)(v10, v11);

        sub_1006B8384(v10, 1u);
        if ((v12 & 1) != 0)
          break;
      }
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_7;
    }

    goto LABEL_23;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = v4;
  if (v15 <= v14)
  {
    v18 = v14 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_100AE204C(v18);
    else
      sub_100AF10B8(v18);
    Hasher.init(_seed:)(v34, *(_QWORD *)(v3 + 40));
    Hasher._combine(_:)(1uLL);
    v19 = v16;
    NSObject.hash(into:)(v34);

    v20 = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v7 = v20 & ~v21;
    if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v22 = ~v21;
      while (1)
      {
        v23 = *(_QWORD *)(v3 + 48) + 16 * v7;
        if (*(_BYTE *)(v23 + 8) == 1)
        {
          v24 = *(void **)v23;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          v25 = v19;
          sub_1006B8360(v24, 1u);
          v26 = static NSObject.== infix(_:_:)(v24, v25);

          sub_1006B8384(v24, 1u);
          if ((v26 & 1) != 0)
            break;
        }
        v7 = (v7 + 1) & v22;
        if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_19;
      }
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
      __break(1u);
LABEL_19:
      v17 = v32;
    }
    else
    {
      v17 = v32;
    }
  }
  else
  {
    v17 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_100AEB3C0();
  }
  *(_QWORD *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
  v27 = *(_QWORD *)(v3 + 48) + 16 * v7;
  *(_QWORD *)v27 = v17;
  *(_BYTE *)(v27 + 8) = 1;
  v28 = *(_QWORD *)(v3 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (!v29)
  {
    *(_QWORD *)(v3 + 16) = v30;

LABEL_23:
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v33 + 48);
    swift_bridgeObjectRetain(v31);
    sub_100B9A254(v3);
    *(_QWORD *)(v33 + 48) = v3;
    swift_bridgeObjectRelease();
    sub_100B9A568(v31);
    swift_release(v33);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

double sub_100B9DE58(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  double result;
  _QWORD v20[9];

  if ((a2 & 1) == 0)
  {
    v3 = sub_100B79E5C();
    sub_100B9BC30((uint64_t)a1, 1);
    v4 = *(_QWORD *)(v3 + 48);
    Hasher.init(_seed:)(v20, *(_QWORD *)(v4 + 40));
    Hasher._combine(_:)(1uLL);
    swift_bridgeObjectRetain_n(v4, 2);
    v5 = a1;
    NSObject.hash(into:)(v20);

    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(v4 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      while (1)
      {
        v10 = *(_QWORD *)(v4 + 48) + 16 * v8;
        if (*(_BYTE *)(v10 + 8) == 1)
        {
          v11 = *(void **)v10;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          v12 = v5;
          sub_1006B8360(v11, 1u);
          v13 = static NSObject.== infix(_:_:)(v11, v12);

          sub_1006B8384(v11, 1u);
          if ((v13 & 1) != 0)
            break;
        }
        v8 = (v8 + 1) & v9;
        if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
      v20[0] = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100AEB3C0();
        v4 = v20[0];
      }
      v15 = *(_QWORD *)(v4 + 48) + 16 * v8;
      v16 = *(void **)v15;
      v17 = *(_BYTE *)(v15 + 8);
      sub_100BA1C50(v8);
      v4 = v20[0];
      swift_bridgeObjectRelease();
      sub_1006B8384(v16, v17);
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
    }
    v18 = *(_QWORD *)(v3 + 48);
    swift_bridgeObjectRetain(v18);
    sub_100B9A254(v4);
    *(_QWORD *)(v3 + 48) = v4;
    swift_bridgeObjectRelease();
    sub_100B9A568(v18);
    swift_release(v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_100B9E0F8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  double result;
  _QWORD v19[9];

  v2 = sub_100B79E5C();
  sub_100B9BC30((uint64_t)a1, 1);
  v3 = *(_QWORD *)(v2 + 48);
  Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain_n(v3, 2);
  v4 = a1;
  NSObject.hash(into:)(v19);

  v5 = Hasher._finalize()();
  v6 = -1 << *(_BYTE *)(v3 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_QWORD *)(v3 + 48) + 16 * v7;
      if (*(_BYTE *)(v9 + 8) == 1)
      {
        v10 = *(void **)v9;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v11 = v4;
        sub_1006B8360(v10, 1u);
        v12 = static NSObject.== infix(_:_:)(v10, v11);

        sub_1006B8384(v10, 1u);
        if ((v12 & 1) != 0)
          break;
      }
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
    v19[0] = v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEB3C0();
      v3 = v19[0];
    }
    v14 = *(_QWORD *)(v3 + 48) + 16 * v7;
    v15 = *(void **)v14;
    v16 = *(_BYTE *)(v14 + 8);
    sub_100BA1C50(v7);
    v3 = v19[0];
    swift_bridgeObjectRelease();
    sub_1006B8384(v15, v16);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  v17 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain(v17);
  sub_100B9A254(v3);
  *(_QWORD *)(v2 + 48) = v3;
  swift_bridgeObjectRelease();
  sub_100B9A568(v17);
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100B9E36C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  double *v19;
  _QWORD v21[2];
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;
  _BYTE v25[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v8 = (void *)Strong;
  v9 = Notification.userInfo.getter(Strong);
  if (!v9)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_14:

    sub_1004CB800((uint64_t)&v23, &qword_1013E0230);
    return;
  }
  v10 = v9;
  v21[0] = 0xD00000000000001DLL;
  v21[1] = 0x8000000100FB5A90;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1008432BC((uint64_t)v22), (v12 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v22);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_14;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E49B8);
  if ((swift_dynamicCast(v22, &v23, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
  {
    v14 = v22[0];
    v15 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v16);

    if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
      objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
    }
    v18 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v3, v17);
    swift_bridgeObjectRetain(v14);
    v19 = sub_100BB3270(v18, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v19);
    swift_bridgeObjectRelease();
    sub_100B7E664((uint64_t)v6, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
  }

}

void sub_100B9E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "calendarDayDidChange");

  }
}

void sub_100B9E6E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v8 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v8 + 16) = a1;
  v12[4] = a4;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(_QWORD *)"";
  v12[2] = sub_1005D2FC0;
  v12[3] = a5;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = a1;
  swift_release(v10);
  sub_10070FE18(v9);
  _Block_release(v9);

}

void sub_100B9E788()
{
  qword_101406D00 = 0x4030000000000000;
}

void sub_100B9E798()
{
  qword_101406D08 = 0x4059800000000000;
}

id sub_100B9E7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  id v22;
  int v23;
  void *v24;
  int v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unsigned int *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  Class isa;
  id result;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD v68[3];
  unsigned __int8 v69;
  char v70[32];

  v62 = a1;
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  *(_QWORD *)&v63 = *(_QWORD *)(v5 - 8);
  *((_QWORD *)&v63 + 1) = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v64 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v59 - v12;
  v14 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v67 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v59 - v18;
  a3 += 16;
  swift_beginAccess(a3, v70, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
  {
    sub_1004B8930(0, &qword_1013E14D0, NSCollectionLayoutSection_ptr);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v13, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v8);
    UICollectionLayoutListConfiguration.init(appearance:)(v13);
    v38 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v19, a2);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    return v38;
  }
  v21 = (void *)Strong;
  v60 = v15;
  v61 = a2;
  v59 = v14;
  v65 = v9;
  v66 = v8;
  v22 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(v68, v62);

  v23 = v69;
  v24 = v21;
  if ((*((_BYTE *)v21 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) & 1) != 0
    && *((_BYTE *)v21 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions))
  {
    v25 = 1;
    v26 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.grouped(_:);
  }
  else
  {
    v25 = 0;
    v26 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
  }
  v28 = v65;
  v27 = v66;
  v29 = *((_QWORD *)&v63 + 1);
  v30 = v64;
  v31 = v63;
  *((_QWORD *)&v63 + 1) = v68[1];
  v64 = (char *)v68[0];
  *(_QWORD *)&v63 = v68[2];
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v30, *v26, v66);
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v13, v30, v27);
  v32 = v67;
  UICollectionLayoutListConfiguration.init(appearance:)(v13);
  v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  if (!v25)
    v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v7, *v33, v29);
  UICollectionLayoutListConfiguration.headerMode.setter(v7);
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  UICollectionLayoutListConfiguration.backgroundColor.setter(v34);
  v35 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v24);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_100BBA580, v35);
  v36 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v24);
  v37 = swift_allocObject(&unk_1012969F0, 25, 7);
  *(_QWORD *)(v37 + 16) = v36;
  *(_BYTE *)(v37 + 24) = v25;
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_100BBA588, v37);
  sub_1004B8930(0, &qword_1013E14D0, NSCollectionLayoutSection_ptr);
  v38 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v32, v61);
  if ((v23 + 64) <= 0x3Du && v23 == 192 && v64 == (char *)1 && v63 == 0)
  {
    v39 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    sub_1004DD884((id)1, 0, 0, 0xC0u);
    v40 = objc_msgSend(v39, "fractionalWidthDimension:", 1.0);
    if (qword_1013DDD60 != -1)
      swift_once(&qword_1013DDD60, sub_100B9E798);
    v41 = objc_msgSend(v39, "absoluteDimension:", *(double *)&qword_101406D08);
    v42 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v40, v41);

    v43 = v42;
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v43, v44, 5);

    v46 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v47 = swift_allocObject(v46, 40, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v47 + 32) = v45;
    v68[0] = v47;
    specialized Array._endMutation()(v47);
    v48 = v68[0];
    sub_1004B8930(0, &qword_101407380, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    v49 = v45;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v38, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

  }
  result = objc_msgSend(v24, "view");
  if (result)
  {
    v52 = result;
    objc_msgSend(result, "directionalLayoutMargins");
    v54 = v53;
    v56 = v55;

    v57 = v59;
    v58 = v60;
    if (qword_1013DDD58 != -1)
      swift_once(&qword_1013DDD58, sub_100B9E788);
    objc_msgSend(v38, "setContentInsets:", 0.0, v54, *(double *)&qword_101406D00, v56);
    sub_1004DD8A4(v64, *((id *)&v63 + 1), v63, v23);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v57);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v66);
    return v38;
  }
  __break(1u);
  return result;
}

id sub_100B9EDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  id v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  Class isa;
  _QWORD aBlock[5];
  uint64_t v40;
  _BYTE v41[24];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - v12;
  a2 += 16;
  swift_beginAccess(a2, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = sub_100B787A8();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1, v17);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      sub_1004B84E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v19 = swift_allocObject(&unk_101296568, 24, 7);
      swift_unknownObjectWeakInit(v19 + 16, v15);
      sub_1004B8460((uint64_t)v13, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v20 = *(unsigned __int8 *)(v8 + 80);
      v21 = (v20 + 24) & ~v20;
      v22 = swift_allocObject(&unk_101296A18, v21 + v9, v20 | 7);
      *(_QWORD *)(v22 + 16) = v19;
      sub_1004B84E0((uint64_t)v11, v22 + v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v24 = String._bridgeToObjectiveC()();
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v28 = v27;

      swift_retain(v22);
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      aBlock[4] = sub_100BBA598;
      v40 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100B9F5B4;
      aBlock[3] = &unk_101296A30;
      v30 = _Block_copy(aBlock);
      v31 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v29, v30);

      _Block_release(v30);
      swift_release(v40);
      v32 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v33 = swift_allocObject(v32, 40, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v33 + 32) = v31;
      aBlock[0] = v33;
      specialized Array._endMutation()(v33);
      v34 = aBlock[0];
      sub_1004B8930(0, &qword_101407388, UIContextualAction_ptr);
      v35 = v31;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v34);
      v18 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

      swift_release(v22);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return v18;
    }

    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E3830);
  }
  return 0;
}

double sub_100B9F1C4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  _BYTE v33[24];

  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v17 = (void *)Strong;
    v31 = a3;
    v32 = a4;
    v18 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    v19 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 5, 5, v19);
    sub_100BD0ED4(v18, (uint64_t)v15);
    v21 = v20;
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v22 = sub_1004B804C(&qword_1014072D0);
    v23 = *(unsigned __int8 *)(v11 + 80);
    v24 = (v23 + 32) & ~v23;
    v25 = v23 | 7;
    v26 = swift_allocObject(v22, v24 + *(_QWORD *)(v11 + 72), v23 | 7);
    *(_OWORD *)(v26 + 16) = xmmword_100EF5E40;
    sub_1004B8460(a6, v26 + v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((v21 & 1) != 0)
    {
      sub_100B92EB4(v26);
      swift_setDeallocating(v26);
      swift_arrayDestroy(v26 + v24, *(_QWORD *)(v26 + 16), v10);
      swift_deallocClassInstance(v26, 32, 7);
      ((void (*)(_QWORD))v31)(0);

    }
    else
    {
      sub_1004B8460(a6, (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
      v28 = swift_allocObject(&unk_101296A90, v24 + v12, v25);
      v29 = v32;
      *(_QWORD *)(v28 + 16) = v31;
      *(_QWORD *)(v28 + 24) = v29;
      sub_1004B84E0((uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_retain(v29);
      sub_100B9397C(v26, (uint64_t)sub_100BBA740, v28);
      swift_bridgeObjectRelease(v26);

      *(_QWORD *)&result = swift_release(v28).n128_u64[0];
    }
  }
  else
  {
    a3();
  }
  return result;
}

uint64_t sub_100B9F428(uint64_t a1, uint64_t (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, __n128);

  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    goto LABEL_6;
  v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_1004B8460(a1 + v14, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRetain(a1);
  v15 = sub_100BD121C((uint64_t)v12, a4);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if ((v15 & 1) != 0)
  {
    v10 = swift_bridgeObjectRelease(a1);
    v16 = 1;
    return a2(v16, v10);
  }
  if (v13 == 1)
  {
    v10 = swift_bridgeObjectRelease(a1);
LABEL_6:
    v16 = 0;
    return a2(v16, v10);
  }
  v23 = a3;
  v24 = a2;
  v17 = *(_QWORD *)(v9 + 72);
  v18 = a1 + v17 + v14;
  v19 = 1;
  while (1)
  {
    result = sub_1004B8460(v18, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v21 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    v22 = sub_100BD121C((uint64_t)v12, a4);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((v22 & 1) != 0)
    {
      v10 = swift_bridgeObjectRelease(a1);
      v16 = 1;
      goto LABEL_13;
    }
    ++v19;
    v18 += v17;
    if (v21 == v13)
    {
      v10 = swift_bridgeObjectRelease(a1);
      v16 = 0;
LABEL_13:
      a2 = v24;
      return a2(v16, v10);
    }
  }
  __break(1u);
  return result;
}

void sub_100B9F5B4(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_101296A68, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_10087C388, v9);
  swift_release(v6);
  swift_release(v9);

}

void sub_100B9F664(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v26 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v8 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UIListSeparatorConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  if (!Strong)
  {
    v16(a4, a1, v11);
    return;
  }
  v17 = (void *)Strong;
  v25 = a4;
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v14, a1, v11);
  v19 = IndexPath.item.getter(v18);
  if (!v19 && (a3 & 1) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v26);
    v19 = UIListSeparatorConfiguration.topSeparatorVisibility.setter(v10);
  }
  v20 = IndexPath.item.getter(v19);
  v21 = objc_msgSend(v17, "collectionView");
  if (!v21)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v22 = v21;
  v23 = (char *)objc_msgSend(v21, "numberOfItemsInSection:", IndexPath.section.getter());

  if (__OFSUB__(v23, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((char *)v20 == v23 - 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v26);
    UIListSeparatorConfiguration.bottomSeparatorVisibility.setter(v10);
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v25, v14, v11);
}

void sub_100B9F854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _BYTE v16[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
    v13 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider + 8);
    v14 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache);
    swift_unknownObjectRetain(v12);
    v15 = v14;
    a5(a1, a2, a3, v12, v13, v15, v11);

    swift_unknownObjectRelease(v12);
  }
}

uint64_t sub_100B9F920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[24];

  v11 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (!Strong)
    return 0;
  v15 = (void *)Strong;
  v16 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
  sub_1004B8460(a3, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v17 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 0, 1, v17);
  if (v16 == 1)
  {
    v18 = _s8GridItemCMa(0);
  }
  else
  {
    v18 = _s11iOSListItemCMa(0);
    a5 = a6;
  }
  v19 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a5, a2, v13, v18, v17);

  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3830);
  return v19;
}

unint64_t sub_100B9FA78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  NSIndexPath v35;
  void *v36;
  Class isa;
  _BYTE *v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  NSString v45;
  Class v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  NSString v64;
  Class v65;
  id v66;
  _QWORD v67[2];
  _QWORD v68[3];
  char v69[24];

  v10 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
    return 0;
  v15 = (char *)Strong;
  v16 = (void *)sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v17 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v10);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  result = IndexPath.section.getter(v18);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v17 + 16))
  {
    v67[1] = a4;
    v20 = v17 + 32 * result;
    v22 = *(void **)(v20 + 32);
    v21 = *(void **)(v20 + 40);
    v23 = *(_QWORD *)(v20 + 48);
    v24 = *(_BYTE *)(v20 + 56);
    sub_1004DD884(v22, v21, v23, v24);
    swift_bridgeObjectRelease(v17);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v25 == a2 && v26 == a3)
    {
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v28 = v26;
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v25, v26, 0);
      swift_bridgeObjectRelease(v28);
      if ((v29 & 1) == 0)
      {
        if (a2 == 0xD00000000000001BLL && a3 == 0x8000000100FB2D70
          || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD00000000000001BLL, 0x8000000100FB2D70, 0) & 1) != 0)
        {
          v30 = String._bridgeToObjectiveC()();
          v68[0] = _s13GridSeparatorCMa();
          v31 = sub_1004B804C(&qword_1014073B0);
          String.init<A>(describing:)(v68, v31);
          v33 = v32;
          v34 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v33);
          v35.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v36 = a1;
          isa = v35.super.isa;
          v38 = objc_msgSend(v36, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v30, v34, v35.super.isa);
          sub_1004DD8B8(v22, v21, v23, v24);

          return (unint64_t)v38;
        }
        if (a2 == 0xD00000000000001DLL && a3 == 0x8000000100FB2D50
          || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD00000000000001DLL, 0x8000000100FB2D50, 0) & 1) != 0)
        {
          v58 = String._bridgeToObjectiveC()();
          v59 = _s18iCloudStatusFooterCMa();
          v68[0] = v59;
          v60 = sub_1004B804C(&qword_1014073B8);
          String.init<A>(describing:)(v68, v60);
          v62 = v61;
          v63 = a1;
          v64 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v62);
          v65 = IndexPath._bridgeToObjectiveC()().super.isa;
          v66 = objc_msgSend(v63, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v58, v64, v65);
          sub_1004DD8B8(v22, v21, v23, v24);

          v38 = (_BYTE *)swift_dynamicCastClass(v66, v59);
          if (!v38)

          return (unint64_t)v38;
        }
        sub_1004DD8B8(v22, v21, v23, v24);

        return 0;
      }
    }
    v39 = String._bridgeToObjectiveC()();
    v40 = _s13SectionHeaderCMa();
    v68[0] = v40;
    v41 = sub_1004B804C(&qword_1014073A8);
    String.init<A>(describing:)(v68, v41);
    v43 = v42;
    v44 = a1;
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    v46 = IndexPath._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(v44, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v39, v45, v46);

    v48 = swift_dynamicCastClass(v47, v40);
    v38 = (_BYTE *)v48;
    if (v48)
    {
      v49 = v48 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate;
      *(_QWORD *)(v49 + 8) = &off_1012963E0;
      swift_unknownObjectWeakAssign(v49, v15);
      v50 = &v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
      v51 = *(void **)&v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
      v52 = *(void **)&v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                         + 8];
      v53 = *(_QWORD *)&v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                          + 16];
      *(_QWORD *)v50 = v22;
      *((_QWORD *)v50 + 1) = v21;
      *((_QWORD *)v50 + 2) = v23;
      v54 = v50[24];
      v50[24] = v24;
      sub_1004DD884(v22, v21, v23, v24);
      sub_1004DD884(v22, v21, v23, v24);
      sub_1004DD8A4(v51, v52, v53, v54);
      sub_1004DB7E8();
      sub_1004DD8B8(v22, v21, v23, v24);
      v55 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections];
      swift_beginAccess(&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections], v68, 0, 0);
      v56 = *v55;
      swift_bridgeObjectRetain(v56);
      LOBYTE(v52) = sub_100622468((uint64_t)v22, v21, v23, v24, v56);
      swift_bridgeObjectRelease(v56);
      v57 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle;
      v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
      v38[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = v52 & 1;
      sub_1004DB940();
      v38[v57] = 0;
    }
    else
    {

    }
    sub_1004DD8B8(v22, v21, v23, v24);

    return (unint64_t)v38;
  }
  __break(1u);
  return result;
}

void sub_100BA0000(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong
    && (v6 = Strong, v7 = objc_msgSend(Strong, "menu"), v6, v7))
  {
    v8 = objc_msgSend(v7, "children");
    v9 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v11 = v10;
      else
        v11 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v12 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v10);
      if (v12 >= 1)
        goto LABEL_5;
    }
    else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_5:
      a1(v10);

      swift_bridgeObjectRelease(v10);
      return;
    }
    swift_bridgeObjectRelease(v10);
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3389, "No menu elements present to be represented in overflow as inline menu elements ", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 3389, (uint64_t)"No menu elements present to be represented in overflow as inline menu elements ", 79, 2u);
    a1((uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3383, "No menu present to be represented in overflow as inline menu elements", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 3383, (uint64_t)"No menu present to be represented in overflow as inline menu elements", 69, 2u);
    a1((uint64_t)_swiftEmptyArrayStorage);
  }
}

id sub_100BA0268(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double *v21;
  _QWORD *v22;
  char v23;
  _BYTE v24[16];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = objc_msgSend(a2, "zoneID", v11);
  sub_100B38068((uint64_t)v8);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return (id)sub_1004CB800((uint64_t)v8, &qword_1013E0270);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  result = objc_msgSend(v3, "collectionView");
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v17)
    {
      v18 = type metadata accessor for IndexPath(0);
      v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

      v20 = v3;
      v21 = (double *)sub_100BB19EC(v19, (uint64_t)v20);
      swift_bridgeObjectRelease();

    }
    else
    {
      v21 = _swiftEmptyArrayStorage;
    }
    v22 = sub_100BCDE20((uint64_t)v21);
    swift_bridgeObjectRelease();
    v23 = sub_100C9DDEC((uint64_t)v13, (uint64_t)v22);
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      sub_100BB23B4(a1, v3);
    return (id)sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100BA0530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  double v9;
  _QWORD v10[4];
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  v2 = v1;
  v3 = Notification.userInfo.getter(a1);
  if (v3)
  {
    v4 = v3;
    v10[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
    v10[1] = v5;
    AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v6 = sub_1008432BC((uint64_t)v11), (v7 & 1) != 0))
    {
      sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1004B89A4((uint64_t)v11);
    if (*((_QWORD *)&v13 + 1))
    {
      type metadata accessor for CGRect(0);
      if ((swift_dynamicCast(v10, &v12, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
      {
        v9 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight);
        *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight) = v10[3];
        sub_100B88118(v9);
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v12, &qword_1013E0230);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"keyboardWillShowOrDock(_:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3431, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyboardWillShowOrDock(_:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 3431, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

uint64_t sub_100BA06E0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

ValueMetadata *type metadata accessor for CRLiOSFolderGridViewController.RefreshSuspensionReason()
{
  return &type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason;
}

unint64_t sub_100BA0848()
{
  unint64_t result;

  result = qword_101407248;
  if (!qword_101407248)
  {
    result = swift_getWitnessTable(&unk_100F292A8, &type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
    atomic_store(result, (unint64_t *)&qword_101407248);
  }
  return result;
}

void sub_100BA088C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  int64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v3 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  __chkstk_darwin(v3);
  v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = *v1 + 56;
  v7 = -1 << *(_BYTE *)(*v1 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(v6 + 8 * (v8 >> 6))) != 0)
  {
    v32 = v1;
    v9 = ~v7;
    swift_retain(v5);
    v10 = _HashTable.previousHole(before:)(a1, v6, v9);
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v11 = (v10 + 1) & v9;
      v33 = v5;
      v34 = v6;
      do
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v8);
        Hasher.init(_seed:)(v38, *(_QWORD *)(v5 + 40));
        v13 = *(_QWORD *)(v12 + 24);
        ObjectType = swift_getObjectType(*(_QWORD *)(v12 + 16));
        v15 = *(void (**)(uint64_t, uint64_t, __n128))(v13 + 32);
        v16 = swift_retain(v12);
        v17 = a1;
        v18 = v35;
        v15(ObjectType, v13, v16);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = v37;
        dispatch thunk of Hashable.hash(into:)(v38, v37, v19);
        v21 = v18;
        a1 = v17;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v20);
        v22 = Hasher._finalize()();
        swift_release(v12);
        v23 = v22 & v9;
        if (v17 >= (uint64_t)v11)
        {
          if (v23 < v11)
          {
            v5 = v33;
            v6 = v34;
          }
          else
          {
            v5 = v33;
            v6 = v34;
            if (v17 >= v23)
              goto LABEL_12;
          }
        }
        else
        {
          v5 = v33;
          v6 = v34;
          if (v23 >= v11 || v17 >= v23)
          {
LABEL_12:
            v24 = *(_QWORD *)(v5 + 48);
            v25 = (_QWORD *)(v24 + 8 * v17);
            v26 = (_QWORD *)(v24 + 8 * v8);
            if (v17 != v8 || (a1 = v8, v25 >= v26 + 1))
            {
              *v25 = *v26;
              a1 = v8;
            }
          }
        }
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    *(_QWORD *)(v6 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v5);
    v1 = v32;
  }
  else
  {
    *(_QWORD *)(v6 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v27 = *v1;
  v28 = *(_QWORD *)(*v1 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
  }
}

void sub_100BA0B28(int64_t a1)
{
  sub_100BA23D0(a1, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&qword_1013DE630, (uint64_t)&protocol conformance descriptor for UUID);
}

void sub_100BA0B44(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA0D08(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  void *v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[9];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v30 = v3;
      v31 = v4;
      do
      {
        v11 = 32 * v6;
        v12 = *(_QWORD *)(v3 + 40);
        v13 = *(_QWORD *)(v3 + 48) + 32 * v6;
        v14 = v7;
        v15 = *(void **)v13;
        v16 = *(void **)(v13 + 8);
        v17 = v2;
        v18 = *(_QWORD *)(v13 + 16);
        v19 = *(_BYTE *)(v13 + 24);
        Hasher.init(_seed:)(v32, v12);
        sub_1004DD884(v15, v16, v18, v19);
        sub_1009E3D90((uint64_t)v32, (uint64_t)v15, (uint64_t)v16, v18, v19);
        v20 = Hasher._finalize()();
        v21 = v16;
        v7 = v14;
        v22 = v18;
        v2 = v17;
        sub_1004DD8B8(v15, v21, v22, v19);
        v23 = v20 & v14;
        if (v17 >= (uint64_t)v9)
        {
          if (v23 < v9)
          {
            v3 = v30;
            v4 = v31;
          }
          else
          {
            v3 = v30;
            v4 = v31;
            if (v17 >= v23)
              goto LABEL_12;
          }
        }
        else
        {
          v3 = v30;
          v4 = v31;
          if (v23 >= v9 || v17 >= v23)
          {
LABEL_12:
            v24 = *(_QWORD *)(v3 + 48);
            v25 = (_OWORD *)(v24 + 32 * v17);
            v26 = (_OWORD *)(v24 + v11);
            if (32 * v17 != v11 || (v2 = v6, v25 >= v26 + 2))
            {
              v10 = v26[1];
              *v25 = *v26;
              v25[1] = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v27 = *(_QWORD *)(v3 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v29;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA0F34(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[9];

  v34 = type metadata accessor for CRLBoardIdentifier(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v33 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v35 = (v11 + 1) & v10;
      v36 = v10;
      v12 = *(_QWORD *)(v3 + 72);
      do
      {
        v13 = v7;
        v14 = v12;
        v15 = v12 * v9;
        sub_1004B8460(*(_QWORD *)(v6 + 48) + v12 * v9, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)(v37, *(_QWORD *)(v6 + 40));
        v16 = type metadata accessor for UUID(0);
        v17 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v37, v16, v17);
        v18 = &v5[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
        v19 = *(_QWORD *)v18;
        v20 = *((_QWORD *)v18 + 1);
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v37, v19, v20);
        swift_bridgeObjectRelease();
        v21 = Hasher._finalize()();
        sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
        v22 = v36;
        v23 = v21 & v36;
        if (a1 >= (uint64_t)v35)
        {
          if (v23 < v35)
          {
            v7 = v13;
            v12 = v14;
            goto LABEL_5;
          }
          v7 = v13;
          v12 = v14;
          if (a1 < v23)
            goto LABEL_5;
        }
        else
        {
          v7 = v13;
          v12 = v14;
          if (v23 < v35 && a1 < v23)
            goto LABEL_5;
        }
        v24 = *(_QWORD *)(v6 + 48);
        v25 = v12 * a1;
        v26 = v24 + v12 * a1;
        v27 = v24 + v15;
        if (v12 * a1 < v15 || v26 >= v27 + v12)
        {
          swift_arrayInitWithTakeFrontToBack(v26, v27, 1, v34);
          goto LABEL_17;
        }
        a1 = v9;
        if (v25 != v15)
        {
          swift_arrayInitWithTakeBackToFront(v26);
LABEL_17:
          v22 = v36;
          a1 = v9;
        }
LABEL_5:
        v9 = (v9 + 1) & v22;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v6);
    v1 = v33;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v28 = *v1;
  v29 = *(_QWORD *)(*v1 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v28 + 16) = v31;
    ++*(_DWORD *)(v28 + 36);
  }
}

void sub_100BA1218(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  int v14;
  Swift::UInt64 v15;
  Swift::UInt64 v16;
  Swift::UInt64 v17;
  Swift::UInt64 v18;
  unint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26[9];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = *(_QWORD *)(v3 + 48) + 32 * v6;
        v12 = *(_QWORD *)v11;
        v13 = *(_QWORD *)(v11 + 8);
        v14 = *(unsigned __int8 *)(v11 + 16);
        v15 = *(_QWORD *)(v11 + 24);
        Hasher.init(_seed:)(v26, *(_QWORD *)(v3 + 40));
        if (v14 == 1)
        {
          v12 = qword_100F29398[v12];
          v13 = v12;
        }
        if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0)
          v16 = v12;
        else
          v16 = 0;
        Hasher._combine(_:)(v16);
        if ((v13 & 0x7FFFFFFFFFFFFFFFLL) != 0)
          v17 = v13;
        else
          v17 = 0;
        Hasher._combine(_:)(v17);
        if ((v15 & 0x7FFFFFFFFFFFFFFFLL) != 0)
          v18 = v15;
        else
          v18 = 0;
        Hasher._combine(_:)(v18);
        v19 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v19 < v9)
            goto LABEL_5;
        }
        else if (v19 >= v9)
        {
          goto LABEL_22;
        }
        if (v2 >= (uint64_t)v19)
        {
LABEL_22:
          v20 = *(_QWORD *)(v3 + 48);
          v21 = (_OWORD *)(v20 + 32 * v2);
          v22 = (_OWORD *)(v20 + 32 * v6);
          if (v2 != v6 || (v2 = v6, v21 >= v22 + 2))
          {
            v10 = v22[1];
            *v21 = *v22;
            v21[1] = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v23 = *(_QWORD *)(v3 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v25;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA1410(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v10 = type metadata accessor for CalculateExpression(0);
      v11 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
      do
      {
        v12 = dispatch thunk of Hashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40), v10, v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA15E4(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18[9];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(v10);
        v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA178C(int64_t a1)
{
  sub_100BA23D0(a1, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, &qword_101405600, (uint64_t)&protocol conformance descriptor for UTType);
}

void sub_100BA17A8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[8];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[10];

  v27 = type metadata accessor for UUID(0);
  v26[3] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v26[2] = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v4);
  v26[1] = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v26 - v10;
  v26[0] = v1;
  v12 = *v1;
  v13 = *v1 + 56;
  v14 = -1 << *(_BYTE *)(*v1 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    v16 = ~v14;
    v29 = v12;
    swift_retain(v12);
    v17 = _HashTable.previousHole(before:)(a1, v13, v16);
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v28 = (v17 + 1) & v16;
      v18 = *(_QWORD *)(v6 + 72);
      v26[5] = v8 + 8;
      v26[6] = v16;
      v26[7] = v13;
      v19 = v29;
      sub_1004B8460(*(_QWORD *)(v29 + 48) + v18 * v15, (uint64_t)v11, type metadata accessor for CRLSELibraryViewModel.Item);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v19 + 40));
      sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLSELibraryViewModel.Item);
      v20 = (char *)&loc_100BA19A0 + *((int *)qword_100BA1C40 + swift_getEnumCaseMultiPayload(v8, v30));
      __asm { BR              X9 }
    }
    v21 = v29;
    *(_QWORD *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v21);
  }
  else
  {
    *(_QWORD *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v22 = *(_QWORD *)v26[0];
  v23 = *(_QWORD *)(*(_QWORD *)v26[0] + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
    JUMPOUT(0x100BA1C40);
  }
  *(_QWORD *)(v22 + 16) = v25;
  ++*(_DWORD *)(v22 + 36);
}

void sub_100BA1C50(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[9];

  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    _HashTable.previousHole(before:)(a1, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + 16 * v6 + 8);
      Hasher.init(_seed:)(v12, *(_QWORD *)(v3 + 40));
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x100BA1E8CLL);
  }
  *(_QWORD *)(v3 + 16) = v11;
  ++*(_DWORD *)(v3 + 36);
}

void sub_100BA1E9C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[9];

  v3 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v6 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v43 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = *v1;
  v12 = *v1 + 56;
  v13 = -1 << *(_BYTE *)(*v1 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    v42 = v1;
    v15 = ~v13;
    v44 = v11;
    v45 = v12;
    swift_retain(v11);
    v16 = a1;
    v17 = _HashTable.previousHole(before:)(a1, v45, v15);
    v18 = v45;
    if ((*(_QWORD *)(v45 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v19 = (v17 + 1) & v15;
      v20 = *(_QWORD *)(v6 + 72);
      v21 = v44;
      while (1)
      {
        v22 = v15;
        v23 = v20;
        v24 = v20 * v14;
        sub_1004B8460(*(_QWORD *)(v21 + 48) + v20 * v14, (uint64_t)v10, type metadata accessor for CRLSpotlightManager.ChangeType);
        Hasher.init(_seed:)(v47, *(_QWORD *)(v21 + 40));
        v25 = v43;
        sub_1004B8460((uint64_t)v10, v43, type metadata accessor for CRLSpotlightManager.ChangeType);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v46);
        sub_1004B84E0(v25, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
        Hasher._combine(_:)(EnumCaseMultiPayload == 1);
        v27 = type metadata accessor for UUID(0);
        v28 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v47, v27, v28);
        v29 = &v5[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
        v31 = *(_QWORD *)v29;
        v30 = *((_QWORD *)v29 + 1);
        swift_bridgeObjectRetain(v30);
        String.hash(into:)(v47, v31, v30);
        swift_bridgeObjectRelease();
        sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
        v32 = Hasher._finalize()();
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSpotlightManager.ChangeType);
        v33 = v32 & v22;
        v15 = v22;
        v21 = v44;
        if (v16 >= (uint64_t)v19)
          break;
        v20 = v23;
        if (v33 < v19)
          goto LABEL_11;
LABEL_12:
        v34 = *(_QWORD *)(v44 + 48);
        v35 = v20 * v16;
        v36 = v34 + v20 * v16;
        v37 = v34 + v24;
        if (v20 * v16 < v24 || v36 >= v37 + v20)
        {
          swift_arrayInitWithTakeFrontToBack(v36, v37, 1, v46);
        }
        else
        {
          v16 = v14;
          if (v35 == v24)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v36);
        }
        v20 = v23;
        v16 = v14;
LABEL_6:
        v14 = (v14 + 1) & v22;
        v18 = v45;
        if (((*(_QWORD *)(v45 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          goto LABEL_18;
      }
      v20 = v23;
      if (v33 < v19)
        goto LABEL_6;
LABEL_11:
      if (v16 < (uint64_t)v33)
        goto LABEL_6;
      goto LABEL_12;
    }
    v21 = v44;
LABEL_18:
    *(_QWORD *)(v18 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v16) - 1;
    swift_release(v21);
    v1 = v42;
  }
  else
  {
    *(_QWORD *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v38 = *v1;
  v39 = *(_QWORD *)(*v1 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v38 + 16) = v41;
    ++*(_DWORD *)(v38 + 36);
  }
}

void sub_100BA2230(unint64_t a1)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(v3);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), *v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA23B4(int64_t a1)
{
  sub_100BA23D0(a1, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_101405480, (uint64_t)&protocol conformance descriptor for IndexPath);
}

void sub_100BA23D0(int64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a3;
  v39 = a4;
  v37 = a2;
  v6 = a2(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = *v4;
  v10 = *v4 + 56;
  v11 = -1 << *(_BYTE *)(*v4 + 32);
  v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(_QWORD *)(v10 + 8 * (v12 >> 6))) != 0)
  {
    v34 = v4;
    v13 = ~v11;
    swift_retain(v9);
    v14 = _HashTable.previousHole(before:)(a1, v10, v13);
    if ((*(_QWORD *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      v36 = (v14 + 1) & v13;
      v15 = *(_QWORD *)(v40 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      do
      {
        v16 = v10;
        v17 = v15;
        v18 = v15 * v12;
        v35(v8, *(_QWORD *)(v9 + 48) + v15 * v12, v6);
        v19 = *(_QWORD *)(v9 + 40);
        v20 = sub_1004B7878(v38, v37, v39);
        v21 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v6, v20);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v6);
        v22 = v21 & v13;
        if (a1 >= (uint64_t)v36)
        {
          if (v22 >= v36 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            v25 = *(_QWORD *)(v9 + 48);
            v15 = v17;
            v26 = v17 * a1;
            v27 = v25 + v17 * a1;
            v28 = v25 + v18;
            if (v17 * a1 < v18 || v27 >= v28 + v17)
            {
              swift_arrayInitWithTakeFrontToBack(v27, v28, 1, v6);
              a1 = v12;
            }
            else
            {
              a1 = v12;
              if (v26 != v18)
              {
                swift_arrayInitWithTakeBackToFront(v27);
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v36 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        v15 = v17;
LABEL_5:
        v12 = (v12 + 1) & v13;
        v10 = v16;
      }
      while (((*(_QWORD *)(v16 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v9);
    v4 = v34;
  }
  else
  {
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v29 = *v4;
  v30 = *(_QWORD *)(*v4 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
}

void sub_100BA2658(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_100BA27F8(_QWORD *a1, char a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD v7[2];

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v5 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v5 = (_QWORD *)sub_100D16724(v5);
  v6 = v5[2];
  v7[0] = (char *)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_100BA28F4(v7, a2 & 1);
  *a1 = v5;
}

uint64_t sub_100BA2888(uint64_t *a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_100D16844(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

void sub_100BA28F4(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  Swift::Int v44;
  Swift::Int v45;
  unint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  Swift::Int v65;
  unint64_t v66;
  uint64_t v67;
  Swift::Int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::Int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  Swift::Int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  Swift::Int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  Swift::Int v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  char v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  BOOL v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  char *v184;
  _QWORD *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  Swift::Int v191;
  Swift::Int v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  int v206;
  Swift::Int v207;
  uint64_t v208;
  Swift::Int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;

  v206 = a2;
  v219 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v199 = *(_QWORD *)(v219 - 8);
  v3 = __chkstk_darwin(v219);
  v194 = (uint64_t)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v208 = (uint64_t)&v184 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v184 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v184 - v11;
  v13 = __chkstk_darwin(v10);
  v212 = (uint64_t)&v184 - v14;
  v15 = __chkstk_darwin(v13);
  v213 = (uint64_t)&v184 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v184 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v184 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v184 - v24;
  v26 = __chkstk_darwin(v23);
  v196 = (uint64_t)&v184 - v27;
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v184 - v29;
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v184 - v32;
  v34 = __chkstk_darwin(v31);
  v188 = (uint64_t)&v184 - v35;
  __chkstk_darwin(v34);
  v189 = (uint64_t)&v184 - v36;
  v37 = a1[1];
  v38 = _minimumMergeRunLength(_:)(v37);
  if (v38 >= v37)
  {
    if (v37 < 0)
      goto LABEL_169;
    if (v37)
      sub_100BA7654(0, v37, 1, (uint64_t)a1, v206 & 1);
    return;
  }
  if (v37 >= 0)
    v39 = v37;
  else
    v39 = v37 + 1;
  if (v37 < -1)
    goto LABEL_177;
  v201 = v9;
  v202 = v12;
  v190 = v19;
  v193 = v22;
  v184 = v30;
  v186 = v33;
  v191 = v38;
  if (v37 < 2)
  {
    v43 = (char *)_swiftEmptyArrayStorage;
    v197 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80));
    v185 = _swiftEmptyArrayStorage;
    if (v37 != 1)
    {
      v46 = _swiftEmptyArrayStorage[2];
LABEL_133:
      if (v46 >= 2)
      {
        v176 = *a1;
        v174 = v185;
        v177 = v200;
        while (1)
        {
          v178 = v46 - 2;
          if (v46 < 2)
            goto LABEL_164;
          if (!v176)
            goto LABEL_176;
          v167 = v43;
          v179 = v43 + 32;
          v180 = *(_QWORD *)&v43[16 * v178 + 32];
          v181 = *(_QWORD *)&v43[16 * v46 + 24];
          sub_100BA9274(v176 + *(_QWORD *)(v199 + 72) * v180, v176 + *(_QWORD *)(v199 + 72) * *(_QWORD *)&v179[16 * v46 - 16], v176 + *(_QWORD *)(v199 + 72) * v181, v197, v206 & 1);
          if (v177)
            goto LABEL_130;
          if (v181 < v180)
            goto LABEL_165;
          if ((swift_isUniquelyReferenced_nonNull_native(v167) & 1) == 0)
            v167 = sub_100D1664C((uint64_t)v167);
          if (v178 >= *((_QWORD *)v167 + 2))
            goto LABEL_166;
          v182 = &v167[16 * v178 + 32];
          *(_QWORD *)v182 = v180;
          *((_QWORD *)v182 + 1) = v181;
          v183 = *((_QWORD *)v167 + 2);
          if (v46 > v183)
            goto LABEL_167;
          v43 = v167;
          memmove(&v167[16 * v46 + 16], &v167[16 * v46 + 32], 16 * (v183 - v46));
          *((_QWORD *)v167 + 2) = v183 - 1;
          v46 = v183 - 1;
          if (v183 <= 2)
            goto LABEL_146;
        }
      }
      v174 = v185;
LABEL_146:
      v175 = v43;
LABEL_147:
      swift_bridgeObjectRelease(v175);
      v174[2] = 0;
      swift_bridgeObjectRelease(v174);
      return;
    }
  }
  else
  {
    v40 = v39 >> 1;
    v41 = static Array._allocateBufferUninitialized(minimumCapacity:)(v39 >> 1, v219);
    *(_QWORD *)(v41 + 16) = v40;
    v42 = *(unsigned __int8 *)(v199 + 80);
    v185 = (_QWORD *)v41;
    v197 = v41 + ((v42 + 32) & ~v42);
  }
  v44 = 0;
  v43 = (char *)_swiftEmptyArrayStorage;
  v204 = a1;
  v198 = v25;
  v45 = v37;
  while (1)
  {
    v47 = v44;
    v48 = v44 + 1;
    if (v44 + 1 >= v45)
    {
      v65 = v44 + 1;
      goto LABEL_82;
    }
    v209 = v45;
    v49 = *a1;
    v50 = *(_QWORD *)(v199 + 72);
    v51 = v189;
    sub_1004B8460(*a1 + v50 * v48, v189, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v195 = v47;
    v205 = v49;
    v214 = v50;
    v52 = v49 + v50 * v47;
    v53 = v188;
    sub_1004B8460(v52, v188, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v54 = (uint64_t)v186;
    sub_1004B8460(v51, (uint64_t)v186, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v55 = v219;
    if (swift_getEnumCaseMultiPayload(v54, v219) == 2)
    {
      v56 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      v57 = (uint64_t *)(v54 + *(int *)(v56 + 48));
      v59 = *v57;
      v58 = v57[1];
      v210 = v59;
      v211 = v58;
      sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
      v60 = (uint64_t)v184;
      sub_1004B8460(v53, (uint64_t)v184, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v60, v55) == 2)
      {
        v61 = v211;
        v62 = (uint64_t *)(v60 + *(int *)(v56 + 48));
        v63 = *v62;
        v64 = v62[1];
        sub_1004B84A4(v60, type metadata accessor for CRLBoardIdentifier);
        if ((v206 & 1) != 0)
        {
          v217 = v210;
          v218 = v61;
          v215 = v63;
          v216 = v64;
        }
        else
        {
          v217 = v63;
          v218 = v64;
          v215 = v210;
          v216 = v61;
        }
        v66 = sub_1004D292C();
        v67 = StringProtocol.localizedStandardCompare<A>(_:)(&v215, &type metadata for String, &type metadata for String, v66, v66);
        swift_bridgeObjectRelease(v61);
        swift_bridgeObjectRelease(v64);
        LODWORD(v211) = v67 == -1;
        a1 = v204;
        v53 = v188;
      }
      else
      {
        swift_bridgeObjectRelease(v211);
        sub_1004B84A4(v60, type metadata accessor for CRLBoardLibraryViewModel.Item);
        LODWORD(v211) = 0;
        a1 = v204;
        v53 = v188;
      }
    }
    else
    {
      sub_1004B84A4(v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
      LODWORD(v211) = 0;
    }
    v68 = v209;
    sub_1004B84A4(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4(v189, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v47 = v195;
    v65 = v195 + 2;
    if (v195 + 2 < v68)
    {
      v187 = v43;
      v69 = v214 * v48;
      v70 = v205;
      v210 = v214 * v65;
      v203 = v69;
      while (1)
      {
        v207 = v65;
        v71 = v196;
        sub_1004B8460(v70 + v210, v196, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B8460(v70 + v69, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v72 = (uint64_t)v193;
        sub_1004B8460(v71, (uint64_t)v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v73 = v219;
        if (swift_getEnumCaseMultiPayload(v72, v219) == 2)
        {
          v74 = sub_1004B804C((uint64_t *)&unk_1013EA630);
          v75 = (uint64_t *)(v72 + *(int *)(v74 + 48));
          v76 = *v75;
          v77 = v75[1];
          sub_1004B84A4(v72, type metadata accessor for CRLBoardIdentifier);
          v78 = (uint64_t)v25;
          v79 = (uint64_t)v190;
          sub_1004B8460(v78, (uint64_t)v190, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v79, v73) == 2)
          {
            v80 = (uint64_t *)(v79 + *(int *)(v74 + 48));
            v81 = *v80;
            v82 = v80[1];
            sub_1004B84A4(v79, type metadata accessor for CRLBoardIdentifier);
            if ((v206 & 1) != 0)
            {
              v217 = v76;
              v218 = v77;
              v215 = v81;
              v216 = v82;
            }
            else
            {
              v217 = v81;
              v218 = v82;
              v215 = v76;
              v216 = v77;
            }
            v84 = sub_1004D292C();
            v85 = StringProtocol.localizedStandardCompare<A>(_:)(&v215, &type metadata for String, &type metadata for String, v84, v84);
            swift_bridgeObjectRelease(v77);
            swift_bridgeObjectRelease(v82);
            v83 = v85 == -1;
          }
          else
          {
            swift_bridgeObjectRelease(v77);
            sub_1004B84A4(v79, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v83 = 0;
          }
          v69 = v203;
          a1 = v204;
          v25 = v198;
          v68 = v209;
        }
        else
        {
          sub_1004B84A4(v72, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v83 = 0;
        }
        sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v196, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((_DWORD)v211 != v83)
          break;
        v65 = v207 + 1;
        v70 += v214;
        if (v68 == v207 + 1)
        {
          v65 = v68;
          v43 = v187;
          goto LABEL_40;
        }
      }
      v43 = v187;
      v65 = v207;
LABEL_40:
      v47 = v195;
    }
    v86 = (uint64_t)v202;
    v87 = v191;
    if (!(_DWORD)v211)
      goto LABEL_180;
    if (v65 < v47)
      goto LABEL_170;
    if (v47 < v65)
    {
      v187 = v43;
      v88 = 0;
      v89 = v214 * (v65 - 1);
      v90 = v65 * v214;
      v91 = v47;
      v92 = v47 * v214;
      do
      {
        if (v91 != v65 + v88 - 1)
        {
          v95 = v205;
          if (!v205)
            goto LABEL_175;
          v96 = v205 + v92;
          v211 = v205 + v89;
          sub_1004B84E0(v205 + v92, v194, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v92 < v89 || v96 >= v95 + v90)
          {
            v93 = v95 + v92;
            v94 = v211;
            swift_arrayInitWithTakeFrontToBack(v93, v211, 1, v219);
          }
          else
          {
            v94 = v211;
            if (v92 != v89)
              swift_arrayInitWithTakeBackToFront(v96);
          }
          sub_1004B84E0(v194, v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v87 = v191;
        }
        ++v91;
        --v88;
        v89 -= v214;
        v90 -= v214;
        v92 += v214;
      }
      while (v91 < v65 + v88);
      v86 = (uint64_t)v202;
      v43 = v187;
      v25 = v198;
      v47 = v195;
      v68 = v209;
      if (v65 >= v209)
        goto LABEL_82;
    }
    else
    {
LABEL_180:
      if (v65 >= v68)
        goto LABEL_82;
    }
    if (__OFSUB__(v65, v47))
      goto LABEL_168;
    if (v65 - v47 < v87)
    {
      if (__OFADD__(v47, v87))
        goto LABEL_171;
      if (v47 + v87 >= v68)
        v97 = v68;
      else
        v97 = v47 + v87;
      if (v97 < v47)
        goto LABEL_172;
      if (v65 != v97)
      {
        v195 = v47;
        v187 = v43;
        v98 = *(_QWORD *)(v199 + 72);
        v99 = v98 * (v65 - 1);
        v203 = v98;
        v214 = v65 * v98;
        v100 = v219;
        v192 = v97;
        do
        {
          v103 = 0;
          v104 = v195;
          v207 = v65;
          v205 = v99;
          while (1)
          {
            v211 = v104;
            v105 = *a1;
            v106 = v213;
            v210 = v214 + v103;
            sub_1004B8460(v214 + v103 + v105, v213, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v209 = v99 + v103;
            v107 = v212;
            sub_1004B8460(v99 + v103 + v105, v212, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_1004B8460(v106, v86, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if (swift_getEnumCaseMultiPayload(v86, v100) != 2)
            {
              v101 = v86;
              goto LABEL_67;
            }
            v108 = sub_1004B804C((uint64_t *)&unk_1013EA630);
            v109 = (uint64_t *)(v86 + *(int *)(v108 + 48));
            v110 = *v109;
            v111 = v109[1];
            sub_1004B84A4(v86, type metadata accessor for CRLBoardIdentifier);
            v112 = (uint64_t)v201;
            sub_1004B8460(v107, (uint64_t)v201, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if (swift_getEnumCaseMultiPayload(v112, v100) != 2)
              break;
            v113 = (uint64_t *)(v112 + *(int *)(v108 + 48));
            v114 = *v113;
            v115 = v113[1];
            sub_1004B84A4(v112, type metadata accessor for CRLBoardIdentifier);
            if ((v206 & 1) != 0)
            {
              v217 = v110;
              v218 = v111;
              v215 = v114;
              v216 = v115;
            }
            else
            {
              v217 = v114;
              v218 = v115;
              v215 = v110;
              v216 = v111;
            }
            v116 = sub_1004D292C();
            v117 = StringProtocol.localizedStandardCompare<A>(_:)(&v215, &type metadata for String, &type metadata for String, v116, v116);
            swift_bridgeObjectRelease(v111);
            swift_bridgeObjectRelease(v115);
            v86 = (uint64_t)v202;
            v99 = v205;
            sub_1004B84A4(v212, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_1004B84A4(v213, type metadata accessor for CRLBoardLibraryViewModel.Item);
            a1 = v204;
            v100 = v219;
            if (v117 != -1)
              goto LABEL_68;
            v118 = *v204;
            if (!*v204)
              goto LABEL_173;
            v119 = v118 + v214 + v103;
            v120 = v118 + v99 + v103;
            sub_1004B84E0(v119, v208, type metadata accessor for CRLBoardLibraryViewModel.Item);
            swift_arrayInitWithTakeFrontToBack(v119, v120, 1, v219);
            sub_1004B84E0(v208, v120, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v103 -= v203;
            v104 = v211 + 1;
            v102 = v207;
            v100 = v219;
            if (v207 == v211 + 1)
              goto LABEL_69;
          }
          swift_bridgeObjectRelease(v111);
          v101 = v112;
          v86 = (uint64_t)v202;
          v107 = v212;
          a1 = v204;
          v99 = v205;
LABEL_67:
          sub_1004B84A4(v101, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B84A4(v107, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B84A4(v213, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_68:
          v102 = v207;
LABEL_69:
          v65 = v102 + 1;
          v99 += v203;
          v214 += v203;
        }
        while (v65 != v192);
        v65 = v192;
        v43 = v187;
        v25 = v198;
        v47 = v195;
      }
    }
LABEL_82:
    if (v65 < v47)
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v43);
    v207 = v65;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v43 = sub_100D15FCC(0, *((_QWORD *)v43 + 2) + 1, 1, v43);
    v123 = *((_QWORD *)v43 + 2);
    v122 = *((_QWORD *)v43 + 3);
    v46 = v123 + 1;
    if (v123 >= v122 >> 1)
      v43 = sub_100D15FCC((char *)(v122 > 1), v123 + 1, 1, v43);
    *((_QWORD *)v43 + 2) = v46;
    v124 = v43 + 32;
    v125 = &v43[16 * v123 + 32];
    v126 = v207;
    *(_QWORD *)v125 = v47;
    *((_QWORD *)v125 + 1) = v126;
    if (v123)
    {
      while (1)
      {
        v127 = v46 - 1;
        if (v46 >= 4)
        {
          v132 = &v124[16 * v46];
          v133 = *((_QWORD *)v132 - 8);
          v134 = *((_QWORD *)v132 - 7);
          v138 = __OFSUB__(v134, v133);
          v135 = v134 - v133;
          if (v138)
            goto LABEL_152;
          v137 = *((_QWORD *)v132 - 6);
          v136 = *((_QWORD *)v132 - 5);
          v138 = __OFSUB__(v136, v137);
          v130 = v136 - v137;
          v131 = v138;
          if (v138)
            goto LABEL_153;
          v139 = v46 - 2;
          v140 = &v124[16 * v46 - 32];
          v142 = *(_QWORD *)v140;
          v141 = *((_QWORD *)v140 + 1);
          v138 = __OFSUB__(v141, v142);
          v143 = v141 - v142;
          if (v138)
            goto LABEL_155;
          v138 = __OFADD__(v130, v143);
          v144 = v130 + v143;
          if (v138)
            goto LABEL_158;
          if (v144 >= v135)
          {
            v162 = &v124[16 * v127];
            v164 = *(_QWORD *)v162;
            v163 = *((_QWORD *)v162 + 1);
            v138 = __OFSUB__(v163, v164);
            v165 = v163 - v164;
            if (v138)
              goto LABEL_162;
            v155 = v130 < v165;
            goto LABEL_119;
          }
        }
        else
        {
          if (v46 != 3)
          {
            v156 = *((_QWORD *)v43 + 4);
            v157 = *((_QWORD *)v43 + 5);
            v138 = __OFSUB__(v157, v156);
            v149 = v157 - v156;
            v150 = v138;
            goto LABEL_113;
          }
          v129 = *((_QWORD *)v43 + 4);
          v128 = *((_QWORD *)v43 + 5);
          v138 = __OFSUB__(v128, v129);
          v130 = v128 - v129;
          v131 = v138;
        }
        if ((v131 & 1) != 0)
          goto LABEL_154;
        v139 = v46 - 2;
        v145 = &v124[16 * v46 - 32];
        v147 = *(_QWORD *)v145;
        v146 = *((_QWORD *)v145 + 1);
        v148 = __OFSUB__(v146, v147);
        v149 = v146 - v147;
        v150 = v148;
        if (v148)
          goto LABEL_157;
        v151 = &v124[16 * v127];
        v153 = *(_QWORD *)v151;
        v152 = *((_QWORD *)v151 + 1);
        v138 = __OFSUB__(v152, v153);
        v154 = v152 - v153;
        if (v138)
          goto LABEL_160;
        if (__OFADD__(v149, v154))
          goto LABEL_161;
        if (v149 + v154 >= v130)
        {
          v155 = v130 < v154;
LABEL_119:
          if (v155)
            v127 = v139;
          goto LABEL_121;
        }
LABEL_113:
        if ((v150 & 1) != 0)
          goto LABEL_156;
        v158 = &v124[16 * v127];
        v160 = *(_QWORD *)v158;
        v159 = *((_QWORD *)v158 + 1);
        v138 = __OFSUB__(v159, v160);
        v161 = v159 - v160;
        if (v138)
          goto LABEL_159;
        if (v161 < v149)
          goto LABEL_14;
LABEL_121:
        v166 = v127 - 1;
        if (v127 - 1 >= v46)
        {
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!*a1)
          goto LABEL_174;
        v167 = v43;
        v168 = &v124[16 * v166];
        v169 = *(_QWORD *)v168;
        v170 = &v124[16 * v127];
        v171 = *((_QWORD *)v170 + 1);
        v172 = v200;
        sub_100BA9274(*a1 + *(_QWORD *)(v199 + 72) * *(_QWORD *)v168, *a1 + *(_QWORD *)(v199 + 72) * *(_QWORD *)v170, *a1 + *(_QWORD *)(v199 + 72) * v171, v197, v206 & 1);
        v200 = v172;
        if (v172)
        {
          v174 = v185;
LABEL_130:
          v175 = v167;
          goto LABEL_147;
        }
        if (v171 < v169)
          goto LABEL_149;
        if (v127 > *((_QWORD *)v167 + 2))
          goto LABEL_150;
        *(_QWORD *)v168 = v169;
        *(_QWORD *)&v124[16 * v166 + 8] = v171;
        v173 = *((_QWORD *)v167 + 2);
        if (v127 >= v173)
          goto LABEL_151;
        v43 = v167;
        v46 = v173 - 1;
        memmove(&v124[16 * v127], v170 + 16, 16 * (v173 - 1 - v127));
        *((_QWORD *)v167 + 2) = v173 - 1;
        v25 = v198;
        if (v173 <= 2)
          goto LABEL_14;
      }
    }
    v46 = 1;
LABEL_14:
    v45 = a1[1];
    v44 = v207;
    if (v207 >= v45)
      goto LABEL_133;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100BA38EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  double v29;
  unint64_t v30;
  uint64_t v31;
  double v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  unsigned int v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  void *v81;
  id v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  char *v96;
  char v97;
  char v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  id v103;
  void *v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  void *v111;
  void *v112;
  id v113;
  id v114;
  char v116;
  char v117;
  uint64_t v118;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  char v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  unsigned __int8 v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  uint64_t v148;
  unsigned __int8 v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  id v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  _OWORD *v164;
  _OWORD *v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  id v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  uint64_t v182;
  unsigned __int8 v183;
  uint64_t v184;
  Swift::Int v185;
  __int128 *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unsigned int v191;
  unsigned int v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unsigned int v196;
  unint64_t v197;
  uint64_t v198;
  double v199;
  double v200;
  void *v201;
  void *v202;
  id v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, _QWORD, uint64_t);
  char *v211;
  uint64_t v212;
  void (*v213)(char *, uint64_t);
  uint64_t v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  unint64_t v219;
  void *v220;
  unsigned __int8 v221;
  id v222;
  id v223;
  id v224;
  uint64_t v225;
  void *v226;
  void *v227;
  id v228;
  id v229;
  char v231;
  char v232;
  uint64_t v233;
  uint64_t v236;
  uint64_t v237;
  id v238;
  id v239;
  unsigned __int8 v240;
  id v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  char v246;
  void *v247;
  id v248;
  uint64_t v249;
  id v250;
  void *v251;
  uint64_t v252;
  unsigned __int8 v253;
  void *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  id v261;
  void *v262;
  uint64_t v263;
  void *v264;
  id v265;
  uint64_t v266;
  unsigned __int8 v267;
  void *v268;
  uint64_t v269;
  char v270;
  __int128 v271;
  __int128 v272;
  id v273;
  void *v274;
  uint64_t v275;
  unsigned __int8 v276;
  void *v277;
  void *v278;
  id v279;
  id v280;
  uint64_t v281;
  uint64_t v282;
  unsigned __int8 v283;
  unsigned __int8 v284;
  void *v285;
  unint64_t v286;
  unint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  BOOL v302;
  unint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  BOOL v312;
  uint64_t v313;
  char v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  BOOL v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  char *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  unint64_t v337;
  char v338;
  void *v339;
  id v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  void *v352;
  id v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  unint64_t v360;
  _QWORD *v361;
  uint64_t v362;
  char *v363;
  _QWORD *v364;
  uint64_t *v365;
  Swift::Int v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  NSString *v372;
  __int128 *v373;
  unsigned int v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  void *v384;
  void *v385;
  id v386;
  id v387;
  void **v388;
  uint64_t v389;
  id v390;
  void *v391;
  uint64_t v392;
  char *v393;
  id v394;
  id v395;
  char *v396;
  char *v397;

  v2 = v1;
  v4 = type metadata accessor for Calendar.Component(0);
  v382 = *(_QWORD *)(v4 - 8);
  v383 = v4;
  __chkstk_darwin(v4);
  v381 = (char *)&v362 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v379 = *(_QWORD *)(v6 - 8);
  v380 = v6;
  v7 = __chkstk_darwin(v6);
  v378 = (char *)&v362 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v377 = (char *)&v362 - v9;
  v376 = type metadata accessor for Calendar(0);
  v375 = *(_QWORD *)(v376 - 8);
  __chkstk_darwin(v376);
  v393 = (char *)&v362 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_335;
    if (v11)
      sub_100BA7A38(0, v11, 1, a1);
    return;
  }
  v365 = a1;
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_343;
  v366 = v12;
  if (v11 < 2)
  {
    v16 = (char *)_swiftEmptyArrayStorage;
    v388 = (void **)&_swiftEmptyArrayStorage[4];
    v364 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v19 = _swiftEmptyArrayStorage[2];
LABEL_301:
      if (v19 >= 2)
      {
        v355 = *v365;
        do
        {
          v356 = v19 - 2;
          if (v19 < 2)
            goto LABEL_330;
          if (!v355)
            goto LABEL_342;
          v357 = *(_QWORD *)&v16[16 * v356 + 32];
          v358 = *(_QWORD *)&v16[16 * v19 + 24];
          sub_100BA9A64((void **)(v355 + 32 * v357), (void **)(v355 + 32 * *(_QWORD *)&v16[16 * v19 + 16]), v355 + 32 * v358, v388);
          if (v2)
            break;
          if (v358 < v357)
            goto LABEL_331;
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_100D1664C((uint64_t)v16);
          if (v356 >= *((_QWORD *)v16 + 2))
            goto LABEL_332;
          v359 = &v16[16 * v356 + 32];
          *(_QWORD *)v359 = v357;
          *((_QWORD *)v359 + 1) = v358;
          v360 = *((_QWORD *)v16 + 2);
          if (v19 > v360)
            goto LABEL_333;
          memmove(&v16[16 * v19 + 16], &v16[16 * v19 + 32], 16 * (v360 - v19));
          *((_QWORD *)v16 + 2) = v360 - 1;
          v19 = v360 - 1;
        }
        while (v360 > 2);
      }
LABEL_312:
      swift_bridgeObjectRelease(v16);
      v361 = v364;
      v364[2] = 0;
      swift_bridgeObjectRelease(v361);
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, &type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
    *(_QWORD *)(v15 + 16) = v14;
    v364 = (_QWORD *)v15;
    v388 = (void **)(v15 + 32);
  }
  v17 = 0;
  v18 = *v365;
  v372 = CKCurrentUserDefaultName;
  v16 = (char *)_swiftEmptyArrayStorage;
  v362 = v18 + 16;
  v374 = enum case for Calendar.Component.day(_:);
  v368 = v11;
  v389 = v18;
  while (1)
  {
    v20 = v17 + 1;
    if (v17 + 1 >= v11)
      goto LABEL_161;
    v367 = v2;
    v21 = v18 + 32 * v17;
    v22 = *(unsigned __int8 *)(v21 + 24);
    v23 = v22 >> 6;
    if (!(v22 >> 6))
      goto LABEL_59;
    v24 = (unint64_t *)(v18 + 32 * v20);
    v26 = *v24;
    v25 = v24[1];
    v27 = v24[2];
    v28 = *((unsigned __int8 *)v24 + 24);
    v30 = *(_QWORD *)v21;
    v29 = *(double *)(v21 + 8);
    v31 = *(_QWORD *)(v21 + 16);
    if (v23 != 2)
    {
      if (v23 == 1)
      {
        if ((v28 & 0xC0) == 0x40)
        {
          v32 = *((double *)v24 + 1);
          v397 = (char *)*v24;
          v394 = (id)v25;
          v395 = (id)v27;
          LODWORD(v396) = v28;
          sub_1004DD884(v397, (id)v25, v27, v28);
          v33 = sub_1004DD884((id)v30, *(id *)&v29, v31, v22);
          v34 = v393;
          v35 = static Calendar.current.getter(v33);
          v36 = v377;
          v37 = Date.init(timeIntervalSinceReferenceDate:)(v35, v29);
          v370 = v17;
          v38 = v378;
          Date.init(timeIntervalSinceReferenceDate:)(v37, v32);
          v40 = v381;
          v39 = v382;
          v41 = v383;
          (*(void (**)(char *, _QWORD, uint64_t))(v382 + 104))(v381, v374, v383);
          v392 = Calendar.compare(_:to:toGranularity:)(v36, v38, v40);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
          v42 = v380;
          v43 = *(void (**)(char *, uint64_t))(v379 + 8);
          v44 = v38;
          v17 = v370;
          v43(v44, v380);
          v43(v36, v42);
          v18 = v389;
          (*(void (**)(char *, uint64_t))(v375 + 8))(v34, v376);
          sub_1004DD8B8(v397, v394, (uint64_t)v395, v396);
          v45 = v392 == -1;
          goto LABEL_60;
        }
LABEL_31:
        if (v28 < 0x40)
          goto LABEL_42;
        v45 = 1;
        if (v28 < 0xC0)
          goto LABEL_60;
      }
      else
      {
        if (v28 < 0x40)
        {
LABEL_42:
          v45 = 0;
          goto LABEL_60;
        }
        if (!(v31 | *(_QWORD *)&v29 | v30) && v22 == 192)
        {
          v25 = 0;
          v27 = 0;
          LOBYTE(v28) = -64;
LABEL_58:
          sub_1004DD884(0, (id)v25, v27, v28);
          goto LABEL_59;
        }
        if (v28 <= 0xBF)
        {
LABEL_54:
          v45 = 1;
          if (v22 == 192 && v30 == 1 && !(v31 | *(_QWORD *)&v29))
          {
            sub_1004DD884((id)1, 0, 0, 0xC0u);
            v45 = 0;
          }
          goto LABEL_60;
        }
        LOBYTE(v45) = 0;
      }
      if (!(v27 | v25 | v26) && v28 == 192)
        goto LABEL_42;
      if (v26 == 1 && (v27 | v25) == 0 && v28 == 192)
        v64 = 1;
      else
        v64 = v45;
      if ((v64 & 1) == 0)
        goto LABEL_54;
LABEL_59:
      v45 = 1;
      goto LABEL_60;
    }
    if ((v28 & 0xC0) != 0x80)
      goto LABEL_31;
    if (!v30)
    {
      sub_1004DD8B8(0, *(id *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_BYTE *)(v21 + 24));
      v45 = 0;
      goto LABEL_60;
    }
    if (!v26)
      goto LABEL_58;
    v363 = v16;
    v46 = (char *)v26;
    v47 = v28;
    v48 = (void *)v27;
    v391 = (void *)v31;
    v49 = (void *)v25;
    v387 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
    v392 = v50;
    v390 = *(id *)(v30 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_1004DD884((id)v30, *(id *)&v29, (uint64_t)v391, v22);
    sub_1004DD884(v46, v49, (uint64_t)v48, v47);
    sub_1004DD884(v46, v49, (uint64_t)v48, v47);
    sub_1004DD884((id)v30, *(id *)&v29, (uint64_t)v391, v22);
    v397 = v46;
    v394 = v49;
    v395 = v48;
    v51 = v49;
    v52 = (uint64_t)v391;
    LODWORD(v396) = v47;
    sub_1004DD884(v46, v51, (uint64_t)v48, v47);
    sub_1004DD884((id)v30, *(id *)&v29, v52, v22);
    v53 = objc_msgSend(v390, "userIdentity");
    v54 = objc_msgSend(v53, "userRecordID");

    if (!v54)
    {
      swift_bridgeObjectRelease(v392);
      goto LABEL_152;
    }
    v55 = objc_msgSend(v54, "recordName");

    v56 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    v59 = v392;
    if (v387 == v56 && v392 == v58)
      break;
    v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v387, v392, v56, v58, 0);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v58);
    if ((v61 & 1) != 0)
      goto LABEL_157;
LABEL_152:
    v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
    v392 = v171;
    v172 = objc_msgSend(*(id *)&v397[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
    v173 = objc_msgSend(v172, "userRecordID");

    if (!v173)
    {
      swift_bridgeObjectRelease(v392);
      v16 = v363;
LABEL_293:
      v343 = sub_10063B4E0();
      v345 = v344;
      v347 = sub_10063B4E0();
      v348 = v346;
      if (v343 == v347 && v345 == v346)
      {
        LODWORD(v392) = 0;
        v348 = v345;
      }
      else
      {
        LODWORD(v392) = _stringCompareWithSmolCheck(_:_:expecting:)(v343, v345, v347, v346, 1);
      }
      swift_bridgeObjectRelease(v345);
      swift_bridgeObjectRelease(v348);
      v349 = v397;
      v350 = (uint64_t)v395;
      sub_1004DD8B8(v397, v394, (uint64_t)v395, v396);
      v351 = (uint64_t)v391;
      sub_1004DD8B8((void *)v30, *(id *)&v29, (uint64_t)v391, v22);
      v352 = v349;
      v353 = v394;
      v354 = v350;
      LOBYTE(v350) = (_BYTE)v396;
      sub_1004DD8B8(v352, v394, v354, v396);
      sub_1004DD8B8((void *)v30, *(id *)&v29, v351, v22);
      sub_1004DD8B8((void *)v30, *(id *)&v29, v351, v22);
      sub_1004DD8B8(v397, v353, (uint64_t)v395, v350);
      v18 = v389;
      v45 = v392;
LABEL_60:
      v65 = v17 + 2;
      v11 = v368;
      if (v17 + 2 < v368)
        goto LABEL_61;
      v169 = v45;
LABEL_136:
      v20 = v65;
      v2 = v367;
      if ((v169 & 1) != 0)
      {
        if (v65 < v17)
          goto LABEL_338;
        goto LABEL_138;
      }
      goto LABEL_161;
    }
    v174 = objc_msgSend(v173, "recordName");

    v175 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
    v177 = v176;

    v178 = v392;
    if (v170 == v175 && v392 == v177)
    {
      swift_bridgeObjectRelease_n(v392, 2);
      v16 = v363;
      v179 = (uint64_t)v391;
    }
    else
    {
      v338 = _stringCompareWithSmolCheck(_:_:expecting:)(v170, v392, v175, v177, 0);
      swift_bridgeObjectRelease(v178);
      swift_bridgeObjectRelease(v177);
      v16 = v363;
      v179 = (uint64_t)v391;
      if ((v338 & 1) == 0)
        goto LABEL_293;
    }
    sub_1004DD8B8((void *)v30, *(id *)&v29, v179, v22);
    v339 = v397;
    v340 = v394;
    v341 = (uint64_t)v395;
    sub_1004DD8B8(v397, v394, (uint64_t)v395, v396);
    sub_1004DD8B8(v339, v340, v341, v396);
    v342 = (uint64_t)v391;
    sub_1004DD8B8((void *)v30, *(id *)&v29, (uint64_t)v391, v22);
    sub_1004DD8B8((void *)v30, *(id *)&v29, v342, v22);
    sub_1004DD8B8(v397, v340, v341, v396);
    v65 = v17 + 2;
    v11 = v368;
    if (v17 + 2 < v368)
    {
      v45 = 0;
      goto LABEL_292;
    }
    v20 = v17 + 2;
    v2 = v367;
    v18 = v389;
LABEL_161:
    v392 = v20;
    if (v20 >= v11)
      goto LABEL_240;
    if (__OFSUB__(v20, v17))
      goto LABEL_334;
    if (v20 - v17 >= v366)
      goto LABEL_240;
    if (__OFADD__(v17, v366))
      goto LABEL_336;
    if (v17 + v366 >= v11)
      v185 = v11;
    else
      v185 = v17 + v366;
    if (v185 < v17)
    {
LABEL_337:
      __break(1u);
      goto LABEL_338;
    }
    if (v392 == v185)
      goto LABEL_240;
    v363 = v16;
    v367 = v2;
    v186 = (__int128 *)(v18 + 32 * v392);
    v187 = v392;
    v370 = v17;
    v369 = v185;
    while (2)
    {
      v373 = v186;
      v189 = v17;
      v392 = v187;
      while (1)
      {
        v190 = *((_QWORD *)v186 - 4);
        v191 = *((unsigned __int8 *)v186 - 8);
        v192 = v191 >> 6;
        if (!(v191 >> 6))
          goto LABEL_231;
        v194 = *(_QWORD *)v186;
        v193 = *((_QWORD *)v186 + 1);
        v195 = *((_QWORD *)v186 + 2);
        v196 = *((unsigned __int8 *)v186 + 24);
        v197 = *((_QWORD *)v186 - 3);
        v198 = *((_QWORD *)v186 - 2);
        if (v192 == 2)
          break;
        if (v192 == 1)
        {
          if ((v196 & 0xC0) == 0x40)
          {
            v199 = *((double *)v186 - 3);
            v201 = *(void **)v186;
            v395 = (id)*((_QWORD *)v186 + 1);
            v200 = *(double *)&v395;
            v396 = (char *)v194;
            v202 = (void *)v197;
            v394 = (id)v195;
            sub_1004DD884(v201, (id)v193, v195, v196);
            v203 = sub_1004DD884((id)v190, v202, v198, v191);
            v204 = static Calendar.current.getter(v203);
            v205 = v377;
            v206 = Date.init(timeIntervalSinceReferenceDate:)(v204, v199);
            v207 = v378;
            Date.init(timeIntervalSinceReferenceDate:)(v206, v200);
            v209 = v382;
            v208 = v383;
            v210 = *(void (**)(char *, _QWORD, uint64_t))(v382 + 104);
            LODWORD(v397) = v196;
            v211 = v381;
            v210(v381, v374, v383);
            v391 = (void *)Calendar.compare(_:to:toGranularity:)(v205, v207, v211);
            (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v208);
            v212 = v380;
            v213 = *(void (**)(char *, uint64_t))(v379 + 8);
            v213(v207, v380);
            v214 = v392;
            v213(v205, v212);
            v18 = v389;
            (*(void (**)(char *, uint64_t))(v375 + 8))(v393, v376);
            sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
            v187 = v214;
            if (v391 != (void *)-1)
              goto LABEL_172;
            goto LABEL_231;
          }
          goto LABEL_190;
        }
        if (v196 < 0x40)
          goto LABEL_172;
        if (!(v198 | v197 | v190) && v191 == 192)
        {
          v233 = v187;
          sub_1004DD884(0, 0, 0, 0xC0u);
          v187 = v233;
          goto LABEL_231;
        }
        if (v196 <= 0xBF)
          goto LABEL_211;
        v232 = 0;
LABEL_199:
        if (!(v195 | v193 | v194) && v196 == 192)
          goto LABEL_172;
        if (v194 == 1 && (v195 | v193) == 0 && v196 == 192)
          v232 = 1;
        if ((v232 & 1) != 0)
          goto LABEL_231;
LABEL_211:
        if (v191 == 192 && v190 == 1 && !(v198 | v197))
        {
          v188 = v187;
          sub_1004DD884((id)1, 0, 0, 0xC0u);
LABEL_171:
          v187 = v188;
          goto LABEL_172;
        }
LABEL_231:
        if (!v18)
          goto LABEL_339;
        v269 = *((_QWORD *)v186 + 2);
        v270 = *((_BYTE *)v186 + 24);
        v271 = *v186;
        v272 = *(v186 - 1);
        *v186 = *(v186 - 2);
        v186[1] = v272;
        *((_QWORD *)v186 - 2) = v269;
        *((_BYTE *)v186 - 8) = v270;
        *(v186 - 2) = v271;
        v186 -= 2;
        if (v187 == ++v189)
          goto LABEL_172;
      }
      if ((v196 & 0xC0) != 0x80)
      {
LABEL_190:
        if (v196 < 0x40)
          goto LABEL_172;
        if (v196 < 0xC0)
          goto LABEL_231;
        v232 = 1;
        goto LABEL_199;
      }
      if (!v190)
      {
        v188 = v187;
        sub_1004DD8B8(0, *((id *)v186 - 3), *((_QWORD *)v186 - 2), *((_BYTE *)v186 - 8));
        goto LABEL_171;
      }
      if (!v194)
      {
        sub_1004DD884(0, (id)v193, v195, *((_BYTE *)v186 + 24));
LABEL_226:
        v187 = v392;
        goto LABEL_231;
      }
      LODWORD(v390) = *((unsigned __int8 *)v186 - 8);
      v215 = (void *)v197;
      v216 = (void *)v195;
      v391 = (void *)v198;
      v217 = (void *)v193;
      v371 = static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
      v386 = v218;
      v385 = *(void **)(v190 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_1004DD884((id)v190, v215, (uint64_t)v391, v390);
      sub_1004DD884((id)v194, v217, (uint64_t)v216, v196);
      sub_1004DD884((id)v194, v217, (uint64_t)v216, v196);
      sub_1004DD884((id)v190, v215, (uint64_t)v391, v390);
      v395 = v217;
      v396 = (char *)v194;
      v394 = v216;
      LODWORD(v397) = v196;
      sub_1004DD884((id)v194, v217, (uint64_t)v216, v196);
      v219 = v190;
      v387 = v215;
      v220 = v215;
      v221 = v390;
      sub_1004DD884((id)v190, v220, (uint64_t)v391, v390);
      v222 = objc_msgSend(v385, "userIdentity");
      v223 = objc_msgSend(v222, "userRecordID");

      v384 = (void *)v190;
      if (v223)
      {
        v224 = objc_msgSend(v223, "recordName");

        v225 = static String._unconditionallyBridgeFromObjectiveC(_:)(v224);
        v227 = v226;

        v228 = v227;
        v229 = v386;
        if (v371 == v225 && v386 == v228)
        {
          swift_bridgeObjectRelease_n(v386, 2);
          v190 = v219;
        }
        else
        {
          v231 = _stringCompareWithSmolCheck(_:_:expecting:)(v371, v386, v225, v228, 0);
          swift_bridgeObjectRelease(v229);
          swift_bridgeObjectRelease(v228);
          v190 = v219;
          if ((v231 & 1) == 0)
            goto LABEL_217;
        }
        v247 = (void *)v190;
        v248 = v387;
        v249 = (uint64_t)v391;
        sub_1004DD8B8(v247, v387, (uint64_t)v391, v221);
        v250 = v395;
        v251 = v396;
        v252 = (uint64_t)v394;
        v253 = v397;
        sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
        sub_1004DD8B8(v251, v250, v252, v253);
        v254 = v384;
        LOBYTE(v250) = (_BYTE)v390;
        sub_1004DD8B8(v384, v248, v249, v390);
        sub_1004DD8B8(v254, v248, v249, v250);
        sub_1004DD8B8(v251, v395, v252, v397);
        v18 = v389;
        goto LABEL_226;
      }
      swift_bridgeObjectRelease(v386);
LABEL_217:
      v386 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
      v237 = v236;
      v238 = objc_msgSend(*(id *)&v396[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v239 = objc_msgSend(v238, "userRecordID");

      if (v239)
      {
        v240 = v221;
        v241 = objc_msgSend(v239, "recordName");

        v242 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v241);
        v244 = v243;

        if (v386 == v242 && v237 == v244)
        {
          swift_bridgeObjectRelease_n(v237, 2);
LABEL_237:
          v285 = (void *)v190;
          v283 = v240;
          v278 = (void *)v190;
          v279 = v387;
          v281 = (uint64_t)v391;
          sub_1004DD8B8(v285, v387, (uint64_t)v391, v240);
          v273 = v395;
          v274 = v396;
          v277 = v396;
          v280 = v395;
          v275 = (uint64_t)v394;
          v282 = (uint64_t)v394;
          v276 = v397;
          v284 = v397;
          goto LABEL_238;
        }
        v246 = _stringCompareWithSmolCheck(_:_:expecting:)(v386, v237, v242, v244, 0);
        swift_bridgeObjectRelease(v237);
        swift_bridgeObjectRelease(v244);
        if ((v246 & 1) != 0)
          goto LABEL_237;
      }
      else
      {
        swift_bridgeObjectRelease(v237);
      }
      v255 = sub_10063B4E0();
      v257 = v256;
      v259 = sub_10063B4E0();
      v260 = v258;
      if (v255 != v259 || v257 != v258)
      {
        LODWORD(v386) = _stringCompareWithSmolCheck(_:_:expecting:)(v255, v257, v259, v258, 1);
        swift_bridgeObjectRelease(v257);
        swift_bridgeObjectRelease(v260);
        v261 = v395;
        v262 = v396;
        v263 = (uint64_t)v394;
        sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
        v264 = (void *)v190;
        v265 = v387;
        v266 = (uint64_t)v391;
        v267 = v390;
        sub_1004DD8B8(v264, v387, (uint64_t)v391, v390);
        sub_1004DD8B8(v262, v261, v263, v397);
        v268 = v384;
        sub_1004DD8B8(v384, v265, v266, v267);
        sub_1004DD8B8(v268, v265, v266, v267);
        sub_1004DD8B8(v262, v395, v263, v397);
        v18 = v389;
        v187 = v392;
        if ((v386 & 1) == 0)
          goto LABEL_172;
        goto LABEL_231;
      }
      swift_bridgeObjectRelease_n(v257, 2);
      v273 = v395;
      v274 = v396;
      v275 = (uint64_t)v394;
      v276 = v397;
      sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
      v277 = (void *)v190;
      v278 = (void *)v190;
      v279 = v387;
      v280 = v387;
      v281 = (uint64_t)v391;
      v282 = (uint64_t)v391;
      v283 = v390;
      v284 = v390;
LABEL_238:
      sub_1004DD8B8(v277, v280, v282, v284);
      sub_1004DD8B8(v274, v273, v275, v276);
      sub_1004DD8B8(v278, v279, v281, v283);
      sub_1004DD8B8(v278, v279, v281, v283);
      sub_1004DD8B8(v274, v273, v275, v276);
      v18 = v389;
      v187 = v392;
LABEL_172:
      ++v187;
      v186 = v373 + 2;
      v17 = v370;
      if (v187 != v369)
        continue;
      break;
    }
    v392 = v369;
    v2 = v367;
    v16 = v363;
LABEL_240:
    if (v392 < v17)
      goto LABEL_329;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100D15FCC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v287 = *((_QWORD *)v16 + 2);
    v286 = *((_QWORD *)v16 + 3);
    v19 = v287 + 1;
    if (v287 >= v286 >> 1)
      v16 = sub_100D15FCC((char *)(v286 > 1), v287 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19;
    v288 = v16 + 32;
    v289 = &v16[16 * v287 + 32];
    v290 = v392;
    *(_QWORD *)v289 = v17;
    *((_QWORD *)v289 + 1) = v290;
    if (v287)
    {
      v18 = v389;
      while (1)
      {
        v291 = v19 - 1;
        if (v19 >= 4)
        {
          v296 = &v288[16 * v19];
          v297 = *((_QWORD *)v296 - 8);
          v298 = *((_QWORD *)v296 - 7);
          v302 = __OFSUB__(v298, v297);
          v299 = v298 - v297;
          if (v302)
            goto LABEL_318;
          v301 = *((_QWORD *)v296 - 6);
          v300 = *((_QWORD *)v296 - 5);
          v302 = __OFSUB__(v300, v301);
          v294 = v300 - v301;
          v295 = v302;
          if (v302)
            goto LABEL_319;
          v303 = v19 - 2;
          v304 = &v288[16 * v19 - 32];
          v306 = *(_QWORD *)v304;
          v305 = *((_QWORD *)v304 + 1);
          v302 = __OFSUB__(v305, v306);
          v307 = v305 - v306;
          if (v302)
            goto LABEL_321;
          v302 = __OFADD__(v294, v307);
          v308 = v294 + v307;
          if (v302)
            goto LABEL_324;
          if (v308 >= v299)
          {
            v326 = &v288[16 * v291];
            v328 = *(_QWORD *)v326;
            v327 = *((_QWORD *)v326 + 1);
            v302 = __OFSUB__(v327, v328);
            v329 = v327 - v328;
            if (v302)
              goto LABEL_328;
            v319 = v294 < v329;
            goto LABEL_278;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v320 = *((_QWORD *)v16 + 4);
            v321 = *((_QWORD *)v16 + 5);
            v302 = __OFSUB__(v321, v320);
            v313 = v321 - v320;
            v314 = v302;
            goto LABEL_272;
          }
          v293 = *((_QWORD *)v16 + 4);
          v292 = *((_QWORD *)v16 + 5);
          v302 = __OFSUB__(v292, v293);
          v294 = v292 - v293;
          v295 = v302;
        }
        if ((v295 & 1) != 0)
          goto LABEL_320;
        v303 = v19 - 2;
        v309 = &v288[16 * v19 - 32];
        v311 = *(_QWORD *)v309;
        v310 = *((_QWORD *)v309 + 1);
        v312 = __OFSUB__(v310, v311);
        v313 = v310 - v311;
        v314 = v312;
        if (v312)
          goto LABEL_323;
        v315 = &v288[16 * v291];
        v317 = *(_QWORD *)v315;
        v316 = *((_QWORD *)v315 + 1);
        v302 = __OFSUB__(v316, v317);
        v318 = v316 - v317;
        if (v302)
          goto LABEL_326;
        if (__OFADD__(v313, v318))
          goto LABEL_327;
        if (v313 + v318 >= v294)
        {
          v319 = v294 < v318;
LABEL_278:
          if (v319)
            v291 = v303;
          goto LABEL_280;
        }
LABEL_272:
        if ((v314 & 1) != 0)
          goto LABEL_322;
        v322 = &v288[16 * v291];
        v324 = *(_QWORD *)v322;
        v323 = *((_QWORD *)v322 + 1);
        v302 = __OFSUB__(v323, v324);
        v325 = v323 - v324;
        if (v302)
          goto LABEL_325;
        if (v325 < v313)
          goto LABEL_14;
LABEL_280:
        v330 = v291 - 1;
        if (v291 - 1 >= v19)
        {
          __break(1u);
LABEL_315:
          __break(1u);
LABEL_316:
          __break(1u);
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
          goto LABEL_337;
        }
        if (!v18)
          goto LABEL_340;
        v331 = v16;
        v332 = v18;
        v333 = &v288[16 * v330];
        v334 = *(_QWORD *)v333;
        v335 = &v288[16 * v291];
        v336 = *((_QWORD *)v335 + 1);
        sub_100BA9A64((void **)(v332 + 32 * *(_QWORD *)v333), (void **)(v332 + 32 * *(_QWORD *)v335), v332 + 32 * v336, v388);
        if (v2)
        {
          v16 = v331;
          goto LABEL_312;
        }
        if (v336 < v334)
          goto LABEL_315;
        if (v291 > *((_QWORD *)v331 + 2))
          goto LABEL_316;
        *(_QWORD *)v333 = v334;
        *(_QWORD *)&v288[16 * v330 + 8] = v336;
        v337 = *((_QWORD *)v331 + 2);
        if (v291 >= v337)
          goto LABEL_317;
        v16 = v331;
        v19 = v337 - 1;
        memmove(&v288[16 * v291], v335 + 16, 16 * (v337 - 1 - v291));
        *((_QWORD *)v331 + 2) = v337 - 1;
        v18 = v389;
        if (v337 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
    v18 = v389;
LABEL_14:
    v11 = v368;
    v17 = v392;
    if (v392 >= v368)
      goto LABEL_301;
  }
  swift_bridgeObjectRelease_n(v392, 2);
LABEL_157:
  sub_1004DD8B8((void *)v30, *(id *)&v29, v52, v22);
  v180 = v397;
  v181 = v394;
  v182 = (uint64_t)v395;
  v183 = v396;
  sub_1004DD8B8(v397, v394, (uint64_t)v395, v396);
  sub_1004DD8B8(v180, v181, v182, v183);
  v184 = (uint64_t)v391;
  sub_1004DD8B8((void *)v30, *(id *)&v29, (uint64_t)v391, v22);
  sub_1004DD8B8((void *)v30, *(id *)&v29, v184, v22);
  sub_1004DD8B8(v180, v181, v182, v396);
  v65 = v17 + 2;
  v11 = v368;
  if (v17 + 2 >= v368)
  {
    v2 = v367;
    v16 = v363;
    v18 = v389;
    if (v17 < v65)
    {
LABEL_139:
      v158 = 32 * v65 - 32;
      v159 = 32 * v17;
      v160 = v65;
      v161 = v17;
      while (1)
      {
        if (v161 != --v160)
        {
          if (!v18)
            goto LABEL_341;
          v164 = (_OWORD *)(v18 + v159);
          v165 = (_OWORD *)(v18 + v158);
          v166 = *(_OWORD *)(v18 + v159);
          v167 = *(_QWORD *)(v18 + v159 + 16);
          v168 = *(_BYTE *)(v18 + v159 + 24);
          if (v159 != v158 || v164 >= v165 + 2)
          {
            v162 = v165[1];
            *v164 = *v165;
            v164[1] = v162;
          }
          v163 = v18 + v158;
          *(_OWORD *)v163 = v166;
          *(_QWORD *)(v163 + 16) = v167;
          *(_BYTE *)(v163 + 24) = v168;
        }
        ++v161;
        v158 -= 32;
        v159 += 32;
        if (v161 >= v160)
          goto LABEL_160;
      }
    }
    goto LABEL_160;
  }
  v45 = 1;
  v16 = v363;
LABEL_292:
  v18 = v389;
LABEL_61:
  v370 = v17;
  v66 = v362 + 32 * v65;
  v67 = v65;
  LODWORD(v392) = v45;
  while (1)
  {
    v65 = v67;
    v69 = v18 + 32 * v20;
    v70 = *(unsigned __int8 *)(v69 + 24);
    v71 = v70 >> 6;
    if (!(v70 >> 6))
      goto LABEL_63;
    v73 = *(_QWORD *)(v66 - 16);
    v72 = *(_QWORD *)(v66 - 8);
    v74 = *(_QWORD *)v66;
    v75 = *(unsigned __int8 *)(v66 + 8);
    v77 = *(_QWORD *)v69;
    v76 = *(_QWORD *)(v69 + 8);
    v78 = *(_QWORD *)(v69 + 16);
    if (v71 != 2)
    {
      if (v71 == 1)
      {
        if ((v75 & 0xC0) != 0x40)
          goto LABEL_82;
        v79 = *(double *)(v69 + 8);
        v395 = *(id *)(v66 - 8);
        v80 = *(double *)&v395;
        v396 = (char *)v73;
        v394 = (id)v74;
        LODWORD(v397) = v75;
        v81 = (void *)v76;
        sub_1004DD884((id)v73, (id)v72, v74, v75);
        v82 = sub_1004DD884((id)v77, v81, v78, v70);
        v83 = v393;
        v84 = static Calendar.current.getter(v82);
        v85 = v377;
        v86 = Date.init(timeIntervalSinceReferenceDate:)(v84, v79);
        v391 = (void *)v65;
        v87 = v378;
        Date.init(timeIntervalSinceReferenceDate:)(v86, v80);
        v89 = v381;
        v88 = v382;
        v90 = v383;
        (*(void (**)(char *, _QWORD, uint64_t))(v382 + 104))(v381, v374, v383);
        v390 = (id)Calendar.compare(_:to:toGranularity:)(v85, v87, v89);
        v91 = *(void (**)(char *, uint64_t))(v88 + 8);
        v92 = v392;
        v91(v89, v90);
        v93 = v380;
        v94 = *(void (**)(char *, uint64_t))(v379 + 8);
        v95 = v87;
        v65 = (uint64_t)v391;
        v94(v95, v380);
        v96 = v85;
        v11 = v368;
        v94(v96, v93);
        (*(void (**)(char *, uint64_t))(v375 + 8))(v83, v376);
        sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
        v97 = v390 == (id)-1;
        goto LABEL_70;
      }
      if (v75 < 0x40)
        goto LABEL_92;
      if (!(v78 | v76 | v77) && v70 == 192)
      {
        v68 = v45;
        sub_1004DD884(0, 0, 0, 0xC0u);
        v45 = v68;
LABEL_63:
        if ((v45 & 1) == 0)
          goto LABEL_148;
        goto LABEL_64;
      }
      if (v75 <= 0xBF)
      {
LABEL_106:
        if (v70 == 192 && v77 == 1 && !(v78 | v76))
        {
          v121 = v45;
          sub_1004DD884((id)1, 0, 0, 0xC0u);
          v45 = v121;
          if ((v121 & 1) != 0)
            goto LABEL_149;
          goto LABEL_64;
        }
        goto LABEL_63;
      }
      v117 = 0;
LABEL_90:
      if (!(v74 | v72 | v73) && v75 == 192)
      {
LABEL_92:
        if ((v45 & 1) != 0)
          goto LABEL_149;
        goto LABEL_64;
      }
      if (v73 == 1 && (v74 | v72) == 0 && v75 == 192)
        v117 = 1;
      if ((v117 & 1) != 0)
        goto LABEL_63;
      goto LABEL_106;
    }
    if ((v75 & 0xC0) != 0x80)
    {
LABEL_82:
      if (v75 < 0x40)
        goto LABEL_92;
      if (v75 < 0xC0)
        goto LABEL_63;
      v117 = 1;
      goto LABEL_90;
    }
    if (!v77)
    {
      v118 = v45;
      sub_1004DD8B8(0, *(id *)(v69 + 8), *(_QWORD *)(v69 + 16), *(_BYTE *)(v69 + 24));
      v45 = v118;
      if ((v118 & 1) != 0)
        goto LABEL_149;
      goto LABEL_64;
    }
    if (!v73)
    {
      sub_1004DD884(0, (id)v72, v74, v75);
      v45 = v392;
      if ((v392 & 1) == 0)
        goto LABEL_148;
      goto LABEL_64;
    }
    v363 = v16;
    LODWORD(v397) = v75;
    v99 = (void *)v74;
    v390 = (id)v76;
    v391 = (void *)v78;
    v100 = (void *)v72;
    v101 = (void *)v76;
    v384 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
    v387 = v102;
    v386 = *(id *)(v77 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_1004DD884((id)v77, v101, (uint64_t)v391, v70);
    LOBYTE(v101) = (_BYTE)v397;
    sub_1004DD884((id)v73, v100, (uint64_t)v99, v397);
    sub_1004DD884((id)v73, v100, (uint64_t)v99, v101);
    v103 = v390;
    sub_1004DD884((id)v77, v390, (uint64_t)v391, v70);
    v395 = v100;
    v396 = (char *)v73;
    v104 = v100;
    v105 = (uint64_t)v391;
    v394 = v99;
    sub_1004DD884((id)v73, v104, (uint64_t)v99, v397);
    v106 = v77;
    sub_1004DD884((id)v77, v103, v105, v70);
    v107 = objc_msgSend(v386, "userIdentity");
    v108 = objc_msgSend(v107, "userRecordID");

    v385 = (void *)v77;
    if (!v108)
      break;
    v109 = objc_msgSend(v108, "recordName");

    v110 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
    v112 = v111;

    v113 = v112;
    v114 = v387;
    if (v384 == v110 && v387 == v113)
    {
      swift_bridgeObjectRelease_n(v387, 2);
      v77 = v106;
    }
    else
    {
      v116 = _stringCompareWithSmolCheck(_:_:expecting:)(v384, v387, v110, v113, 0);
      swift_bridgeObjectRelease(v114);
      swift_bridgeObjectRelease(v113);
      v77 = v106;
      if ((v116 & 1) == 0)
        goto LABEL_114;
    }
    sub_1004DD8B8((void *)v77, v390, v105, v70);
    v133 = v395;
    v134 = v396;
    v135 = (uint64_t)v394;
    v136 = v397;
    sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
    sub_1004DD8B8(v134, v133, v135, v136);
    v137 = v385;
    v138 = v390;
    sub_1004DD8B8(v385, v390, v105, v70);
    sub_1004DD8B8(v137, v138, v105, v70);
    sub_1004DD8B8(v134, v395, v135, v397);
    v16 = v363;
    v18 = v389;
    v45 = v392;
    if ((v392 & 1) == 0)
    {
LABEL_148:
      v20 = v65;
      v2 = v367;
      v17 = v370;
      goto LABEL_161;
    }
LABEL_64:
    v66 += 32;
    v67 = v65 + 1;
    v20 = v65;
    if (v65 + 1 >= v11)
    {
      v169 = v45;
      ++v65;
      goto LABEL_135;
    }
  }
  swift_bridgeObjectRelease(v387);
LABEL_114:
  v387 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v372);
  v123 = v122;
  v124 = objc_msgSend(*(id *)&v396[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
  v125 = objc_msgSend(v124, "userRecordID");

  if (!v125)
  {
    swift_bridgeObjectRelease(v123);
    v16 = v363;
    goto LABEL_125;
  }
  v126 = objc_msgSend(v125, "recordName");

  v127 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
  v129 = v128;

  if (v387 != v127 || v123 != v129)
  {
    v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v387, v123, v127, v129, 0);
    swift_bridgeObjectRelease(v123);
    swift_bridgeObjectRelease(v129);
    v16 = v363;
    v132 = (uint64_t)v391;
    if ((v131 & 1) != 0)
      goto LABEL_129;
LABEL_125:
    v139 = sub_10063B4E0();
    v141 = v140;
    v143 = sub_10063B4E0();
    v144 = v139;
    v145 = v142;
    if (v144 == v143 && v141 == v142)
    {
      v97 = 0;
      v145 = v141;
    }
    else
    {
      v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v141, v143, v142, 1);
    }
    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v145);
    v153 = (uint64_t)v394;
    sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
    v154 = (void *)v77;
    v156 = v390;
    v155 = (uint64_t)v391;
    sub_1004DD8B8(v154, v390, (uint64_t)v391, v70);
    sub_1004DD8B8(v396, v395, v153, v397);
    v157 = v385;
    sub_1004DD8B8(v385, v156, v155, v70);
    sub_1004DD8B8(v157, v156, v155, v70);
    sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
    v92 = v392;
LABEL_70:
    v98 = v92 ^ v97;
    v18 = v389;
    v45 = v92;
    if ((v98 & 1) != 0)
    {
      v169 = v92;
LABEL_135:
      v17 = v370;
      goto LABEL_136;
    }
    goto LABEL_64;
  }
  swift_bridgeObjectRelease_n(v123, 2);
  v16 = v363;
  v132 = (uint64_t)v391;
LABEL_129:
  sub_1004DD8B8((void *)v77, v390, v132, v70);
  v146 = v395;
  v147 = v396;
  v148 = (uint64_t)v394;
  v149 = v397;
  sub_1004DD8B8(v396, v395, (uint64_t)v394, v397);
  sub_1004DD8B8(v147, v146, v148, v149);
  v150 = v385;
  v151 = v390;
  v152 = (uint64_t)v391;
  sub_1004DD8B8(v385, v390, (uint64_t)v391, v70);
  sub_1004DD8B8(v150, v151, v152, v70);
  sub_1004DD8B8(v147, v395, (uint64_t)v394, v397);
  v18 = v389;
  v45 = v392;
  if ((v392 & 1) == 0)
    goto LABEL_64;
LABEL_149:
  v2 = v367;
  v17 = v370;
  if (v65 >= v370)
  {
LABEL_138:
    if (v17 < v65)
      goto LABEL_139;
LABEL_160:
    v20 = v65;
    goto LABEL_161;
  }
LABEL_338:
  __break(1u);
LABEL_339:
  __break(1u);
LABEL_340:
  __break(1u);
LABEL_341:
  __break(1u);
LABEL_342:
  __break(1u);
LABEL_343:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100BA57B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  double v30;
  uint64_t v31;
  unsigned int v32;
  double v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  unsigned int v48;
  void *v49;
  double v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unsigned int v70;
  unsigned int v71;
  double v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  unint64_t v77;
  uint64_t v78;
  unsigned int v79;
  double v80;
  double v81;
  void *v82;
  uint64_t v83;
  double v84;
  id v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  char *v97;
  char v98;
  char v99;
  unsigned __int8 v100;
  void *v101;
  uint64_t v102;
  void *v103;
  double v104;
  void *v105;
  uint64_t v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  char v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v129;
  id v130;
  double v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  double v141;
  void *v142;
  uint64_t v143;
  void *v144;
  void *v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  _OWORD *v153;
  _OWORD *v154;
  __int128 v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  double v170;
  uint64_t v171;
  void *v172;
  void *v173;
  uint64_t v174;
  unsigned __int8 v175;
  uint64_t v176;
  Swift::Int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  unint64_t v182;
  unsigned int v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unsigned int v189;
  double v190;
  double v191;
  void *v192;
  void *v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(char *, _QWORD, uint64_t);
  char *v203;
  uint64_t v204;
  void (*v205)(char *, uint64_t);
  char *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  uint64_t v212;
  void *v213;
  void *v214;
  double v215;
  id v216;
  id v217;
  id v218;
  uint64_t v219;
  void *v220;
  void *v221;
  void *v222;
  char v224;
  double v225;
  int v226;
  uint64_t v227;
  uint64_t v228;
  unsigned __int8 v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  id v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  BOOL v240;
  char v241;
  void *v242;
  id v243;
  unsigned __int8 v244;
  uint64_t v245;
  void *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  void *v255;
  uint64_t v256;
  id v257;
  unsigned __int8 v258;
  double v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  char v263;
  __int128 v264;
  __int128 v265;
  double v266;
  void *v267;
  double v268;
  uint64_t v269;
  unsigned __int8 v270;
  void *v271;
  uint64_t v272;
  double v273;
  id v274;
  id v275;
  uint64_t v276;
  unsigned __int8 v277;
  unsigned __int8 v278;
  unint64_t v279;
  unint64_t v280;
  char *v281;
  uint64_t *v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  BOOL v295;
  unint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  BOOL v305;
  uint64_t v306;
  char v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  BOOL v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  char *v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  unint64_t v330;
  char v331;
  void *v332;
  unsigned __int8 v333;
  void *v334;
  void *v335;
  uint64_t v336;
  void *v337;
  double v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  void *v346;
  uint64_t v347;
  unsigned __int8 v348;
  void *v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  unint64_t v356;
  _QWORD *v357;
  uint64_t v358;
  char *v359;
  _QWORD *v360;
  uint64_t *v361;
  Swift::Int v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  NSString *v368;
  uint64_t v369;
  unsigned int v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  void **v380;
  id v381;
  void *v382;
  double v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  void *v390;
  void *v391;
  void *v392;
  double v393;

  v2 = v1;
  v4 = type metadata accessor for Calendar.Component(0);
  v378 = *(_QWORD *)(v4 - 8);
  v379 = v4;
  __chkstk_darwin(v4);
  v377 = (char *)&v358 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v375 = *(_QWORD *)(v6 - 8);
  v376 = v6;
  v7 = __chkstk_darwin(v6);
  v374 = (char *)&v358 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v373 = (char *)&v358 - v9;
  v372 = type metadata accessor for Calendar(0);
  v371 = *(_QWORD *)(v372 - 8);
  __chkstk_darwin(v372);
  v388 = (char *)&v358 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_311;
    if (v11)
      sub_100BA838C(0, v11, 1, a1);
    return;
  }
  v361 = a1;
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_319;
  v362 = v12;
  if (v11 < 2)
  {
    v16 = (char *)_swiftEmptyArrayStorage;
    v380 = (void **)&_swiftEmptyArrayStorage[4];
    v360 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v19 = _swiftEmptyArrayStorage[2];
LABEL_277:
      if (v19 >= 2)
      {
        v351 = *v361;
        do
        {
          v352 = v19 - 2;
          if (v19 < 2)
            goto LABEL_306;
          if (!v351)
            goto LABEL_318;
          v353 = *(_QWORD *)&v16[16 * v352 + 32];
          v354 = *(_QWORD *)&v16[16 * v19 + 24];
          sub_100BAAE70((void **)(v351 + 32 * v353), (void **)(v351 + 32 * *(_QWORD *)&v16[16 * v19 + 16]), (void **)(v351 + 32 * v354), v380);
          if (v2)
            break;
          if (v354 < v353)
            goto LABEL_307;
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_100D1664C((uint64_t)v16);
          if (v352 >= *((_QWORD *)v16 + 2))
            goto LABEL_308;
          v355 = &v16[16 * v352 + 32];
          *(_QWORD *)v355 = v353;
          *((_QWORD *)v355 + 1) = v354;
          v356 = *((_QWORD *)v16 + 2);
          if (v19 > v356)
            goto LABEL_309;
          memmove(&v16[16 * v19 + 16], &v16[16 * v19 + 32], 16 * (v356 - v19));
          *((_QWORD *)v16 + 2) = v356 - 1;
          v19 = v356 - 1;
        }
        while (v356 > 2);
      }
LABEL_288:
      swift_bridgeObjectRelease(v16);
      v357 = v360;
      v360[2] = 0;
      swift_bridgeObjectRelease(v357);
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, &type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
    *(_QWORD *)(v15 + 16) = v14;
    v360 = (_QWORD *)v15;
    v380 = (void **)(v15 + 32);
  }
  v17 = 0;
  v18 = *v361;
  v368 = CKCurrentUserDefaultName;
  v370 = enum case for Calendar.Component.day(_:);
  v16 = (char *)_swiftEmptyArrayStorage;
  v358 = v18 + 16;
  v364 = v11;
  v386 = v18;
  while (1)
  {
    v20 = v17 + 1;
    if (v17 + 1 >= v11)
      goto LABEL_144;
    v363 = v2;
    v21 = v17 + 1;
    v22 = v18 + 32 * v20;
    v23 = *(unsigned __int8 *)(v22 + 24);
    v24 = v23 >> 6;
    if (!(v23 >> 6))
      goto LABEL_50;
    v26 = *(_QWORD *)v22;
    v25 = *(double *)(v22 + 8);
    v27 = *(_QWORD *)(v22 + 16);
    v28 = v18 + 32 * v17;
    v29 = *(_QWORD *)v28;
    v30 = *(double *)(v28 + 8);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = *(unsigned __int8 *)(v28 + 24);
    if (v24 != 2)
    {
      if (v24 != 1)
      {
        if (v32 < 0x40)
          goto LABEL_37;
        v47 = 1;
        if (!(v27 | *(_QWORD *)&v25 | v26) && v23 == 192)
          goto LABEL_51;
LABEL_32:
        if (v32 >= 0xC0)
        {
          if (!(v31 | *(_QWORD *)&v30 | v29) && v32 == 192)
          {
            sub_1004DD884(0, 0, 0, 0xC0u);
            v47 = 0;
            goto LABEL_51;
          }
          if (v32 == 192 && v29 == 1 && !(v31 | *(_QWORD *)&v30))
          {
            v47 = 1;
            sub_1004DD884((id)1, 0, 0, 0xC0u);
            goto LABEL_51;
          }
        }
        if (!(_DWORD)v47 || v23 != 192 || v26 != 1 || v27 | *(_QWORD *)&v25)
        {
LABEL_50:
          v47 = 1;
          goto LABEL_51;
        }
LABEL_37:
        v47 = 0;
        goto LABEL_51;
      }
      if ((v32 & 0xC0) == 0x40)
      {
        v33 = v25;
        v392 = (void *)v26;
        v393 = v25;
        v390 = (void *)v27;
        LODWORD(v391) = v23;
        v34 = v31;
        sub_1004DD884((id)v26, *(id *)&v25, v27, v23);
        v35 = sub_1004DD884((id)v29, *(id *)&v30, v34, v32);
        v36 = v388;
        v37 = static Calendar.current.getter(v35);
        v366 = v17;
        v38 = v373;
        v39 = Date.init(timeIntervalSinceReferenceDate:)(v37, v33);
        v40 = v374;
        Date.init(timeIntervalSinceReferenceDate:)(v39, v30);
        v42 = v377;
        v41 = v378;
        v43 = v379;
        (*(void (**)(char *, _QWORD, uint64_t))(v378 + 104))(v377, v370, v379);
        *(double *)&v389 = COERCE_DOUBLE(Calendar.compare(_:to:toGranularity:)(v38, v40, v42));
        (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
        v44 = v376;
        v45 = *(void (**)(char *, uint64_t))(v375 + 8);
        v45(v40, v376);
        v46 = v38;
        v17 = v366;
        v45(v46, v44);
        v18 = v386;
        (*(void (**)(char *, uint64_t))(v371 + 8))(v36, v372);
        sub_1004DD8B8(v392, *(id *)&v393, (uint64_t)v390, v391);
        v47 = v389 == -1;
        goto LABEL_51;
      }
LABEL_31:
      v47 = 0;
      if (v32 >= 0x40)
        goto LABEL_32;
LABEL_51:
      v66 = v17 + 2;
      v11 = v364;
      v67 = v47;
      if (v17 + 2 < v364)
        goto LABEL_52;
LABEL_118:
      v20 = v66;
      v2 = v363;
      if ((v67 & 1) == 0)
        goto LABEL_144;
      if (v66 < v17)
        goto LABEL_314;
LABEL_120:
      if (v17 < v66)
        goto LABEL_121;
      goto LABEL_143;
    }
    if ((v32 & 0xC0) != 0x80)
      goto LABEL_31;
    if (!v26)
    {
      sub_1004DD8B8(0, *(id *)&v25, v27, v23);
      v47 = 0;
      goto LABEL_51;
    }
    if (!v29)
    {
      sub_1004DD884(0, *(id *)(v28 + 8), *(_QWORD *)(v28 + 16), *(_BYTE *)(v28 + 24));
      v47 = 1;
      goto LABEL_51;
    }
    v359 = v16;
    v48 = v23;
    v49 = (void *)v27;
    v50 = v25;
    *(double *)&v389 = v30;
    v387 = v31;
    v383 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v368));
    v385 = v51;
    v384 = *(char **)(v26 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_1004DD884((id)v26, *(id *)&v50, (uint64_t)v49, v48);
    v52 = v30;
    v53 = v387;
    sub_1004DD884((id)v29, *(id *)&v52, v387, v32);
    sub_1004DD884((id)v26, *(id *)&v50, (uint64_t)v49, v48);
    sub_1004DD884((id)v29, (id)v389, v53, v32);
    v392 = (void *)v26;
    v393 = v50;
    v390 = v49;
    LODWORD(v391) = v48;
    sub_1004DD884((id)v26, *(id *)&v50, (uint64_t)v49, v48);
    v54 = v29;
    v55 = (id)v389;
    sub_1004DD884((id)v29, (id)v389, v53, v32);
    v56 = objc_msgSend(v384, "userIdentity");
    v57 = objc_msgSend(v56, "userRecordID");

    if (v57)
    {
      v58 = objc_msgSend(v57, "recordName");

      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v61 = v60;

      v62 = v385;
      if (*(_QWORD *)&v383 == v59 && v385 == v61)
      {
        swift_bridgeObjectRelease_n(v385, 2);
        v29 = v54;
        v65 = v55;
LABEL_140:
        v169 = v392;
        v170 = v393;
        v171 = (uint64_t)v390;
        sub_1004DD8B8(v392, *(id *)&v393, (uint64_t)v390, v391);
        v172 = (void *)v29;
        v173 = (void *)v29;
        v174 = v387;
        sub_1004DD8B8(v172, v65, v387, v32);
        sub_1004DD8B8(v173, v65, v174, v32);
        v175 = v391;
        sub_1004DD8B8(v169, *(id *)&v170, v171, v391);
        sub_1004DD8B8(v173, (id)v389, v174, v32);
        sub_1004DD8B8(v169, *(id *)&v170, v171, v175);
        v66 = v17 + 2;
        v11 = v364;
        if (v17 + 2 < v364)
        {
          v67 = 1;
          v16 = v359;
          goto LABEL_268;
        }
        v2 = v363;
        v16 = v359;
        v18 = v386;
        if (v17 < v66)
        {
LABEL_121:
          v147 = 32 * v66 - 32;
          v148 = 32 * v17;
          v149 = v66;
          v150 = v17;
          do
          {
            if (v150 != --v149)
            {
              if (!v18)
                goto LABEL_317;
              v153 = (_OWORD *)(v18 + v148);
              v154 = (_OWORD *)(v18 + v147);
              v155 = *(_OWORD *)(v18 + v148);
              v156 = *(_QWORD *)(v18 + v148 + 16);
              v157 = *(_BYTE *)(v18 + v148 + 24);
              if (v148 != v147 || v153 >= v154 + 2)
              {
                v151 = v154[1];
                *v153 = *v154;
                v153[1] = v151;
              }
              v152 = v18 + v147;
              *(_OWORD *)v152 = v155;
              *(_QWORD *)(v152 + 16) = v156;
              *(_BYTE *)(v152 + 24) = v157;
            }
            ++v150;
            v147 -= 32;
            v148 += 32;
          }
          while (v150 < v149);
        }
LABEL_143:
        v20 = v66;
        goto LABEL_144;
      }
      v64 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v383, v385, v59, v61, 0);
      swift_bridgeObjectRelease(v62);
      swift_bridgeObjectRelease(v61);
      v29 = v54;
      v65 = v55;
      if ((v64 & 1) != 0)
        goto LABEL_140;
    }
    else
    {
      swift_bridgeObjectRelease(v385);
      v65 = v55;
    }
    v158 = static String._unconditionallyBridgeFromObjectiveC(_:)(v368);
    v160 = v159;
    v161 = objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
    v162 = objc_msgSend(v161, "userRecordID");

    if (!v162)
    {
      swift_bridgeObjectRelease(v160);
      v16 = v359;
LABEL_269:
      v340 = sub_10063B4E0();
      v342 = v341;
      v344 = sub_10063B4E0();
      v345 = v343;
      if (v340 == v344 && v342 == v343)
      {
        v47 = 0;
        v345 = v342;
      }
      else
      {
        v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v340, v342, v344, v343, 1);
      }
      swift_bridgeObjectRelease(v342);
      swift_bridgeObjectRelease(v345);
      v382 = (void *)v29;
      sub_1004DD8B8((void *)v29, v65, v387, v32);
      v346 = v392;
      v347 = (uint64_t)v390;
      v348 = v391;
      sub_1004DD8B8(v392, *(id *)&v393, (uint64_t)v390, v391);
      v349 = (void *)v29;
      v350 = v387;
      sub_1004DD8B8(v349, (id)v389, v387, v32);
      sub_1004DD8B8(v346, *(id *)&v393, v347, v348);
      sub_1004DD8B8(v382, (id)v389, v350, v32);
      sub_1004DD8B8(v346, *(id *)&v393, v347, v348);
      v18 = v386;
      goto LABEL_51;
    }
    v163 = objc_msgSend(v162, "recordName");

    v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v163);
    v165 = v160;
    v166 = v158;
    v168 = v167;

    if (v166 == v164 && v165 == v168)
    {
      swift_bridgeObjectRelease_n(v165, 2);
      v16 = v359;
      v65 = (id)v389;
    }
    else
    {
      v331 = _stringCompareWithSmolCheck(_:_:expecting:)(v166, v165, v164, v168, 0);
      swift_bridgeObjectRelease(v165);
      swift_bridgeObjectRelease(v168);
      v16 = v359;
      v65 = (id)v389;
      if ((v331 & 1) == 0)
        goto LABEL_269;
    }
    v332 = v392;
    v333 = v391;
    sub_1004DD8B8(v392, *(id *)&v393, (uint64_t)v390, v391);
    v334 = (void *)v29;
    v335 = (void *)v29;
    v336 = v387;
    sub_1004DD8B8(v334, v65, v387, v32);
    sub_1004DD8B8(v335, v65, v336, v32);
    v337 = v332;
    v338 = v393;
    v339 = (uint64_t)v390;
    sub_1004DD8B8(v337, *(id *)&v393, (uint64_t)v390, v333);
    sub_1004DD8B8(v335, (id)v389, v336, v32);
    sub_1004DD8B8(v392, *(id *)&v338, v339, v333);
    v66 = v17 + 2;
    v11 = v364;
    if (v17 + 2 < v364)
      break;
    v20 = v17 + 2;
    v2 = v363;
    v18 = v386;
LABEL_144:
    v387 = v20;
    if (v20 >= v11)
      goto LABEL_216;
    v295 = __OFSUB__(v20, v17);
    v176 = v20 - v17;
    if (v295)
      goto LABEL_310;
    if (v176 >= v362)
      goto LABEL_216;
    if (__OFADD__(v17, v362))
      goto LABEL_312;
    if (v17 + v362 >= v11)
      v177 = v11;
    else
      v177 = v17 + v362;
    if (v177 < v17)
    {
LABEL_313:
      __break(1u);
      goto LABEL_314;
    }
    if (v387 == v177)
      goto LABEL_216;
    v359 = v16;
    v363 = v2;
    v178 = v18 + 32 * v387;
    v179 = v387;
    v366 = v17;
    v365 = v177;
    while (2)
    {
      v369 = v178;
      v180 = v17;
      v387 = v179;
      while (1)
      {
        v181 = *(unsigned __int8 *)(v178 + 24);
        v182 = *(unint64_t *)(v178 - 32);
        v183 = v181 >> 6;
        if (!(v181 >> 6))
          goto LABEL_207;
        v185 = *(_QWORD *)v178;
        v184 = *(_QWORD *)(v178 + 8);
        v186 = *(_QWORD *)(v178 + 16);
        v187 = *(_QWORD *)(v178 - 24);
        v188 = *(_QWORD *)(v178 - 16);
        v189 = *(unsigned __int8 *)(v178 - 8);
        if (v183 != 2)
        {
          if (v183 == 1)
          {
            if ((v189 & 0xC0) == 0x40)
            {
              v191 = *(double *)(v178 - 24);
              v389 = *(uint64_t *)(v178 + 8);
              v190 = *(double *)&v389;
              v390 = (void *)v186;
              v391 = (void *)v185;
              v192 = (void *)v185;
              v193 = (void *)v187;
              v194 = v188;
              sub_1004DD884(v192, (id)v184, v186, v181);
              v195 = sub_1004DD884((id)v182, v193, v194, v189);
              v196 = static Calendar.current.getter(v195);
              v197 = v373;
              v198 = Date.init(timeIntervalSinceReferenceDate:)(v196, v190);
              v199 = v374;
              Date.init(timeIntervalSinceReferenceDate:)(v198, v191);
              v201 = v378;
              v200 = v379;
              v202 = *(void (**)(char *, _QWORD, uint64_t))(v378 + 104);
              LODWORD(v393) = v181;
              v203 = v377;
              v202(v377, v370, v379);
              v392 = (void *)Calendar.compare(_:to:toGranularity:)(v197, v199, v203);
              (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v200);
              v204 = v376;
              v205 = *(void (**)(char *, uint64_t))(v375 + 8);
              v205(v199, v376);
              v206 = v197;
              v179 = v387;
              v205(v206, v204);
              v18 = v386;
              (*(void (**)(char *, uint64_t))(v371 + 8))(v388, v372);
              sub_1004DD8B8(v391, (id)v389, (uint64_t)v390, LOBYTE(v393));
              if (v392 != (void *)-1)
                goto LABEL_155;
              goto LABEL_207;
            }
LABEL_173:
            if (v189 < 0x40)
              goto LABEL_155;
            v226 = 0;
          }
          else
          {
            if (v189 < 0x40)
              goto LABEL_155;
            v226 = 1;
            if (!(v186 | v184 | v185) && v181 == 192)
              goto LABEL_207;
          }
          if (v189 < 0xC0)
            goto LABEL_322;
          if (!(v188 | v187 | v182) && v189 == 192)
          {
            sub_1004DD884(0, 0, 0, 0xC0u);
            goto LABEL_155;
          }
          if (v189 != 192 || v182 != 1 || v188 | v187)
          {
LABEL_322:
            if (v226 && v181 == 192 && v185 == 1 && !(v186 | v184))
              goto LABEL_155;
            goto LABEL_207;
          }
          v227 = 1;
          v187 = 0;
          v228 = 0;
          v229 = -64;
LABEL_192:
          sub_1004DD884((id)v227, (id)v187, v228, v229);
          goto LABEL_207;
        }
        if ((v189 & 0xC0) != 0x80)
          goto LABEL_173;
        if (!v185)
        {
          sub_1004DD8B8(0, *(id *)(v178 + 8), v186, *(_BYTE *)(v178 + 24));
          goto LABEL_155;
        }
        if (*(double *)&v182 == 0.0)
        {
          v227 = 0;
          v228 = *(_QWORD *)(v178 - 16);
          v229 = *(_BYTE *)(v178 - 8);
          goto LABEL_192;
        }
        v207 = *(void **)(v178 + 8);
        v208 = *(void **)(v178 + 16);
        v384 = *(char **)(v178 - 24);
        v385 = v188;
        LODWORD(v392) = v189;
        v209 = (void *)v187;
        v367 = static String._unconditionallyBridgeFromObjectiveC(_:)(v368);
        v382 = v210;
        v381 = *(id *)(v185 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        sub_1004DD884((id)v185, v207, (uint64_t)v208, v181);
        v383 = *(double *)&v182;
        v211 = v209;
        v212 = v385;
        sub_1004DD884((id)v182, v211, v385, v392);
        sub_1004DD884((id)v185, v207, (uint64_t)v208, v181);
        v213 = (void *)v182;
        v214 = v384;
        sub_1004DD884(v213, v384, v212, v392);
        v390 = v208;
        v391 = (void *)v185;
        v389 = (uint64_t)v207;
        LODWORD(v393) = v181;
        sub_1004DD884((id)v185, v207, (uint64_t)v208, v181);
        v215 = v383;
        sub_1004DD884(*(id *)&v383, v214, v212, v392);
        v216 = objc_msgSend(v381, "userIdentity");
        v217 = objc_msgSend(v216, "userRecordID");

        if (v217)
        {
          v218 = objc_msgSend(v217, "recordName");

          v219 = static String._unconditionallyBridgeFromObjectiveC(_:)(v218);
          v221 = v220;

          v222 = v382;
          if (v367 == v219 && v382 == v221)
          {
            swift_bridgeObjectRelease_n(v382, 2);
            v225 = v215;
LABEL_202:
            v242 = v391;
            v243 = (id)v389;
            sub_1004DD8B8(v391, (id)v389, (uint64_t)v390, LOBYTE(v393));
            v244 = v392;
            v246 = v384;
            v245 = v385;
            sub_1004DD8B8(*(void **)&v225, v384, v385, v392);
            sub_1004DD8B8(*(void **)&v225, v246, v245, v244);
            v247 = (uint64_t)v390;
            sub_1004DD8B8(v242, v243, (uint64_t)v390, LOBYTE(v393));
            sub_1004DD8B8(*(void **)&v383, v246, v245, v244);
            sub_1004DD8B8(v242, v243, v247, LOBYTE(v393));
            v18 = v386;
            v179 = v387;
            goto LABEL_207;
          }
          v224 = _stringCompareWithSmolCheck(_:_:expecting:)(v367, v382, v219, v221, 0);
          swift_bridgeObjectRelease(v222);
          swift_bridgeObjectRelease(v221);
          v225 = v215;
          if ((v224 & 1) != 0)
            goto LABEL_202;
        }
        else
        {
          swift_bridgeObjectRelease(v382);
          v225 = v215;
        }
        v230 = static String._unconditionallyBridgeFromObjectiveC(_:)(v368);
        v232 = v231;
        v233 = objc_msgSend(*(id *)(*(_QWORD *)&v225 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
        v234 = objc_msgSend(v233, "userRecordID");

        if (v234)
          break;
        swift_bridgeObjectRelease(v232);
        v179 = v387;
LABEL_204:
        v248 = sub_10063B4E0();
        v250 = v249;
        v252 = sub_10063B4E0();
        v253 = v251;
        if (v248 == v252 && v250 == v251)
        {
          swift_bridgeObjectRelease_n(v250, 2);
          v266 = v225;
          v267 = v384;
          v268 = v225;
          v269 = v385;
          v270 = v392;
          sub_1004DD8B8(*(void **)&v266, v384, v385, v392);
          v272 = (uint64_t)v390;
          v271 = v391;
          v273 = *(double *)&v391;
          v274 = (id)v389;
          v275 = (id)v389;
          v276 = (uint64_t)v390;
          v277 = LOBYTE(v393);
          v278 = LOBYTE(v393);
          goto LABEL_214;
        }
        LODWORD(v382) = _stringCompareWithSmolCheck(_:_:expecting:)(v248, v250, v252, v251, 1);
        swift_bridgeObjectRelease(v250);
        swift_bridgeObjectRelease(v253);
        v254 = v384;
        sub_1004DD8B8(*(void **)&v225, v384, v385, v392);
        v256 = (uint64_t)v390;
        v255 = v391;
        v257 = (id)v389;
        v258 = LOBYTE(v393);
        sub_1004DD8B8(v391, (id)v389, (uint64_t)v390, LOBYTE(v393));
        v259 = v225;
        v260 = v385;
        sub_1004DD8B8(*(void **)&v259, v254, v385, v392);
        sub_1004DD8B8(v255, v257, v256, v258);
        sub_1004DD8B8(*(void **)&v383, v254, v260, v392);
        v261 = v257;
        v179 = v387;
        sub_1004DD8B8(v255, v261, v256, v258);
        v18 = v386;
        if ((v382 & 1) == 0)
          goto LABEL_155;
LABEL_207:
        if (!v18)
          goto LABEL_315;
        v262 = *(_QWORD *)(v178 + 16);
        v263 = *(_BYTE *)(v178 + 24);
        v264 = *(_OWORD *)v178;
        v265 = *(_OWORD *)(v178 - 16);
        *(_OWORD *)v178 = *(_OWORD *)(v178 - 32);
        *(_OWORD *)(v178 + 16) = v265;
        *(_QWORD *)(v178 - 16) = v262;
        *(_BYTE *)(v178 - 8) = v263;
        *(_OWORD *)(v178 - 32) = v264;
        v178 -= 32;
        if (v179 == ++v180)
          goto LABEL_155;
      }
      v235 = objc_msgSend(v234, "recordName");

      v236 = static String._unconditionallyBridgeFromObjectiveC(_:)(v235);
      v238 = v237;

      v239 = v230;
      v240 = v230 == v236 && v232 == v238;
      v179 = v387;
      if (!v240)
      {
        v241 = _stringCompareWithSmolCheck(_:_:expecting:)(v239, v232, v236, v238, 0);
        swift_bridgeObjectRelease(v232);
        swift_bridgeObjectRelease(v238);
        if ((v241 & 1) != 0)
          goto LABEL_213;
        goto LABEL_204;
      }
      swift_bridgeObjectRelease_n(v232, 2);
LABEL_213:
      v272 = (uint64_t)v390;
      v271 = v391;
      v274 = (id)v389;
      v277 = LOBYTE(v393);
      sub_1004DD8B8(v391, (id)v389, (uint64_t)v390, LOBYTE(v393));
      v273 = v225;
      v270 = v392;
      v267 = v384;
      v275 = v384;
      v268 = v225;
      v269 = v385;
      v276 = v385;
      v278 = v392;
LABEL_214:
      sub_1004DD8B8(*(void **)&v273, v275, v276, v278);
      sub_1004DD8B8(*(void **)&v268, v267, v269, v270);
      sub_1004DD8B8(v271, v274, v272, v277);
      sub_1004DD8B8(*(void **)&v268, v267, v269, v270);
      sub_1004DD8B8(v271, v274, v272, v277);
      v18 = v386;
LABEL_155:
      ++v179;
      v178 = v369 + 32;
      v17 = v366;
      if (v179 != v365)
        continue;
      break;
    }
    v387 = v365;
    v2 = v363;
    v16 = v359;
LABEL_216:
    if (v387 < v17)
      goto LABEL_305;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100D15FCC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v280 = *((_QWORD *)v16 + 2);
    v279 = *((_QWORD *)v16 + 3);
    v19 = v280 + 1;
    if (v280 >= v279 >> 1)
      v16 = sub_100D15FCC((char *)(v279 > 1), v280 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19;
    v281 = v16 + 32;
    v282 = (uint64_t *)&v16[16 * v280 + 32];
    v283 = v387;
    *v282 = v17;
    v282[1] = v283;
    if (v280)
    {
      v18 = v386;
      while (1)
      {
        v284 = v19 - 1;
        if (v19 >= 4)
        {
          v289 = &v281[16 * v19];
          v290 = *((_QWORD *)v289 - 8);
          v291 = *((_QWORD *)v289 - 7);
          v295 = __OFSUB__(v291, v290);
          v292 = v291 - v290;
          if (v295)
            goto LABEL_294;
          v294 = *((_QWORD *)v289 - 6);
          v293 = *((_QWORD *)v289 - 5);
          v295 = __OFSUB__(v293, v294);
          v287 = v293 - v294;
          v288 = v295;
          if (v295)
            goto LABEL_295;
          v296 = v19 - 2;
          v297 = &v281[16 * v19 - 32];
          v299 = *(_QWORD *)v297;
          v298 = *((_QWORD *)v297 + 1);
          v295 = __OFSUB__(v298, v299);
          v300 = v298 - v299;
          if (v295)
            goto LABEL_297;
          v295 = __OFADD__(v287, v300);
          v301 = v287 + v300;
          if (v295)
            goto LABEL_300;
          if (v301 >= v292)
          {
            v319 = &v281[16 * v284];
            v321 = *(_QWORD *)v319;
            v320 = *((_QWORD *)v319 + 1);
            v295 = __OFSUB__(v320, v321);
            v322 = v320 - v321;
            if (v295)
              goto LABEL_304;
            v312 = v287 < v322;
            goto LABEL_254;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v313 = *((_QWORD *)v16 + 4);
            v314 = *((_QWORD *)v16 + 5);
            v295 = __OFSUB__(v314, v313);
            v306 = v314 - v313;
            v307 = v295;
            goto LABEL_248;
          }
          v286 = *((_QWORD *)v16 + 4);
          v285 = *((_QWORD *)v16 + 5);
          v295 = __OFSUB__(v285, v286);
          v287 = v285 - v286;
          v288 = v295;
        }
        if ((v288 & 1) != 0)
          goto LABEL_296;
        v296 = v19 - 2;
        v302 = &v281[16 * v19 - 32];
        v304 = *(_QWORD *)v302;
        v303 = *((_QWORD *)v302 + 1);
        v305 = __OFSUB__(v303, v304);
        v306 = v303 - v304;
        v307 = v305;
        if (v305)
          goto LABEL_299;
        v308 = &v281[16 * v284];
        v310 = *(_QWORD *)v308;
        v309 = *((_QWORD *)v308 + 1);
        v295 = __OFSUB__(v309, v310);
        v311 = v309 - v310;
        if (v295)
          goto LABEL_302;
        if (__OFADD__(v306, v311))
          goto LABEL_303;
        if (v306 + v311 >= v287)
        {
          v312 = v287 < v311;
LABEL_254:
          if (v312)
            v284 = v296;
          goto LABEL_256;
        }
LABEL_248:
        if ((v307 & 1) != 0)
          goto LABEL_298;
        v315 = &v281[16 * v284];
        v317 = *(_QWORD *)v315;
        v316 = *((_QWORD *)v315 + 1);
        v295 = __OFSUB__(v316, v317);
        v318 = v316 - v317;
        if (v295)
          goto LABEL_301;
        if (v318 < v306)
          goto LABEL_14;
LABEL_256:
        v323 = v284 - 1;
        if (v284 - 1 >= v19)
        {
          __break(1u);
LABEL_291:
          __break(1u);
LABEL_292:
          __break(1u);
LABEL_293:
          __break(1u);
LABEL_294:
          __break(1u);
LABEL_295:
          __break(1u);
LABEL_296:
          __break(1u);
LABEL_297:
          __break(1u);
LABEL_298:
          __break(1u);
LABEL_299:
          __break(1u);
LABEL_300:
          __break(1u);
LABEL_301:
          __break(1u);
LABEL_302:
          __break(1u);
LABEL_303:
          __break(1u);
LABEL_304:
          __break(1u);
LABEL_305:
          __break(1u);
LABEL_306:
          __break(1u);
LABEL_307:
          __break(1u);
LABEL_308:
          __break(1u);
LABEL_309:
          __break(1u);
LABEL_310:
          __break(1u);
LABEL_311:
          __break(1u);
LABEL_312:
          __break(1u);
          goto LABEL_313;
        }
        if (!v18)
          goto LABEL_316;
        v324 = v16;
        v325 = v18;
        v326 = &v281[16 * v323];
        v327 = *(_QWORD *)v326;
        v328 = &v281[16 * v284];
        v329 = *((_QWORD *)v328 + 1);
        sub_100BAAE70((void **)(v325 + 32 * *(_QWORD *)v326), (void **)(v325 + 32 * *(_QWORD *)v328), (void **)(v325 + 32 * v329), v380);
        if (v2)
        {
          v16 = v324;
          goto LABEL_288;
        }
        if (v329 < v327)
          goto LABEL_291;
        if (v284 > *((_QWORD *)v324 + 2))
          goto LABEL_292;
        *(_QWORD *)v326 = v327;
        *(_QWORD *)&v281[16 * v323 + 8] = v329;
        v330 = *((_QWORD *)v324 + 2);
        if (v284 >= v330)
          goto LABEL_293;
        v16 = v324;
        v19 = v330 - 1;
        memmove(&v281[16 * v284], v328 + 16, 16 * (v330 - 1 - v284));
        *((_QWORD *)v324 + 2) = v330 - 1;
        v18 = v386;
        if (v330 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
    v18 = v386;
LABEL_14:
    v11 = v364;
    v17 = v387;
    if (v387 >= v364)
      goto LABEL_277;
  }
  v67 = 0;
LABEL_268:
  v18 = v386;
LABEL_52:
  v68 = v358 + 32 * v66;
  v69 = (char *)v66;
  v366 = v17;
  v385 = v67;
  while (1)
  {
    v66 = (uint64_t)v69;
    v70 = *(unsigned __int8 *)(v68 + 8);
    v71 = v70 >> 6;
    if (!(v70 >> 6))
      goto LABEL_53;
    v73 = *(_QWORD *)(v68 - 16);
    v72 = *(double *)(v68 - 8);
    v74 = *(_QWORD *)v68;
    v75 = v18 + 32 * v21;
    v77 = *(_QWORD *)v75;
    v76 = *(double *)(v75 + 8);
    v78 = *(_QWORD *)(v75 + 16);
    v79 = *(unsigned __int8 *)(v75 + 24);
    if (v71 != 2)
    {
      if (v71 == 1)
      {
        if ((v79 & 0xC0) == 0x40)
        {
          v390 = *(void **)(v68 - 16);
          v391 = (void *)v66;
          v80 = v72;
          v81 = v76;
          v82 = (void *)v73;
          *(double *)&v389 = v72;
          v392 = (void *)v74;
          LODWORD(v393) = v70;
          v83 = v78;
          v84 = v76;
          sub_1004DD884(v82, *(id *)&v72, v74, v70);
          v85 = sub_1004DD884((id)v77, *(id *)&v84, v83, v79);
          v86 = v388;
          v87 = static Calendar.current.getter(v85);
          v88 = v373;
          v89 = Date.init(timeIntervalSinceReferenceDate:)(v87, v80);
          v67 = (uint64_t)v374;
          Date.init(timeIntervalSinceReferenceDate:)(v89, v81);
          v91 = v377;
          v90 = v378;
          v92 = v379;
          (*(void (**)(char *, _QWORD, uint64_t))(v378 + 104))(v377, v370, v379);
          v387 = Calendar.compare(_:to:toGranularity:)(v88, v67, v91);
          v93 = v91;
          v17 = v366;
          (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v92);
          v94 = v376;
          v95 = *(void (**)(uint64_t, uint64_t))(v375 + 8);
          v96 = v67;
          LOBYTE(v67) = v385;
          v95(v96, v376);
          v97 = v88;
          v11 = v364;
          v95((uint64_t)v97, v94);
          (*(void (**)(char *, uint64_t))(v371 + 8))(v86, v372);
          sub_1004DD8B8(v390, (id)v389, (uint64_t)v392, LOBYTE(v393));
          v98 = v387 == -1;
          goto LABEL_60;
        }
LABEL_72:
        if (v79 < 0x40)
          goto LABEL_93;
        v116 = 0;
LABEL_74:
        if (v79 >= 0xC0)
        {
          if (!(v78 | *(_QWORD *)&v76 | v77) && v79 == 192)
          {
            v117 = v66;
            sub_1004DD884(0, 0, 0, 0xC0u);
LABEL_83:
            v66 = v117;
LABEL_93:
            if ((v67 & 1) != 0)
              break;
            goto LABEL_54;
          }
          if (v79 == 192 && v77 == 1 && !(v78 | *(_QWORD *)&v76))
          {
            v118 = v66;
            sub_1004DD884((id)1, 0, 0, 0xC0u);
            v66 = v118;
            if ((v67 & 1) == 0)
              goto LABEL_130;
            goto LABEL_54;
          }
        }
        if (v116 && v70 == 192 && v73 == 1 && !(v74 | *(_QWORD *)&v72))
          goto LABEL_93;
      }
      else
      {
        if (v79 < 0x40)
          goto LABEL_93;
        v116 = 1;
        if (v74 | *(_QWORD *)&v72 | v73 || v70 != 192)
          goto LABEL_74;
      }
LABEL_53:
      if ((v67 & 1) == 0)
        goto LABEL_130;
      goto LABEL_54;
    }
    if ((v79 & 0xC0) != 0x80)
      goto LABEL_72;
    if (!v73)
    {
      v117 = v66;
      sub_1004DD8B8(0, *(id *)&v72, v74, v70);
      goto LABEL_83;
    }
    v391 = (void *)v66;
    if (!v77)
    {
      sub_1004DD884(0, *(id *)&v76, v78, v79);
      v66 = (uint64_t)v391;
      if ((v67 & 1) == 0)
        goto LABEL_130;
      goto LABEL_54;
    }
    v359 = v16;
    v100 = v70;
    LODWORD(v393) = v70;
    v101 = (void *)v74;
    *(double *)&v102 = v72;
    v387 = v78;
    v383 = v76;
    v369 = static String._unconditionallyBridgeFromObjectiveC(_:)(v368);
    v382 = v103;
    v381 = *(id *)(v73 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_1004DD884((id)v73, (id)v102, (uint64_t)v101, v100);
    v384 = (char *)v77;
    v104 = v383;
    sub_1004DD884((id)v77, *(id *)&v383, v387, v79);
    sub_1004DD884((id)v73, (id)v102, (uint64_t)v101, LOBYTE(v393));
    v105 = (void *)v77;
    v106 = v387;
    sub_1004DD884(v105, *(id *)&v104, v387, v79);
    v389 = v102;
    v390 = (void *)v73;
    v392 = v101;
    sub_1004DD884((id)v73, (id)v102, (uint64_t)v101, LOBYTE(v393));
    sub_1004DD884(v384, *(id *)&v104, v106, v79);
    v107 = objc_msgSend(v381, "userIdentity");
    v108 = objc_msgSend(v107, "userRecordID");

    if (v108)
    {
      v109 = objc_msgSend(v108, "recordName");

      v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
      v112 = v111;

      v113 = v382;
      if (v369 == v110 && v382 == v112)
      {
        swift_bridgeObjectRelease_n(v382, 2);
LABEL_106:
        v130 = (id)v389;
        v67 = (uint64_t)v390;
        sub_1004DD8B8(v390, (id)v389, (uint64_t)v392, LOBYTE(v393));
        v131 = v383;
        v132 = v384;
        v133 = v387;
        sub_1004DD8B8(v384, *(id *)&v383, v387, v79);
        sub_1004DD8B8(v132, *(id *)&v131, v133, v79);
        sub_1004DD8B8((void *)v67, v130, (uint64_t)v392, LOBYTE(v393));
        sub_1004DD8B8(v132, *(id *)&v131, v133, v79);
        sub_1004DD8B8((void *)v67, v130, (uint64_t)v392, LOBYTE(v393));
        v16 = v359;
        LOBYTE(v67) = v385;
        v18 = v386;
        v66 = (uint64_t)v391;
        if ((v385 & 1) == 0)
        {
LABEL_130:
          v20 = v66;
          v2 = v363;
          goto LABEL_144;
        }
        goto LABEL_54;
      }
      v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v369, v382, v110, v112, 0);
      swift_bridgeObjectRelease(v113);
      swift_bridgeObjectRelease(v112);
      if ((v115 & 1) != 0)
        goto LABEL_106;
    }
    else
    {
      swift_bridgeObjectRelease(v382);
    }
    v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v368);
    v121 = v120;
    v122 = objc_msgSend(*(id *)&v384[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
    v123 = objc_msgSend(v122, "userRecordID");

    if (!v123)
    {
      swift_bridgeObjectRelease(v121);
      v16 = v359;
LABEL_109:
      v134 = sub_10063B4E0();
      v136 = v135;
      v138 = sub_10063B4E0();
      v139 = v137;
      if (v134 == v138 && v136 == v137)
      {
        v98 = 0;
        v139 = v136;
      }
      else
      {
        v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v136, v138, v137, 1);
      }
      swift_bridgeObjectRelease(v136);
      swift_bridgeObjectRelease(v139);
      v145 = v384;
      sub_1004DD8B8(v384, *(id *)&v383, v387, v79);
      v67 = v389;
      v146 = v390;
      sub_1004DD8B8(v390, (id)v389, (uint64_t)v392, LOBYTE(v393));
      sub_1004DD8B8(v145, *(id *)&v383, v387, v79);
      sub_1004DD8B8(v146, (id)v67, (uint64_t)v392, LOBYTE(v393));
      sub_1004DD8B8(v145, *(id *)&v383, v387, v79);
      sub_1004DD8B8(v146, (id)v67, (uint64_t)v392, LOBYTE(v393));
      LOBYTE(v67) = v385;
LABEL_60:
      v99 = v67 ^ v98;
      v18 = v386;
      v66 = (uint64_t)v391;
      if ((v99 & 1) != 0)
        goto LABEL_118;
      goto LABEL_54;
    }
    v124 = objc_msgSend(v123, "recordName");

    v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v124);
    v127 = v126;

    if (v119 == v125 && v121 == v127)
    {
      swift_bridgeObjectRelease_n(v121, 2);
      v16 = v359;
    }
    else
    {
      v129 = _stringCompareWithSmolCheck(_:_:expecting:)(v119, v121, v125, v127, 0);
      swift_bridgeObjectRelease(v121);
      swift_bridgeObjectRelease(v127);
      v16 = v359;
      if ((v129 & 1) == 0)
        goto LABEL_109;
    }
    v140 = v390;
    sub_1004DD8B8(v390, (id)v389, (uint64_t)v392, LOBYTE(v393));
    v141 = v383;
    v142 = v384;
    v143 = v387;
    sub_1004DD8B8(v384, *(id *)&v383, v387, v79);
    sub_1004DD8B8(v142, *(id *)&v141, v143, v79);
    v144 = v140;
    v67 = (uint64_t)v392;
    sub_1004DD8B8(v144, (id)v389, (uint64_t)v392, LOBYTE(v393));
    sub_1004DD8B8(v142, *(id *)&v141, v143, v79);
    sub_1004DD8B8(v390, (id)v389, v67, LOBYTE(v393));
    LOBYTE(v67) = v385;
    v18 = v386;
    v66 = (uint64_t)v391;
    if ((v385 & 1) != 0)
      break;
LABEL_54:
    v68 += 32;
    v69 = (char *)(v66 + 1);
    v21 = v66;
    if (v66 + 1 >= v11)
    {
      ++v66;
      goto LABEL_118;
    }
  }
  v2 = v363;
  if (v66 >= v17)
    goto LABEL_120;
LABEL_314:
  __break(1u);
LABEL_315:
  __break(1u);
LABEL_316:
  __break(1u);
LABEL_317:
  __break(1u);
LABEL_318:
  __break(1u);
LABEL_319:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100BA7654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v47 = a5;
  v45 = a1;
  v54 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v7 = __chkstk_darwin(v54);
  v55 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v43 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v43 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v43 - v16;
  result = __chkstk_darwin(v15);
  v53 = a3;
  v44 = a2;
  if (a3 != a2)
  {
    v22 = (char *)&v43 - v20;
    v23 = *(_QWORD *)(v19 + 72);
    v24 = v23 * (v53 - 1);
    v50 = v21;
    v51 = v23;
    v64 = v23 * v53;
    v46 = v11;
    v56 = v17;
    v48 = v14;
    v49 = (char *)&v43 - v20;
    while (2)
    {
      v26 = 0;
      v59 = v45;
      v52 = v24;
      while (1)
      {
        v27 = *v21;
        v58 = v64 + v26;
        sub_1004B8460(v64 + v26 + v27, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v57 = v24 + v26;
        sub_1004B8460(v24 + v26 + v27, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B8460((uint64_t)v22, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v28 = v54;
        if (swift_getEnumCaseMultiPayload(v14, v54) != 2)
          break;
        v29 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        v30 = &v14[*(int *)(v29 + 48)];
        v31 = (uint64_t)v14;
        v33 = *(_QWORD *)v30;
        v32 = *((_QWORD *)v30 + 1);
        sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
        sub_1004B8460((uint64_t)v17, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v11, v28) != 2)
        {
          swift_bridgeObjectRelease(v32);
          v25 = (uint64_t)v11;
          v14 = v48;
          v22 = v49;
          v17 = v56;
          v24 = v52;
          goto LABEL_5;
        }
        v34 = &v11[*(int *)(v29 + 48)];
        v35 = *(_QWORD *)v34;
        v36 = *((_QWORD *)v34 + 1);
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
        if ((v47 & 1) != 0)
        {
          v62 = v33;
          v63 = v32;
          v60 = v35;
          v61 = v36;
        }
        else
        {
          v62 = v35;
          v63 = v36;
          v60 = v33;
          v61 = v32;
        }
        v37 = sub_1004D292C();
        v38 = StringProtocol.localizedStandardCompare<A>(_:)(&v60, &type metadata for String, &type metadata for String, v37, v37);
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease(v36);
        v17 = v56;
        sub_1004B84A4((uint64_t)v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v22 = v49;
        result = sub_1004B84A4((uint64_t)v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v21 = v50;
        v11 = v46;
        v14 = v48;
        v24 = v52;
        if (v38 != -1)
          goto LABEL_6;
        v39 = *v50;
        if (!*v50)
        {
          __break(1u);
          return result;
        }
        v40 = v50;
        v41 = v39 + v64 + v26;
        v42 = v39 + v52 + v26;
        sub_1004B84E0(v41, v55, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_arrayInitWithTakeFrontToBack(v41, v42, 1, v54);
        result = sub_1004B84E0(v55, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v26 -= v51;
        ++v59;
        v17 = v56;
        v21 = v40;
        if (v53 == v59)
          goto LABEL_6;
      }
      v25 = (uint64_t)v14;
LABEL_5:
      sub_1004B84A4(v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
      result = sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v21 = v50;
LABEL_6:
      v24 += v51;
      v64 += v51;
      if (++v53 == v44)
        return result;
      continue;
    }
  }
  return result;
}

void sub_100BA7A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  double v27;
  void *v28;
  id v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  unsigned __int8 v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  char *v55;
  char v56;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  unsigned __int8 v69;
  void *v70;
  unsigned __int8 v71;
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  uint64_t v77;
  unsigned __int8 v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  unsigned __int8 v87;
  void *v88;
  id v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  __int128 v95;
  id v96;
  uint64_t v97;
  unsigned __int8 v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  void *v106;
  _BYTE v107[16];
  uint64_t v108;
  uint64_t v109;
  NSString *v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  __int128 *v122;
  void *v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  _BYTE *v130;
  unsigned int v131;
  id v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;

  v109 = a1;
  v7 = type metadata accessor for Calendar.Component(0);
  v120 = *(_QWORD *)(v7 - 8);
  v121 = v7;
  __chkstk_darwin(v7);
  v119 = &v107[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Date(0);
  v117 = *(_QWORD *)(v9 - 8);
  v118 = v9;
  v10 = __chkstk_darwin(v9);
  v116 = &v107[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v115 = &v107[-v12];
  v114 = type metadata accessor for Calendar(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v130 = &v107[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = a2;
  if (a3 != a2)
  {
    v14 = *a4;
    v110 = CKCurrentUserDefaultName;
    v135 = v14;
    v15 = (__int128 *)(v14 + 32 * a3);
    v112 = enum case for Calendar.Component.day(_:);
LABEL_5:
    v122 = v15;
    v16 = v109;
    v127 = a3;
    while (1)
    {
      v17 = *((_QWORD *)v15 - 4);
      v18 = *((unsigned __int8 *)v15 - 8);
      v19 = v18 >> 6;
      if (!(v18 >> 6))
        goto LABEL_62;
      v21 = *(_QWORD *)v15;
      v20 = *((_QWORD *)v15 + 1);
      v22 = *((_QWORD *)v15 + 2);
      v23 = *((unsigned __int8 *)v15 + 24);
      v24 = *((_QWORD *)v15 - 3);
      v25 = *((_QWORD *)v15 - 2);
      if (v19 != 2)
        break;
      if ((v23 & 0xC0) != 0x80)
        goto LABEL_26;
      if (!v17)
      {
        sub_1004DD8B8(0, *((id *)v15 - 3), *((_QWORD *)v15 - 2), *((_BYTE *)v15 - 8));
        goto LABEL_4;
      }
      if (!v21)
      {
        sub_1004DD884(0, (id)v20, v22, *((_BYTE *)v15 + 24));
        goto LABEL_62;
      }
      v128 = *((unsigned __int8 *)v15 - 8);
      v39 = (void *)v24;
      v40 = v22;
      v129 = v25;
      v41 = (void *)v20;
      v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
      v126 = v42;
      v125 = *(id *)(v17 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_1004DD884((id)v17, v39, v129, v128);
      sub_1004DD884((id)v21, v41, v40, v23);
      sub_1004DD884((id)v21, v41, v40, v23);
      sub_1004DD884((id)v17, v39, v129, v128);
      v132 = v41;
      v133 = (char *)v21;
      v134 = v40;
      v131 = v23;
      sub_1004DD884((id)v21, v41, v40, v23);
      v43 = v17;
      v124 = v39;
      v44 = v39;
      v45 = v128;
      sub_1004DD884((id)v17, v44, v129, v128);
      v46 = objc_msgSend(v125, "userIdentity");
      v47 = objc_msgSend(v46, "userRecordID");

      v123 = (void *)v17;
      if (v47)
      {
        v48 = objc_msgSend(v47, "recordName");

        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v52 = v126;
        if (v111 == v49 && v126 == v51)
        {
          swift_bridgeObjectRelease_n(v126, 2);
          v55 = v133;
          v17 = v43;
LABEL_57:
          v70 = (void *)v17;
          v71 = v45;
          v72 = v124;
          v73 = v129;
          sub_1004DD8B8(v70, v124, v129, v71);
          v74 = v55;
          v75 = v132;
          v76 = v55;
          v77 = v134;
          v78 = v131;
          sub_1004DD8B8(v74, v132, v134, v131);
          sub_1004DD8B8(v76, v75, v77, v78);
          v79 = v123;
          LOBYTE(v75) = v128;
          sub_1004DD8B8(v123, v72, v73, v128);
          sub_1004DD8B8(v79, v72, v73, v75);
          sub_1004DD8B8(v133, v132, v77, v78);
          a3 = v127;
          goto LABEL_62;
        }
        v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v111, v126, v49, v51, 0);
        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v51);
        v55 = v133;
        v17 = v43;
        if ((v54 & 1) != 0)
          goto LABEL_57;
      }
      else
      {
        swift_bridgeObjectRelease(v126);
        v55 = v133;
      }
      v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
      v60 = v59;
      v61 = objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v62 = objc_msgSend(v61, "userRecordID");

      if (v62)
      {
        v63 = objc_msgSend(v62, "recordName");

        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v66 = v65;

        if (v126 == v64 && v60 == v66)
        {
          swift_bridgeObjectRelease_n(v60, 2);
          v69 = v128;
LABEL_68:
          v106 = (void *)v17;
          v100 = (void *)v17;
          v101 = v124;
          v103 = v129;
          sub_1004DD8B8(v106, v124, v129, v69);
          v99 = v55;
          v96 = v132;
          v102 = v132;
          v97 = v134;
          v104 = v134;
          v98 = v131;
          v105 = v131;
LABEL_69:
          sub_1004DD8B8(v99, v102, v104, v105);
          sub_1004DD8B8(v55, v96, v97, v98);
          sub_1004DD8B8(v100, v101, v103, v69);
          sub_1004DD8B8(v100, v101, v103, v69);
          sub_1004DD8B8(v55, v96, v97, v98);
          a3 = v127;
LABEL_4:
          ++a3;
          v15 = v122 + 2;
          if (a3 == v108)
            return;
          goto LABEL_5;
        }
        v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v126, v60, v64, v66, 0);
        swift_bridgeObjectRelease(v60);
        swift_bridgeObjectRelease(v66);
        v69 = v128;
        if ((v68 & 1) != 0)
          goto LABEL_68;
      }
      else
      {
        swift_bridgeObjectRelease(v60);
        v69 = v128;
      }
      v80 = sub_10063B4E0();
      v82 = v81;
      v84 = sub_10063B4E0();
      v85 = v83;
      if (v80 == v84 && v82 == v83)
      {
        swift_bridgeObjectRelease_n(v82, 2);
        v96 = v132;
        v97 = v134;
        v98 = v131;
        sub_1004DD8B8(v55, v132, v134, v131);
        v99 = (void *)v17;
        v100 = (void *)v17;
        v101 = v124;
        v102 = v124;
        v103 = v129;
        v104 = v129;
        v105 = v69;
        goto LABEL_69;
      }
      LODWORD(v126) = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, v84, v83, 1);
      swift_bridgeObjectRelease(v82);
      swift_bridgeObjectRelease(v85);
      v86 = v132;
      v87 = v131;
      sub_1004DD8B8(v55, v132, v134, v131);
      v88 = (void *)v17;
      v89 = v124;
      v90 = v129;
      sub_1004DD8B8(v88, v124, v129, v69);
      sub_1004DD8B8(v55, v86, v134, v87);
      v91 = v123;
      sub_1004DD8B8(v123, v89, v90, v69);
      sub_1004DD8B8(v91, v89, v90, v69);
      sub_1004DD8B8(v133, v86, v134, v87);
      a3 = v127;
      if ((v126 & 1) == 0)
        goto LABEL_4;
LABEL_62:
      if (!v135)
      {
        __break(1u);
        return;
      }
      v92 = *((_QWORD *)v15 + 2);
      v93 = *((_BYTE *)v15 + 24);
      v94 = *v15;
      v95 = *(v15 - 1);
      *v15 = *(v15 - 2);
      v15[1] = v95;
      *((_QWORD *)v15 - 2) = v92;
      *((_BYTE *)v15 - 8) = v93;
      *(v15 - 2) = v94;
      v15 -= 2;
      if (a3 == ++v16)
        goto LABEL_4;
    }
    if (v19 == 1)
    {
      if ((v23 & 0xC0) == 0x40)
      {
        v26 = (void *)*((_QWORD *)v15 - 3);
        v28 = *(void **)v15;
        v132 = (id)*((_QWORD *)v15 + 1);
        v27 = *(double *)&v132;
        v134 = v22;
        sub_1004DD884(v28, (id)v20, v22, v23);
        v29 = sub_1004DD884((id)v17, v26, v25, v18);
        v30 = static Calendar.current.getter(v29);
        v133 = (char *)v21;
        v31 = v115;
        v32 = Date.init(timeIntervalSinceReferenceDate:)(v30, *(double *)&v26);
        v33 = v116;
        Date.init(timeIntervalSinceReferenceDate:)(v32, v27);
        v131 = v23;
        v35 = v119;
        v34 = v120;
        v36 = v121;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v120 + 104))(v119, v112, v121);
        v129 = Calendar.compare(_:to:toGranularity:)(v31, v33, v35);
        (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v35, v36);
        v37 = v118;
        v38 = *(void (**)(_BYTE *, uint64_t))(v117 + 8);
        v38(v33, v118);
        v38(v31, v37);
        a3 = v127;
        (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v130, v114);
        sub_1004DD8B8(v133, v132, v134, v131);
        if (v129 != -1)
          goto LABEL_4;
        goto LABEL_62;
      }
LABEL_26:
      if (v23 < 0x40)
        goto LABEL_4;
      if (v23 < 0xC0)
        goto LABEL_62;
      v56 = 1;
    }
    else
    {
      if (v23 < 0x40)
        goto LABEL_4;
      if (!(v25 | v24 | v17) && v18 == 192)
      {
        sub_1004DD884(0, 0, 0, 0xC0u);
        goto LABEL_62;
      }
      if (v23 <= 0xBF)
      {
LABEL_43:
        if (v18 == 192 && v17 == 1 && !(v25 | v24))
        {
          sub_1004DD884((id)1, 0, 0, 0xC0u);
          goto LABEL_4;
        }
        goto LABEL_62;
      }
      v56 = 0;
    }
    if (!(v22 | v20 | v21) && v23 == 192)
      goto LABEL_4;
    if (v21 == 1 && (v22 | v20) == 0 && v23 == 192)
      v56 = 1;
    if ((v56 & 1) != 0)
      goto LABEL_62;
    goto LABEL_43;
  }
}

void sub_100BA838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  double v26;
  double v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  void *v55;
  char *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  id v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSString *v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  __int128 *v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  void *v126;
  id v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;

  v105 = a1;
  v7 = type metadata accessor for Calendar.Component(0);
  v116 = *(_QWORD *)(v7 - 8);
  v117 = v7;
  __chkstk_darwin(v7);
  v115 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v113 = *(_QWORD *)(v9 - 8);
  v114 = v9;
  v10 = __chkstk_darwin(v9);
  v112 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v111 = (char *)&v103 - v12;
  v110 = type metadata accessor for Calendar(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v124 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = a2;
  if (a3 != a2)
  {
    v14 = *a4;
    v106 = CKCurrentUserDefaultName;
    v108 = enum case for Calendar.Component.day(_:);
    v130 = v14;
    v15 = (__int128 *)(v14 + 32 * a3);
LABEL_6:
    v118 = v15;
    v16 = v105;
    v122 = a3;
    while (1)
    {
      v17 = *((unsigned __int8 *)v15 + 24);
      v18 = *((_QWORD *)v15 - 4);
      v19 = v17 >> 6;
      if (!(v17 >> 6))
        goto LABEL_56;
      v21 = *(_QWORD *)v15;
      v20 = *((_QWORD *)v15 + 1);
      v22 = *((_QWORD *)v15 + 2);
      v23 = *((_QWORD *)v15 - 3);
      v24 = *((_QWORD *)v15 - 2);
      v25 = *((unsigned __int8 *)v15 - 8);
      if (v19 != 2)
        break;
      if ((v25 & 0xC0) != 0x80)
        goto LABEL_28;
      if (!v21)
      {
        sub_1004DD8B8(0, *((id *)v15 + 1), v22, *((_BYTE *)v15 + 24));
        goto LABEL_5;
      }
      if (!v18)
      {
        sub_1004DD884(0, (id)v23, *((_QWORD *)v15 - 2), *((_BYTE *)v15 - 8));
        goto LABEL_56;
      }
      v39 = (void *)*((_QWORD *)v15 + 1);
      v123 = (char *)*((_QWORD *)v15 - 4);
      v125 = v24;
      v40 = v22;
      v41 = (void *)v23;
      v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      v121 = v42;
      v120 = *(id *)(v21 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_1004DD884((id)v21, v39, v40, v17);
      sub_1004DD884(v123, v41, v125, v25);
      sub_1004DD884((id)v21, v39, v40, v17);
      sub_1004DD884(v123, v41, v125, v25);
      v126 = (void *)v21;
      v127 = v39;
      v43 = v39;
      v128 = v40;
      v44 = v123;
      v129 = v17;
      sub_1004DD884((id)v21, v43, v40, v17);
      v45 = v44;
      v119 = v41;
      sub_1004DD884(v44, v41, v125, v25);
      v46 = objc_msgSend(v120, "userIdentity");
      v47 = objc_msgSend(v46, "userRecordID");

      if (v47)
      {
        v48 = objc_msgSend(v47, "recordName");

        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v52 = v121;
        if (v107 == v49 && v121 == v51)
        {
          swift_bridgeObjectRelease_n(v121, 2);
          v55 = v126;
          v56 = v45;
LABEL_51:
          v70 = v55;
          v71 = v125;
          v72 = v55;
          v73 = v128;
          sub_1004DD8B8(v70, v127, v128, v129);
          v74 = v119;
          sub_1004DD8B8(v56, v119, v71, v25);
          sub_1004DD8B8(v56, v74, v71, v25);
          v75 = v73;
          LOBYTE(v73) = v129;
          sub_1004DD8B8(v72, v127, v75, v129);
          sub_1004DD8B8(v56, v74, v71, v25);
          sub_1004DD8B8(v72, v127, v128, v73);
          a3 = v122;
          goto LABEL_56;
        }
        v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v107, v121, v49, v51, 0);
        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v51);
        v55 = v126;
        v56 = v45;
        if ((v54 & 1) != 0)
          goto LABEL_51;
      }
      else
      {
        swift_bridgeObjectRelease(v121);
        v55 = v126;
        v56 = v45;
      }
      v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      v59 = v58;
      v60 = objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v61 = objc_msgSend(v60, "userRecordID");

      if (v61)
      {
        v62 = objc_msgSend(v61, "recordName");

        v63 = v59;
        v64 = v62;
        v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
        v67 = v66;

        if (v121 == v65 && v63 == v67)
        {
          swift_bridgeObjectRelease_n(v63, 2);
          v55 = v126;
LABEL_62:
          v102 = v55;
          v93 = v56;
          v94 = v125;
          v95 = v55;
          v97 = v127;
          v96 = v128;
          v100 = v129;
          sub_1004DD8B8(v102, v127, v128, v129);
          v92 = v93;
          v90 = v119;
          v98 = v119;
          v99 = v94;
          v101 = v25;
LABEL_63:
          sub_1004DD8B8(v92, v98, v99, v101);
          sub_1004DD8B8(v93, v90, v94, v25);
          sub_1004DD8B8(v95, v97, v96, v100);
          sub_1004DD8B8(v93, v90, v94, v25);
          sub_1004DD8B8(v95, v97, v96, v100);
          a3 = v122;
LABEL_5:
          ++a3;
          v15 = v118 + 2;
          if (a3 == v104)
            return;
          goto LABEL_6;
        }
        v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v121, v63, v65, v67, 0);
        swift_bridgeObjectRelease(v63);
        swift_bridgeObjectRelease(v67);
        v55 = v126;
        if ((v69 & 1) != 0)
          goto LABEL_62;
      }
      else
      {
        swift_bridgeObjectRelease(v59);
      }
      v76 = sub_10063B4E0();
      v78 = v77;
      v80 = sub_10063B4E0();
      v81 = v79;
      if (v76 == v80 && v78 == v79)
      {
        swift_bridgeObjectRelease_n(v78, 2);
        v90 = v119;
        v91 = v125;
        sub_1004DD8B8(v56, v119, v125, v25);
        v92 = v55;
        v93 = v56;
        v94 = v91;
        v95 = v55;
        v97 = v127;
        v96 = v128;
        v98 = v127;
        v99 = v128;
        v100 = v129;
        v101 = v129;
        goto LABEL_63;
      }
      LODWORD(v121) = _stringCompareWithSmolCheck(_:_:expecting:)(v76, v78, v80, v79, 1);
      swift_bridgeObjectRelease(v78);
      swift_bridgeObjectRelease(v81);
      v82 = v125;
      v83 = v119;
      sub_1004DD8B8(v56, v119, v125, v25);
      v84 = v127;
      sub_1004DD8B8(v55, v127, v128, v129);
      sub_1004DD8B8(v56, v83, v82, v25);
      v85 = v128;
      LOBYTE(v82) = v129;
      sub_1004DD8B8(v55, v84, v128, v129);
      sub_1004DD8B8(v123, v83, v125, v25);
      sub_1004DD8B8(v55, v84, v85, v82);
      a3 = v122;
      if ((v121 & 1) == 0)
        goto LABEL_5;
LABEL_56:
      if (!v130)
      {
        __break(1u);
        return;
      }
      v86 = *((_QWORD *)v15 + 2);
      v87 = *((_BYTE *)v15 + 24);
      v88 = *v15;
      v89 = *(v15 - 1);
      *v15 = *(v15 - 2);
      v15[1] = v89;
      *((_QWORD *)v15 - 2) = v86;
      *((_BYTE *)v15 - 8) = v87;
      *(v15 - 2) = v88;
      v15 -= 2;
      if (a3 == ++v16)
        goto LABEL_5;
    }
    if (v19 == 1)
    {
      if ((v25 & 0xC0) == 0x40)
      {
        v27 = *((double *)v15 - 3);
        v127 = (id)*((_QWORD *)v15 + 1);
        v26 = *(double *)&v127;
        v128 = v22;
        v28 = (void *)v23;
        sub_1004DD884((id)v21, (id)v20, v22, v17);
        v29 = sub_1004DD884((id)v18, v28, v24, v25);
        v30 = static Calendar.current.getter(v29);
        v126 = (void *)v21;
        v31 = v111;
        v32 = Date.init(timeIntervalSinceReferenceDate:)(v30, v26);
        v33 = v112;
        Date.init(timeIntervalSinceReferenceDate:)(v32, v27);
        v129 = v17;
        v35 = v115;
        v34 = v116;
        v36 = v117;
        (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v115, v108, v117);
        v125 = Calendar.compare(_:to:toGranularity:)(v31, v33, v35);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
        v37 = v114;
        v38 = *(void (**)(char *, uint64_t))(v113 + 8);
        v38(v33, v114);
        v38(v31, v37);
        a3 = v122;
        (*(void (**)(char *, uint64_t))(v109 + 8))(v124, v110);
        sub_1004DD8B8(v126, v127, v128, v129);
        if (v125 != -1)
          goto LABEL_5;
        goto LABEL_56;
      }
LABEL_28:
      if (v25 < 0x40)
        goto LABEL_5;
      v57 = 0;
      if (v25 < 0xC0)
      {
LABEL_36:
        if (v57 && v17 == 192 && v21 == 1 && !(v22 | v20))
          goto LABEL_5;
        goto LABEL_56;
      }
    }
    else
    {
      if (v25 < 0x40)
        goto LABEL_5;
      v57 = 1;
      if (!(v22 | v20 | v21) && v17 == 192)
        goto LABEL_56;
      if (v25 < 0xC0)
        goto LABEL_36;
    }
    if (!(v24 | v23 | v18) && v25 == 192)
    {
      sub_1004DD884(0, 0, 0, 0xC0u);
      goto LABEL_5;
    }
    if (v25 == 192 && v18 == 1 && !(v24 | v23))
    {
      sub_1004DD884((id)1, 0, 0, 0xC0u);
      goto LABEL_56;
    }
    goto LABEL_36;
  }
}

uint64_t sub_100BA8CCC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void *a5, int a6, uint64_t (*a7)(char *, char *, id, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t result;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t (*v62)(char *, char *, id, _QWORD);
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v62 = a7;
  v63 = a5;
  v8 = v7;
  v61 = a6;
  v60 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v13 = __chkstk_darwin(v60);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v55 = (char *)&v55 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v55 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v55 - v21;
  v64 = *(_QWORD *)(v23 + 72);
  if (!v64)
  {
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (a2 - a1 == 0x8000000000000000 && v64 == -1)
    goto LABEL_67;
  v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v64 == -1)
    goto LABEL_68;
  v25 = (uint64_t)(a2 - a1) / v64;
  v67 = a1;
  v66 = a4;
  v26 = v24 / v64;
  if (v25 >= v24 / v64)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      v28 = v26 * v64;
      if (a4 < a2 || a2 + v28 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v26, v60);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v36 = a4 + v28;
      v65 = a4 + v28;
      v67 = a2;
      if (v28 < 1 || a1 >= a2)
        goto LABEL_64;
      v59 = (unint64_t)v15;
      v38 = -v64;
      v39 = (uint64_t)v55;
      v56 = a1;
      v57 = -v64;
      v58 = a4;
      while (1)
      {
        v40 = a3;
        sub_1004B8460(v36 + v38, v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v41 = a2;
        v42 = v8;
        v43 = a2 + v38;
        v44 = a2 + v38;
        v45 = v38;
        v22 = (char *)v39;
        v20 = (char *)v59;
        sub_1004B8460(v44, v59, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v46 = v62(v22, v20, v63, v61 & 1);
        if (v42)
          goto LABEL_63;
        v47 = v46;
        v64 = 0;
        v48 = v40 + v45;
        sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v39 = (uint64_t)v22;
        if ((v47 & 1) != 0)
        {
          a3 = v40 + v45;
          if (v40 < v41 || v48 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack(v40 + v45, v43, 1, v60);
            v50 = v58;
          }
          else
          {
            v49 = v40 == v41;
            v50 = v58;
            if (!v49)
              swift_arrayInitWithTakeBackToFront(v48);
          }
          v38 = v57;
          v67 += v57;
        }
        else
        {
          v51 = v65;
          v52 = v65 + v45;
          v65 += v45;
          a3 = v40 + v45;
          if (v40 < v51 || v48 >= v51)
          {
            swift_arrayInitWithTakeFrontToBack(v40 + v45, v52, 1, v60);
            v43 = v41;
            v38 = v57;
            v50 = v58;
          }
          else
          {
            v49 = v40 == v51;
            v50 = v58;
            if (!v49)
              swift_arrayInitWithTakeBackToFront(v48);
            v43 = v41;
            v38 = v57;
          }
        }
        v36 = v65;
        if (v65 > v50)
        {
          a2 = v43;
          v53 = v43 > v56;
          v8 = v64;
          if (v53)
            continue;
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v25 & 0x8000000000000000) == 0)
  {
    v27 = v25 * v64;
    if (a4 < a1 || a1 + v27 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v25, v60);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v59 = a4 + v27;
    v65 = a4 + v27;
    if (v27 < 1 || a2 >= a3)
      goto LABEL_64;
    v30 = a2;
    while (1)
    {
      sub_1004B8460(v30, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(a4, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v31 = v62(v22, v20, v63, v61 & 1);
      if (v7)
        break;
      v32 = v31;
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v33 = v67;
      if ((v32 & 1) != 0)
      {
        v34 = v30 + v64;
        if (v67 < v30 || v67 >= v34)
        {
          swift_arrayInitWithTakeFrontToBack(v67, v30, 1, v60);
        }
        else if (v67 == v30)
        {
          v33 = v30;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v67);
        }
      }
      else
      {
        v35 = v66 + v64;
        if (v67 < v66 || v67 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack(v67, v66, 1, v60);
        }
        else if (v67 != v66)
        {
          swift_arrayInitWithTakeBackToFront(v67);
        }
        v66 = v35;
        v34 = v30;
      }
      v67 = v33 + v64;
      a4 = v66;
      if (v66 < v59)
      {
        v30 = v34;
        if (v34 < a3)
          continue;
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_64:
    sub_100D162E8(&v67, &v66, (uint64_t *)&v65);

    return 1;
  }
LABEL_69:

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100BA9274(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _BOOL4 v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t result;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;

  v85 = a5;
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v10 = __chkstk_darwin(v9);
  v11 = __chkstk_darwin(v10);
  v86 = (uint64_t)&v82 - v12;
  v13 = __chkstk_darwin(v11);
  v90 = (char *)&v82 - v14;
  v15 = __chkstk_darwin(v13);
  v89 = (unint64_t)&v82 - v16;
  v17 = __chkstk_darwin(v15);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v82 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v82 - v22;
  __chkstk_darwin(v21);
  v28 = (char *)&v82 - v27;
  v91 = *(_QWORD *)(v29 + 72);
  if (!v91)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - a1 == 0x8000000000000000 && v91 == -1)
    goto LABEL_78;
  v30 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v91 == -1)
    goto LABEL_79;
  v31 = (uint64_t)(a2 - a1) / v91;
  v99 = a1;
  v98 = a4;
  v32 = v30 / v91;
  v92 = v24;
  if (v31 >= v30 / v91)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      v34 = v32 * v91;
      v84 = (char *)v25;
      v35 = v86;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v32, v24);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v54 = a4 + v34;
      v97 = a4 + v34;
      v99 = a2;
      if (v34 >= 1 && a1 < a2)
      {
        v56 = -v91;
        v87 = a4;
        v88 = a1;
        do
        {
          v57 = a3;
          v58 = v89;
          sub_1004B8460(v54 + v56, v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v59 = a2 + v56;
          v60 = (uint64_t)v90;
          sub_1004B8460(a2 + v56, (uint64_t)v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B8460(v58, v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v61 = v92;
          if (swift_getEnumCaseMultiPayload(v35, v92) == 2)
          {
            v62 = sub_1004B804C((uint64_t *)&unk_1013EA630);
            v63 = (uint64_t *)(v35 + *(int *)(v62 + 48));
            v91 = *v63;
            v64 = v35;
            v65 = v63[1];
            sub_1004B84A4(v64, type metadata accessor for CRLBoardIdentifier);
            v66 = v60;
            v67 = (uint64_t)v84;
            sub_1004B8460(v66, (uint64_t)v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if (swift_getEnumCaseMultiPayload(v67, v61) == 2)
            {
              v83 = v65;
              v68 = (uint64_t *)(v67 + *(int *)(v62 + 48));
              v69 = *v68;
              v70 = v68[1];
              sub_1004B84A4(v67, type metadata accessor for CRLBoardIdentifier);
              v71 = v57;
              if ((v85 & 1) != 0)
              {
                v72 = v83;
                v95 = v91;
                v96 = v83;
                v93 = v69;
                v94 = v70;
              }
              else
              {
                v95 = v69;
                v96 = v70;
                v72 = v83;
                v93 = v91;
                v94 = v83;
              }
              v74 = sub_1004D292C();
              v75 = StringProtocol.localizedStandardCompare<A>(_:)(&v93, &type metadata for String, &type metadata for String, v74, v74);
              swift_bridgeObjectRelease(v72);
              swift_bridgeObjectRelease(v70);
              v73 = v75 == -1;
            }
            else
            {
              swift_bridgeObjectRelease(v65);
              sub_1004B84A4(v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
              v73 = 0;
              v71 = v57;
            }
            v35 = v86;
          }
          else
          {
            sub_1004B84A4(v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v73 = 0;
            v71 = v57;
          }
          v76 = v87;
          v77 = v71 + v56;
          sub_1004B84A4((uint64_t)v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B84A4(v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v73)
          {
            if (v71 < a2 || v77 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v71 + v56, a2 + v56, 1, v92);
              v78 = v88;
            }
            else
            {
              v78 = v88;
              if (v71 != a2)
                swift_arrayInitWithTakeBackToFront(v71 + v56);
            }
            v99 += v56;
          }
          else
          {
            v79 = v97;
            v80 = v97 + v56;
            v97 += v56;
            if (v71 < v79 || v77 >= v79)
            {
              swift_arrayInitWithTakeFrontToBack(v71 + v56, v80, 1, v92);
              v59 = a2;
              v78 = v88;
            }
            else
            {
              v78 = v88;
              if (v71 != v79)
                swift_arrayInitWithTakeBackToFront(v71 + v56);
              v59 = a2;
            }
          }
          v54 = v97;
          if (v97 <= v76)
            break;
          a2 = v59;
          a3 = v71 + v56;
        }
        while (v59 > v78);
      }
LABEL_76:
      sub_100D162E8(&v99, &v98, (uint64_t *)&v97);
      return 1;
    }
  }
  else if ((v31 & 0x8000000000000000) == 0)
  {
    v33 = v31 * v91;
    v86 = v26;
    if (a4 < a1 || a1 + v33 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v31, v24);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v89 = a4 + v33;
    v97 = a4 + v33;
    if (v33 >= 1 && a2 < a3)
    {
      v90 = v28;
      v83 = a3;
      v84 = v23;
      while (1)
      {
        sub_1004B8460(a2, (uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B8460(a4, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B8460((uint64_t)v28, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v37 = v92;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v92);
        v39 = (uint64_t)v20;
        if (EnumCaseMultiPayload != 2)
          goto LABEL_28;
        v40 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        v41 = &v20[*(int *)(v40 + 48)];
        v42 = *(_QWORD *)v41;
        v43 = *((_QWORD *)v41 + 1);
        sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
        v44 = (uint64_t)v23;
        v45 = v86;
        sub_1004B8460(v44, v86, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v45, v37) != 2)
          break;
        v46 = (uint64_t *)(v45 + *(int *)(v40 + 48));
        v47 = *v46;
        v48 = v46[1];
        sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
        if ((v85 & 1) != 0)
        {
          v95 = v42;
          v96 = v43;
          v93 = v47;
          v94 = v48;
        }
        else
        {
          v95 = v47;
          v96 = v48;
          v93 = v42;
          v94 = v43;
        }
        v52 = sub_1004D292C();
        v53 = StringProtocol.localizedStandardCompare<A>(_:)(&v93, &type metadata for String, &type metadata for String, v52, v52);
        swift_bridgeObjectRelease(v43);
        swift_bridgeObjectRelease(v48);
        a3 = v83;
        v23 = v84;
        sub_1004B84A4((uint64_t)v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v28 = v90;
        sub_1004B84A4((uint64_t)v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v37 = v92;
        if (v53 != -1)
          goto LABEL_29;
        v49 = v99;
        v51 = a2 + v91;
        if (v99 < a2 || v99 >= v51)
        {
          swift_arrayInitWithTakeFrontToBack(v99, a2, 1, v92);
        }
        else if (v99 == a2)
        {
          v49 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v99);
        }
LABEL_35:
        v99 = v49 + v91;
        a4 = v98;
        if (v98 < v89)
        {
          a2 = v51;
          if (v51 < a3)
            continue;
        }
        goto LABEL_76;
      }
      swift_bridgeObjectRelease(v43);
      v39 = v45;
      a3 = v83;
      v23 = v84;
      v28 = v90;
LABEL_28:
      sub_1004B84A4(v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_29:
      v49 = v99;
      v50 = v98 + v91;
      if (v99 < v98 || v99 >= v50)
      {
        swift_arrayInitWithTakeFrontToBack(v99, v98, 1, v37);
      }
      else if (v99 != v98)
      {
        swift_arrayInitWithTakeBackToFront(v99);
      }
      v98 = v50;
      v51 = a2;
      v28 = v90;
      goto LABEL_35;
    }
    goto LABEL_76;
  }
LABEL_80:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100BA9A64(void **a1, void **a2, unint64_t a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  size_t v21;
  void **v22;
  void **v23;
  void **v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  char v64;
  char v65;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  unsigned __int8 v79;
  char *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unsigned __int8 v84;
  unint64_t v85;
  __int128 v86;
  void **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  void *v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  __int128 v102;
  void **v103;
  char v104;
  unsigned __int8 v105;
  char v106;
  char *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  size_t v111;
  void **v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  unint64_t v117;
  unint64_t v118;
  unsigned int v119;
  unsigned int v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  unsigned int v125;
  double v126;
  uint64_t v127;
  double v128;
  id v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t);
  char *v140;
  uint64_t v141;
  char *v142;
  void *v143;
  uint64_t v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  double v149;
  uint64_t v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v160;
  void *v161;
  char v162;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  id v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v175;
  void *v176;
  double v177;
  uint64_t v178;
  unsigned __int8 v179;
  uint64_t v180;
  void *v181;
  id v182;
  unsigned __int8 v183;
  void *v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  unsigned __int8 v194;
  void *v195;
  double v196;
  uint64_t v197;
  void *v198;
  unsigned __int8 v199;
  void *v200;
  id v201;
  void *v202;
  void *v203;
  uint64_t v204;
  unsigned __int8 v205;
  void *v206;
  double v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  void *v211;
  id v212;
  unsigned __int8 v213;
  void *v214;
  __int128 v215;
  void *v216;
  id v217;
  unsigned __int8 v218;
  void *v219;
  double v220;
  uint64_t v221;
  unsigned __int8 v222;
  void *v223;
  uint64_t v224;
  void *v225;
  uint64_t result;
  uint64_t v227;
  void *v228;
  id v229;
  uint64_t v230;
  NSString *v231;
  double v232;
  uint64_t v233;
  NSString *v234;
  char *v235;
  char *v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  id v248;
  unsigned int v249;
  char *v250;
  void **v251;
  unint64_t v252;
  void **v253;
  void **v254;
  void **v255;
  void **v256;
  void **v257;

  v8 = type metadata accessor for Calendar.Component(0);
  v245 = *(_QWORD *)(v8 - 8);
  v246 = v8;
  __chkstk_darwin(v8);
  v244 = (char *)&v227 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v242 = *(_QWORD *)(v10 - 8);
  v243 = v10;
  v11 = __chkstk_darwin(v10);
  v241 = (char *)&v227 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v240 = (char *)&v227 - v13;
  v14 = type metadata accessor for Calendar(0);
  v238 = *(_QWORD *)(v14 - 8);
  v239 = v14;
  __chkstk_darwin(v14);
  v250 = (char *)&v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)a2 - (char *)a1;
  v17 = (char *)a2 - (char *)a1 + 31;
  if ((char *)a2 - (char *)a1 >= 0)
    v17 = (char *)a2 - (char *)a1;
  v18 = v17 >> 5;
  v19 = a2;
  v252 = a3;
  v253 = a1;
  v20 = a3 - (_QWORD)a2;
  v257 = a1;
  v254 = a4;
  v256 = a4;
  if (v18 >= v20 / 32)
  {
    if (v20 < -31)
      goto LABEL_167;
    v111 = 4 * (v20 / 32);
    v112 = v19;
    if (v254 != v19 || &v19[v111] <= v254)
      memmove(v254, v19, v111 * 8);
    v113 = (char *)&v254[v111];
    v255 = &v254[v111];
    v257 = v19;
    if ((unint64_t)(v20 - 32) > 0xFFFFFFFFFFFFFFC0 || (v114 = (char *)v19, v253 >= v19))
    {
LABEL_166:
      sub_100D165A8((void **)&v257, (const void **)&v256, &v255);
      return 1;
    }
    v231 = CKCurrentUserDefaultName;
    v115 = (char *)(v252 - 32);
    LODWORD(v234) = enum case for Calendar.Component.day(_:);
    while (1)
    {
      v116 = v115 + 32;
      v118 = (unint64_t)*(v112 - 4);
      v112 -= 4;
      v117 = v118;
      v119 = *((unsigned __int8 *)v112 + 24);
      v120 = v119 >> 6;
      if (!(v119 >> 6))
        goto LABEL_145;
      v122 = *((_QWORD *)v113 - 4);
      v121 = *((_QWORD *)v113 - 3);
      v123 = v113 - 32;
      v124 = *((_QWORD *)v113 - 2);
      v125 = *(v113 - 8);
      v126 = *((double *)v112 + 1);
      v127 = (uint64_t)v112[2];
      if (v120 != 2)
        break;
      if ((v125 & 0xC0) != 0x80)
        goto LABEL_108;
      if (!v117)
      {
        sub_1004DD8B8(0, v112[1], (uint64_t)v112[2], *((_BYTE *)v112 + 24));
        goto LABEL_156;
      }
      if (!v122)
      {
        sub_1004DD884(0, (id)v121, v124, v125);
        goto LABEL_145;
      }
      v235 = v115 + 32;
      v236 = v113;
      v251 = (void **)v114;
      v142 = (char *)v122;
      v249 = v125;
      v248 = (id)v124;
      v143 = (void *)v121;
      v144 = v127;
      v233 = v127;
      v145 = v119;
      LODWORD(v252) = v119;
      v227 = static String._unconditionallyBridgeFromObjectiveC(_:)(v231);
      v230 = v146;
      v229 = *(id *)(v117 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      v232 = v126;
      sub_1004DD884((id)v117, *(id *)&v126, v144, v145);
      v147 = (uint64_t)v248;
      v148 = v249;
      sub_1004DD884(v142, v143, (uint64_t)v248, v249);
      sub_1004DD884(v142, v143, v147, v148);
      v149 = v126;
      v150 = v233;
      sub_1004DD884((id)v117, *(id *)&v149, v233, v252);
      v247 = v142;
      v237 = v143;
      sub_1004DD884(v142, v143, v147, v148);
      v151 = (void *)v117;
      sub_1004DD884((id)v117, *(id *)&v232, v150, v252);
      v152 = objc_msgSend(v229, "userIdentity");
      v153 = objc_msgSend(v152, "userRecordID");

      if (v153)
      {
        v154 = objc_msgSend(v153, "recordName");

        v155 = static String._unconditionallyBridgeFromObjectiveC(_:)(v154);
        v157 = v156;

        v158 = v230;
        if (v227 == v155 && v230 == v157)
        {
          swift_bridgeObjectRelease_n(v230, 2);
          v161 = v151;
LABEL_144:
          v228 = v161;
          v176 = v161;
          v177 = v232;
          v178 = v233;
          v179 = v252;
          sub_1004DD8B8(v176, *(id *)&v232, v233, v252);
          v181 = v247;
          v180 = (uint64_t)v248;
          v182 = v237;
          v183 = v249;
          sub_1004DD8B8(v247, v237, (uint64_t)v248, v249);
          sub_1004DD8B8(v181, v182, v180, v183);
          v184 = v228;
          sub_1004DD8B8(v228, *(id *)&v177, v178, v179);
          sub_1004DD8B8(v184, *(id *)&v177, v178, v179);
          sub_1004DD8B8(v181, v182, v180, v249);
          v114 = (char *)v251;
          v113 = v236;
          v116 = v235;
LABEL_145:
          if (v116 != v114 || v115 >= v114)
          {
            v185 = *((_OWORD *)v112 + 1);
            *(_OWORD *)v115 = *(_OWORD *)v112;
            *((_OWORD *)v115 + 1) = v185;
          }
          v257 = v112;
          goto LABEL_161;
        }
        v160 = _stringCompareWithSmolCheck(_:_:expecting:)(v227, v230, v155, v157, 0);
        swift_bridgeObjectRelease(v158);
        swift_bridgeObjectRelease(v157);
        v161 = v151;
        if ((v160 & 1) != 0)
          goto LABEL_144;
      }
      else
      {
        swift_bridgeObjectRelease(v230);
        v161 = (void *)v117;
      }
      v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v231);
      v167 = v166;
      v168 = objc_msgSend(*(id *)&v247[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
      v169 = objc_msgSend(v168, "userRecordID");

      if (v169)
      {
        v170 = objc_msgSend(v169, "recordName");

        v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v170);
        v173 = v172;

        if (v165 == v171 && v167 == v173)
        {
          swift_bridgeObjectRelease_n(v167, 2);
LABEL_154:
          v206 = v161;
          v207 = v232;
          v208 = v233;
          v228 = v161;
          v209 = v252;
          sub_1004DD8B8(v206, *(id *)&v232, v233, v252);
          v211 = v247;
          v210 = (uint64_t)v248;
          v212 = v237;
          v213 = v249;
          sub_1004DD8B8(v247, v237, (uint64_t)v248, v249);
          sub_1004DD8B8(v211, v212, v210, v213);
          v214 = v228;
          sub_1004DD8B8(v228, *(id *)&v207, v208, v209);
          sub_1004DD8B8(v214, *(id *)&v207, v208, v209);
          v202 = v211;
          v203 = v212;
          v204 = v210;
          v205 = v249;
LABEL_155:
          sub_1004DD8B8(v202, v203, v204, v205);
          v114 = (char *)v251;
          v113 = v236;
          v116 = v235;
          goto LABEL_156;
        }
        v175 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, v167, v171, v173, 0);
        swift_bridgeObjectRelease(v167);
        swift_bridgeObjectRelease(v173);
        if ((v175 & 1) != 0)
          goto LABEL_154;
      }
      else
      {
        swift_bridgeObjectRelease(v167);
      }
      v186 = sub_10063B4E0();
      v188 = v187;
      v190 = sub_10063B4E0();
      v191 = v189;
      if (v186 == v190 && v188 == v189)
      {
        swift_bridgeObjectRelease_n(v188, 2);
        v193 = v247;
        v192 = (uint64_t)v248;
        v194 = v249;
        sub_1004DD8B8(v247, v237, (uint64_t)v248, v249);
        v195 = v161;
        v196 = v232;
        v197 = v233;
        v198 = v161;
        v199 = v252;
        sub_1004DD8B8(v195, *(id *)&v232, v233, v252);
        v200 = v193;
        v201 = v237;
        sub_1004DD8B8(v200, v237, v192, v194);
        sub_1004DD8B8(v198, *(id *)&v196, v197, v199);
        sub_1004DD8B8(v198, *(id *)&v196, v197, v199);
        v202 = v247;
        v203 = v201;
        v204 = v192;
        v205 = v194;
        goto LABEL_155;
      }
      LODWORD(v230) = _stringCompareWithSmolCheck(_:_:expecting:)(v186, v188, v190, v189, 1);
      swift_bridgeObjectRelease(v188);
      swift_bridgeObjectRelease(v191);
      v216 = v247;
      v217 = v237;
      v218 = v249;
      sub_1004DD8B8(v247, v237, (uint64_t)v248, v249);
      v219 = v161;
      v220 = v232;
      v221 = v233;
      v228 = v161;
      v222 = v252;
      sub_1004DD8B8(v219, *(id *)&v232, v233, v252);
      v223 = v217;
      v224 = (uint64_t)v248;
      sub_1004DD8B8(v216, v223, (uint64_t)v248, v218);
      v225 = v228;
      sub_1004DD8B8(v228, *(id *)&v220, v221, v222);
      sub_1004DD8B8(v225, *(id *)&v220, v221, v222);
      sub_1004DD8B8(v247, v237, v224, v218);
      v114 = (char *)v251;
      v113 = v236;
      v116 = v235;
      if ((v230 & 1) != 0)
        goto LABEL_145;
LABEL_156:
      v255 = (void **)v123;
      if (v116 < v113 || v115 >= v113 || v116 != v113)
      {
        v215 = *((_OWORD *)v123 + 1);
        *(_OWORD *)v115 = *(_OWORD *)v123;
        *((_OWORD *)v115 + 1) = v215;
      }
      v112 = (void **)v114;
      v113 = v123;
LABEL_161:
      if (v113 > (char *)v254)
      {
        v115 -= 32;
        v114 = (char *)v112;
        if (v112 > v253)
          continue;
      }
      goto LABEL_166;
    }
    if (v120 == 1)
    {
      if ((v125 & 0xC0) == 0x40)
      {
        v128 = *((double *)v113 - 3);
        v247 = (char *)*((_QWORD *)v113 - 4);
        v237 = (id)v121;
        v248 = (id)v124;
        v249 = v125;
        LODWORD(v252) = v119;
        sub_1004DD884(v247, (id)v121, v124, v125);
        v129 = sub_1004DD884((id)v117, *(id *)&v126, v127, v252);
        v130 = static Calendar.current.getter(v129);
        v235 = v115 + 32;
        v131 = v240;
        v132 = Date.init(timeIntervalSinceReferenceDate:)(v130, v126);
        v133 = v241;
        Date.init(timeIntervalSinceReferenceDate:)(v132, v128);
        v236 = v113;
        v134 = v244;
        v135 = v245;
        v136 = v246;
        (*(void (**)(char *, _QWORD, uint64_t))(v245 + 104))(v244, v234, v246);
        v251 = (void **)v114;
        v137 = Calendar.compare(_:to:toGranularity:)(v131, v133, v134);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v136);
        v138 = v243;
        v139 = *(void (**)(char *, uint64_t))(v242 + 8);
        v139(v133, v243);
        v140 = v131;
        v116 = v235;
        v141 = v138;
        v113 = v236;
        v139(v140, v141);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v250, v239);
        sub_1004DD8B8(v247, v237, (uint64_t)v248, v249);
        v63 = v137 == -1;
        v114 = (char *)v251;
        if (v63)
          goto LABEL_145;
        goto LABEL_156;
      }
LABEL_108:
      if (v125 < 0x40)
        goto LABEL_156;
      if (v125 < 0xC0)
        goto LABEL_145;
      v162 = 1;
    }
    else
    {
      if (v125 < 0x40)
        goto LABEL_156;
      if (!(v127 | *(_QWORD *)&v126 | v117) && v119 == 192)
      {
        sub_1004DD884(0, 0, 0, 0xC0u);
        goto LABEL_145;
      }
      if (v125 <= 0xBF)
        goto LABEL_129;
      v162 = 0;
    }
    if (!(v124 | v121 | v122) && v125 == 192)
      goto LABEL_156;
    if (v122 == 1 && (v124 | v121) == 0 && v125 == 192)
      v162 = 1;
    if ((v162 & 1) != 0)
      goto LABEL_145;
LABEL_129:
    if (v119 != 192 || v117 != 1 || v127 | *(_QWORD *)&v126)
      goto LABEL_145;
    sub_1004DD884((id)1, 0, 0, 0xC0u);
    goto LABEL_156;
  }
  if (v16 >= -31)
  {
    v21 = 4 * v18;
    if (v254 != v253 || &v253[v21] <= v254)
      memmove(v254, v253, v21 * 8);
    v22 = &v254[v21];
    v255 = &v254[v21];
    if ((unint64_t)(v16 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      v23 = v19;
      if ((unint64_t)v19 < v252)
      {
        v24 = v22;
        v234 = CKCurrentUserDefaultName;
        LODWORD(v236) = enum case for Calendar.Component.day(_:);
        v237 = v22;
        while (1)
        {
          v25 = *((unsigned __int8 *)v254 + 24);
          v26 = v25 >> 6;
          if (!(v25 >> 6))
            goto LABEL_65;
          v28 = (unint64_t)*v23;
          v27 = (unint64_t)v23[1];
          v29 = (uint64_t)v23[2];
          v30 = *((unsigned __int8 *)v23 + 24);
          v31 = (unint64_t)*v254;
          v32 = *((double *)v254 + 1);
          v33 = (uint64_t)v254[2];
          if (v26 != 2)
            break;
          if ((v30 & 0xC0) != 0x80)
            goto LABEL_28;
          if (v31)
          {
            if (!v28)
            {
              sub_1004DD884(0, (id)v27, (uint64_t)v23[2], *((_BYTE *)v23 + 24));
              goto LABEL_65;
            }
            v251 = v23;
            v49 = (char *)v28;
            v50 = v29;
            v247 = (char *)v33;
            v51 = (void *)v27;
            v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v234);
            v54 = v53;
            v232 = *(double *)(v31 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
            sub_1004DD884((id)v31, *(id *)&v32, (uint64_t)v247, v25);
            sub_1004DD884(v49, v51, v50, v30);
            sub_1004DD884(v49, v51, v50, v30);
            sub_1004DD884((id)v31, *(id *)&v32, (uint64_t)v247, v25);
            v235 = v49;
            v248 = v51;
            v55 = v51;
            v56 = (uint64_t)v247;
            v233 = v50;
            v249 = v30;
            sub_1004DD884(v49, v55, v50, v30);
            sub_1004DD884((id)v31, *(id *)&v32, v56, v25);
            v57 = objc_msgSend(*(id *)&v232, "userIdentity");
            v58 = objc_msgSend(v57, "userRecordID");

            if (v58)
            {
              v59 = objc_msgSend(v58, "recordName");

              v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
              v62 = v61;

              v63 = v52 == v60 && v54 == v62;
              if (v63)
              {
                swift_bridgeObjectRelease_n(v54, 2);
LABEL_64:
                sub_1004DD8B8((void *)v31, *(id *)&v32, v56, v25);
                v80 = v235;
                v81 = v56;
                v82 = v248;
                v83 = v233;
                v84 = v249;
                sub_1004DD8B8(v235, v248, v233, v249);
                sub_1004DD8B8(v80, v82, v83, v84);
                sub_1004DD8B8((void *)v31, *(id *)&v32, v81, v25);
                sub_1004DD8B8((void *)v31, *(id *)&v32, v81, v25);
                sub_1004DD8B8(v80, v82, v83, v84);
                v23 = v251;
                v24 = (void **)v237;
LABEL_65:
                v85 = (unint64_t)(v23 + 4);
                if (v253 < v23 || (unint64_t)v253 >= v85 || v253 != v23)
                {
                  v86 = *((_OWORD *)v23 + 1);
                  v87 = v253;
                  *(_OWORD *)v253 = *(_OWORD *)v23;
                  *((_OWORD *)v87 + 1) = v86;
                }
                goto LABEL_79;
              }
              v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v60, v62, 0);
              swift_bridgeObjectRelease(v54);
              swift_bridgeObjectRelease(v62);
              if ((v64 & 1) != 0)
                goto LABEL_64;
            }
            else
            {
              swift_bridgeObjectRelease(v54);
            }
            v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v234);
            v70 = v69;
            v71 = objc_msgSend(*(id *)&v235[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant], "userIdentity");
            v72 = objc_msgSend(v71, "userRecordID");

            if (v72)
            {
              v73 = objc_msgSend(v72, "recordName");

              v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
              v76 = v75;

              if (v68 == v74 && v70 == v76)
              {
                swift_bridgeObjectRelease_n(v70, 2);
                v79 = v249;
LABEL_74:
                sub_1004DD8B8((void *)v31, *(id *)&v32, v56, v25);
                v94 = v235;
                v97 = v235;
                v99 = v56;
                v95 = v248;
                v98 = *(double *)&v248;
                v96 = v233;
                v100 = v233;
                v101 = v79;
LABEL_75:
                sub_1004DD8B8(v97, *(id *)&v98, v100, v101);
                sub_1004DD8B8(v94, v95, v96, v79);
                sub_1004DD8B8((void *)v31, *(id *)&v32, v99, v25);
                sub_1004DD8B8((void *)v31, *(id *)&v32, v99, v25);
                sub_1004DD8B8(v94, v95, v96, v79);
                v23 = v251;
                v24 = (void **)v237;
                goto LABEL_76;
              }
              v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v70, v74, v76, 0);
              swift_bridgeObjectRelease(v70);
              swift_bridgeObjectRelease(v76);
              v79 = v249;
              if ((v78 & 1) != 0)
                goto LABEL_74;
            }
            else
            {
              swift_bridgeObjectRelease(v70);
              v79 = v249;
            }
            v88 = sub_10063B4E0();
            v90 = v89;
            v92 = sub_10063B4E0();
            v93 = v91;
            if (v88 == v92 && v90 == v91)
            {
              swift_bridgeObjectRelease_n(v90, 2);
              v94 = v235;
              v95 = v248;
              v96 = v233;
              sub_1004DD8B8(v235, v248, v233, v79);
              v97 = (void *)v31;
              v98 = v32;
              v99 = (uint64_t)v247;
              v100 = (uint64_t)v247;
              v101 = v25;
              goto LABEL_75;
            }
            v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v92, v91, 1);
            v105 = v79;
            v106 = v104;
            swift_bridgeObjectRelease(v90);
            swift_bridgeObjectRelease(v93);
            v107 = v235;
            v108 = v248;
            v109 = v233;
            sub_1004DD8B8(v235, v248, v233, v105);
            v110 = (uint64_t)v247;
            sub_1004DD8B8((void *)v31, *(id *)&v32, (uint64_t)v247, v25);
            sub_1004DD8B8(v107, v108, v109, v105);
            sub_1004DD8B8((void *)v31, *(id *)&v32, v110, v25);
            sub_1004DD8B8((void *)v31, *(id *)&v32, v110, v25);
            sub_1004DD8B8(v107, v108, v109, v105);
            v23 = v251;
            v24 = (void **)v237;
            if ((v106 & 1) != 0)
              goto LABEL_65;
          }
          else
          {
            sub_1004DD8B8(0, v254[1], (uint64_t)v254[2], *((_BYTE *)v254 + 24));
          }
LABEL_76:
          if (v253 != v254)
          {
            v102 = *((_OWORD *)v254 + 1);
            v103 = v253;
            *(_OWORD *)v253 = *(_OWORD *)v254;
            *((_OWORD *)v103 + 1) = v102;
          }
          v254 += 4;
          v256 = v254;
          v85 = (unint64_t)v23;
LABEL_79:
          v253 += 4;
          v257 = v253;
          if (v254 < v24)
          {
            v23 = (void **)v85;
            if (v85 < v252)
              continue;
          }
          goto LABEL_166;
        }
        if (v26 == 1)
        {
          if ((v30 & 0xC0) == 0x40)
          {
            v35 = *v23;
            v248 = v23[1];
            v34 = *(double *)&v248;
            sub_1004DD884(v35, (id)v27, v29, v30);
            v36 = sub_1004DD884((id)v31, *(id *)&v32, v33, v25);
            v37 = v250;
            v38 = static Calendar.current.getter(v36);
            v39 = v240;
            v40 = Date.init(timeIntervalSinceReferenceDate:)(v38, v32);
            v249 = v30;
            v41 = v241;
            Date.init(timeIntervalSinceReferenceDate:)(v40, v34);
            v43 = v244;
            v42 = v245;
            v44 = v246;
            (*(void (**)(char *, _QWORD, uint64_t))(v245 + 104))(v244, v236, v246);
            v251 = v23;
            v45 = Calendar.compare(_:to:toGranularity:)(v39, v41, v43);
            (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
            v46 = v243;
            v47 = *(void (**)(char *, uint64_t))(v242 + 8);
            v47(v41, v243);
            v48 = v39;
            v24 = (void **)v237;
            v47(v48, v46);
            (*(void (**)(char *, uint64_t))(v238 + 8))(v37, v239);
            sub_1004DD8B8((void *)v28, v248, v29, v249);
            v63 = v45 == -1;
            v23 = v251;
            if (v63)
              goto LABEL_65;
            goto LABEL_76;
          }
LABEL_28:
          if (v30 < 0x40)
            goto LABEL_76;
          if (v30 < 0xC0)
            goto LABEL_65;
          v65 = 1;
        }
        else
        {
          if (v30 < 0x40)
            goto LABEL_76;
          if (!(v33 | *(_QWORD *)&v32 | v31) && v25 == 192)
          {
            sub_1004DD884(0, 0, 0, 0xC0u);
            goto LABEL_65;
          }
          if (v30 <= 0xBF)
            goto LABEL_49;
          v65 = 0;
        }
        if (!(v29 | v27 | v28) && v30 == 192)
          goto LABEL_76;
        if (v28 == 1 && (v29 | v27) == 0 && v30 == 192)
          v65 = 1;
        if ((v65 & 1) != 0)
          goto LABEL_65;
LABEL_49:
        if (v25 != 192 || v31 != 1 || v33 | *(_QWORD *)&v32)
          goto LABEL_65;
        sub_1004DD884((id)1, 0, 0, 0xC0u);
        goto LABEL_76;
      }
    }
    goto LABEL_166;
  }
LABEL_167:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100BAAE70(void **a1, void **a2, void **a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void **v21;
  char v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  double v33;
  double v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  char v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v75;
  unsigned __int8 v76;
  void **v77;
  id v78;
  uint64_t v79;
  unsigned __int8 v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  __int128 v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 v106;
  __int128 v107;
  void **v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  uint64_t v113;
  void **v114;
  id v115;
  uint64_t v116;
  size_t v117;
  void **v118;
  void **v119;
  void **v120;
  void **v121;
  unint64_t v122;
  void **v123;
  unsigned int v124;
  NSString *v125;
  NSString *v126;
  unsigned int v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unsigned int v132;
  double v133;
  double v134;
  unsigned __int8 v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  unsigned __int8 v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  NSString *v152;
  uint64_t v153;
  unsigned __int8 v154;
  unsigned __int8 v155;
  NSString *v156;
  id v157;
  id v158;
  id v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  id v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v178;
  void **v179;
  uint64_t v180;
  NSString *v181;
  id v182;
  uint64_t v183;
  unsigned __int8 v184;
  void **v185;
  void **v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  NSString *v195;
  id v196;
  uint64_t v197;
  unsigned __int8 v198;
  uint64_t v199;
  unsigned __int8 v200;
  void **v201;
  void **v202;
  uint64_t v203;
  unsigned __int8 v204;
  void **v205;
  uint64_t v206;
  NSString *v207;
  id v208;
  uint64_t v209;
  unsigned __int8 v210;
  void **v211;
  void **v212;
  uint64_t v213;
  __int128 v214;
  NSString *v215;
  id v216;
  uint64_t v217;
  unsigned __int8 v218;
  unsigned __int8 v219;
  uint64_t result;
  uint64_t v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  NSString *v225;
  id v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  NSString *v230;
  void **v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  void **v240;
  uint64_t v241;
  id v242;
  char *v243;
  void **v244;
  char *v245;
  void **v246;
  void **v247;
  void **v248;
  void **v249;
  void **v250;
  void **v251;

  v8 = type metadata accessor for Calendar.Component(0);
  v238 = *(_QWORD *)(v8 - 8);
  v239 = v8;
  __chkstk_darwin(v8);
  v237 = (char *)&v221 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v235 = *(_QWORD *)(v10 - 8);
  v236 = v10;
  v11 = __chkstk_darwin(v10);
  v234 = (char *)&v221 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v243 = (char *)&v221 - v13;
  v14 = type metadata accessor for Calendar(0);
  v232 = *(_QWORD *)(v14 - 8);
  v233 = v14;
  __chkstk_darwin(v14);
  v244 = a3;
  v245 = (char *)&v221 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)a2 - (char *)a1;
  v17 = (char *)a2 - (char *)a1 + 31;
  if ((char *)a2 - (char *)a1 >= 0)
    v17 = (char *)a2 - (char *)a1;
  v18 = v17 >> 5;
  v19 = (char *)a3 - (char *)a2;
  v247 = a4;
  v248 = a1;
  v251 = a1;
  v250 = a4;
  if (v18 >= v19 / 32)
  {
    if (v19 < -31)
      goto LABEL_153;
    v117 = 4 * (v19 / 32);
    v118 = v244;
    if (v247 != a2 || &a2[v117] <= v247)
      memmove(v247, a2, v117 * 8);
    v246 = &v247[v117];
    v249 = &v247[v117];
    v251 = a2;
    if ((unint64_t)(v19 - 32) > 0xFFFFFFFFFFFFFFC0 || v248 >= a2)
    {
LABEL_152:
      sub_100D165A8((void **)&v251, (const void **)&v250, &v249);
      return 1;
    }
    v225 = CKCurrentUserDefaultName;
    v119 = v118 - 4;
    LODWORD(v229) = enum case for Calendar.Component.day(_:);
    v120 = a2;
    while (1)
    {
      v121 = v119 + 4;
      v123 = v246 - 4;
      v122 = (unint64_t)*(v246 - 4);
      v124 = *((unsigned __int8 *)v246 - 8);
      v126 = (NSString *)*(v120 - 4);
      v120 -= 4;
      v125 = v126;
      v127 = v124 >> 6;
      if (!(v124 >> 6))
        goto LABEL_131;
      v128 = (unint64_t)*(v246 - 3);
      v129 = (uint64_t)*(v246 - 2);
      v131 = (unint64_t)v120[1];
      v130 = (uint64_t)v120[2];
      v132 = *((unsigned __int8 *)v120 + 24);
      if (v127 != 2)
        break;
      if ((v132 & 0xC0) != 0x80)
        goto LABEL_100;
      if (!v122)
      {
        sub_1004DD8B8(0, (id)v128, v129, v124);
        goto LABEL_142;
      }
      if (!v125)
      {
        sub_1004DD884(0, v120[1], (uint64_t)v120[2], *((_BYTE *)v120 + 24));
        goto LABEL_131;
      }
      v231 = v119 + 4;
      v147 = (char *)v122;
      v230 = v125;
      v148 = v124;
      LODWORD(v241) = v124;
      v149 = v129;
      v242 = (id)v129;
      v150 = (void *)v128;
      v244 = (void **)v128;
      LODWORD(v228) = v132;
      v227 = (id)v130;
      v226 = (id)v131;
      v222 = static String._unconditionallyBridgeFromObjectiveC(_:)(v225);
      v224 = v151;
      v223 = *(id *)&v147[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];
      sub_1004DD884(v147, v150, v149, v148);
      v152 = v230;
      v153 = (uint64_t)v227;
      v154 = v228;
      sub_1004DD884(v230, (id)v131, (uint64_t)v227, v228);
      v155 = v241;
      sub_1004DD884(v147, v244, (uint64_t)v242, v241);
      v156 = v152;
      v157 = v226;
      sub_1004DD884(v156, v226, v153, v154);
      v240 = (void **)v147;
      sub_1004DD884(v147, v244, (uint64_t)v242, v155);
      sub_1004DD884(v230, v157, v153, v154);
      v158 = objc_msgSend(v223, "userIdentity");
      v159 = objc_msgSend(v158, "userRecordID");

      if (v159)
      {
        v160 = objc_msgSend(v159, "recordName");

        v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
        v163 = v162;

        v164 = v224;
        if (v222 == v161 && v224 == v163)
        {
          swift_bridgeObjectRelease_n(v224, 2);
LABEL_130:
          v179 = v240;
          v180 = (uint64_t)v242;
          sub_1004DD8B8(v240, v244, (uint64_t)v242, v241);
          v181 = v230;
          v182 = v226;
          v183 = (uint64_t)v227;
          v184 = v228;
          sub_1004DD8B8(v230, v226, (uint64_t)v227, v228);
          sub_1004DD8B8(v181, v182, v183, v184);
          v185 = v179;
          v186 = v244;
          v187 = v180;
          LOBYTE(v180) = v241;
          sub_1004DD8B8(v185, v244, v187, v241);
          sub_1004DD8B8(v181, v182, v183, v184);
          sub_1004DD8B8(v240, v186, (uint64_t)v242, v180);
          v121 = v231;
          goto LABEL_131;
        }
        v166 = _stringCompareWithSmolCheck(_:_:expecting:)(v222, v224, v161, v163, 0);
        swift_bridgeObjectRelease(v164);
        swift_bridgeObjectRelease(v163);
        if ((v166 & 1) != 0)
          goto LABEL_130;
      }
      else
      {
        swift_bridgeObjectRelease(v224);
      }
      v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v225);
      v170 = v169;
      v171 = objc_msgSend(*(NSString *)((char *)v230 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
      v172 = objc_msgSend(v171, "userRecordID");

      if (v172)
      {
        v173 = objc_msgSend(v172, "recordName");

        v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v173);
        v176 = v175;

        if (v168 == v174 && v170 == v176)
        {
          swift_bridgeObjectRelease_n(v170, 2);
LABEL_140:
          v205 = v240;
          v206 = (uint64_t)v242;
          sub_1004DD8B8(v240, v244, (uint64_t)v242, v241);
          v207 = v230;
          v208 = v226;
          v209 = (uint64_t)v227;
          v210 = v228;
          sub_1004DD8B8(v230, v226, (uint64_t)v227, v228);
          sub_1004DD8B8(v207, v208, v209, v210);
          v211 = v205;
          v212 = v244;
          v213 = v206;
          LOBYTE(v206) = v241;
          sub_1004DD8B8(v211, v244, v213, v241);
          sub_1004DD8B8(v207, v208, v209, v210);
          v201 = v240;
          v202 = v212;
          v203 = (uint64_t)v242;
          v204 = v206;
LABEL_141:
          sub_1004DD8B8(v201, v202, v203, v204);
          v121 = v231;
LABEL_142:
          v249 = v123;
          if (v121 < v246 || v119 >= v246 || v121 != v246)
          {
            v214 = *((_OWORD *)v123 + 1);
            *(_OWORD *)v119 = *(_OWORD *)v123;
            *((_OWORD *)v119 + 1) = v214;
          }
          v120 = a2;
          v246 = v123;
          goto LABEL_147;
        }
        v178 = _stringCompareWithSmolCheck(_:_:expecting:)(v168, v170, v174, v176, 0);
        swift_bridgeObjectRelease(v170);
        swift_bridgeObjectRelease(v176);
        if ((v178 & 1) != 0)
          goto LABEL_140;
      }
      else
      {
        swift_bridgeObjectRelease(v170);
      }
      v189 = sub_10063B4E0();
      v191 = v190;
      v193 = sub_10063B4E0();
      v194 = v192;
      if (v189 == v193 && v191 == v192)
      {
        swift_bridgeObjectRelease_n(v191, 2);
        v195 = v230;
        v196 = v226;
        v197 = (uint64_t)v227;
        v198 = v228;
        sub_1004DD8B8(v230, v226, (uint64_t)v227, v228);
        v199 = (uint64_t)v242;
        v200 = v241;
        sub_1004DD8B8(v240, v244, (uint64_t)v242, v241);
        sub_1004DD8B8(v195, v196, v197, v198);
        sub_1004DD8B8(v240, v244, v199, v200);
        sub_1004DD8B8(v195, v196, v197, v198);
        v201 = v240;
        v202 = v244;
        v203 = v199;
        v204 = v200;
        goto LABEL_141;
      }
      LODWORD(v224) = _stringCompareWithSmolCheck(_:_:expecting:)(v189, v191, v193, v192, 1);
      swift_bridgeObjectRelease(v191);
      swift_bridgeObjectRelease(v194);
      v215 = v230;
      v216 = v226;
      v217 = (uint64_t)v227;
      v218 = v228;
      sub_1004DD8B8(v230, v226, (uint64_t)v227, v228);
      v219 = v241;
      sub_1004DD8B8(v240, v244, (uint64_t)v242, v241);
      sub_1004DD8B8(v215, v216, v217, v218);
      sub_1004DD8B8(v240, v244, (uint64_t)v242, v219);
      sub_1004DD8B8(v215, v216, v217, v218);
      sub_1004DD8B8(v240, v244, (uint64_t)v242, v219);
      v121 = v231;
      if ((v224 & 1) == 0)
        goto LABEL_142;
LABEL_131:
      if (v121 != a2 || v119 >= a2)
      {
        v188 = *((_OWORD *)v120 + 1);
        *(_OWORD *)v119 = *(_OWORD *)v120;
        *((_OWORD *)v119 + 1) = v188;
      }
      v251 = v120;
LABEL_147:
      if (v246 > v247)
      {
        v119 -= 4;
        a2 = v120;
        if (v120 > v248)
          continue;
      }
      goto LABEL_152;
    }
    if (v127 == 1)
    {
      if ((v132 & 0xC0) == 0x40)
      {
        v133 = *((double *)v246 - 3);
        v134 = *((double *)v120 + 1);
        v240 = (void **)*(v246 - 4);
        v244 = (void **)v128;
        v242 = (id)v129;
        LODWORD(v241) = v124;
        v135 = v132;
        v136 = v130;
        sub_1004DD884((id)v122, (id)v128, v129, v124);
        v137 = sub_1004DD884(v125, (id)v131, v136, v135);
        v231 = v119 + 4;
        v138 = static Calendar.current.getter(v137);
        v139 = v243;
        v140 = Date.init(timeIntervalSinceReferenceDate:)(v138, v133);
        v141 = v234;
        Date.init(timeIntervalSinceReferenceDate:)(v140, v134);
        v142 = v237;
        v143 = v238;
        v144 = v239;
        (*(void (**)(char *, _QWORD, uint64_t))(v238 + 104))(v237, v229, v239);
        v230 = (NSString *)Calendar.compare(_:to:toGranularity:)(v139, v141, v142);
        (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
        v145 = v236;
        v146 = *(void (**)(char *, uint64_t))(v235 + 8);
        v146(v141, v236);
        v146(v243, v145);
        v121 = v231;
        (*(void (**)(char *, uint64_t))(v232 + 8))(v245, v233);
        sub_1004DD8B8(v240, v244, (uint64_t)v242, v241);
        if (v230 != (NSString *)-1)
          goto LABEL_142;
        goto LABEL_131;
      }
LABEL_100:
      if (v132 < 0x40)
        goto LABEL_142;
      v167 = 0;
    }
    else
    {
      if (v132 < 0x40)
        goto LABEL_142;
      v167 = 1;
      if (!(v129 | v128 | v122) && v124 == 192)
        goto LABEL_131;
    }
    if (v132 < 0xC0)
      goto LABEL_118;
    if (!(v130 | v131 | (unint64_t)v125) && v132 == 192)
    {
      sub_1004DD884(0, 0, 0, 0xC0u);
      goto LABEL_142;
    }
    if (v132 == 192 && v125 == (NSString *)1 && !(v130 | v131))
    {
      sub_1004DD884((id)1, 0, 0, 0xC0u);
    }
    else
    {
LABEL_118:
      if (v167 && v124 == 192 && v122 == 1 && !(v129 | v128))
        goto LABEL_142;
    }
    goto LABEL_131;
  }
  if (v16 >= -31)
  {
    v20 = 4 * v18;
    if (v247 != v248 || &v248[v20] <= v247)
      memmove(v247, v248, v20 * 8);
    v21 = &v247[v20];
    v249 = v21;
    v22 = (v16 != -32) & __CFADD__(v16 - 32, 64);
    v23 = (unint64_t)v244;
    if (!v22 && a2 < v244)
    {
      v230 = CKCurrentUserDefaultName;
      LODWORD(v231) = enum case for Calendar.Component.day(_:);
      v240 = v21;
      while (1)
      {
        v24 = *((unsigned __int8 *)a2 + 24);
        v25 = v24 >> 6;
        if (!(v24 >> 6))
          goto LABEL_58;
        v27 = (unint64_t)*a2;
        v26 = (unint64_t)a2[1];
        v28 = (uint64_t)a2[2];
        v29 = (unint64_t)*v247;
        v30 = (unint64_t)v247[1];
        v31 = (uint64_t)v247[2];
        v32 = *((unsigned __int8 *)v247 + 24);
        if (v25 != 2)
          break;
        if ((v32 & 0xC0) != 0x80)
          goto LABEL_27;
        if (!v27)
        {
          sub_1004DD8B8(0, (id)v26, (uint64_t)a2[2], *((_BYTE *)a2 + 24));
          goto LABEL_69;
        }
        if (v29)
        {
          v50 = (uint64_t)a2[2];
          v51 = a2[1];
          v52 = (uint64_t)v247[2];
          v225 = (NSString *)static String._unconditionallyBridgeFromObjectiveC(_:)(v230);
          v226 = v53;
          v227 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
          sub_1004DD884((id)v27, v51, v50, v24);
          sub_1004DD884((id)v29, (id)v30, v52, v32);
          sub_1004DD884((id)v27, v51, v50, v24);
          sub_1004DD884((id)v29, (id)v30, v52, v32);
          v246 = (void **)v27;
          v242 = v51;
          v229 = v50;
          LODWORD(v241) = v24;
          sub_1004DD884((id)v27, v51, v50, v24);
          v54 = v29;
          v228 = v52;
          sub_1004DD884((id)v29, (id)v30, v52, v32);
          v55 = objc_msgSend(v227, "userIdentity");
          v56 = objc_msgSend(v55, "userRecordID");

          if (v56)
          {
            v57 = objc_msgSend(v56, "recordName");

            v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
            v60 = v59;

            v61 = v226;
            if (v225 == (NSString *)v58 && v226 == v60)
            {
              swift_bridgeObjectRelease_n(v226, 2);
              v29 = v54;
LABEL_57:
              v77 = v246;
              v78 = v242;
              v79 = v229;
              v80 = v241;
              sub_1004DD8B8(v246, v242, v229, v241);
              v81 = (void *)v29;
              v82 = (void *)v30;
              v83 = (void *)v30;
              v84 = (void *)v29;
              v85 = v228;
              sub_1004DD8B8(v81, v82, v228, v32);
              sub_1004DD8B8(v84, v83, v85, v32);
              sub_1004DD8B8(v77, v78, v79, v80);
              sub_1004DD8B8(v84, v83, v85, v32);
              sub_1004DD8B8(v77, v78, v79, v80);
              v21 = v240;
              v23 = (unint64_t)v244;
              goto LABEL_58;
            }
            v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v225, v226, v58, v60, 0);
            swift_bridgeObjectRelease(v61);
            swift_bridgeObjectRelease(v60);
            v29 = v54;
            if ((v63 & 1) != 0)
              goto LABEL_57;
          }
          else
          {
            swift_bridgeObjectRelease(v226);
          }
          v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v230);
          v67 = v66;
          v68 = objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant), "userIdentity");
          v69 = objc_msgSend(v68, "userRecordID");

          if (v69)
          {
            v70 = objc_msgSend(v69, "recordName");

            v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
            v73 = v72;

            if (v65 == v71 && v67 == v73)
            {
              swift_bridgeObjectRelease_n(v67, 2);
              v76 = v241;
LABEL_67:
              v100 = v246;
              v102 = v242;
              v104 = v229;
              sub_1004DD8B8(v246, v242, v229, v76);
              v101 = (void **)v29;
              v103 = (id)v30;
              v97 = (void *)v30;
              v98 = (void *)v29;
              v99 = v228;
              v105 = v228;
              v106 = v32;
LABEL_68:
              sub_1004DD8B8(v101, v103, v105, v106);
              sub_1004DD8B8(v98, v97, v99, v32);
              sub_1004DD8B8(v100, v102, v104, v76);
              sub_1004DD8B8(v98, v97, v99, v32);
              sub_1004DD8B8(v100, v102, v104, v76);
              v21 = v240;
              v23 = (unint64_t)v244;
LABEL_69:
              if (v248 != v247)
              {
                v107 = *((_OWORD *)v247 + 1);
                v108 = v248;
                *(_OWORD *)v248 = *(_OWORD *)v247;
                *((_OWORD *)v108 + 1) = v107;
              }
              v247 += 4;
              v250 = v247;
              v86 = (unint64_t)a2;
              goto LABEL_72;
            }
            v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v67, v71, v73, 0);
            swift_bridgeObjectRelease(v67);
            swift_bridgeObjectRelease(v73);
            v76 = v241;
            if ((v75 & 1) != 0)
              goto LABEL_67;
          }
          else
          {
            swift_bridgeObjectRelease(v67);
            v76 = v241;
          }
          v89 = sub_10063B4E0();
          v91 = v90;
          v93 = sub_10063B4E0();
          v94 = v92;
          if (v89 == v93 && v91 == v92)
          {
            swift_bridgeObjectRelease_n(v91, 2);
            v95 = (void *)v29;
            v96 = (void *)v30;
            v97 = (void *)v30;
            v98 = (void *)v29;
            v99 = v228;
            sub_1004DD8B8(v95, v96, v228, v32);
            v100 = v246;
            v101 = v246;
            v102 = v242;
            v103 = v242;
            v104 = v229;
            v105 = v229;
            v106 = v76;
            goto LABEL_68;
          }
          LODWORD(v241) = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v91, v93, v92, 1);
          swift_bridgeObjectRelease(v91);
          swift_bridgeObjectRelease(v94);
          v109 = (void *)v29;
          v110 = (void *)v30;
          v111 = (void *)v30;
          v112 = (void *)v29;
          v113 = v228;
          sub_1004DD8B8(v109, v110, v228, v32);
          v114 = v246;
          v115 = v242;
          v116 = v229;
          sub_1004DD8B8(v246, v242, v229, v76);
          sub_1004DD8B8(v112, v111, v113, v32);
          sub_1004DD8B8(v114, v115, v116, v76);
          sub_1004DD8B8(v112, v111, v113, v32);
          sub_1004DD8B8(v114, v115, v116, v76);
          v21 = v240;
          v23 = (unint64_t)v244;
          if ((v241 & 1) == 0)
            goto LABEL_69;
        }
        else
        {
          sub_1004DD884(0, v247[1], (uint64_t)v247[2], *((_BYTE *)v247 + 24));
        }
LABEL_58:
        v86 = (unint64_t)(a2 + 4);
        if (v248 < a2 || (unint64_t)v248 >= v86 || v248 != a2)
        {
          v87 = *((_OWORD *)a2 + 1);
          v88 = v248;
          *(_OWORD *)v248 = *(_OWORD *)a2;
          *((_OWORD *)v88 + 1) = v87;
        }
LABEL_72:
        v248 += 4;
        v251 = v248;
        if (v247 < v21)
        {
          a2 = (void **)v86;
          if (v86 < v23)
            continue;
        }
        goto LABEL_152;
      }
      if (v25 == 1)
      {
        if ((v32 & 0xC0) == 0x40)
        {
          v33 = *((double *)a2 + 1);
          v34 = *((double *)v247 + 1);
          v246 = (void **)*a2;
          v242 = (id)v26;
          v35 = v31;
          sub_1004DD884((id)v27, (id)v26, v28, v24);
          v36 = sub_1004DD884((id)v29, (id)v30, v35, v32);
          v37 = v245;
          v38 = static Calendar.current.getter(v36);
          v39 = v243;
          v40 = Date.init(timeIntervalSinceReferenceDate:)(v38, v33);
          v41 = v234;
          Date.init(timeIntervalSinceReferenceDate:)(v40, v34);
          v43 = v237;
          v42 = v238;
          v44 = v24;
          v45 = v239;
          (*(void (**)(char *, _QWORD, uint64_t))(v238 + 104))(v237, v231, v239);
          v241 = Calendar.compare(_:to:toGranularity:)(v39, v41, v43);
          (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v45);
          v46 = v236;
          v47 = *(void (**)(char *, uint64_t))(v235 + 8);
          v47(v41, v236);
          v48 = v39;
          v23 = (unint64_t)v244;
          v47(v48, v46);
          v49 = v37;
          v21 = v240;
          (*(void (**)(char *, uint64_t))(v232 + 8))(v49, v233);
          sub_1004DD8B8(v246, v242, v28, v44);
          if (v241 != -1)
            goto LABEL_69;
          goto LABEL_58;
        }
LABEL_27:
        if (v32 < 0x40)
          goto LABEL_69;
        v64 = 0;
      }
      else
      {
        if (v32 < 0x40)
          goto LABEL_69;
        v64 = 1;
        if (!(v28 | v26 | v27) && v24 == 192)
          goto LABEL_58;
      }
      if (v32 < 0xC0)
        goto LABEL_45;
      if (!(v31 | v30 | v29) && v32 == 192)
      {
        sub_1004DD884(0, 0, 0, 0xC0u);
        goto LABEL_69;
      }
      if (v32 == 192 && v29 == 1 && !(v31 | v30))
      {
        sub_1004DD884((id)1, 0, 0, 0xC0u);
      }
      else
      {
LABEL_45:
        if (v64 && v24 == 192 && v27 == 1 && !(v28 | v26))
          goto LABEL_69;
      }
      goto LABEL_58;
    }
    goto LABEL_152;
  }
LABEL_153:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100BAC250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(_BYTE *, _QWORD);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(_BYTE *, _QWORD);
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  const void *v65;
  _QWORD *v66;
  BOOL v67;
  unint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  _BYTE v94[32];

  v84 = type metadata accessor for IndexSet.Index(0);
  v87 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v86 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v85 = (char *)&v80 - v4;
  v5 = type metadata accessor for IndexSet(0);
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  __chkstk_darwin(v5);
  v89 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E7CF8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1004B804C((uint64_t *)&unk_101407500);
  __chkstk_darwin(v10);
  v83 = (uint64_t *)((char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 >> 62)
  {
LABEL_89:
    if (v12 < 0)
      v75 = v12;
    else
      v75 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = sub_1004B7878(&qword_1013F6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v15 = dispatch thunk of Sequence.underestimatedCount.getter(v91, v14);
  if (v15 >= v13)
    v16 = v13;
  else
    v16 = v15;
  if (v16 <= 0)
  {
    v18 = _swiftEmptyArrayStorage;
    v21 = *(_QWORD *)&_swiftEmptyArrayStorage[3];
  }
  else
  {
    v17 = sub_1004B804C(&qword_101407518);
    v18 = (double *)swift_allocObject(v17, 16 * v16 + 32, 7);
    v19 = j__malloc_size_1(v18);
    v20 = v19 - 32;
    if (v19 < 32)
      v20 = v19 - 17;
    v21 = 2 * (v20 >> 4);
    *((_QWORD *)v18 + 2) = v16;
    *((_QWORD *)v18 + 3) = v21;
  }
  sub_1004CB7BC(a1, (uint64_t)v9, &qword_1013E7CF8);
  a1 = *v9;
  v22 = v83;
  *v83 = *v9;
  v22[1] = 0;
  v23 = (char *)v9 + *(int *)(v7 + 52);
  v9 = v22;
  v12 = (uint64_t)v89;
  v7 = v91;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v23, v91);
  v24 = (char *)v9 + *(int *)(v10 + 52);
  dispatch thunk of Sequence.makeIterator()(v7, v14);
  v88 = *(int *)(v10 + 56);
  *((_BYTE *)v9 + v88) = 0;
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v81 = (uint64_t)v18;
    v82 = v21 >> 1;
    if (v16)
    {
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v78 = a1;
        else
          v78 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v79 = _CocoaArrayWrapper.endIndex.getter(v78);
        swift_bridgeObjectRelease(a1);
        if (v79)
        {
LABEL_15:
          v12 = 0;
          v10 = (uint64_t)&v24[*(int *)(sub_1004B804C(&qword_101407510) + 36)];
          v93 = (char *)v16;
          v82 -= v16;
          v7 = (uint64_t)(v18 + 6);
          v25 = v91;
          v26 = v84;
          while (1)
          {
            if ((a1 & 0xC000000000000001) != 0)
            {
              v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
              v28 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_81;
            }
            else
            {
              if (v12 < 0)
              {
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
LABEL_88:
                __break(1u);
                goto LABEL_89;
              }
              if ((unint64_t)v12 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_80;
              v27 = (char *)*(id *)(a1 + 8 * v12 + 32);
              v28 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_81;
            }
            v92 = v27;
            v9[1] = v28;
            v29 = v87;
            v30 = v85;
            (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v85, v10, v26);
            v31 = sub_1004B7878(&qword_1013F6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
            a1 = (uint64_t)v24;
            v32 = v86;
            dispatch thunk of Collection.endIndex.getter(v25, v31);
            sub_1004B7878(&qword_1013F6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
            v33 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v32);
            v34 = *(void (**)(char *, uint64_t))(v29 + 8);
            v34(v32, v26);
            v34(v30, v26);
            if ((v33 & 1) != 0)
              goto LABEL_105;
            v35 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v94, v10, v25, v31);
            v37 = *v36;
            v35(v94, 0);
            v12 = (uint64_t)v89;
            v38 = v90;
            (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, a1, v25);
            dispatch thunk of Collection.formIndex(after:)(v10, v25, v31);
            (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v12, v25);
            *(_QWORD *)(v7 - 16) = v92;
            *(_QWORD *)(v7 - 8) = v37;
            --v93;
            v24 = (char *)a1;
            if (!v93)
              break;
            v9 = v83;
            if ((*((_BYTE *)v83 + v88) & 1) != 0)
              goto LABEL_82;
            a1 = *v83;
            v12 = v83[1];
            if ((unint64_t)*v83 >> 62)
            {
              if (a1 < 0)
                v40 = *v83;
              else
                v40 = a1 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*v83);
              v39 = _CocoaArrayWrapper.endIndex.getter(v40);
              swift_bridgeObjectRelease(a1);
            }
            else
            {
              v39 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v7 += 16;
            if (v12 == v39)
              goto LABEL_83;
          }
          v9 = v83;
          if ((*((_BYTE *)v83 + v88) & 1) == 0)
            goto LABEL_37;
          goto LABEL_74;
        }
      }
      else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_104;
    }
    v7 = (uint64_t)(v18 + 4);
LABEL_37:
    a1 = *v9;
    v12 = v9[1];
    if (!((unint64_t)*v9 >> 62))
    {
      if (v12 != *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_39;
      goto LABEL_73;
    }
  }
  if (a1 < 0)
    v76 = a1;
  else
    v76 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v77 = _CocoaArrayWrapper.endIndex.getter(v76);
  swift_bridgeObjectRelease(a1);
  if (v12 != v77)
  {
LABEL_39:
    v41 = &v24[*(int *)(sub_1004B804C(&qword_101407510) + 36)];
    v92 = v41;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v42 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
        v43 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_86;
      }
      else
      {
        if (v12 < 0)
          goto LABEL_84;
        if ((unint64_t)v12 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_85;
        v42 = (char *)*(id *)(a1 + 8 * v12 + 32);
        v43 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_86;
      }
      v93 = v42;
      v9[1] = v43;
      v44 = v87;
      v45 = v24;
      v46 = v84;
      v47 = v85;
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v85, v41, v84);
      v48 = sub_1004B7878(&qword_1013F6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      a1 = (uint64_t)v86;
      dispatch thunk of Collection.endIndex.getter(v91, v48);
      sub_1004B7878(&qword_1013F6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
      v49 = dispatch thunk of static Equatable.== infix(_:_:)(v47, a1);
      v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v50(a1, v46);
      v50((uint64_t)v47, v46);
      if ((v49 & 1) != 0)
        break;
      v51 = v91;
      v52 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v94, v41, v91, v48);
      v10 = *v53;
      v52(v94, 0);
      v12 = (uint64_t)v89;
      v54 = v90;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v89, v45, v51);
      dispatch thunk of Collection.formIndex(after:)(v41, v51, v48);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v12, v51);
      v24 = v45;
      v55 = v82;
      if (!v82)
      {
        v56 = (_QWORD *)v81;
        v57 = *(_QWORD *)(v81 + 24);
        if ((uint64_t)((v57 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_88;
        v58 = v57 & 0xFFFFFFFFFFFFFFFELL;
        if (v58 <= 1)
          v59 = 1;
        else
          v59 = v58;
        v60 = sub_1004B804C(&qword_101407518);
        v12 = swift_allocObject(v60, 16 * v59 + 32, 7);
        v61 = j__malloc_size_1((const void *)v12);
        v62 = v61 - 32;
        if (v61 < 32)
          v62 = v61 - 17;
        a1 = v62 >> 4;
        *(_QWORD *)(v12 + 16) = v59;
        *(_QWORD *)(v12 + 24) = 2 * (v62 >> 4);
        v63 = v12 + 32;
        v64 = v56[3] >> 1;
        if (v56[2])
        {
          v65 = v56 + 4;
          if ((_QWORD *)v12 != v56 || v63 >= (unint64_t)v65 + 16 * v64)
            memmove((void *)(v12 + 32), v65, 16 * v64);
          v56[2] = 0;
        }
        v66 = v56;
        v7 = v63 + 16 * v64;
        v55 = (a1 & 0x7FFFFFFFFFFFFFFFLL) - v64;
        swift_release(v66);
        v81 = v12;
      }
      v67 = __OFSUB__(v55, 1);
      v68 = v55 - 1;
      if (v67)
        goto LABEL_87;
      *(_QWORD *)v7 = v93;
      *(_QWORD *)(v7 + 8) = v10;
      if ((*((_BYTE *)v9 + v88) & 1) != 0)
        goto LABEL_75;
      v82 = v68;
      a1 = *v9;
      v12 = v9[1];
      if ((unint64_t)*v9 >> 62)
      {
        if (a1 < 0)
          v71 = *v9;
        else
          v71 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v9);
        v69 = _CocoaArrayWrapper.endIndex.getter(v71);
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v69 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v7 += 16;
      v70 = v12 == v69;
      v41 = v92;
      if (v70)
        goto LABEL_73;
    }

  }
LABEL_73:
  *((_BYTE *)v9 + v88) = 1;
LABEL_74:
  v68 = v82;
LABEL_75:
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101407500);
  v72 = *(_QWORD *)(v81 + 24);
  if (v72 < 2)
    return;
  v73 = v72 >> 1;
  v67 = __OFSUB__(v73, v68);
  v74 = v73 - v68;
  if (!v67)
  {
    *(_QWORD *)(v81 + 16) = v74;
    return;
  }
LABEL_104:
  __break(1u);
LABEL_105:

  __break(1u);
}

uint64_t sub_100BACAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  int64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  BOOL v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t v96;

  v4 = sub_1004B804C(&qword_1013E04F0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v76 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v87 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v81 = (char *)&v76 - v14;
  v15 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v91 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v96 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v85 = (uint64_t)&v76 - v18;
  v93 = sub_1004B804C(&qword_1013E1C70);
  v19 = *(_QWORD *)(v93 - 8);
  v20 = __chkstk_darwin(v93);
  v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v79 = (uint64_t)&v76 - v24;
  __chkstk_darwin(v23);
  v82 = v9;
  v83 = (uint64_t)&v76 - v25;
  v26 = *(_QWORD *)(a1 + 16);
  v94 = *(char **)(a2 + 16);
  v95 = v26;
  if ((unint64_t)v94 >= v26)
    v27 = v26;
  else
    v27 = (uint64_t)v94;
  v89 = a1;
  v90 = a2;
  v80 = v19;
  v92 = v11;
  if (!v27)
  {
    v45 = *(unsigned __int8 *)(v19 + 80);
    v46 = _swiftEmptyArrayStorage[3];
    v78 = (v45 + 32) & ~v45;
    v86 = _swiftEmptyArrayStorage;
    v37 = (char *)_swiftEmptyArrayStorage + v78;
    v84 = (char *)(v46 >> 1);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
LABEL_17:
    v7 = v94;
    v47 = v95;
    if (v95 <= (unint64_t)v94)
    {
LABEL_50:
      v53 = (unint64_t)v86;
LABEL_51:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
      v72 = *(_QWORD *)(v53 + 24);
      if (v72 >= 2)
      {
        v73 = v72 >> 1;
        v71 = __OFSUB__(v73, v84);
        v74 = v73 - (_QWORD)v84;
        if (v71)
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        *(_QWORD *)(v53 + 16) = v74;
      }
      return v53;
    }
    v88 = v45 | 7;
    if (v27 <= (uint64_t)v94)
      v48 = (uint64_t)v94;
    else
      v48 = v27;
    v96 = v48;
    while (v47 != v27)
    {
      sub_1004B8460(a1+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(_QWORD *)(v91 + 72) * v27, v85, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (v7 == (char *)v27)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_49:
        sub_1004B84A4(v85, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004CB800((uint64_t)v9, &qword_1013E04F0);
        goto LABEL_50;
      }
      if (v96 == v27)
        goto LABEL_58;
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, a2+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v27, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        goto LABEL_49;
      v49 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v50 = v81;
      v49(v81, v9, v10);
      v51 = v79;
      v52 = (char *)(v79 + *(int *)(v93 + 48));
      sub_1004B84E0(v85, v79, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v49(v52, v50, v10);
      sub_1004C4938(v51, v83, &qword_1013E1C70);
      v7 = v84;
      if (v84)
      {
        v53 = (unint64_t)v86;
        v54 = v80;
      }
      else
      {
        v55 = v86;
        v56 = v86[3];
        v54 = v80;
        if ((uint64_t)((v56 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_60;
        v57 = v56 & 0xFFFFFFFFFFFFFFFELL;
        if (v57 <= 1)
          v58 = 1;
        else
          v58 = v57;
        v59 = sub_1004B804C((uint64_t *)&unk_101407370);
        v60 = *(_QWORD *)(v54 + 72);
        v7 = (char *)v78;
        v53 = swift_allocObject(v59, v78 + v60 * v58, v88);
        v61 = j__malloc_size_1((const void *)v53);
        if (!v60)
          goto LABEL_61;
        v62 = v61 - (_QWORD)v7;
        if (v61 - (_QWORD)v7 == 0x8000000000000000 && v60 == -1)
          goto LABEL_62;
        v64 = v62 / v60;
        *(_QWORD *)(v53 + 16) = v58;
        *(_QWORD *)(v53 + 24) = 2 * (v62 / v60);
        v65 = &v7[v53];
        v66 = v55[2];
        v67 = v55;
        v68 = v55[3] >> 1;
        v69 = v68 * v60;
        if (v66)
        {
          v70 = (char *)v67 + v78;
          if (v53 < (unint64_t)v67 || v65 >= &v70[v69])
          {
            swift_arrayInitWithTakeFrontToBack(&v7[v53], v70, v68, v93);
          }
          else if ((_QWORD *)v53 != v86)
          {
            swift_arrayInitWithTakeBackToFront(&v7[v53]);
          }
          v67 = v86;
          v86[2] = 0;
        }
        v37 = &v65[v69];
        v7 = (char *)((v64 & 0x7FFFFFFFFFFFFFFFLL) - v68);
        swift_release(v67);
        a1 = v89;
        a2 = v90;
      }
      v71 = __OFSUB__(v7--, 1);
      v9 = v82;
      if (v71)
        goto LABEL_59;
      v84 = v7;
      ++v27;
      sub_1004C4938(v83, (uint64_t)v37, &qword_1013E1C70);
      v37 += *(_QWORD *)(v54 + 72);
      v86 = (_QWORD *)v53;
      v7 = v94;
      v47 = v95;
      v11 = v92;
      if (v95 == v27)
        goto LABEL_51;
    }
    goto LABEL_57;
  }
  v28 = sub_1004B804C((uint64_t *)&unk_101407370);
  v29 = *(_QWORD *)(v19 + 72);
  v30 = *(unsigned __int8 *)(v19 + 80);
  v31 = (v30 + 32) & ~v30;
  v77 = v30;
  v86 = (_QWORD *)swift_allocObject(v28, v31 + v29 * v27, v30 | 7);
  v32 = j__malloc_size_1(v86);
  if (!v29)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v32 - v31 != 0x8000000000000000 || v29 != -1)
  {
    v88 = v10;
    v34 = 0;
    v35 = (uint64_t)(v32 - v31) / v29;
    v36 = v86;
    v86[2] = v27;
    v36[3] = 2 * v35;
    v78 = v31;
    v37 = (char *)v36 + v31;
    v84 = (char *)((v35 & 0x7FFFFFFFFFFFFFFFLL) - v27);
    v38 = v10;
    while ((char *)v95 != v34)
    {
      sub_1004B8460(a1+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(_QWORD *)(v91 + 72) * (_QWORD)v34, v96, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (v94 == v34)
        goto LABEL_56;
      v39 = v27;
      v40 = v29;
      v41 = v92;
      (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v7, a2+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v92 + 72) * (_QWORD)v34, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v7, 0, 1, v38);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v38) == 1)
        goto LABEL_66;
      ++v34;
      v42 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v43 = v87;
      v42(v87, v7, v38);
      v44 = &v22[*(int *)(v93 + 48)];
      sub_1004B84E0(v96, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v42(v44, v43, v38);
      sub_1004C4938((uint64_t)v22, (uint64_t)v37, &qword_1013E1C70);
      v29 = v40;
      v37 += v40;
      v27 = v39;
      a1 = v89;
      a2 = v90;
      if ((char *)v39 == v34)
      {
        swift_bridgeObjectRetain(v89);
        swift_bridgeObjectRetain(a2);
        v9 = v82;
        v45 = v77;
        v10 = v88;
        v11 = v92;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_65:
  __break(1u);
LABEL_66:
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRetain(v90);
  sub_1004B84A4(v96, type metadata accessor for CRLBoardLibraryViewModel.Item);
  result = sub_1004CB800((uint64_t)v7, &qword_1013E04F0);
  __break(1u);
  return result;
}

void sub_100BAD21C(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  char v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = __chkstk_darwin(v5);
  v41 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v40 = (uint64_t)&v37 - v9;
  __chkstk_darwin(v8);
  v42 = (uint64_t)&v37 - v11;
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  if (!v13)
    goto LABEL_11;
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain(*a1);
  v16 = 0;
  v38 = v14;
  while (1)
  {
    v17 = sub_1009E436C(v12 + v14, a2);
    if (v2)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v12);
      return;
    }
    if ((v17 & 1) != 0)
      break;
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease(v12);
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease(v12);
  if (!__OFADD__(v16, 1))
  {
    v18 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v18)
    {
LABEL_11:
      swift_bridgeObjectRelease(a2);
      return;
    }
    v19 = v15 + v14;
    v20 = v16 + 1;
    v21 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v37 = a1;
    v39 = a2;
    while (v20 < v18)
    {
      v43 = v20;
      v22 = v15;
      v23 = a1;
      v24 = v19;
      v25 = v12 + v19;
      v26 = v42;
      v27 = v21;
      sub_1004B8460(v25, v42, v21);
      v28 = sub_1009E436C(v26, a2);
      v29 = v27;
      sub_1004B84A4(v26, v27);
      if ((v28 & 1) != 0)
      {
        a1 = v23;
        v15 = v22;
        v30 = v24;
        v31 = v43;
      }
      else
      {
        v31 = v43;
        a1 = v23;
        v15 = v22;
        v30 = v24;
        if (v43 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v32 = *a1;
          v33 = *(_QWORD *)(*a1 + 16);
          if (v16 >= v33)
            goto LABEL_33;
          sub_1004B8460(v32 + v38 + v16 * v22, v40, v29);
          if (v43 >= v33)
            goto LABEL_34;
          v30 = v24;
          sub_1004B8460(v32 + v24, v41, v29);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
          a1 = v37;
          *v37 = v32;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v32 = sub_100D15070(v32);
            *a1 = v32;
          }
          if (v16 >= *(_QWORD *)(v32 + 16))
            goto LABEL_35;
          sub_10068FBAC(v41, v32 + v38 + v16 * v22);
          if (v43 >= *(_QWORD *)(*a1 + 16))
            goto LABEL_36;
          sub_10068FBAC(v40, *a1 + v24);
          v31 = v43;
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_31;
      }
      v36 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_30;
      v12 = *a1;
      v18 = *(_QWORD *)(*a1 + 16);
      v20 = v31 + 1;
      v19 = v30 + v15;
      v21 = v29;
      a2 = v39;
      if (v36 == v18)
        goto LABEL_11;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
}

void sub_100BAD550(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t *v62;
  char *v63;
  char *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  void (*v71)(id);
  _QWORD *v72;
  char *v73;
  id v74;
  id v75;
  _QWORD *v76;
  id v77;
  char v78;
  uint64_t ObjectType;
  char *v80;
  id v81;
  void *v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  double v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __n128 v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t inited;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  NSString v134;
  int v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  BOOL v168;
  uint64_t v169;
  char *v170;
  double v171;
  unsigned __int8 *v172;
  uint64_t v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned __int8 *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t (**v191)(uint64_t);
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  id v207;
  Swift::String v208;
  Swift::String v209;
  Swift::String v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unsigned __int8 *v218;
  unsigned __int8 *v219;
  id v220;
  char *v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  double v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  void *v240;
  id v241;
  char *v242;
  id v243;
  _BYTE *v244;
  void *v245;
  id v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  double v252;
  uint64_t v253;
  uint64_t v254;
  _BYTE *v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  id v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  void *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unsigned __int8 *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  id v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  unsigned __int8 *v302;
  char v303[8];
  char v304[8];
  _QWORD *v305;
  char v306[8];
  Swift::String v307;

  v297 = a7;
  v283 = a5;
  v292 = a4;
  v279 = a2;
  v10 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v10);
  v266 = (uint64_t)&v261 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v12);
  v269 = (uint64_t)&v261 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v268 = *(_QWORD *)(v272 - 8);
  __chkstk_darwin(v272);
  v267 = (uint64_t)&v261 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v15);
  v286 = (char *)&v261 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  v263 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v265 = (uint64_t)&v261 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = v19;
  __chkstk_darwin(v18);
  v280 = (char *)&v261 - v20;
  v275 = type metadata accessor for UUID(0);
  v274 = *(_QWORD *)(v275 - 8);
  __chkstk_darwin(v275);
  v273 = (char *)&v261 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1014073C0);
  __chkstk_darwin(v22);
  v276 = (char *)&v261 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = type metadata accessor for UIBackgroundConfiguration(0);
  v277 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v284 = (char *)&v261 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = type metadata accessor for AppEntityVisualState(0);
  v288 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin(v294);
  v26 = (char *)&v261 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v28 = __chkstk_darwin(v27);
  v262 = (uint64_t)&v261 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v282 = (uint64_t)&v261 - v31;
  __chkstk_darwin(v30);
  v281 = (uint64_t)&v261 - v32;
  v33 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v302 = *(unsigned __int8 **)(v33 - 8);
  v34 = __chkstk_darwin(v33);
  v301 = (char *)&v261 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v299 = (uint64_t)&v261 - v37;
  v38 = __chkstk_darwin(v36);
  v296 = (char *)&v261 - v39;
  v40 = __chkstk_darwin(v38);
  v295 = (char *)&v261 - v41;
  v42 = __chkstk_darwin(v40);
  v287 = (uint64_t)&v261 - v43;
  v44 = __chkstk_darwin(v42);
  v289 = (uint64_t)&v261 - v45;
  v290 = v46;
  __chkstk_darwin(v44);
  v48 = (char *)&v261 - v47;
  v49 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v49);
  v51 = (char *)&v261 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
  swift_beginAccess(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item, v306, 0, 0);
  sub_1004CB7BC(v52, (uint64_t)v51, (uint64_t *)&unk_1013E3830);
  v293 = (char *)a1;
  v291 = (unsigned __int8 *)sub_100BB12BC(a1, (uint64_t)v51, a3, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  sub_1004CB800((uint64_t)v51, (uint64_t *)&unk_1013E3830);
  v298 = a3;
  sub_1004B8460(a3, (uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v300 = v33;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v48, v33);
  v271 = a6;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v54 = v281;
      sub_1004B84E0((uint64_t)v48, v281, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCAD68();
      v56 = v55;
      v58 = v57;
      v59 = v54;
      v60 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v62 = (uint64_t *)&v48[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v56 = *v62;
      v58 = v62[1];
      v60 = type metadata accessor for CRLBoardIdentifier;
      v59 = (uint64_t)v48;
    }
    sub_1004B84A4(v59, v60);
  }
  else
  {
    v56 = sub_100BCE3AC();
    v58 = v61;
  }
  v63 = v293;
  sub_100B30F28(v56, v58);
  sub_1004B8460(v298, (uint64_t)v51, type metadata accessor for CRLBoardLibraryViewModel.Item);
  (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v302 + 7))(v51, 0, 1, v300);
  swift_beginAccess(v52, &v305, 33, 0);
  sub_100582338((uint64_t)v51, v52, (uint64_t *)&unk_1013E3830);
  swift_endAccess(&v305);
  v64 = &v63[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate];
  *((_QWORD *)v64 + 1) = &off_1012963B8;
  v65 = v297;
  swift_unknownObjectWeakAssign(v64, v297);
  v66 = objc_msgSend(v65, "collectionView");
  if (!v66)
    goto LABEL_93;
  v67 = v66;
  v68 = objc_msgSend(v66, "isEditing");

  v69 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v70 = *(_QWORD **)&v63[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (!v70)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v71 = *(void (**)(id))((swift_isaMask & *v70) + 0x168);
  v72 = v70;
  v71(v68);

  v73 = v63;
  v74 = objc_msgSend(v73, "isSelected");
  v75 = objc_msgSend(v73, "isHighlighted");
  v285 = v69;
  v76 = *(_QWORD **)&v63[v69];
  if (!v76)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v77 = v75;
  v78 = (*(uint64_t (**)(void))((swift_isaMask & *v76) + 0x160))();
  AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v74, v77, 0, 0, v78 & 1, 0);

  UIView.updateAppEntityAnnotation(with:)(v26);
  (*(void (**)(char *, uint64_t))(v288 + 8))(v26, v294);
  ObjectType = swift_getObjectType(v73);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem))
    v80 = v73;
  else
    v80 = 0;
  v294 = (uint64_t)v73;
  if (v80)
  {
    swift_unknownObjectRetain_n(v73, 2);
    v81 = objc_msgSend(v297, "collectionView");
    if (!v81)
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v82 = v81;
    v83 = objc_msgSend(v81, "indexPathsForSelectedItems");

    v84 = v284;
    if (v83)
    {
      v85 = type metadata accessor for IndexPath(0);
      v86 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, v85);

      __chkstk_darwin(v87);
      v307._object = v279;
      swift_unknownObjectRetain(v294);
      v88 = sub_100DAFC08((uint64_t (*)(char *))sub_100BBC494, (_BOOL8)&v260, v86);
      *(_QWORD *)&v89 = swift_bridgeObjectRelease(v86).n128_u64[0];
      v73 = (char *)v294;
      objc_msgSend(v80, "setSelected:", v88, v89);

      v90 = swift_unknownObjectRetain(v73);
      UICollectionViewCell.defaultBackgroundConfiguration()(v90);

      if (qword_1013DC9A0 != -1)
        swift_once(&qword_1013DC9A0, sub_10055B6D0);
      UIBackgroundConfiguration.cornerRadius.setter(*(double *)&qword_10147E808);
      v91 = objc_msgSend(v297, "collectionView");
      if (!v91)
        goto LABEL_102;
      v92 = v91;
      v93 = objc_msgSend(v91, "backgroundColor");

      UIBackgroundConfiguration.backgroundColor.setter(v93);
      v94 = v277;
      v95 = v276;
      v96 = v278;
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v276, v84, v278);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v95, 0, 1, v96);
      swift_unknownObjectRetain(v73);
      UICollectionViewCell.backgroundConfiguration.setter(v95);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v84, v96);
    }
    else
    {

    }
  }
  v97 = v287;
  v98 = swift_allocObject(&unk_101296AE0, 32, 7);
  *(_QWORD *)(v98 + 24) = &off_101294C00;
  swift_unknownObjectWeakInit(v98 + 16, v73);
  v99 = v298;
  v100 = v289;
  sub_1004B8460(v298, v289, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v101 = v302[80];
  v102 = (v101 + 24) & ~v101;
  v287 = v101;
  v279 = (void *)(v101 | 7);
  v103 = swift_allocObject(&unk_101296BA8, v102 + v290, v101 | 7);
  *(_QWORD *)(v103 + 16) = v98;
  sub_1004B84E0(v100, v103 + v102, type metadata accessor for CRLBoardLibraryViewModel.Item);
  objc_msgSend((id)objc_opt_self(UIScreen), "crl_screenScale");
  v105 = v104;
  sub_1004B8460(v99, v97, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v106 = swift_getEnumCaseMultiPayload(v97, v300);
  if (!v106)
  {
    v284 = (char *)v103;
    v270 = v80;
    v127 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v127, v304);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v129 = sub_100BCCD38();
    v131 = v130;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v129;
    *(_QWORD *)(inited + 40) = v131;
    sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363, "Unhandled item: %@", 18, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 363, (uint64_t)"Unhandled item: %@", 18, 2u);
    swift_setDeallocating(inited);
    v132 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v132);
    v133 = (void *)objc_opt_self(UIImage);
    v134 = String._bridgeToObjectiveC()();
    v302 = (unsigned __int8 *)objc_msgSend(v133, "systemImageNamed:", v134);

    sub_1004B84A4(v97, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v135 = 0;
    LODWORD(v299) = 0;
    LODWORD(v300) = 0;
    LODWORD(v301) = 0;
    v136 = 0;
    v137 = 0;
    v138 = 0;
    v139 = 0;
    v140 = 0;
    v141 = 0;
    v142 = 0;
    v143 = 0xE000000000000000;
    v144 = 0xE000000000000000;
    goto LABEL_82;
  }
  v107 = v292;
  if (v106 == 1)
  {
    v108 = v97;
    v109 = v282;
    sub_1004B84E0(v108, v282, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v110 = *(_QWORD *)(v107 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain(v110);
    v111 = v273;
    sub_100BCB904();
    __chkstk_darwin(v112);
    v307._object = v111;
    sub_1007C2808(1, (uint64_t (*)(id))sub_100BBC4B4, (uint64_t)&v260, v110);
    v114 = v113;
    v115 = swift_bridgeObjectRelease(v110);
    (*(void (**)(void *, uint64_t, __n128))(v274 + 8))(v111, v275, v115);
    if (!v114)
    {
      v151 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v152 = swift_initStackObject(v151, v303);
      *(_OWORD *)(v152 + 16) = xmmword_100EF5E40;
      v153 = v281;
      sub_1004B8460(v109, v281, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCAD68();
      v155 = v154;
      v157 = v156;
      sub_1004B84A4(v153, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      *(_QWORD *)(v152 + 56) = &type metadata for String;
      *(_QWORD *)(v152 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v152 + 32) = v155;
      *(_QWORD *)(v152 + 40) = v157;
      sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256, "Folder does not exist: %@", 25, 2u, v152);
      sub_1004F5394(v152, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 256, (uint64_t)"Folder does not exist: %@", 25, 2u);
      swift_bridgeObjectRelease(v152);
      swift_release(v103);

      sub_1004B84A4(v109, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return;
    }
    v116 = ~v287;
    v280 = v114;
    v117 = objc_msgSend(v114, "children");
    v118 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
    v119 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v117, v118);

    v270 = v80;
    v284 = (char *)v103;
    v281 = v116;
    if ((unint64_t)v119 >> 62)
    {
      if (v119 < 0)
        v195 = v119;
      else
        v195 = v119 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v119);
      v120 = _CocoaArrayWrapper.endIndex.getter(v195);
      swift_bridgeObjectRelease(v119);
      if (v120)
        goto LABEL_26;
    }
    else
    {
      v120 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v120)
      {
LABEL_26:
        v305 = _swiftEmptyArrayStorage;
        sub_1006008AC(0, v120 & ~(v120 >> 63), 0);
        if (v120 < 0)
        {
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
          goto LABEL_94;
        }
        v121 = 0;
        v122 = v305;
        v123 = (v287 + 32) & v116;
        do
        {
          if ((v119 & 0xC000000000000001) != 0)
          {
            v124 = specialized _ArrayBuffer._getElementSlowPath(_:)(v121, v119);
            sub_1004B8460(v124 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v301, type metadata accessor for CRLBoardLibraryViewModel.Item);
            swift_unknownObjectRelease(v124);
          }
          else
          {
            sub_1004B8460(*(_QWORD *)(v119 + 8 * v121 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v301, type metadata accessor for CRLBoardLibraryViewModel.Item);
          }
          v305 = v122;
          v126 = v122[2];
          v125 = v122[3];
          if (v126 >= v125 >> 1)
          {
            sub_1006008AC(v125 > 1, v126 + 1, 1);
            v122 = v305;
          }
          ++v121;
          v122[2] = v126 + 1;
          sub_1004B84E0((uint64_t)v301, (uint64_t)v122 + v123 + *((_QWORD *)v302 + 9) * v126, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        while (v120 != v121);
        swift_bridgeObjectRelease(v119);
        goto LABEL_67;
      }
    }
    swift_bridgeObjectRelease(v119);
    v122 = _swiftEmptyArrayStorage;
LABEL_67:
    v305 = _swiftEmptyArrayStorage;
    v196 = v122[2];
    swift_bridgeObjectRetain(v122);
    v197 = (uint64_t)v296;
    v198 = (uint64_t)v295;
    if (v196)
    {
      v199 = 0;
      v301 = v296 + 8;
      v288 = (v287 + 32) & v281;
      v200 = (char *)v122 + v288;
      while (v199 < v122[2])
      {
        v201 = *((_QWORD *)v302 + 9);
        sub_1004B8460((uint64_t)&v200[v201 * v199], v198, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B8460(v198, v197, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v197, v300) == 2)
        {
          v202 = sub_1004B804C((uint64_t *)&unk_1013EA630);
          swift_bridgeObjectRelease(*(_QWORD *)&v301[*(int *)(v202 + 48)]);
          sub_1004B84A4(v197, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84E0(v198, v299, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v203 = v305;
          if ((swift_isUniquelyReferenced_nonNull_native(v305) & 1) == 0)
          {
            sub_1006008AC(0, v203[2] + 1, 1);
            v203 = v305;
          }
          v205 = v203[2];
          v204 = v203[3];
          if (v205 >= v204 >> 1)
          {
            sub_1006008AC(v204 > 1, v205 + 1, 1);
            v203 = v305;
          }
          v203[2] = v205 + 1;
          sub_1004B84E0(v299, (uint64_t)v203 + v288 + v205 * v201, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v197 = (uint64_t)v296;
          v198 = (uint64_t)v295;
        }
        else
        {
          sub_1004B84A4(v197, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B84A4(v198, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        if (v196 == ++v199)
          goto LABEL_78;
      }
      __break(1u);
      goto LABEL_92;
    }
LABEL_78:
    swift_bridgeObjectRelease(v122);
    v206 = v305[2];
    swift_release(v305);
    if (v206)
    {
      v207 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v307._countAndFlagsBits = 0xD00000000000001ALL;
      v307._object = (void *)0x8000000100FFCCD0;
      v208._countAndFlagsBits = 0x72616F6220756C25;
      v208._object = (void *)0xEC00000029732864;
      v209._countAndFlagsBits = 0;
      v209._object = (void *)0xE000000000000000;
      v210 = NSLocalizedString(_:tableName:bundle:value:comment:)(v208, (Swift::String_optional)0, (NSBundle)v207, v209, v307);

      v211 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v212 = swift_allocObject(v211, 72, 7);
      *(_OWORD *)(v212 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v212 + 56) = &type metadata for Int;
      *(_QWORD *)(v212 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v212 + 32) = v206;
      v296 = (char *)static String.localizedStringWithFormat(_:_:)(v210._countAndFlagsBits, v210._object, v212);
      v295 = v213;
      swift_bridgeObjectRelease(v210._object);
      swift_bridgeObjectRelease(v212);
    }
    else
    {
      v296 = 0;
      v295 = 0;
    }
    v214 = v271;
    v215 = type metadata accessor for TaskPriority(0);
    v216 = (uint64_t)v286;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 56))(v286, 1, 1, v215);
    v217 = v289;
    sub_1004B8460(v298, v289, type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor(0);
    v218 = v291;
    v219 = v291;
    v220 = v214;
    v221 = v284;
    swift_retain(v284);
    v222 = v297;
    v223 = static MainActor.shared.getter(v222);
    v224 = (v287 + 80) & v281;
    v225 = (_QWORD *)swift_allocObject(&unk_101296C20, v224 + v290, v279);
    v225[2] = v223;
    v225[3] = &protocol witness table for MainActor;
    v225[4] = v122;
    v225[5] = v220;
    v225[6] = v222;
    v225[7] = v105;
    v225[8] = sub_100BBA940;
    v225[9] = v221;
    sub_1004B84E0(v217, (uint64_t)v225 + v224, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v226 = sub_100521B98(v216, (uint64_t)&unk_1014073F8, (uint64_t)v225);
    swift_release(v226);

    sub_1004B84A4(v282, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v135 = 0;
    LODWORD(v299) = 0;
    LODWORD(v300) = 0;
    LODWORD(v301) = 0;
    v138 = 0;
    v139 = 0;
    v140 = 0;
    v141 = 0;
    v142 = 0;
    v143 = 0xE000000000000000;
    v302 = v218;
    v144 = 0xE000000000000000;
    v136 = v296;
    v137 = v295;
    goto LABEL_82;
  }
  v145 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)(v97 + *(int *)(v145 + 48) + 8));
  v146 = v280;
  sub_1004B84E0(v97, (uint64_t)v280, type metadata accessor for CRLBoardIdentifier);
  v147 = type metadata accessor for CRLBoardLibrary();
  v148 = swift_dynamicCastClass(v107, v147);
  if (!v148)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 299, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    sub_1004B84A4((uint64_t)v146, type metadata accessor for CRLBoardIdentifier);

    swift_release(v103);
LABEL_90:

    return;
  }
  v149 = v148;
  swift_unknownObjectRetain(v107);
  v150 = v269;
  sub_100C9F8F8((uint64_t)v146, v269);
  v158 = v272;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v268 + 56))(v150, 0, 1, v272);
  v159 = v267;
  sub_1004B84E0(v150, v267, type metadata accessor for CRLBoardViewModelMetadata);
  v295 = (char *)sub_100BC1474(v159 + *(int *)(v158 + 24));
  v144 = v160;
  v298 = v161;
  v296 = v162;
  v163 = v266;
  sub_1004CB7BC(v159 + *(int *)(v158 + 28), v266, &qword_1013F5478);
  v164 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v165 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 48))(v163, 1, v164);
  if (v165 == 1)
  {
    v166 = sub_1004CB800(v163, &qword_1013F5478);
    v290 = 0;
    v139 = 0;
  }
  else
  {
    v139 = *(_QWORD *)(v163 + 16);
    v290 = *(_QWORD *)(v163 + 8);
    swift_bridgeObjectRetain(v139);
    v166 = sub_1004B84A4(v163, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  }
  v167 = *(unsigned __int8 *)(v159 + 1);
  v168 = *(_BYTE *)(v159 + *(int *)(v272 + 32)) == 1;
  v270 = v80;
  v284 = (char *)v103;
  LODWORD(v299) = v167;
  if (v168)
  {
    v169 = *(_QWORD *)(*(_QWORD *)(v149 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                     + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    __chkstk_darwin(v166);
    v307._object = v146;
    swift_bridgeObjectRetain(v169);
    v170 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_100BBC47C, (uint64_t)&v260, v169);
    *(_QWORD *)&v171 = swift_bridgeObjectRelease(v169).n128_u64[0];
    if (!v170)
    {
      swift_unknownObjectRelease(v292);
      sub_1004B84A4(v267, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4((uint64_t)v146, type metadata accessor for CRLBoardIdentifier);
      LODWORD(v300) = 0;
      v302 = 0;
      v136 = 0;
      v137 = 0;
      v142 = 0;
      v135 = 1;
      LODWORD(v301) = 1;
      v140 = v298;
      v143 = (unint64_t)v296;
      v141 = (uint64_t)v295;
      v138 = v290;
      goto LABEL_82;
    }
    v172 = *(unsigned __int8 **)&v170[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
    if (v172)
      v172 = (unsigned __int8 *)objc_msgSend(v172, "UIImage", v171);
    v173 = *(_QWORD *)&v293[v285];
    if (!v173)
      goto LABEL_103;
    v142 = *(void **)(v173
                    + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
    v289 = v139;
    v302 = v172;
    if (v142)
    {
      v174 = v142;
    }
    else
    {
      v174 = objc_msgSend(objc_allocWithZone((Class)SWAttributionView), "init");
      objc_msgSend(v174, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v174, "setHorizontalAlignment:", 2);
      objc_msgSend(v174, "setBackgroundStyle:", 2);
      v142 = v174;
    }
    v193 = *(_QWORD *)&v170[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
    v194 = v174;
    objc_msgSend(v194, "setHighlight:", v193);
    swift_unknownObjectRelease(v292);

    sub_1004B84A4(v267, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4((uint64_t)v280, type metadata accessor for CRLBoardIdentifier);

    LODWORD(v300) = 0;
    v136 = 0;
    v137 = 0;
    v135 = 1;
    LODWORD(v301) = 1;
  }
  else
  {
    v175 = v262;
    sub_1004B8460((uint64_t)v297 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, v262, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v176 = sub_1004B804C(&qword_1013E1790);
    v177 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 48))(v175, 5, v176);
    sub_1004B84A4(v175, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    LODWORD(v300) = v177 != 5;
    v289 = v139;
    if (v177 == 5)
    {
      LODWORD(v301) = 0;
    }
    else
    {
      if (*(_BYTE *)(v267 + *(int *)(v272 + 36)))
        v178 = 2;
      else
        v178 = 0;
      LODWORD(v301) = v178;
    }
    v179 = type metadata accessor for TaskPriority(0);
    v180 = (uint64_t)v286;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 56))(v286, 1, 1, v179);
    v181 = v265;
    sub_1004B8460((uint64_t)v146, v265, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor(0);
    v182 = v291;
    v302 = (unsigned __int8 *)v271;
    swift_retain(v103);
    v184 = static MainActor.shared.getter(v183);
    v185 = *(unsigned __int8 *)(v263 + 80);
    v186 = (v185 + 32) & ~v185;
    v187 = (v264 + v186 + 7) & 0xFFFFFFFFFFFFFFF8;
    v188 = (v187 + 15) & 0xFFFFFFFFFFFFFFF8;
    v189 = (v188 + 15) & 0xFFFFFFFFFFFFFFF8;
    v190 = swift_allocObject(&unk_101296BF8, v189 + 16, v185 | 7);
    *(_QWORD *)(v190 + 16) = v184;
    *(_QWORD *)(v190 + 24) = &protocol witness table for MainActor;
    sub_1004B84E0(v181, v190 + v186, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v190 + v187) = v302;
    *(_QWORD *)(v190 + v188) = v105;
    v191 = (uint64_t (**)(uint64_t))(v190 + v189);
    *v191 = sub_100BBA940;
    v191[1] = (uint64_t (*)(uint64_t))v103;
    v192 = sub_100521B98(v180, (uint64_t)&unk_1014073F0, v190);
    swift_unknownObjectRelease(v292);
    swift_release(v192);
    sub_1004B84A4(v267, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4((uint64_t)v280, type metadata accessor for CRLBoardIdentifier);
    v135 = 0;
    v136 = 0;
    v137 = 0;
    v142 = 0;
    v302 = v291;
  }
  v140 = v298;
  v143 = (unint64_t)v296;
  v141 = (uint64_t)v295;
  v138 = v290;
  v139 = v289;
LABEL_82:
  v227 = v294;
  sub_100B30FD8(v141, v144);
  v228 = (uint64_t *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText);
  v229 = *(_QWORD *)(v227
                   + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText
                   + 8);
  *v228 = v140;
  v228[1] = v143;
  swift_bridgeObjectRelease(v229);
  v230 = (_QWORD *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
  v231 = *(_QWORD *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
  v232 = *(_QWORD *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8);
  *v230 = v138;
  v230[1] = v139;
  sub_100B31854(v231, v232);
  swift_bridgeObjectRelease(v232);
  v233 = (_QWORD *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName);
  v234 = *(_QWORD *)(v227 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName + 8);
  *v233 = v136;
  v233[1] = v137;
  *(_QWORD *)&v235 = swift_bridgeObjectRelease(v234).n128_u64[0];
  v236 = v293;
  v237 = v285;
  v238 = *(_QWORD *)&v293[v285];
  if (!v238)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  objc_msgSend(*(id *)(v238 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "setImage:", v302, v235);
  v239 = *(char **)&v236[v237];
  if (!v239)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v240 = *(void **)&v239[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView];
  v241 = v240;
  v242 = v239;
  v243 = v142;
  sub_100B30438(v142);

  v244 = (_BYTE *)v294;
  sub_10055AFBC(v240);

  v244[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = (_BYTE)v301;
  v245 = *(void **)&v236[v237];
  if (!v245)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  v246 = v245;
  sub_100B3057C();

  v247 = v300;
  v244[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = v300;
  v248 = *(_QWORD *)&v236[v237];
  v249 = v292;
  v250 = v270;
  if (!v248)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  objc_msgSend(*(id *)(v248 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton), "setHidden:", v247 ^ 1u);
  v244[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = v299;
  sub_100B31990();
  v244[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = v135;
  v251 = *(_QWORD *)&v236[v237];
  if (v251)
  {
    *(_BYTE *)(v251 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail) = v135;
    v252 = 1.0;
    if (v135)
      v252 = 0.5;
    objc_msgSend(*(id *)(v251 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "setAlpha:", v252);
    v253 = type metadata accessor for TaskPriority(0);
    v254 = (uint64_t)v286;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v253 - 8) + 56))(v286, 1, 1, v253);
    type metadata accessor for MainActor(0);
    v255 = v244;
    v256 = swift_unknownObjectRetain(v249);
    v257 = static MainActor.shared.getter(v256);
    v258 = (_QWORD *)swift_allocObject(&unk_101296BD0, 64, 7);
    v258[2] = v257;
    v258[3] = &protocol witness table for MainActor;
    v258[4] = v255;
    v258[5] = &off_101294C00;
    v258[6] = v249;
    v258[7] = v283;
    v259 = sub_100521B98(v254, (uint64_t)&unk_1014073E8, (uint64_t)v258);

    swift_release(v284);
    swift_release(v259);

    goto LABEL_90;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
}

void sub_100BAF4C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int EnumCaseMultiPayload;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  char *v63;
  id v64;
  id v65;
  void *v66;
  char v67;
  uint64_t ObjectType;
  void *v69;
  id v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  void *v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  __n128 v102;
  unint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t inited;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  NSString v123;
  int v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  BOOL v158;
  uint64_t v159;
  char *v160;
  double v161;
  char *v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t (**v182)(uint64_t);
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  id v197;
  Swift::String v198;
  Swift::String v199;
  Swift::String v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  id v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  id v212;
  void *v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  double v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  id v231;
  void *v232;
  char *v233;
  id v234;
  int v235;
  uint64_t v236;
  void *v237;
  void *v238;
  uint64_t v239;
  double v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  id v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  unint64_t v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  id v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  char v288[8];
  char v289[8];
  _QWORD *v290;
  char v291[8];
  Swift::String v292;

  v278 = a7;
  v261 = a6;
  v279 = a4;
  v269 = a2;
  v10 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v10);
  v255 = (uint64_t)&v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v12);
  v257 = (uint64_t)&v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v258 = *(_QWORD *)(v259 - 8);
  __chkstk_darwin(v259);
  v256 = (uint64_t)&v250 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v15);
  v273 = (uint64_t)&v250 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  v252 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v254 = (uint64_t)&v250 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = v19;
  __chkstk_darwin(v18);
  v265 = (char *)&v250 - v20;
  v264 = type metadata accessor for UUID(0);
  v263 = *(_QWORD *)(v264 - 8);
  __chkstk_darwin(v264);
  v262 = (char *)&v250 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1014073C0);
  __chkstk_darwin(v22);
  v266 = (char *)&v250 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = type metadata accessor for UIBackgroundConfiguration(0);
  v267 = *(_QWORD *)(v268 - 8);
  __chkstk_darwin(v268);
  v272 = (unint64_t)&v250 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v26 = __chkstk_darwin(v25);
  v251 = (uint64_t)&v250 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v270 = (uint64_t)&v250 - v29;
  __chkstk_darwin(v28);
  v274 = (unint64_t)&v250 - v30;
  v31 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v287 = *(_QWORD *)(v31 - 8);
  v32 = __chkstk_darwin(v31);
  v286 = (char *)&v250 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v284 = (uint64_t)&v250 - v35;
  v36 = __chkstk_darwin(v34);
  v281 = (char *)&v250 - v37;
  v38 = __chkstk_darwin(v36);
  v283 = (char *)&v250 - v39;
  v40 = __chkstk_darwin(v38);
  v42 = (char *)&v250 - v41;
  v43 = __chkstk_darwin(v40);
  v275 = (uint64_t)&v250 - v44;
  v276 = v45;
  __chkstk_darwin(v43);
  v47 = (char *)&v250 - v46;
  v48 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v48);
  v50 = (char *)&v250 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
  swift_beginAccess(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item, v291, 0, 0);
  sub_1004CB7BC(v51, (uint64_t)v50, (uint64_t *)&unk_1013E3830);
  v280 = (char *)a1;
  v277 = (char *)sub_100BB12BC(a1, (uint64_t)v50, a3, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  sub_1004CB800((uint64_t)v50, (uint64_t *)&unk_1013E3830);
  v282 = a3;
  sub_1004B8460(a3, (uint64_t)v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v285 = v31;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v47, v31);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v53 = v274;
      sub_1004B84E0((uint64_t)v47, v274, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCAD68();
      v55 = v54;
      v57 = v56;
      v58 = v53;
      v59 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v61 = (uint64_t *)&v47[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v55 = *v61;
      v57 = v61[1];
      v59 = type metadata accessor for CRLBoardIdentifier;
      v58 = (uint64_t)v47;
    }
    sub_1004B84A4(v58, v59);
  }
  else
  {
    v55 = sub_100BCE3AC();
    v57 = v60;
  }
  v62 = v280;
  sub_1006ED890(v55, v57);
  sub_1004B8460(v282, (uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v287 + 56))(v50, 0, 1, v285);
  swift_beginAccess(v51, &v290, 33, 0);
  sub_100582338((uint64_t)v50, v51, (uint64_t *)&unk_1013E3830);
  swift_endAccess(&v290);
  v63 = &v62[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate];
  *((_QWORD *)v63 + 1) = &off_1012963B8;
  v64 = v278;
  swift_unknownObjectWeakAssign(v63, v278);
  v65 = objc_msgSend(v64, "collectionView");
  if (!v65)
    goto LABEL_91;
  v66 = v65;
  v67 = objc_msgSend(v65, "isEditing");

  sub_1006ED660(v67);
  ObjectType = swift_getObjectType(v62);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem))
    v69 = v62;
  else
    v69 = 0;
  v271 = a5;
  if (v69)
  {
    swift_unknownObjectRetain_n(v62, 2);
    v70 = objc_msgSend(v64, "collectionView");
    if (!v70)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v71 = v70;
    v72 = objc_msgSend(v70, "indexPathsForSelectedItems");

    if (v72)
    {
      v73 = type metadata accessor for IndexPath(0);
      v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

      __chkstk_darwin(v75);
      v292._object = v269;
      swift_unknownObjectRetain(v62);
      v76 = sub_100DAFC08((uint64_t (*)(char *))sub_10050CAF8, (_BOOL8)&v249, v74);
      objc_msgSend(v69, "setSelected:", v76, swift_bridgeObjectRelease(v74).n128_f64[0]);

      v77 = swift_unknownObjectRetain(v62);
      v78 = v272;
      UICollectionViewCell.defaultBackgroundConfiguration()(v77);

      if (qword_1013DC9A0 != -1)
        swift_once(&qword_1013DC9A0, sub_10055B6D0);
      UIBackgroundConfiguration.cornerRadius.setter(*(double *)&qword_10147E808);
      v79 = objc_msgSend(v64, "collectionView");
      if (!v79)
        goto LABEL_97;
      v80 = v79;
      v81 = objc_msgSend(v79, "backgroundColor");

      UIBackgroundConfiguration.backgroundColor.setter(v81);
      v82 = v78;
      v83 = v267;
      v84 = v266;
      v85 = v268;
      (*(void (**)(char *, unint64_t, uint64_t))(v267 + 16))(v266, v82, v268);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v85);
      swift_unknownObjectRetain(v62);
      UICollectionViewCell.backgroundConfiguration.setter(v84);

      (*(void (**)(unint64_t, uint64_t))(v83 + 8))(v82, v85);
    }
    else
    {

    }
  }
  v86 = swift_allocObject(&unk_101296AE0, 32, 7);
  *(_QWORD *)(v86 + 24) = &off_101279198;
  swift_unknownObjectWeakInit(v86 + 16, v62);
  v87 = v282;
  v88 = v275;
  sub_1004B8460(v282, v275, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v89 = *(unsigned __int8 *)(v287 + 80);
  v90 = (v89 + 24) & ~v89;
  v272 = v89;
  v268 = v89 | 7;
  v91 = swift_allocObject(&unk_101296B08, v90 + v276, v89 | 7);
  *(_QWORD *)(v91 + 16) = v86;
  sub_1004B84E0(v88, v91 + v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
  objc_msgSend((id)objc_opt_self(UIScreen), "crl_screenScale");
  v93 = v92;
  sub_1004B8460(v87, (uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v94 = swift_getEnumCaseMultiPayload(v42, v285);
  if (!v94)
  {
    v269 = (void *)v91;
    v260 = v69;
    v116 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v116, v289);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v118 = sub_100BCCD38();
    v120 = v119;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v118;
    *(_QWORD *)(inited + 40) = v120;
    sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363, "Unhandled item: %@", 18, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 363, (uint64_t)"Unhandled item: %@", 18, 2u);
    swift_setDeallocating(inited);
    v121 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v121);
    v122 = (void *)objc_opt_self(UIImage);
    v123 = String._bridgeToObjectiveC()();
    v286 = (char *)objc_msgSend(v122, "systemImageNamed:", v123);

    sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v124 = 0;
    LODWORD(v284) = 0;
    LODWORD(v285) = 0;
    LODWORD(v287) = 0;
    v125 = 0;
    v126 = 0;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    v132 = 0xE000000000000000;
    v133 = 0xE000000000000000;
    goto LABEL_81;
  }
  v95 = v279;
  if (v94 != 1)
  {
    v134 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v42[*(int *)(v134 + 48) + 8]);
    v135 = (uint64_t)v42;
    v136 = v265;
    sub_1004B84E0(v135, (uint64_t)v265, type metadata accessor for CRLBoardIdentifier);
    v137 = type metadata accessor for CRLBoardLibrary();
    v138 = swift_dynamicCastClass(v95, v137);
    if (!v138)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 299, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      sub_1004B84A4((uint64_t)v136, type metadata accessor for CRLBoardIdentifier);

      swift_release(v91);
LABEL_88:

      return;
    }
    v139 = v138;
    swift_unknownObjectRetain(v95);
    v140 = v257;
    sub_100C9F8F8((uint64_t)v136, v257);
    v148 = (int *)v259;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v258 + 56))(v140, 0, 1, v259);
    v149 = v256;
    sub_1004B84E0(v140, v256, type metadata accessor for CRLBoardViewModelMetadata);
    v281 = (char *)sub_100BC1474(v149 + v148[6]);
    v133 = v150;
    v283 = v151;
    v282 = v152;
    v153 = v255;
    sub_1004CB7BC(v149 + v148[7], v255, &qword_1013F5478);
    v154 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v153, 1, v154) == 1)
    {
      v155 = sub_1004CB800(v153, &qword_1013F5478);
      v276 = 0;
      v275 = 0;
    }
    else
    {
      v156 = *(_QWORD *)(v153 + 16);
      v276 = *(_QWORD *)(v153 + 8);
      v275 = v156;
      swift_bridgeObjectRetain(v156);
      v155 = sub_1004B84A4(v153, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    v157 = *(unsigned __int8 *)(v149 + 1);
    v158 = *(_BYTE *)(v149 + v148[8]) == 1;
    v260 = v69;
    v269 = (void *)v91;
    LODWORD(v284) = v157;
    if (v158)
    {
      v159 = *(_QWORD *)(*(_QWORD *)(v139 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                       + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
      __chkstk_darwin(v155);
      v292._object = v136;
      swift_bridgeObjectRetain(v159);
      v160 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_1006F01E8, (uint64_t)&v249, v159);
      *(_QWORD *)&v161 = swift_bridgeObjectRelease(v159).n128_u64[0];
      if (v160)
      {
        v162 = *(char **)&v160[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
        if (v162)
          v162 = (char *)objc_msgSend(v162, "UIImage", v161);
        v163 = *(_QWORD *)&v62[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController];
        if (!v163)
          goto LABEL_98;
        v131 = *(void **)(v163
                        + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
        v127 = v276;
        v286 = v162;
        if (v131)
        {
          v164 = v131;
        }
        else
        {
          v164 = objc_msgSend(objc_allocWithZone((Class)SWAttributionView), "init");
          objc_msgSend(v164, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          objc_msgSend(v164, "setHorizontalAlignment:", 2);
          objc_msgSend(v164, "setBackgroundStyle:", 2);
          v131 = v164;
        }
        v184 = *(_QWORD *)&v160[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        v185 = v164;
        objc_msgSend(v185, "setHighlight:", v184);
        swift_unknownObjectRelease(v279);

        sub_1004B84A4(v256, type metadata accessor for CRLBoardViewModelMetadata);
        sub_1004B84A4((uint64_t)v136, type metadata accessor for CRLBoardIdentifier);

        LODWORD(v285) = 0;
        v125 = 0;
        v126 = 0;
        v124 = 1;
        LODWORD(v287) = 1;
        v129 = v283;
        v132 = v282;
        v130 = (uint64_t)v281;
        goto LABEL_60;
      }
      swift_unknownObjectRelease(v279);
      sub_1004B84A4(v256, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4((uint64_t)v136, type metadata accessor for CRLBoardIdentifier);
      LODWORD(v285) = 0;
      v286 = 0;
      v125 = 0;
      v126 = 0;
      v131 = 0;
      v124 = 1;
      LODWORD(v287) = 1;
    }
    else
    {
      v165 = v251;
      sub_1004B8460((uint64_t)v278 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, v251, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v166 = sub_1004B804C(&qword_1013E1790);
      v167 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 48))(v165, 5, v166);
      sub_1004B84A4(v165, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      LODWORD(v285) = v167 != 5;
      if (v167 == 5)
      {
        LODWORD(v287) = 0;
      }
      else
      {
        if (*(_BYTE *)(v149 + *(int *)(v259 + 36)))
          v168 = 2;
        else
          v168 = 0;
        LODWORD(v287) = v168;
      }
      v169 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v273, 1, 1, v169);
      v170 = (uint64_t)v265;
      v171 = v254;
      sub_1004B8460((uint64_t)v265, v254, type metadata accessor for CRLBoardIdentifier);
      type metadata accessor for MainActor(0);
      v172 = v277;
      v173 = v277;
      v286 = (char *)v261;
      swift_retain(v91);
      v278 = (id)static MainActor.shared.getter(v174);
      v175 = *(unsigned __int8 *)(v252 + 80);
      v176 = (v175 + 32) & ~v175;
      v177 = v91;
      v178 = (v253 + v176 + 7) & 0xFFFFFFFFFFFFFFF8;
      v179 = (v178 + 15) & 0xFFFFFFFFFFFFFFF8;
      v180 = (v179 + 15) & 0xFFFFFFFFFFFFFFF8;
      v181 = swift_allocObject(&unk_101296B58, v180 + 16, v175 | 7);
      *(_QWORD *)(v181 + 16) = v278;
      *(_QWORD *)(v181 + 24) = &protocol witness table for MainActor;
      sub_1004B84E0(v171, v181 + v176, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v181 + v178) = v286;
      *(_QWORD *)(v181 + v179) = v93;
      v182 = (uint64_t (**)(uint64_t))(v181 + v180);
      *v182 = sub_100BBA940;
      v182[1] = (uint64_t (*)(uint64_t))v177;
      v183 = sub_100521B98(v273, (uint64_t)&unk_1014073D0, v181);
      swift_unknownObjectRelease(v279);
      swift_release(v183);
      sub_1004B84A4(v256, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4(v170, type metadata accessor for CRLBoardIdentifier);
      v124 = 0;
      v125 = 0;
      v126 = 0;
      v131 = 0;
      v286 = v172;
    }
    v129 = v283;
    v132 = v282;
    v130 = (uint64_t)v281;
    v127 = v276;
LABEL_60:
    v128 = v275;
    goto LABEL_81;
  }
  v96 = v270;
  sub_1004B84E0((uint64_t)v42, v270, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v97 = *(_QWORD *)(v95 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain(v97);
  v98 = v262;
  sub_100BCB904();
  __chkstk_darwin(v99);
  v292._object = v98;
  sub_1007C2808(1, (uint64_t (*)(id))sub_100BBAB04, (uint64_t)&v249, v97);
  v101 = v100;
  v102 = swift_bridgeObjectRelease(v97);
  (*(void (**)(void *, uint64_t, __n128))(v263 + 8))(v98, v264, v102);
  if (!v101)
  {
    v141 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v142 = swift_initStackObject(v141, v288);
    *(_OWORD *)(v142 + 16) = xmmword_100EF5E40;
    v143 = v274;
    sub_1004B8460(v96, v274, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100BCAD68();
    v145 = v144;
    v147 = v146;
    sub_1004B84A4(v143, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(_QWORD *)(v142 + 56) = &type metadata for String;
    *(_QWORD *)(v142 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v142 + 32) = v145;
    *(_QWORD *)(v142 + 40) = v147;
    sub_100757E04(&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256, "Folder does not exist: %@", 25, 2u, v142);
    sub_1004F5394(v142, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2u, 256, (uint64_t)"Folder does not exist: %@", 25, 2u);
    swift_bridgeObjectRelease(v142);
    swift_release(v91);

    sub_1004B84A4(v96, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    return;
  }
  v103 = ~v272;
  v104 = objc_msgSend(v101, "children");
  v105 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
  v106 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v104, v105);

  v260 = v69;
  v269 = (void *)v91;
  v266 = v101;
  v267 = v103;
  if ((unint64_t)v106 >> 62)
  {
    if (v106 < 0)
      v186 = v106;
    else
      v186 = v106 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v106);
    v107 = _CocoaArrayWrapper.endIndex.getter(v186);
    swift_bridgeObjectRelease(v106);
    if (v107)
      goto LABEL_24;
  }
  else
  {
    v107 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v107)
    {
LABEL_24:
      v290 = _swiftEmptyArrayStorage;
      sub_1006008AC(0, v107 & ~(v107 >> 63), 0);
      if (v107 < 0)
      {
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      v108 = 0;
      v109 = v290;
      v110 = (v272 + 32) & v103;
      v111 = (uint64_t)v283;
      do
      {
        if ((v106 & 0xC000000000000001) != 0)
        {
          v112 = specialized _ArrayBuffer._getElementSlowPath(_:)(v108, v106);
          sub_1004B8460(v112 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v286, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v113 = v112;
          v111 = (uint64_t)v283;
          swift_unknownObjectRelease(v113);
        }
        else
        {
          sub_1004B8460(*(_QWORD *)(v106 + 8 * v108 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v286, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        v290 = v109;
        v115 = v109[2];
        v114 = v109[3];
        if (v115 >= v114 >> 1)
        {
          sub_1006008AC(v114 > 1, v115 + 1, 1);
          v111 = (uint64_t)v283;
          v109 = v290;
        }
        ++v108;
        v109[2] = v115 + 1;
        sub_1004B84E0((uint64_t)v286, (uint64_t)v109 + v110 + *(_QWORD *)(v287 + 72) * v115, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      while (v107 != v108);
      swift_bridgeObjectRelease(v106);
      goto LABEL_66;
    }
  }
  swift_bridgeObjectRelease(v106);
  v109 = _swiftEmptyArrayStorage;
  v111 = (uint64_t)v283;
LABEL_66:
  v290 = _swiftEmptyArrayStorage;
  v187 = v109[2];
  swift_bridgeObjectRetain(v109);
  v188 = (uint64_t)v281;
  if (v187)
  {
    v189 = 0;
    v286 = v281 + 8;
    v274 = (v272 + 32) & v267;
    v190 = (char *)v109 + v274;
    while (v189 < v109[2])
    {
      v191 = *(_QWORD *)(v287 + 72);
      sub_1004B8460((uint64_t)&v190[v191 * v189], v111, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(v111, v188, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v188, v285) == 2)
      {
        v192 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)&v286[*(int *)(v192 + 48)]);
        sub_1004B84A4(v188, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84E0(v111, v284, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v193 = v290;
        if ((swift_isUniquelyReferenced_nonNull_native(v290) & 1) == 0)
        {
          sub_1006008AC(0, v193[2] + 1, 1);
          v111 = (uint64_t)v283;
          v193 = v290;
        }
        v195 = v193[2];
        v194 = v193[3];
        if (v195 >= v194 >> 1)
        {
          sub_1006008AC(v194 > 1, v195 + 1, 1);
          v111 = (uint64_t)v283;
          v193 = v290;
        }
        v193[2] = v195 + 1;
        sub_1004B84E0(v284, (uint64_t)v193 + v274 + v195 * v191, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v188 = (uint64_t)v281;
      }
      else
      {
        sub_1004B84A4(v188, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v111, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      if (v187 == ++v189)
        goto LABEL_77;
    }
    __break(1u);
    goto LABEL_90;
  }
LABEL_77:
  swift_bridgeObjectRelease(v109);
  v196 = v290[2];
  swift_release(v290);
  if (v196)
  {
    v197 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v292._countAndFlagsBits = 0xD00000000000001ALL;
    v292._object = (void *)0x8000000100FFCCD0;
    v198._countAndFlagsBits = 0x72616F6220756C25;
    v198._object = (void *)0xEC00000029732864;
    v199._countAndFlagsBits = 0;
    v199._object = (void *)0xE000000000000000;
    v200 = NSLocalizedString(_:tableName:bundle:value:comment:)(v198, (Swift::String_optional)0, (NSBundle)v197, v199, v292);

    v201 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v202 = swift_allocObject(v201, 72, 7);
    *(_OWORD *)(v202 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v202 + 56) = &type metadata for Int;
    *(_QWORD *)(v202 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v202 + 32) = v196;
    v283 = (char *)static String.localizedStringWithFormat(_:_:)(v200._countAndFlagsBits, v200._object, v202);
    v281 = v203;
    swift_bridgeObjectRelease(v200._object);
    swift_bridgeObjectRelease(v202);
  }
  else
  {
    v283 = 0;
    v281 = 0;
  }
  v204 = v261;
  v205 = v268;
  v206 = v267;
  v207 = type metadata accessor for TaskPriority(0);
  v208 = v273;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 56))(v273, 1, 1, v207);
  v209 = v275;
  sub_1004B8460(v282, v275, type metadata accessor for CRLBoardLibraryViewModel.Item);
  type metadata accessor for MainActor(0);
  v210 = v277;
  v211 = v277;
  v212 = v204;
  v213 = v269;
  swift_retain(v269);
  v214 = v278;
  v215 = static MainActor.shared.getter(v214);
  v216 = (v272 + 80) & v206;
  v217 = (_QWORD *)swift_allocObject(&unk_101296B80, v216 + v276, v205);
  v217[2] = v215;
  v217[3] = &protocol witness table for MainActor;
  v217[4] = v109;
  v217[5] = v212;
  v217[6] = v214;
  v217[7] = v93;
  v217[8] = sub_100BBA940;
  v217[9] = v213;
  sub_1004B84E0(v209, (uint64_t)v217 + v216, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v218 = sub_100521B98(v208, (uint64_t)&unk_1014073D8, (uint64_t)v217);
  swift_release(v218);

  sub_1004B84A4(v270, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v124 = 0;
  LODWORD(v284) = 0;
  LODWORD(v285) = 0;
  LODWORD(v287) = 0;
  v127 = 0;
  v128 = 0;
  v129 = 0;
  v130 = 0;
  v131 = 0;
  v132 = 0xE000000000000000;
  v286 = v210;
  v133 = 0xE000000000000000;
  v125 = v283;
  v126 = v281;
LABEL_81:
  v219 = v280;
  sub_1006ED8A4(v130, v133);
  v220 = &v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText];
  v221 = *(_QWORD *)&v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText
                        + 8];
  *(_QWORD *)v220 = v129;
  *((_QWORD *)v220 + 1) = v132;
  swift_bridgeObjectRelease(v221);
  v222 = &v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName];
  v223 = *(_QWORD *)&v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName];
  v224 = *(_QWORD *)&v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName + 8];
  *(_QWORD *)v222 = v127;
  *((_QWORD *)v222 + 1) = v128;
  sub_1006ED978(v223, v224);
  swift_bridgeObjectRelease(v224);
  v225 = &v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_folderName];
  v226 = *(_QWORD *)&v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_folderName + 8];
  *(_QWORD *)v225 = v125;
  *((_QWORD *)v225 + 1) = v126;
  *(_QWORD *)&v227 = swift_bridgeObjectRelease(v226).n128_u64[0];
  v228 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
  v229 = *(_QWORD *)&v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController];
  if (!v229)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v230 = v286;
  objc_msgSend(*(id *)(v229 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "setImage:", v286, v227);
  v231 = v131;
  sub_1006EDB88(v131);
  v219[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState] = v287;
  v232 = *(void **)&v219[v228];
  if (!v232)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v233 = v219;
  v234 = v232;
  sub_100B3057C();

  v235 = v285;
  v233[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_canShowFavoriteButton] = v285;
  v236 = *(_QWORD *)&v233[v228];
  v237 = v260;
  v238 = v269;
  if (!v236)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  objc_msgSend(*(id *)(v236 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton), "setHidden:", v235 ^ 1u);
  v233[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite] = v284;
  sub_1006EDAA0();
  v233[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_dimsThumbnail] = v124;
  v239 = *(_QWORD *)&v233[v228];
  if (v239)
  {
    *(_BYTE *)(v239 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail) = v124;
    v240 = 1.0;
    if (v124)
      v240 = 0.5;
    objc_msgSend(*(id *)(v239 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "setAlpha:", v240);
    v241 = type metadata accessor for TaskPriority(0);
    v242 = v273;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v241 - 8) + 56))(v273, 1, 1, v241);
    type metadata accessor for MainActor(0);
    v243 = v233;
    v244 = v279;
    v245 = swift_unknownObjectRetain(v279);
    v246 = static MainActor.shared.getter(v245);
    v247 = (_QWORD *)swift_allocObject(&unk_101296B30, 64, 7);
    v247[2] = v246;
    v247[3] = &protocol witness table for MainActor;
    v247[4] = v243;
    v247[5] = &off_101279198;
    v247[6] = v244;
    v247[7] = v271;
    v248 = sub_100521B98(v242, (uint64_t)&unk_1014073C8, (uint64_t)v247);

    swift_release(v238);
    swift_release(v248);

    goto LABEL_88;
  }
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
}

id sub_100BB12BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  char v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id result;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v55 = a1;
  v56 = a4;
  v6 = type metadata accessor for UUID(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v55 - v10;
  v12 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v55 - v16;
  v18 = type metadata accessor for CRLBoardIdentifier(0);
  v19 = __chkstk_darwin(v18);
  v59 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v60 = (uint64_t)&v55 - v22;
  v23 = __chkstk_darwin(v21);
  v61 = (uint64_t)&v55 - v24;
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v55 - v25;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v26);
  v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1004B804C(&qword_1014073E0);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (uint64_t)&v32[*(int *)(v30 + 48)];
  sub_1004CB7BC(a2, (uint64_t)v32, (uint64_t *)&unk_1013E3830);
  sub_1004B8460(a3, v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v34 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v32, 1, v34) == 1)
    goto LABEL_16;
  sub_1004CB7BC((uint64_t)v32, (uint64_t)v28, (uint64_t *)&unk_1013E3830);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v34);
  if (!EnumCaseMultiPayload)
  {
    v40 = type metadata accessor for CRLBoardLibraryViewModel.Item;
LABEL_15:
    sub_1004B84A4((uint64_t)v28, v40);
LABEL_16:
    v52 = &qword_1014073E0;
LABEL_17:
    sub_1004CB800((uint64_t)v32, v52);
    return 0;
  }
  if (EnumCaseMultiPayload == 1)
  {
    if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
    {
      sub_1004B84E0((uint64_t)v28, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1004B84E0(v33, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCB904();
      sub_100BCB904();
      v36 = static UUID.== infix(_:_:)(v11);
      v37 = v58;
      v38 = *(void (**)(char *, uint64_t))(v57 + 8);
      v38(v9, v58);
      v38(v11, v37);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      result = (id)sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E3830);
      if ((v36 & 1) != 0)
        goto LABEL_22;
      return 0;
    }
    v40 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    goto LABEL_15;
  }
  v41 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v28[*(int *)(v41 + 48) + 8]);
  if (swift_getEnumCaseMultiPayload(v33, v34) != 2)
  {
    v40 = type metadata accessor for CRLBoardIdentifier;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v33 + *(int *)(v41 + 48) + 8));
  v42 = v62;
  sub_1004B84E0((uint64_t)v28, v62, type metadata accessor for CRLBoardIdentifier);
  v43 = v61;
  sub_1004B84E0(v33, v61, type metadata accessor for CRLBoardIdentifier);
  v44 = static UUID.== infix(_:_:)(v42);
  v45 = v60;
  sub_1004B8460(v42, v60, type metadata accessor for CRLBoardIdentifier);
  v46 = v59;
  sub_1004B8460(v43, v59, type metadata accessor for CRLBoardIdentifier);
  if ((v44 & 1) == 0)
  {
    sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
    v52 = (uint64_t *)&unk_1013E3830;
    goto LABEL_17;
  }
  v47 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v48 = *(_QWORD *)(v45 + v47);
  v49 = *(_QWORD *)(v45 + v47 + 8);
  v50 = (_QWORD *)(v46 + v47);
  v51 = v50[1];
  if (v48 == *v50 && v49 == v51)
  {
    sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
    result = (id)sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E3830);
    goto LABEL_22;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, *v50, v51, 0);
  sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
  result = (id)sub_1004CB800((uint64_t)v32, (uint64_t *)&unk_1013E3830);
  if ((v53 & 1) == 0)
    return 0;
LABEL_22:
  v54 = *(_QWORD *)(v55 + *v56);
  if (v54)
    return objc_msgSend(*(id *)(v54+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "image");
  __break(1u);
  return result;
}

void sub_100BB181C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100BB1850(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  char v6;

  if (a4)
    return 0;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  sub_1006B8360(v5, 0);
  sub_1006B8360(v4, 0);
  v6 = static NSObject.== infix(_:_:)(v5, v4);
  sub_1006B8384(v4, 0);
  sub_1006B8384(v5, 0);
  return v6 & 1;
}

_QWORD *sub_100BB19EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v29;
  _QWORD v31[2];
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v38 = a2;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v33 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v39 = *(_QWORD *)(v37 - 8);
  v6 = __chkstk_darwin(v37);
  v36 = (uint64_t)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (uint64_t)v31 - v8;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v13);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v31[0] = a1;
    v31[1] = v2;
    v17 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    v34 = *(_QWORD *)(v10 + 72);
    v35 = v18;
    v19 = swift_bridgeObjectRetain(a1);
    v40 = _swiftEmptyArrayStorage;
    v20 = (uint64_t)v33;
    do
    {
      v35(v15, v17, v9, v19);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v15, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
      {
        a1 = v31[0];
        goto LABEL_15;
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      v22 = sub_100B787A8();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v12, v23);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v20, 1, v37) == 1)
      {
        sub_1004CB800(v20, (uint64_t *)&unk_1013E3830);
      }
      else
      {
        v24 = v32;
        sub_1004B84E0(v20, v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84E0(v24, v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
          v40 = (_QWORD *)sub_100D0FAA0(0, v40[2] + 1, 1, (unint64_t)v40);
        v26 = v40[2];
        v25 = v40[3];
        if (v26 >= v25 >> 1)
          v40 = (_QWORD *)sub_100D0FAA0(v25 > 1, v26 + 1, 1, (unint64_t)v40);
        v27 = v40;
        v40[2] = v26 + 1;
        sub_1004B84E0(v36, (uint64_t)v27+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v20 = (uint64_t)v33;
      }
      v17 += v34;
      --v16;
    }
    while (v16);
    a1 = v31[0];
    v21(v15, 1, 1, v9, v19);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
    v29 = swift_bridgeObjectRetain(a1);
    v40 = _swiftEmptyArrayStorage;
    v28(v15, 1, 1, v9, v29);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return v40;
}

_QWORD *sub_100BB1D64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  __int128 v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[72];
  char v72[16];
  uint64_t v73;

  v60 = a2;
  v53 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v53);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Date(0);
  v67 = *(_QWORD *)(v63 - 8);
  v13 = __chkstk_darwin(v63);
  v59 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v54 = (char *)&v52 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return _swiftEmptyArrayStorage;
  v17 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v66 = v7;
  v58 = v7 + 8;
  v65 = *(_QWORD *)(v5 + 72);
  v52 = a1;
  swift_bridgeObjectRetain(a1);
  v18 = _swiftEmptyArrayStorage;
  v56 = xmmword_100EF5E40;
  v55 = (unint64_t)"rrentFocusedBoard %{public}@";
  v19 = (uint64_t)v62;
  v61 = v12;
  v20 = v63;
  v57 = v4;
  do
  {
    v21 = (uint64_t)v66;
    sub_1004B8460(v17, (uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v21, v68) != 2)
    {
      sub_1004B84A4(v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v12, 1, 1, v20);
LABEL_4:
      sub_1004CB800((uint64_t)v12, &qword_1013E04F0);
      goto LABEL_5;
    }
    v22 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v58[*(int *)(v22 + 48)]);
    sub_1004B84E0(v21, v19, type metadata accessor for CRLBoardIdentifier);
    v23 = v73;
    sub_100C9F8F8(v19, (uint64_t)v4);
    v73 = v23;
    v64 = v18;
    if (v23)
    {
      if (qword_1013DD740 != -1)
        swift_once(&qword_1013DD740, sub_100A02288);
      swift_beginAccess(&static OS_os_log.crlFolderUI, v72, 0, 0);
      v24 = (void *)static OS_os_log.crlFolderUI;
      v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v25, v71);
      *(_OWORD *)(inited + 16) = v56;
      v27 = (uint64_t *)(v19 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v28 = *v27;
      v29 = (void *)v27[1];
      v30 = (void *)(v55 | 0x8000000000000000);
      if (*v27 || (v31 = 0xD000000000000012, v29 != (void *)0xE000000000000000))
      {
        v31 = 0xD000000000000012;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, 0, 0xE000000000000000, 0) & 1) == 0)
        {
          swift_bridgeObjectRetain(v29);
          v31 = v28;
          v30 = v29;
        }
      }
      v32 = v24;
      v19 = (uint64_t)v62;
      v69 = UUID.uuidString.getter(v32);
      v70 = v33;
      v34._countAndFlagsBits = 15418;
      v34._object = (void *)0xE200000000000000;
      String.append(_:)(v34);
      v35._countAndFlagsBits = v31;
      v35._object = v30;
      String.append(_:)(v35);
      swift_bridgeObjectRelease(v30);
      v36._countAndFlagsBits = 62;
      v36._object = (void *)0xE100000000000000;
      String.append(_:)(v36);
      v37 = v69;
      v38 = v70;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v39 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v39;
      *(_QWORD *)(inited + 32) = v37;
      *(_QWORD *)(inited + 40) = v38;
      v40 = static os_log_type_t.error.getter(v39);
      sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v40, "Tried to check activityTime for board %@, but could not retrieve metadata for that board.", 89, 2, inited);
      swift_setDeallocating(inited);
      v41 = sub_1004B804C(&qword_1013E0190);
      v42 = 1;
      swift_arrayDestroy(inited + 32, 1, v41);

      swift_errorRelease(v73);
      sub_1004B84A4(v19, type metadata accessor for CRLBoardIdentifier);
      v73 = 0;
      v4 = v57;
      v12 = v61;
      v20 = v63;
      v43 = v67;
    }
    else
    {
      sub_1004B84A4(v19, type metadata accessor for CRLBoardIdentifier);
      v43 = v67;
      v20 = v63;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v12, &v4[*(int *)(v53 + 24)], v63);
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardViewModelMetadata);
      v42 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v12, v42, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v12, 1, v20) == 1)
    {
      v18 = v64;
      goto LABEL_4;
    }
    v44 = v43;
    v45 = v20;
    v46 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v47 = v54;
    v46(v54, v12, v45);
    v46(v59, v47, v45);
    v18 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
      v18 = (_QWORD *)sub_100D117CC(0, v18[2] + 1, 1, (unint64_t)v18);
    v49 = v18[2];
    v48 = v18[3];
    if (v49 >= v48 >> 1)
      v18 = (_QWORD *)sub_100D117CC(v48 > 1, v49 + 1, 1, (unint64_t)v18);
    v18[2] = v49 + 1;
    v50 = v63;
    v46((char *)v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v49, v59, v63);
    v20 = v50;
    v19 = (uint64_t)v62;
    v12 = v61;
LABEL_5:
    v17 += v65;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease(v52);
  return v18;
}

void sub_100BB23B4(uint64_t a1, void *a2)
{
  void *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  id v34;
  id v35;
  NSString v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  _QWORD aBlock[5];
  uint64_t v60;
  _QWORD v61[3];
  char v62[8];
  char v63[152];
  _QWORD v64[3];
  char v65[8];
  char v66[80];

  v58 = (id)_convertErrorToNSError(_:)(a1);
  if (objc_msgSend(v58, "code") == (id)3072)
  {

  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    v4 = (void *)static OS_os_log.default.getter();
    v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v57 = a2;
    inited = swift_initStackObject(v55, v66);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(a1, v65, v64);
    v6 = Error.localizedDescription.getter(v64[1], v64[2]);
    v8 = v7;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v53 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v53;
    *(_QWORD *)(inited + 32) = v6;
    *(_QWORD *)(inited + 40) = v8;
    v10 = static os_log_type_t.default.getter(v9);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v10, "Sharing failed with error: %@", 29, 2, inited);
    swift_setDeallocating(inited);
    v56 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v56);

    v54 = (id)objc_opt_self(NSBundle);
    v11 = objc_msgSend(v54, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v18 = objc_msgSend(v54, "mainBundle");
    v19 = String._bridgeToObjectiveC()();
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

    v24 = (void *)static OS_os_log.default.getter();
    v25 = swift_initStackObject(v55, v63);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5550;
    *(_QWORD *)(v25 + 32) = v15;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = v53;
    *(_QWORD *)(v25 + 40) = v17;
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v53;
    *(_QWORD *)(v25 + 72) = v52;
    *(_QWORD *)(v25 + 80) = v23;
    swift_getErrorValue(a1, v62, v61);
    v26 = v61[1];
    v27 = v61[2];
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v23);
    v28 = Error.localizedDescription.getter(v26, v27);
    *(_QWORD *)(v25 + 136) = &type metadata for String;
    *(_QWORD *)(v25 + 144) = v53;
    *(_QWORD *)(v25 + 112) = v28;
    *(_QWORD *)(v25 + 120) = v29;
    v31 = static os_log_type_t.default.getter(v30);
    sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v31, "Alert: %@ %@ With error: %@", 27, 2, v25);
    swift_setDeallocating(v25);
    swift_arrayDestroy(v25 + 32, 3, v56);

    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

    v35 = objc_msgSend(v54, "mainBundle");
    v36 = String._bridgeToObjectiveC()();
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, v37, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = v39;

    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v41, 0, 0);

    objc_msgSend(v34, "addAction:", v42);
    v43 = objc_msgSend(v57, "presentedViewController");
    if (v43
      && (v44 = v43,
          v45 = objc_opt_self(_SWCollaborationDetailViewController),
          v46 = swift_dynamicCastObjCClass(v44, v45),
          v44,
          v46))
    {
      v47 = swift_allocObject(&unk_101296400, 32, 7);
      *(_QWORD *)(v47 + 16) = v57;
      *(_QWORD *)(v47 + 24) = v34;
      aBlock[4] = sub_100BB29E4;
      v60 = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101296418;
      v48 = _Block_copy(aBlock);
      v49 = v60;
      v50 = v57;
      v51 = v34;
      objc_msgSend(v50, "dismissViewControllerAnimated:completion:", 1, v48, swift_release(v49).n128_f64[0]);

      _Block_release(v48);
    }
    else
    {
      objc_msgSend(v57, "presentViewController:animated:completion:", v34, 1, 0);

    }
  }
}

uint64_t sub_100BB29B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100BB29E4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "presentViewController:animated:completion:", *(_QWORD *)(v0 + 24), 1, 0);
}

double sub_100BB29FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BB2A0C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100BB2A14()
{
  return sub_100B7E16C(1);
}

uint64_t sub_100BB2A38()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BB2A5C()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release, 56);
}

uint64_t sub_100BB2A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_10140729C);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1004CFD00;
  *(_QWORD *)(v5 + 400) = v4;
  *(_OWORD *)(v5 + 384) = v6;
  *(_QWORD *)(v5 + 376) = a1;
  return swift_task_switch(sub_100B9B210, 0, 0);
}

void sub_100BB2AE8()
{
  uint64_t v0;

  sub_100B790E0(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_100BB2AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v5 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v5);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  __chkstk_darwin(v7);
  v43 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v13 = __chkstk_darwin(v12);
  v42 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  v20 = (char *)&v39 - v19;
  result = _swiftEmptyArrayStorage;
  v53 = _swiftEmptyArrayStorage;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v50 = v18;
    v51 = v17;
    v52 = v2;
    v46 = v17 + 8;
    v47 = v11;
    v23 = *(_QWORD *)(v16 + 72);
    v40 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v24 = a1 + v40;
    v25 = type metadata accessor for CRLBoardIdentifier;
    v41 = a2;
    v26 = (uint64_t)v44;
    v45 = v23;
    while (1)
    {
      v27 = v25;
      sub_1004B8460(v24, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v28 = v51;
      sub_1004B8460((uint64_t)v20, v51, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v28, v50) != 2)
        break;
      v29 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)(v46 + *(int *)(v29 + 48)));
      v30 = v28;
      v31 = (uint64_t)v47;
      sub_1004B84E0(v30, (uint64_t)v47, v25);
      v32 = v52;
      sub_100C9F8F8(v31, v26);
      if (!v32)
      {
        v52 = 0;
        sub_1004B84A4(v31, v25);
        v33 = v49;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v26, 0, 1, v49);
        v34 = v43;
        sub_1004B84E0(v26, v43, type metadata accessor for CRLBoardViewModelMetadata);
        v35 = *(_BYTE *)(v34 + *(int *)(v33 + 32));
        sub_1004B84A4(v34, type metadata accessor for CRLBoardViewModelMetadata);
        if ((v35 & 1) != 0)
        {
          sub_1004B84E0((uint64_t)v20, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v36 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native(v53) & 1) == 0)
          {
            sub_1006008AC(0, v36[2] + 1, 1);
            v36 = v53;
          }
          v23 = v45;
          v25 = v27;
          v38 = v36[2];
          v37 = v36[3];
          if (v38 >= v37 >> 1)
          {
            sub_1006008AC(v37 > 1, v38 + 1, 1);
            v36 = v53;
          }
          v36[2] = v38 + 1;
          sub_1004B84E0(v42, (uint64_t)v36 + v40 + v38 * v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v26 = (uint64_t)v44;
          goto LABEL_9;
        }
        v26 = (uint64_t)v44;
        v23 = v45;
        goto LABEL_7;
      }
      swift_errorRelease(v32);
      sub_1004B84A4(v31, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v26, 1, 1, v49);
      sub_1004CB800(v26, &qword_1013E4690);
      v52 = 0;
      v23 = v45;
LABEL_8:
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_9:
      v24 += v23;
      if (!--v22)
        return v53;
    }
    sub_1004B84A4(v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_7:
    v25 = v27;
    goto LABEL_8;
  }
  return result;
}

_QWORD *sub_100BB2ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v37 = a2;
  v3 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  __chkstk_darwin(v6);
  v32 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v11 = __chkstk_darwin(v41);
  v43 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v32 - v14;
  __chkstk_darwin(v13);
  v18 = (char *)&v32 - v17;
  result = _swiftEmptyArrayStorage;
  v44 = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v33 = v15 + 8;
    v34 = v10;
    v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v40 = *(_QWORD *)(v16 + 72);
    v38 = v21;
    v22 = a1 + v21;
    v39 = v5;
    while (1)
    {
      sub_1004B8460(v22, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460((uint64_t)v18, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v15, v41) != 2)
        break;
      v23 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v33[*(int *)(v23 + 48)]);
      v24 = (uint64_t)v34;
      sub_1004B84E0((uint64_t)v15, (uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
      v25 = v42;
      sub_100C9F8F8(v24, (uint64_t)v5);
      if (v25)
      {
        swift_errorRelease(v25);
        sub_1004B84A4(v24, type metadata accessor for CRLBoardIdentifier);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v5, 1, 1, v36);
        sub_1004CB800((uint64_t)v5, &qword_1013E4690);
        v42 = 0;
LABEL_7:
        v26 = v40;
        sub_1004B84E0((uint64_t)v18, v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v27 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0)
        {
          sub_1006008AC(0, v27[2] + 1, 1);
          v27 = v44;
        }
        v29 = v27[2];
        v28 = v27[3];
        if (v29 >= v28 >> 1)
        {
          sub_1006008AC(v28 > 1, v29 + 1, 1);
          v27 = v44;
        }
        v27[2] = v29 + 1;
        sub_1004B84E0(v43, (uint64_t)v27 + v38 + v29 * v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v5 = v39;
        goto LABEL_12;
      }
      v42 = 0;
      sub_1004B84A4(v24, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v5, 0, 1, v36);
      v30 = v32;
      sub_1004B84E0((uint64_t)v5, (uint64_t)v32, type metadata accessor for CRLBoardViewModelMetadata);
      v31 = *v30;
      sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardViewModelMetadata);
      if ((v31 & 1) == 0)
        goto LABEL_7;
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v26 = v40;
LABEL_12:
      v22 += v26;
      if (!--v20)
        return v44;
    }
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_7;
  }
  return result;
}

double *sub_100BB3270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  unint64_t v21;
  double *v22;

  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v19 - v10;
  result = _swiftEmptyArrayStorage;
  v22 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v19[1] = v2;
    v14 = *(_QWORD *)(v9 + 72);
    v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v21;
    v16 = _swiftEmptyArrayStorage;
    v20 = a2;
    do
    {
      sub_1004B8460(v15, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((sub_10062325C((uint64_t)v11, a2) & 1) != 0)
      {
        sub_1004B84E0((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          sub_1006008AC(0, *((_QWORD *)v16 + 2) + 1, 1);
        v16 = v22;
        v18 = *((_QWORD *)v22 + 2);
        v17 = *((_QWORD *)v22 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_1006008AC(v17 > 1, v18 + 1, 1);
          v16 = v22;
        }
        *((_QWORD *)v16 + 2) = v18 + 1;
        sub_1004B84E0((uint64_t)v7, (uint64_t)v16 + v21 + v18 * v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
        a2 = v20;
      }
      else
      {
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v22;
  }
  return result;
}

_QWORD *sub_100BB342C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[10];
  _QWORD *v71;

  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v56 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v67 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v54 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v54 - v14;
  v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v17 = __chkstk_darwin(v16);
  v57 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  __chkstk_darwin(v19);
  v60 = (uint64_t)&v54 - v22;
  result = _swiftEmptyArrayStorage;
  v71 = _swiftEmptyArrayStorage;
  v63 = *(_QWORD *)(a1 + 16);
  if (v63)
  {
    v54 = v2;
    v24 = 0;
    v61 = v21 + 8;
    v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v64 = *(_QWORD *)(v20 + 72);
    v55 = v25;
    v62 = a1 + v25;
    v68 = a2;
    v69 = a2 + 56;
    v26 = v21;
    v27 = v60;
    v58 = v16;
    v59 = v21;
    while (1)
    {
      v66 = v24;
      sub_1004B8460(v62 + v64 * v24, v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(v27, v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v26, v16) != 2)
      {
        sub_1004B84A4(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_4:
        sub_1004B84A4(v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_5;
      }
      v28 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)(v61 + *(int *)(v28 + 48)));
      sub_1004B84E0(v26, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      if (!*(_QWORD *)(a2 + 16))
      {
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_4;
      }
      Hasher.init(_seed:)(v70, *(_QWORD *)(a2 + 40));
      v29 = type metadata accessor for UUID(0);
      v30 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v70, v29, v30);
      v65 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v31 = &v15[*(int *)(v65 + 20)];
      v33 = *(_QWORD *)v31;
      v32 = *((_QWORD *)v31 + 1);
      swift_bridgeObjectRetain(v32);
      String.hash(into:)(v70, v33, v32);
      swift_bridgeObjectRelease(v32);
      v34 = Hasher._finalize()();
      v35 = -1 << *(_BYTE *)(a2 + 32);
      v36 = v34 & ~v35;
      if (((*(_QWORD *)(v69 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
      {
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
LABEL_22:
        v16 = v58;
        v26 = v59;
        v27 = v60;
        goto LABEL_4;
      }
      v37 = ~v35;
      v38 = *(_QWORD *)(v56 + 72);
      while (1)
      {
        sub_1004B8460(*(_QWORD *)(v68 + 48) + v38 * v36, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        v39 = static UUID.== infix(_:_:)(v13);
        sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
        v40 = v15;
        v41 = (uint64_t)v15;
        v42 = (uint64_t)v10;
        v43 = v67;
        sub_1004B8460(v41, v67, type metadata accessor for CRLBoardIdentifier);
        if ((v39 & 1) == 0)
        {
          sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          v10 = (char *)v42;
          v15 = v40;
          goto LABEL_11;
        }
        v44 = *(int *)(v65 + 20);
        v45 = *(_QWORD *)(v42 + v44);
        v46 = *(_QWORD *)(v42 + v44 + 8);
        v47 = (_QWORD *)(v43 + v44);
        v48 = v47[1];
        if (v45 == *v47 && v46 == v48)
          break;
        v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, *v47, v48, 0);
        sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        v10 = (char *)v42;
        v15 = v40;
        if ((v50 & 1) != 0)
          goto LABEL_24;
LABEL_11:
        v36 = (v36 + 1) & v37;
        if (((*(_QWORD *)(v69 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
          a2 = v68;
          goto LABEL_22;
        }
      }
      sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v42, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      v10 = (char *)v42;
      v15 = v40;
LABEL_24:
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84E0(v60, v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v51 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) == 0)
      {
        sub_1006008AC(0, v51[2] + 1, 1);
        v51 = v71;
      }
      a2 = v68;
      v53 = v51[2];
      v52 = v51[3];
      v26 = v59;
      if (v53 >= v52 >> 1)
      {
        sub_1006008AC(v52 > 1, v53 + 1, 1);
        v26 = v59;
        v51 = v71;
      }
      v51[2] = v53 + 1;
      sub_1004B84E0(v57, (uint64_t)v51 + v55 + v53 * v64, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v16 = v58;
      v27 = v60;
LABEL_5:
      v24 = v66 + 1;
      if (v66 + 1 == v63)
        return v71;
    }
  }
  return result;
}

double *sub_100BB39B0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double *result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double *v22;
  double *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  double *v36;

  v33 = a2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v32 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v34);
  v31 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - v14;
  result = _swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v30 = v11 + 8;
    v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v35 = *(_QWORD *)(v13 + 72);
    v26 = v3;
    v27 = v18;
    v19 = a1 + v18;
    v29 = _swiftEmptyArrayStorage;
    v28 = a3;
    while (1)
    {
      sub_1004B8460(v19, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v11, v34) == 2)
      {
        sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease();
        v20 = v32;
        sub_1004B84E0((uint64_t)v11, v32, type metadata accessor for CRLBoardIdentifier);
        v21 = v33(v20);
        sub_1004B84A4(v20, type metadata accessor for CRLBoardIdentifier);
        if ((v21 & 1) != 0)
        {
          sub_1004B84E0((uint64_t)v15, v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v22 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            sub_1006008AC(0, *((_QWORD *)v22 + 2) + 1, 1);
          v23 = v36;
          v25 = *((_QWORD *)v36 + 2);
          v24 = *((_QWORD *)v36 + 3);
          if (v25 >= v24 >> 1)
          {
            sub_1006008AC(v24 > 1, v25 + 1, 1);
            v23 = v36;
          }
          *((_QWORD *)v23 + 2) = v25 + 1;
          v29 = v23;
          sub_1004B84E0(v31, (uint64_t)v23 + v27 + v25 * v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:
      v19 += v35;
      if (!--v17)
        return v36;
    }
  }
  return result;
}

void sub_100BB3C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v26 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v25 = (unint64_t)(v14 + 63) >> 6;
  v28 = a1;
  swift_bridgeObjectRetain(a1);
  v17 = 0;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v17 >= v25)
      goto LABEL_27;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    if (!v21)
      break;
LABEL_18:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    sub_1004B8460(*(_QWORD *)(v28 + 48) + *(_QWORD *)(v26 + 72) * v19, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    sub_100C9F8F8((uint64_t)v9, (uint64_t)v6);
    if (v2)
    {
      swift_errorRelease(v2);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
LABEL_27:
      swift_release(v28);
      return;
    }
    v23 = v6[1];
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    if ((v23 & 1) == 0)
      goto LABEL_27;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v25)
    goto LABEL_27;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 2;
  if (v17 + 2 >= v25)
    goto LABEL_27;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 3;
  if (v17 + 3 >= v25)
    goto LABEL_27;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 4;
  if (v17 + 4 >= v25)
    goto LABEL_27;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
LABEL_17:
    v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v25)
      goto LABEL_27;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100BB3F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  int v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;

  v86 = a6;
  v109 = a5;
  v107 = a4;
  v84 = a1;
  v102 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v8 = __chkstk_darwin(v102);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v91 = (uint64_t)&v82 - v11;
  v12 = sub_1004B804C(&qword_1013E04F0);
  v13 = __chkstk_darwin(v12);
  v88 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v82 - v15;
  v103 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v103 - 8);
  v18 = __chkstk_darwin(v103);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v101 = (char *)&v82 - v21;
  v22 = type metadata accessor for CRLBoardIdentifier(0);
  v23 = __chkstk_darwin(v22);
  v115 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v82 - v25;
  v98 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v27 = __chkstk_darwin(v98);
  v99 = (uint64_t)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v30 = __chkstk_darwin(v29);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v82 - v32;
  result = __chkstk_darwin(v31);
  v83 = a2;
  if (a3 != a2)
  {
    v112 = (uint64_t)&v82 - v36;
    v113 = v33;
    v110 = v26;
    v108 = v17;
    v87 = v10;
    v39 = *(_QWORD *)(v35 + 72);
    v92 = v38 + 8;
    v93 = v37;
    v89 = v37 + 8;
    v40 = v39 * (a3 - 1);
    v95 = v39;
    v114 = v39 * a3;
    v94 = v38;
    v90 = v16;
    v85 = v20;
LABEL_7:
    v41 = 0;
    v42 = v84;
    v96 = a3;
    v97 = v40;
    while (1)
    {
      v106 = v42;
      v43 = a3;
      v44 = *v107;
      v105 = v114 + v41;
      v45 = v112;
      sub_1004B8460(v114 + v41 + v44, v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v104 = v40 + v41;
      v46 = (uint64_t)v113;
      sub_1004B8460(v40 + v41 + v44, (uint64_t)v113, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v47 = v40;
      v48 = v94;
      sub_1004B8460(v45, v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v49 = v98;
      if (swift_getEnumCaseMultiPayload(v48, v98) != 2)
        break;
      v100 = v41;
      v50 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)(v92 + *(int *)(v50 + 48)));
      v51 = (uint64_t)v110;
      sub_1004B84E0(v48, (uint64_t)v110, type metadata accessor for CRLBoardIdentifier);
      v52 = v93;
      sub_1004B8460(v46, v93, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v52, v49) != 2)
      {
        sub_1004B84A4(v51, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
        a3 = v43;
        goto LABEL_24;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(v89 + *(int *)(v50 + 48)));
      sub_1004B84E0(v52, v115, type metadata accessor for CRLBoardIdentifier);
      v53 = v91;
      v54 = v111;
      sub_100C9F8F8(v51, v91);
      if (v54)
      {
        swift_errorRelease(v54);
        v58 = (uint64_t)v90;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v90, 1, 1, v103);
        v111 = 0;
        a3 = v43;
        goto LABEL_23;
      }
      v55 = v103;
      v56 = (_QWORD *)v108;
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
      v58 = (uint64_t)v90;
      v57(v90, v53 + *(int *)(v102 + 24), v103);
      sub_1004B84A4(v53, type metadata accessor for CRLBoardViewModelMetadata);
      v59 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v56[7];
      v59(v58, 0, 1, v55);
      v60 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v56[6];
      if (v60(v58, 1, v55) == 1)
      {
        v111 = 0;
        a3 = v96;
        v51 = (uint64_t)v110;
LABEL_23:
        sub_1004B84A4(v115, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v51, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v58, &qword_1013E04F0);
LABEL_24:
        v45 = v112;
        v46 = (uint64_t)v113;
        v40 = v97;
LABEL_5:
        sub_1004B84A4(v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
        result = sub_1004B84A4(v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_6;
      }
      v61 = (void (*)(char *, uint64_t, uint64_t))v56[4];
      v61(v101, v58, v55);
      v62 = (uint64_t)v87;
      sub_100C9F8F8(v115, (uint64_t)v87);
      v63 = (uint64_t)v88;
      v57(v88, v62 + *(int *)(v102 + 24), v55);
      sub_1004B84A4(v62, type metadata accessor for CRLBoardViewModelMetadata);
      v59(v63, 0, 1, v55);
      v64 = v60(v63, 1, v55);
      v65 = v55;
      v111 = 0;
      if (v64 == 1)
      {
        a3 = v96;
        v80 = (uint64_t)v110;
        v46 = (uint64_t)v113;
        v45 = v112;
        v81 = v97;
        (*(void (**)(char *, uint64_t))(v108 + 8))(v101, v65);
        sub_1004B84A4(v115, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v80, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v63, &qword_1013E04F0);
        v40 = v81;
        goto LABEL_5;
      }
      v66 = v85;
      v61(v85, v63, v55);
      v67 = v96;
      v68 = v108;
      v69 = (uint64_t)v113;
      if ((v86 & 1) != 0)
      {
        v70 = v101;
        v71 = v101;
        v72 = v66;
      }
      else
      {
        v71 = v66;
        v70 = v101;
        v72 = v101;
      }
      v73 = static Date.< infix(_:_:)(v71, v72);
      v74 = *(void (**)(char *, uint64_t))(v68 + 8);
      v75 = v103;
      v74(v66, v103);
      v74(v70, v75);
      sub_1004B84A4(v115, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v110, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
      result = sub_1004B84A4(v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((v73 & 1) == 0)
      {
        v40 = v97;
        a3 = v67;
LABEL_6:
        ++a3;
        v40 += v95;
        v114 += v95;
        if (a3 == v83)
          return result;
        goto LABEL_7;
      }
      v76 = *v107;
      v40 = v97;
      if (!*v107)
      {
        __break(1u);
        return result;
      }
      a3 = v67;
      v77 = v100;
      v78 = v76 + v114 + v100;
      v79 = v76 + v97 + v100;
      sub_1004B84E0(v78, v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_arrayInitWithTakeFrontToBack(v78, v79, 1, v98);
      result = sub_1004B84E0(v99, v79, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v41 = v77 - v95;
      v42 = v106 + 1;
      if (v67 == v106 + 1)
        goto LABEL_6;
    }
    sub_1004B84A4(v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
    a3 = v43;
    v40 = v47;
    goto LABEL_5;
  }
  return result;
}

void sub_100BB476C(uint64_t *a1, void *a2, int a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::Int v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  _QWORD *v79;
  int64_t v80;
  char *v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  _QWORD *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  int v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  unint64_t v125;
  int64_t v126;
  int64_t v127;
  uint64_t v128;
  unint64_t v129;
  int64_t v130;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  char *v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  char v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  unint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  unint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  void (*v195)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  int64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  _QWORD *v211;
  void (*v212)(uint64_t, uint64_t, uint64_t);
  uint64_t v213;
  void (*v214)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v215)(uint64_t, uint64_t, uint64_t);
  void (*v216)(char *, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  char *v220;
  uint64_t v221;
  _QWORD *v222;
  char *v223;
  char *v224;
  char *v225;
  char v226;
  char *v227;
  char v228;
  void (*v229)(char *, uint64_t);
  uint64_t v230;
  int64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  char *v246;
  unint64_t v247;
  _QWORD *v248;
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  void (*v251)(char *, char *, uint64_t);
  void (*v252)(char *, char *, uint64_t);
  void (*v253)(char *, char *, uint64_t);
  uint64_t v254;
  char *v255;
  _QWORD *v256;
  char *v257;
  Swift::Int v258;
  char *v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  void (*v273)(char *, uint64_t, uint64_t);
  uint64_t v274;
  int64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  char *v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  void (*v286)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  int v290;
  _QWORD *v291;
  char *v292;
  uint64_t v293;
  unint64_t v294;
  unint64_t v295;
  int64_t v296;
  int64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t *v307;
  void (*v308)(char *, char *, uint64_t);
  unint64_t v309;

  v4 = v3;
  v290 = a3;
  v300 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v7 = __chkstk_darwin(v300);
  v9 = (char *)&v254 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v283 = (uint64_t)&v254 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v254 - v13;
  __chkstk_darwin(v12);
  v266 = (uint64_t)&v254 - v15;
  v16 = sub_1004B804C(&qword_1013E04F0);
  v17 = __chkstk_darwin(v16);
  v281 = (char *)&v254 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v285 = (char *)&v254 - v20;
  v21 = __chkstk_darwin(v19);
  v260 = (char *)&v254 - v22;
  __chkstk_darwin(v21);
  v265 = (char *)&v254 - v23;
  v288 = type metadata accessor for Date(0);
  v24 = *(_QWORD **)(v288 - 8);
  v25 = __chkstk_darwin(v288);
  v279 = (char *)&v254 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v298 = (char *)&v254 - v28;
  v29 = __chkstk_darwin(v27);
  v257 = (char *)&v254 - v30;
  __chkstk_darwin(v29);
  v261 = (char *)&v254 - v31;
  v32 = type metadata accessor for CRLBoardIdentifier(0);
  v33 = __chkstk_darwin(v32);
  v309 = (unint64_t)&v254 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v301 = (uint64_t)&v254 - v36;
  v37 = __chkstk_darwin(v35);
  v268 = (uint64_t)&v254 - v38;
  __chkstk_darwin(v37);
  v272 = (uint64_t)&v254 - v39;
  v40 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v278 = *(_QWORD *)(v40 - 8);
  v41 = __chkstk_darwin(v40);
  v274 = (uint64_t)&v254 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v293 = (uint64_t)&v254 - v44;
  v45 = __chkstk_darwin(v43);
  v287 = (uint64_t)&v254 - v46;
  v47 = __chkstk_darwin(v45);
  v49 = (char *)&v254 - v48;
  v50 = __chkstk_darwin(v47);
  v302 = (uint64_t)&v254 - v51;
  v52 = __chkstk_darwin(v50);
  v303 = (uint64_t)&v254 - v53;
  v54 = __chkstk_darwin(v52);
  v270 = (uint64_t)&v254 - v55;
  v56 = __chkstk_darwin(v54);
  v271 = (char *)&v254 - v57;
  v58 = __chkstk_darwin(v56);
  v60 = (char *)&v254 - v59;
  v61 = __chkstk_darwin(v58);
  v276 = (uint64_t)&v254 - v62;
  v63 = __chkstk_darwin(v61);
  v264 = (uint64_t)&v254 - v64;
  __chkstk_darwin(v63);
  v263 = (uint64_t)&v254 - v65;
  v307 = a1;
  v66 = a1[1];
  v308 = a2;
  v67 = _minimumMergeRunLength(_:)(v66);
  v68 = v66;
  if (v67 >= v66)
  {
    if (v66 < 0)
      goto LABEL_184;
    if (v66)
    {
      v76 = v308;
      v77 = v68;
      v78 = v308;
      sub_100BB3F28(0, v77, 1, v307, (uint64_t)v78, v290 & 1);

    }
    else
    {
      v76 = v308;

    }
    goto LABEL_162;
  }
  v258 = v67;
  if (v66 >= 0)
    v69 = v66;
  else
    v69 = v66 + 1;
  if (v66 < -1)
    goto LABEL_192;
  v280 = v9;
  v255 = v14;
  v70 = v270;
  v269 = v60;
  v71 = v24;
  if (v68 < 2)
  {
    v79 = _swiftEmptyArrayStorage;
    v277 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v278 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v278 + 80));
    if (v68 != 1)
    {
      v134 = _swiftEmptyArrayStorage[2];
      v81 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_146;
    }
    v72 = 1;
    v256 = _swiftEmptyArrayStorage;
  }
  else
  {
    v72 = v68;
    v73 = v69 >> 1;
    v74 = static Array._allocateBufferUninitialized(minimumCapacity:)(v69 >> 1, v40);
    *(_QWORD *)(v74 + 16) = v73;
    v75 = *(unsigned __int8 *)(v278 + 80);
    v256 = (_QWORD *)v74;
    v277 = v74 + ((v75 + 32) & ~v75);
  }
  v80 = 0;
  v267 = v271 + 8;
  v262 = v70 + 8;
  v284 = v49 + 8;
  v282 = v287 + 8;
  v81 = (char *)_swiftEmptyArrayStorage;
  v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  v291 = v71;
  v292 = v49;
  v305 = v40;
  v83 = v72;
  do
  {
    v275 = v80;
    v297 = v83;
    if (v80 + 1 >= v83)
    {
      v91 = v80 + 1;
      v122 = (uint64_t)v285;
      goto LABEL_55;
    }
    v84 = v80;
    v85 = *v307;
    v86 = *(_QWORD *)(v278 + 72);
    v299 = v80 + 1;
    v87 = v82;
    v88 = v263;
    sub_1004B8460(v85 + v86 * (v80 + 1), v263, v87);
    v289 = v85;
    v306 = v86;
    v89 = v85 + v86 * v84;
    v90 = v264;
    sub_1004B8460(v89, v264, v87);
    LODWORD(v296) = sub_100B773E4(v88, v90, v308, v290 & 1);
    if (v4)
    {
      sub_1004B84A4(v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4(v88, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_160;
    }
    sub_1004B84A4(v90, v87);
    sub_1004B84A4(v88, v87);
    v91 = v84 + 2;
    v83 = v297;
    if (v84 + 2 >= v297)
    {
      v82 = v87;
      v80 = v84;
      goto LABEL_41;
    }
    v259 = v81;
    v304 = 0;
    v92 = v289;
    v294 = v306 * v91;
    v295 = v306 * v299;
    v93 = (uint64_t)v271;
    v94 = (uint64_t)v269;
    while (1)
    {
      v299 = v91;
      v95 = v276;
      sub_1004B8460(v92 + v294, v276, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(v92 + v295, v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(v95, v93, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v96 = v305;
      if (swift_getEnumCaseMultiPayload(v93, v305) != 2)
      {
        sub_1004B84A4(v93, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v103 = 0;
        goto LABEL_27;
      }
      v97 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v267[*(int *)(v97 + 48)]);
      v98 = v272;
      sub_1004B84E0(v93, v272, type metadata accessor for CRLBoardIdentifier);
      v99 = v270;
      sub_1004B8460(v94, v270, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v99, v96) != 2)
      {
        sub_1004B84A4(v98, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v103 = 0;
        v93 = (uint64_t)v271;
        v94 = (uint64_t)v269;
        goto LABEL_27;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(v262 + *(int *)(v97 + 48)));
      sub_1004B84E0(v99, v268, type metadata accessor for CRLBoardIdentifier);
      v100 = v266;
      v101 = v304;
      sub_100C9F8F8(v98, v266);
      v94 = (uint64_t)v269;
      if (v101)
      {
        swift_errorRelease(v101);
        v102 = (uint64_t)v265;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v291[7])(v265, 1, 1, v288);
        v304 = 0;
        v93 = (uint64_t)v271;
LABEL_26:
        sub_1004B84A4(v268, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v272, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v102, &qword_1013E04F0);
        v103 = 0;
        goto LABEL_27;
      }
      v304 = 0;
      v104 = v291;
      v105 = (void (*)(char *, uint64_t, uint64_t))v291[2];
      v102 = (uint64_t)v265;
      v106 = v288;
      v105(v265, v100 + *(int *)(v300 + 24), v288);
      sub_1004B84A4(v100, type metadata accessor for CRLBoardViewModelMetadata);
      v107 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v104[7];
      v107((char *)v102, 0, 1, v106);
      v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v104[6];
      v109 = v108(v102, 1, v106);
      v93 = (uint64_t)v271;
      if (v109 == 1)
      {
        v49 = v292;
        v94 = (uint64_t)v269;
        goto LABEL_26;
      }
      v286 = v107;
      v110 = (void (*)(char *, uint64_t, uint64_t))v104[4];
      v110(v261, v102, v106);
      v111 = (uint64_t)v255;
      v112 = v304;
      sub_100C9F8F8(v268, (uint64_t)v255);
      if (v112)
      {
        swift_errorRelease(v112);
        v113 = (uint64_t)v260;
        v286(v260, 1, 1, v106);
        v304 = 0;
LABEL_33:
        v114 = v272;
        v94 = (uint64_t)v269;
        ((void (*)(char *, uint64_t))v291[1])(v261, v106);
        sub_1004B84A4(v268, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v114, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v113, &qword_1013E04F0);
        v103 = 0;
        v49 = v292;
        goto LABEL_27;
      }
      v273 = v110;
      v304 = 0;
      v113 = (uint64_t)v260;
      v105(v260, v111 + *(int *)(v300 + 24), v106);
      sub_1004B84A4(v111, type metadata accessor for CRLBoardViewModelMetadata);
      v286((char *)v113, 0, 1, v106);
      if (v108(v113, 1, v106) == 1)
        goto LABEL_33;
      v115 = v257;
      v273(v257, v113, v106);
      if ((v290 & 1) != 0)
      {
        v116 = v261;
        v117 = v261;
        v118 = v115;
      }
      else
      {
        v117 = v115;
        v116 = v261;
        v118 = v261;
      }
      v103 = static Date.< infix(_:_:)(v117, v118);
      v49 = v292;
      v119 = v115;
      v120 = (void (*)(char *, uint64_t))v291[1];
      v121 = v288;
      v120(v119, v288);
      v120(v116, v121);
      sub_1004B84A4(v268, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v272, type metadata accessor for CRLBoardIdentifier);
      v94 = (uint64_t)v269;
LABEL_27:
      sub_1004B84A4(v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4(v276, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (((v296 ^ v103) & 1) != 0)
        break;
      v91 = v299 + 1;
      v92 += v306;
      v83 = v297;
      if (v297 == v299 + 1)
      {
        v91 = v297;
        v4 = v304;
        v40 = v305;
        v81 = v259;
        v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
        v80 = v275;
        goto LABEL_41;
      }
    }
    v4 = v304;
    v40 = v305;
    v81 = v259;
    v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v91 = v299;
    v80 = v275;
    v83 = v297;
LABEL_41:
    v71 = v291;
    v122 = (uint64_t)v285;
    if ((v296 & 1) != 0)
    {
      if (v91 >= v80)
      {
        if (v80 < v91)
        {
          v259 = v81;
          v304 = v4;
          v123 = 0;
          v124 = v306 * (v91 - 1);
          v125 = v91 * v306;
          v126 = v80;
          v127 = v80 * v306;
          do
          {
            if (v126 != v91 + v123 - 1)
            {
              v128 = v289;
              if (!v289)
                goto LABEL_190;
              v129 = v289 + v127;
              sub_1004B84E0(v289 + v127, v274, type metadata accessor for CRLBoardLibraryViewModel.Item);
              if (v127 < v124 || v129 >= v128 + v125)
              {
                swift_arrayInitWithTakeFrontToBack(v128 + v127, v128 + v124, 1, v305);
              }
              else if (v127 != v124)
              {
                swift_arrayInitWithTakeBackToFront(v128 + v127);
              }
              sub_1004B84E0(v274, v128 + v124, type metadata accessor for CRLBoardLibraryViewModel.Item);
              v40 = v305;
            }
            ++v126;
            --v123;
            v124 -= v306;
            v125 -= v306;
            v127 += v306;
          }
          while (v126 < v91 + v123);
          v4 = v304;
          v122 = (uint64_t)v285;
          v71 = v291;
          v49 = v292;
          v81 = v259;
          v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          v80 = v275;
          v83 = v297;
        }
        goto LABEL_55;
      }
LABEL_187:
      __break(1u);
LABEL_188:
      v249 = v308;

      __break(1u);
LABEL_189:
      v250 = v135;

      __break(1u);
LABEL_190:
      v251 = v308;

      __break(1u);
LABEL_191:
      v252 = v308;

      __break(1u);
LABEL_192:
      v253 = v308;

      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
LABEL_55:
    if (v91 >= v83)
      goto LABEL_67;
    if (__OFSUB__(v91, v80))
      goto LABEL_183;
    if (v91 - v80 >= v258)
    {
      v80 = v275;
LABEL_67:
      if (v91 < v80)
        goto LABEL_179;
      goto LABEL_68;
    }
    if (__OFADD__(v275, v258))
      goto LABEL_185;
    if (v275 + v258 >= v297)
      v130 = v297;
    else
      v130 = v275 + v258;
    if (v130 < v275)
    {
LABEL_186:
      __break(1u);
      goto LABEL_187;
    }
    if (v91 == v130)
    {
      if (v91 < v275)
        goto LABEL_179;
      goto LABEL_68;
    }
    v304 = v4;
    v193 = (uint64_t)v49;
    v194 = v71;
    v259 = v81;
    v195 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v278 + 72);
    v196 = (_QWORD)v195 * (v91 - 1);
    v286 = v195;
    v306 = v91 * (_QWORD)v195;
    v273 = (void (*)(char *, uint64_t, uint64_t))v130;
    while (2)
    {
      v198 = 0;
      v199 = v275;
      v299 = v91;
      v289 = v196;
      while (2)
      {
        v296 = v199;
        v200 = *v307;
        v295 = v306 + v198;
        v201 = v303;
        sub_1004B8460(v306 + v198 + v200, v303, v82);
        v297 = v198;
        v294 = v196 + v198;
        v202 = v196 + v198 + v200;
        v203 = v302;
        sub_1004B8460(v202, v302, v82);
        sub_1004B8460(v201, v193, v82);
        if (swift_getEnumCaseMultiPayload(v193, v40) != 2)
        {
          sub_1004B84A4(v193, v82);
          v197 = v299;
LABEL_119:
          sub_1004B84A4(v203, v82);
          sub_1004B84A4(v303, v82);
          goto LABEL_120;
        }
        v204 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)&v284[*(int *)(v204 + 48)]);
        v205 = v203;
        v206 = v301;
        sub_1004B84E0(v193, v301, type metadata accessor for CRLBoardIdentifier);
        v207 = v205;
        v208 = v287;
        sub_1004B8460(v207, v287, v82);
        if (swift_getEnumCaseMultiPayload(v208, v40) != 2)
        {
          sub_1004B84A4(v206, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v208, v82);
LABEL_138:
          v193 = (uint64_t)v292;
          v203 = v302;
          v197 = v299;
          v196 = v289;
          goto LABEL_119;
        }
        swift_bridgeObjectRelease(*(_QWORD *)(v282 + *(int *)(v204 + 48)));
        sub_1004B84E0(v208, v309, type metadata accessor for CRLBoardIdentifier);
        v209 = v283;
        v210 = v304;
        sub_100C9F8F8(v206, v283);
        if (v210)
        {
          swift_errorRelease(v210);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v194[7])(v122, 1, 1, v288);
          v304 = 0;
LABEL_137:
          sub_1004B84A4(v309, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v301, type metadata accessor for CRLBoardIdentifier);
          sub_1004CB800(v122, &qword_1013E04F0);
          goto LABEL_138;
        }
        v211 = v194;
        v212 = (void (*)(uint64_t, uint64_t, uint64_t))v194[2];
        v213 = v288;
        v212(v122, v209 + *(int *)(v300 + 24), v288);
        sub_1004B84A4(v209, type metadata accessor for CRLBoardViewModelMetadata);
        v214 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v211[7];
        v214(v122, 0, 1, v213);
        v215 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v211[6];
        if (v215(v122, 1, v213) == 1)
        {
          v304 = 0;
          v194 = v211;
          v40 = v305;
          goto LABEL_137;
        }
        v216 = (void (*)(char *, uint64_t, uint64_t))v211[4];
        v216(v298, v122, v213);
        v217 = (uint64_t)v280;
        sub_100C9F8F8(v309, (uint64_t)v280);
        v218 = (uint64_t)v281;
        v212((uint64_t)v281, v217 + *(int *)(v300 + 24), v213);
        sub_1004B84A4(v217, type metadata accessor for CRLBoardViewModelMetadata);
        v214(v218, 0, 1, v213);
        v219 = v215(v218, 1, v213);
        v304 = 0;
        if (v219 == 1)
        {
          v234 = v213;
          v193 = (uint64_t)v292;
          v40 = v305;
          v194 = v291;
          ((void (*)(char *, uint64_t))v291[1])(v298, v234);
          sub_1004B84A4(v309, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v301, type metadata accessor for CRLBoardIdentifier);
          sub_1004CB800(v218, &qword_1013E04F0);
          v122 = (uint64_t)v285;
          v203 = v302;
          v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          v197 = v299;
          v196 = v289;
          goto LABEL_119;
        }
        v220 = v279;
        v216(v279, v218, v213);
        v221 = v213;
        v222 = v291;
        v193 = (uint64_t)v292;
        if ((v290 & 1) != 0)
        {
          v223 = v298;
          v224 = v298;
          v225 = v220;
        }
        else
        {
          v224 = v220;
          v223 = v298;
          v225 = v298;
        }
        v226 = static Date.< infix(_:_:)(v224, v225);
        v227 = v220;
        v228 = v226;
        v194 = v222;
        v229 = (void (*)(char *, uint64_t))v222[1];
        v229(v227, v221);
        v229(v223, v221);
        sub_1004B84A4(v309, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v301, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v302, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v303, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((v228 & 1) != 0)
        {
          v230 = *v307;
          v122 = (uint64_t)v285;
          v196 = v289;
          if (!*v307)
            goto LABEL_188;
          v231 = v297;
          v232 = v230 + v306 + v297;
          v233 = v230 + v289 + v297;
          v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          sub_1004B84E0(v232, v293, type metadata accessor for CRLBoardLibraryViewModel.Item);
          swift_arrayInitWithTakeFrontToBack(v232, v233, 1, v305);
          sub_1004B84E0(v293, v233, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v198 = v231 - (_QWORD)v286;
          v199 = v296 + 1;
          v197 = v299;
          v40 = v305;
          if (v299 == v296 + 1)
            goto LABEL_120;
          continue;
        }
        break;
      }
      v122 = (uint64_t)v285;
      v40 = v305;
      v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v197 = v299;
      v196 = v289;
LABEL_120:
      v91 = v197 + 1;
      v196 += (uint64_t)v286;
      v306 += (uint64_t)v286;
      if ((void (*)(char *, uint64_t, uint64_t))v91 != v273)
        continue;
      break;
    }
    v91 = (int64_t)v273;
    v81 = v259;
    v71 = v194;
    v49 = (char *)v193;
    v4 = v304;
    if ((uint64_t)v273 < v275)
      goto LABEL_179;
LABEL_68:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v81);
    v299 = v91;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v81 = sub_100D15FCC(0, *((_QWORD *)v81 + 2) + 1, 1, v81);
    v133 = *((_QWORD *)v81 + 2);
    v132 = *((_QWORD *)v81 + 3);
    v134 = v133 + 1;
    v135 = v308;
    if (v133 >= v132 >> 1)
    {
      v81 = sub_100D15FCC((char *)(v132 > 1), v133 + 1, 1, v81);
      v135 = v308;
    }
    *((_QWORD *)v81 + 2) = v134;
    v136 = v81 + 32;
    v137 = &v81[16 * v133 + 32];
    v138 = v299;
    *(_QWORD *)v137 = v275;
    *((_QWORD *)v137 + 1) = v138;
    if (v133)
    {
      while (2)
      {
        v139 = v134 - 1;
        if (v134 >= 4)
        {
          v144 = &v136[16 * v134];
          v145 = *((_QWORD *)v144 - 8);
          v146 = *((_QWORD *)v144 - 7);
          v150 = __OFSUB__(v146, v145);
          v147 = v146 - v145;
          if (v150)
            goto LABEL_167;
          v149 = *((_QWORD *)v144 - 6);
          v148 = *((_QWORD *)v144 - 5);
          v150 = __OFSUB__(v148, v149);
          v142 = v148 - v149;
          v143 = v150;
          if (v150)
            goto LABEL_168;
          v151 = v134 - 2;
          v152 = &v136[16 * v134 - 32];
          v154 = *(_QWORD *)v152;
          v153 = *((_QWORD *)v152 + 1);
          v150 = __OFSUB__(v153, v154);
          v155 = v153 - v154;
          if (v150)
            goto LABEL_170;
          v150 = __OFADD__(v142, v155);
          v156 = v142 + v155;
          if (v150)
            goto LABEL_173;
          if (v156 >= v147)
          {
            v174 = &v136[16 * v139];
            v176 = *(_QWORD *)v174;
            v175 = *((_QWORD *)v174 + 1);
            v150 = __OFSUB__(v175, v176);
            v177 = v175 - v176;
            if (v150)
              goto LABEL_177;
            v167 = v142 < v177;
          }
          else
          {
LABEL_86:
            if ((v143 & 1) != 0)
              goto LABEL_169;
            v151 = v134 - 2;
            v157 = &v136[16 * v134 - 32];
            v159 = *(_QWORD *)v157;
            v158 = *((_QWORD *)v157 + 1);
            v160 = __OFSUB__(v158, v159);
            v161 = v158 - v159;
            v162 = v160;
            if (v160)
              goto LABEL_172;
            v163 = &v136[16 * v139];
            v165 = *(_QWORD *)v163;
            v164 = *((_QWORD *)v163 + 1);
            v150 = __OFSUB__(v164, v165);
            v166 = v164 - v165;
            if (v150)
              goto LABEL_175;
            if (__OFADD__(v161, v166))
              goto LABEL_176;
            if (v161 + v166 < v142)
              goto LABEL_98;
            v167 = v142 < v166;
          }
          if (v167)
            v139 = v151;
        }
        else
        {
          if (v134 == 3)
          {
            v141 = *((_QWORD *)v81 + 4);
            v140 = *((_QWORD *)v81 + 5);
            v150 = __OFSUB__(v140, v141);
            v142 = v140 - v141;
            v143 = v150;
            goto LABEL_86;
          }
          v168 = *((_QWORD *)v81 + 4);
          v169 = *((_QWORD *)v81 + 5);
          v150 = __OFSUB__(v169, v168);
          v161 = v169 - v168;
          v162 = v150;
LABEL_98:
          if ((v162 & 1) != 0)
            goto LABEL_171;
          v170 = &v136[16 * v139];
          v172 = *(_QWORD *)v170;
          v171 = *((_QWORD *)v170 + 1);
          v150 = __OFSUB__(v171, v172);
          v173 = v171 - v172;
          if (v150)
            goto LABEL_174;
          if (v173 < v161)
            goto LABEL_115;
        }
        v178 = v139 - 1;
        if (v139 - 1 >= v134)
        {
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        v179 = *v307;
        if (!*v307)
          goto LABEL_189;
        v180 = v81;
        v181 = &v136[16 * v178];
        v182 = *(_QWORD *)v181;
        v183 = v136;
        v184 = v139;
        v185 = &v136[16 * v139];
        v186 = *(_QWORD *)v185;
        v187 = *((_QWORD *)v185 + 1);
        v188 = *(_QWORD *)(v278 + 72);
        v306 = v179 + v188 * *(_QWORD *)v181;
        v304 = v179 + v188 * v186;
        v297 = v179 + v188 * v187;
        v189 = v135;
        sub_100BA8CCC(v306, v304, v297, v277, v189, v290 & 1, (uint64_t (*)(char *, char *, id, _QWORD))sub_100B773E4);
        if (v4)
        {
          v235 = (uint64_t)v180;
          goto LABEL_161;
        }
        if (v187 < v182)
          goto LABEL_164;
        if (v184 > *((_QWORD *)v180 + 2))
          goto LABEL_165;
        *(_QWORD *)v181 = v182;
        *(_QWORD *)&v183[16 * v178 + 8] = v187;
        v190 = *((_QWORD *)v180 + 2);
        if (v184 >= v190)
          goto LABEL_166;
        v191 = v183;
        v81 = v180;
        v134 = v190 - 1;
        v192 = v191;
        memmove(v185, v185 + 16, 16 * (v190 - 1 - v184));
        v136 = v192;
        *((_QWORD *)v180 + 2) = v190 - 1;
        v135 = v308;
        v71 = v291;
        v49 = v292;
        v40 = v305;
        v82 = type metadata accessor for CRLBoardLibraryViewModel.Item;
        if (v190 <= 2)
          goto LABEL_115;
        continue;
      }
    }
    v134 = 1;
LABEL_115:
    v83 = v307[1];
    v80 = v299;
  }
  while (v299 < v83);
  v79 = v256;
LABEL_146:
  v256 = v79;
  if (v134 >= 2)
  {
    v236 = (uint64_t *)*v307;
    v307 = (uint64_t *)*v307;
    do
    {
      v237 = v134 - 2;
      if (v134 < 2)
        goto LABEL_178;
      if (!v236)
        goto LABEL_191;
      v238 = (uint64_t)v81;
      v239 = *(_QWORD *)&v81[16 * v237 + 32];
      v240 = *(_QWORD *)&v81[16 * v134 + 24];
      v241 = *(_QWORD *)&v81[16 * v134 + 16];
      v242 = *(_QWORD *)(v278 + 72);
      v309 = (unint64_t)v236 + v242 * v239;
      v243 = (unint64_t)v236 + v242 * v241;
      v244 = (unint64_t)v236 + v242 * v240;
      v245 = v308;
      sub_100BA8CCC(v309, v243, v244, v277, v245, v290 & 1, (uint64_t (*)(char *, char *, id, _QWORD))sub_100B773E4);
      if (v4)
      {
        v235 = v238;
        goto LABEL_161;
      }
      if (v240 < v239)
        goto LABEL_180;
      v81 = (char *)v238;
      if ((swift_isUniquelyReferenced_nonNull_native(v238) & 1) == 0)
        v81 = sub_100D1664C(v238);
      if (v237 >= *((_QWORD *)v81 + 2))
        goto LABEL_181;
      v246 = &v81[16 * v237 + 32];
      *(_QWORD *)v246 = v239;
      *((_QWORD *)v246 + 1) = v240;
      v247 = *((_QWORD *)v81 + 2);
      if (v134 > v247)
        goto LABEL_182;
      memmove(&v81[16 * v134 + 16], &v81[16 * v134 + 32], 16 * (v247 - v134));
      *((_QWORD *)v81 + 2) = v247 - 1;
      v134 = v247 - 1;
      v236 = v307;
    }
    while (v247 > 2);
  }
LABEL_160:
  v235 = (uint64_t)v81;
LABEL_161:
  swift_bridgeObjectRelease(v235);
  v248 = v256;
  v256[2] = 0;
  v76 = v308;

  swift_bridgeObjectRelease(v248);
LABEL_162:

}

uint64_t sub_100BB6074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;

  v44 = a5;
  v47 = a4;
  v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v10 = __chkstk_darwin(v37);
  v46 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v43 = (uint64_t)&v34 - v13;
  result = __chkstk_darwin(v12);
  v42 = (uint64_t)&v34 - v16;
  v36 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v18 = v17 * (a3 - 1);
    v38 = v17;
    v19 = v17 * a3;
    v39 = a6 & 1;
    v20 = v47;
    v35 = a1;
LABEL_4:
    v21 = 0;
    v22 = a1;
    v40 = a3;
    v41 = v19;
    while (1)
    {
      v45 = v22;
      v24 = *v20;
      v25 = v42;
      sub_1004B8460(v19 + v21 + *v20, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v26 = v18;
      v27 = v18 + v21 + v24;
      v28 = v43;
      sub_1004B8460(v27, v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v29 = v48;
      v30 = sub_100B77948(v25, v28, v44, v39);
      sub_1004B84A4(v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
      result = sub_1004B84A4(v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v48 = v29;
      if (v29)
        break;
      if ((v30 & 1) == 0)
      {
        v23 = v40;
        v19 = v41;
        v18 = v26;
        v20 = v47;
LABEL_11:
        a3 = v23 + 1;
        v18 += v38;
        v19 += v38;
        a1 = v35;
        if (a3 != v36)
          goto LABEL_4;
        return result;
      }
      v31 = *v47;
      v19 = v41;
      if (!*v47)
      {
        __break(1u);
        return result;
      }
      v18 = v26;
      v32 = v31 + v41 + v21;
      v33 = v31 + v18 + v21;
      sub_1004B84E0(v32, v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_arrayInitWithTakeFrontToBack(v32, v33, 1, v37);
      result = sub_1004B84E0(v46, v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v21 -= v38;
      v22 = v45 + 1;
      v23 = v40;
      v20 = v47;
      if (v40 == v45 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

void sub_100BB62D4(uint64_t *a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t (*v47)(uint64_t);
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  int64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  int64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  Swift::Int v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  char v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  BOOL v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  int64_t v183;
  uint64_t (*v184)(uint64_t);
  unint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t (*v195)(uint64_t);
  uint64_t v196;
  char *v197;
  char *v198;
  unint64_t v199;
  _QWORD *v200;
  _QWORD *v201;
  uint64_t (*v202)(uint64_t);
  uint64_t (*v203)(uint64_t);
  uint64_t (*v204)(uint64_t);
  uint64_t (*v205)(uint64_t);
  uint64_t v206;
  _QWORD *v207;
  char *v208;
  Swift::Int v209;
  int64_t v210;
  uint64_t v211;
  char *v212;
  int64_t v213;
  char *v214;
  unint64_t v215;
  char *v216;
  uint64_t (*v217)(uint64_t);
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  int v230;
  uint64_t v231;
  uint64_t (*v232)(uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  unint64_t v241;
  int64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;

  v230 = a3;
  v5 = sub_1004B804C(&qword_1013F5478);
  v6 = __chkstk_darwin(v5);
  v227 = (uint64_t)&v206 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v226 = (uint64_t)&v206 - v8;
  v9 = sub_1004B804C(&qword_1013E4690);
  v10 = __chkstk_darwin(v9);
  v221 = (uint64_t)&v206 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v206 - v12;
  v244 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v222 = *(_QWORD *)(v244 - 8);
  v14 = __chkstk_darwin(v244);
  v246 = (uint64_t)&v206 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v243 = (uint64_t)&v206 - v16;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  v18 = __chkstk_darwin(v17);
  v239 = (uint64_t)&v206 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v206 - v20;
  v22 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v218 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v211 = (uint64_t)&v206 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v233 = (uint64_t)&v206 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v206 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v206 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v206 - v34;
  v36 = __chkstk_darwin(v33);
  v238 = (uint64_t)&v206 - v37;
  v38 = __chkstk_darwin(v36);
  v208 = (char *)&v206 - v39;
  v40 = __chkstk_darwin(v38);
  v42 = (char *)&v206 - v41;
  v43 = __chkstk_darwin(v40);
  v216 = (char *)&v206 - v44;
  __chkstk_darwin(v43);
  v217 = (uint64_t (*)(uint64_t))((char *)&v206 - v45);
  v245 = a1;
  v46 = a1[1];
  v47 = a2;
  v48 = _minimumMergeRunLength(_:)(v46);
  if (v48 >= v46)
  {
    if (v46 < 0)
      goto LABEL_183;
    v53 = v46;
    if (v46)
    {
      v54 = v47;
      sub_100BB6074(0, v53, 1, v245, (uint64_t)v54, v230 & 1);

    }
    else
    {

    }
    goto LABEL_160;
  }
  if (v46 >= 0)
    v49 = v46;
  else
    v49 = v46 + 1;
  if (v46 < -1)
    goto LABEL_192;
  v231 = v22;
  v232 = v47;
  v209 = v48;
  v242 = v46;
  if (v46 < 2)
  {
    v215 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80));
    v207 = _swiftEmptyArrayStorage;
    if (v46 != 1)
    {
      v56 = (char *)_swiftEmptyArrayStorage;
      v131 = _swiftEmptyArrayStorage[2];
LABEL_145:
      v212 = v56;
      if (v131 >= 2)
      {
        v188 = *v245;
        do
        {
          v189 = v131 - 2;
          if (v131 < 2)
            goto LABEL_178;
          if (!v188)
            goto LABEL_191;
          v190 = *(_QWORD *)&v212[16 * v189 + 32];
          v191 = *(_QWORD *)&v212[16 * v131 + 24];
          v192 = *(_QWORD *)(v218 + 72);
          v193 = v188 + v192 * v190;
          v194 = v188 + v192 * *(_QWORD *)&v212[16 * v131 + 16];
          v47 = (uint64_t (*)(uint64_t))(v188 + v192 * v191);
          v195 = v232;
          v196 = v251;
          sub_100BA8CCC(v193, v194, (unint64_t)v47, v215, v195, v230 & 1, (uint64_t (*)(char *, char *, id, _QWORD))sub_100B77948);
          v251 = v196;
          if (v196)
            goto LABEL_162;
          if (v191 < v190)
            goto LABEL_179;
          v197 = v212;
          if ((swift_isUniquelyReferenced_nonNull_native(v212) & 1) == 0)
            v197 = sub_100D1664C((uint64_t)v197);
          v47 = v232;
          if (v189 >= *((_QWORD *)v197 + 2))
            goto LABEL_180;
          v198 = &v197[16 * v189 + 32];
          *(_QWORD *)v198 = v190;
          *((_QWORD *)v198 + 1) = v191;
          v199 = *((_QWORD *)v197 + 2);
          if (v131 > v199)
            goto LABEL_181;
          memmove(&v197[16 * v131 + 16], &v197[16 * v131 + 32], 16 * (v199 - v131));
          v212 = v197;
          *((_QWORD *)v197 + 2) = v199 - 1;
          v131 = v199 - 1;
        }
        while (v199 > 2);
      }
      swift_bridgeObjectRelease(v212);
      v200 = v207;
      v207[2] = 0;

      swift_bridgeObjectRelease(v200);
LABEL_160:

      return;
    }
  }
  else
  {
    v50 = v49 >> 1;
    v51 = static Array._allocateBufferUninitialized(minimumCapacity:)(v49 >> 1, v22);
    *(_QWORD *)(v51 + 16) = v50;
    v52 = *(unsigned __int8 *)(v218 + 80);
    v207 = (_QWORD *)v51;
    v215 = v51 + ((v52 + 32) & ~v52);
  }
  v55 = 0;
  v223 = v32 + 8;
  v224 = v29;
  v220 = v29 + 8;
  v56 = (char *)_swiftEmptyArrayStorage;
  v219 = v13;
  v240 = v21;
  v229 = v32;
  v228 = v35;
  v214 = v42;
  v57 = (uint64_t)v216;
  v47 = v217;
  v58 = v242;
  while (2)
  {
    v59 = v55;
    v60 = v55 + 1;
    v242 = v58;
    v213 = v55;
    if (v55 + 1 >= v58)
    {
      v74 = v209;
      v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v75 = v59;
      v76 = (uint64_t)v219;
      goto LABEL_40;
    }
    v212 = v56;
    v61 = *v245;
    v62 = *(_QWORD *)(v218 + 72);
    v241 = v55 + 1;
    sub_1004B8460(v61 + v62 * v60, (uint64_t)v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v236 = v61;
    sub_1004B8460(v61 + v62 * v59, v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v63 = v251;
    v64 = sub_100B77948((uint64_t)v47, v57, (uint64_t)v232, v230 & 1);
    v65 = v57;
    v251 = v63;
    if (v63)
    {
      sub_1004B84A4(v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_162:
      swift_bridgeObjectRelease(v212);
      v47 = v232;
LABEL_159:
      v201 = v207;
      v207[2] = 0;

      swift_bridgeObjectRelease(v201);
      goto LABEL_160;
    }
    v66 = v64;
    sub_1004B84A4(v65, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v67 = v59 + 2;
    v68 = v242;
    v234 = v67;
    if (v67 >= v242)
    {
      v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v76 = (uint64_t)v219;
      goto LABEL_24;
    }
    v241 *= v62;
    v69 = v236;
    v237 = v62 * v67;
    v70 = (uint64_t)v208;
    do
    {
      sub_1004B8460(v69 + v237, (uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460(v69 + v241, v70, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v71 = v251;
      v72 = sub_100B77948((uint64_t)v42, v70, (uint64_t)v232, v230 & 1);
      v251 = v71;
      if (v71)
      {
        sub_1004B84A4(v70, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v187 = v212;
LABEL_158:
        swift_bridgeObjectRelease(v187);
        v47 = v232;
        goto LABEL_159;
      }
      v73 = v72;
      sub_1004B84A4(v70, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (((v66 ^ v73) & 1) != 0)
        goto LABEL_22;
      v69 += v62;
      ++v234;
    }
    while (v68 != v234);
    v234 = v68;
LABEL_22:
    v76 = (uint64_t)v219;
    v21 = v240;
    v32 = v229;
    v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
LABEL_24:
    v75 = v213;
    if ((v66 & 1) == 0)
    {
      v56 = v212;
      v74 = v209;
      v60 = v234;
      goto LABEL_40;
    }
    v60 = v234;
    if (v234 < v213)
      goto LABEL_187;
    if (v213 >= v234)
    {
      v56 = v212;
      v74 = v209;
    }
    else
    {
      v47 = 0;
      v77 = v62 * (v234 - 1);
      v78 = v234 * v62;
      v79 = (uint64_t (*)(uint64_t))v213;
      v80 = v213 * v62;
      v81 = v234;
      do
      {
        if (v79 != (uint64_t (*)(uint64_t))((char *)v47 + v81 - 1))
        {
          v82 = v236;
          if (!v236)
            goto LABEL_190;
          v83 = v236 + v80;
          sub_1004B84E0(v236 + v80, v211, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v80 < v77 || v83 >= v82 + v78)
          {
            swift_arrayInitWithTakeFrontToBack(v82 + v80, v82 + v77, 1, v231);
          }
          else if (v80 != v77)
          {
            swift_arrayInitWithTakeBackToFront(v82 + v80);
          }
          sub_1004B84E0(v211, v82 + v77, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v21 = v240;
          v81 = v234;
        }
        v79 = (uint64_t (*)(uint64_t))((char *)v79 + 1);
        v47 = (uint64_t (*)(uint64_t))((char *)v47 - 1);
        v77 -= v62;
        v78 -= v62;
        v80 += v62;
      }
      while ((uint64_t)v79 < (uint64_t)v47 + v81);
      v76 = (uint64_t)v219;
      v56 = v212;
      v60 = v81;
      v32 = v229;
      v35 = v228;
      v42 = v214;
      v74 = v209;
      v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v75 = v213;
    }
LABEL_40:
    v234 = v60;
    if (v60 >= v242)
      goto LABEL_91;
    if (__OFSUB__(v60, v75))
      goto LABEL_184;
    if (v60 - v75 >= v74)
      goto LABEL_91;
    if (__OFADD__(v75, v74))
      goto LABEL_185;
    if (v75 + v74 >= v242)
      v84 = v242;
    else
      v84 = v75 + v74;
    if (v84 >= v75)
    {
      if (v234 == v84)
        goto LABEL_91;
      v212 = v56;
      v85 = *(_QWORD *)(v218 + 72);
      v242 = v85 * (v234 - 1);
      v225 = v85;
      v241 = v234 * v85;
      v210 = v84;
      while (2)
      {
        v86 = 0;
        v87 = v213;
        while (2)
        {
          v88 = v76;
          v89 = *v245;
          v236 = v241 + v86;
          v237 = v87;
          v90 = v238;
          sub_1004B8460(v241 + v86 + v89, v238, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v235 = v242 + v86;
          sub_1004B8460(v242 + v86 + v89, (uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B8460(v90, (uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v91 = v35;
          v92 = v231;
          if (swift_getEnumCaseMultiPayload(v32, v231) != 2)
          {
            sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v35 = v91;
LABEL_51:
            v76 = v88;
            goto LABEL_52;
          }
          v93 = sub_1004B804C((uint64_t *)&unk_1013EA630);
          swift_bridgeObjectRelease(*(_QWORD *)&v223[*(int *)(v93 + 48)]);
          sub_1004B84E0((uint64_t)v32, (uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
          v94 = (uint64_t)v91;
          v95 = (uint64_t)v224;
          sub_1004B8460(v94, (uint64_t)v224, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v95, v92) != 2)
          {
            sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4(v95, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v32 = v229;
            v35 = v228;
            goto LABEL_51;
          }
          swift_bridgeObjectRelease(*(_QWORD *)&v220[*(int *)(v93 + 48)]);
          v96 = v239;
          sub_1004B84E0(v95, v239, type metadata accessor for CRLBoardIdentifier);
          v76 = v88;
          v97 = v251;
          sub_100C9F8F8((uint64_t)v21, v88);
          if (v97)
          {
            swift_errorRelease(v97);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v222 + 56))(v88, 1, 1, v244);
            sub_1004B84A4(v96, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
            sub_1004CB800(v88, &qword_1013E4690);
            v251 = 0;
            v32 = v229;
            v35 = v228;
            goto LABEL_52;
          }
          v98 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v222 + 56);
          v99 = v244;
          v98(v88, 0, 1, v244);
          v100 = v243;
          sub_1004B84E0(v88, v243, type metadata accessor for CRLBoardViewModelMetadata);
          v101 = v100;
          v102 = v221;
          sub_100C9F8F8(v96, v221);
          v98(v102, 0, 1, v99);
          sub_1004B84E0(v102, v246, type metadata accessor for CRLBoardViewModelMetadata);
          v103 = v226;
          sub_1004CB7BC(v101 + *(int *)(v99 + 28), v226, &qword_1013F5478);
          v104 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
          v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48);
          if (v105(v103, 1, v104) == 1)
          {
            sub_1004CB800(v103, &qword_1013F5478);
            v106 = 0;
            v107 = 0;
          }
          else
          {
            if (*(_QWORD *)v103)
            {
              v108 = *(id *)v103;
              v106 = sub_10063B4E0();
              v107 = v109;

              v103 = v226;
            }
            else
            {
              v106 = *(_QWORD *)(v103 + 8);
              v107 = *(_QWORD *)(v103 + 16);
              swift_bridgeObjectRetain(v107);
            }
            sub_1004B84A4(v103, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
          }
          v110 = v227;
          sub_1004CB7BC(v246 + *(int *)(v244 + 28), v227, &qword_1013F5478);
          v111 = v105(v110, 1, v104);
          v251 = 0;
          if (v111 == 1)
          {
            sub_1004CB800(v110, &qword_1013F5478);
            v76 = (uint64_t)v219;
            v32 = v229;
            v35 = v228;
            if (v107)
            {
              swift_bridgeObjectRelease(v107);
              v112 = v239;
              goto LABEL_79;
            }
LABEL_77:
            v121 = *(int *)(v244 + 24);
            v122 = v243 + v121;
            v123 = v246 + v121;
            if ((v230 & 1) != 0)
              v124 = static Date.< infix(_:_:)(v122, v123);
            else
              v124 = static Date.> infix(_:_:)(v122, v123);
            v125 = v124;
            v21 = v240;
            v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
            sub_1004B84A4(v246, type metadata accessor for CRLBoardViewModelMetadata);
            sub_1004B84A4(v243, type metadata accessor for CRLBoardViewModelMetadata);
            sub_1004B84A4(v239, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_1004B84A4(v238, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if ((v125 & 1) == 0)
              goto LABEL_53;
LABEL_82:
            v126 = *v245;
            if (!*v245)
              goto LABEL_188;
            v127 = v126 + v241 + v86;
            v128 = v126 + v242 + v86;
            sub_1004B84E0(v127, v233, type metadata accessor for CRLBoardLibraryViewModel.Item);
            swift_arrayInitWithTakeFrontToBack(v127, v128, 1, v231);
            sub_1004B84E0(v233, v128, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v86 -= v225;
            v87 = v237 + 1;
            v21 = v240;
            if (v234 == v237 + 1)
              goto LABEL_53;
            continue;
          }
          break;
        }
        if (*(_QWORD *)v110)
        {
          v113 = *(id *)v110;
          v114 = sub_10063B4E0();
          v116 = v115;

          v110 = v227;
        }
        else
        {
          v114 = *(_QWORD *)(v110 + 8);
          v116 = *(_QWORD *)(v110 + 16);
          swift_bridgeObjectRetain(v116);
        }
        sub_1004B84A4(v110, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
        if (!v107)
        {
          swift_bridgeObjectRelease(v116);
          sub_1004B84A4(v246, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v243, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v239, type metadata accessor for CRLBoardIdentifier);
          v21 = v240;
          sub_1004B84A4((uint64_t)v240, type metadata accessor for CRLBoardIdentifier);
          v76 = (uint64_t)v219;
          v32 = v229;
          v35 = v228;
          goto LABEL_89;
        }
        if ((v230 & 1) != 0)
        {
          v249 = v106;
          v250 = v107;
          v247 = v114;
          v248 = v116;
          v117 = sub_1004D292C();
          v47 = (uint64_t (*)(uint64_t))StringProtocol.localizedStandardCompare<A>(_:)(&v247, &type metadata for String, &type metadata for String, v117, v117);
          swift_bridgeObjectRelease(v107);
          v118 = v116;
        }
        else
        {
          v249 = v114;
          v250 = v116;
          v247 = v106;
          v248 = v107;
          v119 = sub_1004D292C();
          v47 = (uint64_t (*)(uint64_t))StringProtocol.localizedStandardCompare<A>(_:)(&v247, &type metadata for String, &type metadata for String, v119, v119);
          swift_bridgeObjectRelease(v116);
          v118 = v107;
        }
        swift_bridgeObjectRelease(v118);
        type metadata accessor for ComparisonResult(0);
        v76 = (uint64_t)v219;
        v112 = v239;
        v32 = v229;
        v35 = v228;
        if (v47 == (uint64_t (*)(uint64_t))-1)
        {
LABEL_79:
          sub_1004B84A4(v246, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v243, type metadata accessor for CRLBoardViewModelMetadata);
          sub_1004B84A4(v112, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v240, type metadata accessor for CRLBoardIdentifier);
          v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B84A4(v238, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_82;
        }
        if (!v47)
          goto LABEL_77;
        if (v47 != (uint64_t (*)(uint64_t))1)
          goto LABEL_193;
        sub_1004B84A4(v246, type metadata accessor for CRLBoardViewModelMetadata);
        sub_1004B84A4(v243, type metadata accessor for CRLBoardViewModelMetadata);
        sub_1004B84A4(v239, type metadata accessor for CRLBoardIdentifier);
        v21 = v240;
        sub_1004B84A4((uint64_t)v240, type metadata accessor for CRLBoardIdentifier);
LABEL_89:
        v47 = type metadata accessor for CRLBoardLibraryViewModel.Item;
LABEL_52:
        sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1004B84A4(v238, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_53:
        v242 += v225;
        v241 += v225;
        if (++v234 != v210)
          continue;
        break;
      }
      v234 = v210;
      v56 = v212;
      v42 = v214;
      v75 = v213;
LABEL_91:
      if (v234 < v75)
        goto LABEL_182;
      if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
        v56 = sub_100D15FCC(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
      v130 = *((_QWORD *)v56 + 2);
      v129 = *((_QWORD *)v56 + 3);
      v131 = v130 + 1;
      v47 = v217;
      if (v130 >= v129 >> 1)
      {
        v186 = sub_100D15FCC((char *)(v129 > 1), v130 + 1, 1, v56);
        v47 = v217;
        v56 = v186;
      }
      *((_QWORD *)v56 + 2) = v131;
      v132 = v56 + 32;
      v133 = &v56[16 * v130 + 32];
      v134 = v234;
      *(_QWORD *)v133 = v213;
      *((_QWORD *)v133 + 1) = v134;
      if (v130)
      {
        v57 = (uint64_t)v216;
        while (1)
        {
          v135 = v131 - 1;
          if (v131 >= 4)
          {
            v140 = &v132[16 * v131];
            v141 = *((_QWORD *)v140 - 8);
            v142 = *((_QWORD *)v140 - 7);
            v146 = __OFSUB__(v142, v141);
            v143 = v142 - v141;
            if (v146)
              goto LABEL_167;
            v145 = *((_QWORD *)v140 - 6);
            v144 = *((_QWORD *)v140 - 5);
            v146 = __OFSUB__(v144, v145);
            v138 = v144 - v145;
            v139 = v146;
            if (v146)
              goto LABEL_168;
            v147 = v131 - 2;
            v148 = &v132[16 * v131 - 32];
            v150 = *(_QWORD *)v148;
            v149 = *((_QWORD *)v148 + 1);
            v146 = __OFSUB__(v149, v150);
            v151 = v149 - v150;
            if (v146)
              goto LABEL_170;
            v146 = __OFADD__(v138, v151);
            v152 = v138 + v151;
            if (v146)
              goto LABEL_173;
            if (v152 >= v143)
            {
              v170 = &v132[16 * v135];
              v172 = *(_QWORD *)v170;
              v171 = *((_QWORD *)v170 + 1);
              v146 = __OFSUB__(v171, v172);
              v173 = v171 - v172;
              if (v146)
                goto LABEL_177;
              v163 = v138 < v173;
              goto LABEL_129;
            }
          }
          else
          {
            if (v131 != 3)
            {
              v164 = *((_QWORD *)v56 + 4);
              v165 = *((_QWORD *)v56 + 5);
              v146 = __OFSUB__(v165, v164);
              v157 = v165 - v164;
              v158 = v146;
              goto LABEL_123;
            }
            v137 = *((_QWORD *)v56 + 4);
            v136 = *((_QWORD *)v56 + 5);
            v146 = __OFSUB__(v136, v137);
            v138 = v136 - v137;
            v139 = v146;
          }
          if ((v139 & 1) != 0)
            goto LABEL_169;
          v147 = v131 - 2;
          v153 = &v132[16 * v131 - 32];
          v155 = *(_QWORD *)v153;
          v154 = *((_QWORD *)v153 + 1);
          v156 = __OFSUB__(v154, v155);
          v157 = v154 - v155;
          v158 = v156;
          if (v156)
            goto LABEL_172;
          v159 = &v132[16 * v135];
          v161 = *(_QWORD *)v159;
          v160 = *((_QWORD *)v159 + 1);
          v146 = __OFSUB__(v160, v161);
          v162 = v160 - v161;
          if (v146)
            goto LABEL_175;
          if (__OFADD__(v157, v162))
            goto LABEL_176;
          if (v157 + v162 >= v138)
          {
            v163 = v138 < v162;
LABEL_129:
            if (v163)
              v135 = v147;
            goto LABEL_131;
          }
LABEL_123:
          if ((v158 & 1) != 0)
            goto LABEL_171;
          v166 = &v132[16 * v135];
          v168 = *(_QWORD *)v166;
          v167 = *((_QWORD *)v166 + 1);
          v146 = __OFSUB__(v167, v168);
          v169 = v167 - v168;
          if (v146)
            goto LABEL_174;
          if (v169 < v157)
            goto LABEL_140;
LABEL_131:
          v174 = v135 - 1;
          if (v135 - 1 >= v131)
          {
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
            goto LABEL_186;
          }
          v175 = v251;
          v176 = *v245;
          if (!*v245)
            goto LABEL_189;
          v177 = &v132[16 * v174];
          v178 = *(_QWORD *)v177;
          v179 = v132;
          v47 = (uint64_t (*)(uint64_t))v135;
          v180 = &v132[16 * v135];
          v181 = *((_QWORD *)v180 + 1);
          v182 = *(_QWORD *)(v218 + 72);
          v183 = v176 + v182 * *(_QWORD *)v177;
          v241 = v176 + v182 * *(_QWORD *)v180;
          v242 = v183;
          v237 = v176 + v182 * v181;
          v184 = v232;
          sub_100BA8CCC(v242, v241, v237, v215, v184, v230 & 1, (uint64_t (*)(char *, char *, id, _QWORD))sub_100B77948);
          v251 = v175;
          if (v175)
          {
            v187 = v56;
            goto LABEL_158;
          }
          if (v181 < v178)
            goto LABEL_164;
          if ((unint64_t)v47 > *((_QWORD *)v56 + 2))
            goto LABEL_165;
          *(_QWORD *)v177 = v178;
          *(_QWORD *)&v179[16 * v174 + 8] = v181;
          v185 = *((_QWORD *)v56 + 2);
          if ((unint64_t)v47 >= v185)
            goto LABEL_166;
          v131 = v185 - 1;
          memmove(v180, v180 + 16, 16 * (v185 - 1 - (_QWORD)v47));
          v132 = v179;
          *((_QWORD *)v56 + 2) = v185 - 1;
          v163 = v185 > 2;
          v21 = v240;
          v32 = v229;
          v35 = v228;
          v42 = v214;
          v57 = (uint64_t)v216;
          v47 = v217;
          if (!v163)
            goto LABEL_140;
        }
      }
      v131 = 1;
      v57 = (uint64_t)v216;
LABEL_140:
      v58 = v245[1];
      v55 = v234;
      if (v234 >= v58)
      {
        v47 = v232;
        goto LABEL_145;
      }
      continue;
    }
    break;
  }
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  v202 = v232;

  __break(1u);
LABEL_189:
  v203 = v232;

  __break(1u);
LABEL_190:
  v204 = v232;

  __break(1u);
LABEL_191:
  v205 = v232;

  __break(1u);
LABEL_192:

  v120 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
LABEL_193:
  v249 = (uint64_t)v47;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v120, &v249, v120, &type metadata for Int);
  __break(1u);
}

void sub_100BB7924(_QWORD **a1, void *a2, char a3, void (*a4)(_QWORD *, id, _QWORD))
{
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  id v12;
  _QWORD v13[2];

  v8 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v9 = *a1;
  v10 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    v9 = (_QWORD *)sub_100D16724(v9);
  v11 = v9[2];
  v13[0] = (char *)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v13[1] = v11;
  v12 = v10;
  a4(v13, v12, a3 & 1);

  *a1 = v9;
}

void sub_100BB79F0(void *a1, char a2)
{
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  unint64_t v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  NSString v25;
  id v26;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  if ((a2 & 1) != 0)
  {
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = objc_msgSend(v4, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);
    v15 = 0xEF3278322E646972;
  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v5, "localizedStringForKey:value:table:", v16, v17, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v10 = v19;

    v11 = objc_msgSend(v4, "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);
    v15 = 0xEB0000000074656CLL;
  }
  v20 = v14;

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

  if (v24)
  {
    objc_msgSend(a1, "setImage:", v24);

    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(a1, "setAccessibilityValue:", v25);

    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    objc_msgSend(a1, "setAccessibilityHint:", v26);

  }
  else
  {
    __break(1u);
  }
}

void sub_100BB7D70()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = type metadata accessor for CRLiOSAppDelegate();
    v3 = *(void **)(swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
    if (v3)
    {
      v4 = v3;
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    swift_unknownObjectRelease(v1);
  }
  else
  {
    __break(1u);
  }
}

void sub_100BB7EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char *v5;
  char *v6;
  _QWORD *v7;
  _OWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver] = 0;
  v7 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
  v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = 0;
  v8 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
  *v8 = 0u;
  v8[1] = 0u;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = 0;
  v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;
  v9 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections];
  v10 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections] = &_swiftEmptySetSingleton;
  v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems] = 0;
  v11 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone];
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *v11 = v17;
  v11[1] = v19;
  v20 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_alternateTitleForToolbarItemToSelectAllOrNone];
  v21 = objc_msgSend(v12, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  *v20 = v25;
  v20[1] = v27;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] = 0;
  v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, a1, a2, "Freeform/CRLiOSFolderGridViewController.swift", 45, 2, a3, 0);
  __break(1u);
}

void sub_100BB823C(uint64_t a1, SEL *a2, SEL *a3)
{
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;
  const char *v13;
  void *v14;
  id v15;

  v5 = (void *)objc_opt_self(UIApplication);
  v6 = objc_msgSend(v5, "sharedApplication");
  v7 = objc_msgSend(v6, "delegate");

  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = type metadata accessor for CRLiOSAppDelegate();
  v9 = *(void **)(swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0)
                + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  if (!v9)
  {
LABEL_9:
    v13 = "boardLibraryCommandController";
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v7);
    __break(1u);
    goto LABEL_10;
  }
  v10 = v9;
  v11 = objc_msgSend(v10, *a2, swift_unknownObjectRelease(v7).n128_f64[0]);

  if (v11)
  {
    v12 = objc_msgSend(v5, "sharedApplication");
    v13 = (const char *)objc_msgSend(v12, "delegate");

    if (v13)
    {
      v14 = *(void **)(swift_dynamicCastClassUnconditional(v13, v8, 0, 0, 0)
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v15, *a3, swift_unknownObjectRelease(v13).n128_f64[0]);

        return;
      }
      goto LABEL_11;
    }
LABEL_10:
    __break(1u);
LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v13);
    __break(1u);
  }
}

BOOL sub_100BB84F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[72];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1, v6);

  v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3830);
  if (v8 == 1)
  {
    v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v9, v19);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v11 = type metadata accessor for IndexPath(0);
    v12 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v11, v12);
    v15 = v14;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 40) = v15;
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:shouldBeginMultipleSelectionInteractionAt:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1405, "No item for index path: %@", 26, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"collectionView(_:shouldBeginMultipleSelectionInteractionAt:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1405, (uint64_t)"No item for index path: %@", 26, 2u);
    swift_setDeallocating(inited);
    v16 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v16);
  }
  return v8 != 1;
}

id sub_100BB86FC(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  Class isa;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void **aBlock;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  char v98[80];

  v88 = a1;
  v90 = type metadata accessor for IndexPath(0);
  v86 = *(_QWORD *)(v90 - 8);
  v4 = *(_QWORD *)(v86 + 64);
  __chkstk_darwin(v90);
  v85 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v87 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v91 = (uint64_t)&v77 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v12);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v77 - v20;
  v89 = v2;
  v22 = sub_100B787A8();
  v23 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2, v24);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E3830);
    v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v25, v98);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v27 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v90, v27);
    v30 = v29;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v30;
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1428, "No item for index path: %@", 26, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 1428, (uint64_t)"No item for index path: %@", 26, 2u);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v31);
    return 0;
  }
  v33 = (uint64_t)v87;
  v81 = v9;
  v79 = v16;
  v83 = v4;
  v82 = v23;
  v34 = v88;
  sub_1004B84E0((uint64_t)v14, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v35 = (uint64_t)v21;
  v36 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v37 = *(_QWORD *)(v36 - 8);
  v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v80(v91, 1, 1, v36);
  v38 = *(_QWORD *)&v89[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
  v39 = type metadata accessor for CRLBoardLibrary();
  v40 = swift_dynamicCastClass(v38, v39);
  v84 = v35;
  if (v40)
  {
    v41 = v40;
    sub_1004B8460(v35, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v42 = v15;
    if (swift_getEnumCaseMultiPayload(v18, v15) == 2)
    {
      v78 = v37;
      sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_unknownObjectRetain(v38);
      swift_bridgeObjectRelease();
      v43 = v33;
      v44 = sub_1004B84E0((uint64_t)v18, v33, type metadata accessor for CRLBoardIdentifier);
      v45 = *(_QWORD *)(*(_QWORD *)(v41 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                      + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
      __chkstk_darwin(v44);
      v76[2] = v33;
      swift_bridgeObjectRetain(v45);
      v46 = sub_100C9D0C0((uint64_t (*)(id *))sub_100BBC47C, (uint64_t)v76, v45);
      swift_bridgeObjectRelease();
      sub_100C9F8F8(v43, (uint64_t)v81);
      sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
      swift_unknownObjectRelease(v38);
      v47 = v82;
      v48 = v83;
      v37 = v78;
      v49 = (uint64_t)v81;
      v80((uint64_t)v81, 0, 1, v36);
      sub_100582338(v49, v91, &qword_1013E4690);
      v50 = v90;
      v42 = v15;
      v51 = v86;
      v52 = v85;
      goto LABEL_9;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v46 = 0;
    v50 = v90;
    v47 = v82;
  }
  else
  {
    v46 = 0;
    v50 = v90;
    v47 = v82;
    v42 = v15;
  }
  v51 = v86;
  v52 = v85;
  v48 = v83;
LABEL_9:
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v91, 1, v36)
    || *(_BYTE *)(v91 + *(int *)(v36 + 32)) != 1)
  {
    v74 = v84;
    v32 = sub_100B86D28(v84, v47, v46);

  }
  else if (v46)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v47, v50);
    v53 = *(unsigned __int8 *)(v51 + 80);
    v54 = v42;
    v55 = (v53 + 24) & ~v53;
    v56 = swift_allocObject(&unk_101296CC0, v55 + v48, v53 | 7);
    *(_QWORD *)(v56 + 16) = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v56 + v55, v52, v50);
    v57 = sub_1004B804C(&qword_1014072D0);
    v58 = *(unsigned __int8 *)(v79 + 80);
    v59 = (v58 + 32) & ~v58;
    v60 = swift_allocObject(v57, v59 + *(_QWORD *)(v79 + 72), v58 | 7);
    *(_OWORD *)(v60 + 16) = xmmword_100EF5E40;
    v61 = v60 + v59;
    sub_1004B8460(v84, v60 + v59, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v62 = v46;
    v63 = v34;
    sub_100AF8094(v60);
    swift_setDeallocating(v60);
    swift_arrayDestroy(v61, 1, v54);
    swift_deallocClassInstance(v60, 32, 7);
    sub_1004B7878((unint64_t *)&qword_101407360, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A520);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v65 = swift_allocObject(&unk_101296CE8, 32, 7);
    v66 = v89;
    *(_QWORD *)(v65 + 16) = v89;
    *(_QWORD *)(v65 + 24) = v62;
    v67 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v96 = sub_100BBAF44;
    v97 = v56;
    aBlock = _NSConcreteStackBlock;
    v93 = *(_QWORD *)"";
    v94 = sub_100528418;
    v95 = &unk_101296D00;
    v68 = _Block_copy(&aBlock);
    v69 = v97;
    swift_retain_n(v56, 2);
    v70 = v62;
    v71 = v66;
    swift_release(v69);
    v96 = sub_100BBAF50;
    v97 = v65;
    aBlock = _NSConcreteStackBlock;
    v93 = *(_QWORD *)"";
    v94 = sub_100524AAC;
    v95 = &unk_101296D28;
    v72 = _Block_copy(&aBlock);
    v73 = v97;
    swift_retain(v65);
    v32 = objc_msgSend(v67, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v68, v72, swift_release(v73).n128_f64[0]);
    swift_release(v65);
    swift_release(v56);

    v74 = v84;
    _Block_release(v72);
    _Block_release(v68);

    swift_release(v56);
  }
  else
  {
    v32 = 0;
    v74 = v84;
  }
  sub_1004B84A4(v74, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004CB800(v91, &qword_1013E4690);
  return v32;
}

void sub_100BB8FD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[9];

  v2 = sub_100B79E5C();
  sub_100B9BC30((uint64_t)a1, 2);
  v33 = v2;
  v3 = *(_QWORD *)(v2 + 48);
  Hasher.init(_seed:)(v34, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(2uLL);
  swift_bridgeObjectRetain_n(v3, 2);
  v32 = a1;
  v4 = a1;
  NSObject.hash(into:)(v34);
  v5 = Hasher._finalize()();
  v6 = -1 << *(_BYTE *)(v3 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_QWORD *)(v3 + 48) + 16 * v7;
      if (*(_BYTE *)(v9 + 8) == 2)
      {
        v10 = *(void **)v9;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v11 = v4;
        sub_1006B8360(v10, 2u);
        v12 = static NSObject.== infix(_:_:)(v10, v11);

        sub_1006B8384(v10, 2u);
        if ((v12 & 1) != 0)
          break;
      }
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();

    goto LABEL_23;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = v4;
  if (v15 <= v14)
  {
    v18 = v14 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_100AE204C(v18);
    else
      sub_100AF10B8(v18);
    Hasher.init(_seed:)(v34, *(_QWORD *)(v3 + 40));
    Hasher._combine(_:)(2uLL);
    v19 = v16;
    NSObject.hash(into:)(v34);

    v20 = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v7 = v20 & ~v21;
    if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v22 = ~v21;
      while (1)
      {
        v23 = *(_QWORD *)(v3 + 48) + 16 * v7;
        if (*(_BYTE *)(v23 + 8) == 2)
        {
          v24 = *(void **)v23;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          v25 = v19;
          sub_1006B8360(v24, 2u);
          v26 = static NSObject.== infix(_:_:)(v24, v25);

          sub_1006B8384(v24, 2u);
          if ((v26 & 1) != 0)
            break;
        }
        v7 = (v7 + 1) & v22;
        if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_19;
      }
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason);
      __break(1u);
LABEL_19:
      v17 = v32;
    }
    else
    {
      v17 = v32;
    }
  }
  else
  {
    v17 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_100AEB3C0();
  }
  *(_QWORD *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
  v27 = *(_QWORD *)(v3 + 48) + 16 * v7;
  *(_QWORD *)v27 = v17;
  *(_BYTE *)(v27 + 8) = 2;
  v28 = *(_QWORD *)(v3 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (!v29)
  {
    *(_QWORD *)(v3 + 16) = v30;
    swift_bridgeObjectRelease();

LABEL_23:
    v31 = *(_QWORD *)(v33 + 48);
    swift_bridgeObjectRetain(v31);
    sub_100B9A254(v3);
    *(_QWORD *)(v33 + 48) = v3;
    swift_bridgeObjectRelease();
    sub_100B9A568(v31);
    swift_bridgeObjectRelease();
    swift_release(v33);
    return;
  }
  __break(1u);
}

double sub_100BB9358(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  void *v25;
  unsigned __int8 v26;
  double result;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD v31[9];

  v2 = sub_100B79E5C();
  v3 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain(v3);
  swift_release(v2);
  if (*(_QWORD *)(v3 + 16))
  {
    Hasher.init(_seed:)(v31, *(_QWORD *)(v3 + 40));
    Hasher._combine(_:)(2uLL);
    v29 = a1;
    NSObject.hash(into:)(v31);
    v4 = Hasher._finalize()();
    v5 = -1 << *(_BYTE *)(v3 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v7 = ~v5;
      while (1)
      {
        v8 = *(_QWORD *)(v3 + 48) + 16 * v6;
        if (*(_BYTE *)(v8 + 8) == 2)
        {
          v9 = *(void **)v8;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          v10 = v29;
          sub_1006B8360(v9, 2u);
          v11 = static NSObject.== infix(_:_:)(v9, v10);

          sub_1006B8384(v9, 2u);
          if ((v11 & 1) != 0)
            break;
        }
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease();

      v12 = sub_100B79E5C();
      sub_100B9BC30((uint64_t)v10, 2);
      v13 = *(_QWORD *)(v12 + 48);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v13 + 40));
      Hasher._combine(_:)(2uLL);
      swift_bridgeObjectRetain_n(v13, 2);
      v14 = v10;
      NSObject.hash(into:)(v31);

      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v13 + 32);
      v17 = v15 & ~v16;
      if (((*(_QWORD *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      {
        v30 = (id)v12;
        v18 = ~v16;
        while (1)
        {
          v19 = *(_QWORD *)(v13 + 48) + 16 * v17;
          if (*(_BYTE *)(v19 + 8) == 2)
          {
            v20 = *(void **)v19;
            v21 = v14;
            sub_1006B8360(v20, 2u);
            v22 = static NSObject.== infix(_:_:)(v20, v21);

            sub_1006B8384(v20, 2u);
            if ((v22 & 1) != 0)
              break;
          }
          v17 = (v17 + 1) & v18;
          if (((*(_QWORD *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v12 = (uint64_t)v30;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
        v31[0] = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100AEB3C0();
          v13 = v31[0];
        }
        v24 = *(_QWORD *)(v13 + 48) + 16 * v17;
        v25 = *(void **)v24;
        v26 = *(_BYTE *)(v24 + 8);
        sub_100BA1C50(v17);
        v13 = v31[0];
        swift_bridgeObjectRelease();
        sub_1006B8384(v25, v26);
        v12 = (uint64_t)v30;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_19:
      v28 = *(_QWORD *)(v12 + 48);
      swift_bridgeObjectRetain(v28);
      sub_100B9A254(v13);
      *(_QWORD *)(v12 + 48) = v13;
      swift_bridgeObjectRelease();
      sub_100B9A568(v28);
      swift_bridgeObjectRelease();
      *(_QWORD *)&result = swift_release(v12).n128_u64[0];
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100BB96E8(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  _BYTE v46[12];
  int v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE v50[72];
  _BYTE v51[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v8);
  v10 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __chkstk_darwin(v15);
  v18 = &v46[-v17];
  if (!a1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v16);
    return sub_1004CB800((uint64_t)v10, &qword_1013E0270);
  }
  v48 = v7;
  v49 = v2;
  v19 = objc_msgSend(a1, "recordID", v16.n128_f64[0]);
  v20 = objc_msgSend(v19, "zoneID");

  sub_100B38068((uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1004CB800((uint64_t)v10, &qword_1013E0270);
  v47 = a2;
  sub_1004B84E0((uint64_t)v10, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v51, 0, 0);
  v21 = (void *)static OS_os_log.shareState;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v50);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v24 = v21;
  v25 = UUID.uuidString.getter(v24);
  v27 = v26;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(inited + 40) = v27;
  v29 = static os_log_type_t.default.getter(v28);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v29, "Stopped sharing board: %@", 25, 2, inited);
  swift_setDeallocating(inited);
  v30 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v30);

  v31 = v49;
  sub_100B7D4A8((uint64_t)v18);
  v32 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v33 = type metadata accessor for CRLBoardLibrary();
  v34 = swift_dynamicCastClass(v32, v33);
  if (v34)
  {
    v35 = v34;
    v36 = type metadata accessor for TaskPriority(0);
    v37 = (uint64_t)v48;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v48, 1, 1, v36);
    sub_1004B8460((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain_n(v32, 2);
    v38 = static MainActor.shared.getter(a1);
    v39 = *(unsigned __int8 *)(v12 + 80);
    v40 = (v39 + 40) & ~v39;
    v41 = (v13 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    v42 = (_QWORD *)swift_allocObject(&unk_101296540, v41 + 9, v39 | 7);
    v42[2] = v38;
    v42[3] = &protocol witness table for MainActor;
    v42[4] = v35;
    sub_1004B84E0((uint64_t)v14, (uint64_t)v42 + v40, type metadata accessor for CRLBoardIdentifier);
    v43 = (char *)v42 + v41;
    *(_QWORD *)v43 = a1;
    v43[8] = v47 & 1;
    v44 = sub_100618920(v37, (uint64_t)&unk_1014072B8, (uint64_t)v42);
    swift_unknownObjectRelease(v32);
    swift_release(v44);
  }
  return sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
}

void sub_100BB9AE0(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[8];
  _BYTE v18[72];
  _BYTE v19[24];

  v2 = v1;
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v19, 0, 0);
  v4 = (void *)static OS_os_log.shareState;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(a1, v17, v16);
  v7 = v16[1];
  v8 = v16[2];
  v9 = v4;
  v10 = Error.localizedDescription.getter(v7, v8);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "Share failed with error %@", 26, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  sub_100BB23B4(a1, v2);
}

uint64_t sub_100BB9C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return swift_deallocObject(v0, v5 + 9, v4);
}

uint64_t sub_100BB9CF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  v13 = (_QWORD *)swift_task_alloc(dword_1014072B4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_100B8F804(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100BB9DC0(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100B86404);
}

uint64_t sub_100BB9DCC()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release, 48);
}

uint64_t sub_100BB9DE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1014072DC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100B96000(a1, v4, v5, v7, v6);
}

void sub_100BB9E5C(uint64_t a1)
{
  uint64_t v1;

  sub_100B813C4(a1, v1, (void (*)(_QWORD *, __n128))sub_100B8100C);
}

void sub_100BB9E7C(uint64_t a1)
{
  uint64_t v1;

  sub_100B81170(a1, v1);
}

void sub_100BB9E84(uint64_t a1)
{
  uint64_t v1;

  sub_100B813C4(a1, v1, (void (*)(_QWORD *, __n128))sub_100B8157C);
}

uint64_t sub_100BB9EA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100BB9ED0(uint64_t a1)
{
  uint64_t v1;

  return sub_100B9635C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100BB9ED8()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100BB9EF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1014072EC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100B964B4(a1, v4, v5, v7, v6);
}

uint64_t sub_100BB9F68()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100BB9FBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1014072FC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100B93BBC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100BBA05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_10140E194);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1004CF80C;
  return sub_100CB6BE8(a1, a2, v7, v6);
}

uint64_t sub_100BBA0C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100BBA114(uint64_t a1)
{
  uint64_t v1;

  sub_100B95D98(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100BBA124()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100BBA168()
{
  uint64_t v0;

  sub_100B95A14(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100BBA180(uint64_t a1)
{
  uint64_t v1;

  return sub_100B95D34(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_100BBA18C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013FA380) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_BYTE *)(v1 + 48);
  v10 = v1 + ((v4 + 49) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10140733C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100B95290(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100BBA23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 49) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BBA2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100BBA348()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013FA380) - 8) + 80);
  return sub_100B95868(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), v0 + ((v1 + 33) & ~v1));
}

uint64_t sub_100BBA380()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100BBA3BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_101407354);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B96A58(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100BBA43C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100BBA460(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_100B816D0(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_100BBA46C(uint64_t a1)
{
  uint64_t v1;

  sub_100B82140(a1, v1);
}

void sub_100BBA474(uint64_t a1)
{
  uint64_t v1;

  sub_100B821A8(a1, v1);
}

void sub_100BBA47C(uint64_t a1)
{
  uint64_t v1;

  sub_100B82210(a1, v1);
}

void sub_100BBA484(uint64_t a1)
{
  uint64_t v1;

  sub_100B8072C(a1, v1);
}

void sub_100BBA48C(uint64_t a1)
{
  uint64_t v1;

  sub_100B82A14(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_100BBA498()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100BBA4BC(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_100BA0000(a1, a2, v2);
}

void sub_100BBA4C4(uint64_t a1)
{
  uint64_t v1;

  sub_100B80A58(a1, v1);
}

void sub_100BBA4CC(uint64_t a1)
{
  uint64_t v1;

  sub_100B80F90(a1, v1);
}

uint64_t sub_100BBA4D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100BBA4F8(_QWORD *a1)
{
  uint64_t v1;

  return sub_100B7E32C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_100BBA504()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100BBA530(_QWORD *a1)
{
  uint64_t v1;

  return sub_100B7E5FC(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100BBA544()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100BBA568()
{
  uint64_t v0;

  sub_100B7C5B4(*(void **)(v0 + 16));
}

void sub_100BBA570()
{
  uint64_t v0;

  sub_100B79F38(v0);
}

id sub_100BBA578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100B9E7AC(a1, a2, v2);
}

id sub_100BBA580(uint64_t a1)
{
  uint64_t v1;

  return sub_100B9EDEC(a1, v1);
}

void sub_100BBA588(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100B9F664(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), a2);
}

double sub_100BBA598(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  return sub_100B9F1C4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_100BBA600()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BBA624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100BBA740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  return sub_100B9F428(a1, *(uint64_t (**)(uint64_t, __n128))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

void sub_100BBA780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100B9F854(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))sub_100BAD550);
}

void sub_100BBA7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100B9F854(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))sub_100BAF4C8);
}

uint64_t sub_100BBA7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = sub_1004B804C(&qword_101407398);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_101407390);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  v12 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100BBA884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_1004B804C(&qword_101407398) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_101407390) - 8) + 80);
  return sub_100B9F920(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, v3 + ((v8 + v9 + v10) & ~v10));
}

unint64_t sub_100BBA910(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100B9FA78(a1, a2, a3, a4, v4);
}

uint64_t sub_100BBA918()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BBA940(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100DAAA5C);
}

uint64_t sub_100BBA94C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4));
}

uint64_t sub_100BBA9A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1014131CC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100DABB30(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100BBAA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(double *)(v1 + v7);
  v12 = v1 + v5;
  v13 = (uint64_t *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  v14 = *v13;
  v15 = v13[1];
  v16 = (_QWORD *)swift_task_alloc(dword_1014131C4);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_1004CFD00;
  return sub_100DAB684(v11, a1, v8, v9, v12, v10, v14, v15);
}

uint64_t sub_100BBAB04(uint64_t a1)
{
  return sub_1007C43F0(a1);
}

uint64_t sub_100BBAB10(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = *((_QWORD *)v1 + 6);
  v9 = v1[7];
  v10 = *((_QWORD *)v1 + 8);
  v11 = *((_QWORD *)v1 + 9);
  v12 = (_QWORD *)swift_task_alloc(dword_1014131BC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1004CFD00;
  return sub_100DAAD94(v9, a1, v4, v5, v6, v7, v8, v10, v11);
}

uint64_t sub_100BBABDC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[6]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100BBAC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v4);
}

uint64_t sub_100BBACE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();

  swift_release(*(_QWORD *)(v0 + 72));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_100BBAE1C()
{
  uint64_t v0;

  sub_100B878CC(v0);
}

uint64_t sub_100BBAE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100BBAEA0()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_100B8792C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100BBAED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BBAF44()
{
  return sub_100BBAFEC((uint64_t (*)(_QWORD, uint64_t))sub_100B866B0);
}

UIMenu sub_100BBAF50(uint64_t a1)
{
  uint64_t v1;

  return sub_100B867F0(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_100BBAF60(uint64_t a1)
{
  uint64_t v1;

  sub_100B91C38(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100BBAF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BBAFE0()
{
  return sub_100BBAFEC((uint64_t (*)(_QWORD, uint64_t))sub_100B8F9E0);
}

uint64_t sub_100BBAFEC(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_100BBB02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;

  return swift_deallocObject(v0, v11, v3 | 7);
}

Class sub_100BBB164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100B8FBA8(a1, *(void **)(v1 + 16), v1 + v4, *(char **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100BBB1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 24));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_100BBB2DC(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  sub_100B92468(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

uint64_t sub_100BBB330(uint64_t a1)
{
  return sub_100BBB344(a1, (uint64_t)sub_100B8100C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100B92B44);
}

uint64_t sub_100BBB344(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a2);
}

uint64_t sub_100BBB3A0(uint64_t a1)
{
  return sub_100BBB344(a1, (uint64_t)sub_100B89280, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100876630);
}

uint64_t sub_100BBB3BC(uint64_t a1)
{
  return sub_100BBB344(a1, (uint64_t)sub_100B8157C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100B92B44);
}

uint64_t sub_100BBB3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_100BBB4EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  sub_100B97C44(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

void sub_100BBB53C()
{
  uint64_t v0;

  sub_100B98868(*(void **)(v0 + 16));
}

uint64_t sub_100BBB544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v10));

  return swift_deallocObject(v0, v11 + 8, v3 | 7);
}

uint64_t sub_100BBB680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100B98988(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100BBB6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v16 = *(unsigned __int8 *)(v1 + 80);
  v2 = (v16 + 32) & ~v16;
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = *(_QWORD *)(v6 + 64);
  v15 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v2;
  v9 = type metadata accessor for UUID(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v13(v8, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v3));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4));
  swift_bridgeObjectRelease();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v7, v5);
  if (EnumCaseMultiPayload == 2)
  {
    v13(v0 + v7, v9);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v11 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v0 + v7, 5, v11))
    {
      v13(v0 + v7, v9);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v7 + v14, v16 | v15 | 7);
}

uint64_t sub_100BBB8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 16);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + v5);
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = (_QWORD *)swift_task_alloc(dword_10140741C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_100B98D48(a1, v16, v15, v1 + v4, v9, v10, v11, v12);
}

uint64_t sub_100BBB9D4(uint64_t a1)
{
  return sub_100BBB344(a1, (uint64_t)sub_100B89698, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))sub_100876630);
}

uint64_t sub_100BBB9EC(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100B91F84);
}

uint64_t sub_100BBB9FC(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100B91DF8);
}

uint64_t sub_100BBBA0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10140742C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B8EBCC(a1, v5, v6, v7, v8);
}

uint64_t sub_100BBBAA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_101407444);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B92BC4(a1, v5, v6, v7, v8);
}

uint64_t sub_100BBBB3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10140745C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B8BBD4(a1, v5, v6, v7, v8);
}

void sub_100BBBBD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_100B8E3C8(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_100BBBBD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BBBBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

double sub_100BBBC8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  return sub_100B8E968(a1, a2, a3, a4, *(void **)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_100BBBCF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100BBBD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100BBBDD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_101407484);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100B8EB58(a1, v5, v6, v7, v8);
}

uint64_t sub_100BBBE68(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100B92A28);
}

uint64_t sub_100BBBE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100BBBF94(uint64_t a1)
{
  return sub_100BBA94C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100B9283C);
}

uint64_t sub_100BBBFA0()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_100BBBFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v10));

  return swift_deallocObject(v0, v11 + 8, v3 | 7);
}

double sub_100BBC100()
{
  return sub_100B7E928();
}

double sub_100BBC108(uint64_t a1)
{
  uint64_t v1;

  return sub_100B7B8C0(a1, v1, (uint64_t)&unk_101297490, (uint64_t)&unk_1014074B8);
}

double sub_100BBC130(uint64_t a1)
{
  uint64_t v1;

  return sub_100B7B8C0(a1, v1, (uint64_t)&unk_101297468, (uint64_t)&unk_1014074A8);
}

uint64_t sub_100BBC15C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1014074A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100B7B9E0(a1, v4, v5, v6);
}

uint64_t sub_100BBC1CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1014074B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100B7B854(a1, v4, v5, v6);
}

void sub_100BBC238(uint64_t a1)
{
  uint64_t v1;

  sub_100B9E36C(a1, v1);
}

void sub_100BBC240(uint64_t a1)
{
  uint64_t v1;

  sub_100B9E66C(a1, v1);
}

double sub_100BBC248(unint64_t a1)
{
  uint64_t v1;

  return sub_100B9CCD8(a1, v1);
}

uint64_t sub_100BBC250()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100BBC27C()
{
  uint64_t v0;

  sub_100B9CD34(*(_QWORD *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_100BBC288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_100BBC2B4(unint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_100559C80(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100BBC2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 5, v7))
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100BBC3EC()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 49);
}

void sub_100BBC404()
{
  uint64_t v0;
  void (**v1)(void);

  v1 = (void (**)(void))objc_msgSend(*(id *)(v0 + 16), "actionBlock");
  v1[2]();
  _Block_release(v1);
}

uint64_t sub_100BBC448()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100BBC47C(_QWORD *a1)
{
  return sub_1006F01E8(a1) & 1;
}

uint64_t sub_100BBC494(uint64_t a1)
{
  return sub_10050CAF8(a1) & 1;
}

id sub_100BBC604(void *a1)
{
  id v2;
  id v3;
  void *v4;
  BOOL v5;
  char **v6;

  v2 = objc_msgSend(a1, "accessibilityContrast");
  v3 = objc_msgSend(a1, "userInterfaceStyle");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3 == (id)2 && v2 == (id)1;
  v6 = &selRef_blackColor;
  if (!v5)
    v6 = &selRef_whiteColor;
  return objc_msgSend(v4, *v6);
}

double CRLiOSPageTitleButton.insets.getter()
{
  return sub_100BBC748(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets);
}

uint64_t CRLiOSPageTitleButton.insets.setter(double a1, double a2, double a3, double a4)
{
  return sub_100BBC808(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets, a1, a2, a3, a4);
}

uint64_t (*CRLiOSPageTitleButton.insets.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

double sub_100BBC6F8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = a1 + *a3;
  swift_beginAccess(v3, v5, 0, 0);
  return *(double *)v3;
}

double CRLiOSPageTitleButton.hitTestingInsets.getter()
{
  return sub_100BBC748(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets);
}

double sub_100BBC748(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return *(double *)v2;
}

uint64_t sub_100BBC798(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, _QWORD *a7)
{
  double *v11;
  uint64_t result;
  _BYTE v13[24];

  v11 = (double *)(a1 + *a7);
  result = swift_beginAccess(v11, v13, 1, 0);
  *v11 = a2;
  v11[1] = a3;
  v11[2] = a4;
  v11[3] = a5;
  return result;
}

uint64_t CRLiOSPageTitleButton.hitTestingInsets.setter(double a1, double a2, double a3, double a4)
{
  return sub_100BBC808(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets, a1, a2, a3, a4);
}

uint64_t sub_100BBC808(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double *v10;
  uint64_t result;
  _BYTE v12[24];

  v10 = (double *)(v5 + *a1);
  result = swift_beginAccess(v10, v12, 1, 0);
  *v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  return result;
}

uint64_t (*CRLiOSPageTitleButton.hitTestingInsets.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets, a1, 33, 0);
  return j__swift_endAccess_0;
}

id CRLiOSPageTitleButton.__allocating_init(title:insets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return CRLiOSPageTitleButton.init(title:insets:)(a1, a2, a3, a4, a5, a6);
}

id CRLiOSPageTitleButton.init(title:insets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  __int128 v29;
  double *v30;
  objc_class *v31;
  id v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v48 = a1;
  v49 = a2;
  v11 = sub_1004B804C(&qword_1013F6AE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for UIButton.Configuration(0);
  v18 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont;
  v22 = (void *)objc_opt_self(UIFont);
  v23 = v6;
  *(_QWORD *)&v6[v21] = objc_msgSend(v22, "systemFontOfSize:weight:", 14.0, UIFontWeightRegular);
  v24 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor;
  v25 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100BBC604;
  v52 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004B3678;
  aBlock[3] = &unk_1012976C0;
  v26 = _Block_copy(aBlock);
  v27 = objc_msgSend(v25, "initWithDynamicProvider:", v26);
  _Block_release(v26);
  swift_release(v52);
  *(_QWORD *)&v23[v24] = v27;
  v28 = &v23[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
  v29 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v28 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v28 + 1) = v29;
  v30 = (double *)&v23[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets];
  *v30 = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;

  v31 = (objc_class *)type metadata accessor for CRLiOSPageTitleButton();
  v50.receiver = v23;
  v50.super_class = v31;
  v32 = objc_msgSendSuper2(&v50, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  static UIButton.Configuration.plain()(v32);
  UIButton.Configuration.title.setter(v48, v49, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for UIButton.Configuration.CornerStyle.large(_:), v14);
  v34 = UIButton.Configuration.cornerStyle.setter(v17);
  v35 = v47;
  (*(void (**)(char *, char *, uint64_t, __n128))(v18 + 16))(v13, v20, v47, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v35);
  v36 = v32;
  UIButton.configuration.setter(v13);

  v37 = objc_msgSend(v36, "layer");
  objc_msgSend(v37, "setCornerRadius:", 7.5);

  objc_msgSend(v36, "setPointerInteractionEnabled:", 1);
  v38 = swift_allocObject(&unk_1012976F8, 24, 7);
  *(_QWORD *)(v38 + 16) = v36;
  v39 = v36;
  UIButton.pointerStyleProvider.setter(sub_100BBD8FC, v38);
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v39, "setShowsLargeContentViewer:", 1);
  v40 = objc_msgSend((id)objc_opt_self(CRLiOSVisualEffectHelper), "sharedHelper");
  v41 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v42 = swift_allocObject(v41, 40, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v42 + 32) = v39;
  aBlock[0] = v42;
  specialized Array._endMutation()(v42);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v43 = v39;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v40, "startHandlingTouchUpDownAnimationsForControl:withViews:", v43, isa, swift_bridgeObjectRelease().n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v35);
  return v43;
}

id CRLiOSPageTitleButton.__deallocating_deinit()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(CRLiOSVisualEffectHelper), "sharedHelper");
  objc_msgSend(v1, "stopHandlingTouchUpDownAnimationsForControl:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CRLiOSPageTitleButton();
  return objc_msgSendSuper2(&v3, "dealloc");
}

id CRLiOSAutoSizingHostingController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

Swift::Void __swiftcall CRLiOSPageTitleButton.setAttributedTitle(_:for:)(NSAttributedString_optional _, UIControlState a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(_QWORD *)&_.is_nil;
  if (_.value.super.isa)
  {
    v4 = -[objc_class string](_.value.super.isa, "string", a2);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;

    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v2, "setTitle:forState:", v7, v3);

}

Swift::Void __swiftcall CRLiOSPageTitleButton.updateConfiguration()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  int v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  NSString v45;
  char v47[24];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v2);
  v4 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  __chkstk_darwin(v5);
  v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C(&qword_1013F6AE0);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v47[-v12 - 8];
  v14 = type metadata accessor for UIButton.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v19 = __chkstk_darwin(v18).n128_u64[0];
  v21 = &v47[-v20 - 8];
  v22 = objc_msgSend(v0, "isSelected", v19);
  if ((_DWORD)v22)
  {
    v23 = static UIButton.Configuration.filled()(v22);
  }
  else
  {
    v24 = objc_msgSend(v0, "isHighlighted");
    if ((_DWORD)v24)
      v23 = static UIButton.Configuration.tinted()(v25);
    else
      v23 = static UIButton.Configuration.plain()(v24);
  }
  UIButton.configuration.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100860F34((uint64_t)v13);
  }
  else
  {
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v27 = UIButton.Configuration.title.getter(v26);
    v30 = UIButton.Configuration.title.setter(v27, v28, v29);
    UIButton.Configuration.cornerStyle.getter(v30);
    UIButton.Configuration.cornerStyle.setter(v7);
    v31 = sub_1003A91F4();
    v32 = (double *)&v1[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets], v47, 0, 0);
    v33 = 1;
    if (v31)
      v34 = 3;
    else
      v34 = 1;
    if (!v31)
      v33 = 3;
    UIButton.Configuration.contentInsets.setter(*v32, v32[v34], v32[2], v32[v33]);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  if (objc_msgSend(v1, "isSelected"))
    v35 = *(id *)&v1[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor];
  else
    v35 = objc_msgSend(v1, "tintColor");
  v36 = v35;
  v37 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont];
  v38 = swift_allocObject(&unk_101297720, 32, 7);
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = v36;
  v39 = v37;
  v40 = v36;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_100BBDD24, v38);
  v41 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v4, 0, 1, v41);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v21, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  v42 = UIButton.configuration.setter(v10);
  UIButton.Configuration.title.getter(v42);
  if (v44)
  {
    v45 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v43 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v1, "setAccessibilityLabel:", v45, v43);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
}

uint64_t sub_100BBD468@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t KeyPath;
  void *v18;

  v8 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  KeyPath = swift_getKeyPath(byte_100F293E8);
  v9 = swift_getKeyPath(byte_100F29418, &KeyPath);
  v18 = a2;
  v10 = sub_1004CB548();
  v11 = a2;
  AttributeContainer.subscript.setter(&v18, v9, v10);
  v16 = swift_getKeyPath(asc_100F29458);
  v12 = swift_getKeyPath(byte_100F29488, &v16);
  v18 = a3;
  v13 = sub_100BBDD88();
  v14 = a3;
  return AttributeContainer.subscript.setter(&v18, v12, v13);
}

uint64_t sub_100BBD550(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v4 = *a1;
  v5 = v2;
  sub_1004B804C(&qword_1014075D0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v5, &v4) & 1;
}

id CRLiOSPageTitleButton.point(inside:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double *v16;
  _BYTE v17[24];
  objc_super v18;
  CGPoint v19;
  CGRect v20;

  if (objc_msgSend(v3, "isEnabled") && (objc_msgSend(v3, "isHidden") & 1) == 0)
  {
    objc_msgSend(v3, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = (double *)&v3[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
    swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets], v17, 0, 0);
    v20.origin.x = sub_1008E3670(v9, v11, v13, v15, *v16, v16[1]);
    v19.x = a2;
    v19.y = a3;
    return (id)CGRectContainsPoint(v20, v19);
  }
  else
  {
    v18.receiver = v3;
    v18.super_class = (Class)type metadata accessor for CRLiOSPageTitleButton();
    return objc_msgSendSuper2(&v18, "pointInside:withEvent:", a1, a2, a3);
  }
}

id CRLiOSPageTitleButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void CRLiOSPageTitleButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSPageTitleButton", 30, "init(frame:)", 12, 0);
  __break(1u);
}

double sub_100BBD8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BBD8B0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for CRLiOSPageTitleButton()
{
  return objc_opt_self(_TtC8Freeform21CRLiOSPageTitleButton);
}

uint64_t sub_100BBD8D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BBD8FC()
{
  return sub_100BBD924();
}

uint64_t sub_100BBD924()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  id v39;
  char *v40;

  v0 = sub_1004B804C(&qword_1014075D8);
  v1 = __chkstk_darwin(v0);
  v40 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIPointerShape(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for UIPointerEffect(0, v5);
  v8 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v38 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v37 - v12);
  v14 = (void *)UIPointerEffect.preview.getter(v11);
  v15 = (int *)sub_1004B804C(&qword_1014075E0);
  v16 = (char *)v13 + v15[12];
  v17 = v15[16];
  v18 = v15[20];
  *v13 = v14;
  v19 = enum case for UIPointerEffect.TintMode.underlay(_:);
  v20 = type metadata accessor for UIPointerEffect.TintMode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v16, v19, v20);
  *((_BYTE *)v13 + v17) = 0;
  *((_BYTE *)v13 + v18) = 0;
  v21 = v37;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v13, enum case for UIPointerEffect.hover(_:), v37);
  v22 = v14;
  v23 = objc_msgSend(v39, "bounds");
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = static UIPointerShape.defaultCornerRadius.getter(v23);
  *(_QWORD *)v7 = v25;
  *((_QWORD *)v7 + 1) = v27;
  *((_QWORD *)v7 + 2) = v29;
  *((_QWORD *)v7 + 3) = v31;
  *((double *)v7 + 4) = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for UIPointerShape.roundedRect(_:), v3);
  sub_1004B8930(0, &qword_1014075E8, UIPointerStyle_ptr);
  v33 = v38;
  (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 16))(v38, v13, v21);
  v34 = v40;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v40, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v34, 0, 1, v3);
  v35 = UIPointerStyle.init(effect:shape:)(v33, v34);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v13, v21);
  return v35;
}

void _s8Freeform21CRLiOSPageTitleButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  char *v6;
  __int128 v7;
  _QWORD aBlock[5];
  uint64_t v9;

  v1 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 14.0, UIFontWeightRegular);
  v2 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor;
  v3 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100BBC604;
  v9 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004B3678;
  aBlock[3] = &unk_101297778;
  v4 = _Block_copy(aBlock);
  v5 = objc_msgSend(v3, "initWithDynamicProvider:", v4);
  _Block_release(v4);
  swift_release(v9);
  *(_QWORD *)&v0[v2] = v5;
  v6 = &v0[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
  v7 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v6 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v6 + 1) = v7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSPageTitleButton.swift", 36, 2, 99, 0);
  __break(1u);
}

uint64_t sub_100BBDCF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BBDD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100BBD468(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_100BBDD38()
{
  return 8;
}

double sub_100BBDD44(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

double sub_100BBDD4C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

_QWORD *sub_100BBDD60(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_100BBDD6C()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_100BBDD88()
{
  unint64_t result;

  result = qword_1014075C8;
  if (!qword_1014075C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_1014075C8);
  }
  return result;
}

void sub_100BBDDCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_100BBDD88();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_100BBDDF0()
{
  return 8;
}

uint64_t sub_100BBDE00()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1014075D0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

id sub_100BBDE94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSharingStringsProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSharingStringsProvider()
{
  return objc_opt_self(_TtC8Freeform25CRLSharingStringsProvider);
}

uint64_t sub_100BBDEE4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &type metadata for CRLAppleAccountFeatureFlags;
  v6[4] = sub_1006CD0F8();
  isFeatureEnabled(_:)(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100BBE018(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(a1 + 16);
  if (v1
    && (v2 = objc_msgSend(v1, "owner"),
        v3 = sub_1009B32A4(0),
        v5 = v4,
        v2,
        v5))
  {
    v6 = (void *)objc_opt_self(NSBundle);
    v7 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRetain(v5).n128_f64[0]);
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v7, "localizedStringForKey:value:table:", v14, v15, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v18 = v17;
    v20 = v19;

    v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v22 + 32) = v3;
    *(_QWORD *)(v22 + 40) = v5;
    v23 = String.init(format:_:)(v18, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    return v13;
  }
}

uint64_t sub_100BBE2BC(unint64_t a1)
{
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;

  if (a1 > 1)
  {
    v7 = a1;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLFollowFailedReason, &v7, &type metadata for CRLFollowFailedReason, &type metadata for Int);
    __break(1u);
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    return v5;
  }
  return result;
}

uint64_t sub_100BBE3DC(unint64_t a1)
{
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;

  if (a1 > 1)
  {
    v7 = a1;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLFollowFailedReason, &v7, &type metadata for CRLFollowFailedReason, &type metadata for Int);
    __break(1u);
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    return v5;
  }
  return result;
}

uint64_t sub_100BBE530(uint64_t a1, uint64_t a2)
{
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;
  v11 = v10;

  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v13 + 56) = &type metadata for String;
  *(_QWORD *)(v13 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v14 = String.init(format:_:)(v9, v11, v13);
  swift_bridgeObjectRelease();
  return v14;
}

_QWORD *sub_100BBE674(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *__dst;
  char *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    v12 = (void **)((char *)v4 + v11);
    v13 = (void **)((char *)a2 + v11);
    v14 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_1004B804C(&qword_1013F5478);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v19 = *v13;
      v18 = v13[1];
      *v12 = *v13;
      v12[1] = v18;
      v20 = v13[2];
      v12[2] = v20;
      *((_BYTE *)v12 + 24) = *((_BYTE *)v13 + 24);
      v21 = *(int *)(v14 + 28);
      __dst = (char *)v12 + v21;
      v36 = (char *)v13 + v21;
      v22 = type metadata accessor for URL(0);
      v34 = *(_QWORD *)(v22 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v34 + 48);
      v24 = v19;
      v25 = swift_bridgeObjectRetain(v20);
      if (v23(v36, 1, v22, v25))
      {
        v26 = sub_1004B804C(&qword_1013E04D0);
        memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v36, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v27 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)v4 + v27) = *((_BYTE *)a2 + v27);
    v28 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
  }
  return v4;
}

uint64_t type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101407730, (uint64_t)&nominal type descriptor for CRLBoardViewModelMetadata.ShareMetadata);
}

uint64_t sub_100BBE8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(a1 + *(int *)(a2 + 28));
  v7 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {

    swift_bridgeObjectRelease();
    v9 = (char *)v6 + *(int *)(v7 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  return result;
}

_WORD *sub_100BBE998(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *__dst;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  v11 = (void **)((char *)a1 + v10);
  v12 = (void **)((char *)a2 + v10);
  v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_1004B804C(&qword_1013F5478);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v17 = *v12;
    v16 = v12[1];
    *v11 = *v12;
    v11[1] = v16;
    v18 = v12[2];
    v11[2] = v18;
    *((_BYTE *)v11 + 24) = *((_BYTE *)v12 + 24);
    v19 = *(int *)(v13 + 28);
    v33 = (char *)v12 + v19;
    __dst = (char *)v11 + v19;
    v20 = type metadata accessor for URL(0);
    v32 = *(_QWORD *)(v20 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v32 + 48);
    v22 = v17;
    v23 = swift_bridgeObjectRetain(v18);
    if (v21(v33, 1, v20, v23))
    {
      v24 = sub_1004B804C(&qword_1013E04D0);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v33, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v25 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  v26 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  v30 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  return a1;
}

_BYTE *sub_100BBEBA8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  const void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v45;
  unsigned int (*v46)(_BYTE *, uint64_t, uint64_t, __n128);
  void *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (uint64_t)&a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v29 = *(void **)v11;
      v30 = *(void **)v12;
      *(_QWORD *)v11 = *(_QWORD *)v12;
      v31 = v30;

      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      v32 = *((_QWORD *)v12 + 2);
      *(_QWORD *)(v11 + 16) = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v11 + 24) = v12[24];
      v33 = *(int *)(v13 + 28);
      v34 = (void *)(v11 + v33);
      v35 = &v12[v33];
      v36 = type metadata accessor for URL(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
      LODWORD(v29) = v38(v34, 1, v36);
      v39 = v38(v35, 1, v36);
      if ((_DWORD)v29)
      {
        if (!v39)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v37 + 16))(v34, v35, v36);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v39)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v37 + 24))(v34, v35, v36);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64);
      v27 = v34;
      v28 = v35;
      goto LABEL_8;
    }
    sub_100BBEF04(v11);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013F5478) - 8) + 64);
    v27 = (void *)v11;
    v28 = v12;
LABEL_8:
    memcpy(v27, v28, v26);
    goto LABEL_14;
  }
  if (v17)
    goto LABEL_7;
  v18 = *(void **)v12;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
  v19 = *((_QWORD *)v12 + 2);
  *(_QWORD *)(v11 + 16) = v19;
  *(_BYTE *)(v11 + 24) = v12[24];
  v20 = *(int *)(v13 + 28);
  __dst = (void *)(v11 + v20);
  v21 = &v12[v20];
  v22 = type metadata accessor for URL(0);
  v45 = *(_QWORD *)(v22 - 8);
  v46 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v45 + 48);
  v23 = v18;
  v24 = swift_bridgeObjectRetain(v19);
  if (v46(v21, 1, v22, v24))
  {
    v25 = sub_1004B804C(&qword_1013E04D0);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v45 + 16))(__dst, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v22);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(_QWORD *)v42;
  v41[8] = v42[8];
  *(_QWORD *)v41 = v43;
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

uint64_t sub_100BBEF04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_WORD *sub_100BBEF40(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_1004B804C(&qword_1013F5478);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *(_OWORD *)(v11 + 1) = *(_OWORD *)(v12 + 1);
    *((_BYTE *)v11 + 24) = *((_BYTE *)v12 + 24);
    v16 = *(int *)(v13 + 28);
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    v19 = type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_1004B804C(&qword_1013E04D0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v22 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v26 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  v27 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  return a1;
}

_BYTE *sub_100BBF128(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  const void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = (uint64_t)&a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v27 = *(void **)v11;
      *(_QWORD *)v11 = *(_QWORD *)v12;

      v28 = *((_QWORD *)v12 + 2);
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      *(_QWORD *)(v11 + 16) = v28;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v11 + 24) = v12[24];
      v29 = *(int *)(v13 + 28);
      v30 = (void *)(v11 + v29);
      v31 = &v12[v29];
      v32 = type metadata accessor for URL(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
      v35 = v34(v30, 1, v32);
      v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v33 + 32))(v30, v31, v32);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v36)
        {
          (*(void (**)(void *, _BYTE *, uint64_t))(v33 + 40))(v30, v31, v32);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64);
      v25 = v30;
      v26 = v31;
      goto LABEL_8;
    }
    sub_100BBEF04(v11);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013F5478) - 8) + 64);
    v25 = (void *)v11;
    v26 = v12;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_14;
  }
  if (v17)
    goto LABEL_7;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
  *(_BYTE *)(v11 + 24) = v12[24];
  v18 = *(int *)(v13 + 28);
  v19 = (void *)(v11 + v18);
  v20 = &v12[v18];
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  v37 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v37] = a2[v37];
  v38 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  v41 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v41] = a2[v41];
  v42 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v42] = a2[v42];
  return a1;
}

uint64_t sub_100BBF428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBF434);
}

uint64_t sub_100BBF434(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Date(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013F5478);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_100BBF4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBF4E4);
}

_BYTE *sub_100BBF4E4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013F5478);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardViewModelMetadata(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101407670, (uint64_t)&nominal type descriptor for CRLBoardViewModelMetadata);
}

void sub_100BBF594(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = &unk_100F29550;
  v6[1] = &unk_100F29550;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_101407680, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100F29550;
      v6[5] = &unk_100F29550;
      v6[6] = &unk_100F29550;
      v6[7] = &unk_100F29568;
      v6[8] = &unk_100F29550;
      v6[9] = &unk_100F29550;
      v6[10] = &unk_100F29550;
      v6[11] = &unk_100F29550;
      swift_initStructMetadata(a1, 256, 12, v6, a1 + 16);
    }
  }
}

char *sub_100BBF64C(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t, __n128);
  char *v13;
  __n128 v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    a1[24] = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 28);
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    v13 = v4;
    v14 = swift_bridgeObjectRetain(v6);
    if (v12(v9, 1, v10, v14))
    {
      v15 = sub_1004B804C(&qword_1013E04D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_100BBF754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_100BBF7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t, __n128);
  id v13;
  __n128 v14;
  uint64_t v15;

  v5 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v11 + 48);
  v13 = v5;
  v14 = swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10, v14))
  {
    v15 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100BBF8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v10 = *(int *)(a3 + 28);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_100BBF9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100BBFAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 28);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_100BBFBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBFC04);
}

uint64_t sub_100BBFC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013E04D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_100BBFC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBFC90);
}

uint64_t sub_100BBFC90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E04D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_100BBFD08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = &unk_100F295A8;
  v4[2] = &unk_100F29550;
  sub_1007018C8(319, (unint64_t *)&qword_1013EAAF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t destroy for CRLBoardLibraryProvidingSnapshotUpdateInfo(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t *_s8Freeform42CRLBoardLibraryProvidingSnapshotUpdateInfoVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for CRLBoardLibraryProvidingSnapshotUpdateInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for CRLBoardLibraryProvidingSnapshotUpdateInfo(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryProvidingSnapshotUpdateInfo()
{
  return &type metadata for CRLBoardLibraryProvidingSnapshotUpdateInfo;
}

void *sub_100BBFEF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain(a1);
  v4 = (uint64_t *)(v3 + 48);
  do
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    v4 += 3;
    swift_bridgeObjectRetain_n(v5, 2);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    sub_10051280C(v5);
    swift_bridgeObjectRetain(v6);
    sub_100512568(v8);
    swift_bridgeObjectRetain(v7);
    sub_100512568(v9);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100BBFFD8(unsigned __int8 a1)
{
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 - 2 >= 3)
  {
    if (a1)
    {
      sub_100BC00D8(1);
      return v6;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  }
  return v5;
}

void sub_100BC00D8(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_100BC0110()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

#error "100BC0284: call analysis failed (funcsize=47)"

void sub_100BC0314(char a1)
{
  __asm { BR              X9 }
}

void sub_100BC0344()
{
  sub_100BC0558(1);
}

void sub_100BC0558(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_100BC0590()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

#error "100BC0740: call analysis failed (funcsize=47)"

uint64_t sub_100BC07D0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100BC08B8(char a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  if (a1 == 1)
    return 0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  return v1;
}

uint64_t sub_100BC0994@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "owner");
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLCollaborationParticipant(0));
  v9 = sub_100643C98(v7, 1);

  *(_QWORD *)a2 = v9;
  v10 = objc_msgSend(a1, "participants");
  v11 = sub_100BC1438();
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  sub_1009B4804(v12);
  v14 = v13;
  v16 = v15;
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(v12).n128_u64[0];
  if (v16)
    v18 = v14;
  else
    v18 = 0;
  v19 = 0xE000000000000000;
  if (v16)
    v19 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_QWORD *)(a2 + 16) = v19;
  v20 = objc_msgSend(a1, "currentUserParticipant", v17);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "permission");

  }
  else
  {
    v22 = objc_msgSend(a1, "publicPermission");
  }
  *(_BYTE *)(a2 + 24) = v22 != (id)2;
  v23 = objc_msgSend(a1, "URL");
  if (v23)
  {
    v24 = v23;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
  }
  else
  {

    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
  }
  v27 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  return sub_10057EE1C((uint64_t)v6, a2 + *(int *)(v27 + 28));
}

NSString sub_100BC0B9C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480E38 = (uint64_t)result;
  return result;
}

unint64_t sub_100BC0BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_1004B804C(&qword_1013F7600);
  inited = swift_initStackObject(v6, &v11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = 0xD000000000000027;
  *(_QWORD *)(inited + 40) = 0x8000000100FFD7D0;
  v8 = sub_1004B804C(&qword_101407770);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0xD00000000000002ELL;
  *(_QWORD *)(inited + 88) = 0x8000000100FFD800;
  v9 = sub_1004B804C(&qword_1013E4980);
  *(_QWORD *)(inited + 96) = a2;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = 0xD00000000000002ELL;
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 136) = 0x8000000100FFD830;
  *(_QWORD *)(inited + 144) = a3;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_1008D5E68(inited);
}

uint64_t sub_100BC0CC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  unsigned __int8 *v27;
  char v28;
  int v29;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  int *v35;
  unsigned __int8 *v36;

  v4 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101407778);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013F5478);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v35 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v35 - v18;
  if (*a1 != *a2)
    goto LABEL_14;
  if (a1[1] != a2[1])
    goto LABEL_14;
  v20 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v21 = a2;
  v22 = (int *)v20;
  v23 = *(int *)(v20 + 24);
  v36 = v21;
  if ((static Date.== infix(_:_:)(&a1[v23], &v21[v23]) & 1) == 0)
    goto LABEL_14;
  sub_1004CB7BC((uint64_t)&a1[v22[7]], (uint64_t)v19, &qword_1013F5478);
  v35 = v22;
  sub_1004CB7BC((uint64_t)&v36[v22[7]], (uint64_t)v17, &qword_1013F5478);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, &qword_1013F5478);
  sub_1004CB7BC((uint64_t)v17, v24, &qword_1013F5478);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v26 = v25(v10, 1, v4);
  v27 = v36;
  if (v26 != 1)
  {
    sub_1004CB7BC((uint64_t)v10, (uint64_t)v14, &qword_1013F5478);
    if (v25((char *)v24, 1, v4) != 1)
    {
      sub_100BC191C(v24, (uint64_t)v7);
      v28 = sub_100BC10A4((uint64_t)v14, (uint64_t)v7);
      sub_100BBEF04((uint64_t)v7);
      sub_1004CB800((uint64_t)v17, &qword_1013F5478);
      sub_1004CB800((uint64_t)v19, &qword_1013F5478);
      sub_100BBEF04((uint64_t)v14);
      sub_1004CB800((uint64_t)v10, &qword_1013F5478);
      if ((v28 & 1) == 0)
        goto LABEL_14;
      goto LABEL_11;
    }
    sub_1004CB800((uint64_t)v17, &qword_1013F5478);
    sub_1004CB800((uint64_t)v19, &qword_1013F5478);
    sub_100BBEF04((uint64_t)v14);
LABEL_9:
    sub_1004CB800((uint64_t)v10, &qword_101407778);
    goto LABEL_14;
  }
  sub_1004CB800((uint64_t)v17, &qword_1013F5478);
  sub_1004CB800((uint64_t)v19, &qword_1013F5478);
  if (v25((char *)v24, 1, v4) != 1)
    goto LABEL_9;
  sub_1004CB800((uint64_t)v10, &qword_1013F5478);
LABEL_11:
  if (a1[v35[8]] == v27[v35[8]] && a1[v35[9]] == v27[v35[9]] && a1[v35[10]] == v27[v35[10]])
  {
    v31 = v35[11];
    v32 = &a1[v31];
    v33 = a1[v31 + 8];
    v34 = &v27[v31];
    v29 = v27[v31 + 8];
    if ((v33 & 1) != 0)
    {
      if (!v29)
        return v29 & 1;
    }
    else
    {
      if (*(_QWORD *)v32 != *(_QWORD *)v34)
        LOBYTE(v29) = 1;
      if ((v29 & 1) != 0)
        goto LABEL_14;
    }
    if (a1[v35[12]] == v27[v35[12]] && a1[v35[13]] == v27[v35[13]] && a1[v35[14]] == v27[v35[14]])
    {
      LOBYTE(v29) = a1[v35[15]] ^ v27[v35[15]] ^ 1;
      return v29 & 1;
    }
  }
LABEL_14:
  LOBYTE(v29) = 0;
  return v29 & 1;
}

uint64_t sub_100BC10A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v40 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E87E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E04D0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v37 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v18 = *(void **)a1;
  v19 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v19)
      return 0;
    v38 = v4;
    type metadata accessor for CRLCollaborationParticipant(0);
    v20 = v19;
    v21 = v18;
    v22 = static NSObject.== infix(_:_:)(v21, v20);

    if ((v22 & 1) == 0)
      return 0;
  }
  else
  {
    v38 = v4;
    if (v19)
      return 0;
  }
  v23 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a2 + 8);
  v26 = *(_QWORD *)(a2 + 16);
  if (v23 == v25 && v24 == v26
    || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 0), result = 0, (v27 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
    {
      v29 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      sub_1004CB7BC(a1 + *(int *)(v29 + 28), (uint64_t)v17, &qword_1013E04D0);
      sub_1004CB7BC(a2 + *(int *)(v29 + 28), (uint64_t)v15, &qword_1013E04D0);
      v30 = (uint64_t)&v8[*(int *)(v6 + 48)];
      sub_1004CB7BC((uint64_t)v17, (uint64_t)v8, &qword_1013E04D0);
      sub_1004CB7BC((uint64_t)v15, v30, &qword_1013E04D0);
      v31 = v38;
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      v33 = v40;
      if (v32((uint64_t)v8, 1, v40) == 1)
      {
        sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
        sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
        if (v32(v30, 1, v33) == 1)
        {
          sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
          return 1;
        }
        goto LABEL_15;
      }
      sub_1004CB7BC((uint64_t)v8, (uint64_t)v12, &qword_1013E04D0);
      if (v32(v30, 1, v33) == 1)
      {
        sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
        sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v33);
LABEL_15:
        sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E87E0);
        return 0;
      }
      v34 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v30, v33);
      sub_100791980();
      v35 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v34);
      v36 = *(void (**)(char *, uint64_t))(v31 + 8);
      v36(v34, v33);
      sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
      sub_1004CB800((uint64_t)v17, &qword_1013E04D0);
      v36(v12, v33);
      sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
      if ((v35 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_100BC1438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FF620;
  if (!qword_1013FF620)
  {
    v1 = objc_opt_self(CKShareParticipant);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013FF620);
  }
  return result;
}

uint64_t sub_100BC1474(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  Class v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  id v48;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;

  v2 = type metadata accessor for Calendar.Component(0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (char *)&v50 - v11;
  v12 = type metadata accessor for Calendar(0);
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  v13 = __chkstk_darwin(v12);
  v59 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v13);
  v15 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v15, "setDateStyle:", 1);
  objc_msgSend(v15, "setTimeStyle:", 1);
  objc_msgSend(v15, "setDoesRelativeDateFormatting:", 1);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "stringFromDate:", isa);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  objc_msgSend(v15, "setDoesRelativeDateFormatting:", 0);
  v21 = a1;
  v22 = Date._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v15, "stringFromDate:", v22);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  if (v18 == v24 && v20 == v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v24, v26, 0) & 1) != 0)
  {
    v27 = swift_bridgeObjectRelease(v20);
    v29 = v53;
    v28 = v54;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v53 + 104))(v4, enum case for Calendar.Component.weekOfYear(_:), v54, v27);
    Calendar.date(byAdding:value:to:wrappingComponents:)(v4, 1, v21, 0);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v28);
    v30 = v55;
    v31 = v56;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v7, 1, v56) == 1)
    {
      sub_1004CB800((uint64_t)v7, &qword_1013E04F0);
      v33 = v57;
      v32 = v58;
LABEL_11:
      objc_msgSend(v15, "setDateStyle:", 2);
      v47 = Date._bridgeToObjectiveC()().super.isa;
      v48 = objc_msgSend(v15, "stringFromDate:", v47);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v59, v32);
      return v24;
    }
    v34 = v52;
    v35.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v30 + 32))(v52, v7, v31);
    v36 = v51;
    static Date.now.getter(v35);
    v37 = Date.compare(_:)(v36);
    v38 = *(void (**)(char *, uint64_t))(v30 + 8);
    v38(v36, v31);
    v39 = v37 == 1;
    v33 = v57;
    v40 = v58;
    if (!v39)
    {
      v38(v34, v31);
      v32 = v40;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease(v26);
    v41 = v40;
    v42 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setLocalizedDateFormatFromTemplate:", v42);

    v43 = Date._bridgeToObjectiveC()().super.isa;
    v44 = objc_msgSend(v15, "stringFromDate:", v43);

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v45 = v31;
    v20 = v46;

    v38(v34, v45);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v59, v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
    swift_bridgeObjectRelease(v26);

  }
  swift_bridgeObjectRetain(v20);
  return v18;
}

uint64_t sub_100BC191C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC1960(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v2 = Notification.userInfo.getter(a1);
  if (!v2)
    goto LABEL_14;
  v4 = v2;
  sub_100B026E4(v2);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if (!v6)
    goto LABEL_14;
  if (!*(_QWORD *)(v6 + 16)
    || (v7 = sub_100842E98(0xD000000000000027, 0x8000000100FFD7D0), (v8 & 1) == 0)
    || (sub_1004CB6E8(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v22),
        v9 = sub_1004B804C(&qword_101407770),
        (swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0))
  {
LABEL_13:
    swift_bridgeObjectRelease(v6);
LABEL_14:
    v17 = type metadata accessor for Notification(0, v3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
    return 0;
  }
  v10 = v21;
  if (!*(_QWORD *)(v6 + 16)
    || (v11 = sub_100842E98(0xD00000000000002ELL, 0x8000000100FFD800), (v12 & 1) == 0)
    || (sub_1004CB6E8(*(_QWORD *)(v6 + 56) + 32 * v11, (uint64_t)&v22),
        v13 = sub_1004B804C(&qword_1013E4980),
        (swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v10);
    goto LABEL_13;
  }
  v14 = v21;
  if (*(_QWORD *)(v6 + 16) && (v15 = sub_100842E98(0xD00000000000002ELL, 0x8000000100FFD830), (v16 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v6 + 56) + 32 * v15, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v6);
  v20 = type metadata accessor for Notification(0, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
  if (*((_QWORD *)&v23 + 1))
  {
    if ((swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
      return v10;
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v10);
    sub_1004CB800((uint64_t)&v22, &qword_1013E0230);
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for CRLDeleteConfirmationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100BC1BE8 + 4 * byte_100F294F5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100BC1C1C + 4 * asc_100F294F0[v4]))();
}

uint64_t sub_100BC1C1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC1C24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BC1C2CLL);
  return result;
}

uint64_t sub_100BC1C38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BC1C40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100BC1C44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC1C4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLDeleteConfirmationType()
{
  return &type metadata for CRLDeleteConfirmationType;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryBoardOpenError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BC1CB4 + 4 * byte_100F294FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BC1CE8 + 4 * byte_100F294FA[v4]))();
}

uint64_t sub_100BC1CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC1CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BC1CF8);
  return result;
}

uint64_t sub_100BC1D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BC1D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BC1D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC1D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryBoardOpenError()
{
  return &type metadata for CRLBoardLibraryBoardOpenError;
}

unint64_t sub_100BC1D38()
{
  unint64_t result;

  result = qword_101407780;
  if (!qword_101407780)
  {
    result = swift_getWitnessTable(&unk_100F296C0, &type metadata for CRLBoardLibraryBoardOpenError);
    atomic_store(result, (unint64_t *)&qword_101407780);
  }
  return result;
}

unint64_t sub_100BC1D80()
{
  unint64_t result;

  result = qword_101407788;
  if (!qword_101407788)
  {
    result = swift_getWitnessTable(&unk_100F29728, &type metadata for CRLDeleteConfirmationType);
    atomic_store(result, (unint64_t *)&qword_101407788);
  }
  return result;
}

void sub_100BC1EFC(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  NSArray v10;
  Class isa;

  v2 = v1;
  v4 = objc_msgSend(v1, "excludedActivityTypes");
  if (v4)
  {

    v5 = objc_msgSend(v1, "excludedActivityTypes");
    if (v5)
    {
      v6 = v5;
      type metadata accessor for ActivityType(0);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      swift_bridgeObjectRetain(a1);
      sub_10061FD04(a1);
      if (v8)
      {
        v10.super.isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v9 = swift_bridgeObjectRelease(v8).n128_u64[0];
      }
      else
      {
        v10.super.isa = 0;
      }
      objc_msgSend(v2, "setExcludedActivityTypes:", v10.super.isa, v9);

    }
    else
    {
      objc_msgSend(v1, "setExcludedActivityTypes:", 0);
    }
  }
  else
  {
    type metadata accessor for ActivityType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "setExcludedActivityTypes:", isa);

  }
}

id sub_100BC2130()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionAwareActivityViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSelectionAwareActivityViewController()
{
  return objc_opt_self(_TtC8Freeform39CRLSelectionAwareActivityViewController);
}

NSString sub_100BC2180()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480E40 = (uint64_t)result;
  return result;
}

void *sub_100BC21B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  Class isa;

  v2 = sub_1004B804C(&qword_1013F05B8);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5E30;
  if (qword_1013DDD70 != -1)
    swift_once(&qword_1013DDD70, sub_100BC2180);
  v4 = (void *)qword_101480E40;
  *(_QWORD *)(v3 + 32) = qword_101480E40;
  *(_QWORD *)(v3 + 40) = UIActivityTypeCopyToPasteboard;
  *(_QWORD *)(v3 + 48) = UIActivityTypeAddToReadingList;
  *(_QWORD *)(v3 + 56) = UIActivityTypeAssignToContact;
  type metadata accessor for ActivityType(0);
  v5 = v4;
  v6 = UIActivityTypeCopyToPasteboard;
  v7 = UIActivityTypeAddToReadingList;
  v8 = UIActivityTypeAssignToContact;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setExcludedActivityTypes:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  return a1;
}

unint64_t sub_100BC22BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4E10;
  if (!qword_1013E4E10)
  {
    v1 = objc_opt_self(UIActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1013E4E10);
  }
  return result;
}

uint64_t sub_100BC22F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for URL(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100BC235C, 0, 0);
}

uint64_t sub_100BC235C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  _BYTE *v6;
  __n128 v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  _QWORD *v14;

  if ((URL.isFileURL.getter(a1) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 56) + 16))(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
    if (v2)
    {
      v3 = *(void **)(v1 + 32);
      v4 = v3;
    }
    else
    {
      v9 = *(_QWORD *)(v1 + 64);
      v3 = *(void **)(v1 + 32);
      swift_getObjectType(*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16));
      v4 = sub_1007B2554(v9, 0, 0);
    }
    *(_QWORD *)(v1 + 72) = v4;
    v10 = *(_QWORD *)(v1 + 64);
    v11 = *(_QWORD *)(v1 + 48);
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 56) + 8);
    v13 = v3;
    v12(v10, v11);
    v14 = (_QWORD *)swift_task_alloc(dword_1013FFA4C);
    *(_QWORD *)(v1 + 80) = v14;
    *v14 = v1;
    v14[1] = sub_100BC2488;
    return sub_1009BB53C(*(_QWORD *)(v1 + 16));
  }
  else
  {
    v5 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v5, 0, 0);
    *v6 = 0;
    swift_willThrow(v7);
    swift_task_dealloc(*(_QWORD *)(v1 + 64));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100BC2488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100BC2528;
  else
    v3 = sub_100BC24EC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BC24EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BC2528()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BC2564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100BC2580, 0, 0);
}

uint64_t sub_100BC2580(uint64_t a1)
{
  uint64_t *v1;
  id v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t **v11;

  static Task<>.checkCancellation()(a1);
  v2 = sub_100B5E264();
  v3 = sub_10078F614();
  v5 = v4;
  v1[5] = (uint64_t)v3;
  v1[6] = v4;

  v6 = v1[4];
  v8 = aLinkMetadata[0];
  v7 = aLinkMetadata[1];
  v1[7] = aLinkMetadata[1];
  v9 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain(v7);
  swift_getObjectType(v9);
  v10 = sub_1007B22D8((uint64_t)v3, v5, v8, v7);
  v1[8] = (uint64_t)v10;
  static Task<>.checkCancellation()(v10);
  v11 = (uint64_t **)swift_task_alloc(dword_1013FFA4C);
  v1[9] = (uint64_t)v11;
  *v11 = v1;
  v11[1] = (uint64_t *)sub_100BC26A8;
  return sub_1009BB53C(v1[2]);
}

uint64_t sub_100BC26A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100BC31C8;
  else
    v3 = sub_100BC31C4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BC270C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100BC2728, 0, 0);
}

uint64_t sub_100BC2728(uint64_t a1)
{
  uint64_t *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t **v11;

  static Task<>.checkCancellation()(a1);
  v2 = sub_10078F614();
  v1[5] = (uint64_t)v2;
  v1[6] = v3;
  v4 = (uint64_t)v2;
  v5 = v3;
  v6 = v1[4];
  v8 = aLinkMetadata[0];
  v7 = aLinkMetadata[1];
  v1[7] = aLinkMetadata[1];
  v9 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain(v7);
  swift_getObjectType(v9);
  v10 = sub_1007B22D8(v4, v5, v8, v7);
  v1[8] = (uint64_t)v10;
  static Task<>.checkCancellation()(v10);
  v11 = (uint64_t **)swift_task_alloc(dword_1013FFA4C);
  v1[9] = (uint64_t)v11;
  *v11 = v1;
  v11[1] = (uint64_t *)sub_100BC2840;
  return sub_1009BB53C(v1[2]);
}

uint64_t sub_100BC2840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100BC28F8;
  else
    v3 = sub_100BC28A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BC28A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);

  swift_bridgeObjectRelease(v1);
  sub_1004BBBC8(v3, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BC28F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);

  swift_bridgeObjectRelease(v1);
  sub_1004BBBC8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLBoardItemImporterHelper()
{
  return objc_opt_self(_TtC8Freeform26CRLBoardItemImporterHelper);
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemImporterHelperError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100BC29D8 + 4 * byte_100F297C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100BC2A0C + 4 * asc_100F297C0[v4]))();
}

uint64_t sub_100BC2A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC2A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BC2A1CLL);
  return result;
}

uint64_t sub_100BC2A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BC2A30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100BC2A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC2A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemImporterHelperError()
{
  return &type metadata for CRLBoardItemImporterHelperError;
}

unint64_t sub_100BC2A5C()
{
  unint64_t result;

  result = qword_1014078A0;
  if (!qword_1014078A0)
  {
    result = swift_getWitnessTable(&unk_100F298C0, &type metadata for CRLBoardItemImporterHelperError);
    atomic_store(result, (unint64_t *)&qword_1014078A0);
  }
  return result;
}

uint64_t sub_100BC2AA0()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t result;
  unsigned __int8 v6;
  __int128 v7;
  __int128 v8;

  v1 = objc_msgSend(v0, "userInfo");
  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v2 + 16) || (v3 = sub_100842E98(0xD000000000000026, 0x8000000100FFDE10), (v4 & 1) == 0))
  {
    v7 = 0u;
    v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_7:
    sub_1004D28EC((uint64_t)&v7);
    return 0;
  }
  result = swift_dynamicCast(&v6, &v7, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
    return v6;
  return result;
}

uint64_t sub_100BC2B98(uint64_t a1, id a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void *v58;
  void *v59;
  __CFString *v60;
  NSString v61;
  NSString v62;
  Class isa;
  id v64;
  uint64_t result;
  id v66;
  uint64_t v67;
  uint64_t v71;
  int64_t v72;
  __int128 v73;
  _OWORD v74[2];
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  char v79[8];
  _QWORD *v80;

  v14 = (_QWORD *)sub_1008D5E68((uint64_t)_swiftEmptyArrayStorage);
  v67 = a4;
  if (!a11)
  {
LABEL_41:
    *((_QWORD *)&v76 + 1) = &type metadata for Bool;
    LOBYTE(v75) = a6 & 1;
    sub_10050CB14(&v75, &v73);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    v80 = v14;
    sub_1008284A4(&v73, 0xD000000000000026, 0x8000000100FFDE10, isUniquelyReferenced_nonNull_native);
    v44 = v80;
    swift_bridgeObjectRelease();
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    v47 = v46;
    swift_getErrorValue(a1, v79, &v77);
    v48 = v77;
    v49 = v78;
    *((_QWORD *)&v76 + 1) = v78;
    v50 = sub_10050D1B0(&v75);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v50, v48, v49);
    sub_10050CB14(&v75, &v73);
    v51 = swift_isUniquelyReferenced_nonNull_native(v44);
    v80 = v44;
    sub_1008284A4(&v73, v45, v47, v51);
    v52 = (uint64_t)v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((a5 & 1) == 0)
    {
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLBoardItemImporterErrorMediaTypeKey"));
      v55 = v54;
      type metadata accessor for CRLBoardItemImporterErrorMediaType(0);
      *((_QWORD *)&v76 + 1) = v56;
      *(_QWORD *)&v75 = v67;
      sub_10050CB14(&v75, &v73);
      v57 = swift_isUniquelyReferenced_nonNull_native(v52);
      v80 = (_QWORD *)v52;
      sub_1008284A4(&v73, v53, v55, v57);
      v52 = (uint64_t)v80;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((a3 & 1) != 0)
    {
      v58 = (void *)_convertErrorToNSError(_:)(a1);
      a2 = objc_msgSend(v58, "code");

    }
    v59 = (void *)objc_opt_self(NSError);
    v60 = CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter");
    v61 = String._bridgeToObjectiveC()();
    v62 = String._bridgeToObjectiveC()();
    sub_100C9BC14(v52);
    swift_bridgeObjectRelease();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v64 = objc_msgSend(v59, "crl_errorWithDomain:code:alertTitle:alertMessage:userInfo:", v60, a2, v61, v62, isa, swift_bridgeObjectRelease().n128_f64[0]);

    return (uint64_t)v64;
  }
  v66 = a2;
  v71 = a11 + 64;
  v15 = 1 << *(_BYTE *)(a11 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a11 + 64);
  v72 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(a11);
  v18 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v18 << 6);
LABEL_9:
      v22 = *(_QWORD *)(a11 + 56);
      v23 = (_QWORD *)(*(_QWORD *)(a11 + 48) + 16 * v21);
      v24 = v23[1];
      *(_QWORD *)&v73 = *v23;
      *((_QWORD *)&v73 + 1) = v24;
      sub_1004CB6E8(v22 + 32 * v21, (uint64_t)v74);
      swift_bridgeObjectRetain(v24);
      goto LABEL_28;
    }
    v25 = v18 + 1;
    if (__OFADD__(v18, 1))
      goto LABEL_48;
    if (v25 < v72)
    {
      v26 = *(_QWORD *)(v71 + 8 * v25);
      if (v26)
        goto LABEL_13;
      v27 = v18 + 2;
      ++v18;
      if (v25 + 1 < v72)
      {
        v26 = *(_QWORD *)(v71 + 8 * v27);
        if (v26)
          goto LABEL_16;
        v18 = v25 + 1;
        if (v25 + 2 < v72)
        {
          v26 = *(_QWORD *)(v71 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_13;
          }
          v27 = v25 + 3;
          v18 = v25 + 2;
          if (v25 + 3 < v72)
            break;
        }
      }
    }
LABEL_27:
    v17 = 0;
    memset(v74, 0, sizeof(v74));
    v73 = 0u;
LABEL_28:
    sub_100BC317C((uint64_t)&v73, (uint64_t)&v75);
    v28 = *((_QWORD *)&v75 + 1);
    if (!*((_QWORD *)&v75 + 1))
    {
      swift_release(a11);
      a2 = v66;
      goto LABEL_41;
    }
    v29 = v75;
    sub_10050CB14(&v76, &v73);
    v30 = swift_isUniquelyReferenced_nonNull_native(v14);
    v80 = v14;
    v32 = sub_100842E98(v29, v28);
    v33 = v14[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v36 = v31;
    if (v14[3] >= v35)
    {
      if ((v30 & 1) != 0)
      {
        v14 = v80;
        if ((v31 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_100830CAC();
        v14 = v80;
        if ((v36 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_10081DC94(v35, v30);
      v37 = sub_100842E98(v29, v28);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_50;
      v32 = v37;
      v14 = v80;
      if ((v36 & 1) != 0)
      {
LABEL_5:
        v19 = (_QWORD *)(v14[7] + 32 * v32);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
        sub_10050CB14(&v73, v19);
        goto LABEL_6;
      }
    }
    v14[(v32 >> 6) + 8] |= 1 << v32;
    v39 = (uint64_t *)(v14[6] + 16 * v32);
    *v39 = v29;
    v39[1] = v28;
    sub_10050CB14(&v73, (_OWORD *)(v14[7] + 32 * v32));
    v40 = v14[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_47;
    v14[2] = v42;
    swift_bridgeObjectRetain(v28);
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v26 = *(_QWORD *)(v71 + 8 * v27);
  if (v26)
  {
LABEL_16:
    v25 = v27;
LABEL_13:
    v17 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v25 << 6);
    v18 = v25;
    goto LABEL_9;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v72)
    {
      v18 = v72 - 1;
      goto LABEL_27;
    }
    v26 = *(_QWORD *)(v71 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_13;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100BC317C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1014078A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC31CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[22] = a1;
  v2[23] = a2;
  v3 = type metadata accessor for CRLBoardEntity(0);
  v2[24] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[25] = v4;
  v2[26] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[27] = v5;
  v2[28] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100BC3250, 0, 0);
}

uint64_t sub_100BC3250()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 192);
    v4 = *(_QWORD *)(v0 + 200);
    sub_100600A18(0, v2, 0);
    v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    do
    {
      v8 = *(_QWORD *)(v0 + 224);
      v9 = *(_QWORD *)(v0 + 208);
      sub_1004B8460(v6, v9, type metadata accessor for CRLBoardEntity);
      sub_1004B8460(v9 + *(int *)(v5 + 40), v8, type metadata accessor for CRLBoardIdentifier);
      sub_1005761B8(v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_100600A18(0, *(_QWORD *)&_swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v11 >= *(_QWORD *)&v10 >> 1)
        sub_100600A18(*(_QWORD *)&v10 > 1uLL, *(_QWORD *)&v11 + 1, 1);
      *(_QWORD *)(v0 + 288) = _swiftEmptyArrayStorage;
      v12 = *(_QWORD *)(v0 + 224);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v11 + 1;
      sub_1004DB5FC(v12, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * *(_QWORD *)&v11);
      v6 += v7;
      --v2;
    }
    while (v2);
    *(_QWORD *)(v0 + 232) = *sub_1004BB5A4(*(_QWORD **)(v0 + 184), *(_QWORD *)(*(_QWORD *)(v0 + 184) + 24));
    v13 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 240) = static MainActor.shared.getter(v13);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 248) = v14;
    *(_QWORD *)(v0 + 256) = v15;
    return swift_task_switch(sub_100BC3478, v14, v15);
  }
  else
  {
    v17 = type metadata accessor for _PrebuiltAppIntentError(0);
    v18 = sub_1006371C0();
    swift_allocError(v17, v18, 0, 0);
    v19.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
    swift_willThrow(v19);
    v20 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100BC3478()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[36];
  swift_retain(v1);
  v3 = sub_100AF87D0(v2);
  v0[33] = v3;
  swift_release(v1);
  v4 = (_QWORD *)swift_task_alloc(dword_10140E18C);
  v0[34] = v4;
  *v4 = v0;
  v4[1] = sub_100BC34E4;
  return sub_100CA767C(v3);
}

uint64_t sub_100BC34E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 272);
  *(_QWORD *)(*v1 + 280) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 248);
    v5 = *(_QWORD *)(v2 + 256);
    v6 = sub_100BC35D8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 248);
    v5 = *(_QWORD *)(v2 + 256);
    v6 = sub_100BC3550;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BC3550()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 240));
  return swift_task_switch(sub_100BC358C, 0, 0);
}

uint64_t sub_100BC358C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BC35D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRelease();
  swift_release(v2);
  swift_release(v1);
  return swift_task_switch(sub_100BC362C, 0, 0);
}

uint64_t sub_100BC362C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 160) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 88, v0 + 160, v2, &type metadata for SQLiteError, 6))
  {
    v3 = *(_QWORD *)(v0 + 280);
    swift_bridgeObjectRelease();
    v4 = type metadata accessor for _PrebuiltAppIntentError(0);
    v5 = sub_1006371C0();
    swift_allocError(v4, v5, 0, 0);
    static _UnrecoverableError.entityNotFound.getter();
  }
  else
  {
    if (qword_1013DD838 != -1)
      swift_once(&qword_1013DD838, sub_100A04F30);
    v3 = *(_QWORD *)(v0 + 280);
    swift_beginAccess(&static OS_os_log.appIntents, v0 + 112, 0, 0);
    v7 = (void *)static OS_os_log.appIntents;
    v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v8, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v3, v0 + 168, v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 152);
    v12 = v7;
    v13 = Error.publicDescription.getter(v10, v11);
    v15 = v14;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v16 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v16;
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 40) = v15;
    v17 = static os_log_type_t.error.getter(v16);
    sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v17, "Error deleting boards: %@", 25, 2, inited);
    swift_setDeallocating(inited);
    v18 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v18);

    v19 = type metadata accessor for _PrebuiltAppIntentError(0);
    v20 = sub_1006371C0();
    swift_allocError(v19, v20, 0, 0);
    v6.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  }
  swift_willThrow(v6);
  swift_errorRelease(v3);
  v21 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for CRLDeleteBoardIntentPerformer()
{
  return &type metadata for CRLDeleteBoardIntentPerformer;
}

_QWORD *sub_100BC3878(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v30[-v9];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v30[-v15];
  v17 = *(_QWORD *)(v4 + 632);
  v18 = (uint64_t)v2 + v17;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v17, v30, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v19 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v19);
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v20 = (uint64_t)v2 + qword_101480E60;
    swift_beginAccess((char *)v2 + qword_101480E60, v31, 0, 0);
    sub_1004B8460(v20, (uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
    v21 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    CRStruct_1.copy(renamingReferences:)(0, v5, v21);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v17, v31, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v16, (uint64_t *)&unk_1013F02C0);
    v22 = (uint64_t)v2 + qword_101480E60;
    swift_beginAccess((char *)v2 + qword_101480E60, v30, 0, 0);
    sub_1004B8460(v22, (uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
  }
  v23 = v2[4];
  v24 = v2[5];
  v27 = v2 + 2;
  v25 = v2[2];
  v26 = v27[1];
  v28 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_1004B84E0((uint64_t)v10, v28 + qword_101480E60, type metadata accessor for CRLFileItemCRDTData);
  sub_1009DACA0((uint64_t)v16, v28 + *(_QWORD *)(*(_QWORD *)v28 + 632));
  return sub_1005E1000(v26, v23, v24, v25);
}

uint64_t sub_100BC3B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v17[24];
  _BYTE v18[24];
  uint64_t v19;

  v4 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v17[-v8];
  __chkstk_darwin(v10);
  v12 = &v17[-v11];
  swift_beginAccess(a1 + 32, v18, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v13 = v1 + qword_101480E60;
    swift_beginAccess(v1 + qword_101480E60, v17, 32, 0);
    v14 = sub_1004B804C(&qword_1013F1870);
    CRRegister.wrappedValue.getter(v14);
    swift_endAccess(v17);
    sub_100BC4AF4((uint64_t)v12);
    v19 = v2;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
    swift_beginAccess(v13, v17, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLFileItemAtomicDataStruct);
    CRRegister.wrappedValue.setter(v6, v14, v15);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
    swift_endAccess(v17);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFileItemAtomicDataStruct);
  }
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v17, 33, 0);
  sub_100D3D410(a1);
  return swift_endAccess(v17);
}

uint64_t sub_100BC3D00()
{
  uint64_t result;

  qword_101480E48 = 97;
  unk_101480E50 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F29EF8);
  qword_101480E58 = result;
  return result;
}

uint64_t sub_100BC3D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v3 = sub_1004B804C(&qword_1013F1870);
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v27);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v26 - v18;
  v31 = a1;
  sub_1004B8460(a1, (uint64_t)v10, type metadata accessor for CRLAssetData);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v20 = type metadata accessor for UUID(0);
  v21 = sub_1004F2A1C(v20, (uint64_t)qword_101481278);
  v22 = &v19[*(int *)(v11 + 20)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v22, v21, v20);
  v23 = &v22[*(int *)(v8 + 20)];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0xE000000000000000;
  *(_QWORD *)&v22[*(int *)(v8 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1004B84E0((uint64_t)v10, (uint64_t)v19, type metadata accessor for CRLAssetData);
  *(_QWORD *)&v19[*(int *)(v11 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v19, (uint64_t)v16, type metadata accessor for CRLFileItemAtomicDataStruct);
  *(_QWORD *)&v7[*(int *)(v27 + 20)] = _swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLFileItemAtomicDataStruct);
  v24 = sub_1004B7878(&qword_1013F9AB8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29EBC);
  CRRegister.init(_:)(v13, v11, v24);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLFileItemAtomicDataStruct);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v7, v5, v29);
  sub_1004B84E0((uint64_t)v7, v30, type metadata accessor for CRLFileItemCRDTData);
  sub_1004B84A4(v31, type metadata accessor for CRLAssetData);
  return sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100BC4008()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v0 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - v4;
  v6 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v6);
  CRRegister.wrappedValue.getter(v6);
  v7 = sub_100BC7930((uint64_t)v5, (uint64_t)v2);
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
  return v7 & 1;
}

uint64_t sub_100BC40E8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DDD78 != -1)
    swift_once(&qword_1013DDD78, sub_100BC3D00);
  v0 = qword_101480E48;
  v1 = qword_101480E58;
  swift_bridgeObjectRetain(unk_101480E50);
  swift_retain(v1);
  return v0;
}

uint64_t sub_100BC415C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100BC419C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004F2A1C(v5, (uint64_t)qword_101481278);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v6, v5);
  v7 = &v4[*(int *)(v2 + 20)];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  *(_QWORD *)&v4[*(int *)(v2 + 24)] = _swiftEmptyDictionarySingleton;
  return sub_100BC3D3C((uint64_t)v4, a1);
}

uint64_t sub_100BC4280(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F9AD8, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29CEC);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100BC42C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100BC4318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_100BC4368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100BC43B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100BC4420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100BC4470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100BC44C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BC4518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100BC4580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100BC45D0()
{
  sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100BC4610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100BC4660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_100BC46B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7478, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29D4C);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100BC4714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7478, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29D4C);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100BC4788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100BC47EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_100BC4848(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100BC4898(char *a1, char *a2)
{
  return qword_100F29FC8[*a1] == qword_100F29FC8[*a2];
}

Swift::Int sub_100BC48BC()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F29FC8[v1]);
  return Hasher._finalize()();
}

void sub_100BC4908()
{
  char *v0;

  Hasher._combine(_:)(qword_100F29FC8[*v0]);
}

Swift::Int sub_100BC493C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F29FC8[v2]);
  return Hasher._finalize()();
}

void sub_100BC4984(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F29FC8[*v1];
}

uint64_t sub_100BC499C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000015;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x65737341656C6966;
}

uint64_t sub_100BC4A14@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BC7A40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BC4A38()
{
  char *v0;

  return qword_100F29FC8[*v0];
}

void sub_100BC4A50(_QWORD *a1@<X8>)
{
  *a1 = &off_101264320;
}

uint64_t sub_100BC4A60(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100BC7630();
  v5 = sub_100BC7678();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100BC4AA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BC7678();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BC4ACC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BC7678();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100BC4AF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  void (*v32)(char *, uint64_t, __n128);
  uint64_t v33;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - v11;
  sub_1008FD5D8(v1, (uint64_t)v6);
  v13 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v13(v12, v6, v3);
  v14 = *(int *)(v7 + 20);
  v16 = *(_QWORD *)(v1 + v14);
  v15 = *(_QWORD *)(v1 + v14 + 8);
  v17 = *(_QWORD *)(v1 + *(int *)(v7 + 24));
  v18 = &v12[v14];
  *(_QWORD *)v18 = v16;
  *((_QWORD *)v18 + 1) = v15;
  *(_QWORD *)&v12[*(int *)(v7 + 24)] = v17;
  v19 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v32 = v19;
  swift_bridgeObjectRetain(v15);
  v20 = swift_bridgeObjectRetain(v17);
  v19(v6, v3, v20);
  v21 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  v22 = v1 + *(int *)(v21 + 20);
  sub_1008FD5D8(v22, (uint64_t)v6);
  v13(v9, v6, v3);
  v23 = *(int *)(v7 + 20);
  v25 = *(_QWORD *)(v22 + v23);
  v24 = *(_QWORD *)(v22 + v23 + 8);
  v26 = *(_QWORD *)(v22 + *(int *)(v7 + 24));
  v27 = &v9[v23];
  *(_QWORD *)v27 = v25;
  *((_QWORD *)v27 + 1) = v24;
  *(_QWORD *)&v9[*(int *)(v7 + 24)] = v26;
  swift_bridgeObjectRetain(v24);
  v28 = swift_bridgeObjectRetain(v26);
  v32(v6, v3, v28);
  v29 = *(_QWORD *)(v2 + *(int *)(v21 + 24));
  v30 = v33;
  sub_1004B84E0((uint64_t)v12, v33, type metadata accessor for CRLAssetData);
  sub_1004B84E0((uint64_t)v9, v30 + *(int *)(v21 + 20), type metadata accessor for CRLAssetData);
  *(_QWORD *)(v30 + *(int *)(v21 + 24)) = v29;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v29).n128_u64[0];
  return result;
}

uint64_t sub_100BC4CE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101407D90);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100BC7678();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLFileItemAtomicDataStruct.CodingKeys, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys, v11, v9, v10);
  v23 = 0;
  v12 = type metadata accessor for CRLAssetData(0);
  v13 = sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v23, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
    v15 = v3 + *(int *)(v14 + 20);
    v22 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v22, v5, v12, v13);
    v20 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v21 = 2;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v17 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100BC4E98(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v29 = a2;
  v30 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v30);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  v31 = sub_1004B804C(&qword_101407D88);
  v9 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v12);
  v15 = *(int *)(v14 + 24);
  v33 = a1;
  v34 = v15;
  v32 = (uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v32 + v15) = _swiftEmptyDictionarySingleton;
  v16 = a1[3];
  v17 = a1[4];
  sub_1004BB5A4(a1, v16);
  v18 = sub_100BC7678();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLFileItemAtomicDataStruct.CodingKeys, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys, v18, v16, v17);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = v9;
    v38 = 0;
    v20 = sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
    v21 = v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v38, v31, v30, v20);
    v22 = (uint64_t)v8;
    v23 = v32;
    sub_1004B84E0(v22, v32, type metadata accessor for CRLAssetData);
    v37 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &v37, v31, v21, v20);
    sub_1004B84E0((uint64_t)v5, v23 + *(int *)(v12 + 20), type metadata accessor for CRLAssetData);
    v24 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v36 = 2;
    v25 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v24, &v36, v31, v24, v25);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v31);
    v27 = v34;
    v26 = v35;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v23 + v27) = v26;
    sub_1004B8460(v23, v29, type metadata accessor for CRLFileItemAtomicDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
    sub_1004B84A4(v23, type metadata accessor for CRLFileItemAtomicDataStruct);
  }
}

uint64_t sub_100BC51E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;

  if ((static UUID.== infix(_:_:)(a1) & 1) == 0)
    return 0;
  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(int *)(v6 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  v12 = v8 == *v10 && v9 == v11;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, *v10, v11, 0) & 1) == 0)
    return 0;
  if ((sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v6 + 24)), *(_QWORD *)(a2 + *(int *)(v6 + 24))) & 1) == 0)
    return 0;
  v13 = *(int *)(a3 + 20);
  v14 = a1 + v13;
  v15 = a2 + v13;
  if ((static UUID.== infix(_:_:)(a1 + v13) & 1) == 0)
    return 0;
  v16 = *(int *)(v6 + 20);
  v17 = *(_QWORD *)(v14 + v16);
  v18 = *(_QWORD *)(v14 + v16 + 8);
  v19 = (_QWORD *)(v15 + v16);
  v20 = v19[1];
  v21 = v17 == *v19 && v18 == v20;
  if ((v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, *v19, v20, 0) & 1) != 0)
    && (sub_100C9E04C(*(_QWORD *)(v14 + *(int *)(v6 + 24)), *(_QWORD *)(v15 + *(int *)(v6 + 24))) & 1) != 0)
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(a3 + 24)), *(_QWORD *)(a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

void sub_100BC52E8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100BC4E98(a1, a2);
}

uint64_t sub_100BC52FC(_QWORD *a1)
{
  return sub_100BC4CE0(a1);
}

uint64_t sub_100BC5310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101407D98, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29C2C);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BC5368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013F9AB8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29EBC);
  v7 = sub_1004B7878(&qword_101407DA0, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29C04);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100BC53FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101407D98, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29C2C);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100BC544C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101407D40, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A84);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100BC54B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101407D40, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A84);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100BC550C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101407D40, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A84);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100BC555C()
{
  return 5;
}

void sub_100BC5568(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_101407908)
  {
    v6 = (uint64_t)a1 + qword_101480E60;
    swift_beginAccess((char *)a1 + qword_101480E60, v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    swift_beginAccess(v1 + qword_101480E60, v8, 33, 0);
    v7 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    swift_retain(a1);
    CRStruct_1.merge(_:)(v5, v3, v7);
    swift_endAccess(v8);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
  }
}

uint64_t sub_100BC5694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  char v45[24];
  char v46[24];
  char v47[24];

  v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - v7;
  v9 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v42 - v19;
  if (*(_UNKNOWN ****)a1 == &off_101407908)
  {
    v43 = v3;
    v21 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
    swift_beginAccess(v21, v47, 0, 0);
    sub_1004CB7BC(v21, (uint64_t)v20, (uint64_t *)&unk_1013F02C0);
    v22 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
    swift_beginAccess(v22, v46, 0, 0);
    sub_1004CB7BC(v22, (uint64_t)v17, (uint64_t *)&unk_1013F02C0);
    swift_retain(a1);
    LOBYTE(v22) = sub_100D5ED30((uint64_t)v20, (uint64_t)v17);
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013F02C0);
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013F02C0);
    if ((v22 & 1) != 0)
    {
      v23 = v1 + qword_101480E60;
      swift_beginAccess(v23, v45, 0, 0);
      sub_1004B8460(v23, (uint64_t)v14, type metadata accessor for CRLFileItemCRDTData);
      v24 = a1 + qword_101480E60;
      swift_beginAccess(a1 + qword_101480E60, v44, 0, 0);
      sub_1004B8460(v24, (uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
      v25 = sub_1004B804C(&qword_1013F1870);
      CRRegister.wrappedValue.getter(v25);
      CRRegister.wrappedValue.getter(v25);
      if ((static UUID.== infix(_:_:)(v8) & 1) == 0)
        goto LABEL_17;
      v26 = type metadata accessor for CRLAssetData(0);
      v27 = *(int *)(v26 + 20);
      v28 = *(_QWORD *)&v8[v27];
      v29 = *(_QWORD *)&v8[v27 + 8];
      v30 = &v5[v27];
      v31 = *((_QWORD *)v30 + 1);
      if (v28 != *(_QWORD *)v30 || v29 != v31)
      {
        v32 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, *(_QWORD *)v30, v31, 0) & 1) == 0)
          goto LABEL_18;
      }
      if ((sub_100C9E04C(*(_QWORD *)&v8[*(int *)(v26 + 24)], *(_QWORD *)&v5[*(int *)(v26 + 24)]) & 1) == 0)
        goto LABEL_17;
      v33 = *(int *)(v43 + 20);
      v34 = &v8[v33];
      v35 = &v5[v33];
      if ((static UUID.== infix(_:_:)(&v8[v33]) & 1) == 0)
        goto LABEL_17;
      v36 = *(int *)(v26 + 20);
      v37 = *(_QWORD *)&v34[v36];
      v38 = *(_QWORD *)&v34[v36 + 8];
      v39 = &v35[v36];
      v40 = *((_QWORD *)v39 + 1);
      if (v37 != *(_QWORD *)v39 || v38 != v40)
      {
        v32 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, *(_QWORD *)v39, v40, 0) & 1) == 0)
          goto LABEL_18;
      }
      if ((sub_100C9E04C(*(_QWORD *)&v34[*(int *)(v26 + 24)], *(_QWORD *)&v35[*(int *)(v26 + 24)]) & 1) != 0)
        v32 = sub_100C9E04C(*(_QWORD *)&v8[*(int *)(v43 + 24)], *(_QWORD *)&v5[*(int *)(v43 + 24)]);
      else
LABEL_17:
        v32 = 0;
LABEL_18:
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFileItemAtomicDataStruct);
      swift_release(a1);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLFileItemCRDTData);
      return v32 & 1;
    }
    swift_release(a1);
  }
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_100BC5A5C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_101480E60;
  swift_beginAccess(v2 + qword_101480E60, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
    v12 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    CRStruct_1.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013F7478, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29D4C);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
  return v16;
}

uint64_t sub_100BC5C28(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v14[-v7];
  if (*a1 == &off_101407908)
  {
    v9 = v1 + qword_101480E60;
    swift_beginAccess(v9, v15, 0, 0);
    sub_1004B8460(v9, (uint64_t)v8, type metadata accessor for CRLFileItemCRDTData);
    v10 = (uint64_t)a1 + qword_101480E60;
    swift_beginAccess((char *)a1 + qword_101480E60, v14, 0, 0);
    sub_1004B8460(v10, (uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    v11 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    v12 = CRStruct_1.hasDelta(from:)(v5, v3, v11);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFileItemCRDTData);
    return v12 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLFileItemData.swift", 30, 2, 133, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC5DD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_101407DA8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_101480E60;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    v19 = v17 + qword_101480E60;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    v20 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    swift_retain(a1);
    v21 = v31;
    CRStruct_1.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_101407DA8);
    v22 = sub_1004B804C(&qword_101407D60);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_101407DA8);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_101407DA8);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_101407D58, &qword_101407D60, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_101407DA8);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLFileItemData.swift", 30, 2, 146, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC6144(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v46 = *v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101407D60);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v14 = sub_1004CBA30(&qword_101407D58, &qword_101407D60, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
  LOBYTE(v2) = v10;
  v15 = v48;
  PartialCRDT.init(serializedData:)(a1, a2, v10, v14);
  if (!v15)
  {
    v42 = v9;
    v43 = v7;
    v48 = v11;
    v16 = v47;
    swift_beginAccess(v47 + qword_101480E60, v51, 33, 0);
    v17 = type metadata accessor for CRLFileItemCRDTData(0);
    v18 = sub_1004B7878(&qword_1013F9AD0, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E94);
    LODWORD(v2) = CRStruct_1.merge(delta:)(v13, v17, v18);
    swift_endAccess(v51);
    if ((v2 & 1) == 0)
    {
      v39 = v13;
      v40 = v10;
      v41 = (int)v2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v19 = (void *)static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
      swift_beginAccess(v22, v49, 0, 0);
      v23 = v22;
      v24 = v44;
      sub_1004CB7BC(v23, v44, (uint64_t *)&unk_1013F02C0);
      v25 = v19;
      v26 = sub_1004B804C(&qword_1013E1A80);
      v27 = v42;
      CRRegister.wrappedValue.getter(v26);
      v28 = sub_1004CB800(v24, (uint64_t *)&unk_1013F02C0);
      v29 = UUID.uuidString.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v52 = v16;
      swift_retain(v16);
      v33 = String.init<A>(describing:)(&v52, v46);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v32;
      *(_QWORD *)(inited + 72) = v33;
      *(_QWORD *)(inited + 80) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v2 = *(uint64_t **)(inited + 16);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v2, v36);

      LOBYTE(v2) = v41;
      v10 = v40;
      v13 = v39;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return v2 & 1;
}

unint64_t sub_100BC6528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  v1 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v1);
  v33 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - v4;
  v32 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v32);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = sub_1004B804C(&qword_1013E0DD8);
  v11 = sub_1004B804C(&qword_101405DE0);
  v12 = *(_QWORD *)(v11 - 8);
  v29 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v29, v13 | 7);
  v31 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100EF5A10;
  v16 = (char *)(v15 + v14);
  v17 = &v16[*(int *)(v11 + 48)];
  *(_QWORD *)v16 = 1701603686;
  *((_QWORD *)v16 + 1) = 0xE400000000000000;
  v18 = v0 + qword_101480E60;
  swift_beginAccess(v18, v34, 32, 0);
  v19 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v34);
  sub_1004B8460((uint64_t)v9, (uint64_t)v5, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v22(v17, v5, v20);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLAssetData);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v23(v17, 0, 1, v20);
  v24 = &v16[v29];
  v25 = &v16[v29 + *(int *)(v11 + 48)];
  strcpy(&v16[v29], "linkMetadata");
  v24[13] = 0;
  *((_WORD *)v24 + 7) = -5120;
  swift_beginAccess(v18, v34, 32, 0);
  v26 = (uint64_t)v30;
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v34);
  v27 = v33;
  sub_1004B8460(v26 + *(int *)(v32 + 20), v33, type metadata accessor for CRLAssetData);
  sub_1004B84A4(v26, type metadata accessor for CRLFileItemAtomicDataStruct);
  v22(v25, (char *)v27, v20);
  sub_1004B84A4(v27, type metadata accessor for CRLAssetData);
  v23(v25, 0, 1, v20);
  return sub_1008D5968(v31);
}

uint64_t sub_100BC67F8()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_101480E60, type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100BC6820()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_101480E60, type metadata accessor for CRLFileItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLFileItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014078E0, (uint64_t)&nominal type descriptor for CRLFileItemData);
}

uint64_t sub_100BC6884(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLFileItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLFileItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101407C10, (uint64_t)&nominal type descriptor for CRLFileItemCRDTData);
}

uint64_t *sub_100BC6904(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013F1870);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

double sub_100BC6994(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = sub_1004B804C(&qword_1013F1870);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100BC69DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(&qword_1013F1870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100BC6A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(&qword_1013F1870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC6AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C(&qword_1013F1870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BC6B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C(&qword_1013F1870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC6B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC6B84);
}

uint64_t sub_100BC6B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013F1870);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100BC6C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC6C10);
}

uint64_t sub_100BC6C10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013F1870);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_100BC6C8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100BC6D00(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_100BC6D00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_101407C20)
  {
    v2 = type metadata accessor for CRLFileItemAtomicDataStruct(255);
    v3 = sub_1004B7878(&qword_1013F9AB8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29EBC);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_101407C20);
  }
}

uint64_t type metadata accessor for CRLFileItemAtomicDataStruct(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101407CA8, (uint64_t)&nominal type descriptor for CRLFileItemAtomicDataStruct);
}

uint64_t *sub_100BC6D8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v28);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for CRLAssetData(0);
    v10 = *(int *)(v9 + 20);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = *(int *)(v9 + 24);
    v15 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = v15;
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain(v13);
    v19 = swift_bridgeObjectRetain(v15);
    ((void (*)(char *, char *, uint64_t, __n128))v8)(v17, v18, v7, v19);
    v20 = *(int *)(v9 + 20);
    v21 = &v17[v20];
    v22 = &v18[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = *(int *)(v9 + 24);
    v25 = *(_QWORD *)&v18[v24];
    *(_QWORD *)&v17[v24] = v25;
    v26 = *(int *)(a3 + 24);
    v27 = *(uint64_t *)((char *)a2 + v26);
    *(uint64_t *)((char *)a1 + v26) = v27;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v27);
  }
  return a1;
}

double sub_100BC6EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  __n128 v6;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  type metadata accessor for CRLAssetData(0);
  swift_bridgeObjectRelease();
  v6 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, __n128))v5)(a1 + *(int *)(a2 + 20), v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100BC6F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = *(int *)(v8 + 24);
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_bridgeObjectRetain(v12);
  v18 = swift_bridgeObjectRetain(v14);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(v16, v17, v6, v18);
  v19 = *(int *)(v8 + 20);
  v20 = (_QWORD *)(v16 + v19);
  v21 = (_QWORD *)(v17 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = *(int *)(v8 + 24);
  v24 = *(_QWORD *)(v17 + v23);
  *(_QWORD *)(v16 + v23) = v24;
  v25 = *(int *)(a3 + 24);
  v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v26);
  return a1;
}

uint64_t sub_100BC7068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v12 = v11[1];
  v10[1] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = *(int *)(v8 + 24);
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  v15 = swift_bridgeObjectRelease();
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = a2 + v16;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(a1 + v16, a2 + v16, v6, v15);
  v19 = *(int *)(v8 + 20);
  v20 = (_QWORD *)(v17 + v19);
  v21 = (_QWORD *)(v18 + v19);
  *v20 = *v21;
  v22 = v21[1];
  v20[1] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = *(int *)(v8 + 24);
  v24 = *(_QWORD *)(v18 + v23);
  *(_QWORD *)(v17 + v23) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  v25 = *(int *)(a3 + 24);
  v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC71A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_OWORD *)(v10 + *(int *)(v8 + 20)) = *(_OWORD *)(v11 + *(int *)(v8 + 20));
  *(_QWORD *)(v10 + *(int *)(v8 + 24)) = *(_QWORD *)(v11 + *(int *)(v8 + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100BC7268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v14 = swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = a2 + v15;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(a1 + v15, a2 + v15, v6, v14);
  v18 = *(int *)(v8 + 20);
  v19 = (_QWORD *)(v16 + v18);
  v20 = (uint64_t *)(v17 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + *(int *)(v8 + 24)) = *(_QWORD *)(v17 + *(int *)(v8 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC7368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC7374);
}

uint64_t sub_100BC7374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100BC73F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC73FC);
}

uint64_t sub_100BC73FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_100BC7474(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLAssetData(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100BC74EC()
{
  return sub_1004B7878(&qword_101407CE8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F2998C);
}

uint64_t sub_100BC7518()
{
  return sub_1004B7878(&qword_1013F9AB8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29EBC);
}

uint64_t sub_100BC7544()
{
  return sub_1004B7878(&qword_101407CF0, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A5C);
}

uint64_t sub_100BC7570()
{
  return sub_1004B7878(&qword_101407CF8, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A34);
}

unint64_t sub_100BC75A0()
{
  unint64_t result;

  result = qword_101407D00;
  if (!qword_101407D00)
  {
    result = swift_getWitnessTable(&unk_100F29ACC, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D00);
  }
  return result;
}

unint64_t sub_100BC75E8()
{
  unint64_t result;

  result = qword_101407D08;
  if (!qword_101407D08)
  {
    result = swift_getWitnessTable(&unk_100F29BDC, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D08);
  }
  return result;
}

unint64_t sub_100BC7630()
{
  unint64_t result;

  result = qword_101407D10;
  if (!qword_101407D10)
  {
    result = swift_getWitnessTable(&unk_100F29BA4, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D10);
  }
  return result;
}

unint64_t sub_100BC7678()
{
  unint64_t result;

  result = qword_101407D18;
  if (!qword_101407D18)
  {
    result = swift_getWitnessTable(&unk_100F29B04, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D18);
  }
  return result;
}

unint64_t sub_100BC76C0()
{
  unint64_t result;

  result = qword_101407D20;
  if (!qword_101407D20)
  {
    result = swift_getWitnessTable(&unk_100F29B7C, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D20);
  }
  return result;
}

unint64_t sub_100BC7708()
{
  unint64_t result;

  result = qword_101407D28;
  if (!qword_101407D28)
  {
    result = swift_getWitnessTable(&unk_100F29B54, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407D28);
  }
  return result;
}

uint64_t sub_100BC774C()
{
  return sub_1004CBA30(&qword_101407D30, &qword_101407D38, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100BC7778()
{
  return sub_1004B7878(&qword_101407D40, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F29A84);
}

uint64_t sub_100BC77A4()
{
  return sub_1004B7878(&qword_101407D48, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29C6C);
}

uint64_t sub_100BC77D0()
{
  return sub_1004B7878(&qword_101407D50, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29CB4);
}

uint64_t sub_100BC77FC()
{
  return sub_1004B7878(&qword_1013F9AD8, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29CEC);
}

uint64_t sub_100BC7828()
{
  return sub_1004CBA30(&qword_101407D58, &qword_101407D60, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100BC7854()
{
  return sub_1004B7878(&qword_1013F7478, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29D4C);
}

uint64_t sub_100BC7880()
{
  return sub_1004B7878(&qword_101407D68, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29DCC);
}

uint64_t sub_100BC78AC()
{
  return sub_1004CBA30(&qword_101407D70, &qword_1013F1870, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100BC78D8()
{
  return sub_1004B7878(&qword_101407D78, type metadata accessor for CRLFileItemCRDTData, (uint64_t)&unk_100F29E2C);
}

uint64_t sub_100BC7904()
{
  return sub_1004B7878(&qword_101407D80, type metadata accessor for CRLFileItemAtomicDataStruct, (uint64_t)&unk_100F299D4);
}

uint64_t sub_100BC7930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;

  if ((static UUID.== infix(_:_:)(a1) & 1) == 0)
    return 0;
  v4 = type metadata accessor for CRLAssetData(0);
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  v10 = v6 == *v8 && v7 == v9;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v8, v9, 0) & 1) == 0)
    return 0;
  if ((sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24))) & 1) == 0)
    return 0;
  v11 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  v12 = *(int *)(v11 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  if ((static UUID.== infix(_:_:)(a1 + v12) & 1) == 0)
    return 0;
  v15 = *(int *)(v4 + 20);
  v16 = *(_QWORD *)(v13 + v15);
  v17 = *(_QWORD *)(v13 + v15 + 8);
  v18 = (_QWORD *)(v14 + v15);
  v19 = v18[1];
  v20 = v16 == *v18 && v17 == v19;
  if ((v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, *v18, v19, 0) & 1) != 0)
    && (sub_100C9E04C(*(_QWORD *)(v13 + *(int *)(v4 + 24)), *(_QWORD *)(v14 + *(int *)(v4 + 24))) & 1) != 0)
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v11 + 24)), *(_QWORD *)(a2 + *(int *)(v11 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100BC7A40(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x65737341656C6966 && a2 == 0xED00006174614474)
  {
    v5 = 0xED00006174614474;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65737341656C6966, 0xED00006174614474, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000015)
  {
    v7 = 0x8000000100FE9910;
    if (a2 == 0x8000000100FE9910)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE9910, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t storeEnumTagSinglePayload for CRLFileItemAtomicDataStruct.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100BC7BFC + 4 * byte_100F29925[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100BC7C30 + 4 * byte_100F29920[v4]))();
}

uint64_t sub_100BC7C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC7C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BC7C40);
  return result;
}

uint64_t sub_100BC7C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BC7C54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100BC7C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC7C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFileItemAtomicDataStruct.CodingKeys()
{
  return &type metadata for CRLFileItemAtomicDataStruct.CodingKeys;
}

unint64_t sub_100BC7C80()
{
  unint64_t result;

  result = qword_101407DB0;
  if (!qword_101407DB0)
  {
    result = swift_getWitnessTable(&unk_100F29F9C, &type metadata for CRLFileItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407DB0);
  }
  return result;
}

uint64_t sub_100BC7CC4(float32x4_t *a1, float32x4_t *a2)
{
  return sub_100BC891C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_100BC7CE8(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  _DWORD v9[16];
  uint64_t v10;

  v9[0] = sub_10086BBDC(a1.n128_u32[0]);
  v9[1] = sub_10086BBDC(a1.n128_u32[1]);
  v9[2] = sub_10086BBDC(a1.n128_u32[2]);
  v9[3] = sub_10086BBDC(a1.n128_u32[3]);
  v9[4] = sub_10086BBDC(a2.n128_u32[0]);
  v9[5] = sub_10086BBDC(a2.n128_u32[1]);
  v9[6] = sub_10086BBDC(a2.n128_u32[2]);
  v9[7] = sub_10086BBDC(a2.n128_u32[3]);
  v9[8] = sub_10086BBDC(a3.n128_u32[0]);
  v9[9] = sub_10086BBDC(a3.n128_u32[1]);
  v9[10] = sub_10086BBDC(a3.n128_u32[2]);
  v9[11] = sub_10086BBDC(a3.n128_u32[3]);
  v9[12] = sub_10086BBDC(a4.n128_u32[0]);
  v9[13] = sub_10086BBDC(a4.n128_u32[1]);
  v9[14] = sub_10086BBDC(a4.n128_u32[2]);
  v9[15] = sub_10086BBDC(a4.n128_u32[3]);
  return sub_10086A35C((uint64_t)v9, (uint64_t)&v10);
}

uint64_t sub_100BC7E20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  sub_100BC84F4(*a1, a1[1]);
  return sub_100BC88D4((uint64_t)&v4, a2);
}

uint64_t sub_100BC7E60@<X0>(uint64_t *a1@<X8>)
{
  __n128 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100BC7CE8(*v1, v1[1], v1[2], v1[3]);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_100BC7E8C()
{
  __n128 *v0;
  __n128 v2;
  __n128 v3;
  __n128 v4;
  __n128 v5;
  _QWORD v6[9];

  v2 = *v0;
  v3 = v0[1];
  v4 = v0[2];
  v5 = v0[3];
  Hasher.init(_seed:)(v6, 0);
  CRL3DRotation.hash(into:)(v2);
  CRL3DRotation.hash(into:)(v3);
  CRL3DRotation.hash(into:)(v4);
  CRL3DRotation.hash(into:)(v5);
  return Hasher._finalize()();
}

void sub_100BC7F08()
{
  __n128 *v0;
  __n128 v1;
  __n128 v2;
  __n128 v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  CRL3DRotation.hash(into:)(*v0);
  CRL3DRotation.hash(into:)(v1);
  CRL3DRotation.hash(into:)(v2);
  CRL3DRotation.hash(into:)(v3);
}

Swift::Int sub_100BC7F64(uint64_t a1)
{
  __n128 *v1;
  __n128 v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  _QWORD v7[9];

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  CRL3DRotation.hash(into:)(v3);
  CRL3DRotation.hash(into:)(v4);
  CRL3DRotation.hash(into:)(v5);
  CRL3DRotation.hash(into:)(v6);
  return Hasher._finalize()();
}

__n128 sub_100BC7FDC@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  v5 = *(_OWORD *)(v1 + 48);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100BC7FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100BC8948();
  v7 = sub_100BC8468();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100BC804C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100BC8948();
  v5 = sub_100BC898C();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Data);
}

uint64_t sub_100BC80B4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100BC8948();
  v5 = sub_100BC898C();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Data);
}

uint64_t sub_100BC810C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100BC8948();
  v3 = sub_100BC898C();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Data);
}

unint64_t sub_100BC8158()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 8) + 12387;
}

uint64_t sub_100BC816C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BC89D0(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_100BC8190@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8Freeform25CRLiCloudConnectionStatusO8rawValueACSgSi_tcfC_0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100BC81B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BC8D3C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BC81DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BC8D3C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BC8204(_QWORD *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  char v22;

  v17 = a5;
  v18 = a4;
  v19 = a3;
  v20 = a2;
  v7 = sub_1004B804C(&qword_101407DF8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_100BC8D3C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRL3DTransform.CodingKeys, &type metadata for CRL3DTransform.CodingKeys, v13, v11, v12);
  v21 = v20;
  v22 = 0;
  v14 = sub_1004B804C(&qword_1013FBD28);
  v15 = sub_100BC8D80(&qword_1013FBD30, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v22, v7, v14, v15);
  if (!v5)
  {
    v21 = v19;
    v22 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v22, v7, v14, v15);
    v21 = v18;
    v22 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v22, v7, v14, v15);
    v21 = v17;
    v22 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v22, v7, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100BC83D4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  result = sub_100BC8B28(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_100BC8400(_QWORD *a1)
{
  __n128 *v1;

  return sub_100BC8204(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_100BC8420()
{
  unint64_t result;

  result = qword_101407DB8;
  if (!qword_101407DB8)
  {
    result = swift_getWitnessTable(&unk_100F2A03C, &type metadata for CRL3DTransform);
    atomic_store(result, (unint64_t *)&qword_101407DB8);
  }
  return result;
}

unint64_t sub_100BC8468()
{
  unint64_t result;

  result = qword_101407DC0;
  if (!qword_101407DC0)
  {
    result = swift_getWitnessTable(&unk_100F2A124, &type metadata for CRL3DTransform);
    atomic_store(result, (unint64_t *)&qword_101407DC0);
  }
  return result;
}

unint64_t sub_100BC84B0()
{
  unint64_t result;

  result = qword_101407DC8;
  if (!qword_101407DC8)
  {
    result = swift_getWitnessTable(&unk_100F2A084, &type metadata for CRL3DTransform);
    atomic_store(result, (unint64_t *)&qword_101407DC8);
  }
  return result;
}

void sub_100BC84F4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100BC854C@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  int64_t v29;
  uint64_t v30;
  double *v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  double *v44;
  __int16 v45;
  char v46;
  char v47;
  char v48;
  char v49;

  if (BYTE6(v3) == 64)
  {
    if (!a1)
    {
      v44 = (double *)v4;
      v45 = v3;
      v46 = BYTE2(v3);
      v47 = BYTE3(v3);
      v48 = BYTE4(v3);
      v11 = (v3 >> 50) & 0x3F;
      v49 = BYTE5(v3);
      v10 = (char *)&v44;
      goto LABEL_22;
    }
    if (a1 == 1)
    {
      if (v4 >> 32 >= (int)v4)
      {
        v5 = __DataStorage._bytes.getter(a2);
        if (!v5)
        {
          __DataStorage._length.getter();
          v10 = 0;
          v11 = 0;
          goto LABEL_22;
        }
        v6 = v5;
        v7 = __DataStorage._offset.getter();
        v8 = (int)v4 - v7;
        if (!__OFSUB__((int)v4, v7))
        {
          v9 = __DataStorage._length.getter();
          v10 = (char *)(v6 + v8);
          if (v9 >= (v4 >> 32) - (int)v4)
            v9 = (v4 >> 32) - (int)v4;
          v11 = v9 / 4;
LABEL_22:
          v28 = sub_1005FF1DC(v10, v11);
          v29 = *((_QWORD *)v28 + 2);
          if (v29)
            goto LABEL_23;
          goto LABEL_30;
        }
        goto LABEL_43;
      }
      __break(1u);
    }
    else
    {
      v18 = *(_QWORD *)(v4 + 16);
      v19 = *(_QWORD *)(v4 + 24);
      swift_retain(v4);
      v20 = swift_retain(v3 & 0x3FFFFFFFFFFFFFFFLL);
      v21 = (char *)__DataStorage._bytes.getter(v20);
      if (v21)
      {
        v22 = __DataStorage._offset.getter();
        if (__OFSUB__(v18, v22))
          goto LABEL_44;
        v21 += v18 - v22;
      }
      v23 = __OFSUB__(v19, v18);
      v24 = v19 - v18;
      if (!v23)
      {
        v25 = __DataStorage._length.getter();
        if (v21)
        {
          if (v25 >= v24)
            v26 = v24;
          else
            v26 = v25;
          v27 = v26 / 4;
        }
        else
        {
          v27 = 0;
        }
        v28 = sub_1005FF1DC(v21, v27);
        swift_release(v3 & 0x3FFFFFFFFFFFFFFFLL);
        swift_release(v4);
        v29 = *((_QWORD *)v28 + 2);
        if (v29)
        {
LABEL_23:
          v44 = _swiftEmptyArrayStorage;
          sub_100600804(0, v29, 0);
          v30 = 0;
          v31 = v44;
          do
          {
            v32 = sub_10086BBDC(*((_DWORD *)v28 + v30 + 8));
            v44 = v31;
            v34 = *((_QWORD *)v31 + 2);
            v33 = *((_QWORD *)v31 + 3);
            if (v34 >= v33 >> 1)
            {
              sub_100600804(v33 > 1, v34 + 1, 1);
              v31 = v44;
            }
            ++v30;
            *((_QWORD *)v31 + 2) = v34 + 1;
            *((_DWORD *)v31 + v34 + 8) = v32;
          }
          while (v29 != v30);
          swift_bridgeObjectRelease();
LABEL_31:
          v35 = *((_QWORD *)v31 + 2);
          if (v35 < 4)
          {
            __break(1u);
          }
          else
          {
            sub_1009BAC50((uint64_t)(v31 + 4), 0, 9uLL);
            if (v35 >= 8)
            {
              v43 = v36;
              sub_1009BAC50((uint64_t)(v31 + 4), 4, 0x11uLL);
              if (v35 >= 0xC)
              {
                v42 = v37;
                sub_1009BAC50((uint64_t)(v31 + 4), 8, 0x19uLL);
                if (v35 >= 0x10)
                {
                  v41 = v38;
                  sub_1009BAC50((uint64_t)(v31 + 4), 12, 0x21uLL);
                  v40 = v39;
                  swift_bridgeObjectRelease();
                  result = sub_1004BBBC8(v4, v3);
                  v17 = v40;
                  v16 = v41;
                  v14 = 0;
                  v15 = v42;
                  v13 = v43;
                  goto LABEL_36;
                }
LABEL_40:
                __break(1u);
                JUMPOUT(0x100BC88A8);
              }
LABEL_39:
              __break(1u);
              goto LABEL_40;
            }
          }
          __break(1u);
          goto LABEL_39;
        }
LABEL_30:
        swift_bridgeObjectRelease();
        v31 = _swiftEmptyArrayStorage;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  result = sub_1004BBBC8(v4, v3);
  v13 = 0uLL;
  v14 = 1;
  v15 = 0uLL;
  v16 = 0uLL;
  v17 = 0uLL;
LABEL_36:
  *(_OWORD *)v2 = v13;
  *(_OWORD *)(v2 + 16) = v15;
  *(_OWORD *)(v2 + 32) = v16;
  *(_OWORD *)(v2 + 48) = v17;
  *(_BYTE *)(v2 + 64) = v14;
  return result;
}

uint64_t sub_100BC88D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101407DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC891C(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)))) >> 31;
}

unint64_t sub_100BC8948()
{
  unint64_t result;

  result = qword_101407DD8;
  if (!qword_101407DD8)
  {
    result = swift_getWitnessTable(&unk_100F2A184, &type metadata for CRL3DTransform);
    atomic_store(result, (unint64_t *)&qword_101407DD8);
  }
  return result;
}

unint64_t sub_100BC898C()
{
  unint64_t result;

  result = qword_101407DE0;
  if (!qword_101407DE0)
  {
    result = swift_getWitnessTable(&unk_100F2A14C, &type metadata for CRL3DTransform);
    atomic_store(result, (unint64_t *)&qword_101407DE0);
  }
  return result;
}

uint64_t sub_100BC89D0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 12387 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(12387, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 12643 && a2 == 0xE200000000000000)
  {
    v7 = 0xE200000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(12643, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 12899 && a2 == 0xE200000000000000)
  {
    v8 = 0xE200000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(12899, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 13155 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease(0xE200000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(13155, 0xE200000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100BC8B28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[4];
  char v14;
  __int128 v15;

  v3 = sub_1004B804C(&qword_101407DE8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_100BC8D3C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRL3DTransform.CodingKeys, &type metadata for CRL3DTransform.CodingKeys, v9, v7, v8);
  if (!v1)
  {
    v10 = sub_1004B804C(&qword_1013FBD28);
    v14 = 0;
    v11 = sub_100BC8D80(&qword_1013FC390, (uint64_t)&protocol conformance descriptor for SIMD4<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v14, v3, v10, v11);
    v13[3] = v15;
    v14 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v14, v3, v10, v11);
    v13[2] = v15;
    v14 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v14, v3, v10, v11);
    v13[1] = v15;
    v14 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v14, v3, v10, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v13[0] = v15;
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

unint64_t sub_100BC8D3C()
{
  unint64_t result;

  result = qword_101407DF0;
  if (!qword_101407DF0)
  {
    result = swift_getWitnessTable(&unk_100F2A2C8, &type metadata for CRL3DTransform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407DF0);
  }
  return result;
}

uint64_t sub_100BC8D80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_1013FBD28);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRL3DTransform.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100BC8E10 + 4 * byte_100F29FE5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100BC8E44 + 4 * byte_100F29FE0[v4]))();
}

uint64_t sub_100BC8E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC8E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BC8E54);
  return result;
}

uint64_t sub_100BC8E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BC8E68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100BC8E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BC8E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRL3DTransform.CodingKeys()
{
  return &type metadata for CRL3DTransform.CodingKeys;
}

ValueMetadata *type metadata accessor for CRL3DTransform()
{
  return &type metadata for CRL3DTransform;
}

unint64_t sub_100BC8EA4()
{
  unint64_t result;

  result = qword_101407E00;
  if (!qword_101407E00)
  {
    result = swift_getWitnessTable(&unk_100F2A2A0, &type metadata for CRL3DTransform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407E00);
  }
  return result;
}

unint64_t sub_100BC8EEC()
{
  unint64_t result;

  result = qword_101407E08;
  if (!qword_101407E08)
  {
    result = swift_getWitnessTable(&unk_100F2A1D8, &type metadata for CRL3DTransform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407E08);
  }
  return result;
}

unint64_t sub_100BC8F34()
{
  unint64_t result;

  result = qword_101407E10;
  if (!qword_101407E10)
  {
    result = swift_getWitnessTable(&unk_100F2A200, &type metadata for CRL3DTransform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101407E10);
  }
  return result;
}

uint64_t sub_100BC8F78(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100BC8FC0 + 4 * byte_100F2A320[a1]))(0x70756F7247, 0xE500000000000000);
  else
    return 0x6E776F6E6B6E55;
}

uint64_t sub_100BC8FC0()
{
  return 0x6570616853;
}

uint64_t sub_100BC8FD0()
{
  return 0x697463656E6E6F43;
}

uint64_t sub_100BC8FF4()
{
  return 0x6567616D49;
}

uint64_t sub_100BC9004()
{
  return 0x41724F6569766F4DLL;
}

uint64_t sub_100BC9024()
{
  return 1701603654;
}

uint64_t sub_100BC9034()
{
  return 0x65746973626557;
}

uint64_t sub_100BC904C()
{
  return 0x7463656A624F4433;
}

uint64_t sub_100BC9064()
{
  return 0x676E6977617244;
}

uint64_t sub_100BC907C()
{
  return 0x6168536E77617244;
}

uint64_t sub_100BC9098()
{
  return 0x6F4E796B63697453;
}

uint64_t type metadata accessor for CRLAnalyticsUtilities()
{
  return objc_opt_self(_TtC8Freeform21CRLAnalyticsUtilities);
}

void sub_100BC90D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(__n128);
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  Swift::String v23;
  void *object;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _UNKNOWN ****v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  char *v45;
  id v46;
  char v47;
  uint64_t v48;
  id v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;

  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(__n128))((swift_isaMask & *a2) + 0xC8);
  v9 = v8(v5);
  if ((v10 & 1) != 0 && !v9)
  {
    v11 = type metadata accessor for CRLGroupItem(0);
    v9 = swift_dynamicCastClass(a2, v11);
    if (v9)
    {
      v12 = a2;
      sub_1004E36C0();
      v14 = v13;
      v52 = v12;
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v19 = v13;
        else
          v19 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v15 = _CocoaArrayWrapper.endIndex.getter(v19);
        if (v15)
          goto LABEL_6;
      }
      else
      {
        v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v13);
        if (v15)
        {
LABEL_6:
          if (v15 < 1)
          {
            __break(1u);
            goto LABEL_38;
          }
          for (i = 0; i != v15; ++i)
          {
            if ((v14 & 0xC000000000000001) != 0)
              v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
            else
              v17 = *(id *)(v14 + 8 * i + 32);
            v18 = v17;
            sub_100BC90D8(a1, v17);

          }
        }
      }

      v9 = swift_bridgeObjectRelease_n(v14, 2);
    }
  }
  v20 = ((uint64_t (*)(uint64_t))v8)(v9);
  v22 = v21;
  v23._countAndFlagsBits = sub_100BC8F78(v20, v21 & 1);
  object = v23._object;
  v53 = 0x657079546D657469;
  v54 = 0xE800000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(object);
  v26 = v53;
  v25 = v54;
  if ((v22 & 1) != 0 && v20 == 4)
  {
    v27 = type metadata accessor for CRLMovieItem(0);
    v28 = swift_dynamicCastClass(a2, v27);
    if (v28)
    {
      v29 = v28;
      v30 = a2;
      swift_bridgeObjectRelease(v25);
      v31 = *(_UNKNOWN *****)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v31 == &off_1013E07D8)
        v32 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      else
        v32 = 0;
      swift_beginAccess(v32 + qword_10147E7D8, &v53, 32, 0);
      swift_retain(v31);
      v33 = sub_1004B804C(&qword_10140FCF0);
      CRRegister.wrappedValue.getter(v33);
      v34 = v7[*(int *)(v4 + 36)];
      swift_endAccess(&v53);
      sub_1004BF6D4((uint64_t)v7);
      swift_release(v31);
      if (v34)
        v35 = 0x6F69647541;
      else
        v35 = 0x6569766F4DLL;
      v53 = 0x657079546D657469;
      v54 = 0xE800000000000000;
      v36 = 0xE500000000000000;
      String.append(_:)(*(Swift::String *)&v35);
      swift_bridgeObjectRelease(0xE500000000000000);

      v26 = v53;
      v25 = v54;
    }
  }
  v37 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_33;
  swift_bridgeObjectRetain(v25);
  v38 = sub_100842E98(v26, v25);
  if ((v39 & 1) == 0)
  {
    swift_bridgeObjectRelease(v25);
LABEL_33:
    v49 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", 1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v53 = *a1;
    *a1 = 0x8000000000000000;
    sub_100826868((uint64_t)v49, v26, v25, isUniquelyReferenced_nonNull_native);
    v48 = *a1;
    *a1 = v53;
    goto LABEL_34;
  }
  v40 = *(id *)(*(_QWORD *)(v37 + 56) + 8 * v38);
  swift_bridgeObjectRelease(v25);
  v41 = objc_opt_self(NSNumber);
  v42 = swift_dynamicCastObjCClass(v40, v41);
  if (!v42)
  {

    v51 = v25;
    goto LABEL_35;
  }
  v43 = (void *)v42;
  v44 = v40;
  v45 = (char *)objc_msgSend(v43, "integerValue");
  if (!__OFADD__(v45, 1))
  {
    v46 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v45 + 1);
    v47 = swift_isUniquelyReferenced_nonNull_native(*a1);
    v53 = *a1;
    *a1 = 0x8000000000000000;
    sub_100826868((uint64_t)v46, v26, v25, v47);
    v48 = *a1;
    *a1 = v53;

LABEL_34:
    swift_bridgeObjectRelease(v25);
    v51 = v48;
LABEL_35:
    swift_bridgeObjectRelease(v51);
    return;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_100BC9504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for CRLFileReadWriteUserOptions(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100BC9790();
  qword_101480E68 = v1;
  return result;
}

uint64_t sub_100BC9540()
{
  return sub_100638F84((uint64_t)&unk_100F2A3F0, (uint64_t)&unk_100F2A418);
}

void sub_100BC9554(char a1)
{
  sub_100BC95C0(a1, (uint64_t)&unk_100F2A3F0, (uint64_t)&unk_100F2A418);
}

uint64_t sub_100BC9580()
{
  return sub_100638F84((uint64_t)&unk_100F2A3A8, (uint64_t)&unk_100F2A3D0);
}

void sub_100BC9594(char a1)
{
  sub_100BC95C0(a1, (uint64_t)&unk_100F2A3A8, (uint64_t)&unk_100F2A3D0);
}

void sub_100BC95C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  BYTE1(v14) = a1;
  swift_retain(v3);
  static Published.subscript.setter((char *)&v14 + 1, v3, KeyPath, v8);
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = swift_getKeyPath(a2);
  v11 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v14, v3, v10, v11);
  swift_release(v10);
  swift_release(v11);
  v12 = v14;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setBool:forKey:", v12, v13);

}

uint64_t sub_100BC96D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveObjectUUIDs;
  v2 = sub_1004B804C(&qword_10140B9D0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveCRDTMetadata, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100BC974C()
{
  return type metadata accessor for CRLFileReadWriteUserOptions(0);
}

uint64_t type metadata accessor for CRLFileReadWriteUserOptions(uint64_t a1)
{
  uint64_t result;

  result = qword_101407EF8;
  if (!qword_101407EF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileReadWriteUserOptions);
  return result;
}

uint64_t sub_100BC9790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  unsigned __int8 v9;
  void (*v10)(uint64_t, char *, uint64_t);
  uint64_t v11;
  id v12;
  NSString v13;
  unsigned __int8 v14;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v1 = sub_1004B804C(&qword_10140B9D0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveObjectUUIDs;
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "BOOLForKey:", v8);

  v18 = v9;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  v10 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v10(v5, v4, v1);
  v11 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveCRDTMetadata;
  v12 = objc_msgSend(v6, "standardUserDefaults");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "BOOLForKey:", v13);

  v17 = v14;
  Published.init(initialValue:)(&v17, &type metadata for Bool);
  v10(v11, v4, v1);
  return v0;
}

uint64_t sub_100BC9940@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLFileReadWriteUserOptions(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t *sub_100BC998C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(v7 + 48);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      v14 = v13[1];
      *v12 = *v13;
      v12[1] = v14;
      v15 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
      v16 = swift_bridgeObjectRetain(v14);
      v15(a1, 0, 5, v7, v16);
    }
  }
  return a1;
}

double sub_100BC9A7C(uint64_t a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  v2 = sub_1004B804C(&qword_1013E1790);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 5, v2))
  {
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

char *sub_100BC9AF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v14;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(v6 + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
    v14 = swift_bridgeObjectRetain(v12);
    v13(a1, 0, 5, v6, v14);
  }
  return a1;
}

char *sub_100BC9BC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v19 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(a1, a2, v19);
      v20 = *(int *)(v6 + 48);
      v21 = &a1[v20];
      v22 = &a2[v20];
      *(_QWORD *)v21 = *(_QWORD *)v22;
      v23 = *((_QWORD *)v22 + 1);
      *((_QWORD *)v21 + 1) = v23;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1004CB800((uint64_t)a1, &qword_1013E1790);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 48);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v15;
  v16 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v7 + 56);
  v17 = swift_bridgeObjectRetain(v15);
  v16(a1, 0, 5, v6, v17);
  return a1;
}

char *sub_100BC9D1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_100BC9DDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 5, v6);
  v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      v14 = *(int *)(v6 + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v18 = *(_QWORD *)v16;
      v17 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1004CB800((uint64_t)a1, &qword_1013E1790);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  return a1;
}

uint64_t sub_100BC9F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC9F1C);
}

uint64_t sub_100BC9F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1004B804C(&qword_1013E1790);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 6)
    return v5 - 5;
  else
    return 0;
}

uint64_t sub_100BC9F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC9F78);
}

uint64_t sub_100BC9F78(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 5);
  else
    v5 = 0;
  v6 = sub_1004B804C(&qword_1013E1790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100BC9FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E1790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 5, v2);
}

uint64_t sub_100BCA00C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E1790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 5, v4);
}

uint64_t type metadata accessor for CRLBoardLibraryViewModel.Folder(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101408068, (uint64_t)&nominal type descriptor for CRLBoardLibraryViewModel.Folder);
}

uint64_t sub_100BCA064(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_100F2A4A0);
    swift_initEnumMetadataSinglePayload(a1, 256, v4, 5);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library()
{
  return &type metadata for CRLBoardLibraryViewModel.Library;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel()
{
  return &type metadata for CRLBoardLibraryViewModel;
}

uint64_t *sub_100BCA0F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v15 = (uint64_t *)((char *)a1 + v14);
      v16 = (uint64_t *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRetain(v17);
      v18 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48);
      v19 = (uint64_t *)((char *)a1 + v18);
      v20 = (uint64_t *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      swift_bridgeObjectRetain(v21);
      v22 = a1;
      v23 = a3;
      v24 = 2;
LABEL_11:
      swift_storeEnumTagMultiPayload(v22, v23, v24);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_1004B804C(&qword_1013E1790);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 5, v9))
      {
        v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v25 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        v26 = *(int *)(v9 + 48);
        v27 = (uint64_t *)((char *)a1 + v26);
        v28 = (uint64_t *)((char *)a2 + v26);
        v29 = v28[1];
        *v27 = *v28;
        v27[1] = v29;
        v30 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, __n128))(v10 + 56);
        v31 = swift_bridgeObjectRetain(v29);
        v30(a1, 0, 5, v9, v31);
      }
      v22 = a1;
      v23 = a3;
      v24 = 1;
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

double sub_100BCA2AC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 2)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1004B804C((uint64_t *)&unk_1013EA630);
LABEL_7:
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    return result;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 5, v5))
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      goto LABEL_7;
    }
  }
  return result;
}

char *sub_100BCA384(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    swift_bridgeObjectRetain(v14);
    v15 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain(v18);
    v19 = a1;
    v20 = a3;
    v21 = 2;
LABEL_9:
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v22 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      v23 = *(int *)(v7 + 48);
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
      v28 = swift_bridgeObjectRetain(v26);
      v27(a1, 0, 5, v7, v28);
    }
    v19 = a1;
    v20 = a3;
    v21 = 1;
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100BCA510(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v28;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v12 = &a1[v11];
      v13 = &a2[v11];
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v14 = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 1) = v14;
      swift_bridgeObjectRetain(v14);
      v15 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48);
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      v18 = *((_QWORD *)v17 + 1);
      *((_QWORD *)v16 + 1) = v18;
      swift_bridgeObjectRetain(v18);
      v19 = a1;
      v20 = a3;
      v21 = 2;
LABEL_10:
      swift_storeEnumTagMultiPayload(v19, v20, v21);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1004B804C(&qword_1013E1790);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
      {
        v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v22 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        v23 = *(int *)(v7 + 48);
        v24 = &a1[v23];
        v25 = &a2[v23];
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v26 = *((_QWORD *)v25 + 1);
        *((_QWORD *)v24 + 1) = v26;
        v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v8 + 56);
        v28 = swift_bridgeObjectRetain(v26);
        v27(a1, 0, 5, v7, v28);
      }
      v19 = a1;
      v20 = a3;
      v21 = 1;
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardLibraryViewModel.Item(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014080E8, (uint64_t)&nominal type descriptor for CRLBoardLibraryViewModel.Item);
}

char *sub_100BCA6E0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
    v12 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
    v13 = a1;
    v14 = a3;
    v15 = 2;
LABEL_9:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1004B804C(&qword_1013E1790);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 5, v7);
    }
    v13 = a1;
    v14 = a3;
    v15 = 1;
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_100BCA848(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
      v12 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
      v13 = a1;
      v14 = a3;
      v15 = 2;
LABEL_10:
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1004B804C(&qword_1013E1790);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
      {
        v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v16 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 5, v7);
      }
      v13 = a1;
      v14 = a3;
      v15 = 1;
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100BCA9C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _BYTE v5[32];
  _QWORD v6[3];

  v6[0] = &unk_100F2A4E0;
  result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v5, *(_QWORD *)(result - 8) + 64, &unk_100F2A4A0);
      v6[2] = v5;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v6);
      return 0;
    }
  }
  return result;
}

id sub_100BCAA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSString v18;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v20 - v6;
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (!EnumCaseMultiPayload)
    return 0;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1004B84E0((uint64_t)v10, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1004B8460((uint64_t)v7, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v13 = sub_1004B804C(&qword_1013E1790);
    v14 = (char *)&loc_100BCABAC
        + *((int *)qword_100BCAD50
          + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 5, v13));
    __asm { BR              X10 }
  }
  v16 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v10[*(int *)(v16 + 48) + 8]);
  v17 = (void *)objc_opt_self(UIImage);
  v18 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v17, "systemImageNamed:", v18);

  if (!v15)
  {
    __break(1u);
    JUMPOUT(0x100BCAD50);
  }
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  return v15;
}

void sub_100BCAD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  v5 = sub_1004B804C(&qword_1013E1790);
  v6 = (char *)&loc_100BCADF4
     + dword_100BCB10C[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 5, v5)];
  __asm { BR              X10 }
}

uint64_t sub_100BCAE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + *(int *)(v0 + 48));
  v3 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  return v2;
}

uint64_t sub_100BCB124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - v17;
  __chkstk_darwin(v19);
  v41 = (uint64_t)&v38 - v20;
  sub_1004B8460(a1, (uint64_t)&v38 - v20, v21);
  v42 = *(_QWORD *)(a2 + 16);
  if (v42)
  {
    v22 = 0;
    v23 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v24 = *(_QWORD *)(v4 + 72);
    v39 = v24;
    v40 = v6 + 8;
    while (1)
    {
      sub_1004B8460(v23, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v6, v43) != 2)
        break;
      sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease();
      sub_1004B84E0((uint64_t)v6, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      v25 = (uint64_t)v15;
      v26 = (uint64_t)v12;
      v27 = v41;
      v28 = static UUID.== infix(_:_:)(v18);
      sub_1004B8460((uint64_t)v18, v25, type metadata accessor for CRLBoardIdentifier);
      v29 = v27;
      v12 = (char *)v26;
      sub_1004B8460(v29, v26, type metadata accessor for CRLBoardIdentifier);
      if ((v28 & 1) == 0)
      {
        sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v25, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        v15 = (char *)v25;
        v24 = v39;
        goto LABEL_4;
      }
      v30 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v31 = *(_QWORD *)(v25 + v30);
      v32 = *(_QWORD *)(v25 + v30 + 8);
      v33 = (_QWORD *)(v26 + v30);
      v34 = v33[1];
      v35 = v31 == *v33 && v32 == v34;
      v15 = (char *)v25;
      if (v35)
      {
        sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v25, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_17;
      }
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, *v33, v34, 0);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v25, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v24 = v39;
      if ((v36 & 1) != 0)
        goto LABEL_17;
LABEL_5:
      ++v22;
      v23 += v24;
      if (v42 == v22)
        goto LABEL_15;
    }
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_4:
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_5;
  }
LABEL_15:
  v22 = 0;
LABEL_17:
  sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
  return v22;
}

void sub_100BCB498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v4, v5);
  v6 = sub_1004B804C(&qword_1013E1790);
  v7 = (char *)sub_100BCB554
     + 4
     * byte_100F2A440[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 5, v6)];
  __asm { BR              X10 }
}

uint64_t sub_100BCB554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(int *)(v1 + 48) + 8));
  v3 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0, v3);
  *(_QWORD *)(v2 - 48) = 0;
  *(_QWORD *)(v2 - 40) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 - 40));
  *(_QWORD *)(v2 - 48) = 0xD000000000000012;
  *(_QWORD *)(v2 - 40) = 0x8000000100FFE270;
  v4._countAndFlagsBits = 1919251285;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE400000000000000);
  return *(_QWORD *)(v2 - 48);
}

uint64_t sub_100BCB654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v22;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = String._bridgeToObjectiveC()();
      v8 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v11 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    }
    else
    {
      v16 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v3[*(int *)(v16 + 48) + 8]);
      v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v18 = String._bridgeToObjectiveC()();
      v19 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v11 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_1004B84A4((uint64_t)v3, v11);
  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  }
  return v10;
}

void sub_100BCB904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v2 = __chkstk_darwin(v1);
  v3 = __chkstk_darwin(v2);
  v4 = __chkstk_darwin(v3);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v8, v9);
  v10 = sub_1004B804C(&qword_1013E1790);
  v11 = (char *)&loc_100BCBA48
      + *((int *)qword_100BCBC98
        + (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 5, v10));
  __asm { BR              X10 }
}

uint64_t sub_100BCBA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease(*(_QWORD *)(v2 + *(int *)(v1 + 48) + 8));
  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v2, v3);
}

uint64_t sub_100BCBCB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  __int128 v78;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v72 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v68 = (uint64_t)&v67 - v7;
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v69 = (uint64_t)&v67 - v12;
  v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - v23;
  v25 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v71 = a2;
  v73 = v25;
  v70(a2, 1, 1);
  v26 = objc_msgSend(a1, "activityType");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = sub_100874944(v27, v29);
  if (v30 != 5)
  {
    if (v30 == 7)
    {
      v31 = objc_msgSend(a1, "userInfo");
      if (v31)
      {
        v32 = v31;
        v33 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v31, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v74[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActivityIdentifier);
        v74[1] = v34;
        AnyHashable.init<A>(_:)(v74, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v33 + 16) && (v35 = sub_1008432BC((uint64_t)&v75), (v36 & 1) != 0))
        {
          sub_1004CB6E8(*(_QWORD *)(v33 + 56) + 32 * v35, (uint64_t)&v77);
        }
        else
        {
          v77 = 0u;
          v78 = 0u;
        }
        sub_1004B89A4((uint64_t)&v75);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v78 + 1))
        {
          result = swift_dynamicCast(&v75, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if ((result & 1) != 0)
          {
            v50 = v69;
            sub_10067B81C(v75, v76, v69);
            sub_1004B84E0(v50, (uint64_t)v21, type metadata accessor for CRLBoardIdentifierStorage);
            sub_1004B84E0((uint64_t)v21, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
            v56 = sub_1004B804C((uint64_t *)&unk_1013EA630);
            v57 = v68;
            v58 = (_QWORD *)(v68 + *(int *)(v56 + 48));
            sub_1004B84E0((uint64_t)v24, v68, type metadata accessor for CRLBoardIdentifier);
            v59 = v71;
            sub_1004CB800(v71, (uint64_t *)&unk_1013E3830);
            *v58 = 0;
            v58[1] = 0xE000000000000000;
            v60 = v73;
            swift_storeEnumTagMultiPayload(v57, v73, 2);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v70)(v57, 0, 1, v60);
            v61 = v57;
            return sub_100874B10(v61, v59);
          }
          return result;
        }
        return sub_1004CB800((uint64_t)&v77, &qword_1013E0230);
      }
    }
    else
    {
      v42 = objc_msgSend(a1, "userInfo");
      if (v42)
      {
        v43 = v42;
        v44 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v42, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        strcpy((char *)v74, "viewModelItem");
        HIWORD(v74[1]) = -4864;
        AnyHashable.init<A>(_:)(v74, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v44 + 16))
        {
          v45 = sub_1008432BC((uint64_t)&v75);
          v47 = v72;
          v46 = v73;
          if ((v48 & 1) != 0)
          {
            sub_1004CB6E8(*(_QWORD *)(v44 + 56) + 32 * v45, (uint64_t)&v77);
          }
          else
          {
            v77 = 0u;
            v78 = 0u;
          }
        }
        else
        {
          v77 = 0u;
          v78 = 0u;
          v47 = v72;
          v46 = v73;
        }
        sub_1004B89A4((uint64_t)&v75);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v78 + 1))
        {
          result = swift_dynamicCast(&v75, &v77, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
          if ((result & 1) != 0)
          {
            v51 = v75;
            v52 = v76;
            v53 = type metadata accessor for JSONDecoder(0);
            swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
            v54 = JSONDecoder.init()();
            v55 = sub_1004B7878(&qword_1013F3008, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A5B0);
            dispatch thunk of JSONDecoder.decode<A>(_:from:)(v47, v46, v51, v52, v46, v55);
            v66 = v71;
            sub_1004CB800(v71, (uint64_t *)&unk_1013E3830);
            swift_release(v54);
            sub_1004BBBC8(v51, v52);
            ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v70)(v47, 0, 1, v46);
            return sub_100874B10((uint64_t)v47, v66);
          }
          return result;
        }
        return sub_1004CB800((uint64_t)&v77, &qword_1013E0230);
      }
    }
LABEL_15:
    v77 = 0u;
    v78 = 0u;
    return sub_1004CB800((uint64_t)&v77, &qword_1013E0230);
  }
  v37 = objc_msgSend(a1, "userInfo");
  if (!v37)
    goto LABEL_15;
  v38 = v37;
  v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  strcpy((char *)v74, "boardId");
  v74[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v74, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v39 + 16) && (v40 = sub_1008432BC((uint64_t)&v75), (v41 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v39 + 56) + 32 * v40, (uint64_t)&v77);
  }
  else
  {
    v77 = 0u;
    v78 = 0u;
  }
  sub_1004B89A4((uint64_t)&v75);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v78 + 1))
    return sub_1004CB800((uint64_t)&v77, &qword_1013E0230);
  result = swift_dynamicCast(&v75, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((result & 1) != 0)
  {
    sub_10067B81C(v75, v76, (uint64_t)v10);
    sub_1004B84E0((uint64_t)v10, (uint64_t)v15, type metadata accessor for CRLBoardIdentifierStorage);
    sub_1004B84E0((uint64_t)v15, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    v62 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    v63 = v68;
    v64 = (_QWORD *)(v68 + *(int *)(v62 + 48));
    sub_1004B84E0((uint64_t)v18, v68, type metadata accessor for CRLBoardIdentifier);
    v59 = v71;
    sub_1004CB800(v71, (uint64_t *)&unk_1013E3830);
    *v64 = 0;
    v64[1] = 0xE000000000000000;
    v65 = v73;
    swift_storeEnumTagMultiPayload(v63, v73, 2);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v70)(v63, 0, 1, v65);
    v61 = v63;
    return sub_100874B10(v61, v59);
  }
  return result;
}

uint64_t sub_100BCC6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v1 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004B8460(v0, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 2)
  {
    v14 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[*(int *)(v14 + 48) + 8]);
    sub_1004B84E0((uint64_t)v10, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    sub_100C9F8F8((uint64_t)v13, (uint64_t)v3);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    sub_1004B84E0((uint64_t)v3, (uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata);
    v15 = *v7;
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  return v15;
}

void sub_100BCC934(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t inited;
  unint64_t v20;
  unint64_t v21;
  Class isa;
  double v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  NSString v43;
  id v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  char *v47;
  _QWORD v48[2];
  _BYTE v49[104];
  id v50;

  v3 = v1;
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for JSONEncoder(0, v11);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = JSONEncoder.init()();
  v14 = sub_1004B7878(&qword_1013F3028, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A588);
  v15 = dispatch thunk of JSONEncoder.encode<A>(_:)(v3, v5, v14);
  v17 = v16;
  swift_release(v13);
  if (!v2)
  {
    v47 = v10;
    v18 = sub_1004B804C(&qword_1013E49B0);
    inited = swift_initStackObject(v18, v49);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    strcpy((char *)v48, "viewModelItem");
    HIWORD(v48[1]) = -4864;
    AnyHashable.init<A>(_:)(v48, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = &type metadata for Data;
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 80) = v17;
    sub_1004BE310(v15, v17);
    v20 = sub_1008D5828(inited);
    v21 = v17;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
    v50 = a1;
    objc_msgSend(a1, "addUserInfoEntriesFromDictionary:", isa, v23);

    sub_1004B8460(v3, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v7, v5) == 2)
    {
      v24 = v21;
      v25 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v7[*(int *)(v25 + 48) + 8]);
      v26 = (uint64_t)v47;
      sub_1004B84E0((uint64_t)v7, (uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
      if (qword_1013DCFD8 != -1)
        swift_once(&qword_1013DCFD8, sub_1007123CC);
      v27 = type metadata accessor for UTType(0);
      sub_1004F2A1C(v27, (uint64_t)qword_10147F3F0);
      v28 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      v29 = UTType._bridgeToObjectiveC()().super.isa;
      v30 = objc_msgSend(v28, "initWithContentType:", v29);

      v32 = UUID.uuidString.getter(v31);
      v34 = v33;
      v48[0] = v32;
      v48[1] = v33;
      swift_bridgeObjectRetain(v33);
      v35._countAndFlagsBits = 58;
      v35._object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      swift_bridgeObjectRelease(v34);
      v37 = v48[0];
      v36 = v48[1];
      v38 = (uint64_t *)(v26 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v39 = *v38;
      v40 = (void *)v38[1];
      v48[0] = v37;
      v48[1] = v36;
      swift_bridgeObjectRetain(v36);
      v41._countAndFlagsBits = v39;
      v41._object = v40;
      String.append(_:)(v41);
      swift_bridgeObjectRelease(v36);
      v42 = v48[1];
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setRelatedUniqueIdentifier:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

      v44 = v50;
      objc_msgSend(v50, "setContentAttributeSet:", v30);
      objc_msgSend(v44, "setEligibleForSearch:", 1);
      objc_msgSend(v44, "setEligibleForHandoff:", 1);
      objc_msgSend(v44, "setEligibleForPublicIndexing:", 0);

      sub_1004BBBC8(v15, v24);
      v45 = type metadata accessor for CRLBoardIdentifier;
      v46 = v26;
    }
    else
    {
      sub_1004BBBC8(v15, v21);
      v45 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v46 = (uint64_t)v7;
    }
    sub_1004B84A4(v46, v45);
  }
}

uint64_t sub_100BCCD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  void *object;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t *v44;
  Swift::String v45;
  void *v46;
  uint64_t *v47;
  Swift::String v48;
  uint64_t v50;
  unint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v50 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v50 - v15;
  sub_1004B8460(v1, (uint64_t)&v50 - v15, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v8);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v50 = 0x203A7265646C6F46;
      v51 = 0xE800000000000000;
      sub_1004B8460(v1, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v19 = swift_getEnumCaseMultiPayload(v11, v8);
      if (v19)
      {
        if (v19 == 1)
        {
          sub_1004B84E0((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100BCAD68();
          v21 = v20;
          v23 = v22;
          v24 = (uint64_t)v7;
          v25 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        }
        else
        {
          v44 = (uint64_t *)&v11[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
          v21 = *v44;
          v23 = (void *)v44[1];
          v25 = type metadata accessor for CRLBoardIdentifier;
          v24 = (uint64_t)v11;
        }
        sub_1004B84A4(v24, v25);
      }
      else
      {
        v21 = sub_100BCE3AC();
        v23 = v43;
      }
      v45._countAndFlagsBits = v21;
      v45._object = v23;
      String.append(_:)(v45);
      swift_bridgeObjectRelease(v23);
      v40 = v50;
      v42 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      v41 = (uint64_t)v16;
    }
    else
    {
      v33 = (uint64_t *)&v16[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v34 = *v33;
      v35 = (void *)v33[1];
      sub_1004B84E0((uint64_t)v16, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
      v50 = 0;
      v51 = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease(v51);
      v50 = 0x203A6472616F42;
      v51 = 0xE700000000000000;
      v36._countAndFlagsBits = v34;
      v36._object = v35;
      String.append(_:)(v36);
      swift_bridgeObjectRelease(v35);
      v37._countAndFlagsBits = 0x69746E656469202CLL;
      v37._object = (void *)0xEE00203A72656966;
      String.append(_:)(v37);
      v38._countAndFlagsBits = sub_10067AD38();
      object = v38._object;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(object);
      v40 = v50;
      v41 = (uint64_t)v4;
      v42 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_1004B84A4(v41, v42);
  }
  else
  {
    v50 = 0x3A7972617262694CLL;
    v51 = 0xE900000000000020;
    sub_1004B8460(v1, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v26 = swift_getEnumCaseMultiPayload(v14, v8);
    if (v26)
    {
      if (v26 == 1)
      {
        sub_1004B84E0((uint64_t)v14, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v28 = v27;
        v30 = v29;
        v31 = (uint64_t)v7;
        v32 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        v47 = (uint64_t *)&v14[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
        v28 = *v47;
        v30 = (void *)v47[1];
        v32 = type metadata accessor for CRLBoardIdentifier;
        v31 = (uint64_t)v14;
      }
      sub_1004B84A4(v31, v32);
    }
    else
    {
      v28 = sub_100BCE3AC();
      v30 = v46;
    }
    v48._countAndFlagsBits = v28;
    v48._object = v30;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v30);
    return v50;
  }
  return v40;
}

uint64_t sub_100BCD0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 2)
  {
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardIdentifier);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  }
  else
  {
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100757E04(&_mh_execute_header, (uint64_t)"errorOpeningAlertTitle", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 254, "Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"errorOpeningAlertTitle", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2u, 254, (uint64_t)"Unexpected case.", 16, 2u);
    return 0;
  }
  return v9;
}

uint64_t sub_100BCD310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 2)
  {
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardIdentifier);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  }
  else
  {
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100757E04(&_mh_execute_header, (uint64_t)"errorOpeningAlertMessage", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 264, "Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"errorOpeningAlertMessage", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2u, 264, (uint64_t)"Unexpected case.", 16, 2u);
    return 0;
  }
  return v9;
}

uint64_t sub_100BCD528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 2)
  {
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardIdentifier);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  }
  else
  {
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100757E04(&_mh_execute_header, (uint64_t)"lastOpenCrashedAlertTitle", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 274, "Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastOpenCrashedAlertTitle", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2u, 274, (uint64_t)"Unexpected case.", 16, 2u);
    return 0;
  }
  return v9;
}

uint64_t sub_100BCD750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 2)
  {
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardIdentifier);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  }
  else
  {
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100757E04(&_mh_execute_header, (uint64_t)"lastOpenCrashedAlertMessage", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 284, "Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastOpenCrashedAlertMessage", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2u, 284, (uint64_t)"Unexpected case.", 16, 2u);
    return 0;
  }
  return v9;
}

void sub_100BCD968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  v5 = sub_1004B804C(&qword_1013E1790);
  v6 = (char *)sub_100BCDA0C
     + 4
     * byte_100F2A446[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 5, v5)];
  __asm { BR              X10 }
}

_UNKNOWN **sub_100BCDA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(int *)(v1 + 48) + 8));
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
  return &off_101265988;
}

uint64_t sub_100BCDA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a3;
  v49 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v43 - v9;
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v43 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v43 - v18;
  __chkstk_darwin(v20);
  v47 = (uint64_t)v43 - v21;
  sub_1004B8460(a1, (uint64_t)v43 - v21, v22);
  v23 = *(_QWORD *)(a2 + 16);
  v43[1] = a2;
  v44 = v5;
  if (!v23)
  {
    swift_bridgeObjectRetain(a2);
LABEL_15:
    sub_1004B84A4(v47, type metadata accessor for CRLBoardIdentifier);
    v39 = swift_bridgeObjectRelease();
    v40 = 1;
    v41 = v45;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v44 + 56))(v41, v40, 1, v49, v39);
  }
  v24 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v46 = v7 + 8;
  v48 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain(a2);
  while (1)
  {
    sub_1004B8460(v24, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B8460((uint64_t)v10, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v7, v49) != 2)
    {
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_4;
    }
    sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease();
    sub_1004B84E0((uint64_t)v7, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    v25 = v19;
    v26 = (uint64_t)v19;
    v27 = (uint64_t)v16;
    v28 = (uint64_t)v13;
    v29 = v47;
    v30 = static UUID.== infix(_:_:)(v25);
    sub_1004B8460(v26, v27, type metadata accessor for CRLBoardIdentifier);
    v31 = v29;
    v13 = (char *)v28;
    sub_1004B8460(v31, v28, type metadata accessor for CRLBoardIdentifier);
    if ((v30 & 1) == 0)
    {
      sub_1004B84A4(v28, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v27, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
      v16 = (char *)v27;
      v19 = (char *)v26;
      goto LABEL_4;
    }
    v32 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v33 = *(_QWORD *)(v27 + v32);
    v34 = *(_QWORD *)(v27 + v32 + 8);
    v35 = (_QWORD *)(v28 + v32);
    v36 = v35[1];
    v37 = v33 == *v35 && v34 == v36;
    v16 = (char *)v27;
    if (v37)
      break;
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, *v35, v36, 0);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v27, type metadata accessor for CRLBoardIdentifier);
    v19 = (char *)v26;
    sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
    if ((v38 & 1) != 0)
      goto LABEL_17;
LABEL_4:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v24 += v48;
    if (!--v23)
      goto LABEL_15;
  }
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v27, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
LABEL_17:
  sub_1004B84A4(v47, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  v41 = v45;
  sub_1004B84E0((uint64_t)v10, v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v40 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v44 + 56))(v41, v40, 1, v49, v39);
}

_QWORD *sub_100BCDE20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v37 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v33 = (uint64_t)&v28 - v10;
  __chkstk_darwin(v9);
  v32 = (uint64_t)&v28 - v11;
  v36 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v12 = __chkstk_darwin(v36);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v17 = (char *)&v28 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return _swiftEmptyArrayStorage;
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v35 = *(_QWORD *)(v15 + 72);
  v29 = a1;
  v30 = v14 + 8;
  swift_bridgeObjectRetain(a1);
  v20 = _swiftEmptyArrayStorage;
  v31 = v5;
  do
  {
    sub_1004B8460(v19, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B8460((uint64_t)v17, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v14, v36) == 2)
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v30[*(int *)(v21 + 48)]);
      v34 = v18;
      v22 = v33;
      sub_1004B84E0((uint64_t)v14, v33, type metadata accessor for CRLBoardIdentifier);
      v18 = v34;
      sub_1004B84E0(v22, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
      v23 = 0;
    }
    else
    {
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v23 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v23, 1, v5);
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1004CB800((uint64_t)v4, &qword_1013E0270);
    }
    else
    {
      v24 = v32;
      sub_1004B84E0((uint64_t)v4, v32, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84E0(v24, v37, type metadata accessor for CRLBoardIdentifier);
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
        v20 = (_QWORD *)sub_100D104C0(0, v20[2] + 1, 1, (unint64_t)v20);
      v26 = v20[2];
      v25 = v20[3];
      if (v26 >= v25 >> 1)
        v20 = (_QWORD *)sub_100D104C0(v25 > 1, v26 + 1, 1, (unint64_t)v20);
      v20[2] = v26 + 1;
      sub_1004B84E0(v37, (uint64_t)v20+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v26, type metadata accessor for CRLBoardIdentifier);
      v5 = v31;
    }
    v19 += v35;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease(v29);
  return v20;
}

void sub_100BCE1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v0, (uint64_t)v3, v4);
  v5 = sub_1004B804C(&qword_1013E1790);
  v6 = (char *)&loc_100BCE238
     + dword_100BCE394[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 5, v5)];
  __asm { BR              X10 }
}

id sub_100BCE248()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(int *)(v1 + 48) + 8));
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v2);

  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x100BCE394);
  }
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0, v4);
  return v3;
}

uint64_t sub_100BCE3AC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100BCE530(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  char v33;

  v30 = a2;
  v3 = sub_1004B804C(&qword_101408230);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101408238);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101408240);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101408248);
  v29 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v16);
  v17 = sub_100BD1C0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Library.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys, v17, v16, v15);
  if ((_BYTE)v30)
  {
    if (v30 == 1)
    {
      v32 = 1;
      v18 = sub_100BD1C94();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys, &v32, v12, &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys, v18);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    }
    else
    {
      v33 = 2;
      v20 = sub_100BD1C50();
      v21 = v26;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys, &v33, v12, &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys, v20);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
    }
  }
  else
  {
    v31 = 0;
    v19 = sub_100BD1CD8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys, &v31, v12, &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v12);
}

uint64_t sub_100BCE794(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCE7BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCE7E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCE80C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCE834(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C94();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCE85C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1C94();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCE884(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1CD8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCE8AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1CD8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100BCE8D4(_QWORD *a1@<X8>)
{
  *a1 = &off_101264190;
}

_QWORD *sub_100BCE8E4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100BD1834(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100BCE90C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_100BCE530(a1, *v1);
}

uint64_t sub_100BCE924()
{
  return sub_100BCE3AC();
}

void sub_100BCE92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (unsigned __int8 *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B84E0((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BCF9A8();
      v15 = (uint64_t)v9;
      v16 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v12[*(int *)(v17 + 48) + 8]);
      sub_1004B84E0((uint64_t)v12, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
      v18 = type metadata accessor for UUID(0);
      v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(a1, v18, v19);
      v20 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v21 = *(_QWORD *)v20;
      v22 = *((_QWORD *)v20 + 1);
      swift_bridgeObjectRetain(v22);
      String.hash(into:)(a1, v21, v22);
      swift_bridgeObjectRelease(v22);
      v15 = (uint64_t)v6;
      v16 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_1004B84A4(v15, v16);
  }
  else
  {
    Hasher._combine(_:)(*v12);
  }
}

uint64_t sub_100BCEB18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int EnumCaseMultiPayload;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v56 = sub_1004B804C(&qword_101408298);
  v45 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v53);
  v54 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1014082A0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  __chkstk_darwin(v4);
  v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v48);
  v49 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014082A8);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1014082B0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  sub_1004BB5A4(a1, v18);
  v19 = sub_100BD1D1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Item.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys, v19, v18, v17);
  sub_1004B8460(v58, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    v21 = v16;
    v58 = v14;
    v22 = v57;
    if (EnumCaseMultiPayload == 1)
    {
      v23 = v49;
      sub_1004B84E0((uint64_t)v12, v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v61 = 1;
      v24 = sub_100BD1DA4();
      v25 = v50;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys, &v61, v13, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys, v24);
      v26 = sub_1004B7878(&qword_1013E4870, type metadata accessor for CRLBoardLibraryViewModel.Folder, (uint64_t)&unk_100F2A780);
      v27 = v52;
      KeyedEncodingContainer.encode<A>(_:forKey:)(v23, v28, v52, v48, v26);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v27);
      sub_1004B84A4(v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v21, v13);
    }
    else
    {
      v35 = (uint64_t *)&v12[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v37 = *v35;
      v36 = v35[1];
      v51 = v37;
      v52 = v36;
      v38 = v54;
      sub_1004B84E0((uint64_t)v12, v54, type metadata accessor for CRLBoardIdentifier);
      v64 = 2;
      v39 = sub_100BD1D60();
      v40 = v55;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys, &v64, v13, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys, v39);
      v63 = 0;
      v41 = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
      v42 = v56;
      KeyedEncodingContainer.encode<A>(_:forKey:)(v38, &v63, v56, v53, v41);
      v43 = v58;
      if (!v22)
      {
        v62 = 1;
        KeyedEncodingContainer.encode(_:forKey:)(v51, v52, &v62, v42);
      }
      v44 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v40, v42, v44);
      sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v13);
    }
  }
  else
  {
    v30 = *v12;
    v60 = 0;
    v31 = sub_100BD1DE8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys, &v60, v13, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys, v31);
    v59 = v30;
    v32 = sub_100BD1E70();
    v33 = v47;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v59, v34, v47, &type metadata for CRLBoardLibraryViewModel.Library, v32);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_100BCEFF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  _BYTE *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  __n128 v72;
  char *v73;
  uint64_t v74;
  _BYTE *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;

  v78 = a2;
  v3 = sub_1004B804C(&qword_101408250);
  v4 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  v84 = v4;
  __chkstk_darwin(v3);
  v89 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101408258);
  v7 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  v82 = v7;
  __chkstk_darwin(v6);
  v88 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101408260);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  __chkstk_darwin(v9);
  v86 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1004B804C(&qword_101408268);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v74 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v74 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v90 = a1;
  sub_1004BB5A4(a1, v25);
  v27 = sub_100BD1D1C();
  v28 = v91;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Item.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys, v27, v25, v26);
  if (!v28)
  {
    v75 = v21;
    v76 = v18;
    v29 = v86;
    v30 = v87;
    v77 = v15;
    v32 = v88;
    v31 = v89;
    v91 = v13;
    v33 = KeyedDecodingContainer.allKeys.getter(v87);
    v34 = (char *)v33;
    if (*(_QWORD *)(v33 + 16) == 1)
    {
      if (*(_BYTE *)(v33 + 32))
      {
        if (*(_BYTE *)(v33 + 32) == 1)
        {
          v94 = 1;
          v35 = sub_100BD1DA4();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys, &v94, v30, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys, v35);
          v36 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          v37 = sub_1004B7878(&qword_1013E4830, type metadata accessor for CRLBoardLibraryViewModel.Folder, (uint64_t)&unk_100F2A7A8);
          v38 = (uint64_t)v76;
          v39 = v81;
          KeyedDecodingContainer.decode<A>(_:forKey:)(v36, v40, v81, v36, v37);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v32, v39);
          v41 = swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v12, v30, v41);
          v42 = v90;
          swift_storeEnumTagMultiPayload(v38, v91, 1);
          sub_1004B84E0(v38, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_12:
          sub_1004B84E0((uint64_t)v24, v78, type metadata accessor for CRLBoardLibraryViewModel.Item);
          return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
        }
        v97 = 2;
        v57 = sub_100BD1D60();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys, &v97, v30, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys, v57);
        v58 = type metadata accessor for CRLBoardIdentifier(0);
        v96 = 0;
        v59 = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
        v60 = v58;
        v61 = v83;
        v62 = v58;
        v63 = v31;
        KeyedDecodingContainer.decode<A>(_:forKey:)(v60, &v96, v83, v62, v59);
        v95 = 1;
        v64 = KeyedDecodingContainer.decode(_:forKey:)(&v95, v61);
        v65 = v85;
        v66 = v64;
        v88 = v67;
        v68 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48);
        v86 = v34;
        v69 = (uint64_t)v77;
        v70 = v61;
        v71 = (uint64_t *)&v77[v68];
        (*(void (**)(char *, uint64_t))(v84 + 8))(v63, v70);
        v72 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v12, v30, v72);
        v73 = v88;
        *v71 = v66;
        v71[1] = (uint64_t)v73;
        swift_storeEnumTagMultiPayload(v69, v91, 2);
        v56 = v69;
      }
      else
      {
        v93 = 0;
        v50 = sub_100BD1DE8();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys, &v93, v30, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys, v50);
        v51 = sub_100BD1E2C();
        v52 = v80;
        KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library, v53, v80, &type metadata for CRLBoardLibraryViewModel.Library, v51);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v29, v52);
        v54 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v12, v30, v54);
        v55 = v75;
        *v75 = v92;
        swift_storeEnumTagMultiPayload(v55, v91, 0);
        v56 = (uint64_t)v55;
      }
      sub_1004B84E0(v56, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v42 = v90;
      goto LABEL_12;
    }
    v43 = type metadata accessor for DecodingError(0);
    swift_allocError(v43, &protocol witness table for DecodingError, 0, 0);
    v45 = v44;
    sub_1004B804C(&qword_1013DF800);
    *v45 = v91;
    v46 = KeyedDecodingContainer.codingPath.getter(v30);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v46, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v47.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, enum case for DecodingError.typeMismatch(_:), v43);
    swift_willThrow(v47);
    v48 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v12, v30, v48);
  }
  v42 = v90;
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
}

uint64_t sub_100BCF678()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C746974;
  else
    return 0x6564496472616F62;
}

uint64_t sub_100BCF6BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BD2CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BCF6E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1D60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCF708(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1D60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCF730()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265646C6F66;
  if (*v0 != 1)
    v1 = 0x6472616F62;
  if (*v0)
    return v1;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_100BCF784@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BD2DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BCF7A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1D1C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCF7D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1D1C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCF7F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1DA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCF820(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1DA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCF848(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1DE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BCF870(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1DE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BCF898@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BCEFF0(a1, a2);
}

uint64_t sub_100BCF8AC(_QWORD *a1)
{
  return sub_100BCEB18(a1);
}

Swift::Int sub_100BCF8C4(uint64_t a1, uint64_t a2)
{
  return sub_100BD0E18(a1, a2, (void (*)(_QWORD *))sub_100BCE92C);
}

Swift::Int sub_100BCF8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BD0E68(a1, a2, a3, (void (*)(_QWORD *))sub_100BCE92C);
}

uint64_t sub_100BCF8E4()
{
  return sub_1004B7878(&qword_101408120, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A4F8);
}

unint64_t sub_100BCF914()
{
  unint64_t result;

  result = qword_101408128;
  if (!qword_101408128)
  {
    result = swift_getWitnessTable(&unk_100F2A6C8, &type metadata for CRLBoardLibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_101408128);
  }
  return result;
}

unint64_t sub_100BCF95C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101408130;
  if (!qword_101408130)
  {
    v1 = sub_1004CB6A4(&qword_101408138);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_101408130);
  }
  return result;
}

void sub_100BCF9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v5, v6);
  v7 = sub_1004B804C(&qword_1013E1790);
  v8 = (char *)sub_100BCFA8C
     + 4
     * byte_100F2A44C[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 5, v7)];
  __asm { BR              X10 }
}

void sub_100BCFA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = (uint64_t *)(v1 + *(int *)(v4 + 48));
  v7 = *v6;
  v8 = v6[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v1, v2);
  Hasher._combine(_:)(5uLL);
  v9 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v0, v2, v9);
  String.hash(into:)(v0, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  swift_bridgeObjectRelease(v8);
}

void sub_100BCFB5C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[14];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = sub_1004B804C(&qword_1014081B8);
  v21[13] = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v21[11] = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UUID(0);
  v21[12] = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1014081C0);
  v21[9] = *(_QWORD *)(v4 - 8);
  v21[10] = v4;
  __chkstk_darwin(v4);
  v21[8] = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1014081C8);
  v21[6] = *(_QWORD *)(v6 - 8);
  v21[7] = v6;
  __chkstk_darwin(v6);
  v21[5] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1014081D0);
  v21[3] = *(_QWORD *)(v8 - 8);
  v21[4] = v8;
  __chkstk_darwin(v8);
  v21[2] = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1014081D8);
  v21[0] = *(_QWORD *)(v10 - 8);
  v21[1] = v10;
  __chkstk_darwin(v10);
  v11 = sub_1004B804C(&qword_1014081E0);
  __chkstk_darwin(v11);
  v12 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1014081E8);
  v25 = *(_QWORD *)(v15 - 8);
  v26 = v15;
  __chkstk_darwin(v15);
  v16 = a1[3];
  v17 = a1[4];
  sub_1004BB5A4(a1, v16);
  v18 = sub_100BD1658();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys, v18, v16, v17);
  sub_1004B8460(v27, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v19 = sub_1004B804C(&qword_1013E1790);
  v20 = (char *)sub_100BCFE40
      + 4
      * byte_100F2A452[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v14, 5, v19)];
  __asm { BR              X10 }
}

uint64_t sub_100BCFE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v18;

  v4 = (uint64_t *)(v2 + *(int *)(v0 + 48));
  v6 = *v4;
  v5 = v4[1];
  *(_QWORD *)(v3 - 176) = v6;
  *(_QWORD *)(v3 - 96) = v5;
  v7 = *(_QWORD *)(v3 - 160);
  v8 = *(_QWORD *)(v3 - 128);
  v9 = *(_QWORD *)(v3 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v8, v2, v9);
  *(_BYTE *)(v3 - 65) = 5;
  v10 = sub_100BD169C();
  v11 = *(_QWORD *)(v3 - 168);
  v12 = *(_QWORD *)(v3 - 112);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys, v3 - 65, v12, &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys, v10);
  *(_BYTE *)(v3 - 66) = 0;
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v14 = *(_QWORD *)(v3 - 136);
  v15 = *(_QWORD *)(v3 - 104);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v8, v3 - 66, v14, v9, v13);
  if (v15)
  {
    v16 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 152) + 8))(v11, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  else
  {
    *(_BYTE *)(v3 - 67) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 96), v3 - 67, v14);
    v18 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 152) + 8))(v11, v14, v18);
    (*(void (**)(_QWORD, uint64_t))(v7 + 8))(*(_QWORD *)(v3 - 128), v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v1, v12);
}

uint64_t sub_100BD0148@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;

  v51 = a2;
  v3 = sub_1004B804C(&qword_101408148);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  __chkstk_darwin(v3);
  v55 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1004B804C(&qword_101408150);
  v45 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v53 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101408158);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v50 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101408160);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v49 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101408168);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  __chkstk_darwin(v11);
  v48 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_101408170);
  v37[3] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v52 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_101408178);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v18);
  v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)v37 - v22;
  v25 = a1[3];
  v24 = a1[4];
  v57 = a1;
  sub_1004BB5A4(a1, v25);
  v26 = sub_100BD1658();
  v56 = v17;
  v27 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys, v26, v25, v24);
  if (!v27)
  {
    v37[1] = v20;
    v37[2] = v23;
    v58 = v15;
    v28 = KeyedDecodingContainer.allKeys.getter(v14);
    if (*(_QWORD *)(v28 + 16) == 1)
      __asm { BR              X10 }
    v29 = type metadata accessor for DecodingError(0);
    swift_allocError(v29, &protocol witness table for DecodingError, 0, 0);
    v31 = v30;
    sub_1004B804C(&qword_1013DF800);
    *v31 = v18;
    v32 = v56;
    v33 = KeyedDecodingContainer.codingPath.getter(v14);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v33, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v34.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, enum case for DecodingError.typeMismatch(_:), v29);
    swift_willThrow(v34);
    v35 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v32, v14, v35);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v57);
}

uint64_t sub_100BD0A90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD17F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0AB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD17F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0AE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100BD0B14 + 4 * byte_100F2A45E[*v0]))(0x6472616F426C6C61, 0xE900000000000073);
}

uint64_t sub_100BD0B14()
{
  return 0x73746E65636572;
}

uint64_t sub_100BD0B2C()
{
  return 0x657469726F766166;
}

uint64_t sub_100BD0B40()
{
  return 0x646572616873;
}

uint64_t sub_100BD0B54()
{
  return 0x796C746E65636572;
}

uint64_t sub_100BD0B78()
{
  return 1919251317;
}

uint64_t sub_100BD0B88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BD2F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BD0BAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1658();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0BD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1658();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0BFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1768();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0C24(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1768();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0C4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD16E0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0C74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD16E0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0C9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD17AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0CC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD17AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0CEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1724();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0D14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD1724();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0D3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C746974;
  else
    return 1684632949;
}

uint64_t sub_100BD0D6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BD31C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BD0D90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD169C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD0DB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD169C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD0DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BD0148(a1, a2);
}

void sub_100BD0DF4(_QWORD *a1)
{
  sub_100BCFB5C(a1);
}

Swift::Int sub_100BD0E0C(uint64_t a1, uint64_t a2)
{
  return sub_100BD0E18(a1, a2, (void (*)(_QWORD *))sub_100BCF9A8);
}

Swift::Int sub_100BD0E18(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_100BD0E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BD0E68(a1, a2, a3, (void (*)(_QWORD *))sub_100BCF9A8);
}

Swift::Int sub_100BD0E68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *))
{
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_100BD0EA8()
{
  return sub_1004B7878(&qword_101408140, type metadata accessor for CRLBoardLibraryViewModel.Folder, (uint64_t)&unk_100F2A6F0);
}

void sub_100BD0ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5);
  v6 = sub_1004B804C(&qword_1013E8798);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1004B8460(a2, v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v11 = sub_1004B804C(&qword_1013E1790);
  v12 = (char *)sub_100BD1014
      + 4
      * byte_100F2A464[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 5, v11)];
  __asm { BR              X10 }
}

uint64_t sub_100BD1014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  char v21;
  __n128 v22;

  sub_1004B8460(v0, v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v9 = *(int *)(v5 + 48);
  v10 = *(_QWORD *)(v3 + v9 + 8);
  *(_QWORD *)(v8 - 88) = *(_QWORD *)(v3 + v9);
  if (!v6(v4, 5, v5))
  {
    v13 = v10;
    v14 = *(_QWORD *)(v8 - 88);
    v15 = v4 + v9;
    v17 = *(_QWORD *)(v4 + v9);
    v16 = *(_QWORD *)(v15 + 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v4, v1);
    v18 = static UUID.== infix(_:_:)(v3);
    v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v19(v3, v1);
    if ((v18 & 1) != 0)
    {
      if (v14 == v17 && v13 == v16)
      {
        swift_bridgeObjectRelease_n(v13, 2);
        v19(v2, v1);
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v13, v17, v16, 0);
        swift_bridgeObjectRelease(v16);
        v22 = swift_bridgeObjectRelease(v13);
        ((void (*)(uint64_t, uint64_t, __n128))v19)(v2, v1, v22);
        if ((v21 & 1) == 0)
          goto LABEL_13;
      }
      sub_1004B84A4(v0, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return 1;
    }
    v19(v2, v1);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v13);
LABEL_13:
    sub_1004B84A4(v0, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    return 0;
  }
  v11 = swift_bridgeObjectRelease(v10);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v3, v1, v11);
  sub_1004CB800(v0, &qword_1013E8798);
  return 0;
}

uint64_t sub_100BD121C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int EnumCaseMultiPayload;
  uint64_t (*v32)(uint64_t);
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = a2;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v4 = __chkstk_darwin(v3);
  v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v50 = (uint64_t)&v47 - v7;
  v8 = __chkstk_darwin(v6);
  v49 = (char *)&v47 - v9;
  __chkstk_darwin(v8);
  v48 = (char *)&v47 - v10;
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v47 - v15;
  v17 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v47 - v22;
  __chkstk_darwin(v21);
  v25 = (unsigned __int8 *)&v47 - v24;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E87A0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = &v29[*(int *)(v27 + 48)];
  sub_1004B8460(a1, (uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004B8460(v52, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v29, v17);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004B8460((uint64_t)v29, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v30, v17) == 1)
      {
        v32 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        sub_1004B84E0((uint64_t)v23, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_1004B84E0((uint64_t)v30, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BD0ED4((uint64_t)v16, (uint64_t)v14);
        v34 = v33;
LABEL_19:
        sub_1004B84A4((uint64_t)v14, v32);
        sub_1004B84A4((uint64_t)v16, v32);
        goto LABEL_20;
      }
      v44 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      v45 = (uint64_t)v23;
    }
    else
    {
      sub_1004B8460((uint64_t)v29, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v35 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v20[*(int *)(v35 + 48) + 8]);
      if (swift_getEnumCaseMultiPayload(v30, v17) == 2)
      {
        swift_bridgeObjectRelease(*(_QWORD *)&v30[*(int *)(v35 + 48) + 8]);
        v16 = v48;
        sub_1004B84E0((uint64_t)v20, (uint64_t)v48, type metadata accessor for CRLBoardIdentifier);
        v14 = v49;
        sub_1004B84E0((uint64_t)v30, (uint64_t)v49, type metadata accessor for CRLBoardIdentifier);
        v36 = static UUID.== infix(_:_:)(v16);
        v37 = v50;
        sub_1004B8460((uint64_t)v16, v50, type metadata accessor for CRLBoardIdentifier);
        v38 = v51;
        sub_1004B8460((uint64_t)v14, v51, type metadata accessor for CRLBoardIdentifier);
        if ((v36 & 1) != 0)
        {
          v39 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          v40 = *(_QWORD *)(v37 + v39);
          v41 = *(_QWORD *)(v37 + v39 + 8);
          v42 = (_QWORD *)(v38 + v39);
          v43 = v42[1];
          if (v40 == *v42 && v41 == v43)
            v34 = 1;
          else
            v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, *v42, v43, 0);
        }
        else
        {
          v34 = 0;
        }
        v32 = type metadata accessor for CRLBoardIdentifier;
        sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v37, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_19;
      }
      v44 = type metadata accessor for CRLBoardIdentifier;
      v45 = (uint64_t)v20;
    }
    sub_1004B84A4(v45, v44);
  }
  else
  {
    sub_1004B8460((uint64_t)v29, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (!swift_getEnumCaseMultiPayload(v30, v17))
    {
      v34 = *v25 == *v30;
LABEL_20:
      sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return v34 & 1;
    }
  }
  sub_1004CB800((uint64_t)v29, (uint64_t *)&unk_1013E87A0);
  v34 = 0;
  return v34 & 1;
}

unint64_t sub_100BD1658()
{
  unint64_t result;

  result = qword_101408180;
  if (!qword_101408180)
  {
    result = swift_getWitnessTable(&unk_100F2B514, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408180);
  }
  return result;
}

unint64_t sub_100BD169C()
{
  unint64_t result;

  result = qword_101408188;
  if (!qword_101408188)
  {
    result = swift_getWitnessTable(&unk_100F2B4C4, &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408188);
  }
  return result;
}

unint64_t sub_100BD16E0()
{
  unint64_t result;

  result = qword_101408190;
  if (!qword_101408190)
  {
    result = swift_getWitnessTable(&unk_100F2B474, &type metadata for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408190);
  }
  return result;
}

unint64_t sub_100BD1724()
{
  unint64_t result;

  result = qword_101408198;
  if (!qword_101408198)
  {
    result = swift_getWitnessTable(&unk_100F2B424, &type metadata for CRLBoardLibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408198);
  }
  return result;
}

unint64_t sub_100BD1768()
{
  unint64_t result;

  result = qword_1014081A0;
  if (!qword_1014081A0)
  {
    result = swift_getWitnessTable(&unk_100F2B3D4, &type metadata for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014081A0);
  }
  return result;
}

unint64_t sub_100BD17AC()
{
  unint64_t result;

  result = qword_1014081A8;
  if (!qword_1014081A8)
  {
    result = swift_getWitnessTable(&unk_100F2B384, &type metadata for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014081A8);
  }
  return result;
}

unint64_t sub_100BD17F0()
{
  unint64_t result;

  result = qword_1014081B0;
  if (!qword_1014081B0)
  {
    result = swift_getWitnessTable(&unk_100F2B334, &type metadata for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014081B0);
  }
  return result;
}

_QWORD *sub_100BD1834(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = sub_1004B804C(&qword_1014081F0);
  v36 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v40 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1004B804C(&qword_1014081F8);
  v34 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_101408200);
  v4 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101408208);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_100BD1C0C();
  v14 = v41;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardLibraryViewModel.Library.CodingKeys, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys, v13, v11, v12);
  if (v14)
    goto LABEL_7;
  v32 = v4;
  v33 = v8;
  v15 = v40;
  v41 = a1;
  v16 = v10;
  v17 = KeyedDecodingContainer.allKeys.getter(v7);
  v18 = v7;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v22 = type metadata accessor for DecodingError(0);
    swift_allocError(v22, &protocol witness table for DecodingError, 0, 0);
    v10 = v23;
    sub_1004B804C(&qword_1013DF800);
    *v10 = &type metadata for CRLBoardLibraryViewModel.Library;
    v24 = KeyedDecodingContainer.codingPath.getter(v7);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v24, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v25.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v10, enum case for DecodingError.typeMismatch(_:), v22);
    swift_willThrow(v25);
    v26 = swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v33 + 8))(v16, v7, v26);
    a1 = v41;
LABEL_7:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v43 = 1;
      v19 = sub_100BD1C94();
      v20 = v39;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys, &v43, v7, &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys, v19);
      v21 = v33;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v37);
    }
    else
    {
      v44 = 2;
      v29 = sub_100BD1C50();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys, &v44, v7, &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys, v29);
      v21 = v33;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v38);
    }
    v31 = swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v21 + 8))(v16, v18, v31);
  }
  else
  {
    v42 = 0;
    v28 = sub_100BD1CD8();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys, &v42, v7, &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys, v28);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v35);
    v30 = swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v33 + 8))(v16, v7, v30);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v41);
  return v10;
}

unint64_t sub_100BD1C0C()
{
  unint64_t result;

  result = qword_101408210;
  if (!qword_101408210)
  {
    result = swift_getWitnessTable(&unk_100F2B2E4, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408210);
  }
  return result;
}

unint64_t sub_100BD1C50()
{
  unint64_t result;

  result = qword_101408218;
  if (!qword_101408218)
  {
    result = swift_getWitnessTable(&unk_100F2B294, &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408218);
  }
  return result;
}

unint64_t sub_100BD1C94()
{
  unint64_t result;

  result = qword_101408220;
  if (!qword_101408220)
  {
    result = swift_getWitnessTable(&unk_100F2B244, &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408220);
  }
  return result;
}

unint64_t sub_100BD1CD8()
{
  unint64_t result;

  result = qword_101408228;
  if (!qword_101408228)
  {
    result = swift_getWitnessTable(&unk_100F2B1F4, &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408228);
  }
  return result;
}

unint64_t sub_100BD1D1C()
{
  unint64_t result;

  result = qword_101408270;
  if (!qword_101408270)
  {
    result = swift_getWitnessTable(&unk_100F2B1A4, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408270);
  }
  return result;
}

unint64_t sub_100BD1D60()
{
  unint64_t result;

  result = qword_101408278;
  if (!qword_101408278)
  {
    result = swift_getWitnessTable(&unk_100F2B154, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408278);
  }
  return result;
}

unint64_t sub_100BD1DA4()
{
  unint64_t result;

  result = qword_101408280;
  if (!qword_101408280)
  {
    result = swift_getWitnessTable(&unk_100F2B104, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408280);
  }
  return result;
}

unint64_t sub_100BD1DE8()
{
  unint64_t result;

  result = qword_101408288;
  if (!qword_101408288)
  {
    result = swift_getWitnessTable(&unk_100F2B0B4, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408288);
  }
  return result;
}

unint64_t sub_100BD1E2C()
{
  unint64_t result;

  result = qword_101408290;
  if (!qword_101408290)
  {
    result = swift_getWitnessTable(&unk_100F2A668, &type metadata for CRLBoardLibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_101408290);
  }
  return result;
}

unint64_t sub_100BD1E70()
{
  unint64_t result;

  result = qword_1014082B8;
  if (!qword_1014082B8)
  {
    result = swift_getWitnessTable(&unk_100F2A640, &type metadata for CRLBoardLibraryViewModel.Library);
    atomic_store(result, (unint64_t *)&qword_1014082B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.LibraryCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys;
}

uint64_t _s8Freeform24CRLBoardLibraryViewModelV4ItemO17LibraryCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100BD1F18 + 4 * byte_100F2A46A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100BD1F38 + 4 * byte_100F2A46F[v4]))();
}

_BYTE *sub_100BD1F18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100BD1F38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100BD1F40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100BD1F48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100BD1F50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100BD1F58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.FolderCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.BoardCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys;
}

uint64_t _s8Freeform24CRLBoardLibraryViewModelV7LibraryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100BD1FD4 + 4 * byte_100F2A479[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100BD2008 + 4 * byte_100F2A474[v4]))();
}

uint64_t sub_100BD2008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD2010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD2018);
  return result;
}

uint64_t sub_100BD2024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD202CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100BD2030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD2038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.SpecialCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.LocalCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.ICloudCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryViewModel.Folder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100BD20D0 + 4 * byte_100F2A483[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100BD2104 + 4 * byte_100F2A47E[v4]))();
}

uint64_t sub_100BD2104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD210C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD2114);
  return result;
}

uint64_t sub_100BD2120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD2128);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100BD212C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD2134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.SharedCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys;
}

uint64_t _s8Freeform24CRLBoardLibraryViewModelV4ItemO15BoardCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BD21EC + 4 * byte_100F2A48D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BD2220 + 4 * byte_100F2A488[v4]))();
}

uint64_t sub_100BD2220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD2228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD2230);
  return result;
}

uint64_t sub_100BD223C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD2244);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BD2248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD2250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.UserCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys;
}

unint64_t sub_100BD2270()
{
  unint64_t result;

  result = qword_1014082C0;
  if (!qword_1014082C0)
  {
    result = swift_getWitnessTable(&unk_100F2A9BC, &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082C0);
  }
  return result;
}

unint64_t sub_100BD22B8()
{
  unint64_t result;

  result = qword_1014082C8;
  if (!qword_1014082C8)
  {
    result = swift_getWitnessTable(&unk_100F2AC04, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082C8);
  }
  return result;
}

unint64_t sub_100BD2300()
{
  unint64_t result;

  result = qword_1014082D0;
  if (!qword_1014082D0)
  {
    result = swift_getWitnessTable(&unk_100F2ADAC, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082D0);
  }
  return result;
}

unint64_t sub_100BD2348()
{
  unint64_t result;

  result = qword_1014082D8;
  if (!qword_1014082D8)
  {
    result = swift_getWitnessTable(&unk_100F2AE64, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082D8);
  }
  return result;
}

unint64_t sub_100BD2390()
{
  unint64_t result;

  result = qword_1014082E0;
  if (!qword_1014082E0)
  {
    result = swift_getWitnessTable(&unk_100F2AF1C, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082E0);
  }
  return result;
}

unint64_t sub_100BD23D8()
{
  unint64_t result;

  result = qword_1014082E8;
  if (!qword_1014082E8)
  {
    result = swift_getWitnessTable(&unk_100F2AFD4, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082E8);
  }
  return result;
}

unint64_t sub_100BD2420()
{
  unint64_t result;

  result = qword_1014082F0;
  if (!qword_1014082F0)
  {
    result = swift_getWitnessTable(&unk_100F2B08C, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082F0);
  }
  return result;
}

unint64_t sub_100BD2468()
{
  unint64_t result;

  result = qword_1014082F8;
  if (!qword_1014082F8)
  {
    result = swift_getWitnessTable(&unk_100F2AF44, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014082F8);
  }
  return result;
}

unint64_t sub_100BD24B0()
{
  unint64_t result;

  result = qword_101408300;
  if (!qword_101408300)
  {
    result = swift_getWitnessTable(&unk_100F2AF6C, &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408300);
  }
  return result;
}

unint64_t sub_100BD24F8()
{
  unint64_t result;

  result = qword_101408308;
  if (!qword_101408308)
  {
    result = swift_getWitnessTable(&unk_100F2AE8C, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408308);
  }
  return result;
}

unint64_t sub_100BD2540()
{
  unint64_t result;

  result = qword_101408310;
  if (!qword_101408310)
  {
    result = swift_getWitnessTable(&unk_100F2AEB4, &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408310);
  }
  return result;
}

unint64_t sub_100BD2588()
{
  unint64_t result;

  result = qword_101408318;
  if (!qword_101408318)
  {
    result = swift_getWitnessTable(&unk_100F2ADD4, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408318);
  }
  return result;
}

unint64_t sub_100BD25D0()
{
  unint64_t result;

  result = qword_101408320;
  if (!qword_101408320)
  {
    result = swift_getWitnessTable(&unk_100F2ADFC, &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408320);
  }
  return result;
}

unint64_t sub_100BD2618()
{
  unint64_t result;

  result = qword_101408328;
  if (!qword_101408328)
  {
    result = swift_getWitnessTable(&unk_100F2AFFC, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408328);
  }
  return result;
}

unint64_t sub_100BD2660()
{
  unint64_t result;

  result = qword_101408330;
  if (!qword_101408330)
  {
    result = swift_getWitnessTable(&unk_100F2B024, &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408330);
  }
  return result;
}

unint64_t sub_100BD26A8()
{
  unint64_t result;

  result = qword_101408338;
  if (!qword_101408338)
  {
    result = swift_getWitnessTable(&unk_100F2ACCC, &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408338);
  }
  return result;
}

unint64_t sub_100BD26F0()
{
  unint64_t result;

  result = qword_101408340;
  if (!qword_101408340)
  {
    result = swift_getWitnessTable(&unk_100F2ACF4, &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408340);
  }
  return result;
}

unint64_t sub_100BD2738()
{
  unint64_t result;

  result = qword_101408348;
  if (!qword_101408348)
  {
    result = swift_getWitnessTable(&unk_100F2AC7C, &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408348);
  }
  return result;
}

unint64_t sub_100BD2780()
{
  unint64_t result;

  result = qword_101408350;
  if (!qword_101408350)
  {
    result = swift_getWitnessTable(&unk_100F2ACA4, &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408350);
  }
  return result;
}

unint64_t sub_100BD27C8()
{
  unint64_t result;

  result = qword_101408358;
  if (!qword_101408358)
  {
    result = swift_getWitnessTable(&unk_100F2AC2C, &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408358);
  }
  return result;
}

unint64_t sub_100BD2810()
{
  unint64_t result;

  result = qword_101408360;
  if (!qword_101408360)
  {
    result = swift_getWitnessTable(&unk_100F2AC54, &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408360);
  }
  return result;
}

unint64_t sub_100BD2858()
{
  unint64_t result;

  result = qword_101408368;
  if (!qword_101408368)
  {
    result = swift_getWitnessTable(&unk_100F2AD1C, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408368);
  }
  return result;
}

unint64_t sub_100BD28A0()
{
  unint64_t result;

  result = qword_101408370;
  if (!qword_101408370)
  {
    result = swift_getWitnessTable(&unk_100F2AD44, &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408370);
  }
  return result;
}

unint64_t sub_100BD28E8()
{
  unint64_t result;

  result = qword_101408378;
  if (!qword_101408378)
  {
    result = swift_getWitnessTable(&unk_100F2AB24, &type metadata for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408378);
  }
  return result;
}

unint64_t sub_100BD2930()
{
  unint64_t result;

  result = qword_101408380;
  if (!qword_101408380)
  {
    result = swift_getWitnessTable(&unk_100F2AB4C, &type metadata for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408380);
  }
  return result;
}

unint64_t sub_100BD2978()
{
  unint64_t result;

  result = qword_101408388;
  if (!qword_101408388)
  {
    result = swift_getWitnessTable(&unk_100F2AAD4, &type metadata for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408388);
  }
  return result;
}

unint64_t sub_100BD29C0()
{
  unint64_t result;

  result = qword_101408390;
  if (!qword_101408390)
  {
    result = swift_getWitnessTable(&unk_100F2AAFC, &type metadata for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408390);
  }
  return result;
}

unint64_t sub_100BD2A08()
{
  unint64_t result;

  result = qword_101408398;
  if (!qword_101408398)
  {
    result = swift_getWitnessTable(&unk_100F2AA84, &type metadata for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408398);
  }
  return result;
}

unint64_t sub_100BD2A50()
{
  unint64_t result;

  result = qword_1014083A0;
  if (!qword_1014083A0)
  {
    result = swift_getWitnessTable(&unk_100F2AAAC, &type metadata for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083A0);
  }
  return result;
}

unint64_t sub_100BD2A98()
{
  unint64_t result;

  result = qword_1014083A8;
  if (!qword_1014083A8)
  {
    result = swift_getWitnessTable(&unk_100F2AA34, &type metadata for CRLBoardLibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083A8);
  }
  return result;
}

unint64_t sub_100BD2AE0()
{
  unint64_t result;

  result = qword_1014083B0;
  if (!qword_1014083B0)
  {
    result = swift_getWitnessTable(&unk_100F2AA5C, &type metadata for CRLBoardLibraryViewModel.Folder.SharedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083B0);
  }
  return result;
}

unint64_t sub_100BD2B28()
{
  unint64_t result;

  result = qword_1014083B8;
  if (!qword_1014083B8)
  {
    result = swift_getWitnessTable(&unk_100F2A9E4, &type metadata for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083B8);
  }
  return result;
}

unint64_t sub_100BD2B70()
{
  unint64_t result;

  result = qword_1014083C0;
  if (!qword_1014083C0)
  {
    result = swift_getWitnessTable(&unk_100F2AA0C, &type metadata for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083C0);
  }
  return result;
}

unint64_t sub_100BD2BB8()
{
  unint64_t result;

  result = qword_1014083C8;
  if (!qword_1014083C8)
  {
    result = swift_getWitnessTable(&unk_100F2A92C, &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083C8);
  }
  return result;
}

unint64_t sub_100BD2C00()
{
  unint64_t result;

  result = qword_1014083D0;
  if (!qword_1014083D0)
  {
    result = swift_getWitnessTable(&unk_100F2A954, &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083D0);
  }
  return result;
}

unint64_t sub_100BD2C48()
{
  unint64_t result;

  result = qword_1014083D8;
  if (!qword_1014083D8)
  {
    result = swift_getWitnessTable(&unk_100F2AB74, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083D8);
  }
  return result;
}

unint64_t sub_100BD2C90()
{
  unint64_t result;

  result = qword_1014083E0;
  if (!qword_1014083E0)
  {
    result = swift_getWitnessTable(&unk_100F2AB9C, &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014083E0);
  }
  return result;
}

uint64_t sub_100BD2CD4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100BD2DE0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7972617262696CLL && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7265646C6F66, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6472616F62 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F62, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100BD2F24(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0x6472616F426C6C61 && a2 == 0xE900000000000073)
  {
    v5 = 0xE900000000000073;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F426C6C61, 0xE900000000000073, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x73746E65636572 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73746E65636572, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE900000000000073)
  {
    v8 = 0xE900000000000073;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE900000000000073, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x646572616873 && a2 == 0xE600000000000000)
  {
    v9 = 0xE600000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646572616873, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x796C746E65636572 && a2 == 0xEF646574656C6544)
  {
    v10 = 0xEF646574656C6544;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x796C746E65636572, 0xEF646574656C6544, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 1919251317 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(1919251317, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_100BD31C8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684632949, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_100BD32A0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

id sub_100BD32E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRetain(v1).n128_f64[0]);
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;
  v10 = v9;

  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v20 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v20 = v1;
    swift_bridgeObjectRetain(v1);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    sub_100BD42CC(v1, v0, 0);
    if (v21)
      goto LABEL_3;
LABEL_14:
    sub_100BD42CC(v1, v0, 0);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x100BD3FF8);
    }
    v11 = *(id *)(v1 + 32);
  }
  v12 = v11;
  sub_100BD42CC(v1, v0, 0);
  v13 = objc_msgSend(v12, "displayName");

  if (v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;
    v17 = v16;

    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v19 + 32) = v15;
    *(_QWORD *)(v19 + 40) = v17;
    v13 = (id)String.init(format:_:)(v8, v10, v19);
  }
  swift_bridgeObjectRelease();
  return v13;
}

void sub_100BD4048()
{
  uint64_t v0;

  sub_100BD32A0(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16));
}

id sub_100BD4060()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView);
  }
  else
  {
    v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16);
    if ((v4 - 2) >= 3)
    {
      if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16))
      {
        v5 = 0xD000000000000015;
        v6 = 0x8000000100FFE560;
        LOBYTE(v4) = 1;
      }
      else
      {
        v6 = 0x8000000100FFE580;
        v5 = 0xD000000000000013;
      }
    }
    else
    {
      v5 = 0xD000000000000019;
      v6 = 0x8000000100FBED60;
    }
    v7 = sub_100BD4490(v5, v6, *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), v4);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_100BD413C()
{
  uint64_t v0;

  sub_100BD42CC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16));

}

id sub_100BD4170()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BD41E4()
{
  return type metadata accessor for CRLCollaboratorStatusHUDController_mi(0);
}

uint64_t type metadata accessor for CRLCollaboratorStatusHUDController_mi(uint64_t a1)
{
  uint64_t result;

  result = qword_101408410;
  if (!qword_101408410)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCollaboratorStatusHUDController_mi);
  return result;
}

uint64_t sub_100BD4228(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100F2B598;
  v2[1] = &unk_100F2B5B0;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 856);
}

uint64_t sub_100BD4274(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 < 4u)
    return swift_bridgeObjectRetain(result);
  if (a3 == 4)
  {
    swift_bridgeObjectRetain(result);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t destroy for CRLCollaboratorListChangedEvent(uint64_t a1)
{
  return sub_100BD42CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_100BD42CC(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 < 4u)
    return swift_bridgeObjectRelease(result);
  if (a3 == 4)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t _s8Freeform31CRLCollaboratorListChangedEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100BD4274(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLCollaboratorListChangedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100BD4274(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100BD42CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLCollaboratorListChangedEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100BD42CC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCollaboratorListChangedEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCollaboratorListChangedEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCollaboratorListChangedEvent()
{
  return &type metadata for CRLCollaboratorListChangedEvent;
}

id sub_100BD4490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  NSString v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  id v13;

  swift_bridgeObjectRetain(a2);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "imageNamed:", v7);

  if (!v9)
  {
    swift_bridgeObjectRetain(a2);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v9 = objc_msgSend(v8, "systemImageNamed:", v10);

  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 22.0, 22.0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setContentMode:", 4);
  objc_msgSend(v11, "setImage:", v9);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), *off_1012988D8[a5]);
  v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v12);
  objc_msgSend(v11, "setPreferredSymbolConfiguration:", v13);

  return v11;
}

uint64_t sub_100BD463C()
{
  char *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _OWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType];
  if (v1 >= 3)
  {
    type metadata accessor for CRLiOSPencilModeType(0);
    v9 = v8;
    *(_QWORD *)&v11[0] = v1;
    v10 = v0;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v9, v11, v9, &type metadata for UInt);
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType];
    v14 = 0;
    v15 = &_swiftEmptyDictionarySingleton;
    type metadata accessor for CRContext(0);
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v2 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v11);
    sub_100984544((uint64_t)v11);
    if (qword_1013DCB10 != -1)
      swift_once(&qword_1013DCB10, sub_1005DE88C);
    v3 = type metadata accessor for CRCodableVersion(0);
    v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147EB08);
    v5 = sub_100BD4DE8();
    v6 = CRValue.serializedData(_:version:)(v2, v4, &type metadata for CRLiOSPencilMediatorUIStateData, v5);

    return v6;
  }
  return result;
}

unint64_t sub_100BD4810()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000012;
}

uint64_t sub_100BD4850@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BD524C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100BD4874(_QWORD *a1@<X8>)
{
  *a1 = &off_101264468;
}

uint64_t sub_100BD4884(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100BD4FAC();
  v5 = sub_100BD4FF4();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100BD48C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD4FF4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD48F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD4FF4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD4918(_QWORD *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v21 = a4;
  v8 = sub_1004B804C(&qword_1014084A8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_100BD4FF4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys, v14, v12, v13);
  v22 = a2;
  v23 = a3;
  v24 = 0;
  v15 = sub_1004B804C(&qword_101408498);
  v16 = sub_100BD54E4(&qword_1014084B0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v22, &v24, v8, v15, v16);
  if (!v4)
  {
    v22 = v21;
    v24 = 1;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v8, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100BD4A94(uint64_t a1, uint64_t a2)
{
  return sub_100BD51A8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

uint64_t sub_100BD4AB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;

  result = sub_100BD5334(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100BD4AE4(_QWORD *a1)
{
  uint64_t v1;

  return sub_100BD4918(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_100BD4B04(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100BD5548();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BD4B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100BD4DE8();
  v7 = sub_100BD558C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100BD4BA0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100BD5548();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100BD4BD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100BD511C();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100BD4C24(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100BD511C();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100BD4C68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BD511C();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

double sub_100BD4CA0(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  double result;
  unsigned __int8 v7;
  unsigned __int8 v8;

  sub_1004BE310(a1, a2);
  v4 = sub_100BD4DE8();
  CRValue.init(serializedData:)(a1, a2, &type metadata for CRLiOSPencilMediatorUIStateData, v4);
  if (v8 != 255 && (v8 & 1) == 0 && v7)
  {
    if (v7 == 1)
      v5 = v7;
    else
      v5 = 2;
    sub_10066CAA8(v5);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

unint64_t sub_100BD4DE8()
{
  unint64_t result;

  result = qword_101408420;
  if (!qword_101408420)
  {
    result = swift_getWitnessTable(&unk_100F2B900, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408420);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilMediatorUIStateData()
{
  return &type metadata for CRLiOSPencilMediatorUIStateData;
}

unint64_t sub_100BD4E40()
{
  unint64_t result;

  result = qword_101408428;
  if (!qword_101408428)
  {
    result = swift_getWitnessTable(&unk_100F2B620, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408428);
  }
  return result;
}

unint64_t sub_100BD4E8C()
{
  unint64_t result;

  result = qword_101408430;
  if (!qword_101408430)
  {
    result = swift_getWitnessTable(&unk_100F2B6F0, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408430);
  }
  return result;
}

unint64_t sub_100BD4ED4()
{
  unint64_t result;

  result = qword_101408438;
  if (!qword_101408438)
  {
    result = swift_getWitnessTable(&unk_100F2B6C8, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408438);
  }
  return result;
}

unint64_t sub_100BD4F1C()
{
  unint64_t result;

  result = qword_101408440;
  if (!qword_101408440)
  {
    result = swift_getWitnessTable(&unk_100F2B760, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408440);
  }
  return result;
}

unint64_t sub_100BD4F64()
{
  unint64_t result;

  result = qword_101408448;
  if (!qword_101408448)
  {
    result = swift_getWitnessTable(&unk_100F2B870, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408448);
  }
  return result;
}

unint64_t sub_100BD4FAC()
{
  unint64_t result;

  result = qword_101408450;
  if (!qword_101408450)
  {
    result = swift_getWitnessTable(&unk_100F2B838, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408450);
  }
  return result;
}

unint64_t sub_100BD4FF4()
{
  unint64_t result;

  result = qword_101408458;
  if (!qword_101408458)
  {
    result = swift_getWitnessTable(&unk_100F2B798, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408458);
  }
  return result;
}

unint64_t sub_100BD503C()
{
  unint64_t result;

  result = qword_101408460;
  if (!qword_101408460)
  {
    result = swift_getWitnessTable(&unk_100F2B810, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408460);
  }
  return result;
}

unint64_t sub_100BD5084()
{
  unint64_t result;

  result = qword_101408468;
  if (!qword_101408468)
  {
    result = swift_getWitnessTable(&unk_100F2B7E8, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408468);
  }
  return result;
}

unint64_t sub_100BD50CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101408470;
  if (!qword_101408470)
  {
    v1 = sub_1004CB6A4(&qword_101408478);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_101408470);
  }
  return result;
}

unint64_t sub_100BD511C()
{
  unint64_t result;

  result = qword_101408480;
  if (!qword_101408480)
  {
    result = swift_getWitnessTable(&unk_100F2B718, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408480);
  }
  return result;
}

unint64_t sub_100BD5164()
{
  unint64_t result;

  result = qword_101408488;
  if (!qword_101408488)
  {
    result = swift_getWitnessTable(&unk_100F2B668, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_101408488);
  }
  return result;
}

uint64_t sub_100BD51A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  unint64_t v8;
  char v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  if (a2 != -1)
  {
    v13 = a1;
    v14 = a2;
    if (a5 == 255)
      goto LABEL_4;
    v11 = a4;
    v12 = a5 & 1;
    v8 = sub_1008959D4();
    if ((static CRExtensible.== infix(_:_:)(&v13, &v11, &type metadata for CRLiOSPencilModeTypeData, v8, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_4;
LABEL_6:
    v9 = sub_100C9E04C(a3, a6);
    return v9 & 1;
  }
  if (a5 == 255)
    goto LABEL_6;
LABEL_4:
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_100BD524C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD000000000000012)
  {
    v4 = 0x8000000100FBFC10;
    if (a2 == 0x8000000100FBFC10)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FBFC10, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100BD5334(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = sub_1004B804C(&qword_101408490);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  sub_1004BB5A4(a1, v6);
  v8 = sub_100BD4FF4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys, v8, v6, v7);
  v9 = sub_1004B804C(&qword_101408498);
  v16 = 0;
  v10 = sub_100BD54E4(&qword_1014084A0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v9, &v16, v2, v9, v10);
  v11 = v17;
  v12 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
  v16 = 1;
  v13 = sub_1004F3130();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v16, v2, v12, v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v11;
}

uint64_t sub_100BD54E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_101408498);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BD5548()
{
  unint64_t result;

  result = qword_1014084B8;
  if (!qword_1014084B8)
  {
    result = swift_getWitnessTable(&unk_100F2B8C0, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_1014084B8);
  }
  return result;
}

unint64_t sub_100BD558C()
{
  unint64_t result;

  result = qword_1014084C0;
  if (!qword_1014084C0)
  {
    result = swift_getWitnessTable(&unk_100F2B898, &type metadata for CRLiOSPencilMediatorUIStateData);
    atomic_store(result, (unint64_t *)&qword_1014084C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilMediatorUIStateData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BD561C + 4 * byte_100F2B5F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BD5650 + 4 * asc_100F2B5F0[v4]))();
}

uint64_t sub_100BD5650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD5658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD5660);
  return result;
}

uint64_t sub_100BD566C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD5674);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BD5678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD5680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilMediatorUIStateData.CodingKeys()
{
  return &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys;
}

unint64_t sub_100BD56A0()
{
  unint64_t result;

  result = qword_1014084C8;
  if (!qword_1014084C8)
  {
    result = swift_getWitnessTable(&unk_100F2B9BC, &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014084C8);
  }
  return result;
}

void sub_100BD56E4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  int v5;
  _BYTE *v6;

  v2 = v1;
  v4 = *(_BYTE **)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v4)
  {
    v5 = v4[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying];
    v4[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] = 0;
    if (v5 == 1)
    {
      v6 = v4;
      sub_1005CA188();

    }
  }
  sub_100BD6004((a1 & 1) == 0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFE) == 2)
    objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v2, "hideWithImmediately:", 0);
}

void sub_100BD57A4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  double v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v1)
  {
    v2 = v1;
    sub_1005C9C3C();
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
    swift_beginAccess(v3, v34, 0, 0);
    v4 = *v3;
    swift_bridgeObjectRetain(*v3);
    v5 = sub_100C9DDD8((uint64_t)v2, v4);
    *(_QWORD *)&v6 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v5 & 1) == 0)
    {
      v8 = v2;
LABEL_22:

      return;
    }
    v7 = objc_msgSend(v2, "rep", v6);
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for CRLUSDZRep(0);
      v10 = (void *)swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
      objc_msgSend(v10, "boundsForStandardKnobs");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v19 = objc_msgSend(v10, "canvas");
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, "viewScale");
        v22 = v21;

      }
      else
      {
        v22 = 1.0;
      }
      sub_100060FD8(v12, v14, v16, v18, v22);
      if (v23 >= 174.0 && v24 >= 53.0)
        goto LABEL_21;
      if (v23 >= 53.0 && v24 >= 174.0)
        goto LABEL_21;
      swift_beginAccess(v3, v33, 33, 0);
      v27 = v2;
      v28 = sub_100BD6618(v3, (uint64_t)v27);

      v29 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        if (v29 < 0)
          v31 = *v3;
        else
          v31 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v3);
        v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease();
        v30 = v32;
        if (v32 >= v28)
          goto LABEL_20;
      }
      else
      {
        v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v30 >= v28)
        {
LABEL_20:
          sub_100CFF9D4(v28, v30);
          swift_endAccess(v33);
LABEL_21:

          goto LABEL_22;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100BD59F8()
{
  __asm { BR              X10 }
}

void sub_100BD5A30()
{
  char v0;
  unsigned __int8 *v1;
  uint64_t v2;

  sub_100BD6004(0);
  if ((v0 & 1) != 0 && v1[v2] - 1 <= 1)
  {
    objc_msgSend(v1, "performSelector:withObject:afterDelay:", "hideWithImmediately:", 0, 3.25);
    v1[v2] = 3;
  }
}

void sub_100BD5AEC(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  NSString v6;
  id v7;
  Class isa;
  Class v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  id v21;
  double v22;
  void *v23;
  id v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v2 = OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState;
  if ((v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] | 4) != 4)
  {
    v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs], v32, 0, 0);
    v5 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
LABEL_4:
      if ((v1[v2] & 0xFE) == 2)
        objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "hideWithImmediately:", 0);
      v1[v2] = 4;
      v6 = String._bridgeToObjectiveC()();
      v7 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v6);

      isa = Int._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v7, "setFromValue:", isa);

      v9 = Int._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v7, "setToValue:", v9);

      v10 = 0.2;
      if ((a1 & 1) != 0)
        v10 = 0.01;
      objc_msgSend(v7, "setDuration:", v10);
      v11 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v11, "begin");
      v12 = swift_allocObject(&unk_101298D30, 24, 7);
      *(_QWORD *)(v12 + 16) = v1;
      aBlock[4] = sub_100BD6610;
      v31 = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101298D48;
      v13 = _Block_copy(aBlock);
      v14 = v31;
      v15 = v1;
      objc_msgSend(v11, "setCompletionBlock:", v13, swift_release(v14).n128_f64[0]);
      _Block_release(v13);
      v16 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v16 < 0)
          v29 = *v4;
        else
          v29 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v29);
        if (v17)
          goto LABEL_10;
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v16);
        if (v17)
        {
LABEL_10:
          if (v17 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0)
              v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
            else
              v19 = *(id *)(v16 + 8 * i + 32);
            v20 = v19;
            v21 = objc_msgSend(v19, "renderable");
            if (v21)
            {
              v23 = v21;
              LODWORD(v22) = 0;
              objc_msgSend(v21, "setOpacity:", v22);

            }
            v24 = objc_msgSend(v20, "renderable");
            if (v24)
            {
              v25 = v24;
              v26 = String._bridgeToObjectiveC()();
              objc_msgSend(v25, "addAnimation:forKey:", v7, v26);

            }
          }
        }
      }
      objc_msgSend(v11, "commit", swift_bridgeObjectRelease(v16).n128_f64[0]);

      return;
    }
    if (v5 < 0)
      v27 = *v4;
    else
      v27 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v4);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v5);
    if (v28)
      goto LABEL_4;
  }
}

uint64_t sub_100BD5E88(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*(_BYTE *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) == 4)
  {
    *(_BYTE *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) = 0;
    v1 = (uint64_t *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
    swift_beginAccess(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs, v10, 0, 0);
    v2 = *v1;
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v9 = v2;
      else
        v9 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      result = _CocoaArrayWrapper.endIndex.getter(v9);
      v3 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v2);
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((v2 & 0xC000000000000001) != 0)
            v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
          else
            v5 = *(id *)(v2 + 8 * i + 32);
          v6 = v5;
          v7 = objc_msgSend(v5, "renderable");
          if (v7)
          {
            v8 = v7;
            objc_msgSend(v7, "setHidden:", 1);

          }
        }
      }
    }
    return swift_bridgeObjectRelease(v2);
  }
  return result;
}

void sub_100BD6004(char a1)
{
  _BYTE *v1;
  uint64_t *v3;
  uint64_t v4;
  NSString v5;
  id v6;
  Class isa;
  Class v8;
  double v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  id v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;
  char v33[24];

  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs], v33, 0, 0);
  v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
LABEL_3:
    if ((v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] | 4) != 4)
      return;
    v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] = 1;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v5);

    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v6, "setFromValue:", isa);

    v8 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v6, "setToValue:", v8);

    v9 = 0.2;
    if ((a1 & 1) != 0)
      v9 = 0.01;
    objc_msgSend(v6, "setDuration:", v9);
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "begin");
    v11 = swift_allocObject(&unk_101298CE0, 24, 7);
    *(_QWORD *)(v11 + 16) = v1;
    aBlock[4] = sub_100BD65E0;
    v32 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_101298CF8;
    v12 = _Block_copy(aBlock);
    v13 = v32;
    v14 = v1;
    objc_msgSend(v10, "setCompletionBlock:", v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);
    v15 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      if (v15 < 0)
        v30 = *v3;
      else
        v30 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v16 = _CocoaArrayWrapper.endIndex.getter(v30);
      if (v16)
        goto LABEL_8;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v15);
      if (v16)
      {
LABEL_8:
        if (v16 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v16; ++i)
        {
          if ((v15 & 0xC000000000000001) != 0)
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
          else
            v18 = *(id *)(v15 + 8 * i + 32);
          v19 = v18;
          v20 = objc_msgSend(v18, "renderable");
          if (v20)
          {
            v22 = v20;
            LODWORD(v21) = 1.0;
            objc_msgSend(v20, "setOpacity:", v21);

          }
          v23 = objc_msgSend(v19, "renderable");
          if (v23)
          {
            v24 = v23;
            objc_msgSend(v23, "setHidden:", 0);

          }
          v25 = objc_msgSend(v19, "renderable");
          if (v25)
          {
            v26 = v25;
            v27 = String._bridgeToObjectiveC()();
            objc_msgSend(v26, "addAnimation:forKey:", v6, v27);

          }
        }
      }
    }
    objc_msgSend(v10, "commit", swift_bridgeObjectRelease(v15).n128_f64[0]);

    return;
  }
  if (v4 < 0)
    v28 = *v3;
  else
    v28 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v4);
  if (v29)
    goto LABEL_3;
}

id sub_100BD6410()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZKnobController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZKnobController()
{
  return objc_opt_self(_TtC8Freeform21CRLUSDZKnobController);
}

uint64_t storeEnumTagSinglePayload for CRLUSDZKnobController.KnobVisibilityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100BD64F4 + 4 * byte_100F2B9FA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100BD6528 + 4 * byte_100F2B9F5[v4]))();
}

uint64_t sub_100BD6528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD6530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BD6538);
  return result;
}

uint64_t sub_100BD6544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BD654CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100BD6550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BD6558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZKnobController.KnobVisibilityState()
{
  return &type metadata for CRLUSDZKnobController.KnobVisibilityState;
}

unint64_t sub_100BD6578()
{
  unint64_t result;

  result = qword_101408518;
  if (!qword_101408518)
  {
    result = swift_getWitnessTable(&unk_100F2BA74, &type metadata for CRLUSDZKnobController.KnobVisibilityState);
    atomic_store(result, (unint64_t *)&qword_101408518);
  }
  return result;
}

uint64_t sub_100BD65BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100BD65E0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) = 2;
}

double sub_100BD65F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BD6608(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BD6610()
{
  uint64_t v0;

  return sub_100BD5E88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100BD6618(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t i;
  unint64_t v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_65;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (v5)
  {
LABEL_3:
    sub_100511A70();
    v6 = 0;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4)
         : *(id *)(v4 + 8 * v6 + 32);
      v8 = v7;
      v9 = static NSObject.== infix(_:_:)(v7, a2);

      if ((v9 & 1) != 0)
        break;
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        if ((v4 & 0x8000000000000000) != 0)
          v35 = v4;
        else
          v35 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v5 = _CocoaArrayWrapper.endIndex.getter(v35);
        if (!v5)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v6;
      if (v10 == v5)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v9 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v13 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_16:
          for (i = v6 + 5; ; ++i)
          {
            v4 = i - 4;
            v15 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v15);
            }
            else
            {
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_55;
              if (v4 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v16 = *(id *)(v15 + 8 * i);
            }
            v17 = v16;
            v18 = static NSObject.== infix(_:_:)(v16, a2);

            if ((v18 & 1) != 0)
              goto LABEL_42;
            if (v4 != v6)
              break;
LABEL_41:
            if (__OFADD__(v6++, 1))
              goto LABEL_58;
LABEL_42:
            v31 = i - 3;
            if (__OFADD__(v4, 1))
              goto LABEL_57;
            v32 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v32 < 0)
                v34 = *a1;
              else
                v34 = v32 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v33 = _CocoaArrayWrapper.endIndex.getter(v34);
              swift_bridgeObjectRelease();
            }
            else
            {
              v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v31 == v33)
              return v6;
          }
          v19 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, *a1);
            v19 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_27:
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v4 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v21 = *(id *)(v19 + 8 * i);
              goto LABEL_30;
            }
          }
          else
          {
            if ((v6 & 0x8000000000000000) != 0)
              goto LABEL_59;
            if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_60;
            v20 = *(id *)(v19 + 8 * v6 + 32);
            if ((v19 & 0xC000000000000001) == 0)
              goto LABEL_27;
          }
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v19);
          v19 = *a1;
LABEL_30:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v19);
          *a1 = v19;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
          {
            v19 = sub_100D14ED8(v19);
            *a1 = v19;
          }
          v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

          specialized Array._endMutation()(v24);
          v25 = *a1;
          v26 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v25;
          if (!v26 || v25 < 0 || (v25 & 0x4000000000000000) != 0)
          {
            v25 = sub_100D14ED8(v25);
            *a1 = v25;
          }
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_63;
          v27 = v25 & 0xFFFFFFFFFFFFFF8;
          if (v4 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          v28 = *(void **)(v27 + 8 * i);
          *(_QWORD *)(v27 + 8 * i) = v20;

          specialized Array._endMutation()(v29);
          goto LABEL_41;
        }
        return v6;
      }
    }
    if (v9 < 0)
      v38 = v9;
    else
      v38 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease();
    if (v13 != v39)
      goto LABEL_16;
    return v6;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v11 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 0)
    v36 = *a1;
  else
    v36 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_100BD69D4(void *a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  _BOOL4 v22;
  void **v23;
  void *v24;
  uint64_t v25;
  BOOL v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  _BYTE *v32;
  int v33;
  int v34;
  _BYTE *v35;
  void **v37;
  uint64_t v38;
  _BOOL4 v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE v58[24];
  char v59[24];

  v3 = v2;
  v5 = a2;
  objc_msgSend(a1, "boundsForStandardKnobs");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = objc_msgSend(a1, "canvas");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "viewScale");
    v17 = v16;

  }
  else
  {
    v17 = 1.0;
  }
  sub_100060FD8(v7, v9, v11, v13, v17);
  v20 = v18;
  v21 = v19;
  if ((v5 | 2) != 2)
  {
    v22 = 0;
    v23 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
    v25 = 1;
    goto LABEL_14;
  }
  v22 = v19 >= 68.0 || v18 >= 68.0;
  v23 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
  v24 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
  v25 = !v22;
  if (v24)
    v26 = 1;
  else
    v26 = !v22;
  if (!v26)
  {
    v27 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZRotationKnob());
    v28 = sub_100C18C48(a1);
    v29 = *v23;
    *v23 = v28;

    v22 = 1;
LABEL_14:
    v24 = *v23;
  }
  if (v24)
  {
    v30 = objc_msgSend(v24, "renderable");
    if (v30)
    {
      v31 = v30;
      objc_msgSend(v30, "setHidden:", v25);

    }
  }
  v32 = *v23;
  if (*v23)
  {
    v33 = v5 == 3;
    v34 = v32[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError];
    v32[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError] = v33;
    if (v33 != v34)
    {
      v35 = v32;
      sub_100C18F64();

    }
  }
  if ((v5 - 1) > 1)
    goto LABEL_28;
  if (v20 < 174.0 || v21 < 53.0)
  {
    if (v20 >= 53.0)
    {
      v39 = v21 >= 174.0;
      goto LABEL_30;
    }
LABEL_28:
    v39 = 0;
    v37 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    v38 = 1;
LABEL_33:
    v40 = *v37;
    goto LABEL_34;
  }
  v39 = 1;
LABEL_30:
  v37 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  v40 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  v38 = !v39;
  if (!v40 && v39)
  {
    v41 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZPlayPauseKnob());
    v42 = sub_1005C9A88(a1);
    v43 = *v37;
    *v37 = v42;

    v39 = 1;
    goto LABEL_33;
  }
LABEL_34:
  if (v40)
  {
    v44 = objc_msgSend(v40, "renderable");
    if (v44)
    {
      v45 = v44;
      objc_msgSend(v44, "setHidden:", v38);

    }
  }
  v46 = v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs, v59, 1, 0);
  *(_QWORD *)v46 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v47 = *v23;
  if (*v23 && v22)
  {
    swift_beginAccess(v46, v58, 33, 0);
    v48 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
    specialized Array._endMutation()(v51);
    swift_endAccess(v58);

  }
  v52 = *v37;
  if (*v37 && v39)
  {
    swift_beginAccess(v46, v58, 33, 0);
    v53 = v52;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
    v55 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v54 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v55 >= v54 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
    v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
    specialized Array._endMutation()(v56);
    swift_endAccess(v58);
    sub_100BD57A4();

  }
  return *(_QWORD *)v46;
}

void sub_100BD6DE4(uint64_t a1, double a2, double a3)
{
  uint64_t Strong;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_icc);
  if (!Strong)
    return;
  v27 = (id)Strong;
  v7 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger);
  sub_100BD72B4(a1, (uint64_t *)&v28);

  v8 = v28;
  if (!v28)
  {
LABEL_18:

    return;
  }
  v9 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
  v10 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
  if (v10)
  {
    if (objc_msgSend(v10, "gestureState") == 1)
      goto LABEL_17;
    v11 = *(void **)(a1 + v9);
    if (v11)
    {
      if (objc_msgSend(v11, "gestureState") == 2)
        goto LABEL_17;
    }
  }
  v12 = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor);
  if (!v12)
    goto LABEL_17;
  v13 = v12;
  v14 = objc_msgSend(v12, "wantsVisibleKeyboard");
  swift_unknownObjectRelease(v13);
  if ((v14 & 1) == 0)
    goto LABEL_17;
  v15 = *(void **)(a1 + v9);
  if (!v15)
    goto LABEL_12;
  if (objc_msgSend(v15, "gestureState"))
  {
LABEL_17:

    goto LABEL_18;
  }
  v16 = *(void **)(a1 + v9);
  if (!v16)
  {
LABEL_12:
    v17 = objc_msgSend(v27, "gestureDispatcher", v27);
    static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLWPTwoFingerPan"));
    v19 = v18;
    v20 = objc_allocWithZone((Class)CRLBaseGesture);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "initWithGestureDispatcher:gestureKind:", v17, v21, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v23 = *(void **)(a1 + v9);
    *(_QWORD *)(a1 + v9) = v22;

    v16 = *(void **)(a1 + v9);
    if (!v16)
      goto LABEL_14;
  }
  objc_msgSend(v16, "setTargetRep:", v8, v27);
  v16 = *(void **)(a1 + v9);
LABEL_14:
  objc_msgSend(v16, "gestureBeganAtLocation:", a2, a3);
  v24 = *(void **)(a1 + v9);
  if (v24 && objc_msgSend(v24, "gestureState") == 5)
  {
    v25 = *(id *)(a1 + v9);
    objc_msgSend(v25, "reset");

    goto LABEL_17;
  }

  v26 = a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint;
  *(double *)v26 = a2;
  *(double *)(v26 + 8) = a3;
  *(_BYTE *)(v26 + 16) = 0;
}

void sub_100BD7040(uint64_t a1, double a2, double a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  void *Strong;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;

  v6 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger);
  sub_100BD72B4(a1, (uint64_t *)&v17);

  v16 = v17;
  if (v17)
  {
    v7 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
    v8 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
    if (v8)
      objc_msgSend(v8, "setTargetRep:", v17);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor);
    if (Strong
      && (v10 = Strong,
          v11 = objc_msgSend(Strong, "wantsVisibleKeyboard"),
          swift_unknownObjectRelease(v10),
          (v11 & 1) != 0)
      && (v12 = *(void **)(a1 + v7)) != 0
      && (objc_msgSend(v12, "gestureState") == 1
       || (v13 = *(void **)(a1 + v7)) != 0 && objc_msgSend(v13, "gestureState") == 2))
    {
      v14 = *(id *)(a1 + v7);
      objc_msgSend(v14, "gestureMovedToLocation:", a2, a3);

      v15 = a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint;
      *(double *)v15 = a2;
      *(double *)(v15 + 8) = a3;
      *(_BYTE *)(v15 + 16) = 0;
    }
    else
    {

    }
  }
}

void sub_100BD7194(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v2 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
  if (v3)
  {
    if (objc_msgSend(v3, "gestureState") == 1
      || (v4 = *(void **)(a1 + v2)) != 0 && objc_msgSend(v4, "gestureState") == 2)
    {
      v5 = *(void **)(a1 + v2);
      if (v5)
      {
        if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint + 16) & 1) != 0)
        {
          __break(1u);
          return;
        }
        objc_msgSend(v5, "gestureEndedAtLocation:", *(double *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint), *(double *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint + 8));
        v5 = *(void **)(a1 + v2);
      }
      objc_msgSend(v5, "reset");
      v6 = *(void **)(a1 + v2);
      if (v6)
      {
        v7 = objc_msgSend(v6, "gestureDelegate");
        v8 = v7;
        if (v7)
          objc_msgSend(v7, "didReset:", *(_QWORD *)(a1 + v2));
        v9 = *(id *)(a1 + v2);
      }
      else
      {
        v9 = 0;
        v8 = 0;
      }
      *(_QWORD *)(a1 + v2) = 0;
      swift_unknownObjectRelease(v8);

    }
  }
}

uint64_t sub_100BD72B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  void *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_icc);
  if (!result)
    goto LABEL_17;
  v5 = (void *)result;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_editor);
  if (!Strong)
    goto LABEL_15;
  v7 = Strong;
  v8 = type metadata accessor for CRLWPEditor(0);
  result = swift_dynamicCastClass(v7, v8);
  if (!result)
  {
    swift_unknownObjectRelease(v7);
LABEL_15:

    goto LABEL_16;
  }
  if (*(_QWORD *)(*(_QWORD *)(result + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    v9 = objc_msgSend(v5, "repsForInfo:");
    v10 = sub_1004F6160();
    v11 = sub_1004F619C();
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      if (__CocoaSet.count.getter(v13) != 1)
        goto LABEL_10;
    }
    else if (*(_QWORD *)(v12 + 16) != 1)
    {
LABEL_10:
      sub_100757E04(&_mh_execute_header, (uint64_t)"repForFloatingCursor()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLFloatingCursor.swift", 83, 2, 94, "Should only ever be one editing text rep.", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"repForFloatingCursor()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLFloatingCursor.swift", 83, 2u, 94, (uint64_t)"Should only ever be one editing text rep.", 41, 2u);
    }
    v14 = (void *)sub_100857EA4(v12);
    swift_bridgeObjectRelease(v12);
    swift_unknownObjectRelease(v7);

    if (v14)
    {
      v15 = objc_opt_self(CRLWPRep);
      result = swift_dynamicCastObjCClass(v14, v15);
      if (result)
      {
LABEL_17:
        *a2 = result;
        return result;
      }

    }
LABEL_16:
    result = 0;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id sub_100BD74F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFloatingCursor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFloatingCursor()
{
  return objc_opt_self(_TtC8Freeform17CRLFloatingCursor);
}

uint64_t sub_100BD7598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[20] = a5;
  v6[21] = a6;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  v7 = type metadata accessor for UUID(0);
  v6[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100BD75F8, 0, 0);
}

uint64_t sub_100BD75F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v1 + 2;
  v4 = (void *)v1[21];
  v3 = v1[22];
  v5 = v1[16];
  UUID.init()(a1);
  sub_10067AFD0(v3, 0, 0xE000000000000000, v5);
  v6 = sub_100BDA100(v5);
  v1[23] = v6;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_100BD76D0;
  v7 = swift_continuation_init(v1 + 2, 1);
  v1[10] = _NSConcreteStackBlock;
  v8 = v1 + 10;
  v8[1] = 0x40000000;
  v8[2] = sub_100673C7C;
  v8[3] = &unk_101298DA8;
  v8[4] = v7;
  objc_msgSend(v4, "saveRecordZone:completionHandler:", v6, v8);
  return swift_continuation_await(v2);
}

uint64_t sub_100BD76D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 192) = v1;
  if (v1)
    v2 = sub_100BD7890;
  else
    v2 = sub_100BD7730;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100BD7730()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;
  int8x16_t v5;
  __int128 v6;

  v4 = *(_OWORD *)(v0 + 144);
  v5 = *(int8x16_t *)(v0 + 128);
  v6 = *(_OWORD *)(v0 + 160);

  v1 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 200) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v6;
  *(int8x16_t *)(v1 + 48) = vextq_s8(v5, v5, 8uLL);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 208) = v2;
  *v2 = v0;
  v2[1] = sub_100BD77E8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v2, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_101408580, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100BD77E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v2 + 200));
  if (v0)
    v4 = sub_100BD78E4;
  else
    v4 = sub_100BD7854;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100BD7854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD7890(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 128);
  swift_willThrow(a1);

  sub_1004BBB8C(v3);
  swift_task_dealloc(*(_QWORD *)(v1 + 176));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100BD78E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);

  sub_1004BBB8C(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v9;

  v8[126] = a8;
  v8[125] = a7;
  v8[124] = a6;
  v8[123] = a5;
  v8[122] = a4;
  v8[121] = a3;
  v8[120] = a2;
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E01F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[127] = swift_task_alloc(v9);
  v8[128] = swift_task_alloc(v9);
  return swift_task_switch(sub_100BD79B0, 0, 0);
}

void sub_100BD79B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  os_unfair_lock_s *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  __n128 v89;
  __n128 v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _BYTE *v102;
  __n128 v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  _BYTE *v117;
  __n128 v118;
  __n128 v119;
  id v120;
  uint64_t v121;
  unint64_t v122;
  _BYTE *v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  Swift::Int v157;
  Swift::Int v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  double *v164;
  uint64_t v165;
  unint64_t v166;
  BOOL v167;
  char v168;
  double *v169;
  uint64_t v170;
  __n128 v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v176;
  int64_t v177;
  uint64_t v178;
  unint64_t v179;
  double v180;
  double v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  BOOL v188;
  uint64_t v189;
  uint64_t v190;
  Swift::Int v191;
  Swift::Int v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  double *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  BOOL v202;
  uint64_t v203;
  char v204;
  double *v205;
  char v206;
  __n128 v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v212;
  int64_t v213;
  uint64_t v214;
  unint64_t v215;
  double v216;
  double v217;
  char v218;
  double v219;
  void *v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  __n128 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  uint64_t v235;
  void *v236;
  double v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  id v241;
  id v242;
  __n128 v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned __int8 v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  uint64_t v256;
  void *v257;
  const char *v258;
  uint64_t v259;
  uint64_t v260;
  _QWORD *v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  BOOL v289;
  double v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  double v295;
  unint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  __int128 v301;
  uint64_t v302;
  char *v303;

  v1 = *(_QWORD *)(v0 + 1000);
  v2 = *(_QWORD *)(v0 + 968);
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = sub_1004B804C(&qword_101408588);
  OS_dispatch_queue.sync<A>(execute:)(sub_100BDA35C, v3, v4);
  swift_task_dealloc(v3);
  v5 = *(_QWORD *)(v0 + 952);
  *(_QWORD *)(v0 + 1032) = v5;
  if (!v5)
  {
    v15 = sub_100BDA374();
    swift_allocError(&type metadata for CRLPublicCloudDataControllerError, v15, 0, 0);
    *v16 = 1;
    swift_willThrow(v17);
    goto LABEL_4;
  }
  v6 = *(_QWORD *)(v0 + 1000);
  v7 = *(_QWORD *)(v0 + 968);
  v8 = swift_task_alloc(32);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v9 = sub_1004B804C(&qword_101405498);
  OS_dispatch_queue.sync<A>(execute:)(sub_100BDA3B8, v8, v9);
  v10 = *(_QWORD *)(v0 + 1000);
  v11 = *(_QWORD *)(v0 + 968);
  swift_task_dealloc(v8);
  v12 = *(_QWORD *)(v0 + 944);
  v13 = swift_task_alloc(32);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  v14 = sub_1004B804C(&qword_101408598);
  OS_dispatch_queue.sync<A>(execute:)(sub_100BDA3D0, v13, v14);
  v19 = *(_QWORD *)(v0 + 1008);
  swift_task_dealloc(v13);
  v20 = *(_QWORD *)(v0 + 936);
  *(_QWORD *)(v0 + 928) = _swiftEmptyArrayStorage;
  swift_retain(v5);
  v22 = sub_1007CAC2C(v21, (uint64_t)&off_101295290, v19);
  swift_release(v5);
  if (v22)
  {
    v269 = v20;
    v257 = v22;
    if ((unint64_t)v12 >> 62)
      goto LABEL_57;
    v23 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v24 = (uint64_t *)(v0 + 928);
      v287 = (_QWORD *)(v0 + 928);
      if (!v23)
        break;
      v25 = 0;
      v261 = (_QWORD *)(v0 + 640);
      v26 = v0 + 600;
      v259 = *(_QWORD *)(v0 + 976);
      v27 = *(_QWORD *)(v0 + 968);
      v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v302 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock);
      v296 = v12 & 0xC000000000000001;
      v291 = v12;
      v273 = v27;
      v278 = v23;
      v281 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      while (1)
      {
        if (v296)
        {
          v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v12);
        }
        else
        {
          v40 = *(_QWORD *)(v12 + 8 * v25 + 32);
          swift_retain(v40);
        }
        v300 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v302 + 16));
        v41 = *(void **)(v27 + v28);
        if (v41)
        {
          v42 = *(id *)(v27 + v28);
        }
        else
        {
          v43 = v28;
          v44 = *(void **)(v0 + 968);
          v45 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
          v46 = v44;
          v47 = sub_100C7EE84((uint64_t)v46);

          v48 = *(void **)(v27 + v43);
          *(_QWORD *)(v27 + v43) = v47;
          v42 = v47;

          v41 = 0;
        }
        v49 = *(os_unfair_lock_s **)(v302 + 16);
        v50 = v41;
        os_unfair_lock_unlock(v49);
        LOBYTE(v49) = sub_100C76920(v40);

        if ((v49 & 1) != 0)
        {
          if (qword_1013DD778 != -1)
            swift_once(&qword_1013DD778, sub_100A02BF8);
          swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 808, 0, 0);
          v29 = (void *)static OS_os_log.crlSendACopy;
          v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v30, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v32 = v29;
          v33 = UUID.uuidString.getter(v32);
          v35 = v34;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v33;
          *(_QWORD *)(inited + 40) = v35;
          v37 = static os_log_type_t.default.getter(v36);
          sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v37, "Skipping item %{public}@ due to checkIfAssetIsStillDownloading being true", 73, 2, inited);
          swift_setDeallocating(inited);
          v38 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v38);
          v24 = (uint64_t *)(v0 + 928);
          v27 = v273;
          v39 = v278;
        }
        else
        {
          *(_QWORD *)(v0 + 880) = v40;
          *(_QWORD *)(v0 + 888) = &off_1012953C8;
          swift_retain_n(v40, 2);
          v51 = sub_1004B804C((uint64_t *)&unk_1013E87C0);
          v52 = sub_1004B804C(&qword_1013F32C0);
          if (!swift_dynamicCast(v26, v0 + 880, v51, v52, 6))
          {
            *(_QWORD *)(v26 + 32) = 0;
            *(_OWORD *)v26 = 0u;
            *(_OWORD *)(v26 + 16) = 0u;
            sub_1004CB800(v26, &qword_1013F32C8);
            if (qword_1013DD870 != -1)
              swift_once(&qword_1013DD870, sub_100A059E0);
            swift_beginAccess(&static OS_os_log.dataSync, v0 + 784, 0, 0);
            v76 = (void *)static OS_os_log.dataSync;
            v77 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v78 = swift_initStackObject(v77, v0 + 88);
            *(_OWORD *)(v78 + 16) = xmmword_100EF5E40;
            ObjectType = swift_getObjectType(v40);
            v80 = v76;
            v81 = _typeName(_:qualified:)(ObjectType, 0);
            v83 = v82;
            *(_QWORD *)(v78 + 56) = &type metadata for String;
            v84 = sub_1004CFC2C();
            *(_QWORD *)(v78 + 64) = v84;
            *(_QWORD *)(v78 + 32) = v81;
            *(_QWORD *)(v78 + 40) = v83;
            v85 = static os_log_type_t.error.getter(v84);
            sub_100A06EBC((uint64_t)v80, &_mh_execute_header, v85, "CRLBoardLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 105, 2, v78);
            swift_setDeallocating(v78);
            v86 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v78 + 32, 1, v86);

            v87 = sub_1007CAEA8();
            swift_allocError(&type metadata for CRLPublicCloudRecordProviderError, v87, 0, 0);
            *v88 = 1;
            swift_willThrow(v89);
            v90 = swift_bridgeObjectRelease();
            swift_release_n(v40, 2, v90);

            swift_release(v5);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          v53 = *(_QWORD *)(v0 + 1008);
          sub_1004DB728((__int128 *)v26, (uint64_t)v261);
          v54 = *(_QWORD *)(v0 + 664);
          v55 = *(_QWORD *)(v0 + 672);
          sub_1004BB5A4(v261, v54);
          v56 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v55 + 8))(*(_QWORD *)(v259 + 16), v53, v54, v55);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v261);
          swift_release(v40);
          if (!v56)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_1013DD778 != -1)
              swift_once(&qword_1013DD778, sub_100A02BF8);
            swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 832, 0, 0);
            v91 = (void *)static OS_os_log.crlSendACopy;
            v92 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v93 = swift_initStackObject(v92, v0 + 304);
            *(_OWORD *)(v93 + 16) = xmmword_100EF5E40;
            v94 = v91;
            v95 = UUID.uuidString.getter(v94);
            v97 = v96;
            *(_QWORD *)(v93 + 56) = &type metadata for String;
            v98 = sub_1004CFC2C();
            *(_QWORD *)(v93 + 64) = v98;
            *(_QWORD *)(v93 + 32) = v95;
            *(_QWORD *)(v93 + 40) = v97;
            v99 = static os_log_type_t.error.getter(v98);
            sub_100A06EBC((uint64_t)v94, &_mh_execute_header, v99, "Upload failed to create board item %{public}@", 45, 2, v93);
            swift_setDeallocating(v93);
            v100 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v93 + 32, 1, v100);

            v101 = sub_100BDA374();
            swift_allocError(&type metadata for CRLPublicCloudDataControllerError, v101, 0, 0);
            *v102 = 4;
            swift_willThrow(v103);
            v104 = v5;
LABEL_54:
            swift_release(v104);

            swift_release(v40);
            goto LABEL_4;
          }
          v32 = v56;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
          v58 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v57 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v27 = v273;
          if (v58 >= v57 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
          v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v32);
          specialized Array._endMutation()(v59);
          v39 = v278;
        }

        swift_release(v40);
        ++v25;
        v12 = v291;
        v26 = v0 + 600;
        v28 = v281;
        if (v300 == v39)
          goto LABEL_27;
      }
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      if (v12 < 0)
        v125 = v12;
      else
        v125 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v23 = _CocoaArrayWrapper.endIndex.getter(v125);
      swift_bridgeObjectRelease();
    }
LABEL_27:
    swift_bridgeObjectRelease();
    v60 = v269;
    if ((unint64_t)v269 >> 62)
    {
      if (v269 < 0)
        v126 = v269;
      else
        v126 = v269 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v269);
      v12 = _CocoaArrayWrapper.endIndex.getter(v126);
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_29:
        v61 = 0;
        v297 = (_QWORD *)(v0 + 520);
        v62 = v0 + 560;
        v292 = *(_QWORD *)(v0 + 976);
        v282 = v5;
        while (1)
        {
          if ((v269 & 0xC000000000000001) != 0)
          {
            v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v60);
          }
          else
          {
            v40 = *(_QWORD *)(v60 + 8 * v61 + 32);
            swift_retain(v40);
          }
          v5 = v61 + 1;
          if (__OFADD__(v61, 1))
            goto LABEL_56;
          *(_QWORD *)(v0 + 896) = v40;
          *(_QWORD *)(v0 + 904) = &off_101295178;
          swift_retain_n(v40, 2);
          v63 = sub_1004B804C((uint64_t *)&unk_1013E87C0);
          v64 = sub_1004B804C(&qword_1013F32C0);
          if (!swift_dynamicCast(v62, v0 + 896, v63, v64, 6))
            break;
          v65 = *(_QWORD *)(v0 + 1008);
          sub_1004DB728((__int128 *)v62, (uint64_t)v297);
          v66 = *(_QWORD *)(v0 + 544);
          v67 = *(_QWORD *)(v0 + 552);
          sub_1004BB5A4(v297, v66);
          v68 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v67 + 8))(*(_QWORD *)(v292 + 16), v65, v66, v67);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v297);
          swift_release(v40);
          if (!v68)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_1013DD778 != -1)
              swift_once(&qword_1013DD778, sub_100A02BF8);
            swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 736, 0, 0);
            v120 = (id)static OS_os_log.crlSendACopy;
            v121 = static os_log_type_t.error.getter(v120);
            sub_100A06EBC((uint64_t)v120, &_mh_execute_header, v121, "Upload failed to create cloud record for freehand drawing item records.", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

            v122 = sub_100BDA374();
            swift_allocError(&type metadata for CRLPublicCloudDataControllerError, v122, 0, 0);
            *v123 = 5;
            swift_willThrow(v124);
            v104 = v282;
            goto LABEL_54;
          }
          v69 = v12;
          v70 = v68;
          v24 = (uint64_t *)(v0 + 928);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
          v72 = *(_QWORD *)((*v287 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v71 = *(_QWORD *)((*v287 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v72 >= v71 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
          v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
          specialized Array._endMutation()(v73);
          swift_release(v40);

          ++v61;
          v12 = v69;
          v74 = v5 == v69;
          v60 = v269;
          v62 = v0 + 560;
          if (v74)
            goto LABEL_65;
        }
        *(_QWORD *)(v62 + 32) = 0;
        *(_OWORD *)v62 = 0u;
        *(_OWORD *)(v62 + 16) = 0u;
        sub_1004CB800(v62, &qword_1013F32C8);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v0 + 856, 0, 0);
        v105 = (void *)static OS_os_log.dataSync;
        v106 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v107 = swift_initStackObject(v106, v0 + 232);
        *(_OWORD *)(v107 + 16) = xmmword_100EF5E40;
        v108 = swift_getObjectType(v40);
        v109 = v105;
        v110 = _typeName(_:qualified:)(v108, 0);
        v112 = v111;
        *(_QWORD *)(v107 + 56) = &type metadata for String;
        v113 = sub_1004CFC2C();
        *(_QWORD *)(v107 + 64) = v113;
        *(_QWORD *)(v107 + 32) = v110;
        *(_QWORD *)(v107 + 40) = v112;
        v114 = static os_log_type_t.error.getter(v113);
        sub_100A06EBC((uint64_t)v109, &_mh_execute_header, v114, "CRLBoardLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 105, 2, v107);
        swift_setDeallocating(v107);
        v115 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v107 + 32, 1, v115);

        v116 = sub_1007CAEA8();
        swift_allocError(&type metadata for CRLPublicCloudRecordProviderError, v116, 0, 0);
        *v117 = 1;
        swift_willThrow(v118);
        swift_release_n(v40, 2, v119);

        swift_release(v282);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_4:
        v18 = *(_QWORD *)(v0 + 1016);
        swift_task_dealloc(*(_QWORD *)(v0 + 1024));
        swift_task_dealloc(v18);
        (*(void (**)(void))(v0 + 8))();
        return;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v269 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12)
        goto LABEL_29;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    v127 = v257;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v127);
    v129 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v128 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v129 >= v128 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v128 > 1, v129 + 1, 1);
    v130 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v129, v127);
    specialized Array._endMutation()(v130);

    v75 = *v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v131 = (unint64_t)v75 >> 62;
  if ((unint64_t)v75 >> 62)
  {
    if (v75 < 0)
      v148 = v75;
    else
      v148 = v75 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v75);
    v132 = _CocoaArrayWrapper.endIndex.getter(v148);
    swift_bridgeObjectRelease();
  }
  else
  {
    v132 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 760, 0, 0);
  v133 = (void *)static OS_os_log.crlSendACopy;
  v134 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 1040) = v134;
  v264 = v134;
  v135 = swift_initStackObject(v134, v0 + 376);
  *(_OWORD *)(v135 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v0 + 920) = v132;
  v136 = v133;
  v137 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v139 = v138;
  *(_QWORD *)(v135 + 56) = &type metadata for String;
  v140 = sub_1004CFC2C();
  *(_QWORD *)(v0 + 1048) = v140;
  v263 = v140;
  *(_QWORD *)(v135 + 64) = v140;
  *(_QWORD *)(v135 + 32) = v137;
  *(_QWORD *)(v135 + 40) = v139;
  v142 = static os_log_type_t.default.getter(v141);
  sub_100A06EBC((uint64_t)v136, &_mh_execute_header, v142, "Starting to upload [%{public}@] records to public publicDatabase", 64, 2, v135);
  swift_setDeallocating(v135);
  v143 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v0 + 1056) = v143;
  v262 = v143;
  swift_arrayDestroy(v135 + 32, 1, v143);

  if (v131)
  {
    if (v75 < 0)
      v149 = v75;
    else
      v149 = v75 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v75);
    v144 = _CocoaArrayWrapper.endIndex.getter(v149);
    swift_bridgeObjectRelease();
    if (v144 >= 1)
      goto LABEL_74;
  }
  else
  {
    v144 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v144 >= 1)
    {
LABEL_74:
      v145 = 0;
      v146 = 0;
      do
      {
        ++v146;
        v147 = v145 + 50;
        if (__OFADD__(v145, 50))
          break;
        v145 += 50;
      }
      while (v147 < v144);
      goto LABEL_87;
    }
  }
  v146 = 0;
LABEL_87:
  sub_100600CD4(0, v146, 0);
  v283 = v144;
  if (!v146)
  {
    if (v144 < 1)
      goto LABEL_217;
    v182 = 0;
    v279 = v75 & 0xC000000000000001;
    v152 = v75 & 0xFFFFFFFFFFFFFF8;
    goto LABEL_152;
  }
  v150 = 0;
  v151 = 0;
  v152 = v75 & 0xFFFFFFFFFFFFFF8;
  if (v75 < 0)
    v153 = v75;
  else
    v153 = v75 & 0xFFFFFFFFFFFFFF8;
  v274 = v153;
  v279 = v75 & 0xC000000000000001;
  v266 = v152 + 32;
  v258 = "UnsafeMutablePointer.initialize with negative count";
  v260 = 51;
  v256 = 1090;
  while (v151 < v144)
  {
    if (__OFADD__(v151, 50))
      v154 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v154 = v151 + 50;
    if (v151 > 0x7FFFFFFFFFFFFFCDLL)
      goto LABEL_229;
    if (v144 >= v151 + 50)
      v144 = v151 + 50;
    if (v144 < v151)
      goto LABEL_230;
    v288 = v154;
    v293 = v151 + 50;
    if (v131)
    {
      swift_bridgeObjectRetain(v75);
      v155 = _CocoaArrayWrapper.endIndex.getter(v274);
      swift_bridgeObjectRelease();
    }
    else
    {
      v155 = *(_QWORD *)(v152 + 16);
    }
    if (v155 < v151)
      goto LABEL_231;
    if (v151 < 0)
      goto LABEL_232;
    if (v131)
    {
      swift_bridgeObjectRetain(v75);
      v156 = _CocoaArrayWrapper.endIndex.getter(v274);
      swift_bridgeObjectRelease();
    }
    else
    {
      v156 = *(_QWORD *)(v152 + 16);
    }
    if (v156 < v144)
      goto LABEL_233;
    if (v279 && v151 != v144)
    {
      if (v151 >= (unint64_t)v144)
        goto LABEL_239;
      sub_100619F24();
      v157 = v151;
      do
      {
        v158 = v157 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v157);
        v157 = v158;
      }
      while (v144 != v158);
    }
    if (v131)
    {
      v171 = swift_bridgeObjectRetain(v75);
      v144 = _CocoaArrayWrapper.subscript.getter(v151, v144, v274, v171);
      v161 = v172;
      v151 = v173;
      v159 = v174;
      swift_bridgeObjectRelease();
      v284 = v150;
      if ((v159 & 1) == 0)
      {
LABEL_126:
        v166 = v159 >> 1;
        v152 = (v159 >> 1) - v151;
        if (__OFSUB__(v159 >> 1, v151))
        {
LABEL_147:
          __break(1u);
LABEL_148:
          if (v160 >= v144)
            goto LABEL_217;
          v182 = v293;
LABEL_152:
          if (v75 < 0)
            v183 = v75;
          else
            v183 = v152;
          v285 = v183;
          v298 = v152;
          v272 = v152 + 32;
          v184 = v182 + 50;
          v258 = "UnsafeMutablePointer.initialize with negative count";
          v260 = 51;
          v256 = 1090;
          v185 = v182;
          v294 = v182;
          while (2)
          {
            if (v144 >= v184)
              v186 = v184;
            else
              v186 = v144;
            v187 = v185 + 50;
            v188 = __OFADD__(v185, 50);
            if (v185 > 0x7FFFFFFFFFFFFFCDLL)
              goto LABEL_234;
            if (v144 >= v187)
              v144 = v185 + 50;
            if (v144 < v185)
              goto LABEL_235;
            if (v131)
            {
              swift_bridgeObjectRetain(v75);
              v189 = _CocoaArrayWrapper.endIndex.getter(v285);
              swift_bridgeObjectRelease();
              v182 = v294;
            }
            else
            {
              v189 = *(_QWORD *)(v298 + 16);
            }
            if (v189 < v185)
              goto LABEL_236;
            if (v182 < 0)
              goto LABEL_237;
            if (v131)
            {
              swift_bridgeObjectRetain(v75);
              v190 = _CocoaArrayWrapper.endIndex.getter(v285);
              swift_bridgeObjectRelease();
            }
            else
            {
              v190 = *(_QWORD *)(v298 + 16);
            }
            if (v190 < v144)
              goto LABEL_238;
            if (v279 && v185 != v144)
            {
              if (v185 >= (unint64_t)v144)
                goto LABEL_241;
              sub_100619F24();
              v191 = v185;
              do
              {
                v192 = v191 + 1;
                _ArrayBuffer._typeCheckSlowPath(_:)(v191);
                v191 = v192;
              }
              while (v186 != v192);
            }
            if ((unint64_t)v75 >> 62)
            {
              v207 = swift_bridgeObjectRetain(v75);
              v194 = _CocoaArrayWrapper.subscript.getter(v185, v144, v285, v207);
              v195 = v208;
              v185 = v209;
              v193 = v210;
              swift_bridgeObjectRelease();
              v289 = v188;
              if ((v193 & 1) == 0)
                goto LABEL_192;
LABEL_182:
              v267 = v195;
              v275 = v187;
              v196 = type metadata accessor for __ContiguousArrayStorageBase(0);
              v197 = swift_unknownObjectRetain_n(v194, 2);
              v198 = (double *)swift_dynamicCastClass(v197, v196);
              if (!v198)
              {
                swift_unknownObjectRelease(v194);
                v198 = _swiftEmptyArrayStorage;
              }
              v199 = v194;
              v200 = *((_QWORD *)v198 + 2);
              swift_release(v198);
              v201 = v193 >> 1;
              v202 = __OFSUB__(v193 >> 1, v185);
              v203 = (v193 >> 1) - v185;
              v204 = v202;
              if (v202)
                goto LABEL_242;
              if (v200 != v203)
              {
                v194 = v199;
                swift_unknownObjectRelease(v199);
                v187 = v275;
                v195 = v267;
                if ((v204 & 1) != 0)
                  goto LABEL_216;
                goto LABEL_196;
              }
              v194 = v199;
              v205 = (double *)swift_dynamicCastClass(v199, v196);
              v206 = v289;
              v187 = v275;
              if (!v205)
              {
                swift_unknownObjectRelease(v194);
                v205 = _swiftEmptyArrayStorage;
              }
            }
            else
            {
              v193 = (2 * v144) | 1;
              swift_bridgeObjectRetain(v75);
              v194 = v298;
              v195 = v272;
              v289 = v188;
              if ((v193 & 1) != 0)
                goto LABEL_182;
LABEL_192:
              v201 = v193 >> 1;
              v203 = (v193 >> 1) - v185;
              if (__OFSUB__(v193 >> 1, v185))
              {
LABEL_216:
                __break(1u);
LABEL_217:
                swift_bridgeObjectRelease();
                v219 = _swiftEmptyArrayStorage[2];
                v220 = (void *)static OS_os_log.crlSendACopy;
                v221 = swift_initStackObject(v264, v0 + 448);
                *(_OWORD *)(v221 + 16) = xmmword_100EF5E40;
                v295 = v219;
                *(double *)(v0 + 912) = v219;
                v222 = v220;
                v223 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
                *(_QWORD *)(v221 + 56) = &type metadata for String;
                *(_QWORD *)(v221 + 64) = v263;
                *(_QWORD *)(v221 + 32) = v223;
                *(_QWORD *)(v221 + 40) = v224;
                v226 = static os_log_type_t.default.getter(v225);
                sub_100A06EBC((uint64_t)v222, &_mh_execute_header, v226, "Uploading as [%{public}@] chunks", 32, 2, v221);
                swift_setDeallocating(v221);
                swift_arrayDestroy(v221 + 32, 1, v262);

                v290 = _swiftEmptyArrayStorage[2];
                if (v290 == 0.0)
                {
LABEL_227:
                  swift_release(_swiftEmptyArrayStorage);
                  v303 = (char *)&dword_1014085B0 + dword_1014085B0;
                  v255 = (_QWORD *)swift_task_alloc(unk_1014085B4);
                  *(_QWORD *)(v0 + 1064) = v255;
                  *v255 = v0;
                  v255[1] = sub_100BD94C0;
                  ((void (*)(_QWORD, _QWORD))v303)(0, 0);
                  return;
                }
                v286 = v0 + 712;
                v265 = (_QWORD *)(v0 + 680);
                v227 = type metadata accessor for TaskPriority(0);
                v228 = 0;
                v229 = *(_QWORD *)(v227 - 8);
                v277 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 56);
                v280 = v227;
                v268 = v229;
                while (2)
                {
                  v232 = *(_QWORD *)(v0 + 1024);
                  v233 = *(_QWORD *)(v0 + 1016);
                  v234 = *(void **)(v0 + 992);
                  v235 = v0;
                  v236 = *(void **)(v0 + 968);
                  v237 = _swiftEmptyArrayStorage[v228 + 4];
                  v301 = *(_OWORD *)(v235 + 976);
                  v277(v232, 1, 1, v227);
                  v238 = swift_allocObject(&unk_101298DD0, 88, 7);
                  v239 = v228;
                  *(_QWORD *)(v238 + 16) = 0;
                  v240 = (uint64_t *)(v238 + 16);
                  *(_QWORD *)(v238 + 24) = 0;
                  *(_QWORD *)(v238 + 32) = v236;
                  *(_OWORD *)(v238 + 40) = v301;
                  *(_QWORD *)(v238 + 56) = v234;
                  *(double *)(v238 + 64) = v237;
                  v299 = v239;
                  *(_QWORD *)(v238 + 72) = v239;
                  *(double *)(v238 + 80) = v295;
                  sub_1004DAEB4(v232, v233);
                  LODWORD(v233) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v233, 1, v227);
                  v241 = v236;
                  swift_bridgeObjectRetain(*(_QWORD *)&v237);
                  swift_unknownObjectRetain(v301);
                  v242 = v234;
                  v0 = v235;
                  v244 = *(_QWORD *)(v235 + 1016);
                  if ((_DWORD)v233 == 1)
                  {
                    sub_1004CB800(*(_QWORD *)(v235 + 1016), &qword_1013E01F0);
                    v245 = 0;
                    v229 = v268;
                    v246 = *v240;
                    if (*v240)
                      goto LABEL_222;
LABEL_224:
                    v249 = 0;
                    v251 = 0;
                  }
                  else
                  {
                    v252 = TaskPriority.rawValue.getter(v243);
                    v229 = v268;
                    (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v244, v227);
                    v245 = v252;
                    v246 = *v240;
                    if (!*v240)
                      goto LABEL_224;
LABEL_222:
                    v247 = *(_QWORD *)(v238 + 24);
                    v248 = swift_getObjectType(v246);
                    swift_unknownObjectRetain(v246);
                    v249 = dispatch thunk of Actor.unownedExecutor.getter(v248, v247);
                    v251 = v250;
                    swift_unknownObjectRelease(v246);
                  }
                  v253 = **(_QWORD **)(v0 + 960);
                  v254 = (_QWORD *)(v251 | v249);
                  if (v251 | v249)
                  {
                    v254 = v265;
                    *v265 = 0;
                    v265[1] = 0;
                    *(_QWORD *)(v0 + 696) = v249;
                    *(_QWORD *)(v0 + 704) = v251;
                  }
                  v228 = v299 + 1;
                  v230 = *(_QWORD *)(v0 + 1024);
                  *(_QWORD *)(v0 + 712) = 1;
                  *(_QWORD *)(v0 + 720) = v254;
                  *(_QWORD *)(v0 + 728) = v253;
                  v231 = swift_task_create(v245 | 0x3100, v286, (char *)&type metadata for () + 8, &unk_1014085A8);
                  swift_release(v231);
                  sub_1004CB800(v230, &qword_1013E01F0);
                  v227 = v280;
                  if (*(_QWORD *)&v290 == v299 + 1)
                    goto LABEL_227;
                  continue;
                }
              }
LABEL_196:
              if (v203)
              {
                v276 = v203;
                if (v203 < 1)
                {
                  v205 = _swiftEmptyArrayStorage;
                }
                else
                {
                  v212 = sub_1004B804C((uint64_t *)&unk_1013E4180);
                  v205 = (double *)swift_allocObject(v212, 8 * v203 + 32, 7);
                  v213 = j__malloc_size_1(v205);
                  v214 = v213 - 32;
                  if (v213 < 32)
                    v214 = v213 - 25;
                  *((_QWORD *)v205 + 2) = v203;
                  *((_QWORD *)v205 + 3) = (2 * (v214 >> 3)) | 1;
                }
                if (v185 == v201)
                  goto LABEL_246;
                v206 = v289;
                if (v203 < 0)
                  goto LABEL_244;
                v215 = v195 + 8 * v185;
                if (v215 < (unint64_t)&v205[v276 + 4] && (unint64_t)(v205 + 4) < v215 + v276 * 8)
                  goto LABEL_243;
                sub_100619F24();
                swift_arrayInitWithCopy(v205 + 4);
              }
              else
              {
                v205 = _swiftEmptyArrayStorage;
                v206 = v289;
              }
            }
            swift_unknownObjectRelease(v194);
            v217 = _swiftEmptyArrayStorage[2];
            v216 = _swiftEmptyArrayStorage[3];
            v131 = (unint64_t)v75 >> 62;
            if (*(_QWORD *)&v217 >= *(_QWORD *)&v216 >> 1)
              sub_100600CD4(*(_QWORD *)&v216 > 1uLL, *(_QWORD *)&v217 + 1, 1);
            *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v217 + 1;
            *(_QWORD *)&_swiftEmptyArrayStorage[*(_QWORD *)&v217 + 4] = v205;
            v144 = v283;
            if (v187 >= v283)
              v218 = 1;
            else
              v218 = v206;
            v184 += 50;
            v185 = v187;
            v182 = v294;
            if ((v218 & 1) != 0)
              goto LABEL_217;
            continue;
          }
        }
        goto LABEL_130;
      }
    }
    else
    {
      v159 = (2 * v144) | 1;
      swift_bridgeObjectRetain(v75);
      v144 = v152;
      v161 = v266;
      v284 = v150;
      if ((v159 & 1) == 0)
        goto LABEL_126;
    }
    v270 = v161;
    v162 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v163 = swift_unknownObjectRetain_n(v144, 2);
    v164 = (double *)swift_dynamicCastClass(v163, v162);
    if (!v164)
    {
      swift_unknownObjectRelease(v144);
      v164 = _swiftEmptyArrayStorage;
    }
    v165 = *((_QWORD *)v164 + 2);
    swift_release(v164);
    v166 = v159 >> 1;
    v167 = __OFSUB__(v159 >> 1, v151);
    v152 = (v159 >> 1) - v151;
    v168 = v167;
    if (v167)
      goto LABEL_240;
    if (v165 == v152)
    {
      v169 = (double *)swift_dynamicCastClass(v144, v162);
      v131 = (unint64_t)v75 >> 62;
      v170 = v284;
      if (!v169)
      {
        swift_unknownObjectRelease(v144);
        v169 = _swiftEmptyArrayStorage;
      }
      goto LABEL_142;
    }
    swift_unknownObjectRelease(v144);
    v131 = (unint64_t)v75 >> 62;
    v161 = v270;
    if ((v168 & 1) != 0)
      goto LABEL_147;
LABEL_130:
    if (v152)
    {
      v271 = v152;
      if (v152 < 1)
      {
        v169 = _swiftEmptyArrayStorage;
      }
      else
      {
        v176 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v169 = (double *)swift_allocObject(v176, 8 * v152 + 32, 7);
        v177 = j__malloc_size_1(v169);
        v178 = v177 - 32;
        if (v177 < 32)
          v178 = v177 - 25;
        *((_QWORD *)v169 + 2) = v152;
        *((_QWORD *)v169 + 3) = (2 * (v178 >> 3)) | 1;
      }
      if (v151 == v166)
      {
        __break(1u);
LABEL_246:
        __break(1u);
        return;
      }
      v170 = v284;
      if (v152 < 0)
        goto LABEL_244;
      v179 = v161 + 8 * v151;
      if (v179 < (unint64_t)&v169[v271 + 4] && (unint64_t)(v169 + 4) < v179 + v271 * 8)
        goto LABEL_243;
      sub_100619F24();
      swift_arrayInitWithCopy(v169 + 4);
      v131 = (unint64_t)v75 >> 62;
    }
    else
    {
      v169 = _swiftEmptyArrayStorage;
      v170 = v284;
    }
LABEL_142:
    swift_unknownObjectRelease(v144);
    v181 = _swiftEmptyArrayStorage[2];
    v180 = _swiftEmptyArrayStorage[3];
    if (*(_QWORD *)&v181 >= *(_QWORD *)&v180 >> 1)
      sub_100600CD4(*(_QWORD *)&v180 > 1uLL, *(_QWORD *)&v181 + 1, 1);
    v150 = v170 + 1;
    *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v181 + 1;
    *(_QWORD *)&_swiftEmptyArrayStorage[*(_QWORD *)&v181 + 4] = v169;
    v160 = v288;
    v151 = v288;
    v144 = v283;
    v152 = v75 & 0xFFFFFFFFFFFFFF8;
    if (v150 == v146)
      goto LABEL_148;
  }
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  __break(1u);
LABEL_235:
  __break(1u);
LABEL_236:
  __break(1u);
LABEL_237:
  __break(1u);
LABEL_238:
  __break(1u);
LABEL_239:
  __break(1u);
LABEL_240:
  __break(1u);
LABEL_241:
  __break(1u);
LABEL_242:
  __break(1u);
LABEL_243:
  v256 = 1092;
  v260 = 49;
  v258 = "UnsafeMutablePointer.initialize overlapping range";
LABEL_244:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, v258, v260, 2, "Swift/UnsafePointer.swift", 25, 2, v256, 0);
}

uint64_t sub_100BD94C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1064);
  *(_QWORD *)(*(_QWORD *)v1 + 1072) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100BD962C;
  else
    v3 = sub_100BD9524;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BD9524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 1056);
  v2 = *(_QWORD *)(v0 + 1048);
  v3 = *(_QWORD *)(v0 + 1032);
  v4 = *(_QWORD *)(v0 + 1024);
  v5 = *(_QWORD *)(v0 + 1016);
  v6 = (void *)static OS_os_log.crlSendACopy;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 1040), v0 + 160);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v6;
  v9 = UUID.uuidString.getter(v8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v12, "Successfully saved all chunks for %{public}@", 44, 2, inited);
  swift_release(v3);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v1);

  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD962C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 1032));
  v1 = *(_QWORD *)(v0 + 1016);
  swift_task_dealloc(*(_QWORD *)(v0 + 1024));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD9674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v8[39] = v12;
  v8[40] = v13;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)[1]);
  v8[41] = v10;
  *v10 = v8;
  v10[1] = sub_100BD96E8;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(a8, _swiftEmptyArrayStorage, 0, 1);
}

uint64_t sub_100BD96E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v3 + 328);
  v5 = *v3;
  *(_QWORD *)(v5 + 336) = a1;
  *(_QWORD *)(v5 + 344) = a2;
  swift_task_dealloc(v4);
  if (v2)
    return (*(uint64_t (**)(void))(v5 + 8))();
  else
    return swift_task_switch(sub_100BD975C, 0, 0);
}

uint64_t sub_100BD975C()
{
  _QWORD *v0;
  int64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t (*v32)(__n128);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  id v53;

  v1 = 0;
  v2 = v0 + 2;
  v3 = v0[42];
  v4 = v3 + 64;
  v5 = v0 + 30;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 64);
  v9 = (unint64_t)(63 - v6) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v1 << 6);
LABEL_6:
    v12 = *(_QWORD *)(v3 + 56) + 16 * v11;
    if (*(_BYTE *)(v12 + 8) == 1)
    {
      v16 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v11);
      v2 = *(void **)v12;
      sub_10059BC74(*(void **)v12, 1);
      sub_10059BC74(v2, 1);
      v5 = v16;
      swift_bridgeObjectRelease();
      if (qword_1013DD778 != -1)
        goto LABEL_30;
      goto LABEL_23;
    }
  }
  v13 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v1;
  if (v14)
    goto LABEL_21;
  v1 = v13 + 1;
  if (v13 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v4 + 8 * v1);
  if (v14)
    goto LABEL_21;
  v1 = v13 + 2;
  if (v13 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v4 + 8 * v1);
  if (v14)
  {
LABEL_21:
    v8 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v1 << 6);
    goto LABEL_6;
  }
  v15 = v13 + 3;
  if (v15 < v9)
  {
    v14 = *(_QWORD *)(v4 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v1 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v1 >= v9)
          goto LABEL_24;
        v14 = *(_QWORD *)(v4 + 8 * v1);
        ++v15;
        if (v14)
          goto LABEL_21;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      swift_once(&qword_1013DD778, sub_100A02BF8);
LABEL_23:
      v17 = v0[42];
      swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 33, 0, 0);
      v18 = (void *)static OS_os_log.crlSendACopy;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v0 + 21);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v21 = v18;
      v22 = objc_msgSend(v5, "description");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v24 = v23;
      v26 = v25;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      v27 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v27;
      *(_QWORD *)(inited + 32) = v24;
      *(_QWORD *)(inited + 40) = v26;
      v28 = static os_log_type_t.error.getter(v27);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v28, "Encountered error while saving record with id %{public}@", 56, 2, inited);
      swift_setDeallocating(inited);
      v29 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v29);

      swift_willThrow(v30);
      sub_1004E1E08(v2, 1);
      v31 = swift_release(v17);
      v32 = (uint64_t (*)(__n128))v0[1];
      return v32(v31);
    }
    v1 = v15;
    goto LABEL_21;
  }
LABEL_24:
  if (qword_1013DD778 != -1)
    goto LABEL_32;
  while (1)
  {
    v33 = v0[39];
    swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 30, 0, 0);
    v34 = (void *)static OS_os_log.crlSendACopy;
    v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v36 = swift_initStackObject(v35, v0 + 2);
    *(_OWORD *)(v36 + 16) = xmmword_100EF5550;
    if (!__OFADD__(v33, 1))
      break;
    __break(1u);
LABEL_32:
    swift_once(&qword_1013DD778, sub_100A02BF8);
  }
  v37 = (_QWORD *)v36;
  v38 = v0[42];
  v39 = v0[40];
  v0[36] = v33 + 1;
  v53 = v34;
  v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v42 = v41;
  v37[7] = &type metadata for String;
  v43 = sub_1004CFC2C();
  v37[8] = v43;
  v37[4] = v40;
  v37[5] = v42;
  v0[37] = v39;
  v44 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v37[12] = &type metadata for String;
  v37[13] = v43;
  v37[9] = v44;
  v37[10] = v45;
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v38 + 16);
  swift_bridgeObjectRelease();
  v0[38] = v46;
  v47 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v37[17] = &type metadata for String;
  v37[18] = v43;
  v37[14] = v47;
  v37[15] = v48;
  v50 = static os_log_type_t.default.getter(v49);
  sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v50, "Successfully saved chunk %{public}@ of %{public}@, with %{public}@ records", 74, 2, (uint64_t)v37);
  swift_setDeallocating(v37);
  v51 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v37 + 4, 3, v51);

  v32 = (uint64_t (*)(__n128))v0[1];
  return v32(v31);
}

uint64_t sub_100BD9BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  if (a1)
  {
    ObjectType = swift_getObjectType(a1);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v3[10] = v6;
  v3[11] = v8;
  return swift_task_switch(sub_100BD9C3C, v6, v8);
}

uint64_t sub_100BD9C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = **(_QWORD **)(v0 + 72);
  v2 = sub_1004B804C(&qword_1013E0210);
  *(_QWORD *)(v0 + 96) = v2;
  if ((ThrowingTaskGroup.isEmpty.getter(v1, (char *)&type metadata for () + 8, v2, &protocol self-conformance witness table for Error) & 1) != 0)return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = sub_100DE6FA0(2, 18, 0, 0);
  *(_DWORD *)(v0 + 128) = v4;
  *(_QWORD *)(v0 + 104) = 0;
  if (!v4)
    return swift_taskGroup_wait_next_throwing(v0 + 133, **(_QWORD **)(v0 + 72), sub_100BD9DC0, v0 + 16);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
  *(_QWORD *)(v0 + 112) = v5;
  v6 = sub_1004B804C(&qword_1013E0208);
  *v5 = v0;
  v5[1] = sub_100BD9D54;
  return ThrowingTaskGroup.next(isolation:)(v0 + 132, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v6);
}

uint64_t sub_100BD9D54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 112));
  if (v0)
  {
    *(_QWORD *)(v2 + 120) = v0;
    v3 = *(_QWORD *)(v2 + 80);
    v4 = *(_QWORD *)(v2 + 88);
    v5 = sub_100BD9FF0;
  }
  else
  {
    *(_BYTE *)(v2 + 134) = *(_BYTE *)(v2 + 132);
    v3 = *(_QWORD *)(v2 + 80);
    v4 = *(_QWORD *)(v2 + 88);
    v5 = sub_100BD9DF0;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100BD9DC0()
{
  uint64_t v0;
  uint64_t v1;

  if (v0)
  {
    *(_QWORD *)(v1 + 120) = v0;
    return swift_task_switch(sub_100BD9FF0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  }
  else
  {
    *(_BYTE *)(v1 + 135) = *(_BYTE *)(v1 + 133);
    return swift_task_switch(sub_100BD9EF0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  }
}

uint64_t sub_100BD9DF0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  _QWORD *v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 134) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 96), &protocol self-conformance witness table for Error) & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing(v0 + 133, **(_QWORD **)(v0 + 72), sub_100BD9DC0, v0 + 16);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 112) = v4;
    v5 = sub_1004B804C(&qword_1013E0208);
    *v4 = v0;
    v4[1] = sub_100BD9D54;
    return ThrowingTaskGroup.next(isolation:)(v0 + 132, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v5);
  }
  if (v1)
    swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD9EF0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  _QWORD *v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 135) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 96), &protocol self-conformance witness table for Error) & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing(v0 + 133, **(_QWORD **)(v0 + 72), sub_100BD9DC0, v0 + 16);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 112) = v4;
    v5 = sub_1004B804C(&qword_1013E0208);
    *v4 = v0;
    v4[1] = sub_100BD9D54;
    return ThrowingTaskGroup.next(isolation:)(v0 + 132, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v5);
  }
  if (v1)
    swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BD9FF0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 120);
  if (*(_QWORD *)(v0 + 104))
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    v1 = *(_QWORD *)(v0 + 104);
  }
  if ((ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 96), &protocol self-conformance witness table for Error) & 1) != 0)
  {
    if (v1)
      swift_willThrow(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v1;
    if (*(_DWORD *)(v0 + 128))
    {
      v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
      *(_QWORD *)(v0 + 112) = v4;
      v5 = sub_1004B804C(&qword_1013E0208);
      *v4 = v0;
      v4[1] = sub_100BD9D54;
      return ThrowingTaskGroup.next(isolation:)(v0 + 132, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v5);
    }
    else
    {
      return swift_taskGroup_wait_next_throwing(v0 + 133, **(_QWORD **)(v0 + 72), sub_100BD9DC0, v0 + 16);
    }
  }
}

id sub_100BDA100(uint64_t a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  Class v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  _BYTE v16[72];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = sub_10067AD38();
  v6 = v5;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = v7[1];
  if (*v7)
    v9 = 0;
  else
    v9 = v8 == 0xE000000000000000;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v7, v8, 0, 0xE000000000000000, 0) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_publicBoardZone(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLPublicCloudDataController.swift", 93, 2, 132, "Attempting to create public board identifier that has non-default owner %{public}@", 82, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"crl_publicBoardZone(for:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLPublicCloudDataController.swift", 93, 2u, 132, (uint64_t)"Attempting to create public board identifier that has non-default owner %{public}@", 82, 2u);
  }
  swift_bridgeObjectRelease();
  v10 = sub_100B4AD90(a1);
  v11 = -[objc_class zoneName](v10, "zoneName");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v12 = objc_allocWithZone((Class)CKRecordZone);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithZoneName:", v13, swift_bridgeObjectRelease().n128_f64[0]);

  return v14;
}

uint64_t sub_100BDA2C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc(dword_10140857C);
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_1004CF80C;
  return sub_100BD792C(a1, a2, v6, v7, v8, v9, v11, v10);
}

void sub_100BDA35C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100AC095C(*(void **)(v1 + 16), a1);
}

unint64_t sub_100BDA374()
{
  unint64_t result;

  result = qword_101408590;
  if (!qword_101408590)
  {
    result = swift_getWitnessTable(&unk_100F2BB88, &type metadata for CRLPublicCloudDataControllerError);
    atomic_store(result, (unint64_t *)&qword_101408590);
  }
  return result;
}

void sub_100BDA3B8(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100AC0ECC(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_100BDA3D0(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100AC1C50(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100BDA3E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100BDA42C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[8];
  v3 = v0[9];
  v4 = v0[10];
  v5 = (_QWORD *)swift_task_alloc(dword_1014085A4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  v5[39] = v3;
  v5[40] = v4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)[1]);
  v5[41] = v6;
  *v6 = v5;
  v6[1] = sub_100BD96E8;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(v2, _swiftEmptyArrayStorage, 0, 1);
}

uint64_t sub_100BDA4C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2[37] = a1;
  v2[38] = a2;
  v3 = type metadata accessor for UUID(0);
  v2[39] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[40] = v4;
  v2[41] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E0270) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[42] = swift_task_alloc(v5);
  v2[43] = swift_task_alloc(v5);
  return swift_task_switch(sub_100BDA55C, 0, 0);
}

uint64_t sub_100BDA55C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;

  v1 = sub_100BDA100(v0[37]);
  v0[44] = v1;
  v0[36] = _swiftEmptyArrayStorage;
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  v2 = v0[43];
  swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 25, 0, 0);
  v3 = (void *)static OS_os_log.crlSendACopy;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[45] = v4;
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v6 = v3;
  v7 = objc_msgSend(v1, "zoneID");
  sub_100B38068(v2);

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v0[46] = v8;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  v0[47] = v9;
  v10 = v9(v2, 1, v8);
  v11 = v0[43];
  if (v10 == 1)
  {
    sub_1004CB800(v0[43], &qword_1013E0270);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v14, v0[43], v16);
    v17 = sub_1004BBB8C(v11);
    v12 = UUID.uuidString.getter(v17);
    v13 = v18;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v0[33] = v12;
  v0[34] = v13;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  v0[48] = v19;
  v20._countAndFlagsBits = String.init<A>(describing:)(v0 + 33, v19);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v21 = sub_1004CFC2C();
  v0[49] = v21;
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 32) = 0;
  v22 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE000000000000000;
  v24 = static os_log_type_t.default.getter(v23);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v24, "Fetching zone in public database: %{public}@", 44, 2, inited);
  swift_setDeallocating(inited);
  v25 = *(_QWORD *)(inited + 16);
  v26 = sub_1004B804C(&qword_1013E0190);
  v0[50] = v26;
  swift_arrayDestroy(v22, v25, v26);

  v27 = objc_msgSend(v1, "zoneID");
  v0[51] = v27;
  v28 = (_QWORD *)swift_task_alloc(dword_1013EA32C);
  v0[52] = v28;
  *v28 = v0;
  v28[1] = sub_100BDA80C;
  return sub_100671160((uint64_t)v27, 1, 33);
}

uint64_t sub_100BDA80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 416);
  *(_QWORD *)(v4 + 424) = a1;
  *(_QWORD *)(v4 + 432) = a2;
  *(_QWORD *)(v4 + 440) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = *(void **)(v4 + 408);
    swift_bridgeObjectRelease();

    v7 = sub_100BDAD34;
  }
  else
  {

    v7 = sub_100BDA894;
  }
  return swift_task_switch(v7, 0, 0);
}

void sub_100BDA894()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  id v61;

  v1 = *(_QWORD *)(v0 + 424);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = (_QWORD *)(v0 + 288);
    swift_bridgeObjectRelease();
    v3 = 0;
    v4 = v1 + 64;
    v5 = -1;
    v6 = -1 << *(_BYTE *)(v1 + 32);
    if (-v6 < 64)
      v5 = ~(-1 << -(char)v6);
    v7 = v5 & *(_QWORD *)(v1 + 64);
    v8 = (unint64_t)(63 - v6) >> 6;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v3 << 6))
    {
      v14 = *(_QWORD *)(v1 + 56) + 16 * i;
      v15 = *(void **)v14;
      if ((*(_BYTE *)(v14 + 8) & 1) != 0)
        break;
      v16 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v18 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v17 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v18 >= v17 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
      specialized Array._endMutation()(v19);
      sub_1004E1E08(v15, 0);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v11 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      if (v11 >= v8)
        goto LABEL_28;
      v12 = *(_QWORD *)(v4 + 8 * v11);
      ++v3;
      if (!v12)
      {
        v3 = v11 + 1;
        if (v11 + 1 >= v8)
          goto LABEL_28;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 2;
          if (v11 + 2 >= v8)
            goto LABEL_28;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
          {
            v13 = v11 + 3;
            if (v13 >= v8)
            {
LABEL_28:
              v38 = *(_QWORD *)(v0 + 344);
              v39 = *(void **)(v0 + 352);
              v41 = *(_QWORD *)(v0 + 328);
              v40 = *(_QWORD *)(v0 + 336);
              swift_release(*(_QWORD *)(v0 + 424));

              v42 = *(_QWORD *)(v0 + 288);
              swift_task_dealloc(v38);
              swift_task_dealloc(v40);
              swift_task_dealloc(v41);
              (*(void (**)(uint64_t))(v0 + 8))(v42);
              return;
            }
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v3 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_33;
                if (v3 >= v8)
                  goto LABEL_28;
                v12 = *(_QWORD *)(v4 + 8 * v3);
                ++v13;
                if (v12)
                  goto LABEL_19;
              }
            }
            v3 = v13;
          }
        }
      }
LABEL_19:
      v7 = (v12 - 1) & v12;
    }
    v24 = *(_QWORD *)(v0 + 392);
    v25 = *(_QWORD *)(v0 + 360);
    v59 = *(_QWORD *)(v0 + 368);
    v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
    v26 = *(void **)(v0 + 352);
    v27 = *(_QWORD *)(v0 + 336);
    swift_errorRetain(v15);
    swift_bridgeObjectRelease();
    v28 = (void *)static OS_os_log.crlSendACopy;
    inited = swift_initStackObject(v25, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v15, v0 + 280, v0 + 224);
    v30 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    sub_10059BC74(v15, 1);
    v61 = v28;
    *(_QWORD *)(inited + 32) = Error.publicDescription.getter(v30, v31);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v24;
    *(_QWORD *)(inited + 40) = v32;
    v33 = objc_msgSend(v26, "zoneID");
    sub_100B38068(v27);

    v34 = v60(v27, 1, v59);
    v35 = *(_QWORD *)(v0 + 336);
    if (v34 == 1)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 336), &qword_1013E0270);
      v36 = 0;
      v37 = 0;
    }
    else
    {
      v44 = *(_QWORD *)(v0 + 320);
      v43 = *(_QWORD *)(v0 + 328);
      v45 = *(_QWORD *)(v0 + 312);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 16))(v43, *(_QWORD *)(v0 + 336), v45);
      v46 = sub_1004BBB8C(v35);
      v36 = UUID.uuidString.getter(v46);
      v37 = v47;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    }
    v48 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 392);
    v49 = *(_QWORD *)(v0 + 400);
    v51 = *(_QWORD *)(v0 + 384);
    v52 = *(void **)(v0 + 352);
    *(_QWORD *)(v0 + 248) = v36;
    *(_QWORD *)(v0 + 256) = v37;
    v53._countAndFlagsBits = String.init<A>(describing:)(v0 + 248, v51);
    String.append(_:)(v53);
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v50;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0xE000000000000000;
    v55 = static os_log_type_t.error.getter(v54);
    sub_100A06EBC((uint64_t)v61, &_mh_execute_header, v55, "Caught error when fetching records from public database: %{public}@ for %{public}@", 82, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v49);

    swift_willThrow(v56);
    sub_1004E1E08(v15, 1);
    swift_release(v48);
  }
  else
  {
    v20 = *(void **)(v0 + 352);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = sub_100BDA374();
    swift_allocError(&type metadata for CRLPublicCloudDataControllerError, v21, 0, 0);
    *v22 = 0;
    swift_willThrow(v23);

  }
  v57 = *(_QWORD *)(v0 + 336);
  v58 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_100BDAD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t storeEnumTagSinglePayload for CRLPublicCloudDataControllerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100BDADD8 + 4 * byte_100F2BAC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100BDAE0C + 4 * asc_100F2BAC0[v4]))();
}

uint64_t sub_100BDAE0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BDAE14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BDAE1CLL);
  return result;
}

uint64_t sub_100BDAE28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BDAE30);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100BDAE34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BDAE3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPublicCloudDataControllerError()
{
  return &type metadata for CRLPublicCloudDataControllerError;
}

void destroy for CRLPublicCloudDataController(uint64_t a1)
{

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t initializeWithCopy for CRLPublicCloudDataController(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  __int128 v8;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v8;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_unknownObjectRetain(v8);
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for CRLPublicCloudDataController(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)(a1 + 16) = v8;
  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for CRLPublicCloudDataController(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease(v4);
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CRLPublicCloudDataController()
{
  return &type metadata for CRLPublicCloudDataController;
}

unint64_t sub_100BDAFB0()
{
  unint64_t result;

  result = qword_1014085C0;
  if (!qword_1014085C0)
  {
    result = swift_getWitnessTable(&unk_100F2BB60, &type metadata for CRLPublicCloudDataControllerError);
    atomic_store(result, (unint64_t *)&qword_1014085C0);
  }
  return result;
}

id sub_100BDB014(_QWORD *a1, uint64_t a2, SEL *a3)
{
  uint64_t (*v4)(void);
  _QWORD *v5;
  void *v6;
  id v7;

  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0);
  v5 = a1;
  v6 = (void *)v4();
  v7 = objc_msgSend(v6, *a3);

  return v7;
}

void sub_100BDB078()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  char *Strong;
  char *v5;
  id v6;
  uint64_t v7;
  unsigned __int8 v8[40];

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, &v7, 0, 0);
  v1 = (id)static OS_os_log.shareState;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "traitCollection");
    sub_1005221A4(v6, (int)objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v8);
    sub_100522548(v8, 0);
    sub_1004DB520((uint64_t)v8);

  }
}

uint64_t CRLGelatoInterstitialUIController.isBoardShared.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F2BBD0);
  v2 = swift_getKeyPath(&unk_100F2BBF8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100BDB204(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F2BBD0);
  v5 = swift_getKeyPath(&unk_100F2BBF8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100BDB284(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2BBD0);
  v5 = swift_getKeyPath(&unk_100F2BBF8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t CRLGelatoInterstitialUIController.isBoardShared.setter(char a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_100F2BBD0);
  v4 = swift_getKeyPath(&unk_100F2BBF8);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*CRLGelatoInterstitialUIController.isBoardShared.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(byte_100F2BBD0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(byte_100F2BBF8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1006E07D8;
}

uint64_t CRLGelatoInterstitialUIController.$isBoardShared.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared, v3, 33, 0);
  v1 = sub_1004B804C(&qword_10140B9D0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t CRLGelatoInterstitialUIController.$isBoardShared.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_1004B804C(&qword_10140B9B0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared, v11, 33, 0);
  v8 = sub_1004B804C(&qword_10140B9D0);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*CRLGelatoInterstitialUIController.$isBoardShared.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1004B804C(&qword_10140B9B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_1004B804C(&qword_10140B9D0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1006E0A34;
}

char *sub_100BDB5D0(char *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  char *v22;
  void *v23;
  char *v24;
  char *v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void *v33;
  objc_class *ObjectType;
  objc_super v35;
  char v36;
  _BYTE v37[24];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = sub_1004B804C(&qword_10140B9D0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v1[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController], 0);
  v9 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary] = 0;
  v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown] = 0;
  v10 = &v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared];
  v37[0] = 0;
  v11 = v2;
  Published.init(initialValue:)(v37, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem] = 0;
  swift_unknownObjectWeakAssign(v8, a1);
  v12 = *(void **)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v13 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board] = v12;
  v33 = a1;
  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  v15 = *(void **)&v2[v9];
  *(_QWORD *)&v2[v9] = Strong;
  v16 = v12;

  LOBYTE(v15) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v11[v13] + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16) != 0;
  swift_beginAccess(v10, v37, 33, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v36 = (char)v15;
  Published.init(initialValue:)(&v36, &type metadata for Bool);
  swift_endAccess(v37);

  v35.receiver = v11;
  v35.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v35, "init");
  v18 = swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    v21 = v17;
    v22 = v20;

    v23 = *(void **)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers];
    v24 = v21;
    if ((objc_msgSend(v23, "containsObject:", v24) & 1) == 0)
      objc_msgSend(v23, "addObject:", v24);

  }
  else
  {
    v25 = v17;
  }
  v26 = v33;

  v27 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v28 = qword_1013DDAF8;
  v29 = v17;
  if (v28 != -1)
    swift_once(&qword_1013DDAF8, sub_100B11768);
  objc_msgSend(v27, "addObserver:selector:name:object:", v29, "newParticipantJoinedSessionWithNotification:", qword_101480B08, 0);

  v30 = qword_1013DCB80;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_1013DCB80, sub_1006386D8);
  objc_msgSend(v27, "addObserver:selector:name:object:", v31, "realTimeSessionParticipantsChangedWithNotification:", qword_10147ECE8, 0);

  return v31;
}

id sub_100BDB948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void **v40;
  void *v41;
  id v42;
  UIAccessibilityTraits v43;
  id v44;
  unint64_t v45;
  UIAccessibilityTraits v46;
  id v48;
  void *v49;
  char *v50;
  id v51;
  _QWORD v52[3];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v55, 0, 0);
  v11 = (id)static OS_os_log.shareState;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Making a collaboration button. Checking for an existing share.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

  v14 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary);
  if (!v14)
    return 0;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController);
  if (!Strong)
    return 0;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board);
  v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  v49 = (void *)Strong;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v54, 0, 0);
  sub_1004B8460(v19, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  v48 = v14;
  swift_retain(v18);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v21 = (uint64_t *)(*(_QWORD *)(v16 + v17) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  v50 = v10;
  sub_10067AFD0((uint64_t)v7, v22, v23, (uint64_t)v10);
  v24 = *(void **)(*(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
  type metadata accessor for CRLBoardShareItemProviderHelper();
  v25 = *(_QWORD *)(v16 + v17) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v25, v53, 0, 0);
  sub_1004B8460(v25, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  v51 = v24;
  v26 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v26);
  v27 = v52[0];
  v28 = v52[1];
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  v29 = v48;
  v30 = sub_1009D993C(v24, (uint64_t)v48, (uint64_t)v10, v27, v28, 0, 0xF000000000000000);
  swift_bridgeObjectRelease(v28);
  v31 = objc_msgSend(objc_allocWithZone((Class)_SWCollaborationBarButtonItem), "initWithItemProvider:", v30);
  v32 = v49;
  objc_msgSend(v31, "setCloudSharingControllerDelegate:", v49);
  objc_msgSend(v31, "setShowManageButton:", 0);
  v33 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v38 = v37;

  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setManageButtonTitle:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v40 = (void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess(v40, v52, 1, 0);
  v41 = *v40;
  *v40 = v31;
  v42 = v31;

  v43 = UIAccessibilityTraitButton;
  v44 = v42;
  v45 = (unint64_t)objc_msgSend(v44, "accessibilityTraits");
  if ((v43 & ~v45) != 0)
    v46 = v43;
  else
    v46 = 0;
  objc_msgSend(v44, "setAccessibilityTraits:", v46 | v45);

  sub_1004B84A4((uint64_t)v50, type metadata accessor for CRLBoardIdentifier);
  return v31;
}

void sub_100BDBE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  void **v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _BYTE v12[24];

  v1 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 67, "Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2u, 67, (uint64_t)"Should not call tearDown() twice.", 33, 2u);
  }
  *(_BYTE *)(v0 + v1) = 1;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers];
    if (objc_msgSend(v5, "containsObject:", v0))
      objc_msgSend(v5, "removeObject:", v0);

  }
  v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v6, "removeObserver:", v0);

  v7 = (void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem, v12, 0, 0);
  v8 = *v7;
  if (*v7)
  {
    v9 = objc_allocWithZone((Class)UIView);
    v10 = v8;
    v11 = objc_msgSend(v9, "init");
    objc_msgSend(v10, "setDetailViewListContent:", v11);

  }
}

id CRLGelatoInterstitialUIController.__deallocating_deinit()
{
  _BYTE *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  if ((v0[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 83, "Deallocated without calling tearDown()!", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2u, 83, (uint64_t)"Deallocated without calling tearDown()!", 39, 2u);
  }
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100BDC288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE v24[72];
  _QWORD v25[3];
  _BYTE v26[24];

  v1 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board)
     + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v8, v26, 0, 0);
  sub_1004CB7BC(v8, (uint64_t)v7, (uint64_t *)&unk_101405E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
    return 0;
  }
  else
  {
    sub_1004B8460((uint64_t)v7, (uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_101405E90);
    v10 = *(_QWORD *)&v4[*(int *)(v1 + 24)];
    swift_retain(v10);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    KeyPath = swift_getKeyPath(&unk_100F2BD00);
    v12 = swift_getKeyPath(&unk_100F2BD28);
    static Published.subscript.getter(v25, v10, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    v13 = v25[0];
    if (v25[0] >> 62)
    {
      if (v25[0] < 0)
        v22 = v25[0];
      else
        v22 = v25[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25[0]);
      v9 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v9 = *(_QWORD *)((v25[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v13);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v25, 0, 0);
    v14 = (void *)static OS_os_log.shareState;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v24);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v9;
    v17 = v14;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "Found realTimeSessionInfo. Participant count is: %d", 51, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v20);
    swift_release(v10);

  }
  return v9;
}

double sub_100BDC55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  double result;
  char *v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  void **v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _BYTE v52[24];
  char v53[24];
  char v54[24];

  v1 = sub_1004B804C(&qword_101408628);
  __chkstk_darwin(v1);
  v50 = (uint64_t *)((char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1004B804C(&qword_1013E1C00);
  v4 = __chkstk_darwin(v3);
  v49 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - v6;
  v8 = (int *)type metadata accessor for CRLActiveParticipantDetailView(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController);
  if (Strong)
  {
    v20 = (char *)Strong;
    v48 = v3;
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v54, 0, 0);
    v21 = (id)static OS_os_log.shareState;
    v23 = static os_log_type_t.default.getter(v22);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "Updating participant list.", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

    v24 = *(_QWORD *)(v51 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v24, v53, 0, 0);
    sub_1004CB7BC(v24, (uint64_t)v17, (uint64_t *)&unk_101405E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
    {
      sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_101405E90);
      v25 = type metadata accessor for CRLCollaborationParticipantCollection(0);
      swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v26 = sub_1006431DC();
    }
    else
    {
      sub_1004B8460((uint64_t)v17, (uint64_t)v14, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_101405E90);
      v26 = *(_QWORD *)&v14[*(int *)(v11 + 24)];
      swift_retain(v26);
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    }
    v27 = *(void **)&v20[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    v28 = type metadata accessor for Tips.Status(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
    KeyPath = swift_getKeyPath(&unk_100F2BCD0);
    v30 = (uint64_t)v50;
    *v50 = KeyPath;
    v31 = sub_1004B804C(&qword_101408630);
    swift_storeEnumTagMultiPayload(v30, v31, 0);
    v32 = type metadata accessor for CRLEditingCoordinator(0);
    v33 = sub_1004B7878(&qword_101408638, type metadata accessor for CRLEditingCoordinator, (uint64_t)&unk_100F07858);
    v34 = v27;
    swift_retain(v26);
    v35 = v20;
    *v10 = ObservedObject.init(wrappedValue:)(v34, v32, v33);
    v10[1] = v36;
    v37 = type metadata accessor for CRLCollaborationParticipantCollection(0);
    v38 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
    v10[2] = ObservedObject.init(wrappedValue:)(v26, v37, v38);
    v10[3] = v39;
    v40 = (_QWORD *)((char *)v10 + v8[6]);
    v41 = v49;
    sub_1004CB7BC((uint64_t)v7, v49, &qword_1013E1C00);
    State.init(wrappedValue:)(v40, v41, v48);
    sub_1004CB800((uint64_t)v7, &qword_1013E1C00);
    sub_100BDDE28(v30, (uint64_t)v10 + v8[7]);
    v42 = (char *)v10 + v8[9];
    *((_QWORD *)v42 + 1) = &off_1012686E8;
    swift_unknownObjectWeakInit(v42, v35);

    v43 = (void **)(v51 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
    swift_beginAccess(v51 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem, v52, 32, 0);
    v44 = *v43;
    if (*v43)
    {
      swift_endAccess(v52);
      v45 = sub_1004B7878(&qword_101408640, type metadata accessor for CRLActiveParticipantDetailView, (uint64_t)&unk_100F381C0);
      v46 = v44;
      _SWCollaborationBarButtonItem.setDetailViewListContent<A>(_:)(v10, v8, v45);
      swift_release(v26);

      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLActiveParticipantDetailView);
    }
    else
    {
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLActiveParticipantDetailView);
      swift_endAccess(v52);

      *(_QWORD *)&result = swift_release(v26).n128_u64[0];
    }
  }
  return result;
}

id sub_100BDCA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  _QWORD v41[2];
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  void *v48;
  _BYTE v49[72];
  _BYTE v50[32];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary);
  if (v10)
  {
    v44 = v1;
    v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board);
    v12 = *(void **)(*(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
    v13 = qword_1013DD8C8;
    v43 = v10;
    v42 = v12;
    if (v13 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v50, 0, 0);
    v14 = (void *)static OS_os_log.shareState;
    v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v15, v49);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v48 = v12;
    v17 = v14;
    v18 = sub_1004B804C(&qword_101405618);
    v19 = Optional.debugDescription.getter(v18);
    v21 = v20;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(inited + 40) = v21;
    v23 = static os_log_type_t.default.getter(v22);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v23, "Creating new item provider with share:", 38, 2, inited);
    swift_setDeallocating(inited);
    v24 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v24);

    v41[1] = type metadata accessor for CRLBoardShareItemProviderHelper();
    v25 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v26 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v27 = v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v48, 0, 0);
    sub_1004B8460(v27, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v26);
    v28 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v28);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    swift_release(v26);
    v29 = (uint64_t *)(*(_QWORD *)(v11 + v25) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v30 = *v29;
    v31 = v29[1];
    swift_bridgeObjectRetain(v31);
    sub_10067AFD0((uint64_t)v6, v30, v31, (uint64_t)v9);
    v32 = *(_QWORD *)(v11 + v25) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v32, v47, 0, 0);
    sub_1004B8460(v32, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    v33 = sub_1004B804C(&qword_1013E1980);
    CRRegister.wrappedValue.getter(v33);
    v34 = v45;
    v35 = v46;
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
    v36 = v43;
    v37 = sub_1009D993C(v12, (uint64_t)v43, (uint64_t)v9, v34, v35, 0, 0xF000000000000000);

    swift_bridgeObjectRelease(v35);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v50, 0, 0);
    v38 = (id)static OS_os_log.shareState;
    v39 = static os_log_type_t.error.getter();
    sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v39, "Error creating share item provider: board library is expected.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  return v37;
}

void CRLGelatoInterstitialUIController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLGelatoInterstitialUIController", 42, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_100BDCFF8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType(v2);
  result = ObservableObject<>.objectWillChange.getter(ObjectType, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100BDD034()
{
  return type metadata accessor for CRLGelatoInterstitialUIController(0);
}

uint64_t type metadata accessor for CRLGelatoInterstitialUIController(uint64_t a1)
{
  uint64_t result;

  result = qword_101408618;
  if (!qword_101408618)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLGelatoInterstitialUIController);
  return result;
}

void sub_100BDD078(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_100F2BCA0;
  v4[3] = &unk_100F2BCB8;
  sub_10063BDBC();
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100F2BCA0;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_100BDD110(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t inited;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  __n128 v55;
  uint64_t v56;
  id v57;
  void *v58;
  id *v59;
  id v60;
  id v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  __n128 v71;
  uint64_t v72;
  id *v73;
  double v74;
  id v75;
  __n128 v76;
  uint64_t v77;
  uint64_t KeyPath;
  uint64_t v79;
  char *v80;
  id v81;
  __n128 v82;
  uint64_t v83;
  char *Strong;
  char *v85;
  id v86;
  id v87;
  __n128 v88;
  uint64_t v89;
  id *v90;
  double v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[24];
  char v132[72];
  char v133[24];
  unsigned __int8 v134[48];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v121 = *(_QWORD *)(v2 - 8);
  v122 = v2;
  __chkstk_darwin(v2);
  v113 = (uint64_t)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v114 = (uint64_t)&v112 - v5;
  __chkstk_darwin(v6);
  v115 = (uint64_t)&v112 - v7;
  v120 = sub_1004B804C(&qword_101408648);
  __chkstk_darwin(v120);
  v123 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v15);
  v116 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v125 = (uint64_t)&v112 - v18;
  __chkstk_darwin(v19);
  v124 = (uint64_t)&v112 - v20;
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v133, 0, 0);
  v21 = (void *)static OS_os_log.shareState;
  v117 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v117, v132);
  v118 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)v134 = a1;
  v23 = v21;
  v24 = sub_1004B804C(&qword_101405618);
  v25 = Optional.debugDescription.getter(v24);
  v27 = v26;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(inited + 40) = v27;
  v29 = static os_log_type_t.default.getter(v28);
  sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v29, "Interstitial UI controller notified of updated share: %@", 56, 2, inited);
  swift_setDeallocating(inited);
  v119 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v119);

  if (!a1)
  {
    v75 = (id)static OS_os_log.shareState;
    v77 = static os_log_type_t.default.getter(v76);
    sub_100A06EBC((uint64_t)v75, &_mh_execute_header, v77, "Nil share was found. Removing SWCollaborationView.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);

    KeyPath = swift_getKeyPath(byte_100F2BBD0);
    v79 = swift_getKeyPath(byte_100F2BBF8);
    v134[0] = 0;
    v80 = v126;
    static Published.subscript.setter(v134, v80, KeyPath, v79);
    v81 = (id)static OS_os_log.shareState;
    v83 = static os_log_type_t.default.getter(v82);
    sub_100A06EBC((uint64_t)v81, &_mh_execute_header, v83, "Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    Strong = (char *)swift_unknownObjectWeakLoadStrong(&v80[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
    if (Strong)
    {
      v85 = Strong;
      v86 = objc_msgSend(Strong, "traitCollection");
      sub_1005221A4(v86, (int)objc_msgSend(*(id *)&v85[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v134);
      sub_100522548(v134, 0);
      sub_1004DB520((uint64_t)v134);

    }
    v87 = (id)static OS_os_log.shareState;
    v89 = static os_log_type_t.default.getter(v88);
    sub_100A06EBC((uint64_t)v87, &_mh_execute_header, v89, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    v90 = (id *)&v80[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    *(_QWORD *)&v91 = swift_beginAccess(&v80[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], v131, 0, 0).n128_u64[0];
    if (*v90)
      objc_msgSend(*v90, "dismissPopoverAnimated:completion:", 1, 0, v91);
    v92 = sub_100BDC288();
    v93 = (void *)static OS_os_log.shareState;
    v94 = swift_initStackObject(v117, &v130);
    *(_OWORD *)(v94 + 16) = v118;
    *(_QWORD *)(v94 + 56) = &type metadata for Int;
    *(_QWORD *)(v94 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v94 + 32) = v92;
    v95 = v93;
    v97 = static os_log_type_t.default.getter(v96);
    sub_100A06EBC((uint64_t)v95, &_mh_execute_header, v97, "Updating active participant count to: %d.", 41, 2, v94);
    swift_setDeallocating(v94);
    swift_arrayDestroy(v94 + 32, 1, v119);

    if (*v90)
      objc_msgSend(*v90, "setActiveParticipantCount:", v92);
    goto LABEL_32;
  }
  v30 = a1;
  v31 = objc_msgSend(v30, "recordID");
  v32 = objc_msgSend(v31, "zoneID");

  v33 = v124;
  sub_100B38068(v124);

  v34 = *(_QWORD *)&v126[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board];
  v35 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v37 = v36 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v36 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v131, 0, 0);
  sub_1004B8460(v37, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v36);
  v38 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v38);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_release(v36);
  v39 = (uint64_t *)(*(_QWORD *)(v34 + v35) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v40 = *v39;
  v41 = v39[1];
  swift_bridgeObjectRetain(v41);
  v42 = v125;
  sub_10067AFD0((uint64_t)v14, v40, v41, v125);
  v43 = v121;
  v44 = v122;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v42, 0, 1, v122);
  v45 = v123;
  v46 = v123 + *(int *)(v120 + 48);
  sub_1004CB7BC(v33, v123, &qword_1013E0270);
  sub_1004CB7BC(v42, v46, &qword_1013E0270);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v47(v45, 1, v44) != 1)
  {
    v98 = v116;
    sub_1004CB7BC(v45, v116, &qword_1013E0270);
    if (v47(v46, 1, v44) == 1)
    {
      v99 = &qword_101408648;
    }
    else
    {
      v100 = v115;
      sub_1004DB5FC(v46, v115);
      v101 = static UUID.== infix(_:_:)(v98);
      v102 = v114;
      sub_1004B8460(v98, v114, type metadata accessor for CRLBoardIdentifier);
      v103 = v113;
      sub_1004B8460(v100, v113, type metadata accessor for CRLBoardIdentifier);
      if ((v101 & 1) != 0)
      {
        v104 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v105 = *(_QWORD *)(v102 + v104);
        v106 = *(_QWORD *)(v102 + v104 + 8);
        v107 = (_QWORD *)(v103 + v104);
        v108 = v107[1];
        if (v105 == *v107 && v106 == v108)
        {
          sub_1004B84A4(v103, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v102, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v100, type metadata accessor for CRLBoardIdentifier);
          sub_1004CB800(v125, &qword_1013E0270);
          sub_1004CB800(v124, &qword_1013E0270);
          sub_1004B84A4(v98, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_6;
        }
        v111 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v106, *v107, v108, 0);
        sub_1004B84A4(v103, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v102, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v100, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v125, &qword_1013E0270);
        sub_1004CB800(v124, &qword_1013E0270);
        sub_1004B84A4(v98, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v45, &qword_1013E0270);
        if ((v111 & 1) != 0)
          goto LABEL_7;
        goto LABEL_31;
      }
      sub_1004B84A4(v103, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v102, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v100, type metadata accessor for CRLBoardIdentifier);
      v99 = &qword_1013E0270;
      v33 = v124;
    }
    sub_1004CB800(v125, &qword_1013E0270);
    sub_1004CB800(v33, &qword_1013E0270);
    sub_1004B84A4(v98, type metadata accessor for CRLBoardIdentifier);
LABEL_30:
    sub_1004CB800(v45, v99);
LABEL_31:

LABEL_32:
    v30 = (id)static OS_os_log.shareState;
    v110 = static os_log_type_t.default.getter(v109);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v110, "No appropriate actions necessary for this updated share.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_33;
  }
  sub_1004CB800(v42, &qword_1013E0270);
  sub_1004CB800(v33, &qword_1013E0270);
  if (v47(v46, 1, v44) != 1)
  {
    v99 = &qword_101408648;
    goto LABEL_30;
  }
LABEL_6:
  sub_1004CB800(v45, &qword_1013E0270);
LABEL_7:
  v48 = (id)static OS_os_log.shareState;
  v50 = static os_log_type_t.default.getter(v49);
  sub_100A06EBC((uint64_t)v48, &_mh_execute_header, v50, "Share state changed.", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

  v51 = swift_getKeyPath(byte_100F2BBD0);
  v52 = swift_getKeyPath(byte_100F2BBF8);
  v134[0] = 1;
  v53 = v126;
  static Published.subscript.setter(v134, v53, v51, v52);
  v54 = (id)static OS_os_log.shareState;
  v56 = static os_log_type_t.default.getter(v55);
  sub_100A06EBC((uint64_t)v54, &_mh_execute_header, v56, "Updating collaboration button with new item provider.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

  v57 = sub_100BDCA78();
  if (v57)
  {
    v58 = v57;
    v59 = (id *)&v53[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess(&v53[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v127, 0, 0);
    if (*v59)
    {
      v60 = *v59;
      objc_msgSend(v60, "setItemProvider:", v58);

    }
  }
  v61 = (id)static OS_os_log.shareState;
  v63 = static os_log_type_t.default.getter(v62);
  sub_100A06EBC((uint64_t)v61, &_mh_execute_header, v63, "Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  v64 = (char *)swift_unknownObjectWeakLoadStrong(&v53[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
  if (v64)
  {
    v65 = v64;
    v66 = objc_msgSend(v64, "traitCollection");
    sub_1005221A4(v66, (int)objc_msgSend(*(id *)&v65[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v134);
    sub_100522548(v134, 0);
    sub_1004DB520((uint64_t)v134);

  }
  sub_100BDC55C();
  v67 = sub_100BDC288();
  v68 = (void *)static OS_os_log.shareState;
  v69 = swift_initStackObject(v117, &v129);
  *(_OWORD *)(v69 + 16) = v118;
  *(_QWORD *)(v69 + 56) = &type metadata for Int;
  *(_QWORD *)(v69 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v69 + 32) = v67;
  v70 = v68;
  v72 = static os_log_type_t.default.getter(v71);
  sub_100A06EBC((uint64_t)v70, &_mh_execute_header, v72, "Updating active participant count to: %d.", 41, 2, v69);
  swift_setDeallocating(v69);
  swift_arrayDestroy(v69 + 32, 1, v119);

  v73 = (id *)&v53[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
  *(_QWORD *)&v74 = swift_beginAccess(v73, &v128, 0, 0).n128_u64[0];
  if (*v73)
    objc_msgSend(*v73, "setActiveParticipantCount:", v67, v74);
LABEL_33:

}

void sub_100BDDDB4(char *a1, uint64_t a2, char a3)
{
  uint64_t Strong;
  char *v6;
  char *v7;

  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
  if (Strong)
  {
    v7 = (char *)Strong;
    v6 = a1;
    sub_100BDE338(a3 & 1, v7);

  }
}

uint64_t sub_100BDDE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101408628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100BDDE70()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  double v13;
  id result;
  _BYTE v15[24];
  _BYTE v16[72];
  _BYTE v17[24];

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v17, 0, 0);
  v1 = (id)static OS_os_log.shareState;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Notified of CRLBoardRealTimeNewParticipantDidJoinSession.", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100BDC55C();
  v4 = sub_100BDC288();
  v5 = (void *)static OS_os_log.shareState;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v4;
  v8 = v5;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  *(_QWORD *)&v13 = swift_beginAccess(v12, v15, 0, 0).n128_u64[0];
  result = *v12;
  if (*v12)
    return objc_msgSend(result, "setActiveParticipantCount:", v4, v13);
  return result;
}

id sub_100BDE008()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  double v13;
  id result;
  _BYTE v15[24];
  _BYTE v16[72];
  _BYTE v17[24];

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v17, 0, 0);
  v1 = (id)static OS_os_log.shareState;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Notified of participant change.", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100BDC55C();
  v4 = sub_100BDC288();
  v5 = (void *)static OS_os_log.shareState;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v4;
  v8 = v5;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  *(_QWORD *)&v13 = swift_beginAccess(v12, v15, 0, 0).n128_u64[0];
  result = *v12;
  if (*v12)
    return objc_msgSend(result, "setActiveParticipantCount:", v4, v13);
  return result;
}

id sub_100BDE1A0()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  double v13;
  id result;
  _BYTE v15[24];
  _BYTE v16[72];
  _BYTE v17[24];

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v17, 0, 0);
  v1 = (id)static OS_os_log.shareState;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Notified of CRLBoardRealTimeStateDidChange.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100BDC55C();
  v4 = sub_100BDC288();
  v5 = (void *)static OS_os_log.shareState;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v4;
  v8 = v5;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  *(_QWORD *)&v13 = swift_beginAccess(v12, v15, 0, 0).n128_u64[0];
  result = *v12;
  if (*v12)
    return objc_msgSend(result, "setActiveParticipantCount:", v4, v13);
  return result;
}

void sub_100BDE338(char a1, char *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  id v40;

  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                                        + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v4
    || (v5 = objc_msgSend(v4, "owner"),
        v6 = sub_1009B32A4(0),
        v8 = v7,
        v5,
        !v8))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"showAlertForEditPermissionChange(toReadOnly:boardViewController:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 272, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showAlertForEditPermissionChange(toReadOnly:boardViewController:)", 65, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2u, 272, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v39 = a1;
  if ((a1 & 1) != 0)
  {
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;
    v17 = v16;

  }
  else
  {
    v22 = String._bridgeToObjectiveC()();
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v10, "localizedStringForKey:value:table:", v22, v23, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v15 = v25;
    v17 = v26;

  }
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v19 + 32) = v6;
  *(_QWORD *)(v19 + 40) = v8;
  String.init(format:_:)(v15, v17, v19);
  v20 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease().n128_f64[0]);
  v21 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v29, v30, 1);

  v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, v33, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v35, 0, 0);

  objc_msgSend(v40, "addAction:", v36);
  sub_100C1C7A0(v39 & 1);
  v37 = objc_msgSend(a2, "presentedViewController");
  if (v37)
  {
    v38 = v37;
    objc_msgSend(v37, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  objc_msgSend(a2, "presentViewController:animated:completion:", v40, 1, 0);
  sub_100CE39D8(v40);

}

uint64_t sub_100BDE918(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  unsigned int v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];

  v2 = v1;
  v4 = *v1;
  v37 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v37);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  v13 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v13);
  v38 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v37 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v37 - v19;
  v21 = *(_QWORD *)(v4 + 632);
  v22 = (uint64_t)v2 + v21;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v21, v39, 0, 0);
    sub_1004CB7BC(v22, (uint64_t)v17, (uint64_t *)&unk_1013F02C0);
    v23 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v13, v23);
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013F02C0);
    v24 = (uint64_t)v2 + qword_101480ED0;
    swift_beginAccess((char *)v2 + qword_101480ED0, v40, 0, 0);
    sub_1004B8460(v24, (uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    v25 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    CRStruct_3.copy(renamingReferences:)(0, v37, v25);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v21, v40, 0, 0);
    sub_1004CB7BC(v22, (uint64_t)v20, (uint64_t *)&unk_1013F02C0);
    v26 = (uint64_t)v2 + qword_101480ED0;
    swift_beginAccess((char *)v2 + qword_101480ED0, v39, 0, 0);
    sub_1004B8460(v26, (uint64_t)v12, type metadata accessor for CRLImageItemCRDTData);
  }
  sub_1004CB7BC((uint64_t)v20, v38, (uint64_t *)&unk_1013F02C0);
  sub_1004B8460((uint64_t)v12, (uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
  v28 = v2[4];
  v27 = v2[5];
  v31 = v2 + 2;
  v29 = v2[2];
  v30 = v31[1];
  v32 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_1004B8460((uint64_t)v6, v32 + qword_101480ED0, type metadata accessor for CRLImageItemCRDTData);
  v33 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v34 = objc_msgSend(v33, "BOOLForKey:", CFSTR("CRLNewImageItemsHaveGoodEnoughFidelityVersionSetAboveCurrentDefault"));

  if (v34 && (result = sub_1001E9730(), v28 = result + 1, result == -1))
  {
    __break(1u);
  }
  else
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    sub_1004C4938(v38, v32 + *(_QWORD *)(*(_QWORD *)v32 + 632), (uint64_t *)&unk_1013F02C0);
    v36 = sub_1005E1000(v30, v28, v27, v29);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLImageItemCRDTData);
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013F02C0);
    return (uint64_t)v36;
  }
  return result;
}

uint64_t sub_100BDECB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v17[24];
  _BYTE v18[24];
  uint64_t v19;

  v4 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v17[-v8];
  __chkstk_darwin(v10);
  v12 = &v17[-v11];
  swift_beginAccess(a1 + 32, v18, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v13 = v1 + qword_101480ED0;
    swift_beginAccess(v1 + qword_101480ED0, v17, 32, 0);
    v14 = sub_1004B804C(&qword_1013EBA40);
    CRRegister.wrappedValue.getter(v14);
    swift_endAccess(v17);
    sub_100BDF4B8((uint64_t)v12);
    v19 = v2;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess(v13, v17, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    CRRegister.wrappedValue.setter(v6, v14, v15);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess(v17);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLImageItemAssetData);
  }
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v17, 33, 0);
  sub_100D3D410(a1);
  return swift_endAccess(v17);
}

uint64_t sub_100BDEE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[232];
  _BYTE v47[240];

  v43 = a5;
  v41 = a4;
  v38 = a3;
  v35 = a1;
  v36 = a2;
  v7 = sub_1004B804C(&qword_1013F8AC8);
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  __chkstk_darwin(v7);
  v42 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E0A88);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v37 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v31 - v18;
  v20 = (int *)type metadata accessor for CRLImageItemCRDTData(0);
  v34 = a6 + v20[5];
  sub_1004C39E8((uint64_t)v47);
  sub_1004C4938((uint64_t)v47, (uint64_t)v46, (uint64_t *)&unk_1013F1530);
  v21 = sub_1004B804C((uint64_t *)&unk_1013F1530);
  v33 = v21;
  v32 = sub_1004EF8D0();
  CRRegister.init(wrappedValue:)(v46, v21, v32);
  v31 = a6 + v20[6];
  v22 = type metadata accessor for CRLMaskInfoData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v16, &qword_1013F8AC0);
  v23 = sub_100BE27B0();
  CRRegister.init(wrappedValue:)(v16, v14, v23);
  sub_1004CB800((uint64_t)v19, &qword_1013F8AC0);
  *(_QWORD *)(a6 + v20[7]) = _swiftEmptyDictionarySingleton;
  v24 = v35;
  sub_1004B8460(v35, (uint64_t)v13, type metadata accessor for CRLAssetData);
  v25 = v36;
  sub_1004CB7BC(v36, (uint64_t)&v13[v11[5]], (uint64_t *)&unk_1013E9BE0);
  *(_QWORD *)&v13[v11[6]] = v38;
  v13[v11[7]] = 2;
  *(_QWORD *)&v13[v11[8]] = _swiftEmptyDictionarySingleton;
  v26 = sub_1004B7878(&qword_1014089C0, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C338);
  CRRegister.init(_:)(v13, v11, v26);
  sub_1004C4938(v41, (uint64_t)v46, (uint64_t *)&unk_1013F1530);
  v27 = v37;
  CRRegister.init(_:)(v46, v33, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 40))(v34, v27, v40);
  v28 = v43;
  sub_1004CB7BC(v43, (uint64_t)v19, &qword_1013F8AC0);
  v29 = v42;
  CRRegister.init(_:)(v19, v14, v23);
  sub_1004CB800(v28, &qword_1013F8AC0);
  sub_1004CB800(v25, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v24, type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 40))(v31, v29, v45);
}

uint64_t sub_100BDF218(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100BDF250 + 4 * byte_100F2BD50[a1]))(0x7461446567616D69, 0xE900000000000061);
}

uint64_t sub_100BDF250()
{
  return 0x69616E626D756874;
}

uint64_t sub_100BDF274()
{
  return 0x6150646563617274;
}

unint64_t sub_100BDF290()
{
  return 0xD000000000000013;
}

unint64_t sub_100BDF2B0()
{
  return 0xD000000000000010;
}

BOOL sub_100BDF2CC(char *a1, char *a2)
{
  return qword_100F2C490[*a1] == qword_100F2C490[*a2];
}

Swift::Int sub_100BDF2F0()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F2C490[v1]);
  return Hasher._finalize()();
}

void sub_100BDF33C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F2C490[*v0]);
}

Swift::Int sub_100BDF370(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F2C490[v2]);
  return Hasher._finalize()();
}

void sub_100BDF3B8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F2C490[*v1];
}

uint64_t sub_100BDF3D0()
{
  unsigned __int8 *v0;

  return sub_100BDF218(*v0);
}

uint64_t sub_100BDF3D8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BE46D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BDF3FC()
{
  char *v0;

  return qword_100F2C490[*v0];
}

void sub_100BDF414(_QWORD *a1@<X8>)
{
  *a1 = &off_101264010;
}

uint64_t sub_100BDF424(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100BE3500();
  v5 = sub_100BE3548();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100BDF468(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BE3548();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BDF490(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BE3548();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100BDF4B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, __n128);
  __n128 v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v51 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v48 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - v6;
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLAssetData(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v46 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  sub_1008FD5D8(v1, (uint64_t)v13);
  v45 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v45(v19, v13, v10);
  v20 = *(int *)(v14 + 20);
  v22 = *(_QWORD *)(v1 + v20);
  v21 = *(_QWORD *)(v1 + v20 + 8);
  v23 = *(_QWORD *)(v1 + *(int *)(v14 + 24));
  v24 = &v19[v20];
  *(_QWORD *)v24 = v22;
  *((_QWORD *)v24 + 1) = v21;
  *(_QWORD *)&v19[*(int *)(v14 + 24)] = v23;
  v25 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  swift_bridgeObjectRetain(v21);
  v26 = swift_bridgeObjectRetain(v23);
  v47 = v10;
  v25(v13, v10, v26);
  v27 = (int *)type metadata accessor for CRLImageItemAssetData(0);
  sub_1004CB7BC(v1 + v27[5], (uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
  v49 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
    v28 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v14);
  }
  else
  {
    v29 = v46;
    sub_1004B84E0((uint64_t)v7, v46, type metadata accessor for CRLAssetData);
    sub_1008FD5D8(v29, (uint64_t)v13);
    v30 = v25;
    v32 = v47;
    v31 = (uint64_t)v48;
    v45(v48, v13, v47);
    v33 = *(int *)(v14 + 20);
    v35 = *(_QWORD *)(v29 + v33);
    v34 = *(_QWORD *)(v29 + v33 + 8);
    v36 = *(_QWORD *)(v29 + *(int *)(v14 + 24));
    v37 = (_QWORD *)(v31 + v33);
    *v37 = v35;
    v37[1] = v34;
    *(_QWORD *)(v31 + *(int *)(v14 + 24)) = v36;
    swift_bridgeObjectRetain(v34);
    v38 = swift_bridgeObjectRetain(v36);
    v30(v13, v32, v38);
    sub_1004B84A4(v29, type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v31, 0, 1, v14);
    v28 = v50;
    sub_1004C4938(v31, v50, (uint64_t *)&unk_1013E9BE0);
  }
  v39 = *(_QWORD *)(v2 + v27[6]);
  v40 = *(_BYTE *)(v2 + v27[7]);
  v41 = *(_QWORD *)(v2 + v27[8]);
  v42 = v51;
  sub_1004B84E0((uint64_t)v19, v51, type metadata accessor for CRLAssetData);
  sub_1004C4938(v28, v42 + v27[5], (uint64_t *)&unk_1013E9BE0);
  *(_QWORD *)(v42 + v27[6]) = v39;
  *(_BYTE *)(v42 + v27[7]) = v40;
  *(_QWORD *)(v42 + v27[8]) = v41;
  swift_bridgeObjectRetain(v39);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v41).n128_u64[0];
  return result;
}

uint64_t sub_100BDF810(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101408B58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100BE3548();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLImageItemAssetData.CodingKeys, &type metadata for CRLImageItemAssetData.CodingKeys, v11, v9, v10);
  LOBYTE(v23) = 0;
  v12 = type metadata accessor for CRLAssetData(0);
  v13 = sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v23, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLImageItemAssetData(0);
    v15 = v3 + v14[5];
    LOBYTE(v23) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v15, &v23, v5, v12, v13);
    v23 = *(_QWORD *)(v3 + v14[6]);
    v22 = 2;
    v16 = sub_100786A6C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v23, &v22, v5, &type metadata for CRLBezierPathData, v16);
    v17 = *(unsigned __int8 *)(v3 + v14[7]);
    LOBYTE(v23) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, &v23, v5);
    v23 = *(_QWORD *)(v3 + v14[8]);
    v22 = 4;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100BDFA38(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(__n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v39 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1004B804C(&qword_101408B50);
  v8 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for CRLImageItemAssetData(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(__n128))(v6 + 56);
  v47 = &v14[*(int *)(v15 + 20)];
  v16(v12);
  v44 = v11[6];
  *(_QWORD *)&v14[v44] = 0;
  v17 = v11[7];
  v14[v17] = 2;
  v18 = v11[8];
  v45 = a1;
  v46 = v18;
  *(_QWORD *)&v14[v18] = _swiftEmptyDictionarySingleton;
  v19 = a1[3];
  v20 = a1[4];
  sub_1004BB5A4(a1, v19);
  v21 = sub_100BE3548();
  v42 = v10;
  v22 = v48;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLImageItemAssetData.CodingKeys, &type metadata for CRLImageItemAssetData.CodingKeys, v21, v19, v20);
  if (v22)
  {
    v26 = (uint64_t)v47;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v45);
    sub_1004CB800(v26, (uint64_t *)&unk_1013E9BE0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = v17;
    v23 = (uint64_t)v40;
    LOBYTE(v50) = 0;
    v24 = sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
    v25 = (uint64_t)v41;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v5, &v50, v43, v5, v24);
    sub_1004B84E0(v25, (uint64_t)v14, type metadata accessor for CRLAssetData);
    LOBYTE(v50) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v5, &v50, v43, v5, v24);
    sub_1004F32C0(v23, (uint64_t)v47);
    v49 = 2;
    v27 = sub_1007869E4();
    v28 = v42;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLBezierPathData, &v49, v43, &type metadata for CRLBezierPathData, v27);
    v29 = v50;
    v30 = v44;
    v31 = swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v30] = v29;
    LOBYTE(v50) = 3;
    v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v50, v43, v31);
    v14[v48] = v32;
    v33 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v49 = 4;
    v34 = sub_1004F3130();
    v35 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v33, &v49, v43, v33, v34);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v35);
    v36 = v50;
    v37 = v46;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v37] = v36;
    sub_1004B8460((uint64_t)v14, v39, type metadata accessor for CRLImageItemAssetData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v45);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLImageItemAssetData);
  }
}

void sub_100BDFE68(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100BDFA38(a1, a2);
}

uint64_t sub_100BDFE7C(_QWORD *a1)
{
  return sub_100BDF810(a1);
}

uint64_t sub_100BDFE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101408B60, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C088);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BDFEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1014089C0, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C338);
  v7 = sub_1004B7878(&qword_101408B68, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C060);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100BDFF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101408B60, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C088);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100BDFFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101408B00, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BEE0);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100BE0030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101408B00, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BEE0);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100BE008C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101408B00, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BEE0);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100BE00DC()
{
  uint64_t result;

  qword_101480E88 = 97;
  unk_101480E90 = 0xE100000000000000;
  qword_101480E98 = swift_getKeyPath(&unk_100F2C380);
  unk_101480EA0 = 98;
  qword_101480EA8 = 0xE100000000000000;
  qword_101480EB0 = swift_getKeyPath(&unk_100F2C3A0);
  qword_101480EB8 = 99;
  qword_101480EC0 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F2C3C0);
  qword_101480EC8 = result;
  return result;
}

double sub_100BE0150@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1013DDD88 != -1)
    swift_once(&qword_1013DDD88, sub_100BE00DC);
  v2 = unk_101480E90;
  v4 = qword_101480E98;
  v3 = unk_101480EA0;
  v5 = qword_101480EA8;
  v6 = qword_101480EB0;
  v7 = qword_101480EB8;
  v8 = qword_101480EC0;
  v9 = qword_101480EC8;
  *a1 = qword_101480E88;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&result = swift_retain(v9).n128_u64[0];
  return result;
}

uint64_t sub_100BE01FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100BE023C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v17[232];
  _BYTE v18[232];

  v2 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004F2A1C(v12, (uint64_t)qword_101481278);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v13, v12);
  v14 = &v11[*(int *)(v8 + 20)];
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  *(_QWORD *)&v11[*(int *)(v8 + 24)] = _swiftEmptyDictionarySingleton;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  sub_1004C39E8((uint64_t)v18);
  sub_1004C4938((uint64_t)v18, (uint64_t)v17, (uint64_t *)&unk_1013F1530);
  v15 = type metadata accessor for CRLMaskInfoData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  return sub_100BDEE98((uint64_t)v11, (uint64_t)v7, 0, (uint64_t)v17, (uint64_t)v4, a1);
}

uint64_t sub_100BE0418(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F8B18, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C148);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100BE0458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100BE04B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_100BE0500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100BE0550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100BE05B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100BE0608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100BE0658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BE06B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100BE0718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100BE0768()
{
  sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100BE07A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100BE07F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_100BE0848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7490, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C1A8);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100BE08AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7490, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C1A8);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100BE0920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.init(from:)(a1, a2, v4);
}

uint64_t sub_100BE0984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.encode(to:)(a1, a2, v4);
}

uint64_t sub_100BE09E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100BE0A30()
{
  return 3;
}

uint64_t sub_100BE0A3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  __n128 v9;
  _BYTE v10[72];

  v1 = v0;
  v2 = *v0;
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = objc_msgSend(v3, "BOOLForKey:", CFSTR("CRLImageItemsUseUnsupportedMinVersionUserDefault"));

  if ((v4 & 1) != 0)
    return sub_1001E9788(999, 999, 0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v10);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v1[3];
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v8;
  if (sub_1001E9730() < v8)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242, "Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersion", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 242, (uint64_t)"Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u);
  }
  v9 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(__n128))(v2 + 104))(v9);
}

uint64_t sub_100BE0BC8()
{
  uint64_t v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  _BYTE v10[72];

  v1 = (void *)objc_opt_self(NSUserDefaults);
  v2 = objc_msgSend(v1, "standardUserDefaults");
  v3 = objc_msgSend(v2, "BOOLForKey:", CFSTR("CRLUnsupportedBoardItemsPropagatesToBoardUserDefault"));

  if ((v3 & 1) != 0)
    return 1;
  v4 = objc_msgSend(v1, "standardUserDefaults");
  v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("CRLImageItemsUseUnsupportedMinVersionUserDefault"));

  if ((v5 & 1) != 0)
    return 1;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v10);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v9 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(inited + 56) = &type metadata for UInt64;
  *(_QWORD *)(inited + 64) = &protocol witness table for UInt64;
  *(_QWORD *)(inited + 32) = v9;
  if (sub_1001E9730() < v9)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276, "Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2u, 276, (uint64_t)"Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u);
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100BE0D5C(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_1014086A0)
  {
    v6 = (uint64_t)a1 + qword_101480ED0;
    swift_beginAccess((char *)a1 + qword_101480ED0, v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    swift_beginAccess(v1 + qword_101480ED0, v8, 33, 0);
    v7 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    swift_retain(a1);
    CRStruct_3.merge(_:)(v5, v3, v7);
    swift_endAccess(v8);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
  }
}

uint64_t sub_100BE0E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v3 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v21[-v7];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v21[-v13];
  if (*(_UNKNOWN ****)a1 != &off_1014086A0)
    goto LABEL_5;
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v15, v24, 0, 0);
  sub_1004CB7BC(v15, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v16 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
  swift_beginAccess(v16, v23, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v16) = sub_100D5ED30((uint64_t)v14, (uint64_t)v11);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  if ((v16 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v19 = 0;
    return v19 & 1;
  }
  v17 = v1 + qword_101480ED0;
  swift_beginAccess(v17, v22, 0, 0);
  sub_1004B8460(v17, (uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
  v18 = a1 + qword_101480ED0;
  swift_beginAccess(a1 + qword_101480ED0, v21, 0, 0);
  sub_1004B8460(v18, (uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
  v19 = sub_100BE3DE4((uint64_t)v8, (uint64_t)v5);
  swift_release(a1);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
  return v19 & 1;
}

uint64_t sub_100BE10C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_101480ED0;
  swift_beginAccess(v2 + qword_101480ED0, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
    v12 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    CRStruct_3.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013F7490, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C1A8);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
  return v16;
}

uint64_t sub_100BE128C(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v14[-v7];
  if (*a1 == &off_1014086A0)
  {
    v9 = v1 + qword_101480ED0;
    swift_beginAccess(v9, v15, 0, 0);
    sub_1004B8460(v9, (uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
    v10 = (uint64_t)a1 + qword_101480ED0;
    swift_beginAccess((char *)a1 + qword_101480ED0, v14, 0, 0);
    sub_1004B8460(v10, (uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    v11 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    v12 = CRStruct_3.hasDelta(from:)(v5, v3, v11);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
    return v12 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLImageItemData.swift", 31, 2, 162, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE1434(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_101408B70);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_101480ED0;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    v19 = v17 + qword_101480ED0;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    v20 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    swift_retain(a1);
    v21 = v31;
    CRStruct_3.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_101408B70);
    v22 = sub_1004B804C(&qword_101408B20);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_101408B70);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_101408B70);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_101408B18, &qword_101408B20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_101408B70);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLImageItemData.swift", 31, 2, 175, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE17A8(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v46 = *v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101408B20);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v14 = sub_1004CBA30(&qword_101408B18, &qword_101408B20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
  LOBYTE(v2) = v10;
  v15 = v48;
  PartialCRDT.init(serializedData:)(a1, a2, v10, v14);
  if (!v15)
  {
    v42 = v9;
    v43 = v7;
    v48 = v11;
    v16 = v47;
    swift_beginAccess(v47 + qword_101480ED0, v51, 33, 0);
    v17 = type metadata accessor for CRLImageItemCRDTData(0);
    v18 = sub_1004B7878(&qword_1013F8B00, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C310);
    LODWORD(v2) = CRStruct_3.merge(delta:)(v13, v17, v18);
    swift_endAccess(v51);
    if ((v2 & 1) == 0)
    {
      v39 = v13;
      v40 = v10;
      v41 = (int)v2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v19 = (void *)static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
      swift_beginAccess(v22, v49, 0, 0);
      v23 = v22;
      v24 = v44;
      sub_1004CB7BC(v23, v44, (uint64_t *)&unk_1013F02C0);
      v25 = v19;
      v26 = sub_1004B804C(&qword_1013E1A80);
      v27 = v42;
      CRRegister.wrappedValue.getter(v26);
      v28 = sub_1004CB800(v24, (uint64_t *)&unk_1013F02C0);
      v29 = UUID.uuidString.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v52 = v16;
      swift_retain(v16);
      v33 = String.init<A>(describing:)(&v52, v46);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v32;
      *(_QWORD *)(inited + 72) = v33;
      *(_QWORD *)(inited + 80) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v2 = *(uint64_t **)(inited + 16);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v2, v36);

      LOBYTE(v2) = v41;
      v10 = v40;
      v13 = v39;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return v2 & 1;
}

unint64_t sub_100BE1B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v36 = type metadata accessor for CRLAssetData(0);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v31 = (uint64_t)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - v3;
  v33 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v33);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_1013E0DD8);
  v11 = sub_1004B804C(&qword_101405DE0);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v32, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5A10;
  v34 = v15;
  v16 = (_QWORD *)(v15 + v14);
  v17 = (char *)v16 + *(int *)(v11 + 48);
  *v16 = 0x6567616D69;
  v16[1] = 0xE500000000000000;
  v18 = v0 + qword_101480ED0;
  swift_beginAccess(v18, v37, 32, 0);
  v19 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  sub_1004B8460((uint64_t)v9, (uint64_t)v4, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLImageItemAssetData);
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v30(v17, v4, v20);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLAssetData);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v22(v17, 0, 1, v20);
  v23 = (_QWORD *)((char *)v16 + v32);
  v24 = (char *)v16 + v32 + *(int *)(v11 + 48);
  *v23 = 0x69616E626D756874;
  v23[1] = 0xE90000000000006CLL;
  swift_beginAccess(v18, v37, 32, 0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  v25 = &v6[*(int *)(v33 + 20)];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v25, 1, v36))
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    v26 = 1;
  }
  else
  {
    v27 = (uint64_t)v25;
    v28 = v31;
    sub_1004B8460(v27, v31, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    v30(v24, (char *)v28, v20);
    sub_1004B84A4(v28, type metadata accessor for CRLAssetData);
    v26 = 0;
  }
  v22(v24, v26, 1, v20);
  return sub_1008D5968(v34);
}

uint64_t sub_100BE1EA4()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_101480ED0, type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100BE1ECC()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_101480ED0, type metadata accessor for CRLImageItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLImageItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101408678, (uint64_t)&nominal type descriptor for CRLImageItemData);
}

uint64_t sub_100BE1F30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLImageItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLImageItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1014089A8, (uint64_t)&nominal type descriptor for CRLImageItemCRDTData);
}

uint64_t *sub_100BE1FB0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013EBA40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C(&qword_1013F8AC8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

double sub_100BE20A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = sub_1004B804C(&qword_1013EBA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_1004B804C(&qword_1013F8AC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100BE2148(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013EBA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013F8AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_100BE2214(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013EBA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013F8AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE22EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1004B804C(&qword_1013EBA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013F8AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BE23B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1004B804C(&qword_1013EBA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013F8AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE2484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE2490);
}

uint64_t sub_100BE2490(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1004B804C(&qword_1013EBA40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C(&qword_1013E0A88);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C(&qword_1013F8AC8);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_100BE2568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE2574);
}

uint64_t sub_100BE2574(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1004B804C(&qword_1013EBA40);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C(&qword_1013E0A88);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C(&qword_1013F8AC8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

void sub_100BE2648(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_100BE2724(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004EF978(319, &qword_1013E0B10, (uint64_t *)&unk_1013F1530, (uint64_t (*)(void))sub_1004EF8D0);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1004EF978(319, &qword_1014089C8, &qword_1013F8AC0, (uint64_t (*)(void))sub_100BE27B0);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_100BE2724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1014089B8)
  {
    v2 = type metadata accessor for CRLImageItemAssetData(255);
    v3 = sub_1004B7878(&qword_1014089C0, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C338);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1014089B8);
  }
}

uint64_t type metadata accessor for CRLImageItemAssetData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101408A60, (uint64_t)&nominal type descriptor for CRLImageItemAssetData);
}

unint64_t sub_100BE27B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014089D0;
  if (!qword_1014089D0)
  {
    v1 = sub_1004CB6A4(&qword_1013F8AC0);
    sub_1004B7878(&qword_1013F79C8, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F131C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1014089D0);
  }
  return result;
}

char *sub_100BE282C(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v37)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v37(a1, a2, v7);
    v8 = type metadata accessor for CRLAssetData(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *(int *)(v8 + 24);
    v14 = *(_QWORD *)&a2[v13];
    *(_QWORD *)&a1[v13] = v14;
    v15 = a3[5];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *(_QWORD *)(v8 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
    swift_bridgeObjectRetain(v12);
    v20 = swift_bridgeObjectRetain(v14);
    if (v19(v17, 1, v8, v20))
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v37(v16, v17, v7);
      v23 = *(int *)(v8 + 20);
      v24 = &v16[v23];
      v25 = &v17[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(int *)(v8 + 24);
      v28 = *(_QWORD *)&v17[v27];
      *(_QWORD *)&v16[v27] = v28;
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v18 + 56);
      swift_bridgeObjectRetain(v26);
      v30 = swift_bridgeObjectRetain(v28);
      v29(v16, 0, 1, v8, v30);
    }
    v31 = a3[6];
    v32 = a3[7];
    v33 = *(_QWORD *)&a2[v31];
    *(_QWORD *)&a1[v31] = v33;
    a1[v32] = a2[v32];
    v34 = a3[8];
    v35 = *(_QWORD *)&a2[v34];
    *(_QWORD *)&a1[v34] = v35;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v35);
  }
  return a1;
}

double sub_100BE29D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = type metadata accessor for CRLAssetData(0);
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v6 - 8) + 48))(v8, 1, v6, v7))
  {
    v5(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100BE2AB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v35(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(v7 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = a3[5];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v13);
  if (v18(v16, 1, v7, v19))
  {
    v20 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v35((uint64_t)v15, (uint64_t)v16, v6);
    v21 = *(int *)(v7 + 20);
    v22 = &v15[v21];
    v23 = &v16[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(int *)(v7 + 24);
    v26 = *(_QWORD *)&v16[v25];
    *(_QWORD *)&v15[v25] = v26;
    v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v17 + 56);
    swift_bridgeObjectRetain(v24);
    v28 = swift_bridgeObjectRetain(v26);
    v27(v15, 0, 1, v7, v28);
  }
  v29 = a3[6];
  v30 = a3[7];
  v31 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(a1 + v29) = v31;
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v32 = a3[8];
  v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v33);
  return a1;
}

uint64_t sub_100BE2C30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, __n128);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;

  v6 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v12 = v11[1];
  v10[1] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = *(int *)(v8 + 24);
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  v15 = swift_bridgeObjectRelease();
  v44 = a3;
  v16 = a3[5];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = *(_QWORD *)(v8 - 8);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v19 + 48);
  v21 = v20(a1 + v16, 1, v8, v15);
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v18, 1, v8);
  if (!v21)
  {
    if (!v22)
    {
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v37 = *(int *)(v8 + 20);
      v38 = &v17[v37];
      v39 = &v18[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v40 = *((_QWORD *)v39 + 1);
      *((_QWORD *)v38 + 1) = v40;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRelease();
      v41 = *(int *)(v8 + 24);
      v42 = *(_QWORD *)&v18[v41];
      *(_QWORD *)&v17[v41] = v42;
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v31 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v17, v18, v6);
  v23 = *(int *)(v8 + 20);
  v24 = &v17[v23];
  v25 = &v18[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 1) = v26;
  v27 = *(int *)(v8 + 24);
  v28 = *(_QWORD *)&v18[v27];
  *(_QWORD *)&v17[v27] = v28;
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v19 + 56);
  swift_bridgeObjectRetain(v26);
  v30 = swift_bridgeObjectRetain(v28);
  v29(v17, 0, 1, v8, v30);
LABEL_7:
  v32 = v44[6];
  v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v44[7]) = *(_BYTE *)(a2 + v44[7]);
  v34 = v44[8];
  v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(a1 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE2E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    v13 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(_QWORD *)&v10[*(int *)(v8 + 24)] = *(_QWORD *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  v14 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100BE2FBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;

  v6 = type metadata accessor for UUID(0);
  v30 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v14 = swift_bridgeObjectRelease();
  v31 = a3;
  v15 = a3[5];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = *(_QWORD *)(v8 - 8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v20 = v19(a1 + v15, 1, v8, v14);
  v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v17, 1, v8);
  if (!v20)
  {
    if (!v21)
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      v25 = *(int *)(v8 + 20);
      v26 = &v16[v25];
      v27 = &v17[v25];
      v29 = *(_QWORD *)v27;
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v16[*(int *)(v8 + 24)] = *(_QWORD *)&v17[*(int *)(v8 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v16, v17, v6);
  *(_OWORD *)&v16[*(int *)(v8 + 20)] = *(_OWORD *)&v17[*(int *)(v8 + 20)];
  *(_QWORD *)&v16[*(int *)(v8 + 24)] = *(_QWORD *)&v17[*(int *)(v8 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v8);
LABEL_7:
  *(_QWORD *)(a1 + v31[6]) = *(_QWORD *)(a2 + v31[6]);
  swift_bridgeObjectRelease();
  v23 = v31[8];
  *(_BYTE *)(a1 + v31[7]) = *(_BYTE *)(a2 + v31[7]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE31AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE31B8);
}

uint64_t sub_100BE31B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100BE3264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE3270);
}

uint64_t sub_100BE3270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_100BE3318(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for CRLAssetData(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004F0958(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = &unk_100F2BDD0;
      v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_100BE33BC()
{
  return sub_1004B7878(&qword_101408AA8, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BDE8);
}

uint64_t sub_100BE33E8()
{
  return sub_1004B7878(&qword_1014089C0, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2C338);
}

uint64_t sub_100BE3414()
{
  return sub_1004B7878(&qword_101408AB0, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BEB8);
}

uint64_t sub_100BE3440()
{
  return sub_1004B7878(&qword_101408AB8, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BE90);
}

unint64_t sub_100BE3470()
{
  unint64_t result;

  result = qword_101408AC0;
  if (!qword_101408AC0)
  {
    result = swift_getWitnessTable(&unk_100F2BF28, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AC0);
  }
  return result;
}

unint64_t sub_100BE34B8()
{
  unint64_t result;

  result = qword_101408AC8;
  if (!qword_101408AC8)
  {
    result = swift_getWitnessTable(&unk_100F2C038, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AC8);
  }
  return result;
}

unint64_t sub_100BE3500()
{
  unint64_t result;

  result = qword_101408AD0;
  if (!qword_101408AD0)
  {
    result = swift_getWitnessTable(&unk_100F2C000, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AD0);
  }
  return result;
}

unint64_t sub_100BE3548()
{
  unint64_t result;

  result = qword_101408AD8;
  if (!qword_101408AD8)
  {
    result = swift_getWitnessTable(&unk_100F2BF60, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AD8);
  }
  return result;
}

unint64_t sub_100BE3590()
{
  unint64_t result;

  result = qword_101408AE0;
  if (!qword_101408AE0)
  {
    result = swift_getWitnessTable(&unk_100F2BFD8, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AE0);
  }
  return result;
}

unint64_t sub_100BE35D8()
{
  unint64_t result;

  result = qword_101408AE8;
  if (!qword_101408AE8)
  {
    result = swift_getWitnessTable(&unk_100F2BFB0, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408AE8);
  }
  return result;
}

uint64_t sub_100BE361C()
{
  return sub_1004CBA30(&qword_101408AF0, &qword_101408AF8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100BE3648()
{
  return sub_1004B7878(&qword_101408B00, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BEE0);
}

uint64_t sub_100BE3674()
{
  return sub_1004B7878(&qword_101408B08, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C0C8);
}

uint64_t sub_100BE36A0()
{
  return sub_1004B7878(&qword_101408B10, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C110);
}

uint64_t sub_100BE36CC()
{
  return sub_1004B7878(&qword_1013F8B18, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C148);
}

uint64_t sub_100BE36F8()
{
  return sub_1004CBA30(&qword_101408B18, &qword_101408B20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
}

uint64_t sub_100BE3724()
{
  return sub_1004B7878(&qword_1013F7490, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C1A8);
}

uint64_t sub_100BE3750()
{
  return sub_1004B7878(&qword_101408B28, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C228);
}

uint64_t sub_100BE377C()
{
  return sub_1004CBA30(&qword_101408B30, &qword_1013EBA40, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100BE37A8()
{
  return sub_1004CBA30(&qword_1013E0D40, &qword_1013E0A88, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100BE37D4()
{
  return sub_1004CBA30(&qword_101408B38, &qword_1013F8AC8, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100BE3800()
{
  return sub_1004B7878(&qword_101408B40, type metadata accessor for CRLImageItemCRDTData, (uint64_t)&unk_100F2C288);
}

uint64_t sub_100BE382C()
{
  return sub_1004B7878(&qword_101408B48, type metadata accessor for CRLImageItemAssetData, (uint64_t)&unk_100F2BE30);
}

uint64_t sub_100BE3858@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[232];
  _BYTE v6[24];
  _BYTE v7[232];

  swift_beginAccess(*v1 + qword_101480ED0, v6, 32, 0);
  type metadata accessor for CRLImageItemCRDTData(0);
  v3 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.getter(v3);
  sub_1004C4938((uint64_t)v5, (uint64_t)v7, (uint64_t *)&unk_1013F1530);
  swift_endAccess(v6);
  return sub_1004C4938((uint64_t)v7, a1, (uint64_t *)&unk_1013F1530);
}

uint64_t sub_100BE38FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __n128 v4;
  _BYTE v6[232];
  _BYTE v7[24];

  swift_beginAccess(*v1 + qword_101480ED0, v7, 33, 0);
  sub_1004C4938(a1, (uint64_t)v6, (uint64_t *)&unk_1013F1530);
  type metadata accessor for CRLImageItemCRDTData(0);
  v3 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.setter(v6, v3, v4);
  return swift_endAccess(v7);
}

uint64_t sub_100BE3990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  int v47;
  int v48;
  _BOOL4 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;

  v4 = type metadata accessor for CRLAssetData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E9C00);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  if ((static UUID.== infix(_:_:)(a1) & 1) == 0)
    goto LABEL_26;
  v20 = *(int *)(v4 + 20);
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  if (v21 != *v23 || v22 != v24)
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, *v23, v24, 0);
    v27 = 0;
    if ((v26 & 1) == 0)
      return v27 & 1;
  }
  if ((sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24))) & 1) == 0)
    goto LABEL_26;
  v51 = v7;
  v53 = v13;
  v28 = type metadata accessor for CRLImageItemAssetData(0);
  sub_1004CB7BC(a1 + *(int *)(v28 + 20), (uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
  v52 = v28;
  sub_1004CB7BC(a2 + *(int *)(v28 + 20), (uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
  v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  sub_1004CB7BC((uint64_t)v16, v29, (uint64_t *)&unk_1013E9BE0);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v30((uint64_t)v10, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    if (v30(v29, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  v35 = (uint64_t)v53;
  sub_1004CB7BC((uint64_t)v10, (uint64_t)v53, (uint64_t *)&unk_1013E9BE0);
  if (v30(v29, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    sub_1004B84A4(v35, type metadata accessor for CRLAssetData);
LABEL_17:
    v36 = &qword_1013E9C00;
    v37 = (uint64_t)v10;
LABEL_25:
    sub_1004CB800(v37, v36);
    goto LABEL_26;
  }
  v38 = (uint64_t)v51;
  sub_1004B84E0(v29, (uint64_t)v51, type metadata accessor for CRLAssetData);
  if ((static UUID.== infix(_:_:)(v35) & 1) == 0
    || ((v39 = *(int *)(v4 + 20),
         v40 = *(_QWORD *)(v35 + v39),
         v41 = *(_QWORD *)(v35 + v39 + 8),
         v42 = (_QWORD *)(v38 + v39),
         v43 = v42[1],
         v40 != *v42)
     || v41 != v43)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, *v42, v43, 0) & 1) == 0)
  {
    sub_1004B84A4(v38, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    sub_1004B84A4(v35, type metadata accessor for CRLAssetData);
    v37 = (uint64_t)v10;
    v36 = (uint64_t *)&unk_1013E9BE0;
    goto LABEL_25;
  }
  v44 = sub_100C9E04C(*(_QWORD *)(v35 + *(int *)(v4 + 24)), *(_QWORD *)(v38 + *(int *)(v4 + 24)));
  sub_1004B84A4(v38, type metadata accessor for CRLAssetData);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v35, type metadata accessor for CRLAssetData);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  if ((v44 & 1) == 0)
    goto LABEL_26;
LABEL_11:
  v31 = v52;
  v32 = *(int *)(v52 + 24);
  v33 = *(_QWORD *)(a1 + v32);
  v34 = *(_QWORD *)(a2 + v32);
  if (v33)
  {
    if (v34 && (sub_100544C38(v33, v34) & 1) != 0)
      goto LABEL_29;
LABEL_26:
    v27 = 0;
    return v27 & 1;
  }
  if (v34)
    goto LABEL_26;
LABEL_29:
  v46 = *(int *)(v31 + 28);
  v47 = *(unsigned __int8 *)(a1 + v46);
  v48 = *(unsigned __int8 *)(a2 + v46);
  if (v47 == 2)
  {
    if (v48 == 2)
    {
LABEL_34:
      v27 = sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v31 + 32)), *(_QWORD *)(a2 + *(int *)(v31 + 32)));
      return v27 & 1;
    }
    goto LABEL_26;
  }
  v27 = 0;
  v49 = (v47 & 1) == 0;
  if (v48 != 2 && ((v49 ^ v48) & 1) != 0)
    goto LABEL_34;
  return v27 & 1;
}

uint64_t sub_100BE3DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  __int128 v45;
  __int128 *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[14];
  uint64_t v63;
  _OWORD v64[14];
  uint64_t v65;
  uint64_t v66[29];
  uint64_t v67[29];
  _OWORD v68[29];
  _OWORD v69[29];
  uint64_t v70[29];
  uint64_t v71[29];
  _OWORD v72[15];
  _OWORD v73[14];
  uint64_t v74;

  v54 = type metadata accessor for CRLMaskInfoData(0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v49 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1004B804C(&qword_1013F8AD0);
  __chkstk_darwin(v51);
  v55 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F8AC0);
  __chkstk_darwin(v6);
  v50 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v56 = (uint64_t)&v48 - v9;
  __chkstk_darwin(v10);
  v53 = (char *)&v48 - v11;
  v57 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v57);
  v60 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v61 = (uint64_t)&v48 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  v21 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v48 - v25;
  v27 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v27);
  CRRegister.wrappedValue.getter(v27);
  v28 = sub_100BE3990((uint64_t)v26, (uint64_t)v23);
  sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLImageItemAssetData);
  sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLImageItemAssetData);
  v58 = a1;
  sub_1004B8460(a1, (uint64_t)v20, type metadata accessor for CRLImageItemCRDTData);
  v59 = a2;
  sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLImageItemCRDTData);
  if ((v28 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLImageItemCRDTData);
    v31 = v60;
    v30 = v61;
LABEL_9:
    sub_1004B8460(v58, v30, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B8460(v59, v31, type metadata accessor for CRLImageItemCRDTData);
LABEL_10:
    sub_1004B84A4(v31, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4(v30, type metadata accessor for CRLImageItemCRDTData);
LABEL_11:
    v32 = 0;
    return v32 & 1;
  }
  v29 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.getter(v29);
  sub_1004C4938((uint64_t)v69, (uint64_t)v70, (uint64_t *)&unk_1013F1530);
  CRRegister.wrappedValue.getter(v29);
  sub_1004C4938((uint64_t)v69, (uint64_t)v71, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v70, (uint64_t)v69, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v71, (uint64_t)&v69[14] + 8, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v70, (uint64_t)v72, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)v72) == 1)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLImageItemCRDTData);
    sub_1004C4938((uint64_t)&v69[14] + 8, (uint64_t)v73, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v73, (uint64_t)v68, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)v68) == 1)
    {
      sub_1004C4938((uint64_t)v69, (uint64_t)v67, (uint64_t *)&unk_1013F1530);
      sub_1004F28E8(v67);
      v30 = v61;
      sub_1004B8460(v58, v61, type metadata accessor for CRLImageItemCRDTData);
      v31 = v60;
      sub_1004B8460(v59, v60, type metadata accessor for CRLImageItemCRDTData);
      goto LABEL_14;
    }
    goto LABEL_8;
  }
  sub_1004C4938((uint64_t)v71, (uint64_t)v67, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)v67) == 1)
  {
    sub_1004C4938((uint64_t)v70, (uint64_t)v68, (uint64_t *)&unk_1013F1530);
    sub_1004F2958(v68);
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLImageItemCRDTData);
    sub_1004F28E8(v70);
LABEL_8:
    v31 = v60;
    v30 = v61;
    memcpy(v68, v69, sizeof(v68));
    sub_1004F2784((uint64_t)v68);
    goto LABEL_9;
  }
  sub_1004C4938((uint64_t)v70, (uint64_t)v62, (uint64_t *)&unk_1013F1530);
  v73[12] = v62[12];
  v73[13] = v62[13];
  v74 = v63;
  v73[8] = v62[8];
  v73[9] = v62[9];
  v73[11] = v62[11];
  v73[10] = v62[10];
  v73[4] = v62[4];
  v73[5] = v62[5];
  v73[7] = v62[7];
  v73[6] = v62[6];
  v73[0] = v62[0];
  v73[1] = v62[1];
  v73[3] = v62[3];
  v73[2] = v62[2];
  sub_1004C4938((uint64_t)v71, (uint64_t)v64, (uint64_t *)&unk_1013F1530);
  v68[12] = v64[12];
  v68[13] = v64[13];
  *(_QWORD *)&v68[14] = v65;
  v68[8] = v64[8];
  v68[9] = v64[9];
  v68[11] = v64[11];
  v68[10] = v64[10];
  v68[4] = v64[4];
  v68[5] = v64[5];
  v68[7] = v64[7];
  v68[6] = v64[6];
  v68[0] = v64[0];
  v68[1] = v64[1];
  v68[3] = v64[3];
  v68[2] = v64[2];
  sub_1004F2958(v62);
  v34 = sub_1008BD558(v73, v68);
  sub_1004F28E8(v71);
  sub_1004F28E8(v70);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLImageItemCRDTData);
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLImageItemCRDTData);
  sub_1004C4938((uint64_t)v69, (uint64_t)v66, (uint64_t *)&unk_1013F1530);
  sub_1004F28E8(v66);
  v30 = v61;
  sub_1004B8460(v58, v61, type metadata accessor for CRLImageItemCRDTData);
  v31 = v60;
  sub_1004B8460(v59, v60, type metadata accessor for CRLImageItemCRDTData);
  if ((v34 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v35 = sub_1004B804C(&qword_1013F8AC8);
  v36 = (uint64_t)v53;
  CRRegister.wrappedValue.getter(v35);
  v37 = v56;
  CRRegister.wrappedValue.getter(v35);
  v38 = v55;
  v39 = v55 + *(int *)(v51 + 48);
  sub_1004CB7BC(v36, v55, &qword_1013F8AC0);
  sub_1004CB7BC(v37, v39, &qword_1013F8AC0);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  v41 = v54;
  if (v40(v38, 1, v54) == 1)
  {
    sub_1004CB800(v37, &qword_1013F8AC0);
    sub_1004CB800(v36, &qword_1013F8AC0);
    sub_1004B84A4(v31, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4(v30, type metadata accessor for CRLImageItemCRDTData);
    if (v40(v39, 1, v41) == 1)
    {
      sub_1004CB800(v38, &qword_1013F8AC0);
      v32 = 1;
      return v32 & 1;
    }
    goto LABEL_19;
  }
  v42 = v50;
  sub_1004CB7BC(v38, v50, &qword_1013F8AC0);
  if (v40(v39, 1, v41) == 1)
  {
    sub_1004CB800(v56, &qword_1013F8AC0);
    sub_1004CB800(v36, &qword_1013F8AC0);
    sub_1004B84A4(v31, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4(v30, type metadata accessor for CRLImageItemCRDTData);
    sub_1004B84A4(v42, type metadata accessor for CRLMaskInfoData);
LABEL_19:
    sub_1004CB800(v38, &qword_1013F8AD0);
    goto LABEL_11;
  }
  v43 = v49;
  sub_1004B84E0(v39, v49, type metadata accessor for CRLMaskInfoData);
  if ((sub_10092D538(v42, v43) & 1) == 0)
    goto LABEL_23;
  v44 = (__int128 *)(v42 + *(int *)(v41 + 20));
  v45 = *v44;
  v72[1] = v44[1];
  v72[0] = v45;
  v46 = (__int128 *)(v43 + *(int *)(v41 + 20));
  v47 = *v46;
  v69[1] = v46[1];
  v69[0] = v47;
  if ((sub_100D58170((uint64_t)v72, (uint64_t)v69) & 1) != 0)
    v32 = sub_100C9E04C(*(_QWORD *)(v42 + *(int *)(v41 + 24)), *(_QWORD *)(v43 + *(int *)(v41 + 24)));
  else
LABEL_23:
    v32 = 0;
  sub_1004B84A4(v43, type metadata accessor for CRLMaskInfoData);
  sub_1004CB800(v56, &qword_1013F8AC0);
  sub_1004CB800(v36, &qword_1013F8AC0);
  sub_1004B84A4(v31, type metadata accessor for CRLImageItemCRDTData);
  sub_1004B84A4(v30, type metadata accessor for CRLImageItemCRDTData);
  sub_1004B84A4(v42, type metadata accessor for CRLMaskInfoData);
  sub_1004CB800(v38, &qword_1013F8AC0);
  return v32 & 1;
}

uint64_t sub_100BE46D4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    v5 = 0xE900000000000061;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446567616D69, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x69616E626D756874 && a2 == 0xED0000617461446CLL)
  {
    v7 = 0xED0000617461446CLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x69616E626D756874, 0xED0000617461446CLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6150646563617274 && a2 == 0xEA00000000006874)
  {
    v8 = 0xEA00000000006874;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6150646563617274, 0xEA00000000006874, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000013)
  {
    v9 = 0x8000000100FDD550;
    if (a2 == 0x8000000100FDD550)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FDD550, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t storeEnumTagSinglePayload for CRLImageItemAssetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100BE496C + 4 * byte_100F2BD5A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100BE49A0 + 4 * byte_100F2BD55[v4]))();
}

uint64_t sub_100BE49A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BE49A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BE49B0);
  return result;
}

uint64_t sub_100BE49BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BE49C4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100BE49C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BE49D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLImageItemAssetData.CodingKeys()
{
  return &type metadata for CRLImageItemAssetData.CodingKeys;
}

unint64_t sub_100BE49F0()
{
  unint64_t result;

  result = qword_101408B78;
  if (!qword_101408B78)
  {
    result = swift_getWitnessTable(&unk_100F2C464, &type metadata for CRLImageItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101408B78);
  }
  return result;
}

void sub_100BE4A34(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  NSString v30;
  id v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  id v41;
  void **aBlock;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t (*v46)();
  _QWORD *v47;

  if ((a1 & 1) != 0
    && (v9 = objc_msgSend((id)objc_opt_self(UIImagePickerController), "availableMediaTypesForSourceType:", 1)) != 0)
  {
    v10 = v9;
    v11 = objc_msgSend(objc_allocWithZone((Class)UIImagePickerController), "init");
    objc_msgSend(v11, "setSourceType:", 1);
    objc_msgSend(v11, "setVideoQuality:", 0);
    objc_msgSend(v11, "setMediaTypes:", v10);

    objc_msgSend(v11, "setDelegate:", a2);
    v12 = (_QWORD *)swift_allocObject(&unk_101299468, 40, 7);
    v12[2] = a4;
    v12[3] = a5;
    v12[4] = v11;
    v46 = sub_1006082D0;
    v47 = v12;
    aBlock = _NSConcreteStackBlock;
    v43 = *(_QWORD *)"";
    v44 = sub_1005D2FC0;
    v45 = &unk_101299480;
    v13 = _Block_copy(&aBlock);
    v14 = v47;
    swift_retain(a5);
    v15 = v11;
    objc_msgSend(a3, "presentViewController:animated:completion:", v15, 1, v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
  }
  else
  {
    v16 = (void *)objc_opt_self(NSBundle);
    v17 = objc_msgSend(v16, "mainBundle");
    v41 = a3;
    v18 = String._bridgeToObjectiveC()();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v22 = v21;

    v23 = objc_msgSend(v16, "mainBundle");
    v24 = String._bridgeToObjectiveC()();
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v31 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v29, v30, 1);

    v32 = objc_msgSend(v16, "mainBundle");
    v33 = String._bridgeToObjectiveC()();
    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

    v38 = swift_allocObject(&unk_101299418, 32, 7);
    *(_QWORD *)(v38 + 16) = a4;
    *(_QWORD *)(v38 + 24) = a5;
    swift_retain(a5);
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v46 = sub_1005D2B88;
    v47 = (_QWORD *)v38;
    aBlock = _NSConcreteStackBlock;
    v43 = *(_QWORD *)"";
    v44 = sub_1004C6194;
    v45 = &unk_101299430;
    v40 = _Block_copy(&aBlock);
    swift_release(v47);
    v15 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v39, 0, v40);
    _Block_release(v40);

    objc_msgSend(v31, "addAction:", v15);
    objc_msgSend(v41, "presentViewController:animated:completion:", v31, 1, 0);

  }
}

uint64_t sub_100BE4EEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100BE4F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BE4F20(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100BE4F28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100BE4F5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v6 = type metadata accessor for MainActor(0);
  v3[2] = v6;
  v3[3] = static MainActor.shared.getter(v6);
  v7 = *(int **)((swift_isaMask & *v2) + 0x50);
  v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v3[4] = v8;
  *v8 = v3;
  v8[1] = sub_1006897D0;
  return v10(a1, a2);
}

id sub_100BE5058(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardLibraryCommand);
}

uint64_t type metadata accessor for CRLBoardLibraryCommand()
{
  return objc_opt_self(_TtC8Freeform22CRLBoardLibraryCommand);
}

id sub_100BE5094(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::UInt8 v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v57;
  objc_class *v58;
  id result;
  id v60;
  CKRecordID v61;
  Swift::String v62;
  char *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  objc_super v79;
  _QWORD v80[10];

  v76 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v66 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v67 = (uint64_t)&v63 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - v10;
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  v71 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v63 - v19;
  __chkstk_darwin(v21);
  v69 = (uint64_t)&v63 - v22;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState) = &_swiftEmptySetSingleton;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_45;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_boardIdentifiers) = a1;
  v68 = a2 & 1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_favorite) = a2 & 1;
  v23 = *(_QWORD *)(a1 + 56);
  v64 = a1 + 56;
  v24 = 1 << *(_BYTE *)(a1 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v65 = (unint64_t)(v24 + 63) >> 6;
  swift_bridgeObjectRetain_n(a1, 2);
  v63 = (char *)(id)v2;
  v27 = 0;
  v78 = &_swiftEmptySetSingleton;
  v72 = a1;
  v70 = v20;
LABEL_8:
  if (v26)
  {
    v73 = (v26 - 1) & v26;
    v74 = v27;
    v32 = __clz(__rbit64(v26)) | (v27 << 6);
LABEL_28:
    v37 = v69;
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v71 + 72) * v32, v69, type metadata accessor for CRLBoardIdentifier);
    sub_1004DB5FC(v37, (uint64_t)v20);
    sub_1004B8460((uint64_t)v20, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    v38 = v68;
    v75 = *(int *)(v76 + 20);
    v11[v75] = v68;
    v39 = v78;
    Hasher.init(_seed:)(v80, v78[5]);
    v40 = type metadata accessor for UUID(0);
    v41 = sub_100BE893C();
    swift_bridgeObjectRetain(v39);
    dispatch thunk of Hashable.hash(into:)(v80, v40, v41);
    v77 = type metadata accessor for CRLBoardIdentifierStorage(0);
    v42 = &v11[*(int *)(v77 + 20)];
    v43 = *(_QWORD *)v42;
    v44 = *((_QWORD *)v42 + 1);
    swift_bridgeObjectRetain(v44);
    String.hash(into:)(v80, v43, v44);
    swift_bridgeObjectRelease(v44);
    Hasher._combine(_:)(v38);
    v45 = Hasher._finalize()();
    v46 = -1 << *((_BYTE *)v39 + 32);
    v47 = v45 & ~v46;
    v48 = v39 + 7;
    if (((*(_QWORD *)((char *)v39 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v47) & 1) == 0)
    {
LABEL_6:
      v28 = v78;
      swift_bridgeObjectRelease(v78);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
      v30 = v67;
      sub_1004B8460((uint64_t)v11, v67, type metadata accessor for CRLBoardIdentifierAndValue);
      v80[0] = v28;
      v2 = (uint64_t)v80;
      sub_100AE7FD8(v30, v47, isUniquelyReferenced_nonNull_native);
      v78 = (_QWORD *)v80[0];
      v31 = 0x8000000000000000;
      goto LABEL_7;
    }
    v49 = ~v46;
    v50 = *(_QWORD *)(v66 + 72);
    while (1)
    {
      sub_1004B8460(v78[6] + v50 * v47, (uint64_t)v6, type metadata accessor for CRLBoardIdentifierAndValue);
      v2 = static UUID.== infix(_:_:)(v6);
      sub_1004B8460((uint64_t)v6, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v11, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      if ((v2 & 1) != 0)
      {
        v51 = *(int *)(v77 + 20);
        v52 = *(_QWORD *)&v17[v51];
        v53 = *(_QWORD *)&v17[v51 + 8];
        v54 = &v14[v51];
        v55 = *((_QWORD *)v54 + 1);
        if (v52 == *(_QWORD *)v54 && v53 == v55)
        {
          sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, *(_QWORD *)v54, v55, 0);
          sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          if ((v2 & 1) == 0)
            goto LABEL_31;
        }
        if (v6[*(int *)(v76 + 20)] == v11[v75])
        {
          sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifierAndValue);
          v31 = (unint64_t)v78;
LABEL_7:
          swift_bridgeObjectRelease(v31);
          sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifierAndValue);
          v20 = v70;
          sub_1004B84A4((uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
          a1 = v72;
          v26 = v73;
          v27 = v74;
          goto LABEL_8;
        }
      }
      else
      {
        sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      }
LABEL_31:
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifierAndValue);
      v47 = (v47 + 1) & v49;
      if (((*(_QWORD *)((char *)v48 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) == 0)
        goto LABEL_6;
    }
  }
  v33 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v33 >= v65)
    goto LABEL_42;
  v34 = *(_QWORD *)(v64 + 8 * v33);
  v35 = v27 + 1;
  if (v34)
    goto LABEL_27;
  v35 = v27 + 2;
  if (v27 + 2 >= v65)
    goto LABEL_42;
  v34 = *(_QWORD *)(v64 + 8 * v35);
  if (v34)
    goto LABEL_27;
  v35 = v27 + 3;
  if (v27 + 3 >= v65)
    goto LABEL_42;
  v34 = *(_QWORD *)(v64 + 8 * v35);
  if (v34)
    goto LABEL_27;
  v35 = v27 + 4;
  if (v27 + 4 >= v65)
    goto LABEL_42;
  v34 = *(_QWORD *)(v64 + 8 * v35);
  if (v34)
    goto LABEL_27;
  v35 = v27 + 5;
  if (v27 + 5 >= v65)
    goto LABEL_42;
  v34 = *(_QWORD *)(v64 + 8 * v35);
  if (v34)
  {
LABEL_27:
    v73 = (v34 - 1) & v34;
    v74 = v35;
    v32 = __clz(__rbit64(v34)) + (v35 << 6);
    goto LABEL_28;
  }
  v36 = v27 + 6;
  if (v27 + 6 >= v65)
  {
LABEL_42:
    swift_release(a1);
    swift_bridgeObjectRelease(a1);
    v57 = v63;
    *(_QWORD *)&v63[OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState] = v78;

    v58 = (objc_class *)type metadata accessor for CRLBoardFavoriteCommand();
    v79.receiver = v57;
    v79.super_class = v58;
    return objc_msgSendSuper2(&v79, "init");
  }
  v34 = *(_QWORD *)(v64 + 8 * v36);
  if (v34)
  {
    v35 = v27 + 6;
    goto LABEL_27;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v65)
      goto LABEL_42;
    v34 = *(_QWORD *)(v64 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_27;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v60 = (id)v2;
  sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifiers:favorite:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 42, "CRLBoardFavoriteCommand received an empty board list", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardFavoriteCommand received an empty board list");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:favorite:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 42, (uint64_t)"CRLBoardFavoriteCommand received an empty board list", 52, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v61, v62);
  result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

uint64_t sub_100BE5808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch(sub_100BE5878, v5, v6);
}

uint64_t sub_100BE5878()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[4];
  v2 = v0[2];
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_boardIdentifiers);
  swift_unknownObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  sub_100BE8B58((uint64_t)&_swiftEmptySetSingleton, v3, v2);
  v5 = v4;
  swift_unknownObjectRelease(v2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState);
  v7 = (_QWORD *)swift_task_alloc(dword_10140E1EC);
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_100BE5948;
  return sub_100CA6AF8(v6);
}

uint64_t sub_100BE5948()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100BE59A8;
  else
    v4 = sub_100685F28;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100BE59A8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100BE59DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE5A48, v4, v5);
}

uint64_t sub_100BE5A48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState);
  v0[7] = v1;
  v2 = dword_10140E1EC;
  swift_bridgeObjectRetain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_100BE5ABC;
  return sub_100CA6AF8(v1);
}

uint64_t sub_100BE5ABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_100BE5B28;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_10068F0C4;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BE5B28()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100BE5B68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE5BD4, v4, v5);
}

uint64_t sub_100BE5BD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E1EC);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100BE5C30;
  return sub_100CA6AF8(v1);
}

uint64_t sub_100BE5C30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10068F128;
  else
    v4 = sub_10068F0C4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100BE5C90()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

uint64_t sub_100BE5E58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_boardIdentifiers));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState));
}

id sub_100BE5E94(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardFavoriteCommand);
}

uint64_t type metadata accessor for CRLBoardFavoriteCommand()
{
  return objc_opt_self(_TtC8Freeform23CRLBoardFavoriteCommand);
}

uint64_t sub_100BE5EE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE5F50, v4, v5);
}

uint64_t sub_100BE5F50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E18C);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100BE5C30;
  return sub_100CA767C(v1);
}

uint64_t sub_100BE5FAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE6018, v4, v5);
}

uint64_t sub_100BE6018()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E184);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100BE6074;
  return sub_100CB8270(v1);
}

uint64_t sub_100BE6074()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10068A90C;
  else
    v4 = sub_10068A8D8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100BE6220()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers));
}

id sub_100BE6230(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardDeleteCommand);
}

uint64_t type metadata accessor for CRLBoardDeleteCommand()
{
  return objc_opt_self(_TtC8Freeform21CRLBoardDeleteCommand);
}

uint64_t sub_100BE626C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE62D8, v4, v5);
}

uint64_t sub_100BE62D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E184);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100BE5C30;
  return sub_100CB8270(v1);
}

uint64_t sub_100BE6334(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE63A0, v4, v5);
}

uint64_t sub_100BE63A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers);
  v2 = (_QWORD *)swift_task_alloc(dword_10140E18C);
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_100BE5C30;
  return sub_100CA767C(v1);
}

uint64_t sub_100BE63FC()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

uint64_t sub_100BE664C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers));
}

id sub_100BE665C(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardUndeleteCommand);
}

uint64_t type metadata accessor for CRLBoardUndeleteCommand()
{
  return objc_opt_self(_TtC8Freeform23CRLBoardUndeleteCommand);
}

uint64_t sub_100BE6698(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[6] = v5;
  v2[7] = v6;
  return swift_task_switch(sub_100BE6724, v5, v6);
}

uint64_t sub_100BE6724()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = v0[4];
  v2 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers);
  v3 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 5, v3);
  v6 = (char *)&dword_10140E1D8 + dword_10140E1D8;
  v4 = (_QWORD *)swift_task_alloc(unk_10140E1DC);
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_100BE67C4;
  return ((uint64_t (*)(uint64_t, _QWORD))v6)(v2, v0[4]);
}

uint64_t sub_100BE67C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  *(_QWORD *)(*(_QWORD *)v2 + 72) = v1;
  swift_task_dealloc(v5);
  v6 = v4[4];
  if (v1)
  {
    sub_1004B84A4(v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v7 = v4[6];
    v8 = v4[7];
    v9 = sub_100BE68B4;
  }
  else
  {
    v4[10] = a1;
    sub_1004B84A4(v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v7 = v4[6];
    v8 = v4[7];
    v9 = sub_100BE6854;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100BE6854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers) = v1;
  swift_bridgeObjectRelease(v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE68B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE68F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE695C, v4, v5);
}

uint64_t sub_100BE695C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  swift_bridgeObjectRetain(*(_QWORD *)(v0[3]
                                     + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers));
  v2 = sub_100AF87D0(v1);
  v0[7] = v2;
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)swift_task_alloc(dword_10140E18C);
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_100BE69D4;
  return sub_100CA767C(v2);
}

uint64_t sub_100BE69D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[5];
    v5 = v2[6];
    v6 = sub_100BE9138;
  }
  else
  {
    swift_bridgeObjectRelease(v2[7]);
    v4 = v2[5];
    v5 = v2[6];
    v6 = sub_10068F0C4;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BE6A40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE6AAC, v4, v5);
}

uint64_t sub_100BE6AAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  swift_bridgeObjectRetain(*(_QWORD *)(v0[3]
                                     + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers));
  v2 = sub_100AF87D0(v1);
  v0[7] = v2;
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)swift_task_alloc(dword_10140E184);
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_100BE69D4;
  return sub_100CB8270(v2);
}

uint64_t sub_100BE6B24()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

uint64_t sub_100BE6D84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers));
}

id sub_100BE6DB0(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardDuplicateCommand);
}

uint64_t type metadata accessor for CRLBoardDuplicateCommand()
{
  return objc_opt_self(_TtC8Freeform24CRLBoardDuplicateCommand);
}

uint64_t sub_100BE6F08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE6F74, v4, v5);
}

uint64_t sub_100BE6F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle);
  v4 = *v3;
  v5 = v3[1];
  v6 = (_QWORD *)swift_task_alloc(dword_10140E174);
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_100BE6FF4;
  return sub_100CA5AE8(v2, v4, v5, 0);
}

uint64_t sub_100BE6FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  *(_QWORD *)(*(_QWORD *)v3 + 64) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = v6[5];
    v9 = v6[6];
    v10 = sub_10068A90C;
  }
  else
  {
    v6[9] = a2;
    v6[10] = a1;
    v8 = v6[5];
    v9 = v6[6];
    v10 = sub_100BE706C;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_100BE706C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle + 8);
  *v4 = v2;
  v4[1] = v1;
  swift_bridgeObjectRelease(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE70C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100BE7130, v4, v5);
}

uint64_t sub_100BE7130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle + 8);
  *(_QWORD *)(v0 + 56) = v3;
  if (v3)
  {
    v4 = *v2;
    v5 = v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier;
    v6 = dword_10140E174;
    swift_bridgeObjectRetain(v3);
    v7 = (_QWORD *)swift_task_alloc(v6);
    *(_QWORD *)(v0 + 64) = v7;
    *v7 = v0;
    v7[1] = sub_100BE7290;
    return sub_100CA5AE8(v5, v4, v3, 1);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 32);
    sub_100757E04(&_mh_execute_header, (uint64_t)"undo(boardLibrary:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 184, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"undo(boardLibrary:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 184, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v10 = swift_release(v9);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
  }
}

uint64_t sub_100BE7290()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_100BE7314;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_10068A8D8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BE7314()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE7354()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

double sub_100BE7594()
{
  uint64_t v0;
  double result;

  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_100BE75E0()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLSetBoardTitleCommand);
}

uint64_t sub_100BE7648()
{
  return type metadata accessor for CRLSetBoardTitleCommand(0);
}

uint64_t type metadata accessor for CRLSetBoardTitleCommand(uint64_t a1)
{
  uint64_t result;

  result = qword_101408D18;
  if (!qword_101408D18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSetBoardTitleCommand);
  return result;
}

uint64_t sub_100BE768C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F2C578;
    v4[2] = &unk_100F2C590;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100BE770C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_100BE7724, 0, 0);
}

uint64_t sub_100BE7724()
{
  uint64_t v0;
  uint64_t *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
  v2 = *(int **)((swift_isaMask & **(_QWORD **)(v0 + 64)) + 0x50);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v2 + *v2);
  v4 = *v1;
  v3 = v1[1];
  v5 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_100BE77B4;
  return v7(v4, v3);
}

uint64_t sub_100BE77B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_100BE7820, 0, 0);
}

uint64_t sub_100BE7820()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 64);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack);
  swift_beginAccess(v2, v0 + 16, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
  v4 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v3 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v4 >= v3 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, *(_QWORD *)(v0 + 64));
  specialized Array._endMutation()(v6);
  swift_endAccess(v0 + 16);
  v7 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack);
  swift_beginAccess(v5 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack, v0 + 40, 1, 0);
  v8 = *v7;
  *v7 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100BE7914(void *a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  NSString v5;

  v4 = a1;
  sub_100BE797C(a3);

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_100BE797C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v11, 0, 0);
  v3 = *v2;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if (v3 < 0)
    v10 = v3;
  else
    v10 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    v7 = v6;
    v8 = swift_bridgeObjectRelease(v3);
    v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x68))(v8);

    return v9;
  }
  __break(1u);
  return result;
}

BOOL sub_100BE7AB4(char *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char *v9;
  char v10[24];

  v4 = (uint64_t *)&a1[*a3];
  swift_beginAccess(v4, v10, 0, 0);
  v5 = *v4;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v8 = v5;
    else
      v8 = v5 & 0xFFFFFFFFFFFFFF8;
    v9 = a1;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v8);

    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v6 != 0;
}

uint64_t sub_100BE7B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[40] = a4;
  v5[41] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[42] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[43] = v7;
  v5[44] = v8;
  return swift_task_switch(sub_100BE7BBC, v7, v8);
}

uint64_t sub_100BE7BBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = v0[40] + 16;
  swift_beginAccess(v1, v0 + 29, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = (_QWORD *)v0[41];
    v5 = result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
    v0[45] = v6;
    v7 = *(_QWORD *)(v5 + 8);
    swift_unknownObjectRetain(v6);

    v8 = *(int **)((swift_isaMask & *v4) + 0x58);
    v9 = v8[1];
    v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v8 + *v8);
    swift_unknownObjectRetain(v6);
    v10 = (_QWORD *)swift_task_alloc(v9);
    v0[46] = v10;
    *v10 = v0;
    v10[1] = sub_100BE7CA0;
    return v11(v6, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE7CA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[43];
    v5 = v2[44];
    v6 = sub_100BE7E0C;
  }
  else
  {
    swift_unknownObjectRelease(v2[45]);
    v4 = v2[43];
    v5 = v2[44];
    v6 = sub_100BE7D0C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BE7D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 336));
  v1 += 16;
  swift_beginAccess(v1, v0 + 256, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(v0 + 328);
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack, v0 + 184, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v7 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = *(_QWORD *)(v0 + 360);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, *(_QWORD *)(v0 + 328));
    specialized Array._endMutation()(v9);
    swift_endAccess(v0 + 184);
    swift_unknownObjectRelease(v8);

  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 360));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE7E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 336));
  swift_unknownObjectRelease_n(v1, 2);
  if (qword_1013DD878 != -1)
    swift_once(&qword_1013DD878, sub_100A05B34);
  v2 = *(_QWORD *)(v0 + 376);
  swift_beginAccess(&static OS_os_log.commandController, v0 + 160, 0, 0);
  v3 = (void *)static OS_os_log.commandController;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 304, v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Board library command execution failed with error %@", 52, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 312, v0 + 280);
  v16 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = v12;
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  sub_100757E04(&_mh_execute_header, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 255, "Command execution failed with error %@", 38, 2u, v15);
  sub_1004F5394(v15, (uint64_t)"undo()", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 255, (uint64_t)"Command execution failed with error %@", 38, 2u);
  swift_bridgeObjectRelease();
  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100BE80D4(SEL *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];

  v9 = v4;
  v10 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (objc_msgSend(v4, *a1, v11))
  {
    v4 = (uint64_t *)((char *)v4 + *(_QWORD *)a2);
    swift_beginAccess((char *)v9 + *(_QWORD *)a2, v29, 33, 0);
    a2 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  if (a2 < 0)
    v24 = a2;
  else
    v24 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_14;
LABEL_4:
  v14 = sub_100BE8990(sub_100D14ED8);
  if (v14)
  {
LABEL_8:
    v17 = (void *)v14;
    swift_endAccess(v29);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    v19 = swift_allocObject(&unk_1012994B8, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v19);
    v20 = v17;
    v21 = static MainActor.shared.getter(v20);
    v22 = (_QWORD *)swift_allocObject(a3, 48, 7);
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v19;
    v22[5] = v20;
    swift_release(v19);
    v23 = sub_100521B98((uint64_t)v13, a4, (uint64_t)v22);
    swift_release(v23);

    return;
  }
  a2 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
LABEL_15:
    if (a2 < 0)
      v26 = a2;
    else
      v26 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
    v16 = v27 - 1;
    if (!__OFSUB__(v27, 1))
      goto LABEL_7;
    goto LABEL_20;
  }
  v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v16 = v15 - 1;
  if (!__OFSUB__(v15, 1))
  {
LABEL_7:
    v14 = sub_100C5C9AC(v16);
    goto LABEL_8;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_100BE82F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[40] = a4;
  v5[41] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[42] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[43] = v7;
  v5[44] = v8;
  return swift_task_switch(sub_100BE835C, v7, v8);
}

uint64_t sub_100BE835C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = v0[40] + 16;
  swift_beginAccess(v1, v0 + 29, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = (_QWORD *)v0[41];
    v5 = result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
    v0[45] = v6;
    v7 = *(_QWORD *)(v5 + 8);
    swift_unknownObjectRetain(v6);

    v8 = *(int **)((swift_isaMask & *v4) + 0x60);
    v9 = v8[1];
    v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v8 + *v8);
    swift_unknownObjectRetain(v6);
    v10 = (_QWORD *)swift_task_alloc(v9);
    v0[46] = v10;
    *v10 = v0;
    v10[1] = sub_100BE8440;
    return v11(v6, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE8440()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[43];
    v5 = v2[44];
    v6 = sub_100BE85AC;
  }
  else
  {
    swift_unknownObjectRelease(v2[45]);
    v4 = v2[43];
    v5 = v2[44];
    v6 = sub_100BE84AC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100BE84AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 336));
  v1 += 16;
  swift_beginAccess(v1, v0 + 256, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(v0 + 328);
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack, v0 + 184, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v7 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = *(_QWORD *)(v0 + 360);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, *(_QWORD *)(v0 + 328));
    specialized Array._endMutation()(v9);
    swift_endAccess(v0 + 184);
    swift_unknownObjectRelease(v8);

  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 360));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BE85AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 336));
  swift_unknownObjectRelease_n(v1, 2);
  if (qword_1013DD878 != -1)
    swift_once(&qword_1013DD878, sub_100A05B34);
  v2 = *(_QWORD *)(v0 + 376);
  swift_beginAccess(&static OS_os_log.commandController, v0 + 160, 0, 0);
  v3 = (void *)static OS_os_log.commandController;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 304, v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Board library command execution failed with error %@", 52, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 312, v0 + 280);
  v16 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = v12;
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  sub_100757E04(&_mh_execute_header, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 270, "Command execution failed with error %@", 38, 2u, v15);
  sub_1004F5394(v15, (uint64_t)"redo()", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 270, (uint64_t)"Command execution failed with error %@", 38, 2u);
  swift_bridgeObjectRelease();
  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100BE88A0(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLBoardLibraryCommandController);
}

uint64_t sub_100BE88D0(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(_QWORD), _QWORD *a5, _QWORD *a6)
{
  a4(*(_QWORD *)(a1 + *a3));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a5));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a6));
}

uint64_t type metadata accessor for CRLBoardLibraryCommandController()
{
  return objc_opt_self(_TtC8Freeform32CRLBoardLibraryCommandController);
}

unint64_t sub_100BE893C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DE630;
  if (!qword_1013DE630)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1013DE630);
  }
  return result;
}

uint64_t sub_100BE8984()
{
  return sub_100BE8990(sub_100D14ED8);
}

uint64_t sub_100BE8990(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    result = a1(v3);
    v3 = result;
    *v1 = result;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    v7 = v6 - 1;
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(_QWORD *)(v5 + 16) = v7;
    specialized Array._endMutation()(result);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE8A08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BE8A30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_101408D84);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100BE82F0(a1, v4, v5, v7, v6);
}

uint64_t sub_100BE8AAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100BE8AE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_101408D94);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100BE7B50(a1, v4, v5, v7, v6);
}

void sub_100BE8B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t (*i)(uint64_t);
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v31;
  int64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v40 = a3;
  v39 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  __chkstk_darwin(v39);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v37 = (uint64_t)&v35 - v10;
  v11 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v11);
  v41 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLBoardIdentifier(0);
  v38 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  v43 = a1;
  v19 = *(_QWORD *)(a2 + 56);
  v35 = a2 + 56;
  v20 = 1 << *(_BYTE *)(a2 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v36 = (unint64_t)(v20 + 63) >> 6;
  v42 = a2;
  swift_bridgeObjectRetain(a2);
  v23 = 0;
  for (i = type metadata accessor for CRLBoardIdentifier; ; sub_1004B84A4((uint64_t)v15, i))
  {
    if (v22)
    {
      v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v28 = v27 | (v23 << 6);
      v29 = (uint64_t)v41;
      goto LABEL_21;
    }
    if (__OFADD__(v23++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v23 >= v36)
      goto LABEL_27;
    v31 = *(_QWORD *)(v35 + 8 * v23);
    v29 = (uint64_t)v41;
    if (!v31)
      break;
LABEL_20:
    v22 = (v31 - 1) & v31;
    v28 = __clz(__rbit64(v31)) + (v23 << 6);
LABEL_21:
    v33 = i;
    sub_1004B8460(*(_QWORD *)(v42 + 48) + *(_QWORD *)(v38 + 72) * v28, (uint64_t)v18, i);
    sub_1004DB5FC((uint64_t)v18, (uint64_t)v15);
    v34 = v29;
    sub_100C9F8F8((uint64_t)v15, v29);
    if (v4)
    {
      swift_errorRelease(v4);
      v25 = 0;
      v4 = 0;
    }
    else
    {
      v25 = *(_BYTE *)(v29 + 1);
      sub_1004B84A4(v34, type metadata accessor for CRLBoardViewModelMetadata);
    }
    i = v33;
    sub_1004B8460((uint64_t)v15, (uint64_t)v8, v33);
    v8[*(int *)(v39 + 20)] = v25;
    v26 = v37;
    sub_100AD9768(v37, (uint64_t)v8);
    sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifierAndValue);
  }
  v32 = v23 + 1;
  if (v23 + 1 >= v36)
    goto LABEL_27;
  v31 = *(_QWORD *)(v35 + 8 * v32);
  if (v31)
    goto LABEL_19;
  v32 = v23 + 2;
  if (v23 + 2 >= v36)
    goto LABEL_27;
  v31 = *(_QWORD *)(v35 + 8 * v32);
  if (v31)
    goto LABEL_19;
  v32 = v23 + 3;
  if (v23 + 3 >= v36)
    goto LABEL_27;
  v31 = *(_QWORD *)(v35 + 8 * v32);
  if (v31)
    goto LABEL_19;
  v32 = v23 + 4;
  if (v23 + 4 >= v36)
  {
LABEL_27:
    swift_release(v42);
    return;
  }
  v31 = *(_QWORD *)(v35 + 8 * v32);
  if (v31)
  {
LABEL_19:
    v23 = v32;
    goto LABEL_20;
  }
  while (1)
  {
    v23 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v23 >= v36)
      goto LABEL_27;
    v31 = *(_QWORD *)(v35 + 8 * v23);
    ++v32;
    if (v31)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

id sub_100BE8EB8(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  id result;
  char *v5;
  CKRecordID v6;
  Swift::String v7;
  objc_super v8;

  v2 = (objc_class *)type metadata accessor for CRLBoardDeleteCommand();
  v3 = (char *)objc_allocWithZone(v2);
  if (*(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers] = a1;
    v8.receiver = v3;
    v8.super_class = v2;
    return objc_msgSendSuper2(&v8, "init");
  }
  else
  {
    v5 = v3;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 88, "CRLBoardDeleteCommand received an empty board list", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardDeleteCommand received an empty board list");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 88, (uint64_t)"CRLBoardDeleteCommand received an empty board list", 50, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

id sub_100BE8FF8(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  id result;
  char *v5;
  CKRecordID v6;
  Swift::String v7;
  objc_super v8;

  v2 = (objc_class *)type metadata accessor for CRLBoardUndeleteCommand();
  v3 = (char *)objc_allocWithZone(v2);
  if (*(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers] = a1;
    v8.receiver = v3;
    v8.super_class = v2;
    return objc_msgSendSuper2(&v8, "init");
  }
  else
  {
    v5 = v3;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 116, "CRLBoardUndeleteCommand received an empty board list", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardUndeleteCommand received an empty board list");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2u, 116, (uint64_t)"CRLBoardUndeleteCommand received an empty board list", 52, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

void sub_100BE913C(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  unint64_t v47;
  _BYTE *v48;
  __n128 v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _OWORD v61[2];
  uint64_t v62;
  char *v63;

  v54 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v56 = (char *)&v51 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v9);
  v59 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLProto_Data(0);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  __chkstk_darwin(v11);
  v60 = (uint64_t *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v51 - v19;
  v21 = type metadata accessor for BinaryDecodingOptions(0, v18);
  __chkstk_darwin(v21);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  __chkstk_darwin(v24);
  v26 = (uint64_t *)((char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = 0;
  memset(v61, 0, sizeof(v61));
  v27 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v27);
  v28 = sub_100BE99E8();
  v29 = v63;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v61, 0, v23, v24, v28);
  if (v29)
  {
    sub_1004BBBC8(a1, a2);
    return;
  }
  v51 = v16;
  v52 = v13;
  v63 = v20;
  v53 = v14;
  v30 = v59;
  sub_1004CB7BC((uint64_t)v26 + *(int *)(v24 + 24), v59, (uint64_t *)&unk_1013E16F0);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v30, 1, v58);
  v32 = v60;
  if ((_DWORD)v31 == 1)
  {
    *(_OWORD *)v60 = xmmword_100EF78C0;
    UnknownStorage.init()(v31);
    sub_1004CB800(v30, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_100552FCC(v30, (uint64_t)v60);
  }
  v33 = *v32;
  v34 = v32[1];
  sub_1004BE310(*v32, v34);
  sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v33, v34);
  v35 = *v26;
  if ((*v26 & 0x8000000000000000) == 0)
  {
    v36 = a2;
    v37 = a1;
    v60 = v26;
    v38 = (uint64_t)v55;
    v39 = (uint64_t)v56;
    v40 = v53;
    if (v35 == 1)
    {
      LODWORD(v59) = 0;
      v41 = v52;
    }
    else
    {
      v41 = v52;
      if (v35)
      {
        v35 = 0;
        LODWORD(v59) = 1;
      }
      else
      {
        LODWORD(v59) = 0;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v56, v63, v41);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v39, 0, 1, v41);
    sub_1004CB7BC(v39, v38, (uint64_t *)&unk_1013E1A50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v41) == 1)
    {
      sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v42 = v36;
      v43 = v38;
      v44 = v40;
      v45 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
      v46 = v51;
      v45(v51, v43, v41);
      if ((v59 & 1) == 0)
      {
        sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
        v50 = v54;
        v45(v54, (uint64_t)v46, v41);
        sub_1004BBBC8(v37, v42);
        *(_QWORD *)&v50[*(int *)(type metadata accessor for CRLRefuseOrEndFollow(0) + 20)] = v35;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v63, v41);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v41);
      v40 = v44;
      v36 = v42;
    }
    v47 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v47, 0, 0);
    *v48 = 0;
    swift_willThrow(v49);
    sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
    sub_1004BBBC8(v37, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v63, v41);
LABEL_18:
    sub_1004B84A4((uint64_t)v60, type metadata accessor for CRLProto_RefuseOrEndFollow);
    return;
  }
  __break(1u);
}

uint64_t sub_100BE961C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100BE9B1C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100BE9678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100BE9B1C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100BE96C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (__int128 *)((char *)&v26 - v9);
  v11 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v13 = 0;
  UnknownStorage.init()(v14);
  v27 = v11;
  v15 = (uint64_t)v13 + *(int *)(v11 + 24);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v17 = v16(v15, 1, 1, v4);
  v26 = xmmword_100EF78C0;
  *v10 = xmmword_100EF78C0;
  UnknownStorage.init()(v17);
  sub_1004CB800(v15, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v10, v15);
  v16(v15, 0, 1, v4);
  v28 = v0;
  v18 = UUID.crl_data()();
  v20 = v19;
  sub_1004CB7BC(v15, (uint64_t)v3, (uint64_t *)&unk_1013E16F0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)v21 == 1)
  {
    *(_OWORD *)v7 = v26;
    UnknownStorage.init()(v21);
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_100552FCC((uint64_t)v3, (uint64_t)v7);
  }
  sub_1004BBBC8(*(_QWORD *)v7, *((_QWORD *)v7 + 1));
  *(_QWORD *)v7 = v18;
  *((_QWORD *)v7 + 1) = v20;
  sub_1004CB800(v15, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v7, v15);
  v16(v15, 0, 1, v4);
  v22 = *(_QWORD *)(v28 + *(int *)(type metadata accessor for CRLRefuseOrEndFollow(0) + 20));
  if (v22 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  else
  {
    *v13 = v22;
    v23 = sub_100BE99E8();
    v24 = Message.serializedData(partial:)(0, v27, v23);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_RefuseOrEndFollow);
    return v24;
  }
  return result;
}

uint64_t type metadata accessor for CRLRefuseOrEndFollow(uint64_t a1)
{
  uint64_t result;

  result = qword_101408DF8;
  if (!qword_101408DF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLRefuseOrEndFollow);
  return result;
}

unint64_t sub_100BE99E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101403688;
  if (!qword_101403688)
  {
    v1 = type metadata accessor for CRLProto_RefuseOrEndFollow(255);
    result = swift_getWitnessTable(&unk_100F24618, v1);
    atomic_store(result, (unint64_t *)&qword_101403688);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRefuseOrEndFollowReason()
{
  return &type metadata for CRLRefuseOrEndFollowReason;
}

uint64_t sub_100BE9A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE9A4C);
}

uint64_t sub_100BE9A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100BE9A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE9A94);
}

uint64_t sub_100BE9A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

unint64_t sub_100BE9AD8()
{
  unint64_t result;

  result = qword_101408E30;
  if (!qword_101408E30)
  {
    result = swift_getWitnessTable(&unk_100F2C6E0, &type metadata for CRLRefuseOrEndFollowReason);
    atomic_store(result, (unint64_t *)&qword_101408E30);
  }
  return result;
}

unint64_t sub_100BE9B1C()
{
  unint64_t result;

  result = qword_101408E38;
  if (!qword_101408E38)
  {
    result = swift_getWitnessTable(&unk_100F2C668, &type metadata for CRLRefuseOrEndFollowReason);
    atomic_store(result, (unint64_t *)&qword_101408E38);
  }
  return result;
}

char *sub_100BE9B60(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v14[5];
  uint64_t v15;
  objc_super v16;

  v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findInteraction]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController] = a1;
  swift_unknownObjectWeakAssign(v5, a2);
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for CRLiOSFindSession();
  v6 = a1;
  v7 = (char *)objc_msgSendSuper2(&v16, "init");
  objc_msgSend(v7, "setSearchResultDisplayStyle:", 0);
  v8 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController];
  v9 = swift_allocObject(&unk_1012995C8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v14[4] = sub_100BEA7F8;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(_QWORD *)"";
  v14[2] = sub_100BE9D28;
  v14[3] = &unk_1012995E0;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = v8;
  objc_msgSend(v12, "setSearchProgressBlock:", v10, swift_release(v11).n128_f64[0]);

  _Block_release(v10);
  return v7;
}

void sub_100BE9CB0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  _BYTE v7[24];

  if ((a2 & 1) != 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v7, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findInteraction);

      objc_msgSend(v6, "updateResultCount");
    }
  }
}

double sub_100BE9D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  double result;

  v6 = *(void (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = swift_retain(v5);
  v6(a2, a3, v7);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

id sub_100BE9D70()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController];
  v2 = objc_msgSend(v1, "findReplaceDelegate");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "interactiveCanvasControllerForFindController:", v1);
    objc_msgSend(v4, "setShowGrayOverlay:", 0, swift_unknownObjectRelease(v3).n128_f64[0]);

  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLiOSFindSession();
  return objc_msgSendSuper2(&v6, "dealloc");
}

id sub_100BE9F00()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController), "findReplaceDelegate");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = type metadata accessor for CRLiOSBoardViewController(0);
  if (!swift_dynamicCastClass(v2, v3))
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v4 = sub_100C1CAE8();
  v5 = objc_msgSend(v4, "mode");

  v6 = sub_100BEA818();
  v8 = objc_msgSend(v5, "isKindOfClass:", swift_getObjCClassFromMetadata(v6, v7));
  swift_unknownObjectRelease(v2);

  return v8;
}

void sub_100BE9FFC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  id v3;
  id v4;
  id v5;
  _BOOL8 v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  v2 = (unint64_t)objc_msgSend(v1, "searchResultsCount");
  v3 = objc_msgSend(v1, "findReplaceDelegate");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "interactiveCanvasControllerForFindController:", v1);
    swift_unknownObjectRelease(v4);
    v6 = v2 && (sub_100BE9F00() & 1) != 0;
    objc_msgSend(v5, "setShowGrayOverlay:", v6);

  }
  if ((v2 & 0x8000000000000000) != 0)
    __break(1u);
}

void sub_100BEA11C(uint64_t a1)
{
  uint64_t v1;
  _BOOL8 v2;
  void *v3;
  id Strong;

  v2 = a1 != 0;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  objc_msgSend(v3, "setSearchHighlightsEnabled:", 1);
  objc_msgSend(v3, "findNextResultInDirection:", v2);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findInteraction);
  objc_msgSend(Strong, "updateResultCount");

}

id sub_100BEA1E4()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  void *v11;

  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findInteraction;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findInteraction);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "searchText");

    if (v4)
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v7 = v6;

      swift_bridgeObjectRelease(v7);
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v5 & 0xFFFFFFFFFFFFLL;
      if (!v8)
      {
        v9 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
        v10 = String._bridgeToObjectiveC()();
        objc_msgSend(v9, "setSearchString:", v10);

        v11 = (void *)swift_unknownObjectWeakLoadStrong(v1);
        objc_msgSend(v11, "updateResultCount");

      }
    }
  }
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController), "invalidateSearchResults");
}

void sub_100BEA30C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v4;
  _BOOL8 v5;
  unsigned __int8 v6;
  void *v7;
  id v8;

  if (a3)
  {
    v4 = a3;
    v5 = objc_msgSend(v4, "wordMatchMethod") == (id)2;
    v6 = objc_msgSend(v4, "stringCompareOptions");

    a3 = (void *)(v6 & 1 | (unint64_t)(8 * v5));
  }
  v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  objc_msgSend(v7, "setSearchOptions:", a3);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSearchString:", v8);

}

uint64_t sub_100BEA464()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  v2 = objc_msgSend(v1, "findReplaceDelegate");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "interactiveCanvasControllerForFindController:", v1);
    LODWORD(v3) = objc_msgSend(v4, "editingDisabled", swift_unknownObjectRelease(v3).n128_f64[0]);

    return v3 ^ 1;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"supportsReplacement", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSFindSession.swift", 84, 2, 116, "No icc for search", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"supportsReplacement", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSFindSession.swift", 84, 2u, 116, (uint64_t)"No icc for search", 17, 2u);
    return 0;
  }
}

uint64_t type metadata accessor for CRLiOSFindSession()
{
  return objc_opt_self(_TtC8Freeform17CRLiOSFindSession);
}

uint64_t sub_100BEA7D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100BEA7F8(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_100BE9CB0(a1, a2, v2);
}

double sub_100BEA800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BEA810(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100BEA818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140BA50;
  if (!qword_10140BA50)
  {
    v1 = objc_opt_self(CRLiOSDocumentModeFindReplace);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_10140BA50);
  }
  return result;
}

char *CRLiOSAutoSizingHostingController.init<A>(defaultSize:showScrollIndicators:content:)(_BOOL8 a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  char *v8;

  v8 = sub_100BF17A8(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  return v8;
}

id CRLiOSAutoSizingHostingController.fixedLength(for:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8];
  v12 = v3;
  v13 = v4;
  swift_getAtKeyPath(&v12, a1);
  if (v11 == 0.0)
    return 0;
  v12 = v3;
  v13 = v4;
  swift_getAtKeyPath(&v12, a1);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "frame");
    v8 = v7;
    v10 = v9;

    v12 = v8;
    v13 = v10;
    swift_getAtKeyPath(&v12, a1);
    return *(id *)&v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CRLiOSAutoSizingHostingController.safeAreaInsets.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  objc_msgSend(v1, "safeAreaInsets");

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "superview");

  if (v5)
  {
    objc_msgSend(v5, "safeAreaInsets");

  }
}

void CRLiOSAutoSizingHostingController.hostingControllerDidLayoutSubviews()()
{
  _QWORD *v0;
  uint64_t v1;
  double *v2;
  double v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  id v15;
  void *v16;
  double v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  unsigned __int8 v36;
  id v37;
  void *v38;
  CGRect v39;
  CGRect v40;

  v1 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize) != 1)
  {
LABEL_18:
    *((_BYTE *)v0 + v1) = 0;
    return;
  }
  v2 = (double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize);
  if (*(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize) == 0.0)
  {
    v3 = *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize);
    v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController);
    v5 = objc_msgSend(v4, "view");
    if (!v5)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v6 = v5;
    objc_msgSend(v5, "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v39.origin.x = v8;
    v39.origin.y = v10;
    v39.size.width = v12;
    v39.size.height = v14;
    if (CGRectGetWidth(v39) < v3)
    {
      v15 = objc_msgSend(v4, "view");
      if (!v15)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v16 = v15;
      objc_msgSend(v15, "frame");
      objc_msgSend(v16, "setFrame:");

    }
  }
  if (v2[1] != 0.0)
  {
LABEL_12:
    v31 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView), "setContentSize:", *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize), *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8));
    (*(void (**)(id))((swift_isaMask & *v0) + 0xF8))(v31);
    v32 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator;
    if (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator))
    {
      v33 = objc_msgSend(v0, "presentingViewController");
      v34 = objc_msgSend(v33, "presentedViewController");

      if (v34 || (v34 = objc_msgSend(v0, "presentedViewController")) != 0)
      {
        v35 = objc_msgSend(v34, "traitCollection");
        v36 = objc_msgSend(v35, "crl_isCompactWidth");

        if ((v36 & 1) != 0)
          goto LABEL_17;
      }
      v37 = objc_msgSend(v0, "popoverPresentationController");

      if (v37)
      {
LABEL_17:
        v38 = *(void **)((char *)v0 + v32);
        *(_QWORD *)((char *)v0 + v32) = 0;

      }
    }
    goto LABEL_18;
  }
  v17 = *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8);
  v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController);
  v19 = objc_msgSend(v18, "view");
  if (!v19)
    goto LABEL_20;
  v20 = v19;
  objc_msgSend(v19, "frame");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v40.origin.x = v22;
  v40.origin.y = v24;
  v40.size.width = v26;
  v40.size.height = v28;
  if (CGRectGetHeight(v40) >= v17)
    goto LABEL_12;
  v29 = objc_msgSend(v18, "view");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "frame");
    objc_msgSend(v30, "setFrame:");

    goto LABEL_12;
  }
LABEL_22:
  __break(1u);
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.setNeedsContentSizeUpdate()()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t KeyPath;
  double v3;
  char v4;
  char v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  char v10;
  char v11;
  double v12;
  double *v13;
  id v14;
  id v15;

  v1 = v0;
  KeyPath = swift_getKeyPath(byte_100F2C730);
  v3 = COERCE_DOUBLE(CRLiOSAutoSizingHostingController.fixedLength(for:)(KeyPath));
  v5 = v4;
  swift_release(KeyPath);
  v6 = 0.0;
  if ((v5 & 1) != 0)
    v7 = 0.0;
  else
    v7 = v3;
  v8 = swift_getKeyPath(byte_100F2C750);
  v9 = COERCE_DOUBLE(CRLiOSAutoSizingHostingController.fixedLength(for:)(v8));
  v11 = v10;
  swift_release(v8);
  if ((v11 & 1) == 0)
    v6 = v9;
  if (v7 == 0.0)
    v7 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  if (v6 == 0.0)
    v6 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8];
  if (v7 == 0.0 || v6 == 0.0)
  {
    v7 = (*(double (**)(double, double))&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize])(v7, v6);
    v6 = v12;
    v13 = (double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
    *v13 = v7;
    v13[1] = v12;
    v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 1;
  }
  objc_msgSend(v1, "setPreferredContentSize:", v7, v6);
  v14 = objc_msgSend(v1, "navigationController");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setPreferredContentSize:", v7, v6);

  }
}

void CRLiOSAutoSizingHostingController.withPresentationResize<A>(_:)(void (*a1)(void))
{
  char *v1;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  char *v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  unsigned int v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  __n128 v23;
  uint64_t v24;

  v3 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 350.0, 38.0, 0.0);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 0, 0, 0.0);
  v5 = objc_msgSend(v1, "popoverPresentationController");

  if (v5)
  {
    v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = v4;
    v7 = v4;

    v8 = swift_allocObject(&unk_101299640, 32, 7);
    *(_QWORD *)(v8 + 16) = v1;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = v7;
    v10 = v1;
    sub_100BEF000((uint64_t)sub_100BF4350, v8);
    swift_release(v8);
    v11 = swift_retain(v3);
    withAnimation<A>(_:_:)(v11);

    v13 = v3;
LABEL_7:
    swift_release_n(v13, 2, v12);
    return;
  }
  v24 = v3;
  v14 = objc_msgSend(v1, "presentingViewController");
  v15 = objc_msgSend(v14, "presentedViewController");

  if (v15 || (v15 = objc_msgSend(v1, "presentedViewController")) != 0)
  {
    v16 = objc_msgSend(v15, "traitCollection");
    v17 = objc_msgSend(v16, "crl_isCompactWidth");

    if (v17)
    {
      v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator];
      *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = v4;
      v19 = v4;

      v20 = swift_allocObject(&unk_101299618, 32, 7);
      *(_QWORD *)(v20 + 16) = v1;
      *(_QWORD *)(v20 + 24) = v19;
      v21 = v19;
      v22 = v1;
      sub_100BEF000((uint64_t)sub_100BF1D00, v20);
      swift_release(v20);
      v23 = swift_retain(v24);
      withAnimation<A>(_:_:)(v23);

      v13 = v24;
      goto LABEL_7;
    }
  }
  a1();
  swift_release(v24);

}

void CRLiOSAutoSizingHostingController.performAfterAnimations(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator);
  if (v5)
  {
    v6 = swift_allocObject(&unk_101299668, 32, 7);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    v10[4] = sub_10054E858;
    v11 = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = *(_QWORD *)"";
    v10[2] = sub_1006084F4;
    v10[3] = &unk_101299680;
    v7 = _Block_copy(v10);
    v8 = v11;
    v9 = v5;
    swift_retain(a2);
    objc_msgSend(v9, "addCompletion:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);

  }
  else
  {
    a1();
  }
}

void CRLiOSAutoSizingHostingController.updateScrollTargets(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t inited;
  NSString v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[24];
  _BYTE v32[40];
  _BYTE v33[72];
  _QWORD v34[9];
  _BYTE v35[32];

  v3 = sub_1008D7828((uint64_t)_swiftEmptyArrayStorage);
  v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets, v35, 1, 0);
  *v4 = v3;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return;
  v6 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  while (1)
  {
    sub_100BF3AF4(v6, (uint64_t)v34);
    v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v8, v33);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    AnyHashable.description.getter();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    *(_QWORD *)(inited + 64) = sub_1006B06EC();
    *(_QWORD *)(inited + 32) = v10;
    if (*(_QWORD *)(*v4 + 16))
    {
      swift_bridgeObjectRetain(*v4);
      sub_1008432BC((uint64_t)v34);
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateScrollTargets(_:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 729, "Duplicate scroll target ID: %@", 30, 2u, inited);
        sub_1004F5394(inited, (uint64_t)"updateScrollTargets(_:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2u, 729, (uint64_t)"Duplicate scroll target ID: %@", 30, 2u);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    sub_1004B8968((uint64_t)v34, (uint64_t)v32);
    v13 = v34[5];
    v12 = v34[6];
    v15 = v34[7];
    v14 = v34[8];
    swift_beginAccess(v4, v31, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = (_QWORD *)*v4;
    v30 = (_QWORD *)*v4;
    *v4 = 0x8000000000000000;
    v19 = sub_1008432BC((uint64_t)v32);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_10083358C();
        v17 = v30;
        if ((v23 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_100821C6C(v22, isUniquelyReferenced_nonNull_native);
      v17 = v30;
      v24 = sub_1008432BC((uint64_t)v32);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_25;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_3:
        v7 = (_QWORD *)(v17[7] + 32 * v19);
        *v7 = v13;
        v7[1] = v12;
        v7[2] = v15;
        v7[3] = v14;
        goto LABEL_4;
      }
    }
    v17[(v19 >> 6) + 8] |= 1 << v19;
    sub_1004B8968((uint64_t)v32, v17[6] + 40 * v19);
    v26 = (_QWORD *)(v17[7] + 32 * v19);
    *v26 = v13;
    v26[1] = v12;
    v26[2] = v15;
    v26[3] = v14;
    v27 = v17[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_24;
    v17[2] = v29;
LABEL_4:
    *v4 = (unint64_t)v17;
    swift_bridgeObjectRelease();
    sub_1004B89A4((uint64_t)v32);
    swift_endAccess(v31);
    sub_100BF3B48(v34);
    v6 += 72;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
}

id CRLiOSAutoSizingHostingController.scrollToTarget<A>(_:anchor:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  CGFloat v33;
  double v34;
  double v35;
  double v36;
  double MinY;
  CGFloat v39;
  double MaxX;
  double MinX;
  BOOL v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double MaxY;
  CGFloat v48;
  _BYTE v49[24];
  _BYTE v50[40];
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  v8 = v7;
  v15 = __chkstk_darwin(a1);
  v17 = (char *)&MaxY - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
  AnyHashable.init<A>(_:)(v17, a6, a7);
  v19 = (uint64_t *)(v8 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets);
  swift_beginAccess(v8 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets, v49, 0, 0);
  v20 = *v19;
  if (!*(_QWORD *)(v20 + 16))
    return (id)sub_1004B89A4((uint64_t)v50);
  swift_bridgeObjectRetain(v20);
  v21 = sub_1008432BC((uint64_t)v50);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_1004B89A4((uint64_t)v50);
  }
  v23 = (double *)(*(_QWORD *)(v20 + 56) + 32 * v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = v23[2];
  v27 = v23[3];
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v50);
  v28 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView);
  objc_msgSend(v28, "bounds");
  v33 = v31;
  v34 = v32;
  if ((a4 & 1) != 0)
  {
    v39 = v29;
    MinY = v30;
    v65.origin.x = v25;
    v65.origin.y = v24;
    v65.size.width = v26;
    v65.size.height = v27;
    if (CGRectContainsRect(*(CGRect *)&v29, v65))
    {
      v36 = v39;
    }
    else
    {
      v51.origin.x = v25;
      v51.origin.y = v24;
      v51.size.width = v26;
      v48 = v27;
      v51.size.height = v27;
      MaxX = CGRectGetMaxX(v51);
      v52.origin.x = v39;
      v52.origin.y = MinY;
      v52.size.width = v33;
      v52.size.height = v34;
      if (CGRectGetMaxX(v52) <= MaxX)
      {
        v56.origin.x = v25;
        v56.origin.y = v24;
        v56.size.width = v26;
        v56.size.height = v48;
        v43 = CGRectGetMaxX(v56);
        v57.origin.x = v39;
        v57.origin.y = MinY;
        v57.size.width = v33;
        v57.size.height = v34;
        v36 = v43 - CGRectGetWidth(v57);
      }
      else
      {
        v53.origin.x = v25;
        v53.origin.y = v24;
        v53.size.width = v26;
        v53.size.height = v48;
        MinX = CGRectGetMinX(v53);
        v54.origin.x = v39;
        v54.origin.y = MinY;
        v54.size.width = v33;
        v54.size.height = v34;
        v42 = MinX < CGRectGetMinX(v54);
        v36 = v39;
        if (v42)
        {
          v55.origin.x = v25;
          v55.origin.y = v24;
          v55.size.width = v26;
          v55.size.height = v48;
          v36 = CGRectGetMinX(v55);
        }
      }
      v58.origin.x = v25;
      v58.origin.y = v24;
      v58.size.width = v26;
      v58.size.height = v48;
      MaxY = CGRectGetMaxY(v58);
      v59.origin.x = v39;
      v59.origin.y = MinY;
      v59.size.width = v33;
      v59.size.height = v34;
      if (CGRectGetMaxY(v59) <= MaxY)
      {
        v63.origin.x = v25;
        v63.origin.y = v24;
        v63.size.width = v26;
        v63.size.height = v48;
        v44 = CGRectGetMaxY(v63);
        v64.origin.x = v39;
        v64.origin.y = MinY;
        v64.size.width = v33;
        v64.size.height = v34;
        MinY = v44 - CGRectGetHeight(v64);
      }
      else
      {
        v60.origin.x = v25;
        v60.origin.y = v24;
        v60.size.width = v26;
        v60.size.height = v48;
        MaxY = CGRectGetMinY(v60);
        v61.origin.x = v39;
        v61.origin.y = MinY;
        v61.size.width = v33;
        v61.size.height = v34;
        if (MaxY < CGRectGetMinY(v61))
        {
          v62.origin.x = v25;
          v62.origin.y = v24;
          v62.size.width = v26;
          v62.size.height = v48;
          MinY = CGRectGetMinY(v62);
        }
      }
    }
  }
  else
  {
    v35 = v24 + v27 * *(double *)&a3;
    v36 = v25 + v26 * *(double *)&a2 - v31 * *(double *)&a2;
    MinY = v35 - v34 * *(double *)&a3;
  }
  objc_msgSend(v28, "contentSize");
  if (v45 >= v36)
    v45 = v36;
  if (v36 < 0.0)
    v45 = 0.0;
  if (v46 >= MinY)
    v46 = MinY;
  if (MinY < 0.0)
    v46 = 0.0;
  return objc_msgSend(v28, "setContentOffset:animated:", a5 & 1, v45, v46);
}

char *CRLiOSAutoSizingHostingController.__allocating_init<A>(defaultSize:showScrollIndicators:content:)(_BOOL8 a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  objc_class *v6;
  id v13;
  char *v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_100BF17A8(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  return v14;
}

uint64_t sub_100BEBA4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_100BF1778(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + qword_101409030) - 8) + 8))(a1);
  return v3;
}

double sub_100BEBA98(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  double v12;
  uint64_t v14;

  v8 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIHostingController(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  v11 = (void *)UIHostingController.__allocating_init(rootView:)(v10);
  v12 = dispatch thunk of UIHostingController.sizeThatFits(in:)(a3, a4);

  return v12;
}

uint64_t CRLiOSAutoSizingHostingController.__allocating_init<A>(defaultSize:content:)(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void (*v11)(void);
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v11 = (void (*)(void))__chkstk_darwin(a1);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, double, double))(v6 + 152))(2, v13, a5, a6, a2, a3);
}

void CRLiOSAutoSizingHostingController.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  v2 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  *(_QWORD *)&v0[v2] = sub_1008D7828((uint64_t)_swiftEmptyArrayStorage);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSAutoSizingHostingController.swift", 48, 2, 163, 0);
  __break(1u);
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.loadView()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v0, "setView:", v1);

}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  void *v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;

  v1 = v0;
  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  objc_msgSendSuper2(&v40, "viewDidLoad");
  objc_msgSend(v0, "setEdgesForExtendedLayout:", 0);
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = v2;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView];
  objc_msgSend(v2, "addSubview:", v4);

  v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EF7310;
  v7 = objc_msgSend(v4, "topAnchor");
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "safeAreaLayoutGuide");

  v11 = objc_msgSend(v10, "topAnchor");
  v12 = objc_msgSend(v7, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 32) = v12;
  v13 = objc_msgSend(v4, "leadingAnchor");
  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "leadingAnchor");

  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v6 + 40) = v17;
  v18 = objc_msgSend(v4, "trailingAnchor");
  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, "trailingAnchor");

  v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);
  *(_QWORD *)(v6 + 48) = v22;
  v23 = objc_msgSend(v4, "bottomAnchor");
  v24 = objc_msgSend(v1, "view");
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v25 = v24;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = objc_msgSend(v25, "bottomAnchor");

  v28 = objc_msgSend(v23, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v6 + 56) = v28;
  v39 = v6;
  specialized Array._endMutation()(v29);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v31 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController];
  objc_msgSend(v1, "addChildViewController:", v31);
  v32 = objc_msgSend(v31, "view");
  if (!v32)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v33 = v32;
  objc_msgSend(v32, "setBackgroundColor:", 0);
  objc_msgSend(v4, "addSubview:", v33);
  v34 = 10000.0;
  if (*(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize] <= 0.0)
    v35 = 10000.0;
  else
    v35 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  if (*(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8] > 0.0)
    v34 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8];
  objc_msgSend(v33, "setFrame:", 0.0, 0.0, v35, v34);
  objc_msgSend(v31, "didMoveToParentViewController:", v1);
  v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy];
  KeyPath = swift_getKeyPath(byte_100F2C770);
  v38 = swift_getKeyPath(byte_100F2C798);
  LOBYTE(v39) = 0;
  swift_retain(v36);
  static Published.subscript.setter(&v39, v36, KeyPath, v38);
  objc_msgSend(v33, "layoutIfNeeded");

}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  objc_super v14;

  v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  objc_msgSendSuper2(&v14, "viewWillAppear:", a1);
  v4 = objc_msgSend(v2, "popoverPresentationController");
  v5 = v4;
  if (v4)

  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy];
  KeyPath = swift_getKeyPath(byte_100F2C7B8);
  v8 = swift_getKeyPath(byte_100F2C7E0);
  static Published.subscript.getter(&v13, v6, KeyPath, v8);
  swift_release(KeyPath);
  *(_QWORD *)&v9 = swift_release(v8).n128_u64[0];
  if ((v5 != 0) != v13)
  {
    v10 = v5 != 0;
    v11 = swift_getKeyPath(byte_100F2C7B8, v9);
    v12 = swift_getKeyPath(byte_100F2C7E0);
    v13 = v10;
    swift_retain(v6);
    static Published.subscript.setter(&v13, v6, v11, v12);
  }
}

uint64_t sub_100BEC3CC()
{
  return sub_100638F84((uint64_t)&unk_100F2C7B8, (uint64_t)&unk_100F2C7E0);
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewWillLayoutSubviews()()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char **v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  double v26;
  unint64_t v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  double v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  char v41;
  double v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  void *v50;
  id v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  const char *v64;
  uint64_t v65;
  char **v66;
  void (*v67)(double *, _QWORD);
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  void *v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  void *v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  char v96[48];
  double v97;
  double v98;
  double v99;
  double v100;
  objc_super v101;

  v1 = v0;
  v101.receiver = v0;
  v101.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  objc_msgSendSuper2(&v101, "viewWillLayoutSubviews");
  CRLiOSAutoSizingHostingController.safeAreaInsets.getter();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = &selRef_transformGuides_forLayout_;
  v11 = objc_msgSend(v0, "view");
  if (!v11)
    goto LABEL_46;
  v12 = v11;
  v13 = objc_msgSend(v11, "effectiveUserInterfaceLayoutDirection");

  if (v13)
    v14 = v9;
  else
    v14 = v5;
  if (!v13)
    v5 = v9;
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy];
  KeyPath = swift_getKeyPath(aP_16);
  v17 = swift_getKeyPath(aP_17);
  static Published.subscript.getter(&v97, v15, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  if ((static EdgeInsets.== infix(_:_:)(v97, v98, v99, v100, v3, v14, v7, v5) & 1) == 0)
  {
    v18 = swift_getKeyPath(aP_16);
    v19 = swift_getKeyPath(aP_17);
    v97 = v3;
    v98 = v14;
    v99 = v7;
    v100 = v5;
    swift_retain(v15);
    static Published.subscript.setter(&v97, v15, v18, v19);
  }
  v20 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  *(double *)&v21 = COERCE_DOUBLE(swift_initStackObject(v20, v96));
  *(_OWORD *)(v21 + 16) = xmmword_100EF5560;
  v22 = byte_100F2C730;
  *(_QWORD *)(v21 + 32) = swift_getKeyPath(byte_100F2C730);
  v23 = swift_getKeyPath(byte_100F2C750);
  *(_QWORD *)(v21 + 40) = v23;
  v97 = *(double *)&v21;
  specialized Array._endMutation()(v23);
  v24 = 0;
  v25 = 0;
  v26 = v97;
  v89 = v97;
  v90 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView;
  v27 = *(_QWORD *)&v97 & 0xC000000000000001;
  v94 = *(_QWORD *)&v97 & 0xFFFFFFFFFFFFFF8;
  v92 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController;
  v93 = *(_QWORD *)&v97 + 32;
  v28 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  v29 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8];
  v91 = *(_QWORD *)&v97 & 0xC000000000000001;
  while (1)
  {
    v30 = v24;
    if (v27)
    {
      *(double *)&v31 = COERCE_DOUBLE(specialized _ArrayBuffer._getElementSlowPath(_:)(v25, *(_QWORD *)&v26));
      goto LABEL_15;
    }
    if (v25 >= *(_QWORD *)(v94 + 16))
      break;
    v31 = *(uint64_t *)(v93 + 8 * v25);
    swift_retain(v31);
LABEL_15:
    v97 = v28;
    v98 = v29;
    swift_getAtKeyPath(&v97, v31);
    if (v95 != 0.0)
    {
      v97 = v28;
      v98 = v29;
      swift_getAtKeyPath(&v97, v31);
      v32 = v95;
      v33 = objc_msgSend(v1, v10[271]);
      if (!v33)
        goto LABEL_41;
      v34 = v33;
      objc_msgSend(v33, "frame");
      v36 = v35;
      v38 = v37;

      v97 = v36;
      v98 = v38;
      swift_getAtKeyPath(&v97, v31);
      if (v95 <= 0.0)
        v39 = v32;
      else
        v39 = v95;
      v97 = v28;
      v98 = v29;
      swift_retain(v31);
      swift_getAtKeyPath(&v97, v31);
      swift_release(v31);
      if (v39 != v95)
      {
        sub_1004B804C(&qword_101408EE8);
        v97 = *(double *)&v31;
        *(double *)&v40 = COERCE_DOUBLE(swift_getKeyPath(v22));
        v95 = *(double *)&v40;
        v41 = dispatch thunk of static Equatable.== infix(_:_:)(&v97, &v95);
        swift_release(v40);
        v42 = 0.0;
        if ((v41 & 1) != 0)
        {
          v43 = objc_msgSend(v1, v10[271], 0.0);
          if (!v43)
            goto LABEL_43;
          v44 = v43;
          objc_msgSend(v43, "safeAreaInsets");
          v46 = v45;
          v48 = v47;

          v49 = objc_msgSend(v1, v10[271]);
          if (!v49)
            goto LABEL_44;
          v50 = v49;
          v51 = objc_msgSend(v49, "superview");

          if (v51)
          {
            objc_msgSend(v51, "safeAreaInsets");
            v53 = v52;
            v55 = v54;

            if (v46 == 0.0 && v48 == 0.0 && v53 > 0.0 && v55 > 0.0)
            {
              v46 = v53;
              v48 = v55;
            }
          }
          v42 = v46 + v48;
        }
        v56 = v39 - v42;
        v57 = swift_getKeyPath(a8);
        v58 = swift_getKeyPath(byte_100F2C870);
        swift_retain(v31);
        static Published.subscript.getter(&v97, v15, v57, v58);
        swift_release(v57);
        swift_release(v58);
        swift_getAtKeyPath(&v97, v31);
        swift_release(v31);
        v59 = v95;
        if (v95 != v56)
        {
          v60 = swift_getKeyPath(a8, v95);
          v61 = swift_getKeyPath(byte_100F2C870);
          v62 = static Published.subscript.modify(&v97, v15, v60, v61);
          v63 = v1;
          v64 = v22;
          v65 = v15;
          v66 = v10;
          v67 = (void (*)(double *, _QWORD))v62;
          v95 = v56;
          swift_setAtWritableKeyPath(v68, v31);
          v67(&v97, 0);
          v10 = v66;
          v15 = v65;
          v22 = v64;
          v1 = v63;
          v26 = v89;
          swift_release(v60);
          *(_QWORD *)&v59 = swift_release(v61).n128_u64[0];
        }
        v69 = *(void **)&v1[v92];
        v70 = objc_msgSend(v69, v10[271], v59);
        if (!v70)
          goto LABEL_42;
        v71 = v70;
        objc_msgSend(v70, "frame", swift_retain(v31).n128_f64[0]);
        v73 = v72;
        v75 = v74;

        v97 = v73;
        v98 = v75;
        swift_getAtKeyPath(&v97, v31);
        swift_release(v31);
        v27 = v91;
        if (v95 != v39)
        {
          v76 = objc_msgSend(v69, v10[271], v95);
          if (!v76)
            goto LABEL_45;
          v77 = v76;
          objc_msgSend(v76, "frame");
          v79 = v78;
          v81 = v80;
          v97 = v82;
          v98 = v83;
          v95 = v39;
          swift_setAtWritableKeyPath(&v97, v31);
          objc_msgSend(v77, "setFrame:", v79, v81, v97, v98);

        }
        v84 = *(void **)&v1[v90];
        objc_msgSend(v84, "contentSize", swift_retain(v31).n128_f64[0]);
        v97 = v85;
        v98 = v86;
        swift_getAtKeyPath(&v97, v31);
        swift_release(v31);
        if (v95 != v39)
        {
          objc_msgSend(v84, "contentSize", v95);
          v97 = v87;
          v98 = v88;
          v95 = v39;
          swift_setAtWritableKeyPath(&v97, v31);
          objc_msgSend(v84, "setContentSize:", v97, v98);
        }
      }
    }
    swift_release(v31);
    v24 = 1;
    v25 = 1;
    if ((v30 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
}

double sub_100BECAD4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100F2C800);
  v2 = swift_getKeyPath(&unk_100F2C828);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_100BECB48()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100F2C848);
  v2 = swift_getKeyPath(&unk_100F2C870);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id CRLiOSAutoSizingHostingController.navigationItem.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController), "navigationItem");
}

uint64_t sub_100BECC48()
{
  return sub_100638F84((uint64_t)byte_100F2C770, (uint64_t)byte_100F2C798);
}

void sub_100BECC5C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)byte_100F2C770, (uint64_t)byte_100F2C798, a2);
}

uint64_t sub_100BECC70(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100BECE7C(a1, a2, a3, a4, (uint64_t)byte_100F2C770, (uint64_t)byte_100F2C798);
}

double sub_100BECC84@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F2C848);
  v5 = swift_getKeyPath(&unk_100F2C870);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100BECD00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2C848);
  v6 = swift_getKeyPath(&unk_100F2C870);
  v8[0] = v2;
  v8[1] = v3;
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

double sub_100BECD78@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F2C800);
  v5 = swift_getKeyPath(&unk_100F2C828);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_100BECDF4(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F2C800);
  v6 = swift_getKeyPath(&unk_100F2C828);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

uint64_t sub_100BECE7C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_100BECEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__showEmptyView;
  v2 = sub_1004B804C(&qword_10140B9D0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__frameSize;
  v5 = sub_1004B804C(&qword_1014092E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__safeAreaInsets;
  v7 = sub_1004B804C(&qword_1014092E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v3(v0+ OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__isPresentedInsidePopover, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100BECFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];

  v20 = sub_1004B804C(&qword_1014092E8);
  v1 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1014092E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_10140B9D0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(v0 + 16);
  v12 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__showEmptyView;
  LOBYTE(v21[0]) = 0;
  Published.init(initialValue:)(v21, &type metadata for Bool);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v13(v12, v11, v8);
  v14 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__frameSize;
  type metadata accessor for CGSize(0);
  v21[0] = 0uLL;
  Published.init(initialValue:)(v21, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v7, v4);
  v16 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__safeAreaInsets;
  memset(v21, 0, sizeof(v21));
  Published.init(initialValue:)(v21, &type metadata for EdgeInsets);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v16, v3, v20);
  v17 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__isPresentedInsidePopover;
  LOBYTE(v21[0]) = 0;
  Published.init(initialValue:)(v21, &type metadata for Bool);
  v13(v17, v11, v8);
  return v0;
}

uint64_t sub_100BED1A4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v2, a1);
  *a2 = result;
  return result;
}

void sub_100BED1CC()
{
  xmmword_101408E78 = 0uLL;
}

double sub_100BED1DC@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1013DDD90 != -1)
    swift_once(&qword_1013DDD90, sub_100BED1CC);
  result = *(double *)&xmmword_101408E78;
  *a1 = xmmword_101408E78;
  return result;
}

void sub_100BED238(void (**a1)(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_1007706EC;
  a1[1] = 0;
}

double sub_100BED248@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  char v27;
  uint64_t v28;
  uint64_t (*v29)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;

  v10 = sub_1004B804C(&qword_101409330);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)&v13 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0
    || (KeyPath = swift_getKeyPath(byte_100F2C770, v13),
        v16 = swift_getKeyPath(byte_100F2C798),
        swift_retain(a3),
        static Published.subscript.getter(&v32, v17, KeyPath, v16),
        swift_release(a3),
        swift_release(KeyPath),
        v18 = swift_release(v16),
        v32 == 1))
  {
    v29 = 0;
    v30 = 0;
    v31 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v18);
    v19 = *(unsigned __int8 *)(v11 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject(&unk_101299CD0, v21 + 17, v19 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v22 + v20, v14, v10);
    v23 = v22 + v21;
    *(_QWORD *)v23 = a2;
    *(_QWORD *)(v23 + 8) = a3;
    *(_BYTE *)(v23 + 16) = 0;
    v29 = sub_100BF4074;
    v30 = v22;
    v31 = 1;
    swift_retain(a3);
  }
  v24 = sub_1004B804C(&qword_101409338);
  v25 = sub_1004CBA30(&qword_101409340, &qword_101409338, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  _ConditionalContent<>.init(storage:)(&v29, &type metadata for EmptyView, v24, &protocol witness table for EmptyView, v25);
  result = *(double *)&v32;
  v27 = v33;
  *(_OWORD *)a5 = v32;
  *(_BYTE *)(a5 + 16) = v27;
  return result;
}

uint64_t sub_100BED424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (**v68)(uint64_t *);
  uint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t *);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *Strong;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD v126[3];
  _OWORD v127[3];

  v110 = a5;
  v114 = a3;
  v103 = a2;
  v107 = a1;
  v124 = a6;
  v7 = type metadata accessor for CoordinateSpace(0);
  v121 = *(_QWORD *)(v7 - 8);
  v122 = v7;
  __chkstk_darwin(v7);
  v119 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1004B804C(&qword_101409348);
  __chkstk_darwin(v102);
  v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1004B804C(&qword_101409350);
  __chkstk_darwin(v101);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1004B804C(&qword_101409358);
  __chkstk_darwin(v99);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1004B804C(&qword_101409360);
  __chkstk_darwin(v100);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1004B804C(&qword_101409368);
  __chkstk_darwin(v104);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1004B804C(&qword_101409370);
  __chkstk_darwin(v105);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1004B804C(&qword_101409378);
  __chkstk_darwin(v106);
  v109 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1004B804C(&qword_101409380);
  __chkstk_darwin(v108);
  v112 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1004B804C(&qword_101409388);
  __chkstk_darwin(v111);
  v116 = (uint64_t)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_1004B804C(&qword_101409390);
  __chkstk_darwin(v113);
  v118 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1004B804C(&qword_101409398);
  __chkstk_darwin(v115);
  v123 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1004B804C(&qword_1014093A0);
  *(_QWORD *)&v26 = __chkstk_darwin(v117).n128_u64[0];
  v120 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a8, v26);
  v29 = swift_getKeyPath(byte_100F2C870);
  swift_retain(a4);
  static Published.subscript.getter(v127, v30, KeyPath, v29);
  swift_release(a4);
  swift_release(KeyPath);
  v31 = swift_release(v29).n128_u64[0];
  v32 = 0;
  v33 = *(double *)v127;
  if (*(double *)v127 > 0.0)
  {
    v34 = swift_getKeyPath(a8, *(double *)&v31);
    v35 = swift_getKeyPath(byte_100F2C870);
    swift_retain(a4);
    static Published.subscript.getter(v127, v36, v34, v35);
    swift_release(a4);
    swift_release(v34);
    v31 = swift_release(v35).n128_u64[0];
    v32 = *(_QWORD *)&v127[0];
  }
  v37 = swift_getKeyPath(a8, *(double *)&v31);
  v38 = swift_getKeyPath(byte_100F2C870);
  swift_retain(a4);
  static Published.subscript.getter(v127, v39, v37, v38);
  swift_release(a4);
  swift_release(v37);
  *(_QWORD *)&v40 = swift_release(v38).n128_u64[0];
  v41 = *((double *)v127 + 1);
  if (*((double *)v127 + 1) > 0.0)
  {
    v45 = swift_getKeyPath(a8, v40);
    v46 = swift_getKeyPath(byte_100F2C870);
    swift_retain(a4);
    static Published.subscript.getter(v127, v47, v45, v46);
    swift_release(a4);
    swift_release(v45);
    swift_release(v46);
    v42 = *((_QWORD *)&v127[0] + 1);
    if (!sub_1003A91F4())
      goto LABEL_5;
  }
  else
  {
    v42 = 0;
    if (!sub_1003A91F4())
    {
LABEL_5:
      v43 = static Alignment.topLeading.getter();
      goto LABEL_8;
    }
  }
  v43 = static Alignment.topTrailing.getter();
LABEL_8:
  _FrameLayout.init(width:height:alignment:)(v126, v32, v33 <= 0.0, v42, v41 <= 0.0, v43, v44);
  v48 = sub_1004B804C(&qword_101409330);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v10, v103, v48);
  v49 = &v10[*(int *)(v102 + 36)];
  v50 = v126[1];
  *(_OWORD *)v49 = v126[0];
  *((_OWORD *)v49 + 1) = v50;
  *((_OWORD *)v49 + 2) = v126[2];
  sub_1004CB7BC((uint64_t)v10, (uint64_t)v12, &qword_101409348);
  *(_WORD *)&v12[*(int *)(v101 + 36)] = 257;
  sub_1004CB800((uint64_t)v10, &qword_101409348);
  sub_1004CB7BC((uint64_t)v12, (uint64_t)v14, &qword_101409350);
  *(_QWORD *)&v14[*(int *)(v99 + 36)] = a4;
  v51 = sub_1004CB800((uint64_t)v12, &qword_101409350);
  v52 = static Alignment.center.getter(v51);
  v54 = v53;
  sub_1004CB7BC((uint64_t)v14, (uint64_t)v16, &qword_101409358);
  v55 = (uint64_t *)&v16[*(int *)(v100 + 36)];
  *v55 = v52;
  v55[1] = v54;
  v56 = sub_1004CB800((uint64_t)v14, &qword_101409358);
  v57 = GeometryProxy.size.getter(v56);
  GeometryProxy.size.getter(v58);
  v60 = v59;
  if (sub_1003A91F4())
    v61 = static Alignment.topTrailing.getter();
  else
    v61 = static Alignment.topLeading.getter();
  _FrameLayout.init(width:height:alignment:)(v127, *(_QWORD *)&v57, 0, v60, 0, v61, v62);
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v18, &qword_101409360);
  v63 = &v18[*(int *)(v104 + 36)];
  v64 = v127[1];
  *(_OWORD *)v63 = v127[0];
  *((_OWORD *)v63 + 1) = v64;
  *((_OWORD *)v63 + 2) = v127[2];
  sub_1004CB800((uint64_t)v16, &qword_101409360);
  v65 = swift_allocObject(&unk_101299CF8, 33, 7);
  v66 = v114;
  *(_QWORD *)(v65 + 16) = v114;
  *(_QWORD *)(v65 + 24) = a4;
  v67 = v110 & 1;
  *(_BYTE *)(v65 + 32) = v110 & 1;
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v20, &qword_101409368);
  v68 = (void (**)(uint64_t *))&v20[*(int *)(v105 + 36)];
  *v68 = sub_100BF4104;
  v68[1] = (void (*)(uint64_t *))v65;
  swift_retain(a4);
  sub_1004CB800((uint64_t)v18, &qword_101409368);
  v69 = swift_allocObject(&unk_101299D20, 33, 7);
  *(_QWORD *)(v69 + 16) = v66;
  *(_QWORD *)(v69 + 24) = a4;
  *(_BYTE *)(v69 + 32) = v67;
  v70 = v109;
  sub_1004CB7BC((uint64_t)v20, v109, &qword_101409370);
  v71 = (void (**)(uint64_t *))(v70 + *(int *)(v106 + 36));
  *v71 = sub_100BF4110;
  v71[1] = (void (*)(uint64_t *))v69;
  swift_retain(a4);
  sub_1004CB800((uint64_t)v20, &qword_101409370);
  v72 = swift_getKeyPath(byte_100F2C890);
  v125 = a4;
  v73 = v119;
  AnyHashable.init<A>(_:)(&v125, &type metadata for ObjectIdentifier, &protocol witness table for ObjectIdentifier);
  v75 = v121;
  v74 = v122;
  (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v73, enum case for CoordinateSpace.named(_:), v122);
  v76 = (uint64_t)v112;
  v77 = (uint64_t *)&v112[*(int *)(v108 + 36)];
  v78 = sub_1004B804C(&qword_1014093A8);
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v77 + *(int *)(v78 + 28), v73, v74);
  *v77 = v72;
  sub_1004CB7BC(v70, v76, &qword_101409378);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v74);
  sub_1004CB800(v70, &qword_101409378);
  v79 = swift_getKeyPath(byte_100F2C918);
  v80 = swift_getKeyPath(byte_100F2C7B8);
  v81 = swift_getKeyPath(byte_100F2C7E0);
  swift_retain(a4);
  static Published.subscript.getter(&v125, v82, v80, v81);
  swift_release(a4);
  swift_release(v80);
  swift_release(v81);
  LOBYTE(v81) = v125;
  v83 = v116;
  sub_1004CB7BC(v76, v116, &qword_101409380);
  v84 = v83 + *(int *)(v111 + 36);
  *(_QWORD *)v84 = v79;
  *(_BYTE *)(v84 + 8) = v81;
  sub_1004CB800(v76, &qword_101409380);
  v85 = swift_getKeyPath(byte_100F2CE90);
  v86 = a4 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 16);
  swift_unknownObjectWeakInit(&v125);

  v88 = (uint64_t)v118;
  v89 = (uint64_t *)&v118[*(int *)(v113 + 36)];
  sub_100BF1EE0((uint64_t)&v125, (uint64_t)(v89 + 1));
  *v89 = v85;
  sub_1004CB7BC(v83, v88, &qword_101409388);
  sub_1004CBB0C((uint64_t)&v125);
  sub_1004CB800(v83, &qword_101409388);
  v90 = swift_getKeyPath(byte_100F2CEB8);
  v91 = (void *)swift_unknownObjectWeakLoadStrong(v86);
  swift_unknownObjectWeakInit(&v125);

  v92 = (uint64_t)v123;
  v93 = (uint64_t *)&v123[*(int *)(v115 + 36)];
  sub_100BF1EE0((uint64_t)&v125, (uint64_t)(v93 + 1));
  *v93 = v90;
  sub_1004CB7BC(v88, v92, &qword_101409390);
  sub_1004CBB0C((uint64_t)&v125);
  sub_1004CB800(v88, &qword_101409390);
  v94 = swift_getKeyPath(asc_100F2CEE0);
  v95 = (void *)swift_unknownObjectWeakLoadStrong(v86);
  swift_unknownObjectWeakInit(&v125);

  v96 = (uint64_t)v120;
  v97 = (uint64_t *)&v120[*(int *)(v117 + 36)];
  sub_100BF1EE0((uint64_t)&v125, (uint64_t)(v97 + 1));
  *v97 = v94;
  sub_1004CB7BC(v92, v96, &qword_101409398);
  sub_1004CBB0C((uint64_t)&v125);
  sub_1004CB800(v92, &qword_101409398);
  return sub_1004C4938(v96, v124, &qword_1014093A0);
}

void sub_100BEDF20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *Strong;
  _QWORD *v6;

  v3 = *a1;
  v4 = a1[1];
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v6 = &Strong[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
    *v6 = v3;
    v6[1] = v4;
    Strong[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 1;

  }
}

void sub_100BEDF74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  id v5;

  v3 = *a1;
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v5 = (id)Strong;
    CRLiOSAutoSizingHostingController.updateScrollTargets(_:)(v3);

  }
}

uint64_t EnvironmentValues.crl_scrollViewContentCoordinateSpace.getter()
{
  unint64_t v0;

  v0 = sub_100BF1E14();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v0);
}

uint64_t sub_100BEE000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  unint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for CoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v13 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v13 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  v11 = sub_100BF1E14();
  EnvironmentValues.subscript.setter(v5, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t EnvironmentValues.crl_scrollViewContentCoordinateSpace.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for CoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = sub_100BF1E14();
  EnvironmentValues.subscript.setter(v6, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t EnvironmentValues.crl_isPresentedInsidePopover.getter()
{
  unint64_t v0;
  unsigned __int8 v2;

  v0 = sub_100BF1E58();
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v0);
  return v2;
}

uint64_t EnvironmentValues.crl_isPresentedInsidePopover.setter(char a1)
{
  unint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_100BF1E58();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v1);
}

uint64_t EnvironmentValues.crl_withPresentationResize.getter()
{
  unint64_t v0;

  v0 = sub_100BF1E9C();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, v0);
}

uint64_t EnvironmentValues.crl_withPresentationResize.setter(uint64_t a1)
{
  return sub_100BEE37C(a1, (uint64_t (*)(uint64_t, _BYTE *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1E9C, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, sub_1004CBB0C);
}

uint64_t EnvironmentValues.crl_performAfterAnimations.getter()
{
  unint64_t v0;

  v0 = sub_100BF1EF0();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, v0);
}

uint64_t EnvironmentValues.crl_performAfterAnimations.setter(uint64_t a1)
{
  return sub_100BEE37C(a1, (uint64_t (*)(uint64_t, _BYTE *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1EF0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, sub_1004CBB0C);
}

uint64_t EnvironmentValues.crl_scrollToTarget.getter()
{
  unint64_t v0;

  v0 = sub_100BF1F34();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, v0);
}

uint64_t sub_100BEE2DC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_BYTE *, uint64_t *), uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(_BYTE *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[8];

  a5(a1, (uint64_t *)v16);
  v12 = a5(v16, &v15);
  v13 = a6(v12);
  EnvironmentValues.subscript.setter(&v15, a7, a7, v13);
  return a8(v16);
}

uint64_t EnvironmentValues.crl_scrollToTarget.setter(uint64_t a1)
{
  return sub_100BEE37C(a1, (uint64_t (*)(uint64_t, _BYTE *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1F34, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, sub_1004CBB0C);
}

uint64_t sub_100BEE37C(uint64_t a1, uint64_t (*a2)(uint64_t, _BYTE *), uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[8];

  v9 = a2(a1, v12);
  v10 = a3(v9);
  EnvironmentValues.subscript.setter(v12, a4, a4, v10);
  return a5(a1);
}

uint64_t sub_100BEE3F0()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

double sub_100BEE408@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100BED248(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_BYTE *)(v2 + 16), a2);
}

id sub_100BEE414(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = sub_100BEE444();

  return v2;
}

void *sub_100BEE444()
{
  return sub_100BEE7BC((uint64_t)&unk_101299B38, (uint64_t (*)(id))sub_100BF3AEC);
}

void sub_100BEE468(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100BEE4B0(a3);

}

void sub_100BEE4B0(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    v11 = a1;
    v1 = objc_msgSend(v11, "customView");
    if (v1)
    {

      v2 = sub_100BEE7BC((uint64_t)&unk_101299B10, (uint64_t (*)(id))CRLWPShapeLayout.descendersCannotClip.getter);
      if (v2)
      {
        v3 = v2;
        v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v5 = swift_allocObject(v4, 48, 7);
        *(_OWORD *)(v5 + 16) = xmmword_100EF5560;
        *(_QWORD *)(v5 + 32) = v3;
        *(_QWORD *)(v5 + 40) = v11;
        v12 = v5;
        specialized Array._endMutation()(v5);
        v6 = v11;
        v7 = v3;
        sub_100BEE684(v12);

      }
      else
      {
        v8 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v9 = swift_allocObject(v8, 40, 7);
        *(_OWORD *)(v9 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v9 + 32) = v11;
        v13 = v9;
        specialized Array._endMutation()(v9);
        v10 = v11;
        sub_100BEE684(v13);
      }
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"rightBarButtonItem", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 511, "Unexpected bar button item.", 27, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rightBarButtonItem", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2u, 511, (uint64_t)"Unexpected bar button item.", 27, 2u);
    }

  }
}

void sub_100BEE684(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[5];
  uint64_t v11;

  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_101299A98, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject(&unk_101299AC0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100BF3AB0;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_1005B71BC;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100618D24;
  v10[3] = &unk_101299AD8;
  v6 = _Block_copy(v10);
  v7 = v11;
  v8 = v1;
  swift_retain(v5);
  objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 108, 520, 52, 1);
  swift_release(v4);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void *sub_100BEE7BC(uint64_t a1, uint64_t (*a2)(id))
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  v5 = sub_100BEE8B4();
  if (!v5)
    return 0;
  v6 = v5;
  v7 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v7 + 16) = v2;
  v8 = v2;
  v9 = sub_100BF15D4(v6, a2);
  swift_release(v7);
  swift_bridgeObjectRelease();
  return v9;
}

Class sub_100BEE848(void *a1)
{
  id v1;
  uint64_t v2;
  NSArray v3;

  v1 = a1;
  v2 = sub_100BEE8B4();

  if (v2)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.isa = 0;
  }
  return v3.super.isa;
}

uint64_t sub_100BEE8B4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType(v0);
  v1 = objc_msgSendSuper2(&v6, "rightBarButtonItems");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

void sub_100BEE938(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  id v6;

  v3 = a3;
  if (a3)
  {
    v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v5);
  }
  v6 = a1;
  sub_100BEE684(v3);

}

void sub_100BEE9A8(uint64_t *a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  objc_super v9;

  isa = a2;
  v6 = *a1;
  v7 = swift_isaMask;
  if (a2)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  v8 = (objc_class *)type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem(0, *(_QWORD *)((v7 & v6) + 0x50), *(_QWORD *)((v7 & v6) + 0x58), a4);
  v9.receiver = a1;
  v9.super_class = v8;
  objc_msgSendSuper2(&v9, "setRightBarButtonItems:", isa);

}

BOOL sub_100BEEA40(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "customView");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id sub_100BEEA80(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithTitle:", v5);

  return v6;
}

id sub_100BEEAEC(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  NSString v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v8.receiver = v2;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, "initWithTitle:", v5);

  return v6;
}

id sub_100BEEB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  return sub_100BEEAEC(v3, v4);
}

id sub_100BEEB8C(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType(v1);
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_100BEEBDC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100BEEB8C(a3);
}

id sub_100BEEC00()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(qword_101409030 + (swift_isaMask & *v0) + 16);
  v2 = *(void **)((char *)v0 + v1);
  if (v2)
  {
    v3 = *(id *)((char *)v0 + v1);
  }
  else
  {
    v4 = sub_100BEEC7C(v0);
    v5 = *(void **)((char *)v0 + v1);
    *(uint64_t *)((char *)v0 + v1) = (uint64_t)v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100BEEC7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *a1;
  v2 = swift_isaMask;
  v3 = objc_msgSend(a1, "title");
  if (v3)
  {
    v5 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0xE000000000000000;
  }
  type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem(0, *(_QWORD *)((v2 & v1) + qword_101409030), *(_QWORD *)((v2 & v1) + qword_101409030 + 8), v4);
  return sub_100BEEA80(v7, v9);
}

id sub_100BEED1C(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_100BEED4C();

  return v2;
}

void sub_100BEED50()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v4, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "parentViewController");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for CRLiOSAutoSizingHostingController();
    if (swift_dynamicCastClass(v2, v3))
      CRLiOSAutoSizingHostingController.hostingControllerDidLayoutSubviews()();

  }
}

void sub_100BEEDCC(void *a1)
{
  id v1;

  v1 = a1;
  sub_100BEED50();

}

void *sub_100BEEE00(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100BEEE40(a1, a2);
}

void *sub_100BEEE40(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v15;

  v5 = (uint64_t *)((swift_isaMask & *v2) + qword_101409030);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v15 - v8;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(v10 + 16)) = 0;
  (*(void (**)(char *))(v7 + 16))((char *)&v15 - v8);
  v11 = (void *)UIHostingController.init(coder:rootView:)(a1, v9);
  v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v13 = v11;
  v12(a2, v6);
  if (v11)

  return v11;
}

id sub_100BEEF0C(void *a1)
{
  _QWORD *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)((char *)v1 + *(_QWORD *)(qword_101409030 + (swift_isaMask & *v1) + 16)) = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_100BEEF84(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100BEEF0C(a3);
}

void sub_100BEEFA8()
{
  _QWORD *v0;

}

void sub_100BEEFD4(_QWORD *a1)
{

}

uint64_t sub_100BEF000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  void *v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v27 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  static DispatchTime.now()(v18);
  + infix(_:_:)(v12, 0.05);
  v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28(v12, v9);
  aBlock[4] = v27;
  v33 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101299B50;
  v19 = _Block_copy(aBlock);
  v20 = v33;
  swift_retain(a2);
  v21 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v24 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v3, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  return ((uint64_t (*)(char *, uint64_t))v28)(v15, v9);
}

void sub_100BEF290(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  id v7;
  void *v8;

  v2 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator);
  if (v3)
  {
    sub_1004B8930(0, &qword_1014092F0, UIViewPropertyAnimator_ptr);
    v6 = a2;
    v7 = v3;
    LOBYTE(a2) = static NSObject.== infix(_:_:)(v7, v6);

    if ((a2 & 1) != 0)
    {
      v8 = *(void **)(a1 + v2);
      *(_QWORD *)(a1 + v2) = 0;

    }
  }
}

void CRLiOSAutoSizingHostingController.PresentationResizeAction.callAsFunction<A>(_:)(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *Strong;
  void *v9;

  v4 = v3;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v9 = Strong;
    (*(void (**)(void (*)(void), uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x100))(a1, a2, a3);

  }
  else
  {
    a1();
  }
}

void CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction.callAsFunction(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *Strong;
  id v7;

  v3 = v2;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v7 = Strong;
    (*(void (**)(void (*)(void), uint64_t))((swift_isaMask & *Strong) + 0x128))(a1, a2);

  }
  else
  {
    a1();
  }
}

void sub_100BEF458(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100BEF460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t sub_100BEF46C()
{
  return swift_unknownObjectWeakInit(&unk_101480EF0, 0);
}

uint64_t sub_100BEF47C@<X0>(uint64_t a1@<X8>)
{
  return sub_100BEF50C(&qword_1013DDD98, (uint64_t)&unk_101480EF0, sub_100BF1EE0, (uint64_t)sub_100BEF46C, a1);
}

uint64_t sub_100BEF4A4()
{
  return swift_unknownObjectWeakInit(&unk_101480EF8, 0);
}

uint64_t sub_100BEF4B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BEF50C(&qword_1013DDDA0, (uint64_t)&unk_101480EF8, sub_100BF1EE0, (uint64_t)sub_100BEF4A4, a1);
}

uint64_t sub_100BEF4D8()
{
  return swift_unknownObjectWeakInit(&unk_101480F00, 0);
}

uint64_t sub_100BEF4E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100BEF50C(&qword_1013DDDA8, (uint64_t)&unk_101480F00, sub_100BF1EE0, (uint64_t)sub_100BEF4D8, a1);
}

uint64_t sub_100BEF50C@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(_QWORD, _QWORD)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t (*v8)(_QWORD, _QWORD);

  if (*a1 != -1)
  {
    v8 = a3;
    swift_once(a1, a4);
    a3 = v8;
  }
  return a3(a2, a5);
}

uint64_t sub_100BEF560()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for CoordinateSpace(0);
  sub_100501DE0(v0, qword_101480F08);
  v1 = sub_1004F2A1C(v0, (uint64_t)qword_101480F08);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for CoordinateSpace.global(_:), v0);
}

uint64_t sub_100BEF5B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DDDB0 != -1)
    swift_once(&qword_1013DDDB0, sub_100BEF560);
  v2 = type metadata accessor for CoordinateSpace(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_101480F08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100BEF628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1004B7878(&qword_101409298, (uint64_t (*)(uint64_t))&type metadata accessor for CoordinateSpace, (uint64_t)&protocol conformance descriptor for CoordinateSpace);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

BOOL sub_100BEF690(uint64_t a1, uint64_t a2)
{
  return (static AnyHashable.== infix(_:_:)() & 1) != 0 && CGRectEqualToRect(*(CGRect *)(a1 + 40), *(CGRect *)(a2 + 40));
}

void sub_100BEF6D4()
{
  qword_101480F20 = (uint64_t)_swiftEmptyArrayStorage;
}

double sub_100BEF6E8@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1013DDDB8 != -1)
    swift_once(&qword_1013DDDB8, sub_100BEF6D4);
  v2 = qword_101480F20;
  *a1 = qword_101480F20;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

void sub_100BEF738(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a2(&v2);
  sub_1006212AC(v2);
}

uint64_t sub_100BEF774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v5 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static Color.clear.getter(v11);
  sub_1004B8460(a2, (uint64_t)v12, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v5);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v10 + v15 + v14) & ~v15;
  v17 = swift_allocObject(&unk_101299A70, v16 + v7, v13 | v15 | 7);
  sub_1004B84E0((uint64_t)v12, v17 + v14, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *a3 = v19;
  a3[1] = (uint64_t)sub_100BF3998;
  a3[2] = v17;
  return result;
}

__n128 sub_100BEF8D0(double **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  __n128 result;
  __int128 v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  __n128 v24;
  __int128 v25;
  uint64_t v26;

  v4 = type metadata accessor for CoordinateSpace(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8968(a2, (uint64_t)v22);
  type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  sub_100BF0790(&qword_101408F20, (uint64_t (*)(_QWORD))&type metadata accessor for CoordinateSpace, 0x616E6964726F6F43, 0xEF65636170536574, (uint64_t)v7);
  v8 = GeometryProxy.frame(in:)(v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = (__n128)v22[0];
  v25 = v22[1];
  v26 = v23;
  v15 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_100D11A6C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
  v17 = *((_QWORD *)v15 + 2);
  v16 = *((_QWORD *)v15 + 3);
  if (v17 >= v16 >> 1)
    v15 = sub_100D11A6C((double *)(v16 > 1), v17 + 1, 1, v15);
  *((_QWORD *)v15 + 2) = v17 + 1;
  v18 = &v15[9 * v17];
  result = v24;
  v20 = v25;
  *((_QWORD *)v18 + 8) = v26;
  *((__n128 *)v18 + 2) = result;
  *((_OWORD *)v18 + 3) = v20;
  v18[9] = v8;
  *((_QWORD *)v18 + 10) = v10;
  *((_QWORD *)v18 + 11) = v12;
  *((_QWORD *)v18 + 12) = v14;
  *a1 = v15;
  return result;
}

uint64_t sub_100BEFA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v18)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v19;
  uint64_t (**v20)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v21;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(a1);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1014092A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v3, (uint64_t)v8, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_101299A48, v13 + v7, v12 | 7);
  v15 = sub_1004B84E0((uint64_t)v8, v14 + v13, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  v16 = static Alignment.center.getter(v15);
  v18 = v17;
  v19 = sub_1004B804C(&qword_1014092A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v11, a1, v19);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v11[*(int *)(v9 + 36)];
  *v20 = sub_100BF384C;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v14;
  v20[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v16;
  v20[3] = v18;
  sub_1004CB7BC((uint64_t)v11, a3, &qword_1014092A0);
  v21 = sub_1004B804C(&qword_1014092B0);
  sub_1004B8968(v3, a3 + *(int *)(v21 + 52));
  return sub_1004CB800((uint64_t)v11, &qword_1014092A0);
}

uint64_t sub_100BEFBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unsigned int v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  double v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v36)(char *, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a1;
  v42 = a2;
  v3 = sub_1004B804C(&qword_1014092B8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014092C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1014092C8);
  __chkstk_darwin(v10);
  v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI")
    || (v15 = (void *)objc_opt_self(UIScreen),
        !objc_msgSend(v15, "crl_screenClassPhoneUIRegularOrLarge")))
  {
    sub_1004B8460(v2, (uint64_t)v14, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
    goto LABEL_7;
  }
  v16 = objc_msgSend(v15, "crl_deviceIsLandscape");
  sub_1004B8460(v2, (uint64_t)v14, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  if (!v16)
  {
LABEL_7:
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
    v22 = v41;
    goto LABEL_8;
  }
  v17 = &v14[*(int *)(v12 + 24)];
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_100BF25E8(*(_QWORD *)v17, v19);
  v20 = sub_100BF09C8(v18, v19);
  sub_100BF26FC(v18, v19);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  v22 = v41;
  if ((v20 & 1) == 0)
  {
    v23 = static Edge.Set.horizontal.getter(v21);
    v24 = EdgeInsets.init(_all:)(59.0);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v31 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v40, v22, v3);
    v32 = v31 + *(int *)(v10 + 36);
    *(_BYTE *)v32 = v23;
    *(double *)(v32 + 8) = v24;
    *(_QWORD *)(v32 + 16) = v26;
    *(_QWORD *)(v32 + 24) = v28;
    *(_QWORD *)(v32 + 32) = v30;
    *(_BYTE *)(v32 + 40) = 0;
    sub_1004CB7BC(v31, (uint64_t)v9, &qword_1014092C8);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v33 = sub_100BF3A00();
    v34 = sub_1004CBA30(&qword_1014092D8, &qword_1014092B8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v9, v10, v3, v33, v34);
    return sub_1004CB800(v31, &qword_1014092C8);
  }
LABEL_8:
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v36(v6, v22, v3);
  v36(v9, (uint64_t)v6, v3);
  swift_storeEnumTagMultiPayload(v9, v7, 1);
  v37 = sub_100BF3A00();
  v38 = sub_1004CBA30(&qword_1014092D8, &qword_1014092B8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  _ConditionalContent<>.init(storage:)(v9, v10, v3, v37, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void CRLiOSAutoSizingHostingController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSAutoSizingHostingController", 42, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id CRLiOSAutoSizingHostingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void (*EnvironmentValues.crl_withPresentationResize.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100BF1E9C();
  v3[4] = v4;
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, v4);
  return sub_100BF00E0;
}

void sub_100BF00E0(uint64_t *a1, char a2)
{
  sub_100BF01FC(a1, a2, (void (*)(uint64_t, uint64_t))sub_100BF1EE0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, (void (*)(uint64_t))sub_1004CBB0C);
}

void (*EnvironmentValues.crl_performAfterAnimations.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100BF1EF0();
  v3[4] = v4;
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, v4);
  return sub_100BF0160;
}

void sub_100BF0160(uint64_t *a1, char a2)
{
  sub_100BF01FC(a1, a2, (void (*)(uint64_t, uint64_t))sub_100BF1EE0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, (void (*)(uint64_t))sub_1004CBB0C);
}

void (*EnvironmentValues.crl_scrollToTarget.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100BF1F34();
  v3[4] = v4;
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, v4);
  return sub_100BF01E0;
}

void sub_100BF01E0(uint64_t *a1, char a2)
{
  sub_100BF01FC(a1, a2, (void (*)(uint64_t, uint64_t))sub_100BF1EE0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, (void (*)(uint64_t))sub_1004CBB0C);
}

void sub_100BF01FC(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, void (*a5)(uint64_t))
{
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (char *)*a1;
  v9 = *a1 + 8;
  v10 = *(_QWORD *)(*a1 + 32);
  if ((a2 & 1) != 0)
  {
    a3(*a1, v9);
    a3(v9, (uint64_t)(v8 + 16));
    EnvironmentValues.subscript.setter(v8 + 16, a4, a4, v10);
    a5(v9);
  }
  else
  {
    a3(*a1, v9);
    EnvironmentValues.subscript.setter(v9, a4, a4, v10);
  }
  a5((uint64_t)v8);
  free(v8);
}

void (*EnvironmentValues.crl_scrollViewContentCoordinateSpace.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  unint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for CoordinateSpace(0);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v7 = sub_100BF1E14();
  v3[6] = v7;
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v7);
  return sub_100BF0358;
}

void sub_100BF0358(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 32), v3[5], v3[1]);
  v5 = (void *)v3[5];
  v6 = v3[6];
  v7 = (void *)v3[3];
  v8 = (void *)v3[4];
  v9 = v3[1];
  v10 = v3[2];
  if ((a2 & 1) != 0)
  {
    v4(v3[3], v3[4], v3[1]);
    EnvironmentValues.subscript.setter(v7, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v6);
    v11 = *(void (**)(void *, uint64_t))(v10 + 8);
    v11(v8, v9);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[4], &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v3[6]);
    v11 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v11(v5, v9);
  free(v5);
  free(v8);
  free(v7);
  free(v3);
}

uint64_t (*EnvironmentValues.crl_isPresentedInsidePopover.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = sub_100BF1E58();
  *(_QWORD *)(a1 + 8) = v3;
  EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v3);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_100BF049C;
}

uint64_t sub_100BF049C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return EnvironmentValues.subscript.setter(a1 + 17, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v1);
}

uint64_t View.crlScrollTarget<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v10 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, a3, v14);
  AnyHashable.init<A>(_:)(v12, a3, a5);
  v17 = &v16[*(int *)(v13 + 20)];
  *(_QWORD *)v17 = swift_getKeyPath(byte_100F2C890);
  v18 = sub_1004B804C(&qword_101408F20);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  View.modifier<A>(_:)(v16, a2, v13, a4);
  return sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
}

uint64_t View.crlAdditionalPaddingOnLandscapePhone()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v15;

  v4 = type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v15 - v9;
  *v6 = swift_getKeyPath(byte_100F2C8B8, v8);
  v11 = sub_1004B804C(&qword_101408630);
  swift_storeEnumTagMultiPayload(v6, v11, 0);
  v12 = (_QWORD *)((char *)v6 + *(int *)(v4 + 20));
  *v12 = swift_getKeyPath(byte_100F2C8E8);
  swift_storeEnumTagMultiPayload(v12, v11, 0);
  v13 = (char *)v6 + *(int *)(v4 + 24);
  *(_QWORD *)v13 = swift_getKeyPath(byte_100F2C918);
  v13[8] = 0;
  sub_1004B84E0((uint64_t)v6, (uint64_t)v10, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  View.modifier<A>(_:)(v10, a1, v4, a2);
  return sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
}

uint64_t sub_100BF0764@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0790(&qword_1013FB240, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x8000000100FFFDE0, a1);
}

uint64_t sub_100BF0790@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004CB7BC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v28 = a4;
      v23 = swift_slowAlloc(12, -1);
      v29 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      v31 = sub_100BF0F1C(v30, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4, v24 + 12);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    v26 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_100BF09C8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  double v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v17 = v13;
    *(_DWORD *)v12 = 136315138;
    v16 = sub_100BF0F1C(1819242306, 0xE400000000000000, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  v14 = sub_100BF26FC(a1, 0);
  (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v14);
  return v17;
}

uint64_t sub_100BF0B80@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0C3C(&qword_101409318, &qword_101409320, 0xD00000000000001BLL, 0x8000000100FFFD90, a1);
}

uint64_t sub_100BF0BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0790(&qword_1013F0BF0, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100BF0BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0790(&qword_101409328, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_100BF0C10@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0C3C(&qword_101408630, &qword_101409150, 0xD000000000000020, 0x8000000100FFFDB0, a1);
}

uint64_t sub_100BF0C3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004CB7BC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    return sub_1004C4938((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(v18);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v28 = a4;
    v23 = swift_slowAlloc(12, -1);
    v29 = a5;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v32 = v25;
    *(_DWORD *)v24 = 136315138;
    v31 = sub_100BF0F1C(v30, v28, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4, v24 + 12);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v26 = swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
}

uint64_t sub_100BF0E64()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100BF0E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BF0E90(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_100BF0E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = sub_1004B804C(&qword_101409150);
  __chkstk_darwin(v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v9, &qword_101409150);
  return a5(v9);
}

uint64_t sub_100BF0F1C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100BF0FEC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1004CB6E8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1004CB6E8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  return v7;
}

uint64_t sub_100BF0FEC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100BF11A4(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100BF11A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100BF1238(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100BF1488(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100BF1488(v3 > 1, v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

double *sub_100BF1238(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  double *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100BF13AC(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return (double *)v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (double *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100BF13AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_1004B804C(&qword_1013EA998);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size_1(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100BF1410(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t sub_100BF1488(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_1004B804C(&qword_1013EA998);
    v11 = (double *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_1(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void *sub_100BF15D4(uint64_t a1, uint64_t (*a2)(id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = a2(v8);
      if (v3)
      {
        swift_bridgeObjectRelease(a1);

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_11:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_100BF16F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  __chkstk_darwin(a1);
  v3 = (char *)&v7 - v2;
  *(_QWORD *)(v1 + *(_QWORD *)(v4 + 16)) = 0;
  (*(void (**)(char *))(v5 + 16))((char *)&v7 - v2);
  return UIHostingController.init(rootView:)(v3);
}

uint64_t sub_100BF1778(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_100BF16F0(a1);
}

char *sub_100BF17A8(_BOOL8 a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  _BYTE *v6;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  id v33;
  double *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double (**v40)(double, double);
  id v41;
  BOOL v42;
  BOOL v43;
  id v44;
  objc_class *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _BOOL4 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  objc_super v62;
  uint64_t v63;
  unint64_t v64;
  double v65;
  double v66;
  char v67;

  v53 = a2;
  v58 = a1;
  v56 = *(_QWORD *)(a3 - 8);
  v57 = a4;
  __chkstk_darwin(a1);
  v54 = v10;
  v55 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ModifiedContent(0, a3, &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)&v49 - v11;
  v12 = (double *)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  *v12 = 0.0;
  v12[1] = 0.0;
  v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  v13 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  v14 = v6;
  *(_QWORD *)&v6[v13] = sub_1008D7828((uint64_t)_swiftEmptyArrayStorage);
  if (a5 != 0.0 && a6 != 0.0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110, "One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2u, 110, (uint64_t)"One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u);
  }
  v51 = a6 == 0.0;
  v52 = a5 == 0.0;
  v15 = type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = sub_100BECFBC();
  KeyPath = swift_getKeyPath(byte_100F2C770);
  v18 = swift_getKeyPath(byte_100F2C798);
  LOBYTE(v65) = 1;
  swift_retain(v16);
  static Published.subscript.setter(&v65, v16, KeyPath, v18);
  v19 = swift_getKeyPath(a8);
  v20 = swift_getKeyPath(byte_100F2C870);
  v65 = a5;
  v66 = a6;
  swift_retain(v16);
  static Published.subscript.setter(&v65, v16, v19, v20);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy] = v16;
  v21 = sub_1004B7878(&qword_101401460, type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy, (uint64_t)&unk_100F2CC4C);
  v50 = v21;
  v22 = swift_retain_n(v16, 2);
  *(double *)&v23 = COERCE_DOUBLE(ObservedObject.init(wrappedValue:)(v22, v15, v21));
  v25 = v24;
  v65 = *(double *)&v23;
  v66 = v24;
  v67 = 0;
  v26 = (uint64_t)v60;
  v27 = v57;
  v28 = v53;
  View.modifier<A>(_:)(&v65, a3, &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier, v57);
  swift_release(*(_QWORD *)&v25);
  v29 = sub_100BF3B6C();
  v63 = v27;
  v64 = v29;
  v30 = v61;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v61);
  v33 = objc_allocWithZone((Class)type metadata accessor for CRLiOSAutoSizingHostingController.HostingController(0, v30, WitnessTable, v32));
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController] = sub_100BF16F0(v26);
  v34 = (double *)&v14[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  *v34 = a5;
  v34[1] = a6;
  *v12 = a5;
  v12[1] = a6;
  v35 = v55;
  v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v28, a3);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject(&unk_101299B88, v38 + v54, v37 | 7);
  *(_QWORD *)(v39 + 16) = a3;
  *(_QWORD *)(v39 + 24) = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v39 + v38, v35, a3);
  v40 = (double (**)(double, double))&v14[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize];
  *v40 = sub_100BF3C08;
  v40[1] = (double (*)(double, double))v39;
  v41 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v41, "setAlwaysBounceHorizontal:", 0);
  objc_msgSend(v41, "setAlwaysBounceVertical:", 0);
  v42 = v51;
  if (v58 == 2)
  {
    v43 = v52;
  }
  else
  {
    v42 = v58;
    v43 = v58;
  }
  objc_msgSend(v41, "setShowsVerticalScrollIndicator:", v42);
  objc_msgSend(v41, "setShowsHorizontalScrollIndicator:", v43);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView] = v41;
  v44 = v41;

  v45 = (objc_class *)type metadata accessor for CRLiOSAutoSizingHostingController();
  v62.receiver = v14;
  v62.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v62, "initWithNibName:bundle:", 0, 0);
  v47 = ObservableObject<>.objectWillChange.getter(v15, v50);
  ObservableObjectPublisher.send()();
  swift_release(v47);
  swift_unknownObjectWeakAssign(v16 + 16, v46);
  objc_msgSend(v46, "setPreferredContentSize:", *(double *)&v46[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize], *(double *)&v46[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8]);
  swift_release(v16);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  return v46;
}

uint64_t sub_100BF1CD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100BF1D00()
{
  uint64_t v0;

  sub_100BEF290(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100BF1D18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100BF1D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BF1D4C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController()
{
  return objc_opt_self(_TtC8Freeform33CRLiOSAutoSizingHostingController);
}

void sub_100BF1D74(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)byte_100F2C770, (uint64_t)byte_100F2C798, a2);
}

uint64_t sub_100BF1D98(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100BECE7C(a1, a2, a3, a4, (uint64_t)byte_100F2C770, (uint64_t)byte_100F2C798);
}

void sub_100BF1DBC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_10063907C(a1, (uint64_t)byte_100F2C7B8, (uint64_t)byte_100F2C7E0, a2);
}

uint64_t sub_100BF1DE0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100BECE7C(a1, a2, a3, a4, (uint64_t)byte_100F2C7B8, (uint64_t)byte_100F2C7E0);
}

unint64_t sub_100BF1E14()
{
  unint64_t result;

  result = qword_101408EF8;
  if (!qword_101408EF8)
  {
    result = swift_getWitnessTable(&unk_100F2CD64, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey);
    atomic_store(result, (unint64_t *)&qword_101408EF8);
  }
  return result;
}

unint64_t sub_100BF1E58()
{
  unint64_t result;

  result = qword_101408F00;
  if (!qword_101408F00)
  {
    result = swift_getWitnessTable(&unk_100F2CD2C, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey);
    atomic_store(result, (unint64_t *)&qword_101408F00);
  }
  return result;
}

unint64_t sub_100BF1E9C()
{
  unint64_t result;

  result = qword_101408F08;
  if (!qword_101408F08)
  {
    result = swift_getWitnessTable(&unk_100F2CCF4, &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey);
    atomic_store(result, (unint64_t *)&qword_101408F08);
  }
  return result;
}

uint64_t sub_100BF1EE0(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectWeakCopyInit(a2, a1);
}

unint64_t sub_100BF1EF0()
{
  unint64_t result;

  result = qword_101408F10;
  if (!qword_101408F10)
  {
    result = swift_getWitnessTable(&unk_100F2CCBC, &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey);
    atomic_store(result, (unint64_t *)&qword_101408F10);
  }
  return result;
}

unint64_t sub_100BF1F34()
{
  unint64_t result;

  result = qword_101408F18;
  if (!qword_101408F18)
  {
    result = swift_getWitnessTable(&unk_100F2CC84, &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey);
    atomic_store(result, (unint64_t *)&qword_101408F18);
  }
  return result;
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101409258, (uint64_t)&nominal type descriptor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
}

uint64_t sub_100BF1F8C()
{
  unint64_t v0;

  v0 = sub_100BF1E14();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey, v0);
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1014091B0, (uint64_t)&nominal type descriptor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
}

uint64_t sub_100BF1FE0()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100BF2000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BF0E90(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_100BF201C()
{
  return EnvironmentValues.verticalSizeClass.getter();
}

uint64_t sub_100BF203C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BF0E90(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.verticalSizeClass.setter);
}

uint64_t sub_100BF2058@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_100BF1E58();
  result = EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100BF20A4(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100BF1E58();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey, v1);
}

uint64_t sub_100BF20EC()
{
  return type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101408F78, (uint64_t)&nominal type descriptor for CRLiOSAutoSizingHostingController.HostProxy);
}

void sub_100BF2108(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[5];

  v9[0] = "\b";
  sub_100583EA0(319, (unint64_t *)&qword_1013E8B60, (uint64_t)&type metadata for Bool);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v9[1] = v4;
    sub_10076A270(319, &qword_101408F88, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v6 <= 0x3F)
    {
      v9[2] = *(_QWORD *)(v5 - 8) + 64;
      sub_100583EA0(319, (unint64_t *)&unk_101408F90, (uint64_t)&type metadata for EdgeInsets);
      if (v8 <= 0x3F)
      {
        v9[3] = *(_QWORD *)(v7 - 8) + 64;
        v9[4] = v4;
        swift_updateClassMetadata2(a1, 256, 5, v9, a1 + 80);
      }
    }
  }
}

uint64_t sub_100BF21EC(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, qword_101409030 + a1 + 16);
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLiOSAutoSizingHostingController.HostingController);
}

uint64_t sub_100BF2244(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 96);
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem);
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentationResizeAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeAction;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollToTargetAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetAction;
}

uint64_t sub_100BF22C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_1004B7878(&qword_101409140, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier, (uint64_t)&unk_100F2CBFC);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t sub_100BF2348(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_1004B7878(&qword_101409148, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier, (uint64_t)&unk_100F2CBAC);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t *sub_100BF23C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for UserInterfaceSizeClass(0);
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_1004B804C(&qword_101409150);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v13 = a1;
      v14 = v7;
      v15 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v13 = a1;
      v14 = v7;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    v16 = *(int *)(a3 + 20);
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v16, v7) == 1)
    {
      v19 = type metadata accessor for UserInterfaceSizeClass(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = sub_1004B804C(&qword_101409150);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v23 = v17;
      v24 = v7;
      v25 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v23 = v17;
      v24 = v7;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
    v26 = *(int *)(a3 + 24);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = v28[8];
    sub_100BF25E8(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    v27[8] = v30;
  }
  return a1;
}

double sub_100BF25E8(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

double sub_100BF25F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    swift_release(*v7);
  }
  return sub_100BF26FC(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24)), *((_BYTE *)a1 + *(int *)(a2 + 24) + 8));
}

double sub_100BF26FC(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t *sub_100BF2708(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;

  v6 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C(&qword_101409150);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    swift_retain(v10);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v14 = *(int *)(a3 + 20);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  if (swift_getEnumCaseMultiPayload((char *)a2 + v14, v6) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C(&qword_101409150);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = v15;
    v22 = v6;
    v23 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v21 = v15;
    v22 = v6;
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v21, v22, v23);
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_100BF25E8(*(_QWORD *)v26, v28);
  *(_QWORD *)v25 = v27;
  v25[8] = v28;
  return a1;
}

uint64_t *sub_100BF28FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  if (a1 != a2)
  {
    sub_1004CB800((uint64_t)a1, &qword_101408630);
    v6 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_1004B804C(&qword_101409150);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      swift_retain(v10);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v14 = *(int *)(a3 + 20);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_1004CB800((uint64_t)a1 + v14, &qword_101408630);
    v17 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_1004B804C(&qword_101409150);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v22 = v15;
      v23 = v17;
      v24 = 1;
    }
    else
    {
      v21 = *v16;
      *v15 = *v16;
      swift_retain(v21);
      v22 = v15;
      v23 = v17;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  sub_100BF25E8(*(_QWORD *)v27, v29);
  v30 = *(_QWORD *)v26;
  v31 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = v29;
  sub_100BF26FC(v30, v31);
  return a1;
}

char *sub_100BF2B34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C(&qword_101409150);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (swift_getEnumCaseMultiPayload(&a2[v10], v6) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_1004B804C(&qword_101409150);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(v11, v6, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  return a1;
}

char *sub_100BF2D14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  if (a1 != a2)
  {
    sub_1004CB800((uint64_t)a1, &qword_101408630);
    v6 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_1004B804C(&qword_101409150);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_1004CB800((uint64_t)&a1[v10], &qword_101408630);
    v13 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = sub_1004B804C(&qword_101409150);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_100BF26FC(v21, v22);
  return a1;
}

uint64_t sub_100BF2F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BF2F44);
}

uint64_t sub_100BF2F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1004B804C(&qword_101408628);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_100BF2FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BF2FD0);
}

uint64_t sub_100BF2FD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_101408628);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  return result;
}

void sub_100BF3050(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100BF30C4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_100BF30C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1014091C0)
  {
    v2 = sub_1004CB6A4(&qword_101409150);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1014091C0);
  }
}

_QWORD *sub_100BF311C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = sub_1004B804C(&qword_101408F20);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for CoordinateSpace(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      v17 = *v10;
      *v9 = *v10;
      swift_retain(v17);
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return v4;
}

double sub_100BF3214(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_1004B804C(&qword_101408F20);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_100BF3288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = sub_1004B804C(&qword_101408F20);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  return a1;
}

_QWORD *sub_100BF3344(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1004EA5C8(a1, a2);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1004CB800((uint64_t)a1 + v6, &qword_101408F20);
    v9 = sub_1004B804C(&qword_101408F20);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for CoordinateSpace(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = v7;
      v12 = v9;
      v13 = 1;
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      swift_retain(v14);
      v11 = v7;
      v12 = v9;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_100BF340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_1004B804C(&qword_101408F20);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100BF34BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_1004CB800(a1 + v7, &qword_101408F20);
    v10 = sub_1004B804C(&qword_101408F20);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for CoordinateSpace(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100BF3590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BF359C);
}

uint64_t sub_100BF359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1014091F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100BF361C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BF3628);
}

uint64_t sub_100BF3628(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1014091F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100BF36A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  sub_10076A270(319, (unint64_t *)&unk_101409268, (uint64_t (*)(uint64_t))&type metadata accessor for CoordinateSpace, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentationResizeActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey;
}

uint64_t sub_100BF377C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101135994, 1);
}

uint64_t sub_100BF378C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113596C, 1);
}

uint64_t sub_100BF379C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_1004B804C(&qword_101408F20);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100BF384C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0)
                                      - 8)
                          + 80);
  return sub_100BEF774(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100BF3898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + v4));
  v10 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v11 = sub_1004B804C(&qword_101408F20);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for CoordinateSpace(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    v13 = swift_release(*v10);
  }
  v14 = (v4 + v5 + v8) & ~v8;
  v15 = v14 + v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v14, v6, v13);
  return swift_deallocObject(v0, v15, v3 | v8 | 7);
}

double sub_100BF3998(double **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0)
                                      - 8)
                          + 80);
  v4 = (v3 + 16) & ~v3;
  type metadata accessor for GeometryProxy(0);
  *(_QWORD *)&result = sub_100BEF8D0(a1, v1 + v4).n128_u64[0];
  return result;
}

unint64_t sub_100BF3A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014092D0;
  if (!qword_1014092D0)
  {
    v1 = sub_1004CB6A4(&qword_1014092C8);
    sub_1004CBA30(&qword_1014092D8, &qword_1014092B8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014092D0);
  }
  return result;
}

uint64_t sub_100BF3A84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100BF3AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100BEE9A8(*(uint64_t **)(v4 + 16), *(objc_class **)(v4 + 24), a3, a4);
}

uint64_t sub_100BF3AB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BF3AC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_100BF3AEC(void *a1)
{
  return sub_100BEEA40(a1);
}

uint64_t sub_100BF3AF4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = v5;
  return a2;
}

_QWORD *sub_100BF3B48(_QWORD *a1)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return a1;
}

unint64_t sub_100BF3B6C()
{
  unint64_t result;

  result = qword_1014092F8;
  if (!qword_1014092F8)
  {
    result = swift_getWitnessTable(&unk_100F2CE3C, &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier);
    atomic_store(result, (unint64_t *)&qword_1014092F8);
  }
  return result;
}

uint64_t sub_100BF3BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

double sub_100BF3C08(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_100BEBA98(v2 + ((v4 + 32) & ~v4), v3, a1, a2);
}

double destroy for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t _s8Freeform33CRLiOSAutoSizingHostingControllerC18AutoSizingModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.AutoSizingModifier()
{
  return &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier;
}

uint64_t destroy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(_QWORD *a1)
{
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t initializeWithCopy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

_QWORD *assignWithCopy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(_QWORD *a1, _QWORD *a2)
{
  sub_1004EA5C8(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t assignWithTake for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollTargetKey;
}

uint64_t sub_100BF3F34()
{
  return sub_1004CBA30(&qword_101409300, &qword_1014092B0, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
}

unint64_t sub_100BF3F64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101409308;
  if (!qword_101409308)
  {
    v1 = sub_1004CB6A4(&qword_101409310);
    sub_100BF3A00();
    sub_1004CBA30(&qword_1014092D8, &qword_1014092B8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101409308);
  }
  return result;
}

uint64_t sub_100BF3FE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1011359FC, 1);
}

uint64_t sub_100BF3FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_1004B804C(&qword_101409330);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 17, v5);
}

uint64_t sub_100BF4074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(sub_1004B804C(&qword_101409330) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100BED424(a1, v2 + v6, *(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(unsigned __int8 *)(v7 + 16), a2);
}

uint64_t sub_100BF40E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

void sub_100BF4104(uint64_t *a1)
{
  uint64_t v1;

  sub_100BEDF20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100BF4110(uint64_t *a1)
{
  uint64_t v1;

  sub_100BEDF74(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100BF411C()
{
  unint64_t v0;

  v0 = sub_100BF1E9C();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, v0);
}

uint64_t sub_100BF4158(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BEE2DC(a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1E9C, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, (uint64_t (*)(_BYTE *))sub_1004CBB0C);
}

uint64_t sub_100BF418C()
{
  unint64_t v0;

  v0 = sub_100BF1EF0();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, v0);
}

uint64_t sub_100BF41C8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BEE2DC(a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1EF0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, (uint64_t (*)(_BYTE *))sub_1004CBB0C);
}

uint64_t sub_100BF41FC()
{
  unint64_t v0;

  v0 = sub_100BF1F34();
  return EnvironmentValues.subscript.getter(&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, v0);
}

uint64_t sub_100BF4238(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BEE2DC(a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t *))sub_100BF1EE0, (uint64_t (*)(uint64_t))sub_100BF1F34, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, (uint64_t (*)(_BYTE *))sub_1004CBB0C);
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.LayoutSizeKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.LayoutSizeKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.AutoSizingModifier.SizeReader()
{
  return &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier.SizeReader;
}

unint64_t sub_100BF4290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014093B0;
  if (!qword_1014093B0)
  {
    v1 = sub_1004CB6A4(&qword_1014093B8);
    sub_1004CBA30(&qword_101409340, &qword_101409338, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014093B0);
  }
  return result;
}

uint64_t sub_100BF4314(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101135A24, 1);
}

uint64_t sub_100BF4324()
{
  return sub_1004CBA30(&qword_1014093C0, qword_1014093C8, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t CRLWeakWrapper.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = swift_unknownObjectWeakInit(a2, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t CRLWeakWrapper.value.getter()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

uint64_t CRLWeakWrapper.value.setter(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*CRLWeakWrapper.value.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1);
  return sub_100BF4414;
}

uint64_t sub_100BF4414(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_unknownObjectWeakAssign(a1[1], *a1);
  return swift_unknownObjectRelease(v1);
}

BOOL static CRLWeakWrapper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  v4 = swift_unknownObjectWeakLoadStrong(a2);
  v5 = v4;
  if (Strong)
  {
    swift_unknownObjectRelease(Strong);
    if (v5)
    {
      swift_unknownObjectRelease(v5);
      return Strong == v5;
    }
    return 0;
  }
  if (v4)
  {
    swift_unknownObjectRelease(v4);
    return 0;
  }
  return 1;
}

uint64_t type metadata accessor for CRLWeakWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLWeakWrapper);
}

void sub_100BF44BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  _QWORD *v29;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for CRLBoardItem(0);
    v7 = sub_10058528C();
    v8 = Set.Iterator.init(_cocoa:)(v28, v5, v6, v7);
    v3 = v28[0];
    v26 = v28[1];
    v9 = v28[2];
    v10 = v28[3];
    v11 = v28[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | (v10 << 6);
      v18 = v10;
      goto LABEL_32;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v23 >= v15)
      goto LABEL_35;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_35;
      v24 = *(_QWORD *)(v26 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_35;
        v24 = *(_QWORD *)(v26 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_35;
          v24 = *(_QWORD *)(v26 + 8 * v18);
          if (!v24)
          {
            v18 = v10 + 5;
            if (v10 + 5 >= v15)
              goto LABEL_35;
            v24 = *(_QWORD *)(v26 + 8 * v18);
            if (!v24)
            {
              v25 = v10 + 6;
              while (v15 != v25)
              {
                v24 = *(_QWORD *)(v26 + 8 * v25++);
                if (v24)
                {
                  v18 = v25 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1004D284C(v3);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_32:
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    if (!v22)
      goto LABEL_35;
    while (1)
    {
      sub_100BC90D8(a2, v22);

      v10 = v18;
      v11 = v16;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v19 = __CocoaSet.Iterator.next()(v8);
      if (v19)
      {
        v20 = v19;
        v27 = v19;
        v21 = type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain(v20);
        swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v22 = v29;
        swift_unknownObjectRelease(v20);
        v18 = v10;
        v16 = v11;
        if (v22)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for CRLAnalyticsMiniFormatterOpened()
{
  return objc_opt_self(_TtC8Freeform31CRLAnalyticsMiniFormatterOpened);
}

void sub_100BF476C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char isUniquelyReferenced_nonNull_native;
  void *v7;
  NSString v8;
  uint64_t v9;
  Class isa;
  unint64_t v11;

  if (a1)
  {
    v2 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 >= 0)
        v3 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v3 = a1;
      v4 = __CocoaSet.count.getter(v3);
    }
    else
    {
      v4 = *(_QWORD *)(a1 + 16);
    }
    v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
    sub_100826868((uint64_t)v5, 0x756F43736D657469, 0xEA0000000000746ELL, isUniquelyReferenced_nonNull_native);
    v11 = v2;
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_100BF44BC(a1, (uint64_t *)&v11);
    v7 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v8 = String._bridgeToObjectiveC()();
    v9 = v11;
    sub_100511A70();
    swift_bridgeObjectRetain(v9);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "sendEventInDomain:lazily:eventPayload:", v8, 1, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);
    swift_bridgeObjectRelease(v9);

  }
}

id sub_100BF48DC(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  unint64_t v13;
  void *v14;
  id v15;
  objc_super v17;
  uint64_t v18;
  _QWORD v19[4];

  v3 = v2;
  v6 = (char *)objc_allocWithZone(v3);
  v7 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry] = 0;
  v8 = &v6[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  v11 = v6;
  v12 = objc_msgSend(a2, "copy");
  _bridgeAnyObjectToAny(_:)(v19, v12);
  swift_unknownObjectRelease(v12);
  v13 = sub_1008F4664();
  swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v13, 7);
  v14 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = v18;

  v17.receiver = v11;
  v17.super_class = v3;
  v15 = objc_msgSendSuper2(&v17, "init");

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v15;
}

void sub_100BF4B90(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  void (*v14)(void);
  id v15;
  void *v16;
  _QWORD *v17;
  CKRecordID v18;
  uint64_t v19;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2, 29, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2u, 29, (uint64_t)"Unable to retrieve board item", 29, 2u);
LABEL_8:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, *(Swift::String *)&v19);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v10 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry);
  if (!v11)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2, 32, "Should have info geometry in commit.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should have info geometry in commit.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2u, 32, (uint64_t)"Should have info geometry in commit.", 36, 2u);
    goto LABEL_8;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64((uint64_t)v13, (uint64_t)&off_10127C5E0);
  if (v4)
  {

  }
  else
  {

    v14 = *(void (**)(void))((swift_isaMask & *v13) + 0xE8);
    v15 = v12;
    v14();
    v16 = *(void **)(v5 + v10);
    *(_QWORD *)(v5 + v10) = 0;

    v17 = v13;
    sub_100DB0D78((uint64_t)v17, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_100BF4E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _OWORD *inited;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v21[24];
  __int128 v22;
  __int128 v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[80];

  v1 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1004B804C(&qword_101409538);
  inited = (_OWORD *)swift_initStackObject(v4, v27);
  inited[1] = xmmword_100EF5E40;
  v25 = v1;
  v26 = sub_100BF51EC(&qword_101409540, (uint64_t)&unk_100F30BA0);
  v6 = sub_10050D1B0(v24);
  v7 = *(int *)(sub_1004B804C(&qword_101409548) + 48);
  v8 = v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  *((_BYTE *)v6 + v7) = 0;
  v11 = sub_1004BB5A4(v24, v25);
  v12 = __chkstk_darwin(v11);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, __n128))(v15 + 16))(v14, v12);
  v16 = sub_100BF51EC(&qword_101409550, (uint64_t)&unk_100F30B60);
  AnyHashable.init<A>(_:)(v14, v1, v16);
  v17 = sub_1004BB5A4(v24, v25);
  sub_100BF522C((uint64_t)v17, (uint64_t)v3);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v3, v9);
  *((_QWORD *)&v23 + 1) = 4;
  v18 = v22;
  inited[2] = *(_OWORD *)&v21[8];
  inited[3] = v18;
  inited[4] = v23;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
  v19 = sub_100AF7D40((uint64_t)inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 2, *((_QWORD *)inited + 2), &type metadata for AnyCRLCommandChangeContext);
  return v19;
}

void sub_100BF5064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_100BF50B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetInfoGeometry(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BF5134()
{
  return type metadata accessor for CRLCommandSetInfoGeometry(0);
}

uint64_t type metadata accessor for CRLCommandSetInfoGeometry(uint64_t a1)
{
  uint64_t result;

  result = qword_101409528;
  if (!qword_101409528)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetInfoGeometry);
  return result;
}

uint64_t sub_100BF5178(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100BF51EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLCommandBoardItemChangeContext(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BF522C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100BF5270(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  void *v12;
  id v13;
  objc_super v15;
  uint64_t v16;
  _QWORD v17[4];

  v5 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry] = 0;
  v6 = &v2[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v9 = v2;
  v10 = objc_msgSend(a2, "copy");
  _bridgeAnyObjectToAny(_:)(v17, v10);
  swift_unknownObjectRelease(v10);
  v11 = sub_1008F4664();
  swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v11, 7);
  v12 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = v16;

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for CRLCommandSetInfoGeometry(0);
  v13 = objc_msgSendSuper2(&v15, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v13;
}

uint64_t sub_100BF5388()
{
  void **v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "dataForPasteboardType:", v2);

  if (!v3)
    return 0;
  v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v4;
}

void sub_100BF5404()
{
  void **v0;
  void *v1;
  Class isa;
  id v3;

  v1 = *v0;
  isa = Data._bridgeToObjectiveC()().super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addData:forPasteboardType:", isa, v3);

}

uint64_t type metadata accessor for CRLPasteboardUtils()
{
  return objc_opt_self(_TtC8Freeform18CRLPasteboardUtils);
}

void sub_100BF5490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t);
  id v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v17[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v17[-v6 - 8];
  v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  sub_1009FAB10();
  if (v0)
  {

  }
  else
  {
    if (qword_1013DCB70 != -1)
      swift_once(&qword_1013DCB70, sub_1006374D0);
    if (byte_10147ECD0 == 1)
    {
      if (qword_1013DD858 != -1)
        swift_once(&qword_1013DD858, sub_100A05554);
      swift_beginAccess(&static OS_os_log.boardStore, v17, 0, 0);
      v9 = (id)static OS_os_log.boardStore;
      v11 = static os_log_type_t.default.getter(v10);
      sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "Using sandbox path Development/Boards", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

      URL.appendingPathComponent(_:isDirectory:)(0x6D706F6C65766544, 0xEB00000000746E65, 1);
      URL.appendingPathComponent(_:isDirectory:)(0x736472616F42, 0xE600000000000000, 1);

      v12 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
      v12(v4, v1);
      v12(v7, v1);
    }
    else
    {
      if (qword_1013DD858 != -1)
        swift_once(&qword_1013DD858, sub_100A05554);
      swift_beginAccess(&static OS_os_log.boardStore, v17, 0, 0);
      v13 = (id)static OS_os_log.boardStore;
      v15 = static os_log_type_t.default.getter(v14);
      sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Using production path Boards", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

      URL.appendingPathComponent(_:isDirectory:)(0x736472616F42, 0xE600000000000000, 1);
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
}

char *sub_100BF573C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  __n128 v20;
  id v22;
  char *v23;
  char *v24;
  id v25;
  void *v26;
  os_unfair_lock_s *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - v6;
  sub_100BF5490();
  if (!v0)
  {
    v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v9);
    v11 = v10;
    v31 = 0;
    v12 = objc_msgSend(v8, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v10, 1, 0, &v31);

    v13 = v31;
    if (v12)
    {
      v14 = v31;
      v15 = sub_100836418();
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
      swift_retain(v15);
      v4 = (char *)sub_100AFD5FC((uint64_t)v4, (uint64_t)v15);
      swift_release(v15);
      sub_100A6B328((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v16 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 16));
      v17 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      v18 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v18)
      {
        v19 = *(id *)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        v22 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
        v23 = v4;
        v30 = v16;
        v24 = v23;
        v25 = sub_100C7EE84((uint64_t)v23);

        v26 = *(void **)&v4[v17];
        *(_QWORD *)&v4[v17] = v25;
        v19 = v25;

        v16 = v30;
        v18 = 0;
      }
      v27 = *(os_unfair_lock_s **)(v16 + 16);
      v28 = v18;
      os_unfair_lock_unlock(v27);
      sub_100C7D764();
      swift_release(v15);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
    else
    {
      v4 = (char *)v31;
      _convertNSErrorToError(_:)(v13);

      swift_willThrow(v20);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
  return v4;
}

uint64_t type metadata accessor for CRLBoardDataStoreProvider()
{
  return objc_opt_self(_TtC8Freeform25CRLBoardDataStoreProvider);
}

double *sub_100BF59D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  double *v14;
  uint64_t v15;
  double *v16;
  _QWORD v18[2];
  double *v19;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100503E34();
  static DispatchQoS.unspecified.getter(v10);
  v19 = _swiftEmptyArrayStorage;
  v11 = sub_1008F13E8();
  v12 = sub_1004B804C(&qword_1013FF6B0);
  v13 = sub_1008F1430();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  v14 = (double *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x8000000100FFFFB0, v9, v6, v3, 0);
  v15 = v18[1];
  v16 = sub_100AFD864(v14);

  if (!v15)
    sub_100A6B328((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  return v16;
}

id sub_100BF5C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v14;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_id];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  v11 = &v7[OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription];
  *(_QWORD *)v11 = a2;
  *((_QWORD *)v11 + 1) = a3;
  v14.receiver = v7;
  v14.super_class = v3;
  v12 = objc_msgSendSuper2(&v14, "init");
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v12;
}

void sub_100BF5ED4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  _QWORD *v15;
  CKRecordID v16;
  Swift::String v17;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (v9)
  {
    v10 = v9;
    sub_100DBEE64((uint64_t)v10, (uint64_t)&off_10127C5E0);

    if (v4)
    {

    }
    else
    {
      v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription);
      v11 = *(_QWORD *)(v5
                      + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription
                      + 8);
      v13 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v10) + 0x138);
      v14 = swift_bridgeObjectRetain(v11);
      v13(v12, v11, v14);
      v15 = v10;
      sub_100DB0D78((uint64_t)v15, (uint64_t)&off_10127C5E0, a3);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAccessibilityDescription.swift", 109, 2, 27, "Unable to retrieve board item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAccessibilityDescription.swift", 109, 2u, 27, (uint64_t)"Unable to retrieve board item.", 30, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
}

uint64_t sub_100BF60FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription
                                             + 8));
}

id sub_100BF614C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetAccessibilityDescription(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BF61D4()
{
  return type metadata accessor for CRLCommandSetAccessibilityDescription(0);
}

uint64_t type metadata accessor for CRLCommandSetAccessibilityDescription(uint64_t a1)
{
  uint64_t result;

  result = qword_1014096C0;
  if (!qword_1014096C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetAccessibilityDescription);
  return result;
}

uint64_t sub_100BF6218(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F2D128;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100BF628C(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_1004E884C(a1, v2);
}

uint64_t sub_100BF62B0(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_100553ED0(a1, v2);
}

id sub_100BF62D4(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_10057D1F4(a1, v2);
}

id sub_100BF62F8(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_10057DA50(a1, v2);
}

id sub_100BF631C(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_100D27314(a1, v2);
}

id sub_100BF6340(uint64_t a1)
{
  double v2;

  v2 = CACurrentMediaTime();
  return sub_100D27BB0(a1, v2);
}

uint64_t storeEnumTagSinglePayload for CRLIntentSelectionBoardItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100BF63B0 + 4 * byte_100F2D165[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100BF63E4 + 4 * asc_100F2D160[v4]))();
}

uint64_t sub_100BF63E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BF63EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BF63F4);
  return result;
}

uint64_t sub_100BF6400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BF6408);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100BF640C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BF6414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLIntentSelectionBoardItemType()
{
  return &type metadata for CRLIntentSelectionBoardItemType;
}

unint64_t sub_100BF6434()
{
  unint64_t result;

  result = qword_1014096D0;
  if (!qword_1014096D0)
  {
    result = swift_getWitnessTable(&unk_100F2D1D0, &type metadata for CRLIntentSelectionBoardItemType);
    atomic_store(result, (unint64_t *)&qword_1014096D0);
  }
  return result;
}

id sub_100BF6478(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider] = 0;
  v4 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__title];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_iconProviderTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__icon] = 0;
  v5 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for CRLURLMetadataProviderBase(0);
  v8 = objc_msgSendSuper2(&v10, "init");
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t sub_100BF6574()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[4] = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[6] = v3;
  v1[7] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[8] = v4;
  v1[9] = v5;
  return swift_task_switch(sub_100BF6608, v4, v5);
}

void sub_100BF6608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  NSString v44;
  void *v45;
  id v46;
  unint64_t v47;
  _BYTE *v48;
  __n128 v49;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata;
  *(_QWORD *)(v1 + 80) = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata;
  if (!*(_QWORD *)(v2 + v3))
  {
    v7 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask;
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask);
    *(_QWORD *)(v1 + 88) = v8;
    if (v8)
    {
      v9 = v1 + 16;
      v10 = async function pointer to Task.value.getter[1];
      swift_retain(v8);
      v11 = (_QWORD *)swift_task_alloc(v10);
      *(_QWORD *)(v1 + 120) = v11;
      v12 = sub_1004B804C(&qword_1013E83A8);
      v13 = sub_1004B804C(&qword_1013E0210);
      v14 = sub_100BF6C24;
LABEL_6:
      *v11 = v1;
      v11[1] = v14;
      Task.value.getter(v9, v8, v12, v13, &protocol self-conformance witness table for Error);
      return;
    }
    v15 = URL.scheme.getter(a1);
    if (v16)
    {
      v17 = v16;
      if (v15 == 0x6567617373656DLL && v16 == 0xE700000000000000)
      {
        v20 = *(_QWORD *)(v1 + 56);
        swift_bridgeObjectRelease(v16);
        goto LABEL_17;
      }
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0x6567617373656DLL, 0xE700000000000000, 0);
      swift_bridgeObjectRelease(v17);
      if ((v19 & 1) != 0)
      {
        v20 = *(_QWORD *)(v1 + 56);
LABEL_17:
        swift_release(v20);
        v30 = sub_100BF7094();
        v31 = *(void **)(v2 + v3);
        *(_QWORD *)(v2 + v3) = v30;
        goto LABEL_18;
      }
    }
    v21 = *(_QWORD *)(v1 + 40);
    v22 = *(void **)(v1 + 32);
    v23 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 1, 1, v23);
    v24 = v22;
    v25 = static MainActor.shared.getter(v24);
    v26 = (_QWORD *)swift_allocObject(&unk_10129A018, 40, 7);
    v26[2] = v25;
    v26[3] = &protocol witness table for MainActor;
    v26[4] = v24;
    v27 = sub_100618A88(v21, (uint64_t)&unk_101409868, (uint64_t)v26);
    v28 = *(_QWORD *)(v2 + v7);
    *(_QWORD *)(v2 + v7) = v27;
    swift_release(v28);
    v8 = *(_QWORD *)(v2 + v7);
    *(_QWORD *)(v1 + 96) = v8;
    if (v8)
    {
      v9 = v1 + 24;
      v29 = async function pointer to Task.value.getter[1];
      swift_retain(v8);
      v11 = (_QWORD *)swift_task_alloc(v29);
      *(_QWORD *)(v1 + 104) = v11;
      v12 = sub_1004B804C(&qword_1013E83A8);
      v13 = sub_1004B804C(&qword_1013E0210);
      v14 = sub_100BF6A04;
      goto LABEL_6;
    }
    swift_release(*(_QWORD *)(v1 + 56));
    v32 = *(_QWORD *)(v1 + 80);
    v33 = *(_QWORD *)(v1 + 32);
    v34 = *(void **)(v33 + v32);
    *(_QWORD *)(v33 + v32) = 0;

    v35 = *(void **)(v33 + v32);
    if (!v35)
    {
LABEL_30:
      v47 = sub_1007170B0();
      swift_allocError(&type metadata for CRLMetadataProviderError, v47, 0, 0);
      *v48 = 0;
      swift_willThrow(v49);
      swift_task_dealloc(*(_QWORD *)(v1 + 40));
      (*(void (**)(void))(v1 + 8))();
      return;
    }
    v36 = objc_msgSend(v35, "specialization");
    if (!v36)
    {
LABEL_19:
      v4 = *(void **)(*(_QWORD *)(v1 + 32) + *(_QWORD *)(v1 + 80));
      if (v4)
        goto LABEL_3;
      goto LABEL_30;
    }
    v31 = v36;
    v37 = objc_opt_self(LPFileMetadata);
    v38 = swift_dynamicCastObjCClass(v31, v37);
    if (v38)
    {
      v39 = *(_QWORD *)(v1 + 32);
      v40 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
      if (v40)
      {
        v41 = HIBYTE(v40) & 0xF;
        if ((v40 & 0x2000000000000000) == 0)
          v41 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename) & 0xFFFFFFFFFFFFLL;
        if (v41)
        {
          v42 = (void *)v38;
          v43 = *(_QWORD *)(v1 + 80);
          swift_bridgeObjectRetain(*(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8));
          v44 = String._bridgeToObjectiveC()();
          objc_msgSend(v42, "setName:", v44, swift_bridgeObjectRelease(v40).n128_f64[0]);

          v45 = *(void **)(v39 + v43);
          if (v45)
          {
            v46 = v45;
            objc_msgSend(v46, "setSpecialization:", v42);

          }
        }
      }
    }
LABEL_18:

    goto LABEL_19;
  }
  swift_release(*(_QWORD *)(v1 + 56));
  v4 = *(void **)(v2 + v3);
  if (v4)
  {
LABEL_3:
    v5 = *(_QWORD *)(v1 + 40);
    v6 = v4;
    swift_task_dealloc(v5);
    (*(void (**)(id))(v1 + 8))(v6);
    return;
  }
  __break(1u);
}

uint64_t sub_100BF6A04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  swift_release(v2[12]);
  if (v0)
    v4 = sub_100BF6D64;
  else
    v4 = sub_100BF6A6C;
  return swift_task_switch(v4, v2[8], v2[9]);
}

uint64_t sub_100BF6A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(void **)(v2 + v1);
  *(_QWORD *)(v2 + v1) = *(_QWORD *)(v0 + 24);

  v4 = *(void **)(v2 + v1);
  if (!v4)
    goto LABEL_13;
  v5 = objc_msgSend(v4, "specialization");
  if (v5)
  {
    v6 = v5;
    v7 = objc_opt_self(LPFileMetadata);
    v8 = swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = *(_QWORD *)(v0 + 32);
      v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
      if (v10)
      {
        v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000) == 0)
          v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename) & 0xFFFFFFFFFFFFLL;
        if (v11)
        {
          v12 = (void *)v8;
          v13 = *(_QWORD *)(v0 + 80);
          swift_bridgeObjectRetain(*(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8));
          v14 = String._bridgeToObjectiveC()();
          objc_msgSend(v12, "setName:", v14, swift_bridgeObjectRelease(v10).n128_f64[0]);

          v15 = *(void **)(v9 + v13);
          if (v15)
          {
            v16 = v15;
            objc_msgSend(v16, "setSpecialization:", v12);

            v6 = v16;
          }
        }
      }
    }

  }
  v17 = *(void **)(*(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 80));
  if (v17)
  {
    v18 = *(_QWORD *)(v0 + 40);
    v19 = v17;
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(id))(v0 + 8))(v19);
  }
  else
  {
LABEL_13:
    v21 = sub_1007170B0();
    swift_allocError(&type metadata for CRLMetadataProviderError, v21, 0, 0);
    *v22 = 0;
    swift_willThrow(v23);
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100BF6C24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v3);
  swift_release(v2[11]);
  if (v0)
    v4 = sub_100BF6D28;
  else
    v4 = sub_100BF6C8C;
  return swift_task_switch(v4, v2[8], v2[9]);
}

uint64_t sub_100BF6C8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v3;
  _BYTE *v4;
  __n128 v5;

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    v3 = sub_1007170B0();
    swift_allocError(&type metadata for CRLMetadataProviderError, v3, 0, 0);
    *v4 = 0;
    swift_willThrow(v5);
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100BF6D28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BF6D64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BF6DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[16] = a1;
  v4[17] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[18] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[19] = v6;
  v4[20] = v7;
  return swift_task_switch(sub_100BF6E0C, v6, v7);
}

uint64_t sub_100BF6E0C()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = sub_100BF7024();
  v0[21] = v2;
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url);
  v4 = v3;
  v0[22] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100BF6ED0;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_100673C7C;
  v6[3] = &unk_10129A030;
  v6[4] = v5;
  objc_msgSend(v2, "startFetchingMetadataForURL:completionHandler:", v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_100BF6ED0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 184) = v2;
  if (v2)
    v3 = sub_100BF6F80;
  else
    v3 = sub_100BF6F2C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_100BF6F2C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD **)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 144));
  v4 = *(_QWORD *)(v0 + 120);

  *v3 = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BF6F80()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  __n128 v4;
  unint64_t v5;
  _BYTE *v6;
  __n128 v7;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v4 = swift_release(*(_QWORD *)(v0 + 144));
  swift_willThrow(v4);

  swift_errorRetain(v2);
  LOBYTE(v1) = sub_100BF7FB4(v2);
  v5 = sub_1007170B0();
  swift_allocError(&type metadata for CRLMetadataProviderError, v5, 0, 0);
  *v6 = (_BYTE)v1;
  swift_willThrow(v7);
  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100BF7024()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)LPMetadataProvider), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100BF7094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v18;

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url);
  v7 = v6;
  objc_msgSend(v5, "setURL:", v6);

  v8 = objc_msgSend(objc_allocWithZone((Class)LPFileMetadata), "init");
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
  }
  else
  {
    URL.relativeString.getter();
    v10 = v11;
    v9 = 0;
  }
  swift_bridgeObjectRetain(v9);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v8, "setName:", v12);

  v13 = static UTType.emailMessage.getter();
  UTType.identifier.getter(v13);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v8, "setType:", v16);

  objc_msgSend(v5, "setSpecialization:", v8);
  return v5;
}

uint64_t sub_100BF723C(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(double *)(v3 + 24) = a2;
  *(double *)(v3 + 32) = a3;
  *(double *)(v3 + 16) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static MainActor.shared.getter(v4);
  v5 = (_QWORD *)swift_task_alloc(dword_101409754);
  *(_QWORD *)(v3 + 56) = v5;
  *v5 = v3;
  v5[1] = sub_100BF72A8;
  return sub_100BF6574();
}

uint64_t sub_100BF72A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 40);
  if (v1)
  {
    swift_errorRelease(v1);
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100BF7420;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_100BF7368;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_100BF7368()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 72);
  v3 = *(double *)(v0 + 24);
  v2 = *(double *)(v0 + 32);
  v4 = *(double *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  v5 = objc_msgSend(objc_allocWithZone((Class)LPLinkView), "initWithMetadata:", v1);
  objc_msgSend(v5, "sizeThatFits:", v4, v4 * 3.0);
  v8 = sub_100BF7F14(v6, v7, v3, v2, v4);
  v10 = v9;

  return (*(uint64_t (**)(double, uint64_t, BOOL))(v0 + 8))(COERCE_DOUBLE(*(_QWORD *)&v8), v10, *(_QWORD *)(v0 + 64) != 0);
}

uint64_t sub_100BF7420()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD, _QWORD, BOOL, __n128))(v0 + 8))(0, 0, *(_QWORD *)(v0 + 64) != 0, v1);
}

id sub_100BF7490()
{
  return sub_10067865C(type metadata accessor for CRLURLMetadataProviderBase);
}

uint64_t sub_100BF7554()
{
  return type metadata accessor for CRLURLMetadataProviderBase(0);
}

uint64_t type metadata accessor for CRLURLMetadataProviderBase(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101409740, (uint64_t)&nominal type descriptor for CRLURLMetadataProviderBase);
}

uint64_t sub_100BF7570(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F2D240;
    v4[2] = &unk_100F2D258;
    v4[3] = &unk_100F2D258;
    v4[4] = &unk_100F2D258;
    v4[5] = &unk_100F2D240;
    v4[6] = &unk_100F2D258;
    v4[7] = &unk_100F2D258;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_100BF75F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  _BYTE *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27[2];
  char *v28;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v27 - v9;
  v11 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation;
  v12 = sub_1004B804C(&qword_1014097B8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v27[0] = v11;
  v13(v11, 1, 1, v12);
  v14 = OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_imageProviderTask;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_imageProviderTask) = 0;
  v15 = OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider__image;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider__image) = 0;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v28 = (char *)a1;
  v17 = v16(v10, a1, v4);
  LOBYTE(a1) = URL.isFileURL.getter(v17);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v10, v4);
  if ((a1 & 1) != 0)
  {
    v19 = sub_1007170B0();
    swift_allocError(&type metadata for CRLMetadataProviderError, v19, 0, 0);
    *v20 = 5;
    swift_willThrow(v21);
    v18(v28, v4);
    sub_1004CB800(v27[0], &qword_101409858);
    swift_release(*(_QWORD *)((char *)v2 + v14));

    v22 = type metadata accessor for CRLRemoteURLMetadataProvider(0);
    swift_deallocPartialClassInstance(v2, v22, *(unsigned int *)((swift_isaMask & *v2) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v2) + 0x34));
  }
  else
  {
    v23 = v28;
    v16(v7, (uint64_t)v28, v4);
    v24 = v27[1];
    v25 = sub_100BF6478((uint64_t)v7);
    if (!v24)
      v2 = v25;
    v18(v23, v4);
  }
  return v2;
}

void sub_100BF7800()
{
  uint64_t v0;

  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation, &qword_101409858);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_imageProviderTask));

}

id sub_100BF7844()
{
  return sub_10067865C(type metadata accessor for CRLRemoteURLMetadataProvider);
}

uint64_t sub_100BF78A0()
{
  return type metadata accessor for CRLRemoteURLMetadataProvider(0);
}

uint64_t type metadata accessor for CRLRemoteURLMetadataProvider(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1014097A0, (uint64_t)&nominal type descriptor for CRLRemoteURLMetadataProvider);
}

void sub_100BF78BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100BF7934(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F2D258;
    v4[2] = &unk_100F2D258;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 384);
  }
}

void sub_100BF7934(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1014097B0)
  {
    v2 = sub_1004CB6A4(&qword_1014097B8);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1014097B0);
  }
}

uint64_t sub_100BF79F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch(sub_100BF7A60, v4, v5);
}

uint64_t sub_100BF7A60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v1[3];
  v3 = static MainActor.shared.getter(a1);
  v1[8] = v3;
  v4 = swift_task_alloc(32);
  v1[9] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[10] = v5;
  v6 = sub_1004B804C((uint64_t *)&unk_101409880);
  *v5 = v1;
  v5[1] = sub_100BF7B1C;
  return withCheckedContinuation<A>(isolation:function:_:)(v1[2], v3, &protocol witness table for MainActor, 0xD000000000000012, 0x8000000101000360, sub_100BF879C, v4, v6);
}

uint64_t sub_100BF7B1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100685F28, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_100BF7B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v4 = sub_1004B804C(&qword_1013EE580);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend((id)objc_opt_self(QLThumbnailGenerator), "sharedGenerator");
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10129A058, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100703EB0;
  v13 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100702A48;
  aBlock[3] = &unk_10129A070;
  v11 = _Block_copy(aBlock);
  objc_msgSend(v7, "generateRepresentationsForRequest:updateHandler:", a2, v11, swift_release(v13).n128_f64[0]);
  _Block_release(v11);

}

id sub_100BF7CE0()
{
  return sub_10067865C(type metadata accessor for CRLFileURLMetadataProvider);
}

uint64_t sub_100BF7CEC()
{
  return type metadata accessor for CRLFileURLMetadataProvider(0);
}

uint64_t type metadata accessor for CRLFileURLMetadataProvider(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101409848, (uint64_t)&nominal type descriptor for CRLFileURLMetadataProvider);
}

uint64_t sub_100BF7D08(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 384);
}

char *sub_100BF7D3C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  objc_class *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  unint64_t v18;
  _BYTE *v19;
  __n128 v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  __n128 v24;
  _QWORD v26[2];
  uint64_t v27;

  v26[0] = a2;
  v27 = a3;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v26 - v10;
  v12 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
  v12((char *)v26 - v10, a1, v4, v9);
  v13 = (objc_class *)type metadata accessor for CRLFileURLMetadataProvider(0);
  v14 = objc_allocWithZone(v13);
  if ((URL.isFileURL.getter(v14) & 1) != 0)
  {
    ((void (*)(char *, char *, uint64_t))v12)(v7, v11, v4);
    v15 = v26[1];
    v16 = (char *)sub_100BF6478((uint64_t)v7);
    if (!v15)
    {
      v7 = v16;
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v11, v4);
      v22 = &v7[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename];
      v23 = v27;
      *(_QWORD *)v22 = v26[0];
      *((_QWORD *)v22 + 1) = v23;
      v24 = swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t, __n128))v21)(a1, v4, v24);
      return v7;
    }
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v11, v4);
  }
  else
  {
    v18 = sub_1007170B0();
    swift_allocError(&type metadata for CRLMetadataProviderError, v18, 0, 0);
    *v19 = 5;
    swift_willThrow(v20);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v11, v4);
    swift_deallocPartialClassInstance(v14, v13, *(unsigned int *)((swift_isaMask & *v14) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v14) + 0x34));
  }
  v17(a1, v4);
  swift_bridgeObjectRelease();
  return v7;
}

double sub_100BF7F14(double a1, double a2, double a3, double a4, double a5)
{
  double v7;

  v7 = a2;
  if (a1 < a3 && a2 < a4)
  {
    a2 = a4;
    if (v7 + v7 < a1)
      goto LABEL_14;
    a1 = sub_100062E78(1, a1, v7, a3, a4);
  }
  else if (a1 < a2 && a5 < a2)
  {
    a1 = sub_1000603DC(a1, a2, a5 / a2);
  }
  a5 = a1;
LABEL_14:
  if (a5 < a3)
    return sub_1000603DC(a5, a2, a3 / a5);
  return a5;
}

uint64_t sub_100BF7FB4(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[72];
  id v42;
  _BYTE v43[72];
  __int128 v44;
  __int128 v45;

  v2 = (void *)_convertErrorToNSError(_:)(a1);
  v3 = objc_msgSend(v2, "userInfo");

  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  if (!*(_QWORD *)(v4 + 16) || (v7 = sub_100842E98(v5, v6), (v8 & 1) == 0))
  {
    v44 = 0u;
    v45 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v45 + 1))
  {
LABEL_7:
    sub_1004CB800((uint64_t)&v44, &qword_1013E0230);
    goto LABEL_8;
  }
  v9 = sub_1008588B0();
  if ((swift_dynamicCast(&v42, &v44, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = v42;
LABEL_13:
    v20 = objc_msgSend(v10, "code");

    if ((uint64_t)v20 <= 0)
    {
      if (v20 == (id)-1009)
      {
        v22 = 0xE700000000000000;
        v23 = 0x656E696C66666FLL;
        v21 = 1;
      }
      else if (v20 == (id)-1003)
      {
        v22 = 0x80000001010002F0;
        v21 = 3;
        v23 = 0xD000000000000012;
      }
      else
      {
LABEL_24:
        v21 = 0;
        v22 = 0xE700000000000000;
        v23 = 0x6E776F6E6B6E75;
      }
    }
    else
    {
      switch((unint64_t)v20)
      {
        case 1uLL:
          goto LABEL_24;
        case 2uLL:
          v21 = 0;
          v22 = 0xEC00000064656C69;
          v23 = 0x6166206863746566;
          break;
        case 3uLL:
          v23 = 0x656C6C65636E6163;
          v21 = 4;
          v22 = 0xE900000000000064;
          break;
        case 4uLL:
          v21 = 0;
          v22 = 0xE900000000000074;
          v23 = 0x756F2064656D6974;
          break;
        default:
          if (v20 != (id)102)
            goto LABEL_24;
          v23 = 0xD000000000000016;
          v22 = 0x8000000101000310;
          v21 = 2;
          break;
      }
    }
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v44, 0, 0);
    v35 = (void *)static OS_os_log.crlDefault;
    v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v36, v41);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v37 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v23;
    v33 = inited + 32;
    *(_QWORD *)(inited + 64) = v37;
    *(_QWORD *)(inited + 40) = v22;
    v27 = v35;
    v38 = static os_log_type_t.error.getter(v27);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v38, "Link presentation error: %@", 27, 2, inited);
    goto LABEL_31;
  }
LABEL_8:
  v11 = (void *)_convertErrorToNSError(_:)(a1);
  v12 = objc_msgSend(v11, "domain");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;
  v16 = v15;

  static String._unconditionallyBridgeFromObjectiveC(_:)(LPErrorDomain);
  if (v14 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n(v16, 2);
LABEL_12:
    v10 = (id)_convertErrorToNSError(_:)(a1);
    goto LABEL_13;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_12;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, &v44, 0, 0);
  v24 = (void *)static OS_os_log.crlDefault;
  v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v25, v43);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v42 = a1;
  v27 = v24;
  swift_errorRetain(a1);
  v28 = sub_1004B804C(&qword_1013E0210);
  v29 = String.init<A>(describing:)(&v42, v28);
  v31 = v30;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v32 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v29;
  v33 = inited + 32;
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 40) = v31;
  v34 = static os_log_type_t.error.getter(v32);
  sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v34, "Got unexpected error type: %@", 29, 2, inited);
  v21 = 0;
LABEL_31:
  swift_errorRelease(a1);
  swift_setDeallocating(inited);
  v39 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v33, 1, v39);

  return v21;
}

uint64_t sub_100BF84BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  _QWORD v16[3];
  _BYTE v17[24];

  v3 = sub_1004B804C(&qword_1014097B8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101409858);
  __chkstk_darwin(v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v16 - v11;
  v13 = v1 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation, v17, 0, 0);
  sub_100BF8674(v13, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_1004CB800((uint64_t)v12, &qword_101409858);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    swift_beginAccess(v13, v16, 33, 0);
    sub_100BF86BC((uint64_t)v9, v13);
    return swift_endAccess(v16);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
  result = sub_1004CB800((uint64_t)v12, &qword_101409858);
  if (a1)
  {
    v16[0] = a1;
    v15 = a1;
    CheckedContinuation.resume(returning:)(v16, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BF8674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101409858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF86BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101409858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF8704()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100BF8730(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_101409864);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100BF6DA0(a1, v4, v5, v6);
}

void sub_100BF879C(uint64_t a1)
{
  uint64_t v1;

  sub_100BF7B84(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100BF87A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EE580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100BF8808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BF8818(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLMetadataProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100BF886C + 4 * byte_100F2D205[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100BF88A0 + 4 * byte_100F2D200[v4]))();
}

uint64_t sub_100BF88A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BF88A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BF88B0);
  return result;
}

uint64_t sub_100BF88BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BF88C4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100BF88C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BF88D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMetadataProviderError()
{
  return &type metadata for CRLMetadataProviderError;
}

unint64_t sub_100BF88F0()
{
  unint64_t result;

  result = qword_101409890;
  if (!qword_101409890)
  {
    result = swift_getWitnessTable(&unk_100F2D30C, &type metadata for CRLMetadataProviderError);
    atomic_store(result, (unint64_t *)&qword_101409890);
  }
  return result;
}

uint64_t sub_100BF8934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;

  sub_1004BB62C(a1, v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
  v24 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID;
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a2, v25);
  *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = a3;
  v26 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
  *(_QWORD *)v26 = a4;
  *(_BYTE *)(v26 + 8) = 0;
  v27 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
  *(_QWORD *)v27 = a5;
  *(_BYTE *)(v27 + 8) = 0;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = a6;
  *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = a7;
  sub_1008C89B0(a8, v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID);
  *(_BYTE *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = a9;
  v28 = (_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  *v28 = a10;
  v28[1] = a11;
  v29 = (_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  *v29 = a12;
  v29[1] = a13;
  v30 = (_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
  *v30 = a14;
  v30[1] = a15;
  v31 = (_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
  *v31 = a16;
  v31[1] = a17;
  return v17;
}

uint64_t sub_100BF8AD8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100BF8B18 + 4 * byte_100F2D380[a1]))(0x6564496472616F62, 0xEF7265696669746ELL);
}

uint64_t sub_100BF8B18()
{
  return 0x444955556D657469;
}

unint64_t sub_100BF8B30()
{
  return 0xD000000000000012;
}

uint64_t sub_100BF8C74()
{
  unsigned __int8 *v0;

  return sub_100BF8AD8(*v0);
}

uint64_t sub_100BF8C7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100BFA39C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100BF8CA0(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_100BF8CAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BFA12C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BF8CD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100BFA12C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF8CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004BB670(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, (uint64_t *)&unk_1013E1A50);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100BF8DC4()
{
  return type metadata accessor for CRLBoardItemRealTimeChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemRealTimeChangeRecord(uint64_t a1)
{
  uint64_t result;

  result = qword_1014098D8;
  if (!qword_1014098D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardItemRealTimeChangeRecord);
  return result;
}

void sub_100BF8E08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[13];

  v2 = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for UUID(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[3] = "\t";
      v8[4] = "\t";
      v8[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[6] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_1005E26CC(319);
      if (v7 <= 0x3F)
      {
        v8[7] = *(_QWORD *)(v6 - 8) + 64;
        v8[8] = &unk_100F2D3E0;
        v8[9] = &unk_100F2D3F8;
        v8[10] = &unk_100F2D3F8;
        v8[11] = &unk_100F2D3F8;
        v8[12] = &unk_100F2D3F8;
        swift_updateClassMetadata2(a1, 256, 13, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_100BF8EDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v28;
  char v29;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1014099E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100BFA12C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys, v11, v9, v10);
  v12 = v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
  LOBYTE(v28) = 0;
  v13 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v14 = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, &v28, v5, v13, v14);
  if (!v2)
  {
    v15 = v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID;
    LOBYTE(v28) = 1;
    v16 = type metadata accessor for UUID(0);
    v17 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v28, v5, v16, v17);
    v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
    LOBYTE(v28) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v18, &v28, v5);
    v19 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
    v20 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                             + 8);
    LOBYTE(v28) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v28, v5);
    v21 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
    v22 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                             + 8);
    LOBYTE(v28) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, &v28, v5);
    *(_QWORD *)&v28 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
    v29 = 5;
    v23 = sub_100BFA1B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v29, v5, &type metadata for CRLSerializableObjectOptions, v23);
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue);
    LOBYTE(v28) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v24);
    LOBYTE(v28) = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, &v28, v5, v16, v17);
    v25 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated);
    LOBYTE(v28) = 8;
    KeyedEncodingContainer.encode(_:forKey:)(v25, &v28, v5);
    v28 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
    v29 = 9;
    v26 = sub_100587C2C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v28, &v29, v5, &type metadata for Data, v26);
    v28 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
    v29 = 10;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v28, &v29, v5, &type metadata for Data, v26);
    v28 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    v29 = 11;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v28, &v29, v5, &type metadata for Data, v26);
    v28 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
    v29 = 12;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v28, &v29, v5, &type metadata for Data, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t *sub_100BF9304(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  char v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  __int128 v48;
  char v49;

  v47 = *v1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v8);
  v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1004B804C(&qword_1014099C8);
  v10 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v14);
  v15 = sub_100BFA12C();
  v45 = v12;
  v16 = v46;
  v17 = v13;
  v18 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys, v15, v14, v17);
  if (v16)
  {
    swift_deallocPartialClassInstance(v1, v47, *(unsigned int *)(*v1 + 48), *(unsigned __int16 *)(*v1 + 52));
    v37 = a1;
  }
  else
  {
    v46 = a1;
    LOBYTE(v48) = 0;
    v19 = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
    v21 = (uint64_t)v43;
    v20 = v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v8, &v48, v44, v8, v19);
    sub_1004BB62C(v21, (uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
    LOBYTE(v48) = 1;
    v22 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v23 = v7;
    v24 = v42;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v42, &v48, v20, v42, v22);
    v43 = (char *)v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID, v23, v24);
    LOBYTE(v48) = 2;
    v25 = KeyedDecodingContainer.decode(_:forKey:)(&v48, v20);
    v39 = v1;
    *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = v25;
    LOBYTE(v48) = 3;
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v48, v44);
    v27 = (uint64_t)v1
        + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
    *(_QWORD *)v27 = v26;
    *(_BYTE *)(v27 + 8) = v28 & 1;
    LOBYTE(v48) = 4;
    v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v48, v44);
    v30 = (uint64_t)v1
        + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
    *(_QWORD *)v30 = v29;
    *(_BYTE *)(v30 + 8) = v31 & 1;
    v49 = 5;
    v32 = sub_100BFA170();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSerializableObjectOptions, &v49, v44, &type metadata for CRLSerializableObjectOptions, v32);
    *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = v48;
    LOBYTE(v48) = 6;
    *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = KeyedDecodingContainer.decode(_:forKey:)(&v48, v44);
    LOBYTE(v48) = 7;
    v33 = (uint64_t)v40;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v24, &v48, v44, v24, v43);
    sub_1008C89B0(v33, (uint64_t)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID);
    LOBYTE(v48) = 8;
    v35 = KeyedDecodingContainer.decode(_:forKey:)(&v48, v44);
    *((_BYTE *)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = v35 & 1;
    v49 = 9;
    v36 = sub_100587AC0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v49, v44, &type metadata for Data, v36);
    *(_OWORD *)((char *)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData) = v48;
    v49 = 10;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v49, v44, &type metadata for Data, v36);
    *(_OWORD *)((char *)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData) = v48;
    v49 = 11;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v49, v44, &type metadata for Data, v36);
    *(_OWORD *)((char *)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData) = v48;
    v49 = 12;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v49, v44, &type metadata for Data, v36);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v44);
    v18 = v39;
    *(_OWORD *)((char *)v39 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData) = v48;
    v37 = v46;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v37);
  return v18;
}

uint64_t sub_100BF99E4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
}

uint64_t sub_100BF99F8(uint64_t *a1, uint64_t *a2)
{
  return sub_100BF9AD4(*a1, *a2);
}

uint64_t *sub_100BF9A04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *result;

  v6 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  result = sub_100BF9304(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_100BF9A58(_QWORD *a1)
{
  return sub_100BF8EDC(a1);
}

uint64_t sub_100BF9A78(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013EDC48, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D438);
  result = sub_1004B7878(&qword_1013E76F8, type metadata accessor for CRLBoardItemRealTimeChangeRecord, (uint64_t)&unk_100F2D410);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100BF9AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for UUID(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - v16;
  v18 = a1;
  v19 = a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
  v20 = a2;
  v21 = a2 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
  v22 = static UUID.== infix(_:_:)(v19);
  sub_10085E600(v19, (uint64_t)v17);
  sub_10085E600(v21, (uint64_t)v14);
  if ((v22 & 1) == 0)
  {
    sub_1004BB670((uint64_t)v14);
    sub_1004BB670((uint64_t)v17);
    goto LABEL_38;
  }
  v23 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v24 = *(_QWORD *)&v17[v23];
  v25 = *(_QWORD *)&v17[v23 + 8];
  v26 = &v14[v23];
  v27 = *((_QWORD *)v26 + 1);
  if (v24 == *(_QWORD *)v26 && v25 == v27)
  {
    sub_1004BB670((uint64_t)v14);
    sub_1004BB670((uint64_t)v17);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *(_QWORD *)v26, v27, 0);
    sub_1004BB670((uint64_t)v14);
    sub_1004BB670((uint64_t)v17);
    v30 = 0;
    if ((v29 & 1) == 0)
      return v30 & 1;
  }
  v31 = v18;
  v32 = v20;
  if ((static UUID.== infix(_:_:)(v18 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID) & 1) == 0
    || *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) != *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion)
    || *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) != *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions)
    || *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) != *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue))
  {
    goto LABEL_38;
  }
  v33 = v20 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID;
  v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1006950CC(v18 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, (uint64_t)v11);
  sub_1006950CC(v33, v34);
  v36 = v61;
  v35 = v62;
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v37((uint64_t)v11, 1, v62) == 1)
  {
    if (v37(v34, 1, v35) == 1)
    {
      sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
      goto LABEL_21;
    }
LABEL_19:
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F62D0);
    goto LABEL_38;
  }
  sub_1006950CC((uint64_t)v11, (uint64_t)v8);
  if (v37(v34, 1, v35) == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v35);
    goto LABEL_19;
  }
  v38 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v60, v34, v35);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v39 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v38);
  v40 = *(void (**)(char *, uint64_t))(v36 + 8);
  v40(v38, v35);
  v40(v8, v35);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  if ((v39 & 1) == 0)
    goto LABEL_38;
LABEL_21:
  if (*(unsigned __int8 *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) != *(unsigned __int8 *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated))
    goto LABEL_38;
  v41 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  v42 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  v43 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  v44 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  if (v42 >> 60 == 15)
  {
    if (v44 >> 60 != 15)
      goto LABEL_36;
  }
  else
  {
    if (v44 >> 60 == 15)
      goto LABEL_36;
    sub_10057939C(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData), *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8));
    sub_10057939C(v43, v44);
    sub_1007B38CC(v41, v42);
    v46 = v45;
    sub_1004BE2FC(v43, v44);
    sub_1004BE2FC(v41, v42);
    if ((v46 & 1) == 0)
      goto LABEL_38;
  }
  v41 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  v42 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  v43 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  v44 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  if (v42 >> 60 == 15)
  {
    if (v44 >> 60 != 15)
      goto LABEL_36;
LABEL_32:
    v41 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    v42 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8);
    v43 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    v44 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8);
    if (v42 >> 60 == 15)
    {
      if (v44 >> 60 == 15)
      {
LABEL_41:
        v54 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
        v55 = *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8);
        v56 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
        v57 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8);
        if (v55 >> 60 == 15)
        {
          if (v57 >> 60 == 15)
          {
            v30 = 1;
            return v30 & 1;
          }
        }
        else if (v57 >> 60 != 15)
        {
          sub_10057939C(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));
          sub_10057939C(v56, v57);
          sub_1007B38CC(v54, v55);
          v30 = v58;
          sub_1004BE2FC(v56, v57);
          sub_1004BE2FC(v54, v55);
          return v30 & 1;
        }
        sub_10057939C(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));
        sub_10057939C(v56, v57);
        sub_1004BE2FC(v54, v55);
        v49 = v56;
        v50 = v57;
        goto LABEL_37;
      }
    }
    else if (v44 >> 60 != 15)
    {
      sub_10057939C(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData), *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8));
      sub_10057939C(v43, v44);
      sub_1007B38CC(v41, v42);
      v53 = v52;
      sub_1004BE2FC(v43, v44);
      sub_1004BE2FC(v41, v42);
      if ((v53 & 1) == 0)
        goto LABEL_38;
      goto LABEL_41;
    }
LABEL_36:
    sub_10057939C(v41, v42);
    sub_10057939C(v43, v44);
    sub_1004BE2FC(v41, v42);
    v49 = v43;
    v50 = v44;
LABEL_37:
    sub_1004BE2FC(v49, v50);
    goto LABEL_38;
  }
  if (v44 >> 60 == 15)
    goto LABEL_36;
  sub_10057939C(*(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData), *(_QWORD *)(v31 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8));
  sub_10057939C(v43, v44);
  sub_1007B38CC(v41, v42);
  v48 = v47;
  sub_1004BE2FC(v43, v44);
  sub_1004BE2FC(v41, v42);
  if ((v48 & 1) != 0)
    goto LABEL_32;
LABEL_38:
  v30 = 0;
  return v30 & 1;
}

unint64_t sub_100BFA12C()
{
  unint64_t result;

  result = qword_1014099D0;
  if (!qword_1014099D0)
  {
    result = swift_getWitnessTable(&unk_100F2D578, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014099D0);
  }
  return result;
}

unint64_t sub_100BFA170()
{
  unint64_t result;

  result = qword_1014099D8;
  if (!qword_1014099D8)
  {
    result = swift_getWitnessTable(&unk_100F28C20, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_1014099D8);
  }
  return result;
}

unint64_t sub_100BFA1B4()
{
  unint64_t result;

  result = qword_1014099E8;
  if (!qword_1014099E8)
  {
    result = swift_getWitnessTable(&unk_100F28BF8, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_1014099E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemRealTimeChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100BFA244 + 4 * byte_100F2D392[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100BFA278 + 4 * byte_100F2D38D[v4]))();
}

uint64_t sub_100BFA278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BFA280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100BFA288);
  return result;
}

uint64_t sub_100BFA294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100BFA29CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100BFA2A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100BFA2A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_100BFA2C8()
{
  unint64_t result;

  result = qword_1014099F0;
  if (!qword_1014099F0)
  {
    result = swift_getWitnessTable(&unk_100F2D550, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014099F0);
  }
  return result;
}

unint64_t sub_100BFA310()
{
  unint64_t result;

  result = qword_1014099F8;
  if (!qword_1014099F8)
  {
    result = swift_getWitnessTable(&unk_100F2D4C0, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014099F8);
  }
  return result;
}

unint64_t sub_100BFA358()
{
  unint64_t result;

  result = qword_101409A00;
  if (!qword_101409A00)
  {
    result = swift_getWitnessTable(&unk_100F2D4E8, &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101409A00);
  }
  return result;
}

uint64_t sub_100BFA39C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x444955556D657469 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x444955556D657469, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000012)
  {
    v8 = 0x8000000100FB0F10;
    if (a2 == 0x8000000100FB0F10)
      goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FB0F10, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD00000000000002BLL && a2 == 0x8000000100FD8190)
  {
    v9 = 0x8000000100FD8190;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002BLL, 0x8000000100FD8190, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0xD000000000000025 && a2 == 0x8000000100FD81C0)
  {
    v10 = 0x8000000100FD81C0;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000025, 0x8000000100FD81C0, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x704F7463656A626FLL && a2 == 0xED0000736E6F6974)
  {
    v11 = 0xED0000736E6F6974;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x704F7463656A626FLL, 0xED0000736E6F6974, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x657079546D657469 && a2 == 0xED000065756C6156)
  {
    v12 = 0xED000065756C6156;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657079546D657469, 0xED000065756C6156, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_43;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100FB8A10)
  {
    v13 = 0x8000000100FB8A10;
LABEL_49:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FB8A10, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_49;
  }
  if (a1 == 0x616572436D657469 && a2 == 0xEB00000000646574)
  {
    v14 = 0xEB00000000646574;
LABEL_55:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x616572436D657469, 0xEB00000000646574, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_55;
  }
  if (a1 == 0x52436E6F6D6D6F63 && a2 == 0xEE00617461445444)
  {
    v15 = 0xEE00617461445444;
LABEL_61:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x52436E6F6D6D6F63, 0xEE00617461445444, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_61;
  }
  if (a1 == 0xD000000000000010)
  {
    v16 = 0x8000000100FAA3F0;
    if (a2 == 0x8000000100FAA3F0)
      goto LABEL_66;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAA3F0, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_66:
    swift_bridgeObjectRelease(v16);
    return 10;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x80000001010003E0)
  {
    v17 = 0x80000001010003E0;
LABEL_72:
    swift_bridgeObjectRelease(v17);
    return 11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001010003E0, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
    goto LABEL_72;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x8000000101000400)
  {
    swift_bridgeObjectRelease(0x8000000101000400);
    return 12;
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000101000400, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v18 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t CRLLinkViewHostingRep.crlaxLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  CRLLinkViewHostingRep.getAccessibilityLabelTokens(forUserInput:)(0);
  v0 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v1 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v2 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

void CRLLinkViewHostingRep.crlaxUserInputLabels.getter()
{
  CRLLinkViewHostingRep.getAccessibilityLabelTokens(forUserInput:)(1);
}

void CRLLinkViewHostingRep.getAccessibilityLabelTokens(forUserInput:)(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  double *v4;
  id v5;
  id v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double *v25;
  double *v26;
  unint64_t v27;
  unint64_t v28;
  double *v29;
  double *v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  unint64_t v38;
  unint64_t v39;
  double *v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  _QWORD v57[2];
  _QWORD v58[4];
  double *v59;
  double *v60;

  v2 = v1;
  v4 = _swiftEmptyArrayStorage;
  v60 = _swiftEmptyArrayStorage;
  v5 = objc_msgSend(v1, "layout");
  v6 = objc_msgSend(v5, "info");

  if (!v6)
    goto LABEL_38;
  ObjectType = swift_getObjectType(v6);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem))
    v8 = v6;
  else
    v8 = 0;
  if (!v8)
  {
    swift_unknownObjectRelease(v6);
LABEL_38:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v9 = type metadata accessor for CRLBoardItem(0);
  v10 = (_QWORD *)swift_dynamicCastClass(v8, v9);
  if (!v10)
    goto LABEL_29;
  v11 = v10;
  v56 = (*(uint64_t (**)(void))((swift_isaMask & *v10) + 0xD0))();
  v13 = v12;
  CRLLinkViewHostingRep.embeddedLabelStringsFromLinkView()();
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    v53 = v13;
    v54 = v11;
    v55 = v6;
    v59 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v16, 0);
    v4 = _swiftEmptyArrayStorage;
    v17 = sub_1004D292C();
    v18 = (uint64_t *)(v15 + 40);
    do
    {
      v19 = *v18;
      v58[2] = *(v18 - 1);
      v58[3] = v19;
      v58[0] = 548913696;
      v58[1] = 0xA400000000000000;
      v57[0] = 8236;
      v57[1] = 0xE200000000000000;
      v20 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v58, v57, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v17, v17, v17);
      v22 = v21;
      v59 = v4;
      v24 = *((_QWORD *)v4 + 2);
      v23 = *((_QWORD *)v4 + 3);
      if (v24 >= v23 >> 1)
      {
        sub_1006006EC(v23 > 1, v24 + 1, 1);
        v4 = v59;
      }
      v18 += 2;
      *((_QWORD *)v4 + 2) = v24 + 1;
      v25 = &v4[2 * v24];
      *((_QWORD *)v25 + 4) = v20;
      *((_QWORD *)v25 + 5) = v22;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v6 = v55;
    v13 = v53;
    v11 = v54;
    if ((a1 & 1) != 0)
      goto LABEL_13;
LABEL_19:
    v30 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    if (v32 >= v31 >> 1)
      v30 = (double *)sub_100D0EF94((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v32 + 1;
    v33 = &v30[2 * v32];
    *((_QWORD *)v33 + 4) = v56;
    *((_QWORD *)v33 + 5) = v13;
    v60 = v30;
    sub_10061EAEC((uint64_t)v4);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    goto LABEL_19;
LABEL_13:
  sub_10061EAEC((uint64_t)v4);
  v26 = v60;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = (double *)sub_100D0EF94(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
  v28 = *((_QWORD *)v26 + 2);
  v27 = *((_QWORD *)v26 + 3);
  if (v28 >= v27 >> 1)
    v26 = (double *)sub_100D0EF94((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  *((_QWORD *)v26 + 2) = v28 + 1;
  v29 = &v26[2 * v28];
  *((_QWORD *)v29 + 4) = v56;
  *((_QWORD *)v29 + 5) = v13;
  v60 = v26;
LABEL_22:
  v34 = (*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x130))();
  v36 = v35;
  if (String.count.getter(v34, v35) >= 1)
  {
    v37 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v37 = (double *)sub_100D0EF94(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
    v39 = *((_QWORD *)v37 + 2);
    v38 = *((_QWORD *)v37 + 3);
    if (v39 >= v38 >> 1)
      v37 = (double *)sub_100D0EF94((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
    *((_QWORD *)v37 + 2) = v39 + 1;
    v40 = &v37[2 * v39];
    *((_QWORD *)v40 + 4) = v34;
    *((_QWORD *)v40 + 5) = v36;
    swift_unknownObjectRelease(v6);
    v60 = v37;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  swift_unknownObjectRelease(v6);
LABEL_30:
  if ((v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] & 1) != 0)
  {
    v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v42 = String._bridgeToObjectiveC()();
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, v43, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v46 = v45;
    v48 = v47;

    v49 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_100D0EF94(0, v49[2] + 1, 1, v49);
    v51 = v49[2];
    v50 = v49[3];
    if (v51 >= v50 >> 1)
      v49 = sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
    v49[2] = v51 + 1;
    v52 = &v49[2 * v51];
    v52[4] = v46;
    v52[5] = v48;
  }
}

void CRLLinkViewHostingRep.embeddedLabels(in:)(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!a1)
    return;
  v1 = a1;
  v2 = objc_msgSend(v1, "subviews");
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_4;
LABEL_20:

    swift_bridgeObjectRelease();
    return;
  }
  if (v4 < 0)
    v16 = v4;
  else
    v16 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_20;
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      v10 = objc_opt_self(UILabel);
      v11 = swift_dynamicCastObjCClass(v9, v10);
      if (v11)
      {
        v12 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v15);
      }
      else
      {
        v7 = CRLLinkViewHostingRep.embeddedLabels(in:)(v9);
        sub_10061FEA0(v7);
      }

    }
    swift_bridgeObjectRelease();
  }
}

void CRLLinkViewHostingRep.embeddedLabelStringsFromLinkView()()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double *v18;
  uint64_t v19;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView);
  v2 = v1;
  CRLLinkViewHostingRep.embeddedLabels(in:)(v1);
  v4 = v3;

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease_n(v4, 2);
    return;
  }
  if (v4 < 0)
    v19 = v4;
  else
    v19 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v5)
    goto LABEL_20;
LABEL_3:
  if (v5 >= 1)
  {
    v6 = 0;
    v7 = _swiftEmptyArrayStorage;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      else
        v8 = *(id *)(v4 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, "text");
      if (v10)
      {
        v11 = v10;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;
        v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = (double *)sub_100D0EF94(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v17 = *((_QWORD *)v7 + 2);
        v16 = *((_QWORD *)v7 + 3);
        if (v17 >= v16 >> 1)
          v7 = (double *)sub_100D0EF94((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
        *((_QWORD *)v7 + 2) = v17 + 1;
        v18 = &v7[2 * v17];
        *((_QWORD *)v18 + 4) = v13;
        *((_QWORD *)v18 + 5) = v15;
      }
      else
      {

      }
      ++v6;
    }
    while (v5 != v6);
    goto LABEL_20;
  }
  __break(1u);
}

void CRLLinkViewHostingRep.generateSnapshotOnMainThread()()
{
  void *v0;
  id v1;
  id v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  id v40;
  double v41;
  CGFloat v42;
  CGContext *v43;
  CGContext *v44;
  UIImage *v45;
  UIImage *v46;
  NSData *v47;
  NSData *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  Class isa;
  id v54;
  CGSize v55;
  CGSize v56;
  CGSize v57;

  if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    return;
  }
  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (!v2)
    goto LABEL_28;
  ObjectType = swift_getObjectType(v2);
  v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = v2;
  else
    v6 = 0;
  if (!v6)
  {
    swift_unknownObjectRelease(v2);
LABEL_28:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v7 = swift_getObjectType(v6);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v7, v5);
  swift_unknownObjectRelease(v2);
  if (v8)
  {
    v9 = sub_1008992C8((uint64_t)v8);
    objc_msgSend(v9, "_setUseLowMemoryImageFilters:", 1);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "init");
    v11 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    v12 = objc_msgSend(v11, "traitCollection");

    v13 = objc_msgSend(v12, "userInterfaceStyle");
    objc_msgSend(v10, "setOverrideUserInterfaceStyle:", v13);

    objc_msgSend(v10, "addSubview:", v9);
    v14 = objc_msgSend(v9, "layer");
    v15 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    v16 = objc_msgSend(v15, "preferredSizeClass");

    objc_msgSend(v9, "_setPreferredSizeClass:", v16);
    v17 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    objc_msgSend(v17, "size");
    v19 = v18;
    v21 = v20;

    v57.width = 0.0;
    v57.height = 0.0;
    v55.width = v19;
    v55.height = v21;
    LOBYTE(v16) = CGSizeEqualToSize(v55, v57);
    v22 = v9;
    v23 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    v24 = v23;
    if ((v16 & 1) != 0)
    {
      objc_msgSend(v23, "maximumSize");
      v26 = v25;

      v27 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
      objc_msgSend(v27, "maximumSize");
      v29 = v28;
      v31 = v30;

      objc_msgSend(v22, "sizeThatFits:", v29, v31);
      v33 = v32;
    }
    else
    {
      objc_msgSend(v23, "size");
      v26 = v34;
      v33 = v35;

    }
    objc_msgSend(v22, "setFrame:", 0.0, 0.0, v26, v33);

    if ((objc_msgSend(v22, "_applyCornerRadius") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 195, "Expected _applyCornerRadius to be true.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 195, (uint64_t)"Expected _applyCornerRadius to be true.", 39, 2u);
    }
    objc_msgSend(v22, "_effectiveCornerRadius");
    objc_msgSend(v14, "setCornerRadius:");
    objc_msgSend(v22, "layoutIfNeeded");
    objc_msgSend(v22, "bounds");
    v37 = v36;
    v39 = v38;
    v40 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    objc_msgSend(v40, "scale");
    v42 = v41;

    v56.width = v37;
    v56.height = v39;
    UIGraphicsBeginImageContextWithOptions(v56, 0, v42);
    v43 = UIGraphicsGetCurrentContext();
    if (v43)
    {
      v44 = v43;
      objc_msgSend(v14, "renderInContext:", v43);

      v45 = UIGraphicsGetImageFromCurrentImageContext();
      if (v45)
      {
        v46 = v45;
        v47 = UIImagePNGRepresentation(v45);
        if (v47)
        {
          v48 = v47;
          v49 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v51 = v50;

          v52 = objc_allocWithZone((Class)CRLImage);
          sub_1004BE310(v49, v51);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v54 = objc_msgSend(v52, "initWithData:", isa);
          sub_1004BBBC8(v49, v51);

          if (v54)
          {
            objc_msgSend(v54, "CGImage");
            UIGraphicsEndImageContext();

            sub_1004BBBC8(v49, v51);
          }
          else
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 211, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 211, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

            sub_1004BBBC8(v49, v51);
          }
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 210, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 210, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

        }
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 209, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 209, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
    }
    else
    {

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 166, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 166, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void CRLLinkViewHostingRep.generateSnapshotSynchronously()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  double v22;
  id v23;
  void *v24;
  id v25;
  unsigned int v26;
  uint64_t v27;
  dispatch_semaphore_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Class isa;
  uint64_t v33;
  dispatch_semaphore_t v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  double v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  id *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v1 = v0;
  v2 = type metadata accessor for DispatchTimeInterval(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v13 = (void *)objc_opt_self(NSThread);
  if ((objc_msgSend(v13, "isMainThread") & 1) != 0)
  {
    return;
  }
  v51 = v7;
  v52 = v3;
  v53 = v6;
  v14 = objc_msgSend(v1, "layout");
  v15 = objc_msgSend(v14, "info");

  if (!v15)
    goto LABEL_21;
  ObjectType = swift_getObjectType(v15);
  v17 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
  if (v17)
    v18 = v17;
  else
    v18 = 0;
  if (v17)
    v19 = v15;
  else
    v19 = 0;
  if (!v19)
  {
    swift_unknownObjectRelease(v15);
LABEL_21:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v20 = swift_getObjectType(v19);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v20, v18);
  *(_QWORD *)&v22 = swift_unknownObjectRelease(v15).n128_u64[0];
  if (v21)
  {
    v23 = objc_msgSend(v1, "canvas", v22);
    if (v23)
    {
      v24 = v23;
      if ((objc_msgSend(v23, "isCanvasInteractive") & 1) != 0)
      {

      }
      else
      {
        v50 = v24;
        v25 = objc_msgSend(v13, "currentThread");
        v26 = objc_msgSend(v25, "isMainThread");

        if (v26)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 242, "Not expected to run on the main thread.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotSynchronously()", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 242, (uint64_t)"Not expected to run on the main thread.", 39, 2u);
        }
        v48 = objc_msgSend(objc_allocWithZone((Class)LPLinkSnapshotGenerator), "init");
        v27 = swift_allocObject(&unk_10129A400, 24, 7);
        *(_QWORD *)(v27 + 16) = 0;
        v49 = (id *)(v27 + 16);
        v28 = dispatch_semaphore_create(0);
        v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v30 = swift_allocObject(v29, 40, 7);
        *(_OWORD *)(v30 + 16) = xmmword_100EEF400;
        v31 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
        *(_QWORD *)(v30 + 32) = v31;
        aBlock[0] = v30;
        specialized Array._endMutation()(v31);
        sub_1004B8930(0, qword_101409A68, LPLinkSnapshotConfiguration_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v33 = swift_allocObject(&unk_10129A428, 32, 7);
        v47 = v27;
        *(_QWORD *)(v33 + 16) = v27;
        *(_QWORD *)(v33 + 24) = v28;
        v34 = v28;
        aBlock[4] = sub_100BFF884;
        v55 = v33;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_100BFE344;
        aBlock[3] = &unk_10129A440;
        v35 = _Block_copy(aBlock);
        v36 = v55;
        swift_retain(v27);
        v37 = v34;
        *(_QWORD *)&v38 = swift_release(v36).n128_u64[0];
        v39 = v48;
        objc_msgSend(v48, "snapshotForMetadata:configurations:completionHandler:", v21, isa, v35, v38);
        _Block_release(v35);

        static DispatchTime.now()(v40);
        *v5 = 1;
        v41 = v52;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v52 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v2);
        DispatchTime.advanced(by:)(v5);
        (*(void (**)(_QWORD *, uint64_t))(v41 + 8))(v5, v2);
        v42 = *(void (**)(char *, uint64_t))(v51 + 8);
        v43 = v53;
        v42(v9, v53);
        OS_dispatch_semaphore.wait(timeout:)(v12);

        v42(v12, v43);
        v44 = v49;
        swift_beginAccess(v49, aBlock, 0, 0);
        v45 = *v44;
        swift_release(v47);
      }
    }
    else
    {

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 241, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotSynchronously()", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 241, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

id CRLLinkViewHostingRep.snapshotConfiguration.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 1);
  v2 = objc_msgSend(v0, "layout");
  v3 = objc_msgSend(v2, "geometry");

  objc_msgSend(v3, "size");
  v5 = v4;
  v7 = v6;

  v8 = objc_msgSend(objc_allocWithZone((Class)LPLinkSnapshotConfiguration), "initWithTraitCollection:preferredSizeClass:size:scale:", v1, 5, v5, v7, 2.0);
  v9 = objc_msgSend(objc_allocWithZone((Class)LPLinkRendererSizeClassParameters), "init");
  objc_msgSend(v9, "setNeverShowIcon:", 1);
  objc_msgSend(v8, "setSizeClassParameters:", v9);

  return v8;
}

void CRLLinkViewHostingRep.draw(image:ctx:)(CGImage *a1, CGContextRef c)
{
  void *v2;
  void *v3;
  CGFloat Height;
  double Width;
  double v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGRect v19;

  v3 = v2;
  CGContextSaveGState(c);
  objc_msgSend(v3, "naturalBounds");
  Height = CGRectGetHeight(v19);
  CGContextTranslateCTM(c, 0.0, Height);
  CGContextScaleCTM(c, 1.0, -1.0);
  Width = (double)(uint64_t)CGImageGetWidth(a1);
  v8 = (double)(uint64_t)CGImageGetHeight(a1);
  v9 = objc_msgSend(v3, "layout");
  v10 = objc_msgSend(v9, "geometry");

  objc_msgSend(v10, "size");
  v12 = v11;
  v14 = v13;

  sub_100062E78(0, Width, v8, v12, v14);
  v15 = sub_10005FDDC();
  CGContextRef.draw(_:in:byTiling:)(a1, 0, v15, v16, v17, v18);
  CGContextRestoreGState(c);
}

void CRLLinkViewHostingRep.makeLinkView()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  char *v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;

  v1 = v0;
  v2 = objc_msgSend(v0, "layout");
  v3 = objc_msgSend(v2, "info");

  if (!v3)
    goto LABEL_16;
  ObjectType = swift_getObjectType(v3);
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = v3;
  else
    v7 = 0;
  if (!v7)
  {
    swift_unknownObjectRelease(v3);
LABEL_16:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v8 = swift_getObjectType(v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v8, v6);
  swift_unknownObjectRelease(v3);
  if (v9)
  {
    v10 = (objc_class *)type metadata accessor for CRLLinkView();
    v11 = (char *)objc_allocWithZone(v10);
    v12 = &v11[OBJC_IVAR____TtC8Freeform11CRLLinkView_rep];
    swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC8Freeform11CRLLinkView_rep]);
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = 0x3FF0000000000000;
    v13 = v1;
    v14 = v11;
    v15 = v9;
    v16 = sub_1008992C8((uint64_t)v15);
    *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView] = v16;
    swift_unknownObjectWeakAssign(v12, v13);
    v17 = v16;

    v25.receiver = v14;
    v25.super_class = v10;
    v18 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v18, "addSubview:", v17);

    v19 = *(id *)&v18[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    objc_msgSend(v13, "naturalBounds");
    objc_msgSend(v19, "setFrame:", sub_10005FDDC());

    v20 = CRLLinkViewHostingRep.reloadView.getter();
    objc_msgSend(v18, "addSubview:", v20);

    v21 = objc_msgSend(v13, "canvas");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "viewScale");
      v24 = v23;

      *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = v24;
      sub_100898CB0();
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"makeLinkView()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 325, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeLinkView()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 325, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }

  }
}

void CRLLinkViewHostingRep.updateReloadView()()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  CGFloat Width;
  double *v6;
  char *v7;
  char *v8;
  CGRect v9;
  CGRect v10;

  v1 = objc_msgSend(v0, "canvas");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "viewScale");
    v4 = v3;

    objc_msgSend(v0, "boundsForStandardKnobs");
    Width = CGRectGetWidth(v9);
    v6 = (double *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize];
    if (*(double *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize] + 10.0 >= v4 * Width
      || (objc_msgSend(v0, "boundsForStandardKnobs"), v6[1] + 10.0 >= v4 * CGRectGetHeight(v10)))
    {
      v8 = CRLLinkViewHostingRep.reloadView.getter();
      objc_msgSend(v8, "setHidden:", 1);

      v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 1;
    }
    else
    {
      if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] == 1)
      {
        v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 0;
        if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1
          && (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] & 1) == 0)
        {
          v7 = CRLLinkViewHostingRep.reloadView.getter();
          objc_msgSend(v7, "setHidden:", 0);

        }
      }
      CRLLinkViewHostingRep.updateReloadViewTransform()();
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateReloadView()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 334, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateReloadView()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 334, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void CRLLinkViewHostingRep.updateReloadViewTransform()()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  char *v5;
  id v6;
  id v7;
  char *v8;
  void *v9;
  CGFloat m43;
  CGFloat m44;
  double v12;
  double Width;
  double Height;
  uint64_t v15;
  double v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  CATransform3D v24;
  CGRect v25;
  CGRect v26;

  v1 = objc_msgSend(v0, "canvas");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "viewScale");
    v4 = v3;

    v5 = CRLLinkViewHostingRep.reloadView.getter();
    v6 = objc_msgSend(v5, "layer");

    if (v6)
    {
      v7 = v6;
      v8 = CRLLinkViewHostingRep.reloadView.getter();
      objc_msgSend(v8, "setBounds:", sub_10005FDDC());

      v9 = (void *)objc_opt_self(CATransaction);
      objc_msgSend(v9, "begin");
      objc_msgSend(v9, "setDisableActions:", 1);
      CATransform3DMakeScale(&v24, 1.0 / v4, 1.0 / v4, 1.0);
      v22 = *(_OWORD *)&v24.m13;
      v23 = *(_OWORD *)&v24.m11;
      v20 = *(_OWORD *)&v24.m23;
      v21 = *(_OWORD *)&v24.m21;
      v18 = *(_OWORD *)&v24.m33;
      v19 = *(_OWORD *)&v24.m31;
      v17 = *(_OWORD *)&v24.m41;
      m43 = v24.m43;
      m44 = v24.m44;
      objc_msgSend(v7, "setAnchorPoint:", 0.5, 0.5);
      v12 = 0.0;
      objc_msgSend(v7, "setPosition:", 0.0, 0.0);
      *(_OWORD *)&v24.m11 = v23;
      *(_OWORD *)&v24.m13 = v22;
      *(_OWORD *)&v24.m21 = v21;
      *(_OWORD *)&v24.m23 = v20;
      *(_OWORD *)&v24.m31 = v19;
      *(_OWORD *)&v24.m33 = v18;
      *(_OWORD *)&v24.m41 = v17;
      v24.m43 = m43;
      v24.m44 = m44;
      objc_msgSend(v7, "setTransform:", &v24);
      objc_msgSend(v0, "boundsForStandardKnobs");
      Width = CGRectGetWidth(v25);
      objc_msgSend(v0, "boundsForStandardKnobs");
      Height = CGRectGetHeight(v26);
      v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
      if (v15)
      {
        objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView), "_primaryCaptionBarFrame");
        v12 = v16 * 0.5;
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"captionHeight", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 469, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"captionHeight", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 469, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      objc_msgSend(v7, "setPosition:", Width * 0.5, Height * 0.5 - v12);
      objc_msgSend(v9, "commit");

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateReloadViewTransform()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 362, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateReloadViewTransform()", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 362, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateReloadViewTransform()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 361, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateReloadViewTransform()", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 361, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.reloadWillStart()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  CRLLinkViewHostingRep.tearDownReload()();
  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_10129A338, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_100BFE410;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = *(_QWORD *)"";
  v6[2] = sub_1004C6194;
  v6[3] = &unk_10129A350;
  v3 = _Block_copy(v6);
  swift_release(v7);
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 1.0);
  _Block_release(v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer) = v4;

}

void CRLLinkViewHostingRep.showReloadUI()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  id v6;
  id v7;
  NSString v8;
  id v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive) = 1;
  v3 = CRLLinkViewHostingRep.reloadView.getter();
  sub_10085BFB8();

  if (*(_BYTE *)(v1 + v2) == 1
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall) & 1) == 0
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming) & 1) == 0)
  {
    v4 = CRLLinkViewHostingRep.reloadView.getter();
    objc_msgSend(v4, "setHidden:", 0);

  }
  v5 = CRLLinkViewHostingRep.reloadView.getter();
  v6 = objc_msgSend(v5, "layer");

  if (v6)
  {
    v7 = v6;
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "removeAnimationForKey:", v8);

    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "removeAnimationForKey:", v9);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"showReloadUI()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 417, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showReloadUI()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 417, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void CRLLinkViewHostingRep.tearDownReload()()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  char *v8;
  id v9;

  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] = 0;
  v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer], "invalidate");
  v2 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = 0;

  v3 = CRLLinkViewHostingRep.reloadView.getter();
  v4 = OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer;
  v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer];
  if (v5 && (objc_msgSend(v5, "removeAllAnimations"), (v6 = *(void **)&v3[v4]) != 0))
  {
    objc_msgSend(v6, "removeFromSuperlayer");
    v7 = *(void **)&v3[v4];
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)&v3[v4] = 0;

  v8 = CRLLinkViewHostingRep.reloadView.getter();
  objc_msgSend(v8, "setHidden:", 1);

  v9 = objc_msgSend(v0, "interactiveCanvasController");
  objc_msgSend(v9, "invalidateContentLayersForRep:", v0);

}

uint64_t sub_100BFD1BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

char *CRLLinkViewHostingRep.reloadView.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  char *v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView];
  }
  else
  {
    v4 = v0;
    v5 = sub_10005FDDC();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v12 = objc_allocWithZone((Class)type metadata accessor for CRLIndeterminateRoundSpinnerView());
    v13 = sub_10085B760((uint64_t)v0, (uint64_t)"cancelReload:", v5, v7, v9, v11);
    v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_wantsLinkViewSublayerTransformAdjustedHitTestFrame] = 1;
    objc_msgSend(v13, "setHidden:", 1);
    v14 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

Swift::Void __swiftcall CRLLinkViewHostingRep.resetLinkView()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = CRLLinkViewHostingRep.reloadView.getter();
  objc_msgSend(v1, "removeFromSuperview");

  v2 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    CRLLinkViewHostingRep.updateReloadView()();
    v3 = *(void **)&v0[v2];
  }
  *(_QWORD *)&v0[v2] = 0;

  objc_msgSend(v0, "setNeedsDisplay");
  v4 = objc_msgSend(v0, "interactiveCanvasController");
  objc_msgSend(v4, "invalidateContentLayersForRep:", v0);

}

void CRLLinkViewHostingRep.url.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (v2)
  {
    ObjectType = swift_getObjectType(v2);
    v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = v2;
    else
      v6 = 0;
    if (v6)
    {
      v7 = swift_getObjectType(v6);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v5);
      swift_unknownObjectRelease(v2);
      return;
    }
    swift_unknownObjectRelease(v2);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

void CRLLinkViewHostingRep.title.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (v2)
  {
    ObjectType = swift_getObjectType(v2);
    v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = v2;
    else
      v6 = 0;
    if (v6)
    {
      v7 = swift_getObjectType(v6);
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v5);
      swift_unknownObjectRelease(v2);
      return;
    }
    swift_unknownObjectRelease(v2);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

void CRLLinkViewHostingRep.item.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t ObjectType;
  id v4;

  v1 = objc_msgSend(v0, "layout");
  v2 = objc_msgSend(v1, "info");

  if (!v2)
    goto LABEL_7;
  ObjectType = swift_getObjectType(v2);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem))
    v4 = v2;
  else
    v4 = 0;
  if (!v4)
  {
    swift_unknownObjectRelease(v2);
LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
  }
}

uint64_t CRLLinkViewHostingRep.crlaxCancelReloadAction()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_10129A3B0, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_100BFF82C;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10129A3C8;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  v15 = swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v18 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id CRLLinkViewHostingRep.directlyManagesContentPlatformView.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    return 0;
  v1 = objc_msgSend(v0, "canvas");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "isCanvasInteractive");

  return v3;
}

void CRLLinkViewHostingRep.contentPlatformView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView))
  {
    CRLLinkViewHostingRep.makeLinkView()();
    v2 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    if (!*(_QWORD *)(v0 + v1))
    {
      objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      return;
    }
  }
  CRLLinkViewHostingRep.updateReloadView()();
  v4 = *(void **)(v0 + v1);
  v5 = v4;
  CRLLinkViewHostingRep.embeddedLabels(in:)(v4);
  v7 = v6;

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_16;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_16;
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    else
      v10 = *(id *)(v7 + 8 * i + 32);
    v11 = v10;
    objc_msgSend(v10, "setIsAccessibilityElement:", 0);

  }
LABEL_16:
  swift_bridgeObjectRelease();
  v13 = *(void **)(v0 + v1);
  if (v13)
    v14 = v13;
}

Swift::Void __swiftcall CRLLinkViewHostingRep.draw(in:)(CGContextRef in)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  CGImage *v15;
  id v16;
  void *v17;
  unsigned __int8 v18;
  CGImage *v19;
  objc_super v20;

  v2 = v1;
  v20.receiver = v1;
  v20.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  -[CGContext drawInContext:](&v20, "drawInContext:", in);
  v4 = objc_msgSend(v1, "layout");
  v5 = objc_msgSend(v4, "info");

  if (v5)
  {
    ObjectType = swift_getObjectType(v5);
    v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
    if (v7)
      v8 = v7;
    else
      v8 = 0;
    if (v7)
      v9 = v5;
    else
      v9 = 0;
    if (v9)
    {
      v10 = swift_getObjectType(v9);
      v11 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v10, v8);
      swift_unknownObjectRelease(v5);
      v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v12, v13) & 1) != 0)
      {
        v14 = objc_allocWithZone((Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper());
        v15 = v11;
        v11 = (char *)sub_100D3ED9C(v2, v15);
        sub_100D3F0FC(in);
      }
      else
      {
        v16 = objc_msgSend(v2, "canvas");
        if (!v16)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"isForPrintingOrThumbnailing", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 152, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isForPrintingOrThumbnailing", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 152, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          goto LABEL_18;
        }
        v17 = v16;
        v18 = objc_msgSend(v16, "isCanvasInteractive");

        if ((v18 & 1) != 0)
        {
LABEL_18:

          return;
        }
        if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
        {
          CRLLinkViewHostingRep.generateSnapshotOnMainThread()();
          if (!v19)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 143, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"draw(in:)", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 143, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
            goto LABEL_18;
          }
        }
        else
        {
          CRLLinkViewHostingRep.generateSnapshotSynchronously()();
          if (!v19)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 146, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"draw(in:)", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
            goto LABEL_18;
          }
        }
        v15 = v19;
        CRLLinkViewHostingRep.draw(image:ctx:)(v19, in);
      }

      goto LABEL_18;
    }
    swift_unknownObjectRelease(v5);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  __break(1u);
}

Swift::Int sub_100BFE118(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  Class isa;
  id v9;
  void **v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v26[72];
  _BYTE v27[24];

  if (a2 && a2[2])
  {
    v5 = a2[4];
    v6 = a2[5];
    v7 = objc_allocWithZone((Class)CRLImage);
    sub_1004BE310(v5, v6);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v7, "initWithData:", isa);

    if (v9)
    {
      v10 = (void **)(a3 + 16);
      v11 = objc_msgSend(v9, "CGImage");
      sub_1004BBBC8(v5, v6);

      swift_beginAccess(v10, v27, 1, 0);
      v12 = *v10;
      *v10 = v11;

      return OS_dispatch_semaphore.signal()();
    }
    sub_1004BBBC8(v5, v6);
  }
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v27, 0, 0);
    v13 = (void *)static OS_os_log.crlDefault;
    v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v14, v26);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = a1;
    swift_errorRetain(a1);
    v16 = v13;
    v17 = sub_1004B804C(&qword_1013E0210);
    v18 = String.init<A>(describing:)(&v25, v17);
    v20 = v19;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v21 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v21;
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v22 = static os_log_type_t.error.getter(v21);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v22, "Error generating URL snapshot: %@", 33, 2, inited);
    swift_setDeallocating(inited);
    v23 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v23);

    swift_errorRelease(a1);
  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100BFE344(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void *, uint64_t);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a3)
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for Data);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a2;
  v5(a2, v6);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

void sub_100BFE3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    CRLLinkViewHostingRep.showReloadUI()();

  }
}

void sub_100BFE410(uint64_t a1)
{
  uint64_t v1;

  sub_100BFE3C0(a1, v1);
}

double sub_100BFE418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100BFE428(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

Swift::Void __swiftcall CRLLinkViewHostingRep.handleFadeOutForZoom()()
{
  _BYTE *v0;
  char *v1;
  unsigned int v2;
  char *v3;
  id v4;
  id v5;
  objc_super v6;

  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 1;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  objc_msgSendSuper2(&v6, "handleFadeOutForZoom");
  if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1)
  {
    v1 = CRLLinkViewHostingRep.reloadView.getter();
    v2 = objc_msgSend(v1, "isHidden");

    if (v2)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 504, "Trying to fade out while reload view is hidden.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeOutForZoom()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 504, (uint64_t)"Trying to fade out while reload view is hidden.", 47, 2u);
    }
    v3 = CRLLinkViewHostingRep.reloadView.getter();
    v4 = objc_msgSend(v3, "layer");

    if (v4)
    {
      v5 = v4;
      sub_1009B20C4(0.15);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 506, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeOutForZoom()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 506, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.handleFadeInForZoom()()
{
  _BYTE *v0;
  char *v1;
  id v2;
  id v3;
  objc_super v4;

  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  objc_msgSendSuper2(&v4, "handleFadeInForZoom");
  if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1)
  {
    v1 = CRLLinkViewHostingRep.reloadView.getter();
    v2 = objc_msgSend(v1, "layer");

    if (v2)
    {
      v3 = v2;
      sub_1009B21E4(0.15);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"handleFadeInForZoom()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 517, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeInForZoom()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 517, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.viewScaleDidChange()()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  objc_msgSendSuper2(&v6, "viewScaleDidChange");
  v1 = objc_msgSend(v0, "canvas");
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v2, "viewScale");
      *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = v5;
      sub_100898CB0();
      CRLLinkViewHostingRep.updateReloadView()();

    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.dynamicallyRotating(with:)(CRLCanvasRepRotateTracker *with)
{
  char *v1;
  void *v3;
  id v4;
  objc_super v5;

  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    v4 = v3;
    sub_100898CB0();
    CRLLinkViewHostingRep.updateReloadView()();

  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  -[CRLCanvasRepRotateTracker dynamicallyRotatingWithTracker:](&v5, "dynamicallyRotatingWithTracker:", with);
}

Swift::Void __swiftcall CRLLinkViewHostingRep.willUpdate(_:)(CRLCanvasRenderable_optional a1)
{
  char *v1;
  Class isa;
  void *v3;
  id v4;
  objc_super v5;

  isa = a1.value.super.isa;
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    v4 = v3;
    sub_100898CB0();
    CRLLinkViewHostingRep.updateReloadView()();

  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  objc_msgSendSuper2(&v5, "willUpdateRenderable:", isa);
}

void sub_100BFEA34(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v7;
  id v8;
  id v9;
  char *v10;
  objc_super v11;

  v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  v8 = a3;
  if (v7)
  {
    a1;
    v9 = v7;
    sub_100898CB0();
    CRLLinkViewHostingRep.updateReloadView()();

  }
  else
  {
    v10 = a1;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  objc_msgSendSuper2(&v11, *a4, a3);

}

Swift::Void __swiftcall CRLLinkViewHostingRep.drawInContextWithoutEffectsForAlphaOnly(_:)(CGContextRef a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  char *v10;
  double v11;
  double v12;
  id v13;
  CGColor *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  const CGPath *v20;
  const CGPath *v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for CGPathFillRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(char **)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v8)
  {
    v9 = *(void **)&v8[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    v10 = v8;
    if ((objc_msgSend(v9, "_applyCornerRadius") & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"drawInContextWithoutEffectsForAlphaOnly(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 601, "Expected _applyCornerRadius to be true.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawInContextWithoutEffectsForAlphaOnly(_:)", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 601, (uint64_t)"Expected _applyCornerRadius to be true.", 39, 2u);
    }
    objc_msgSend(v9, "_effectiveCornerRadius");
    v12 = v11;

  }
  else
  {
    v12 = 10.0;
  }
  v13 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
  v14 = (CGColor *)objc_msgSend(v13, "CGColor");

  CGContextSetFillColorWithColor(a1, v14);
  objc_msgSend(v2, "naturalBounds");
  v19 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v15, v16, v17, v18, v12);
  v20 = (const CGPath *)objc_msgSend(v19, "CGPath");
  if (v20)
  {
    v21 = v20;
    CGContextAddPath(a1, v20);

    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CGPathFillRule.winding(_:), v4);
    CGContextRef.fillPath(using:)(v7);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t CRLLinkViewHostingRep.accessibilityCustomActions.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[5];
  uint64_t v23;
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  v1 = objc_msgSendSuper2(&v24, "accessibilityCustomActions");
  if (v1)
  {
    v2 = v1;
    v3 = sub_1004B8930(0, &qword_1013E78E8, UIAccessibilityCustomAction_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = 0;
  }
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive) == 1)
  {
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v9 = swift_allocObject(&unk_10129A338, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain(v9);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v22[4] = sub_100BFF774;
    v23 = v9;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = *(_QWORD *)"";
    v22[2] = sub_100BFF368;
    v22[3] = &unk_10129A378;
    v12 = _Block_copy(v22);
    v13 = objc_msgSend(v10, "initWithName:actionHandler:", v11, v12);

    _Block_release(v12);
    v14 = v23;
    swift_release(v9);
    swift_release(v14);
    if (v4)
    {
      v22[0] = v4;
      v15 = v13;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((v22[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);

    }
    else
    {
      v19 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v20 = swift_allocObject(v19, 40, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v20 + 32) = v13;
      v22[0] = v20;
      specialized Array._endMutation()(v20);
    }
    return v22[0];
  }
  return v4;
}

uint64_t sub_100BFF148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    CRLLinkViewHostingRep.crlaxCancelReloadAction()();

  }
  return 1;
}

uint64_t sub_100BFF19C(_QWORD *a1)
{
  void (*v2)(_QWORD *);
  _QWORD *v3;
  _QWORD v5[4];

  v5[3] = type metadata accessor for CRLLinkViewHostingRep();
  v5[0] = a1;
  v2 = *(void (**)(_QWORD *))((swift_isaMask & *a1) + 0x178);
  v3 = a1;
  v2(v5);
  return sub_1004CB800((uint64_t)v5, &qword_1013E0230);
}

id CRLLinkViewHostingRep.__allocating_init(layout:canvas:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), "initWithLayout:canvas:", a1, a2);

  return v5;
}

id CRLLinkViewHostingRep.init(layout:canvas:)(void *a1, void *a2)
{
  id v4;

  v4 = sub_100BFF77C((uint64_t)a1, (uint64_t)a2);

  return v4;
}

id CRLLinkViewHostingRep.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100BFF368(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

uint64_t type metadata accessor for CRLLinkViewHostingRep()
{
  return objc_opt_self(_TtC8Freeform21CRLLinkViewHostingRep);
}

void _s8Freeform21CRLLinkViewHostingRepC15handleDoubleTap2at9inputTypeSbSo7CGPointV_So08CRLInputK0VtF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  Class isa;
  uint64_t v23;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, "layout", v6);
  v10 = objc_msgSend(v9, "info");

  if (!v10)
    goto LABEL_16;
  ObjectType = swift_getObjectType(v10);
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLLinkMetadataBackedItem);
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v10;
  else
    v14 = 0;
  if (!v14)
  {
    swift_unknownObjectRelease(v10);
LABEL_16:
    sub_100757E04(&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    __break(1u);
    return;
  }
  v15 = swift_getObjectType(v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v13);
  v16 = swift_unknownObjectRelease(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v16) == 1)
  {
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
  }
  else
  {
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    if ((URL.isFileURL.getter(v17) & 1) != 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"handleDoubleTap(at:inputType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 582, "Unexpected file URL in our URL object!", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleDoubleTap(at:inputType:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2u, 582, (uint64_t)"Unexpected file URL in our URL object!", 38, 2u);
    }
    else
    {
      v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      URL._bridgeToObjectiveC()(v19);
      v21 = v20;
      sub_1008D711C((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1004B7878((unint64_t *)&qword_1013DEE88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF47EC);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "openURL:options:completionHandler:", v21, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_100BFF774(uint64_t a1)
{
  uint64_t v1;

  return sub_100BFF148(a1, v1);
}

id sub_100BFF77C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_super v6;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize] = vdupq_n_s64(0x404A800000000000uLL);
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 0;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  return objc_msgSendSuper2(&v6, "initWithLayout:canvas:", a1, a2);
}

uint64_t sub_100BFF82C()
{
  uint64_t v0;

  return sub_100BFF19C(*(_QWORD **)(v0 + 16));
}

uint64_t sub_100BFF834()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BFF858()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_100BFF884(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_100BFE118(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t CRLAsyncStreamProperty.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v4 = sub_100BFFD50(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t CRLAsyncStreamProperty.ProjectedValue.values.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  v4 = type metadata accessor for AsyncStream(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t CRLAsyncStreamProperty.init(wrappedValue:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = sub_100BFFD50(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t sub_100BFF994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = type metadata accessor for AsyncStream.Continuation(255, a3);
  v6 = type metadata accessor for Optional(0, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v5);
}

uint64_t *CRLAsyncStreamProperty.deinit()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = *v0;
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v4 = *(_QWORD *)(v2 + 80);
  v5 = type metadata accessor for AsyncStream.Continuation(0, v4);
  AsyncStream.Continuation.finish()();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))((uint64_t)v1 + *(_QWORD *)(*v1 + 88), v4);
  v6 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  v7 = type metadata accessor for AsyncStream(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  swift_release(*(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 112)));
  return v1;
}

uint64_t CRLAsyncStreamProperty.__deallocating_deinit()
{
  uint64_t v0;

  CRLAsyncStreamProperty.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t CRLAsyncStreamProperty.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLAsyncStreamProperty.wrappedValue.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_100C0001C(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*CRLAsyncStreamProperty.wrappedValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 88);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  (*(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v9, v5, v10);
  return sub_100BFFC4C;
}

void sub_100BFFC4C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    sub_100C0001C((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_100C0001C(*(_QWORD *)(*(_QWORD *)a1 + 56));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CRLAsyncStreamProperty.ProjectedValue.publisher()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t WitnessTable;

  v2 = type metadata accessor for CurrentValueSubject(0, a2, &type metadata for Never, &protocol witness table for Never);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v2);
  return Publisher.eraseToAnyPublisher()(v2, WitnessTable);
}

uint64_t sub_100BFFD50(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, __n128);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  char *v40;

  v2 = v1;
  v37 = a1;
  v33 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v33 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(a1);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AsyncStream.Continuation.BufferingPolicy(0, v3, v5);
  v34 = *(char **)(v7 - 8);
  v35 = v7;
  __chkstk_darwin(v7);
  v9 = (void (**)(char *, uint64_t, uint64_t, __n128))((char *)&v30 - v8);
  v10 = type metadata accessor for AsyncStream(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v30 - v12;
  v14 = type metadata accessor for AsyncStream.Continuation(255, v3);
  v36 = type metadata accessor for Optional(0, v14);
  v32 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v30 - v19;
  v21 = &v2[*(_QWORD *)(v33 + 88)];
  v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v30(v21, v37, v3, v18);
  v22 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v14);
  *v9 = 1;
  (*((void (**)(_QWORD *, _QWORD, uint64_t))v34 + 13))(v9, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v35);
  v39 = v3;
  v40 = v20;
  AsyncStream.init(_:bufferingPolicy:_:)(v3, v9, sub_100C00254, v38, v3);
  v23 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 96)];
  v33 = v11;
  v34 = v13;
  v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v25 = v13;
  v26 = v32;
  v35 = v10;
  v24(v23, v25, v10);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v16, v20, v36);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v14);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 104)], v16, v14);
    type metadata accessor for CurrentValueSubject(0, v3, &type metadata for Never, &protocol witness table for Never);
    v28 = v31;
    ((void (*)(char *, uint64_t, uint64_t))v30)(v31, v37, v3);
    v29 = CurrentValueSubject.__allocating_init(_:)(v28);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 112)] = v29;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v36);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_100C0001C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  _BYTE v17[24];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for AsyncStream.Continuation.YieldResult(0, v5);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v17[-v11 - 8];
  v13 = (char *)v2 + *(_QWORD *)(v4 + 88);
  swift_beginAccess(v13, v17, 33, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 24))(v13, a1, v5);
  swift_endAccess(v17);
  CurrentValueSubject.send(_:)(a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v14 = type metadata accessor for AsyncStream.Continuation(0, v5);
  AsyncStream.Continuation.yield(_:)(v8, v14);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100C00168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t inited;
  _QWORD v11[4];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(_QWORD *)(v2 - 8) + 64;
    v5 = type metadata accessor for AsyncStream(319);
    if (v6 > 0x3F)
    {
      return v5;
    }
    else
    {
      v11[1] = *(_QWORD *)(v5 - 8) + 64;
      v7 = type metadata accessor for AsyncStream.Continuation(319, v3);
      v3 = v7;
      if (v8 <= 0x3F)
      {
        v11[2] = *(_QWORD *)(v7 - 8) + 64;
        v11[3] = (char *)&value witness table for Builtin.NativeObject + 64;
        inited = swift_initClassMetadata2(a1, 0, 4, v11, a1 + 88);
        if (inited)
          return inited;
        else
          return 0;
      }
    }
  }
  return v3;
}

uint64_t type metadata accessor for CRLAsyncStreamProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAsyncStreamProperty);
}

uint64_t type metadata accessor for CRLAsyncStreamProperty.ProjectedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAsyncStreamProperty.ProjectedValue);
}

uint64_t sub_100C00254(uint64_t a1)
{
  uint64_t v1;

  return sub_100BFF994(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_100C0025C(unint64_t a1)
{
  return sub_100C00444(a1, (uint64_t (*)(unint64_t))sub_1005FEFF0, sub_100D14ED8);
}

void sub_100C00270(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = _s13ItemViewModelVMa(0);
  v16 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v17 = (uint64_t)&v14 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 < 2)
    return;
  v8 = 0;
  v9 = v7 >> 1;
  v10 = v7 - 1;
  v15 = v7 >> 1;
  while (1)
  {
    if (v8 == v10)
      goto LABEL_4;
    v11 = *(_QWORD *)(a1 + 16);
    if (v8 >= v11)
      break;
    v12 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v13 = *(_QWORD *)(v16 + 72);
    sub_1004B8460(a1 + v12 + v13 * v8, v17, _s13ItemViewModelVMa);
    if (v10 >= v11)
      goto LABEL_14;
    sub_1004B8460(a1 + v12 + v13 * v10, (uint64_t)v4, _s13ItemViewModelVMa);
    if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
      a1 = sub_100D1503C(a1);
    if (v8 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    sub_100C01BB8((uint64_t)v4, a1 + v12 + v13 * v8);
    if (v10 >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    sub_100C01BB8(v17, a1 + v12 + v13 * v10);
    v9 = v15;
LABEL_4:
    ++v8;
    --v10;
    if (v9 == v8)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_100C0041C(unint64_t a1)
{
  return sub_100C00444(a1, (uint64_t (*)(unint64_t))sub_1005FFBC4, sub_100D14ED8);
}

uint64_t sub_100C00430(unint64_t a1)
{
  return sub_100C00444(a1, (uint64_t (*)(unint64_t))sub_1005FFD0C, sub_100D14ED8);
}

uint64_t sub_100C00444(unint64_t a1, uint64_t (*a2)(unint64_t), uint64_t (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v24 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v5 & 0x4000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRelease(v4);
    v7 = (unint64_t)v6 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v4);
    swift_release(v5);
    v23 = v6 >= 0 ? v6 : v6 + 1;
    if (v6 < -1)
      __break(1u);
    v7 = v23 >> 1;
LABEL_6:
    if ((unint64_t)(v6 + 1) < 3)
      return v5;
    v8 = 0;
    while (1)
    {
      v11 = v8 + 1;
      v4 = v6 - (v8 + 1);
      if (__OFSUB__(v6, v8 + 1))
        break;
      if (v8 != v4)
      {
        v12 = v24;
        if ((v24 & 0xC000000000000001) != 0)
        {
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v24);
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - (v8 + 1), v24);
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v13 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= v13)
            goto LABEL_34;
          v14 = *(id *)(v24 + 8 * v8 + 32);
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v4 >= v13)
            goto LABEL_37;
          v15 = (uint64_t)v14;
          v16 = *(id *)(v24 + 32 + 8 * v4);
        }
        v17 = v16;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v24)
          || v24 < 0
          || (v24 & 0x4000000000000000) != 0)
        {
          v12 = a3(v24);
          v24 = v12;
        }
        v18 = (v12 & 0xFFFFFFFFFFFFFF8) + 8 * v8;

        *(_QWORD *)(v18 + 32) = v17;
        specialized Array._endMutation()(v19);
        v20 = v24;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v24)
          || v24 < 0
          || (v24 & 0x4000000000000000) != 0)
        {
          v20 = a3(v24);
          v24 = v20;
        }
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v4 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v9 = (v20 & 0xFFFFFFFFFFFFFF8) + 8 * v4;

        *(_QWORD *)(v9 + 32) = v15;
        specialized Array._endMutation()(v10);
      }
      v8 = v11;
      if (v7 == v11)
        return v24;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v5 = a2(v4);
    v24 = v5;
    if ((v5 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_100C00668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[14] = a1;
  v2[15] = v1;
  v3 = type metadata accessor for Date(0);
  v2[16] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[17] = v4;
  v2[18] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C00728, 0, 0);
}

uint64_t sub_100C00728()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  objc_class *inserted;
  id v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v0[14];
  v1 = v0[15];
  sub_100C00BA0(v2);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator);
  v4 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v0[22] = v3;
  v0[23] = v4;
  v5 = *(void **)(*(_QWORD *)(v3 + v4) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  inserted = (objc_class *)type metadata accessor for CRLCommandInsertBoardItems();
  v7 = objc_allocWithZone(inserted);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
  inited = swift_initStackObject(v8, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v10 = v5;
  swift_bridgeObjectRetain(v2);
  *(_QWORD *)(inited + 32) = NSNotFound.getter(v11);
  *(_QWORD *)(inited + 40) = v2;
  v12 = sub_1008E00A0((_QWORD *)inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C((uint64_t *)&unk_101406AF0);
  swift_arrayDestroy(inited + 32, 1, v13);
  v14 = objc_allocWithZone(inserted);
  v0[24] = sub_1008E4C80(v10, v12);

  ObjectType = swift_getObjectType(v7);
  swift_deallocPartialClassInstance(v7, ObjectType, 48, 7);
  v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  v0[25] = v16;
  v17 = type metadata accessor for MainActor(0);
  v0[26] = static MainActor.shared.getter(v16);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C008C4, v18, v19);
}

uint64_t sub_100C008C4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD **v3;
  _QWORD *v4;
  id v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;

  v1 = v0[25];
  v2 = (void *)v0[24];
  swift_release(v0[26]);
  v3 = (_QWORD **)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue, v0 + 8, 33, 0);
  v4 = *v3;
  v5 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_100D0F980(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v8 = v4[2];
  v7 = v4[3];
  if (v8 >= v7 >> 1)
  {
    v4 = sub_100D0F980((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
    *v3 = v4;
  }
  v9 = v0[24];
  v10 = (void *)v0[25];
  v4[2] = v8 + 1;
  v11 = &v4[2 * v8];
  v11[4] = v9;
  *((_BYTE *)v11 + 40) = 1;
  swift_endAccess(v0 + 8);
  sub_1006A8ED4();

  return swift_task_switch(sub_100C009D0, 0, 0);
}

uint64_t sub_100C009D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v1 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 128);
  v20 = *(void **)(v0 + 192);
  v4 = *(char **)(*(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 184));
  objc_msgSend(v4, "savePendingChanges");
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 88, 0, 0);
  sub_1004B8460(v8, v3, type metadata accessor for CRLBoardCRDTData);
  v9 = v5;
  v16 = v4;
  swift_retain(v7);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v11 = (uint64_t *)(*(_QWORD *)&v4[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain(v13);
  sub_10067AFD0(v17, v12, v13, v1);

  static Date.now.getter(v14);
  sub_100A9F170(v1, v2, 0, 0);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v19);
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v1);
  swift_task_dealloc(v17);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C00BA0(uint64_t a1)
{
  uint64_t v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  objc_class *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  void *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Class isa;
  double v52;
  id v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  unint64_t v59;
  double v60;
  double v61;
  BOOL v62;
  double v63;
  double v64;
  void (*v65)(void);
  id v66;
  _QWORD *v67;
  _QWORD *v68;
  void *v69;
  void *v70;
  id v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t (*v76)(void);
  void *v77;
  id v78;
  unint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  double v83;
  double v84;
  double v85;
  double v86;
  void *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void **v95;
  _QWORD *v96;
  _QWORD *v97;
  void *v98;
  _QWORD *v99;
  _QWORD *v100;
  double v101;
  Class v102;
  uint64_t v103;
  uint64_t (*v104)(void);
  void *v105;
  double v106;
  double v107;
  double v108;
  double v109;
  void *v110;
  double v111;
  double v112;
  double v113;
  double v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void **v119;
  _QWORD *v120;
  Class v121;
  _QWORD *v122;
  void *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  double v127;
  __n128 v128;
  void *v129;
  id v130;
  unint64_t v131;
  void *v132;
  BOOL v133;
  CGFloat v134;
  CGFloat v135;
  CGFloat v136;
  CGFloat v137;
  double v138;
  double v139;
  double v140;
  double v141;
  CGFloat v142;
  double v143;
  double v144;
  void (*v145)(void);
  id v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  Class v151;
  _QWORD *v152;
  char *v153;
  __int128 v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162[24];
  char v163[24];
  void **aBlock;
  char *v165;
  void (*v166)(uint64_t, void *);
  void *v167;
  void (*v168)(void *);
  _QWORD *v169;
  _QWORD v170[2];

  v157 = (char *)sub_1004B804C(&qword_101405DF0);
  __chkstk_darwin(v157);
  v156 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v155 = (char *)&v148 - v9;
  __chkstk_darwin(v10);
  *(_QWORD *)&v154 = (char *)&v148 - v11;
  __chkstk_darwin(v12);
  v153 = (char *)&v148 - v13;
  v149 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_canvas);
  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1
                                                      + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                              + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = (void **)_swiftEmptyArrayStorage;
  if (v15)
  {
    v158 = a1;
    aBlock = (void **)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v14);
    specialized ContiguousArray.reserveCapacity(_:)(v15);
    v17 = sub_10051FA44(v14);
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17;
      if (v17 < 1 << *(_BYTE *)(v14 + 32))
      {
        v20 = 0;
        v21 = (_QWORD *)(v14 + 64);
        v148 = v14 + 80;
        v161 = v14;
        v150 = v15;
        v151 = v18;
        v152 = (_QWORD *)(v14 + 64);
        v22 = v157;
        v23 = (uint64_t)v153;
        a1 = (uint64_t)v155;
        do
        {
          v24 = v19 >> 6;
          if ((v21[v19 >> 6] & (1 << v19)) == 0)
          {
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            if (a1 < 0)
              v147 = a1;
            else
              v147 = a1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(a1);
            v161 = _CocoaArrayWrapper.endIndex.getter(v147);
            goto LABEL_28;
          }
          if (*(_DWORD *)(v14 + 36) != (_DWORD)v18)
            goto LABEL_63;
          v160 = 1 << v19;
          v159 = v20;
          v25 = *((int *)v22 + 12);
          v26 = *(_QWORD *)(v161 + 48);
          v27 = type metadata accessor for UUID(0);
          v28 = *(_QWORD **)(v27 - 8);
          v29 = v26 + v28[9] * v19;
          v30 = (void (*)(uint64_t, uint64_t, uint64_t))v28[2];
          v30(v23, v29, v27);
          v31 = *(void **)(*(_QWORD *)(v161 + 56) + 8 * v19);
          *(_QWORD *)(v23 + v25) = v31;
          v32 = v154;
          v30(v154, v23, v27);
          *(_QWORD *)(v32 + *((int *)v22 + 12)) = v31;
          sub_1008AAE84(v32, a1);
          v33 = v31;
          sub_100C01B14(v23);
          v34 = *((int *)v22 + 12);
          v35 = v156;
          v30((uint64_t)v156, a1, v27);
          v36 = *(void **)(a1 + v34);
          *(_QWORD *)&v35[v34] = v36;
          v37 = (void (*)(char *, uint64_t))v28[1];
          v38 = v36;
          v37(v35, v27);
          v39 = sub_100C01B14(a1);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v39);
          v40 = aBlock[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v40);
          v41 = v40;
          v14 = v161;
          v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
          specialized ContiguousArray._endMutation()(v42);
          v43 = 1 << *(_BYTE *)(v14 + 32);
          if ((uint64_t)v19 >= v43)
            goto LABEL_64;
          v21 = v152;
          v44 = v152[v24];
          if ((v44 & v160) == 0)
            goto LABEL_65;
          LODWORD(v18) = (_DWORD)v151;
          if (*(_DWORD *)(v14 + 36) != (_DWORD)v151)
            goto LABEL_66;
          v45 = v44 & (-2 << (v19 & 0x3F));
          if (v45)
          {
            v19 = __clz(__rbit64(v45)) | v19 & 0xFFFFFFFFFFFFFFC0;
            v46 = v150;
            v47 = v159;
          }
          else
          {
            v48 = v24 + 1;
            v49 = (unint64_t)(v43 + 63) >> 6;
            v46 = v150;
            v47 = v159;
            if (v24 + 1 >= v49)
              goto LABEL_18;
            v50 = v152[v48];
            if (!v50)
            {
              while (v49 - 2 != v24)
              {
                v50 = *(_QWORD *)(v148 + 8 * v24++);
                if (v50)
                {
                  v48 = v24 + 1;
                  goto LABEL_17;
                }
              }
LABEL_18:
              v19 = 1 << *(_BYTE *)(v14 + 32);
              goto LABEL_19;
            }
LABEL_17:
            v19 = __clz(__rbit64(v50)) + (v48 << 6);
          }
LABEL_19:
          v20 = v47 + 1;
          if (v20 == v46)
            goto LABEL_23;
        }
        while ((v19 & 0x8000000000000000) == 0 && (uint64_t)v19 < v43);
      }
    }
    __break(1u);
LABEL_23:
    v16 = aBlock;
    swift_bridgeObjectRelease(v14);
    a1 = v158;
  }
  v155 = (char *)sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v52 = swift_bridgeObjectRelease(v16).n128_u64[0];
  v53 = v149;
  objc_msgSend(v149, "setInfosToDisplay:", isa, v52);

  objc_msgSend(v53, "nonInteractiveLayoutIfNeeded");
  objc_msgSend(v53, "unscaledRectOfLayouts");
  v2 = v54;
  v3 = v55;
  v4 = v56;
  v5 = v57;
  LOBYTE(v53) = sub_1003A9250();
  swift_bridgeObjectRetain(a1);
  if ((v53 & 1) == 0)
    a1 = sub_100C00444(a1, (uint64_t (*)(unint64_t))sub_1005FF404, sub_100D14ED8);
  if ((unint64_t)a1 >> 62)
    goto LABEL_68;
  v161 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
LABEL_28:
  if (v161)
  {
    if (v161 >= 1)
    {
      v58 = 0;
      v59 = a1 & 0xC000000000000001;
      v160 = a1 + 32;
      v156 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
      v154 = xmmword_100EEF400;
      v153 = *(char **)"";
      v157 = (char *)&type metadata for Any + 8;
      v158 = a1;
      v159 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v59)
        {
          v67 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v58, a1);
          if (v58)
          {
            v68 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v58 - 1, a1);
LABEL_43:
            v69 = v68;
            ++v58;
            v70 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v68) + 0xE0))();
            v71 = objc_msgSend(v70, "position");
            v73 = v72;
            v75 = v74;
            v76 = *(uint64_t (**)(void))((swift_isaMask & *v67) + 0xE0);
            v77 = (void *)((uint64_t (*)(id))v76)(v71);
            v78 = objc_msgSend(v77, "mutableCopy");

            _bridgeAnyObjectToAny(_:)(&aBlock, v78);
            swift_unknownObjectRelease(v78);
            v79 = sub_10088B6E8();
            if (swift_dynamicCast(v170, &aBlock, (char *)&type metadata for Any + 8, v79, 6))
            {
              v80 = (void *)v170[0];
              v81 = swift_allocObject(&unk_10129A560, 32, 7);
              *(_QWORD *)(v81 + 16) = 0;
              *(_QWORD *)(v81 + 24) = 0;
              v82 = (void *)v76();
              objc_msgSend(v82, "position");
              v84 = v83;
              v86 = v85;

              if (v84 == 0.0 && v86 == 0.0)
              {
                v87 = (void *)v76();
                objc_msgSend(v87, "size");
                v89 = v88;
                v91 = v90;

                if (v89 == 0.0 && v91 == 0.0)
                {
                  v152 = (_QWORD *)objc_opt_self(CRLCanvasLayoutController);
                  v92 = sub_1004B804C((uint64_t *)&unk_1013E4180);
                  v93 = swift_allocObject(v92, 40, 7);
                  *(_OWORD *)(v93 + 16) = v154;
                  *(_QWORD *)(v93 + 32) = v67;
                  aBlock = (void **)v93;
                  swift_retain(v81);
                  specialized Array._endMutation()(v94);
                  v95 = aBlock;
                  v96 = v67;
                  v151 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease(v95);
                  v97 = (_QWORD *)swift_allocObject(&unk_10129A588, 40, 7);
                  v97[2] = sub_100C01B64;
                  v97[3] = v81;
                  v97[4] = v96;
                  v168 = sub_1004E5EC4;
                  v169 = v97;
                  aBlock = _NSConcreteStackBlock;
                  v165 = v153;
                  v166 = sub_1004C6194;
                  v167 = &unk_10129A5A0;
                  v98 = _Block_copy(&aBlock);
                  v99 = v169;
                  v100 = v96;
                  swift_retain(v81);
                  *(_QWORD *)&v101 = swift_release(v99).n128_u64[0];
                  v102 = v151;
                  objc_msgSend(v152, "temporaryLayoutControllerForInfos:useInBlock:", v151, v98, v101);
                  _Block_release(v98);
                  swift_release(v81);

                  swift_beginAccess(v81 + 16, v163, 0, 0);
                }
              }
              v60 = *(double *)(v81 + 16);
              v61 = *(double *)(v81 + 24);
              swift_release(v81);
              v62 = sub_1003A9250();
              v63 = v73 + v60 + 50.0;
              v64 = v75 + v61 + 50.0;
              if (!v62)
              {
                v64 = v75 - v61 + -50.0;
                v63 = v73 - v60 + -50.0;
              }
              v59 = v159;
              objc_msgSend(v80, "setPosition:", v63, v64, v73 - v60 + -50.0, v148);
              v65 = *(void (**)(void))((swift_isaMask & *v67) + 0xE8);
              v66 = v80;
              v65();

            }
            else
            {
              v66 = v67;
              v67 = v70;
              sub_100757E04(&_mh_execute_header, (uint64_t)"offsetPosition(_:from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 97, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"offsetPosition(_:from:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2u, 97, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

            }
            goto LABEL_35;
          }
        }
        else
        {
          v67 = *(id *)(v160 + 8 * v58);
          if (v58)
          {
            if ((unint64_t)(v58 - 1) >= *((_QWORD *)v156 + 2))
              goto LABEL_67;
            v68 = *(id *)(v160 + 8 * (v58 - 1));
            goto LABEL_43;
          }
        }
        v103 = swift_allocObject(&unk_10129A560, 32, 7);
        *(_QWORD *)(v103 + 16) = 0;
        *(_QWORD *)(v103 + 24) = 0;
        v104 = *(uint64_t (**)(void))((swift_isaMask & *v67) + 0xE0);
        v105 = (void *)v104();
        objc_msgSend(v105, "position");
        v107 = v106;
        v109 = v108;

        if (v107 == 0.0 && v109 == 0.0)
        {
          v110 = (void *)v104();
          objc_msgSend(v110, "size");
          v112 = v111;
          v114 = v113;

          if (v112 == 0.0 && v114 == 0.0)
          {
            v115 = (void *)objc_opt_self(CRLCanvasLayoutController);
            v116 = sub_1004B804C((uint64_t *)&unk_1013E4180);
            v117 = swift_allocObject(v116, 40, 7);
            *(_OWORD *)(v117 + 16) = v154;
            *(_QWORD *)(v117 + 32) = v67;
            aBlock = (void **)v117;
            swift_retain(v103);
            specialized Array._endMutation()(v118);
            v119 = aBlock;
            v120 = v67;
            v121 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v119);
            v122 = (_QWORD *)swift_allocObject(&unk_10129A5D8, 40, 7);
            v122[2] = sub_100C01B64;
            v122[3] = v103;
            v122[4] = v120;
            v168 = sub_100C01BFC;
            v169 = v122;
            aBlock = _NSConcreteStackBlock;
            v165 = v153;
            v166 = sub_1004C6194;
            v167 = &unk_10129A5F0;
            v123 = _Block_copy(&aBlock);
            v124 = v169;
            v125 = v120;
            swift_retain(v103);
            v126 = v124;
            v59 = v159;
            objc_msgSend(v115, "temporaryLayoutControllerForInfos:useInBlock:", v121, v123, swift_release(v126).n128_f64[0]);
            _Block_release(v123);
            swift_release(v103);

            swift_beginAccess(v103 + 16, v162, 0, 0);
          }
        }
        v127 = *(double *)(v103 + 16);
        v128 = swift_release(v103);
        v129 = (void *)((uint64_t (*)(__n128))v104)(v128);
        v130 = objc_msgSend(v129, "mutableCopy");

        _bridgeAnyObjectToAny(_:)(&aBlock, v130);
        swift_unknownObjectRelease(v130);
        v131 = sub_10088B6E8();
        if (swift_dynamicCast(v170, &aBlock, v157, v131, 6))
        {
          v132 = (void *)v170[0];
          v133 = sub_1003A9250();
          a1 = v158;
          v134 = v2;
          v135 = v3;
          v136 = v4;
          v137 = v5;
          if (v133)
          {
            v138 = v127 + CGRectGetMaxX(*(CGRect *)&v134);
            objc_msgSend(v132, "size");
            v140 = v138 + v139 * 0.5;
            v141 = 50.0;
          }
          else
          {
            v142 = CGRectGetMinX(*(CGRect *)&v134) - v127;
            objc_msgSend(v132, "size");
            v140 = v142 + v143 * -0.5;
            v141 = -50.0;
          }
          v144 = v140 + v141;
          sub_100061400(v2, v3, v4, v5);
          objc_msgSend(v132, "setCenter:", v144);
          v145 = *(void (**)(void))((swift_isaMask & *v67) + 0xE8);
          v146 = v132;
          v145();

          v58 = 1;
          goto LABEL_36;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"position(_:relativeTo:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 75, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"position(_:relativeTo:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2u, 75, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

        v58 = 1;
LABEL_35:
        a1 = v158;
LABEL_36:
        if (v58 == v161)
          goto LABEL_61;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_61:
    swift_bridgeObjectRelease_n(a1, 2);
  }
}

id sub_100C019AC(id result, uint64_t a2)
{
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  _BYTE v9[24];

  if (result)
  {
    result = objc_msgSend(result, "pureGeometry");
    if (result)
    {
      v3 = result;
      v4 = objc_msgSend(result, "infoGeometry");

      objc_msgSend(v4, "position");
      v6 = v5;
      v8 = v7;

      result = (id)swift_beginAccess(a2 + 16, v9, 1, 0);
      *(double *)(a2 + 16) = -v6;
      *(double *)(a2 + 24) = -v8;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_100C01A8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardLibraryHeadlessController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLBoardLibraryHeadlessController()
{
  return objc_opt_self(_TtC8Freeform33CRLBoardLibraryHeadlessController);
}

uint64_t sub_100C01B14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_101405DF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C01B54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100C01B64(void *a1)
{
  uint64_t v1;

  return sub_100C019AC(a1, v1);
}

double sub_100C01B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100C01B80(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C01B8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100C01BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ItemViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C01C08()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C01C4C()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101409BE0, (uint64_t)&nominal type descriptor for CRLUserBoardMetadataSyncRecord);
}

uint64_t sub_100C01C68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F2D6D0;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_100C01CEC()
{
  uint64_t v0;
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData)).n128_u64[0];
  return result;
}

uint64_t sub_100C01D18()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C01D7C()
{
  return type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101409CA0, (uint64_t)&nominal type descriptor for CRLUserBoardMetadataSyncLocalChangeRecord);
}

uint64_t sub_100C01D98(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "(";
  v2[1] = &unk_100F2D738;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 112);
}

uint64_t sub_100C01DF0()
{
  uint64_t v0;

  return sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8));
}

uint64_t sub_100C01E04()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C01E5C()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101409DB0, (uint64_t)&nominal type descriptor for CRLUserBoardMetadataSyncRemoteRecord);
}

uint64_t sub_100C01E78(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100F2D6D0;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 112);
}

uint64_t sub_100C01EC4()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform46CRLUserBoardMetadataSyncRemoteRecordIdentifier_boardIdentifier);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C01EF4()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101409EA0, (uint64_t)&nominal type descriptor for CRLUserBoardMetadataSyncRemoteRecordIdentifier);
}

uint64_t sub_100C01F10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100C01F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];

  result = 0xD000000000000020;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x742074726F707845;
      break;
    case 2:
      result = 0x66666F646E6148;
      break;
    case 3:
      result = 0x6F4220746E697250;
      break;
    case 4:
      result = 0xD000000000000023;
      break;
    case 5:
      result = 0xD000000000000024;
      break;
    case 6:
      result = 0xD000000000000012;
      break;
    case 7:
      v6 = 0x7265676E6946;
      goto LABEL_10;
    case 8:
      result = 0xD000000000000016;
      break;
    case 9:
      v6 = 0x6C69636E6550;
LABEL_10:
      result = v6 & 0xFFFFFFFFFFFFLL | 0x4420000000000000;
      break;
    case 10:
      result = 0xD00000000000001BLL;
      break;
    case 11:
      result = 0xD000000000000013;
      break;
    case 12:
      result = 0x7320776F6C6C6F46;
      break;
    case 13:
      result = 0xD000000000000025;
      break;
    default:
      v7[1] = v1;
      v7[2] = v2;
      v7[0] = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLAnalyticsFeatureName, v7, &type metadata for CRLAnalyticsFeatureName, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

unint64_t CRLAnalyticsFeatureName.init(rawValue:)(unint64_t a1)
{
  return sub_100C0216C(a1);
}

unint64_t sub_100C0213C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100C0216C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100C0216C(unint64_t result)
{
  if (result > 0xD)
    return 0;
  return result;
}

unint64_t sub_100C02180()
{
  unint64_t result;

  result = qword_101409F28[0];
  if (!qword_101409F28[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLAnalyticsFeatureName, &type metadata for CRLAnalyticsFeatureName);
    atomic_store(result, qword_101409F28);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAnalyticsFeatureName()
{
  return &type metadata for CRLAnalyticsFeatureName;
}

uint64_t sub_100C021D4(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 88);
}

_QWORD *sub_100C0221C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return v0;
}

uint64_t sub_100C02250()
{
  uint64_t v0;

  sub_100C0221C();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLBoardRealTimeTransferChangeCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLBoardRealTimeTransferChangeCollection);
}

uint64_t sub_100C0227C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE v39[32];

  v23 = v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData) = xmmword_100F062D0;
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData) = xmmword_100F062D0;
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData) = xmmword_100F062D0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, a1, v24);
  v26 = (_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
  *v26 = a2;
  v26[1] = a3;
  v26[2] = a4;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions) = a5;
  swift_beginAccess(v23, v39, 33, 0);
  sub_1005E388C(a6, v23);
  swift_endAccess(v39);
  sub_1004DB5FC(a7, v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue) = a8;
  v27 = (_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
  v28 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
  v29 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8);
  *v27 = a9;
  v27[1] = a10;
  sub_1004BE2FC(v28, v29);
  v30 = (_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
  v31 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
  v32 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
  *v30 = a11;
  v30[1] = a12;
  sub_1004BE2FC(v31, v32);
  *(_BYTE *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone) = a13;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges) = a14;
  v33 = (_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
  v34 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
  v35 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
  *v33 = a15;
  v33[1] = a16;
  sub_1004BE2FC(v34, v35);
  return v16;
}

uint64_t sub_100C02484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004C1F2C(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID);
  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C02530()
{
  return type metadata accessor for CRLBoardItemDatabaseRow(0);
}

uint64_t type metadata accessor for CRLBoardItemDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_101409FD8;
  if (!qword_101409FD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardItemDatabaseRow);
  return result;
}

void sub_100C02574(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[11];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100F2D938;
    v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for CRLBoardIdentifierStorage(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[6] = &unk_100F2D950;
        v8[7] = &unk_100F2D950;
        v8[8] = &unk_100F2D968;
        v8[9] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[10] = &unk_100F2D950;
        swift_updateClassMetadata2(a1, 256, 11, v8, a1 + 80);
      }
    }
  }
}

ValueMetadata *type metadata accessor for CRLBoardItemUnsyncedChanges()
{
  return &type metadata for CRLBoardItemUnsyncedChanges;
}

unint64_t sub_100C02660()
{
  unint64_t result;

  result = qword_10140A1A0;
  if (!qword_10140A1A0)
  {
    result = swift_getWitnessTable(&unk_100F2D9CC, &type metadata for CRLBoardItemUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_10140A1A0);
  }
  return result;
}

unint64_t sub_100C026A8()
{
  unint64_t result;

  result = qword_10140A1A8;
  if (!qword_10140A1A8)
  {
    result = swift_getWitnessTable(&unk_100F2D99C, &type metadata for CRLBoardItemUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_10140A1A8);
  }
  return result;
}

unint64_t sub_100C026F0()
{
  unint64_t result;

  result = qword_10140A1B0;
  if (!qword_10140A1B0)
  {
    result = swift_getWitnessTable(&unk_100F2D9F4, &type metadata for CRLBoardItemUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_10140A1B0);
  }
  return result;
}

unint64_t sub_100C02738()
{
  unint64_t result;

  result = qword_10140A1B8;
  if (!qword_10140A1B8)
  {
    result = swift_getWitnessTable(&unk_100F2DA2C, &type metadata for CRLBoardItemUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_10140A1B8);
  }
  return result;
}

uint64_t sub_100C0277C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
}

void sub_100C02798()
{
  id v0;
  NSString v1;
  id v2;
  unint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(CRLRemoteDefaults), "sharedDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (v2)
  {
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v3 = sub_1008D5828((uint64_t)_swiftEmptyArrayStorage);
  }
  qword_101481038 = v3;
}

void sub_100C02870()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(CRLRemoteDefaults), "sharedDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "stringForKey:", v1);

  if (v2)
  {
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  qword_10140A1C0 = v3;
  qword_10140A1C8 = v5;
}

id sub_100C0292C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  qword_10140A1D0 = (uint64_t)result;
  return result;
}

BOOL sub_100C02964(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSString v18;
  id v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __n128 v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  _BYTE v47[24];
  uint64_t v48;
  __int128 v49;
  __int128 v50;

  v2 = type metadata accessor for Calendar(0);
  v45 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DateComponents(0);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - v16;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(a1, "objectForKey:", v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)(&v49, v19);
    swift_unknownObjectRelease(v19);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  sub_1004D28A4((uint64_t)&v49, (uint64_t)v47);
  if (!v48)
  {
    sub_1004CB800((uint64_t)v47, &qword_1013E0230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  v20 = swift_dynamicCast(v10, v47, (char *)&type metadata for Any + 8, v11, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v20 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    sub_1004CB800((uint64_t)v10, &qword_1013E04F0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  if (qword_1013DDDC0 != -1)
    swift_once(&qword_1013DDDC0, sub_100C02798);
  v21 = qword_101481038;
  v46[0] = 0xD000000000000020;
  v46[1] = 0x8000000101000E60;
  AnyHashable.init<A>(_:)(v46, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_1008432BC((uint64_t)v47), (v23 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v49);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  sub_1004B89A4((uint64_t)v47);
  if (!*((_QWORD *)&v50 + 1))
  {
    sub_1004CB800((uint64_t)&v49, &qword_1013E0230);
    goto LABEL_23;
  }
  v24 = swift_dynamicCast(v46, &v49, (char *)&type metadata for Any + 8, &type metadata for Int, 6);
  if ((v24 & 1) == 0)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return 0;
  }
  v42 = v46[0];
  static Calendar.current.getter(v24);
  v25 = sub_1004B804C(&qword_1013E0528);
  v26 = type metadata accessor for Calendar.Component(0);
  v41 = v2;
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (v28 + 32) & ~v28;
  v30 = swift_allocObject(v25, v29 + *(_QWORD *)(v27 + 72), v28 | 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
  v31 = v30 + v29;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v31, enum case for Calendar.Component.day(_:), v26);
  v32 = sub_1004B55E4(v30);
  swift_setDeallocating(v30);
  swift_arrayDestroy(v31, 1, v26);
  swift_deallocClassInstance(v30, 32, 7);
  static Date.now.getter(v33);
  Calendar.dateComponents(_:from:to:)(v32, v17, v14);
  v34 = swift_bridgeObjectRelease(v32);
  v35 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v35(v14, v11, v34);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v4, v41);
  v37 = DateComponents.day.getter(v36);
  LOBYTE(v30) = v38;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v44);
  ((void (*)(char *, uint64_t))v35)(v17, v11);
  return (v30 & 1) == 0 && v37 >= v42;
}

BOOL sub_100C02DFC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  NSString v20;
  id v21;
  int v22;
  uint64_t v23;
  NSString v24;
  id v25;
  unint64_t v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  __n128 v41;
  char *v42;
  __n128 v43;
  void (*v44)(char *, uint64_t, __n128);
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  __n128 v53;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  _BYTE v67[24];
  uint64_t v68;
  __int128 v69;
  __int128 v70;

  v2 = type metadata accessor for Calendar(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DateComponents(0);
  v61 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v64 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  if (qword_1013DDDC0 != -1)
    swift_once(&qword_1013DDDC0, sub_100C02798);
  v17 = qword_101481038;
  v65 = 0xD00000000000001FLL;
  v66 = 0x8000000101000E40;
  AnyHashable.init<A>(_:)(&v65, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1008432BC((uint64_t)v67), (v19 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_1004B89A4((uint64_t)v67);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_1004CB800((uint64_t)&v69, &qword_1013E0230);
    return 0;
  }
  if ((swift_dynamicCast(&v65, &v69, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    v60 = v5;
    v58 = v65;
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(a1, "objectForKey:", v20);

    if (v21)
    {
      _bridgeAnyObjectToAny(_:)(&v69, v21);
      swift_unknownObjectRelease(v21);
    }
    else
    {
      v69 = 0u;
      v70 = 0u;
    }
    sub_1004D28A4((uint64_t)&v69, (uint64_t)v67);
    if (v68)
    {
      v22 = swift_dynamicCast(v9, v67, (char *)&type metadata for Any + 8, v10, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v22 ^ 1u, 1, v10);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      if ((_DWORD)v23 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
        goto LABEL_18;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)v67, &qword_1013E0230);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    static Date.distantPast.getter(v23);
    sub_1004CB800((uint64_t)v9, &qword_1013E04F0);
LABEL_18:
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(a1, "objectForKey:", v24);

    if (v25)
    {
      _bridgeAnyObjectToAny(_:)(&v69, v25);
      swift_unknownObjectRelease(v25);
    }
    else
    {
      v69 = 0u;
      v70 = 0u;
    }
    sub_1004D28A4((uint64_t)&v69, (uint64_t)v67);
    if (v68)
    {
      if (swift_dynamicCast(&v65, v67, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v57 = v65;
        v26 = v66;
        goto LABEL_26;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)v67, &qword_1013E0230);
    }
    v57 = 0;
    v26 = 0xE000000000000000;
LABEL_26:
    v59 = v26;
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v27, "objectForInfoDictionaryKey:", v28);

    if (v29)
    {
      _bridgeAnyObjectToAny(_:)(&v69, v29);
      swift_unknownObjectRelease(v29);
    }
    else
    {
      v69 = 0u;
      v70 = 0u;
    }
    sub_1004D28A4((uint64_t)&v69, (uint64_t)v67);
    if (v68)
    {
      v30 = swift_dynamicCast(&v65, v67, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if ((_DWORD)v30)
      {
        v31 = v65;
        v32 = v66;
        goto LABEL_34;
      }
    }
    else
    {
      v30 = sub_1004CB800((uint64_t)v67, &qword_1013E0230);
    }
    v32 = 0xE100000000000000;
    v31 = 63;
LABEL_34:
    v56 = v31;
    static Calendar.current.getter(v30);
    v33 = sub_1004B804C(&qword_1013E0528);
    v34 = type metadata accessor for Calendar.Component(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(unsigned __int8 *)(v35 + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = swift_allocObject(v33, v37 + *(_QWORD *)(v35 + 72), v36 | 7);
    *(_OWORD *)(v38 + 16) = xmmword_100EF5E40;
    v39 = v38 + v37;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v39, enum case for Calendar.Component.day(_:), v34);
    v40 = sub_1004B55E4(v38);
    swift_setDeallocating(v38);
    swift_arrayDestroy(v39, 1, v34);
    swift_deallocClassInstance(v38, 32, 7);
    static Date.now.getter(v41);
    v42 = v64;
    Calendar.dateComponents(_:from:to:)(v40, v16, v13);
    v43 = swift_bridgeObjectRelease(v40);
    v44 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
    v44(v13, v10, v43);
    v45 = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v4, v63);
    v46 = DateComponents.day.getter(v45);
    if ((v47 & 1) != 0)
    {
      v50 = v32;
      v48 = v59;
      v49 = v60;
    }
    else
    {
      v48 = v59;
      v49 = v60;
      if (v46 < v58)
      {
        v50 = v32;
      }
      else if (v57 != v56 || (v50 = v59, v59 != v32))
      {
        v51 = v60;
        v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v56, v32, 0);
        swift_bridgeObjectRelease(v48);
        v53 = swift_bridgeObjectRelease(v32);
        (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v42, v51, v53);
        ((void (*)(char *, uint64_t))v44)(v16, v10);
        return (v52 & 1) == 0;
      }
    }
    swift_bridgeObjectRelease(v48);
    v55 = swift_bridgeObjectRelease(v50);
    (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v42, v49, v55);
    ((void (*)(char *, uint64_t))v44)(v16, v10);
  }
  return 0;
}

BOOL sub_100C034DC()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForInfoDictionaryKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v10, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1004D28A4((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    if ((swift_dynamicCast(v9, v11, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v3 = v9[1];
      if (qword_1013DDDC8 != -1)
        swift_once(&qword_1013DDDC8, sub_100C02870);
      if (qword_10140A1C8)
      {
        v4 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v3);
        v5 = sub_1000717FC(v4);

        v6 = String._bridgeToObjectiveC()();
        v7 = sub_1000717FC(v6);

        return v5 == v7;
      }
      swift_bridgeObjectRelease(v3);
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v11, &qword_1013E0230);
  }
  return 0;
}

BOOL sub_100C03680(void *a1)
{
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  __int128 *v8;
  _QWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(a1, "objectForKey:", v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(&v13, v3);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_1004D28A4((uint64_t)&v13, (uint64_t)v11);
  if (!v12)
  {
    v8 = (__int128 *)v11;
LABEL_17:
    sub_1004CB800((uint64_t)v8, &qword_1013E0230);
    return 0;
  }
  if ((swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    return 0;
  v4 = v10[0];
  if (qword_1013DDDC0 != -1)
    swift_once(&qword_1013DDDC0, sub_100C02798);
  v5 = qword_101481038;
  v10[0] = 0xD00000000000001DLL;
  v10[1] = 0x8000000101000DE0;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1008432BC((uint64_t)v11), (v7 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_1004B89A4((uint64_t)v11);
  if (!*((_QWORD *)&v14 + 1))
  {
    v8 = &v13;
    goto LABEL_17;
  }
  if ((swift_dynamicCast(v10, &v13, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
    return v4 >= v10[0];
  return 0;
}

id CRLiOSAppStoreReviewHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppStoreReviewHelper();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for CRLiOSAppStoreReviewHelper()
{
  return objc_opt_self(_TtC8Freeform26CRLiOSAppStoreReviewHelper);
}

id CRLiOSAppStoreReviewHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppStoreReviewHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100C03914()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  uint64_t v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  if (qword_1013DDDD0 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  v0 = (void *)qword_10140A1D0;
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1004D28A4((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    if (swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    {
      v3 = v7;
      goto LABEL_11;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v9, &qword_1013E0230);
  }
  v3 = 0;
LABEL_11:
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = (void *)qword_10140A1D0;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setInteger:forKey:", v4, v6);

  }
}

void sub_100C03A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  NSString v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  id v11;
  unint64_t v12;
  void *v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v17;
  Class v18;
  NSString v19;
  char v20;
  uint64_t v21;
  void *v22;
  Class isa;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "objectForInfoDictionaryKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(&v26, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1004D28A4((uint64_t)&v26, (uint64_t)&v28);
  if (*((_QWORD *)&v29 + 1))
  {
    if (swift_dynamicCast(&v24, &v28, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v8 = v24;
      v7 = v25;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)&v28, &qword_1013E0230);
  }
  v7 = 0xE100000000000000;
  v8 = 63;
LABEL_9:
  if (qword_1013DDDD0 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  v9 = (void *)qword_10140A1D0;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "objectForKey:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(&v26, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1004D28A4((uint64_t)&v26, (uint64_t)&v28);
  if (*((_QWORD *)&v29 + 1))
  {
    if ((swift_dynamicCast(&v24, &v28, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v12 = v25;
      if (v24 == v8 && v25 == v7)
      {
        swift_bridgeObjectRelease_n(v7, 2);
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v8, v7, 0);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v7);
        if ((v20 & 1) == 0)
        {
          v22 = (void *)qword_10140A1D0;
          Date.init()(v21);
          isa = Date._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
          v19 = String._bridgeToObjectiveC()();
          objc_msgSend(v22, "setObject:forKey:", isa, v19);

          goto LABEL_24;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease(v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    sub_1004CB800((uint64_t)&v28, &qword_1013E0230);
  }
  v13 = (void *)qword_10140A1D0;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "objectForKey:", v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v28, v15);
    swift_unknownObjectRelease(v15);
    sub_1004CB800((uint64_t)&v28, &qword_1013E0230);
    return;
  }
  v28 = 0u;
  v29 = 0u;
  v16 = sub_1004CB800((uint64_t)&v28, &qword_1013E0230);
  v17 = (void *)qword_10140A1D0;
  Date.init()(v16);
  v18 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setObject:forKey:", v18, v19);

LABEL_24:
}

BOOL sub_100C03E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v0 = qword_1013DDDD0;
  swift_retain(0);
  if (v0 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  v7 = qword_10140A1D0;
  sub_1004B3578((void **)&v7, &v6);
  swift_release(0);
  if (v6 != 1)
    goto LABEL_11;
  v1 = qword_1013DDDD0;
  swift_retain(0);
  if (v1 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  v7 = qword_10140A1D0;
  sub_1004B35A4((void **)&v7, &v6);
  swift_release(0);
  if (v6 != 1)
    goto LABEL_11;
  v2 = qword_1013DDDD0;
  swift_retain(0);
  if (v2 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  v7 = qword_10140A1D0;
  sub_1004B35D0((void **)&v7, &v6);
  swift_release(0);
  if (v6 == 1)
  {
    v3 = sub_1004B804C(&qword_1013E01E0);
    swift_arrayDestroy(&off_101265428, 3, v3);
    return sub_100C034DC();
  }
  else
  {
LABEL_11:
    v5 = sub_1004B804C(&qword_1013E01E0);
    swift_arrayDestroy(&off_101265428, 3, v5);
    return 0;
  }
}

void sub_100C04010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSString v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  Class isa;
  NSString v13;
  void *v14;
  NSString v15;
  NSString v16;
  _QWORD v17[2];
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "objectForInfoDictionaryKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v18, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_1004D28A4((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    if (swift_dynamicCast(v17, v19, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v9 = v17[1];
      goto LABEL_9;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v19, &qword_1013E0230);
  }
  v9 = 0xE100000000000000;
LABEL_9:
  v10 = objc_msgSend((id)objc_opt_self(SKStoreReviewController), "requestReviewInScene:", a1);
  if (qword_1013DDDD0 != -1)
    v10 = (id)swift_once(&qword_1013DDDD0, sub_100C0292C);
  v11 = (void *)qword_10140A1D0;
  Date.init()(v10);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setObject:forKey:", isa, v13);

  v14 = (void *)qword_10140A1D0;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setObject:forKey:", v15, v16);

}

uint64_t sub_100C0427C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  if ((static Selector.== infix(_:_:)(a1, "updatePreset:") & 1) != 0)
    return 1;
  sub_1004F370C(a2, (uint64_t)v16);
  v6 = v17;
  if (v17)
  {
    v7 = sub_1004BB5A4(v16, v17);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  }
  else
  {
    v12 = 0;
  }
  v13 = (objc_class *)type metadata accessor for CRLWPStickyNoteEditor();
  v15.receiver = v2;
  v15.super_class = v13;
  v5 = objc_msgSendSuper2(&v15, "canPerformEditorAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  return (uint64_t)v5;
}

void sub_100C04420(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(__n128);
  id v44;
  __n128 v45;
  objc_class *v46;
  _BYTE *v47;
  _BYTE *v48;
  _QWORD v49[2];
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  int v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  objc_super v62;
  _QWORD v63[3];
  uint64_t v64;
  unint64_t v65;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v2, "interactiveCanvasController", v6);
  if (!v9)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 26, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 26, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v58 = v9;
  v59 = objc_msgSend(v9, "commandController");
  if (!v59)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 27, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 27, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    return;
  }
  v10 = objc_msgSend(v58, "canvasEditor");
  if (v10)
  {
    v11 = v10;
    sub_1004F370C(a1, (uint64_t)v63);
    if (v64)
    {
      if ((swift_dynamicCast(&v61, v63, (char *)&type metadata for Any + 8, &type metadata for CRLStickyNotePreset, 6) & 1) != 0)
      {
        v57 = v61;
        v12 = objc_msgSend(v2, "editorController", swift_unknownObjectRetain(v11).n128_f64[0]);
        v13 = objc_msgSend(v12, "selectionPath");

        v14 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasCommandSelectionBehavior), "initWithCanvasEditor:type:selectionPath:", v11, 2, v13);
        v51 = v11;
        swift_unknownObjectRelease(v11);

        v15 = v14;
        sub_1006A9664(v14);
        v50 = v15;

        v16 = objc_msgSend(v2, "boardItems");
        v17 = type metadata accessor for CRLBoardItem(0);
        v18 = sub_10058528C();
        v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v16, v17, v18);

        v53 = v17;
        if ((v19 & 0xC000000000000001) != 0)
        {
          if (v19 < 0)
            v21 = v19;
          else
            v21 = v19 & 0xFFFFFFFFFFFFFF8;
          v22 = __CocoaSet.makeIterator()(v21);
          v20 = Set.Iterator.init(_cocoa:)(v63, v22, v17, v18);
          v19 = v63[0];
          v56 = v63[1];
          v23 = v63[2];
          v24 = v64;
          v25 = v65;
        }
        else
        {
          v24 = 0;
          v26 = -1 << *(_BYTE *)(v19 + 32);
          v27 = *(_QWORD *)(v19 + 56);
          v56 = v19 + 56;
          v28 = ~v26;
          v29 = -v26;
          if (v29 < 64)
            v30 = ~(-1 << v29);
          else
            v30 = -1;
          v25 = v30 & v27;
          v23 = v28;
        }
        v49[1] = v23;
        v54 = v19 & 0x7FFFFFFFFFFFFFFFLL;
        v55 = (unint64_t)(v23 + 64) >> 6;
        v52 = (char *)&type metadata for Swift.AnyObject + 8;
        while (1)
        {
          if (v19 < 0)
          {
            v34 = __CocoaSet.Iterator.next()(v20);
            if (!v34)
              goto LABEL_46;
            v35 = v34;
            v60 = v34;
            swift_unknownObjectRetain(v34);
            swift_dynamicCast(&v61, &v60, v52, v53, 7);
            v36 = v61;
            swift_unknownObjectRelease(v35);
            v33 = v24;
            v31 = v25;
          }
          else
          {
            if (v25)
            {
              v31 = (v25 - 1) & v25;
              v32 = __clz(__rbit64(v25)) | (v24 << 6);
              v33 = v24;
            }
            else
            {
              v37 = v24 + 1;
              if (__OFADD__(v24, 1))
              {
                __break(1u);
                return;
              }
              if (v37 >= v55)
                goto LABEL_46;
              v38 = *(_QWORD *)(v56 + 8 * v37);
              v33 = v24 + 1;
              if (!v38)
              {
                v33 = v24 + 2;
                if (v24 + 2 >= v55)
                  goto LABEL_46;
                v38 = *(_QWORD *)(v56 + 8 * v33);
                if (!v38)
                {
                  v33 = v24 + 3;
                  if (v24 + 3 >= v55)
                    goto LABEL_46;
                  v38 = *(_QWORD *)(v56 + 8 * v33);
                  if (!v38)
                  {
                    v33 = v24 + 4;
                    if (v24 + 4 >= v55)
                      goto LABEL_46;
                    v38 = *(_QWORD *)(v56 + 8 * v33);
                    if (!v38)
                    {
                      v39 = v24 + 5;
                      while (v55 != v39)
                      {
                        v38 = *(_QWORD *)(v56 + 8 * v39++);
                        if (v38)
                        {
                          v33 = v39 - 1;
                          goto LABEL_41;
                        }
                      }
LABEL_46:
                      sub_1004D284C(v19);
                      sub_1006A984C(0);

                      swift_unknownObjectRelease(v51);
                      return;
                    }
                  }
                }
              }
LABEL_41:
              v31 = (v38 - 1) & v38;
              v32 = __clz(__rbit64(v38)) + (v33 << 6);
            }
            v36 = *(id *)(*(_QWORD *)(v19 + 48) + 8 * v32);
          }
          if (!v36)
            goto LABEL_46;
          v40 = type metadata accessor for CRLWPStickyNoteItem(0);
          v41 = swift_dynamicCastClass(v36, v40);
          if (v41)
          {
            v42 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            v43 = *(void (**)(__n128))(*(_QWORD *)v42 + 256);
            v44 = v36;
            v45 = swift_retain(v42);
            v43(v45);
            swift_release(v42);
            v46 = (objc_class *)type metadata accessor for CRLCommandSetStickyPreset(0);
            v47 = objc_allocWithZone(v46);
            (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(&v47[OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_id], v8, v4);
            v47[OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_preset] = v57;
            v62.receiver = v47;
            v62.super_class = v46;
            v48 = objc_msgSendSuper2(&v62, "init");
            (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
            sub_1006A5F54(v48, 0, 0, 4, 0);

          }
          v24 = v33;
          v25 = v31;
        }
      }
    }
    else
    {
      sub_1004D28EC((uint64_t)v63);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 29, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 29, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    swift_unknownObjectRelease(v11);
    return;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 28, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 28, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

}

void sub_100C04C50()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  objc_class *v14;
  id v15;
  id v16;
  Swift::String v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t ObjectType;
  id v25;
  objc_super v26;
  _BYTE v27[880];
  _QWORD *v28;

  v1 = objc_msgSend(v0, "boardItems");
  v2 = type metadata accessor for CRLBoardItem(0);
  v3 = sub_10058528C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = v4;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    v6 = __CocoaSet.count.getter(v5);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
  }
  swift_bridgeObjectRelease();
  if (v6 != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 43, "Only should save default style with a single object selected!", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 43, (uint64_t)"Only should save default style with a single object selected!", 61, 2u);
  }
  v7 = objc_msgSend(v0, "boardItems");
  v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v2, v3);

  v25 = (id)sub_100857E90(v8);
  swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_16;
  v9 = type metadata accessor for CRLWPStickyNoteItem(0);
  v10 = swift_dynamicCastClass(v25, v9);
  if (!v10)
  {

LABEL_16:
    sub_100757E04(&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 44, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 44, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v11 = (void *)v10;
  v12 = objc_msgSend(v0, "interactiveCanvasController");
  v13 = objc_msgSend(v12, "commandController");

  if (v13)
  {
    v14 = (objc_class *)type metadata accessor for CRLCommandSetDefaultStickyNoteInsertionPreset();
    v15 = objc_allocWithZone(v14);
    v16 = v25;
    sub_100C8E820(v11, 0, (uint64_t)v27);
    v28 = _swiftEmptyDictionarySingleton;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v27, v17);
    v18 = (char *)objc_allocWithZone(v14);
    v19 = &v18[OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_actionString];
    v20 = qword_1013DC880;
    v21 = v18;
    if (v20 != -1)
      swift_once(&qword_1013DC880, sub_1004C34DC);
    v22 = unk_1013DF950;
    *(_QWORD *)v19 = qword_1013DF948;
    *((_QWORD *)v19 + 1) = v22;
    sub_100C05728((uint64_t)v27, (uint64_t)&v21[OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_stickyStyle]);
    swift_bridgeObjectRetain(v22);

    v26.receiver = v21;
    v26.super_class = v14;
    v23 = objc_msgSendSuper2(&v26, "init");

    ObjectType = swift_getObjectType(v15);
    swift_deallocPartialClassInstance(v15, ObjectType, 920, 7);
    sub_1006A5F54(v23, 0, 0, 4, 0);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 45, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2u, 45, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

  }
}

void sub_100C050F4(void *a1, double a2, double a3)
{
  void *v3;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  NSString v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  NSString v37;
  id v38;
  objc_super v39;

  v39.receiver = v3;
  v39.super_class = (Class)type metadata accessor for CRLWPStickyNoteEditor();
  objc_msgSendSuper2(&v39, "addMiniFormatterElementsToArray:atPoint:", a1, a2, a3);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v12 = String._bridgeToObjectiveC()();
  v13 = (void *)objc_opt_self(CRLImage);
  v14 = objc_msgSend(v13, "crl_quickInspectorImageNamed:", v12);

  v15 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithName:image:type:options:", v16, v14, 2, 4096, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v17, "setTag:", 15);
  v18 = objc_msgSend(v7, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setToolTip:", v22, swift_bridgeObjectRelease().n128_f64[0]);

  v23 = v17;
  objc_msgSend(a1, "insertObject:atIndex:", v23, objc_msgSend(a1, "count"));

  v24 = objc_msgSend(v7, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v13, "crl_quickInspectorImageNamed:", v28);

  v30 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "initWithName:image:type:options:", v31, v29, 2, 0x2000, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v32, "setTag:", 16);
  v33 = objc_msgSend(v7, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setToolTip:", v37, swift_bridgeObjectRelease().n128_f64[0]);

  v38 = v32;
  objc_msgSend(a1, "insertObject:atIndex:", v38, objc_msgSend(a1, "count"));

}

id sub_100C056D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteEditor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPStickyNoteEditor()
{
  return objc_opt_self(_TtC8Freeform21CRLWPStickyNoteEditor);
}

uint64_t sub_100C05728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013DFA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C05774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1004BE310(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1004BE310(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1004BBBC8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1004BBBC8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeLegacy(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && a1[24])
    return (*(_DWORD *)a1 + 252);
  v3 = *a1;
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeLegacy()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeLegacy;
}

uint64_t sub_100C058DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C06600();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100C05938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C06600();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_100C05984(_QWORD *a1@<X8>)
{
  *a1 = &off_101264500;
}

uint64_t sub_100C05994(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;
  __int128 v20;

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140A2E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100C065BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys, v11, v9, v10);
  LOBYTE(v20) = 0;
  v12 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v13 = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(0);
    v15 = *(_QWORD *)(v3 + *(int *)(v14 + 20));
    LOBYTE(v20) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15);
    v20 = *(_OWORD *)(v3 + *(int *)(v14 + 24));
    v19 = 2;
    v16 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v19, v5, &type metadata for Data, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C05B2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v22 = a2;
  v23 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v23);
  v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_10140A2D8);
  v5 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_100C065BC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys, v13, v11, v12);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v21 = a1;
  v14 = (uint64_t)v10;
  LOBYTE(v26) = 0;
  v15 = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
  v16 = (uint64_t)v24;
  v17 = v25;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &v26, v25, v23, v15);
  sub_1004BB62C(v16, v14);
  LOBYTE(v26) = 1;
  *(_QWORD *)(v14 + *(int *)(v8 + 20)) = KeyedDecodingContainer.decode(_:forKey:)(&v26, v17);
  v27 = 2;
  v18 = sub_100587AC0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v27, v17, &type metadata for Data, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  *(_OWORD *)(v14 + *(int *)(v8 + 24)) = v26;
  sub_1004B8460(v14, v22, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
  return sub_1004B84A4(v14, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
}

uint64_t sub_100C05DD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C065BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C05DFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C065BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C05E24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C05B2C(a1, a2);
}

uint64_t sub_100C05E38(_QWORD *a1)
{
  return sub_100C05994(a1);
}

uint64_t sub_100C05E4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;

  v5 = *v2;
  v7 = *((_QWORD *)v2 + 1);
  v6 = *((_QWORD *)v2 + 2);
  v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(0);
  a2[3] = v8;
  a2[4] = sub_1004B7878(&qword_1013EDC28, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DDE4);
  v9 = sub_10050D1B0(a2);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(_QWORD *)((char *)v9 + *(int *)(v8 + 20)) = v5;
  v10 = (_QWORD *)((char *)v9 + *(int *)(v8 + 24));
  *v10 = v7;
  v10[1] = v6;
  return sub_1004BE310(v7, v6);
}

uint64_t type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy(uint64_t a1)
{
  uint64_t result;

  result = qword_10140A280;
  if (!qword_10140A280)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  return result;
}

uint64_t *sub_100C05F2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = *(uint64_t *)((char *)a2 + v12);
    v16 = *((_QWORD *)v14 + 1);
    swift_bridgeObjectRetain(v11);
    sub_1004BE310(v15, v16);
    *v13 = v15;
    v13[1] = v16;
  }
  return a1;
}

uint64_t sub_100C05FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v12 = (uint64_t *)(a1 + v11);
  v13 = *(_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain(v10);
  sub_1004BE310(v13, v14);
  *v12 = v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100C06088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v11 = *(int *)(a3 + 24);
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  v15 = v13[1];
  sub_1004BE310(*v13, v15);
  v16 = *v12;
  v17 = v12[1];
  *v12 = v14;
  v12[1] = v15;
  sub_1004BBBC8(v16, v17);
  return a1;
}

uint64_t sub_100C06140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100C061B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_1004BBBC8(v13, v14);
  return a1;
}

uint64_t sub_100C0624C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C06258);
}

uint64_t sub_100C06258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t sub_100C062E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C062F4);
}

uint64_t sub_100C062F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 24));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_100C0637C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_100F2DC20;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeTypeLegacy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100C06448 + 4 * byte_100F2DB95[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100C0647C + 4 * asc_100F2DB90[v4]))();
}

uint64_t sub_100C0647C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C06484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C0648CLL);
  return result;
}

uint64_t sub_100C06498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C064A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100C064A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C064AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeTypeLegacy()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeTypeLegacy;
}

unint64_t sub_100C064CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140A2C0;
  if (!qword_10140A2C0)
  {
    v1 = sub_1004CB6A4(&qword_10140A2C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10140A2C0);
  }
  return result;
}

unint64_t sub_100C0651C()
{
  unint64_t result;

  result = qword_10140A2D0;
  if (!qword_10140A2D0)
  {
    result = swift_getWitnessTable(&unk_100F2DD6C, &type metadata for CRLBoardAuxiliaryRealTimeChangeTypeLegacy);
    atomic_store(result, (unint64_t *)&qword_10140A2D0);
  }
  return result;
}

uint64_t sub_100C06560(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013EDC30, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DDBC);
  result = sub_1004B7878((unint64_t *)&unk_1013E7700, type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy, (uint64_t)&unk_100F2DD94);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100C065BC()
{
  unint64_t result;

  result = qword_10140A2E0;
  if (!qword_10140A2E0)
  {
    result = swift_getWitnessTable(&unk_100F2DEC4, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A2E0);
  }
  return result;
}

unint64_t sub_100C06600()
{
  unint64_t result;

  result = qword_10140A2F0;
  if (!qword_10140A2F0)
  {
    result = swift_getWitnessTable(&unk_100F2DCF4, &type metadata for CRLBoardAuxiliaryRealTimeChangeTypeLegacy);
    atomic_store(result, (unint64_t *)&qword_10140A2F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C06690 + 4 * byte_100F2DB9F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C066C4 + 4 * byte_100F2DB9A[v4]))();
}

uint64_t sub_100C066C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C066CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C066D4);
  return result;
}

uint64_t sub_100C066E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C066E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C066EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C066F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys;
}

unint64_t sub_100C06714()
{
  unint64_t result;

  result = qword_10140A2F8;
  if (!qword_10140A2F8)
  {
    result = swift_getWitnessTable(&unk_100F2DE9C, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A2F8);
  }
  return result;
}

unint64_t sub_100C0675C()
{
  unint64_t result;

  result = qword_10140A300;
  if (!qword_10140A300)
  {
    result = swift_getWitnessTable(&unk_100F2DE0C, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A300);
  }
  return result;
}

unint64_t sub_100C067A4()
{
  unint64_t result;

  result = qword_10140A308;
  if (!qword_10140A308)
  {
    result = swift_getWitnessTable(&unk_100F2DE34, &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140A308);
  }
  return result;
}

uint64_t sub_100C067E8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  unint64_t v5;
  void (*v6)(_BYTE *, _QWORD);
  double *v7;
  _BYTE v9[32];
  _QWORD v10[5];

  sub_1004B8460(v2, a1, type metadata accessor for CRLBasicLayerAnimation);
  v10[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v5 = sub_1004EB138();
  v10[4] = v5;
  v10[0] = swift_allocObject(&unk_10129ACA8, 316, 7);
  sub_1004E91D4(a1, v10[0] + 16);
  sub_1004CB9AC((uint64_t)v10, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def);
  v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, ValueMetadata *))(*(_QWORD *)(v5 + 32)
                                                                                                 + 24))(v9, &type metadata for CRLBasicLayerAnimation.Def);
  *v7 = *v7 + a2;
  v6(v9, 0);
  return sub_10057CE2C(v10);
}

double sub_100C068C0@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  double result;

  sub_1004E91D4(v2, a1);
  result = *(double *)(a1 + 8) + a2;
  *(double *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100C06900@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  unint64_t v5;
  void (*v6)(_BYTE *, _QWORD);
  double *v7;
  _BYTE v9[32];
  _QWORD v10[5];

  sub_1004B8460(v2, a1, type metadata accessor for CRLSpringLayerAnimation);
  v10[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v5 = sub_100553914();
  v10[4] = v5;
  v10[0] = swift_allocObject(&unk_10129ACD0, 332, 7);
  sub_100720EB4(a1, v10[0] + 16);
  sub_1004CB9AC((uint64_t)v10, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def);
  v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, ValueMetadata *))(*(_QWORD *)(v5 + 32)
                                                                                                 + 24))(v9, &type metadata for CRLSpringLayerAnimation.Def);
  *v7 = *v7 + a2;
  v6(v9, 0);
  return sub_100D26E34(v10);
}

double sub_100C069D8@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  double result;

  sub_100720EB4(v2, a1);
  result = *(double *)(a1 + 32) + a2;
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100C06A18@<X0>(double *a1@<X8>, double a2@<D0>)
{
  double *v2;
  double v3;
  double v4;

  v3 = *v2;
  v4 = v2[1] + a2;
  *a1 = *v2;
  a1[1] = v4;
  return swift_bridgeObjectRetain(*(_QWORD *)&v3);
}

uint64_t sub_100C06A30@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(double *)(v2 + 16) + a2;
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(double *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain(v3);
}

double sub_100C06A50@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  double result;

  v5 = v3;
  sub_1004B8460(v5, a2, type metadata accessor for CRLTweenLayerAnimation);
  v8 = a2 + *(int *)(a1 + 32);
  result = *(double *)(v8 + 8) + a3;
  *(double *)(v8 + 8) = result;
  return result;
}

uint64_t sub_100C06AA4()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100C06BA8()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

_QWORD *sub_100C06CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 736) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 752));
  *(_QWORD *)(v6 + qword_10140A310) = 0;
  sub_1004C4938(a1, v6 + *(_QWORD *)(*(_QWORD *)v6 + 632), &qword_1013F5530);
  return sub_1005E1000(a3, a4, a5, a6);
}

uint64_t *sub_100C06D38()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1004CB800((uint64_t)v0 + *(_QWORD *)(*v0 + 632), &qword_1013F5530);

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 736) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 752));
  return v0;
}

double sub_100C06D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t (*v13)(_BYTE *, __n128);
  __n128 v14;
  void (*v15)(_BYTE *, _QWORD);
  _BYTE v16[32];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 736);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v7 + 744);
  v10 = type metadata accessor for CRLAbstractShapeItemData(0, v3, v8, v9);
  v11 = swift_dynamicCastClass(a1, v10);
  if (v11)
  {
    (*(void (**)(void))(*(_QWORD *)v11 + 760))();
    v13 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v1 + 776);
    v14 = swift_retain(a1);
    v15 = (void (*)(_BYTE *, _QWORD))v13(v16, v14);
    dispatch thunk of CRMergeable.merge(_:)(v6, v3, *(_QWORD *)(*(_QWORD *)(v8 + 8) + 8));
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    v15(v16, 0);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_100C06EA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 736);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  v17 = type metadata accessor for CRLAbstractShapeItemData(0, v4, *(_QWORD *)(v3 + 744), v16);
  v18 = swift_dynamicCastClass(a1, v17);
  if (!v18)
    goto LABEL_5;
  v19 = v18;
  v29 = v5;
  v20 = (uint64_t)v1 + *(_QWORD *)(v3 + 632);
  swift_beginAccess(v20, v32, 0, 0);
  sub_1004CB7BC(v20, (uint64_t)v15, &qword_1013F5530);
  v21 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 632);
  swift_beginAccess(v21, v31, 0, 0);
  sub_1004CB7BC(v21, (uint64_t)v12, &qword_1013F5530);
  swift_retain(a1);
  LOBYTE(v21) = sub_100D5ED0C((uint64_t)v15, (uint64_t)v12);
  sub_1004CB800((uint64_t)v12, &qword_1013F5530);
  v22 = sub_1004CB800((uint64_t)v15, &qword_1013F5530);
  if ((v21 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v25 = 0;
    return v25 & 1;
  }
  v23 = (*(uint64_t (**)(uint64_t))(*v1 + 760))(v22);
  v24 = v30;
  (*(void (**)(uint64_t))(*(_QWORD *)v19 + 760))(v23);
  v25 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v24);
  v26 = swift_release(a1);
  v27 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
  v27(v24, v4, v26);
  ((void (*)(char *, uint64_t))v27)(v9, v4);
  return v25 & 1;
}

uint64_t sub_100C070D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  void (*v12)(__n128);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 736);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v18 - v10;
  v12 = *(void (**)(__n128))(v3 + 760);
  if ((v13 & 1) != 0)
  {
    v12(v9);
    dispatch thunk of CRType.copy(renamingReferences:)(0, v4, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 744) + 8) + 16));
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v12(v9);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v14 = type metadata accessor for CRCodableVersion(0);
  v15 = sub_1004F2A1C(v14, (uint64_t)qword_10147EB08);
  v16 = dispatch thunk of CRMergeable.serializedData(_:version:)(a1, v15, v4, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 744) + 8) + 8));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  return v16;
}

uint64_t sub_100C07230(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  uint64_t v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 736);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(v3 + 744);
  v13 = type metadata accessor for CRLAbstractShapeItemData(0, v4, v11, v12);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v16 = (*(uint64_t (**)(void))(v3 + 760))();
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 760))(v16);
    v17 = dispatch thunk of CRDT.hasDelta(from:)(v7, v4, *(_QWORD *)(v11 + 8));
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v7, v4);
    v18(v10, v4);
    return v17 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLShapeItemData.swift", 31, 2, 303, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100C0738C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  uint64_t result;
  uint64_t v38;
  uint64_t AssociatedTypeWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 736);
  v40 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - v9;
  v43 = *(_QWORD *)(*(_QWORD *)(v4 + 744) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v43, v5, &protocol requirements base descriptor for CRDT, &associated type descriptor for CRDT.Partial);
  v44 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v38 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  v16 = a1;
  v17 = swift_dynamicCastClass(a1, v4);
  if (v17)
  {
    v18 = v17;
    v19 = (*(uint64_t (**)(void))(v4 + 760))();
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 760))(v19);
    v20 = swift_retain(v16);
    v21 = v41;
    dispatch thunk of CRDT.delta(_:from:)(v41, v7, v5, v43, v20);
    v22 = *(void (**)(char *, uint64_t))(v40 + 8);
    v22(v7, v5);
    v22(v10, v5);
    v23 = v38;
    v24 = v44;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v12, v15, v44);
    v25 = AssociatedTypeWitness;
    v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v12, 1, AssociatedTypeWitness) == 1)
    {
      v26 = *(void (**)(char *, uint64_t))(v23 + 8);
      v26(v15, v24);
      v27 = swift_release(v16);
      ((void (*)(char *, uint64_t, __n128))v26)(v12, v24, v27);
      return 0;
    }
    else
    {
      v28 = v21;
      v29 = v42;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v30 = type metadata accessor for CRCodableVersion(0);
      v31 = sub_1004F2A1C(v30, (uint64_t)qword_10147EB08);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v43, v5, v25, &protocol requirements base descriptor for CRDT, &associated conformance descriptor for CRDT.CRDT.Partial: PartialCRDT);
      v33 = v25;
      v34 = PartialCRDT.deltaSerializedData(_:version:)(v28, v31, v25, AssociatedConformanceWitness);
      if (v29)
      {
        v35 = swift_release(v16);
        (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v15, v44, v35);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v25);
      }
      else
      {
        v25 = v34;
        v36 = swift_release(v16);
        (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v15, v44, v36);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v33);
      }
    }
    return v25;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLShapeItemData.swift", 31, 2, 316, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100C076FC(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedConformanceWitness;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57[24];
  char v58[112];
  _BYTE v59[32];
  uint64_t v60;

  v55 = a2;
  v4 = *v2;
  v5 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v5);
  v53 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 744);
  v10 = *(_QWORD *)(v9 + 8);
  v11 = *(_QWORD *)(v4 + 736);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v10, v11, &protocol requirements base descriptor for CRDT, &associated type descriptor for CRDT.Partial);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v15 = (char *)&v45 - v14;
  v18 = v55;
  sub_1004BE310(a1, v55);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v10, v11, AssociatedTypeWitness, &protocol requirements base descriptor for CRDT, &associated conformance descriptor for CRDT.CRDT.Partial: PartialCRDT);
  v17 = v18;
  LOBYTE(v18) = AssociatedTypeWitness;
  v19 = v56;
  PartialCRDT.init(serializedData:)(a1, v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v19)
  {
    v49 = v8;
    v20 = (uint64_t)v53;
    v55 = AssociatedTypeWitness;
    v50 = v9;
    v56 = v13;
    v21 = v54;
    v22 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v54 + 776))(v59);
    LODWORD(v18) = dispatch thunk of CRDT.merge(delta:)(v15, v11, v10);
    v22(v59, 0);
    v23 = v15;
    if ((v18 & 1) == 0)
    {
      v48 = v18;
      v47 = 0;
      v46 = v15;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v59, 0, 0);
      v24 = (void *)static OS_os_log.realTimeSync;
      v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v25, v58);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v27 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 632);
      swift_beginAccess(v27, v57, 0, 0);
      v28 = v27;
      v29 = v20;
      sub_1004CB7BC(v28, v20, &qword_1013F5530);
      v30 = v24;
      v31 = sub_1004B804C(&qword_1013E1A80);
      v32 = v49;
      CRRegister.wrappedValue.getter(v31);
      v33 = sub_1004CB800(v29, &qword_1013F5530);
      v34 = UUID.uuidString.getter(v33);
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v37 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v37;
      *(_QWORD *)(inited + 32) = v34;
      *(_QWORD *)(inited + 40) = v36;
      v60 = v21;
      v39 = type metadata accessor for CRLAbstractShapeItemData(0, v11, v50, v38);
      swift_retain(v21);
      v40 = String.init<A>(describing:)(&v60, v39);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v37;
      *(_QWORD *)(inited + 72) = v40;
      *(_QWORD *)(inited + 80) = v41;
      v42 = static os_log_type_t.error.getter(v40);
      sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v42, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v18 = *(_QWORD *)(inited + 16);
      v43 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v18, v43);

      v23 = v46;
      LOBYTE(v18) = v48;
    }
    (*(void (**)(char *, unint64_t))(v56 + 8))(v23, v55);
  }
  return v18 & 1;
}

_BYTE *sub_100C07B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  id v18;
  _BYTE v21[24];

  v1 = v0;
  v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = qword_10140A310;
  v12 = *(void **)(v1 + qword_10140A310);
  if (v12)
  {
    v13 = *(_BYTE **)(v1 + qword_10140A310);
  }
  else
  {
    v14 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
    swift_beginAccess(v14, v21, 0, 0);
    sub_1004CB7BC(v14, (uint64_t)v10, &qword_1013F5530);
    v15 = sub_1004B804C((uint64_t *)&unk_101406B00);
    CRRegister.wrappedValue.getter(v15);
    sub_1004B8460((uint64_t)&v4[*(int *)(v2 + 20)], (uint64_t)v7, type metadata accessor for CRLPathSourceData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLShapeItemParentAffinity);
    sub_1004CB800((uint64_t)v10, &qword_1013F5530);
    v16 = sub_1009352D4(v7);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLPathSourceData);
    v17 = *(void **)(v1 + v11);
    *(_QWORD *)(v1 + v11) = v16;
    v13 = v16;

    v12 = 0;
  }
  v18 = v12;
  return v13;
}

void sub_100C07CE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _BYTE v15[32];
  _BYTE v16[24];

  v2 = v1;
  v4 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a1;
  sub_10092BFC8(v7, (uint64_t)v6);
  swift_beginAccess(v2 + *(_QWORD *)(*(_QWORD *)v2 + 632), v16, 33, 0);
  sub_1004B804C(&qword_1013F5530);
  v8 = sub_1004B804C((uint64_t *)&unk_101406B00);
  v9 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v15, v8);
  v11 = v10;
  v12 = type metadata accessor for CRLShapeItemParentAffinity(0);
  sub_100C110F4((uint64_t)v6, v11 + *(int *)(v12 + 20));
  v9(v15, 0);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLPathSourceData);
  swift_endAccess(v16);
  v13 = *(void **)(v2 + qword_10140A310);
  *(_QWORD *)(v2 + qword_10140A310) = v7;

}

void sub_100C07E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  _BOOL4 v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  _BYTE v51[128];
  uint64_t v52;
  char v53;
  float v54;
  float v55;
  char v56[32];

  v1 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - v8;
  v10 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - v14;
  v16 = *(void **)(v0 + qword_10140A310);
  if (v16)
  {
    v45 = qword_10140A310;
    v46 = v6;
    v17 = *(_QWORD *)(*(_QWORD *)v0 + 632);
    v47 = v0;
    v18 = v0 + v17;
    swift_beginAccess(v18, v56, 0, 0);
    v44 = v18;
    sub_1004CB7BC(v18, (uint64_t)v15, &qword_1013F5530);
    v19 = v16;
    v43 = sub_1004B804C((uint64_t *)&unk_101406B00);
    CRRegister.wrappedValue.getter(v43);
    sub_1004B8460((uint64_t)&v3[*(int *)(v1 + 20)], (uint64_t)v9, type metadata accessor for CRLPathSourceData);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLShapeItemParentAffinity);
    v20 = v19;
    sub_1004CB800((uint64_t)v15, &qword_1013F5530);
    v21 = objc_opt_self(CRLConnectionLinePathSource);
    v22 = swift_dynamicCastObjCClass(v19, v21);
    if (!v22)
      goto LABEL_9;
    v23 = (void *)v22;
    sub_1004C4938((uint64_t)(v9 + 184), (uint64_t)v51, &qword_1013F6270);
    sub_1004C4938((uint64_t)v51, (uint64_t)&v52, &qword_1013F6270);
    if (sub_1007BD0A0((uint64_t)&v52) == 1)
      goto LABEL_9;
    v24 = v19;
    objc_msgSend(v23, "naturalSize");
    v26 = v25;
    v28 = v27;
    v29 = v54;
    v30 = v55;
    v31 = objc_msgSend(v23, "type");
    v42 = v19;
    v32 = v31;
    v48 = v52;
    v49 = v53;
    v33 = sub_1004B804C(&qword_1013FAAF8);
    CRExtensible.rawValue.getter(&v50, v33);
    v34 = v50;
    v41 = sub_10005FE30(v26, v28, v29, v30, 0.5);
    v40 = sub_10092D270(v24);
    v35 = v24;

    v36 = v32 == v34;
    v20 = v42;
    if (!v36)
      goto LABEL_9;
    if (v41)
    {
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLPathSourceData);
      if ((v40 & 1) != 0)
      {
LABEL_12:

        return;
      }
    }
    else
    {
LABEL_9:
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLPathSourceData);
    }
    sub_1004CB7BC(v44, (uint64_t)v12, &qword_1013F5530);
    CRRegister.wrappedValue.getter(v43);
    v37 = (uint64_t)&v3[*(int *)(v1 + 20)];
    v38 = (uint64_t)v46;
    sub_1004B8460(v37, (uint64_t)v46, type metadata accessor for CRLPathSourceData);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLShapeItemParentAffinity);
    sub_1004CB800((uint64_t)v12, &qword_1013F5530);
    v39 = sub_10092CFA4(v20);

    sub_1004B84A4(v38, type metadata accessor for CRLPathSourceData);
    if (v39)
      return;
    v35 = *(void **)(v47 + v45);
    *(_QWORD *)(v47 + v45) = 0;
    goto LABEL_12;
  }
}

uint64_t sub_100C081CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 752);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 736) - 8) + 16))(a1, v4);
}

uint64_t (*sub_100C08230(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 752), a1, 33, 0);
  return j__swift_endAccess_0;
}

uint64_t sub_100C08274(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 736);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v2 + 760))(v5);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 744) + 24))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_100C0830C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, _QWORD);
  _BYTE v9[32];

  v3 = *v1;
  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  v7 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*v1 + 776))(v9);
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v3 + 744) + 32))(v6, *(_QWORD *)(v3 + 736));
  v7(v9, 0);
  return sub_1004B84A4(a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100C083D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[240];

  v3 = *v1;
  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 736);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(v3 + 760))(v10);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 744) + 24))(v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  v13 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.getter(v13);
  sub_1004C4938((uint64_t)&v16, (uint64_t)v17, (uint64_t *)&unk_1013F1530);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_1004C4938((uint64_t)v17, a1, (uint64_t *)&unk_1013F1530);
}

uint64_t sub_100C08518(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t (*v4)(_BYTE *, _QWORD);
  void (*v5)(_BYTE *, _QWORD);
  uint64_t v6;
  __n128 v7;
  _BYTE v9[232];
  _BYTE v10[32];
  _BYTE v11[32];

  v3 = *v1;
  v4 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*v1 + 776))(v11);
  v5 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, _QWORD))(*(_QWORD *)(v3 + 744) + 40))(v10, *(_QWORD *)(v3 + 736));
  sub_1004C4938(a1, (uint64_t)v9, (uint64_t *)&unk_1013F1530);
  type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v6 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.setter(v9, v6, v7);
  v5(v10, 0);
  return v4(v11, 0);
}

uint64_t sub_100C085D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _BYTE v55[240];

  v46 = a3;
  v47 = a4;
  v43 = a2;
  v41 = a1;
  v8 = sub_1004B804C(&qword_1013F55A0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v42 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E0A88);
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  __chkstk_darwin(v12);
  v38 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v55, 0, 112);
  v17 = sub_1004B804C(&qword_1013F3148);
  v35 = v17;
  v34 = sub_100C0C58C(&qword_10140A7C8, &qword_1013F3148, (void (*)(void))sub_1007E66A8);
  CRRegister.init(wrappedValue:)(v55, v17, v34);
  v18 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v33 = a5 + v18[5];
  sub_1004C39E8((uint64_t)v55);
  sub_1004C4938((uint64_t)v55, (uint64_t)&v51, (uint64_t *)&unk_1013F1530);
  v19 = sub_1004B804C((uint64_t *)&unk_1013F1530);
  v20 = sub_100C0C58C((unint64_t *)&qword_1013E0B18, (uint64_t *)&unk_1013F1530, (void (*)(void))sub_1004EF934);
  CRRegister.init(wrappedValue:)(&v51, v19, v20);
  v32 = a5 + v18[6];
  v54 = 0;
  v52 = 0u;
  v53 = 0u;
  v51 = 0u;
  v21 = sub_1004B804C(&qword_10140A7D8);
  v22 = sub_100C0C58C((unint64_t *)&unk_10140A7E0, &qword_10140A7D8, (void (*)(void))sub_100785B38);
  CRRegister.init(wrappedValue:)(&v51, v21, v22);
  v23 = a5 + v18[7];
  v54 = 0;
  v52 = 0u;
  v53 = 0u;
  v51 = 0u;
  CRRegister.init(wrappedValue:)(&v51, v21, v22);
  v24 = a5 + v18[8];
  LODWORD(v51) = 0;
  CRRegister.init(wrappedValue:)(&v51, &type metadata for Float, &protocol witness table for Float);
  *(_QWORD *)(a5 + v18[9]) = &_swiftEmptyDictionarySingleton;
  sub_1004C4938(v41, (uint64_t)&v51, &qword_1013F3148);
  CRRegister.init(_:)(&v51, v35, v34);
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 40))(a5, v16, v37);
  sub_1004C4938(v43, (uint64_t)&v51, (uint64_t *)&unk_1013F1530);
  v25 = v38;
  CRRegister.init(_:)(&v51, v19, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 40))(v33, v25, v40);
  sub_1004C4938(v46, (uint64_t)&v51, &qword_10140A7D8);
  v26 = v42;
  CRRegister.init(_:)(&v51, v21, v22);
  v27 = v45;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 40);
  v28(v32, v26, v45);
  sub_1004C4938(v47, (uint64_t)&v51, &qword_10140A7D8);
  CRRegister.init(_:)(&v51, v21, v22);
  v28(v23, v26, v27);
  *(float *)&v51 = a6;
  v29 = v48;
  CRRegister.init(_:)(&v51, &type metadata for Float, &protocol witness table for Float);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 40))(v24, v29, v50);
}

unint64_t sub_100C089F4(unint64_t result, uint64_t (*a2)(unint64_t))
{
  uint64_t v2;
  unint64_t v4;
  BOOL v5;

  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
      v5 = v4 >= result;
      result = v4 - result;
      if (v5)
        return a2(result);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100C08A20(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100C08A5C + 4 * byte_100F2E070[a1]))(0xD000000000000013, 0x8000000101001010);
}

uint64_t sub_100C08A5C()
{
  return 0x72756F5368746170;
}

uint64_t sub_100C08A78()
{
  uint64_t v0;

  return v0 + 7;
}

unint64_t sub_100C08AA0()
{
  return 0xD000000000000010;
}

BOOL sub_100C08ABC(char *a1, char *a2)
{
  return qword_100F2EBB8[*a1] == qword_100F2EBB8[*a2];
}

Swift::Int sub_100C08AE0()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F2EBB8[v1]);
  return Hasher._finalize()();
}

void sub_100C08B2C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F2EBB8[*v0]);
}

Swift::Int sub_100C08B60(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F2EBB8[v2]);
  return Hasher._finalize()();
}

uint64_t sub_100C08BA8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100C10E60(*a1);
  *a2 = result;
  return result;
}

void sub_100C08BD0(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F2EBB8[*v1];
}

uint64_t sub_100C08BE8()
{
  unsigned __int8 *v0;

  return sub_100C08A20(*v0);
}

uint64_t sub_100C08BF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100C10E88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C08C14()
{
  char *v0;

  return qword_100F2EBB8[*v0];
}

uint64_t sub_100C08C2C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100C10E60(a1);
  *a2 = result;
  return result;
}

void sub_100C08C50(_QWORD *a1@<X8>)
{
  *a1 = &off_101264280;
}

uint64_t sub_100C08C60(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100C0F1A0();
  v5 = sub_100C0F1E8();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100C08CA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C0F1E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C08CCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C0F1E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100C08CF4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(__n128);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;

  v71 = a2;
  v3 = type metadata accessor for CRLPKStrokePathData(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v68 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013FA6D8);
  __chkstk_darwin(v6);
  v70 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v72 = (char *)&v64 - v9;
  v73 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v73);
  v74 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v75);
  v76 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_10140AA00);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLShapeItemParentAffinity(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v19[*(int *)(v20 + 24)];
  v69 = v4;
  v22 = *(void (**)(__n128))(v4 + 56);
  v81 = (uint64_t)v21;
  v23 = v3;
  v22(v17);
  v24 = &v19[*(int *)(v16 + 28)];
  *(_QWORD *)v24 = 0;
  v24[8] = -1;
  v25 = (char *)*(int *)(v16 + 32);
  v80 = v19;
  v77 = v25;
  v78 = a1;
  *(_QWORD *)&v25[(_QWORD)v19] = _swiftEmptyDictionarySingleton;
  v27 = a1[3];
  v26 = a1[4];
  sub_1004BB5A4(a1, v27);
  v28 = sub_100C0F1E8();
  v29 = v79;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLShapeItemParentAffinity.CodingKeys, &type metadata for CRLShapeItemParentAffinity.CodingKeys, v28, v27, v26);
  if (v29)
  {
    v34 = v81;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v78);
    sub_1004CB800(v34, &qword_1013FA6D8);
    swift_bridgeObjectRelease();
    return;
  }
  v30 = v74;
  v65 = v24;
  v66 = v23;
  v79 = v16;
  v67 = v13;
  v87 = 0;
  v31 = sub_1004B7878(&qword_1013E6A80, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t)&unk_100EFD6EC);
  v32 = v76;
  v33 = v15;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v75, &v87, v12, v75, v31);
  v35 = (uint64_t)v32;
  v36 = v12;
  v37 = (uint64_t)v80;
  sub_1004B84E0(v35, (uint64_t)v80, type metadata accessor for CRLBoardItemParentAffinity);
  v86 = 1;
  v38 = sub_1004B7878(&qword_1013F7A38, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17420);
  v39 = (uint64_t)v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v73, &v86, v12, v73, v38);
  v40 = v33;
  v41 = v81;
  v42 = v37 + *(int *)(v79 + 20);
  sub_1004B84E0(v39, v42, type metadata accessor for CRLPathSourceData);
  v85 = 2;
  v43 = sub_1004B7878(&qword_10140AA08, type metadata accessor for CRLPKStrokePathData, (uint64_t)&unk_100F1EE30);
  v44 = (uint64_t)v72;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v66, &v85, v36, v66, v43);
  sub_100582338(v44, v41, &qword_1013FA6D8);
  v45 = sub_1004B804C(&qword_10140AA10);
  v84 = 3;
  v46 = sub_100C11090(&qword_10140AA18, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v45, &v84, v36, v45, v46);
  v77 = v40;
  v79 = v36;
  v47 = v83;
  v48 = v65;
  *(_QWORD *)v65 = v82;
  v48[8] = v47;
  v49 = v70;
  sub_1004CB7BC(v41, v70, &qword_1013FA6D8);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v50(v49, 1, v66) == 1)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v77, v79);
    sub_1004CB800(v49, &qword_1013FA6D8);
    v51 = v71;
LABEL_21:
    sub_1004B8460(v37, v51, type metadata accessor for CRLShapeItemParentAffinity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v78);
    sub_1004B84A4(v37, type metadata accessor for CRLShapeItemParentAffinity);
    return;
  }
  v52 = v68;
  sub_1004B84E0(v49, v68, type metadata accessor for CRLPKStrokePathData);
  v53 = *(_QWORD *)(v42 + 120);
  v51 = v71;
  if (!v53)
  {
    v63 = v52;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v42 + 120));
  sub_1006D12C4();
  v55 = sub_100942548(v53, v54);
  v56 = (uint64_t)objc_msgSend((id)objc_opt_self(CRLPKStrokePathConverter), "countOfBSplineControlPointsForBezierPath:", v55);
  v57 = *(_QWORD *)(v52 + 72);
  if ((v57 & 0x8000000000000000) == 0 && v56 == v57)
  {
LABEL_18:

    v63 = v68;
LABEL_20:
    sub_1004B84A4(v63, type metadata accessor for CRLPKStrokePathData);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v77, v79);
    goto LABEL_21;
  }
  if (v56 < 0)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v57 >= v56)
    v57 = v56;
  v58 = v57 - 1;
  if (__OFSUB__(v57, 1))
    goto LABEL_23;
  v59 = v81;
  if (v50(v81, 1, v66) != 1)
  {
    v60 = *(_QWORD *)(v59 + 72);
    if ((v60 & 0x8000000000000000) == 0)
    {
      if ((v58 & 0x8000000000000000) == 0 && v58 < v60)
      {
        v61 = v60 + ~v58;
        v62 = v81;
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF724);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF724);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF724);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF724);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF87C);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF87C);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF87C);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF87C);
        sub_100C089F4(v61, (uint64_t (*)(unint64_t))sub_100CFF724);
        *(_QWORD *)(v62 + 72) = v58 + 1;
        sub_1009A64A8();
      }
      goto LABEL_18;
    }
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
}

