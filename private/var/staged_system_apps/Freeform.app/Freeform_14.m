void sub_100AEDF5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  char v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  _QWORD v36[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_101405488);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v33 = v2;
  v34 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v35 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v35)
      goto LABEL_36;
    v18 = *(_QWORD *)(v34 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v35)
        goto LABEL_36;
      v18 = *(_QWORD *)(v34 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v35)
          goto LABEL_36;
        v18 = *(_QWORD *)(v34 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = *(_QWORD *)(v3 + 48) + 32 * v16;
    v21 = *(void **)v20;
    v22 = *(void **)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 24);
    Hasher.init(_seed:)(v36, *(_QWORD *)(v6 + 40));
    sub_1004DD884(v21, v22, v23, v24);
    sub_1009E3D90((uint64_t)v36, (uint64_t)v21, (uint64_t)v22, v23, v24);
    v25 = Hasher._finalize()();
    v26 = -1 << *(_BYTE *)(v6 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v10 + 8 * v28);
      }
      while (v32 == -1);
      v13 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v6 + 48) + 32 * v13;
    *(_QWORD *)v14 = v21;
    *(_QWORD *)(v14 + 8) = v22;
    *(_QWORD *)(v14 + 16) = v23;
    *(_BYTE *)(v14 + 24) = v24;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v35)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v33;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v35)
      goto LABEL_36;
    v18 = *(_QWORD *)(v34 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AEE248(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  Swift::Int v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD v68[10];

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v57 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v55 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  v62 = *((_QWORD *)v8 - 1);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  v61 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v63 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v65 = (uint64_t)&v52 - v14;
  v15 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(&qword_101405610);
  v16 = static _SetStorage.resize(original:capacity:move:)(v15, a1, 0);
  v64 = v15;
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_release(v64);
LABEL_43:
    *v2 = v16;
    return;
  }
  v56 = v4;
  v53 = v2;
  v17 = 1 << *(_BYTE *)(v64 + 32);
  v18 = *(_QWORD *)(v64 + 56);
  v58 = v64 + 56;
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v59 = (unint64_t)(v17 + 63) >> 6;
  v21 = v16 + 56;
  v22 = swift_retain(v64);
  v23 = 0;
  v24 = (uint64_t)v63;
  v54 = v8;
  while (1)
  {
    if (v20)
    {
      v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v27 = v23;
      v28 = v26 | (v23 << 6);
      goto LABEL_26;
    }
    v29 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v29 >= v59)
      goto LABEL_41;
    v30 = *(_QWORD *)(v58 + 8 * v29);
    v31 = v23 + 1;
    if (!v30)
    {
      v31 = v23 + 2;
      if (v23 + 2 >= v59)
        goto LABEL_41;
      v30 = *(_QWORD *)(v58 + 8 * v31);
      if (!v30)
      {
        v31 = v23 + 3;
        if (v23 + 3 >= v59)
          goto LABEL_41;
        v30 = *(_QWORD *)(v58 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_25:
    v20 = (v30 - 1) & v30;
    v27 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_26:
    v33 = v65;
    v34 = *(_QWORD *)(v61 + 72);
    sub_1004CB7BC(*(_QWORD *)(v64 + 48) + v34 * v28, v65, (uint64_t *)&unk_1013E87D0);
    Hasher.init(_seed:)(v68, *(_QWORD *)(v16 + 40));
    sub_1004CB7BC(v33, v24, (uint64_t *)&unk_1013E87D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v62 + 48))(v24, 1, v8) == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      sub_1004B84E0(v24, (uint64_t)v10, type metadata accessor for CRLWPHyperlinkSmartFieldData);
      Hasher._combine(_:)(1u);
      v35 = v10[8];
      v66 = *(_QWORD *)v10;
      v67 = v35;
      v36 = sub_1004B804C(&qword_1013F3CC8);
      CRExtensible.hash(into:)(v68, v36);
      v37 = (uint64_t)v10;
      v38 = v60;
      sub_1004CB7BC((uint64_t)&v10[v8[5]], v60, &qword_1013E04D0);
      v39 = v56;
      v40 = v57;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v38, 1, v56) == 1)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        v41 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v55, v60, v39);
        Hasher._combine(_:)(1u);
        v42 = sub_1004B7878((unint64_t *)&unk_1013F3CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        dispatch thunk of Hashable.hash(into:)(v68, v39, v42);
        v43 = v41;
        v8 = v54;
        (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
      }
      v10 = (char *)v37;
      String.hash(into:)(v68, *(_QWORD *)(v37 + v8[6]), *(_QWORD *)(v37 + v8[6] + 8));
      sub_100957EF8((uint64_t)v68, *(_QWORD *)(v37 + v8[7]));
      sub_1004B84A4(v37, type metadata accessor for CRLWPHyperlinkSmartFieldData);
    }
    v44 = Hasher._finalize()();
    v45 = -1 << *(_BYTE *)(v16 + 32);
    v46 = v44 & ~v45;
    v47 = v46 >> 6;
    if (((-1 << v46) & ~*(_QWORD *)(v21 + 8 * (v46 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v46) & ~*(_QWORD *)(v21 + 8 * (v46 >> 6)))) | v46 & 0x7FFFFFFFFFFFFFC0;
      v24 = (uint64_t)v63;
    }
    else
    {
      v48 = 0;
      v49 = (unint64_t)(63 - v45) >> 6;
      v24 = (uint64_t)v63;
      do
      {
        if (++v47 == v49 && (v48 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v50 = v47 == v49;
        if (v47 == v49)
          v47 = 0;
        v48 |= v50;
        v51 = *(_QWORD *)(v21 + 8 * v47);
      }
      while (v51 == -1);
      v25 = __clz(__rbit64(~v51)) + (v47 << 6);
    }
    *(_QWORD *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    sub_1004C4938(v65, *(_QWORD *)(v16 + 48) + v25 * v34, (uint64_t *)&unk_1013E87D0);
    ++*(_QWORD *)(v16 + 16);
    v23 = v27;
  }
  v32 = v23 + 4;
  if (v23 + 4 >= v59)
  {
LABEL_41:
    swift_release_n(v64, 2, v22);
    v2 = v53;
    goto LABEL_43;
  }
  v30 = *(_QWORD *)(v58 + 8 * v32);
  if (v30)
  {
    v31 = v23 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v59)
      goto LABEL_41;
    v30 = *(_QWORD *)(v58 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
}

void sub_100AEE7F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1013DE6B0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AEEA70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  int64_t v26;
  unsigned __int8 *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unsigned __int8 *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[10];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v62 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v8 = __chkstk_darwin(v7);
  v63 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (uint64_t)&v57 - v10;
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v57 - v15;
  v17 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(&qword_101405490);
  v18 = static _SetStorage.resize(original:capacity:move:)(v17, a1, 0);
  v19 = v18;
  if (!*(_QWORD *)(v17 + 16))
  {
    swift_release(v17);
    goto LABEL_42;
  }
  v58 = v2;
  v20 = 1 << *(_BYTE *)(v17 + 32);
  v21 = *(_QWORD *)(v17 + 56);
  v66 = v17 + 56;
  if (v20 < 64)
    v22 = ~(-1 << v20);
  else
    v22 = -1;
  v23 = v22 & v21;
  v61 = v14 + 8;
  v68 = (unint64_t)(v20 + 63) >> 6;
  v24 = v18 + 56;
  v25 = swift_retain(v17);
  v26 = 0;
  v27 = (unsigned __int8 *)v14;
  v69 = (unsigned __int8 *)v14;
  v65 = v16;
  while (1)
  {
    if (v23)
    {
      v29 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v30 = v29 | (v26 << 6);
      goto LABEL_26;
    }
    v31 = v26 + 1;
    if (__OFADD__(v26, 1))
      goto LABEL_43;
    if (v31 >= v68)
      break;
    v32 = *(_QWORD *)(v66 + 8 * v31);
    ++v26;
    if (!v32)
    {
      v26 = v31 + 1;
      if (v31 + 1 >= v68)
        break;
      v32 = *(_QWORD *)(v66 + 8 * v26);
      if (!v32)
      {
        v26 = v31 + 2;
        if (v31 + 2 >= v68)
          break;
        v32 = *(_QWORD *)(v66 + 8 * v26);
        if (!v32)
        {
          v33 = v31 + 3;
          if (v33 >= v68)
            break;
          v32 = *(_QWORD *)(v66 + 8 * v33);
          if (!v32)
          {
            while (1)
            {
              v26 = v33 + 1;
              if (__OFADD__(v33, 1))
                goto LABEL_44;
              if (v26 >= v68)
                goto LABEL_40;
              v32 = *(_QWORD *)(v66 + 8 * v26);
              ++v33;
              if (v32)
                goto LABEL_25;
            }
          }
          v26 = v33;
        }
      }
    }
LABEL_25:
    v23 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v26 << 6);
LABEL_26:
    v34 = *(_QWORD *)(v70 + 72);
    sub_1004B8460(*(_QWORD *)(v17 + 48) + v34 * v30, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
    Hasher.init(_seed:)(v72, *(_QWORD *)(v19 + 40));
    sub_1004B8460((uint64_t)v16, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v71);
    if (EnumCaseMultiPayload)
    {
      v36 = v17;
      if (EnumCaseMultiPayload == 1)
      {
        v37 = (uint64_t)v27;
        v38 = v67;
        sub_1004B84E0(v37, v67, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        v39 = v63;
        sub_1004B8460(v38, v63, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        v40 = sub_1004B804C(&qword_1013E1790);
        v41 = (char *)&loc_100AEEE50
            + dword_100AEF104[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 5, v40)];
        __asm { BR              X9 }
      }
      v42 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)&v61[*(int *)(v42 + 48)]);
      v43 = (uint64_t)v27;
      v44 = v62;
      sub_1004B84E0(v43, v62, type metadata accessor for CRLBoardIdentifier);
      v45 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v72, v64, v45);
      v46 = (uint64_t *)(v44 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v47 = *v46;
      v48 = v46[1];
      swift_bridgeObjectRetain(v48);
      String.hash(into:)(v72, v47, v48);
      swift_bridgeObjectRelease(v48);
      sub_1004B84A4(v44, type metadata accessor for CRLBoardIdentifier);
      v17 = v36;
      v16 = v65;
    }
    else
    {
      Hasher._combine(_:)(*v27);
    }
    v49 = Hasher._finalize()();
    v50 = -1 << *(_BYTE *)(v19 + 32);
    v51 = v49 & ~v50;
    v52 = v51 >> 6;
    if (((-1 << v51) & ~*(_QWORD *)(v24 + 8 * (v51 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v51) & ~*(_QWORD *)(v24 + 8 * (v51 >> 6)))) | v51 & 0x7FFFFFFFFFFFFFC0;
      v27 = v69;
      goto LABEL_9;
    }
    v53 = 0;
    v54 = (unint64_t)(63 - v50) >> 6;
    v27 = v69;
    do
    {
      if (++v52 == v54 && (v53 & 1) != 0)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        JUMPOUT(0x100AEF104);
      }
      v55 = v52 == v54;
      if (v52 == v54)
        v52 = 0;
      v53 |= v55;
      v56 = *(_QWORD *)(v24 + 8 * v52);
    }
    while (v56 == -1);
    v28 = __clz(__rbit64(~v56)) + (v52 << 6);
LABEL_9:
    *(_QWORD *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    sub_1004B84E0((uint64_t)v16, *(_QWORD *)(v19 + 48) + v28 * v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    ++*(_QWORD *)(v19 + 16);
  }
LABEL_40:
  swift_release_n(v17, 2, v25);
  v2 = v58;
LABEL_42:
  *v2 = v19;
}

void sub_100AEF11C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  Swift::Int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[10];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v75 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UUID(0);
  v71 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7);
  v69 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v74 = (uint64_t)&v66 - v10;
  v67 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v80 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - v14;
  v16 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(&qword_1013DE638);
  v17 = static _SetStorage.resize(original:capacity:move:)(v16, a1, 0);
  v18 = v17;
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_release(v16);
    goto LABEL_42;
  }
  v66 = v2;
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = *(_QWORD *)(v16 + 56);
  v73 = v16 + 56;
  if (v19 < 64)
    v21 = ~(-1 << v19);
  else
    v21 = -1;
  v22 = v21 & v20;
  v76 = (unint64_t)(v19 + 63) >> 6;
  v23 = v17 + 56;
  v24 = swift_retain(v16);
  v25 = 0;
  v26 = v67;
  v68 = v16;
  v72 = v12;
  v77 = v18;
  v78 = v15;
  while (1)
  {
    if (v22)
    {
      v28 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v29 = v28 | (v25 << 6);
      goto LABEL_26;
    }
    v30 = v25 + 1;
    if (__OFADD__(v25, 1))
      goto LABEL_43;
    if (v30 >= v76)
      break;
    v31 = *(_QWORD *)(v73 + 8 * v30);
    ++v25;
    if (!v31)
    {
      v25 = v30 + 1;
      if (v30 + 1 >= v76)
        break;
      v31 = *(_QWORD *)(v73 + 8 * v25);
      if (!v31)
      {
        v25 = v30 + 2;
        if (v30 + 2 >= v76)
          break;
        v31 = *(_QWORD *)(v73 + 8 * v25);
        if (!v31)
        {
          v32 = v30 + 3;
          if (v32 >= v76)
            break;
          v31 = *(_QWORD *)(v73 + 8 * v32);
          if (!v31)
          {
            while (1)
            {
              v25 = v32 + 1;
              if (__OFADD__(v32, 1))
                goto LABEL_44;
              if (v25 >= v76)
                goto LABEL_40;
              v31 = *(_QWORD *)(v73 + 8 * v25);
              ++v32;
              if (v31)
                goto LABEL_25;
            }
          }
          v25 = v32;
        }
      }
    }
LABEL_25:
    v22 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_26:
    v33 = *(_QWORD *)(v16 + 48);
    v81 = *(_QWORD *)(v80 + 72);
    sub_1004B8460(v33 + v81 * v29, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    Hasher.init(_seed:)(v82, *(_QWORD *)(v18 + 40));
    sub_1004B8460((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v26);
    if (!EnumCaseMultiPayload)
    {
      v41 = (uint64_t)v12;
      v42 = v74;
      sub_1004B84E0(v41, v74, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v43 = v42;
      v44 = v69;
      sub_1004B8460(v43, v69, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v45 = sub_1004B804C(&qword_1013E1790);
      v46 = (char *)&loc_100AEF598
          + *((int *)qword_100AEF890
            + (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 5, v45));
      __asm { BR              X9 }
    }
    v35 = v25;
    if (EnumCaseMultiPayload == 1)
    {
      v36 = v75;
      sub_1004B84E0((uint64_t)v12, v75, type metadata accessor for CRLBoardIdentifier);
      v37 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v82, v79, v37);
      v38 = (uint64_t *)(v36 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v39 = *v38;
      v40 = v38[1];
      swift_bridgeObjectRetain(v40);
      String.hash(into:)(v82, v39, v40);
      swift_bridgeObjectRelease(v40);
    }
    else
    {
      v47 = &v12[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      v36 = v75;
      sub_1004B84E0((uint64_t)v12, v75, type metadata accessor for CRLBoardIdentifier);
      v48 = v70;
      v49 = v71;
      v50 = v79;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v47, v79);
      v51 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v82, v50, v51);
      v52 = (uint64_t *)(v36 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v53 = *v52;
      v54 = v52[1];
      swift_bridgeObjectRetain(v54);
      String.hash(into:)(v82, v53, v54);
      v55 = v54;
      v16 = v68;
      swift_bridgeObjectRelease(v55);
      dispatch thunk of Hashable.hash(into:)(v82, v50, v51);
      v56 = v48;
      v26 = v67;
      v57 = v50;
      v12 = v72;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v56, v57);
    }
    sub_1004B84A4(v36, type metadata accessor for CRLBoardIdentifier);
    v25 = v35;
    v18 = v77;
    v15 = v78;
    v58 = Hasher._finalize()();
    v59 = -1 << *(_BYTE *)(v18 + 32);
    v60 = v58 & ~v59;
    v61 = v60 >> 6;
    if (((-1 << v60) & ~*(_QWORD *)(v23 + 8 * (v60 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v60) & ~*(_QWORD *)(v23 + 8 * (v60 >> 6)))) | v60 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_9;
    }
    v62 = 0;
    v63 = (unint64_t)(63 - v59) >> 6;
    do
    {
      if (++v61 == v63 && (v62 & 1) != 0)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        JUMPOUT(0x100AEF890);
      }
      v64 = v61 == v63;
      if (v61 == v63)
        v61 = 0;
      v62 |= v64;
      v65 = *(_QWORD *)(v23 + 8 * v61);
    }
    while (v65 == -1);
    v27 = __clz(__rbit64(~v65)) + (v61 << 6);
LABEL_9:
    *(_QWORD *)(v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    sub_1004B84E0((uint64_t)v15, *(_QWORD *)(v18 + 48) + v27 * v81, type metadata accessor for CRLBoardPreviewImageCache.Item);
    ++*(_QWORD *)(v18 + 16);
  }
LABEL_40:
  swift_release_n(v16, 2, v24);
  v2 = v66;
LABEL_42:
  *v2 = v18;
}

void sub_100AEF8A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_101405308);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = v3 + 56;
  v8 = -1;
  if (v6 < 64)
    v8 = ~(-1 << v6);
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_9;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_25;
      v15 = *(_QWORD *)(v7 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_25;
        v15 = *(_QWORD *)(v7 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_24:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_9:
    sub_100AE3588(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 32 * v13), *(_QWORD *)(*(_QWORD *)(v3 + 48) + 32 * v13 + 8), *(_BYTE *)(*(_QWORD *)(v3 + 48) + 32 * v13 + 16), v5, *(double *)(*(_QWORD *)(v3 + 48) + 32 * v13 + 24));
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

void sub_100AEFA48(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[9];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(&qword_1013DE778);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 0);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
LABEL_37:
    *v2 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v37 = v2;
  v38 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain(v7);
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = *(_QWORD *)(v38 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = *(_QWORD *)(v38 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = *(_QWORD *)(v38 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = *(_QWORD *)(v40 + 72);
    sub_1004B8460(*(_QWORD *)(v7 + 48) + v23 * v19, (uint64_t)v6, type metadata accessor for CRLBoardIdentifierAndValue);
    Hasher.init(_seed:)(v42, *(_QWORD *)(v9 + 40));
    v24 = type metadata accessor for UUID(0);
    v25 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v42, v24, v25);
    v26 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v27 = *(_QWORD *)v26;
    v28 = *((_QWORD *)v26 + 1);
    swift_bridgeObjectRetain(v28);
    String.hash(into:)(v42, v27, v28);
    swift_bridgeObjectRelease(v28);
    Hasher._combine(_:)(v6[*(int *)(v41 + 20)]);
    v29 = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    sub_1004B84E0((uint64_t)v6, *(_QWORD *)(v9 + 48) + v17 * v23, type metadata accessor for CRLBoardIdentifierAndValue);
    ++*(_QWORD *)(v9 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v39)
  {
LABEL_35:
    swift_release_n(v7, 2, v15);
    v2 = v37;
    goto LABEL_37;
  }
  v21 = *(_QWORD *)(v38 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v39)
      goto LABEL_35;
    v21 = *(_QWORD *)(v38 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100AEFDD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t (*v17)(uint64_t);
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  _QWORD v48[9];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(&qword_101405690);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 0);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
LABEL_37:
    *v2 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v41 = v2;
  v42 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v43 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain(v7);
  v16 = 0;
  v17 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest;
  v44 = v7;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v47 = v16;
      v20 = v19 | (v16 << 6);
      goto LABEL_26;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v43)
      goto LABEL_35;
    v22 = *(_QWORD *)(v42 + 8 * v21);
    v23 = v16 + 1;
    if (!v22)
    {
      v23 = v16 + 2;
      if (v16 + 2 >= v43)
        goto LABEL_35;
      v22 = *(_QWORD *)(v42 + 8 * v23);
      if (!v22)
      {
        v23 = v16 + 3;
        if (v16 + 3 >= v43)
          goto LABEL_35;
        v22 = *(_QWORD *)(v42 + 8 * v23);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v47 = v23;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_26:
    v25 = *(_QWORD *)(v7 + 48);
    v26 = *(_QWORD *)(v45 + 72);
    v27 = v17;
    sub_1004B8460(v25 + v26 * v20, (uint64_t)v6, v17);
    Hasher.init(_seed:)(v48, *(_QWORD *)(v9 + 40));
    v28 = type metadata accessor for UUID(0);
    v29 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v48, v28, v29);
    v30 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v31 = *(_QWORD *)v30;
    v32 = *((_QWORD *)v30 + 1);
    swift_bridgeObjectRetain(v32);
    String.hash(into:)(v48, v31, v32);
    swift_bridgeObjectRelease(v32);
    dispatch thunk of Hashable.hash(into:)(v48, v28, v29);
    dispatch thunk of Hashable.hash(into:)(v48, v28, v29);
    v33 = Hasher._finalize()();
    v34 = -1 << *(_BYTE *)(v9 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v14 + 8 * (v35 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v14 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      v17 = v27;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      v17 = v27;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v14 + 8 * v36);
      }
      while (v40 == -1);
      v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1004B84E0((uint64_t)v6, *(_QWORD *)(v9 + 48) + v18 * v26, v17);
    ++*(_QWORD *)(v9 + 16);
    v7 = v44;
    v16 = v47;
  }
  v24 = v16 + 4;
  if (v16 + 4 >= v43)
  {
LABEL_35:
    swift_release_n(v7, 2, v15);
    v2 = v41;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v42 + 8 * v24);
  if (v22)
  {
    v23 = v16 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v43)
      goto LABEL_35;
    v22 = *(_QWORD *)(v42 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100AF01A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t (*v17)(uint64_t);
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[9];

  v2 = v1;
  v4 = (int *)_s17CategoryViewModelVMa(0);
  v56 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1014055C0);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 0);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
LABEL_40:
    *v2 = v9;
    return;
  }
  v52 = v1;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v54 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v55 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain(v7);
  v16 = 0;
  v17 = _s17CategoryViewModelVMa;
  v53 = v6;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_26;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v21 >= v55)
      goto LABEL_38;
    v22 = *(_QWORD *)(v54 + 8 * v21);
    ++v16;
    if (!v22)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v55)
        goto LABEL_38;
      v22 = *(_QWORD *)(v54 + 8 * v16);
      if (!v22)
      {
        v16 = v21 + 2;
        if (v21 + 2 >= v55)
          goto LABEL_38;
        v22 = *(_QWORD *)(v54 + 8 * v16);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v7 + 48);
    v57 = *(_QWORD *)(v56 + 72);
    sub_1004B8460(v24 + v57 * v20, (uint64_t)v6, v17);
    Hasher.init(_seed:)(v58, *(_QWORD *)(v9 + 40));
    v25 = type metadata accessor for UUID(0);
    v26 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v58, v25, v26);
    v27 = &v6[v4[5]];
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    swift_bridgeObjectRetain(v29);
    String.hash(into:)(v58, v28, v29);
    swift_bridgeObjectRelease(v29);
    v30 = &v6[v4[6]];
    v31 = *((_QWORD *)v30 + 1);
    if (v31)
    {
      v32 = v13;
      v33 = v16;
      v34 = v9;
      v35 = v17;
      v36 = v4;
      v37 = v7;
      v38 = *(_QWORD *)v30;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v31);
      v39 = v38;
      v7 = v37;
      v4 = v36;
      v17 = v35;
      v9 = v34;
      v16 = v33;
      v13 = v32;
      v6 = v53;
      String.hash(into:)(v58, v39, v31);
      swift_bridgeObjectRelease(v31);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v40 = &v6[v4[7]];
    v41 = *(_QWORD *)v40;
    v42 = *((_QWORD *)v40 + 1);
    swift_bridgeObjectRetain(v42);
    String.hash(into:)(v58, v41, v42);
    swift_bridgeObjectRelease(v42);
    Hasher._combine(_:)(*(_QWORD *)&v6[v4[8]]);
    v43 = Hasher._finalize()();
    v44 = -1 << *(_BYTE *)(v9 + 32);
    v45 = v43 & ~v44;
    v46 = v45 >> 6;
    if (((-1 << v45) & ~*(_QWORD *)(v14 + 8 * (v45 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v45) & ~*(_QWORD *)(v14 + 8 * (v45 >> 6)))) | v45 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v47 = 0;
      v48 = (unint64_t)(63 - v44) >> 6;
      do
      {
        if (++v46 == v48 && (v47 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v49 = v46 == v48;
        if (v46 == v48)
          v46 = 0;
        v47 |= v49;
        v50 = *(_QWORD *)(v14 + 8 * v46);
      }
      while (v50 == -1);
      v18 = __clz(__rbit64(~v50)) + (v46 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1004B84E0((uint64_t)v6, *(_QWORD *)(v9 + 48) + v18 * v57, v17);
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v55)
  {
LABEL_38:
    swift_release_n(v7, 2, v15);
    v2 = v52;
    goto LABEL_40;
  }
  v22 = *(_QWORD *)(v54 + 8 * v23);
  if (v22)
  {
    v16 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v16 >= v55)
      goto LABEL_38;
    v22 = *(_QWORD *)(v54 + 8 * v16);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
}

void sub_100AF05E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C((uint64_t *)&unk_1013DEA00);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v33)
        goto LABEL_36;
      v17 = *(_QWORD *)(v32 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v33)
          goto LABEL_36;
        v17 = *(_QWORD *)(v32 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v6 + 40);
    v21 = type metadata accessor for CalculateExpression(0);
    v22 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    swift_retain(v19);
    v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v20, v21, v22);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v31;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v32 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AF08CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1014054B0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
    swift_retain(v20);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AF0B4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[7];
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[10];

  v2 = v1;
  v26 = type metadata accessor for UUID(0);
  v25[3] = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v25[2] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v5);
  v25[1] = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v29 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v30 = (uint64_t)v25 - v11;
  v12 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1014055E8);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 0);
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_release(v12);
    goto LABEL_25;
  }
  v25[0] = v1;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = *(_QWORD *)(v12 + 56);
  v27 = (_QWORD *)(v12 + 56);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v25[4] = v9 + 8;
  v28 = (unint64_t)(v14 + 63) >> 6;
  v18 = swift_retain(v12);
  v25[5] = v12;
  v25[6] = v7;
  if (v17)
  {
    v19 = __clz(__rbit64(v17));
    goto LABEL_22;
  }
  if (v28 > 1)
  {
    v20 = v27[1];
    v21 = 1;
    if (v20)
      goto LABEL_21;
    v21 = 2;
    if (v28 > 2)
    {
      v20 = v27[2];
      if (v20)
        goto LABEL_21;
      v21 = 3;
      if (v28 > 3)
      {
        v20 = v27[3];
        if (!v20)
        {
          v22 = 4;
          if (v28 > 4)
          {
            v20 = v27[4];
            if (v20)
            {
              v21 = 4;
              goto LABEL_21;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
              {
                __break(1u);
                JUMPOUT(0x100AF10A8);
              }
              if (v21 >= v28)
                break;
              v20 = v27[v21];
              ++v22;
              if (v20)
                goto LABEL_21;
            }
          }
          goto LABEL_23;
        }
LABEL_21:
        v19 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
        v23 = v30;
        sub_1004B8460(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v29 + 72) * v19, v30, type metadata accessor for CRLSELibraryViewModel.Item);
        Hasher.init(_seed:)(v31, *(_QWORD *)(v13 + 40));
        sub_1004B8460(v23, (uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
        v24 = (char *)&loc_100AF0E5C + *((int *)qword_100AF10A8 + swift_getEnumCaseMultiPayload(v9, v7));
        __asm { BR              X9 }
      }
    }
  }
LABEL_23:
  swift_release_n(v12, 2, v18);
  v2 = (uint64_t *)v25[0];
LABEL_25:
  *v2 = v13;
}

void sub_100AF10B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_101405348);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = v3 + 56;
  v8 = -1;
  if (v6 < 64)
    v8 = ~(-1 << v6);
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_9;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v10)
      goto LABEL_25;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v11;
    if (!v18)
    {
      v11 = v17 + 1;
      if (v17 + 1 >= v10)
        goto LABEL_25;
      v18 = *(_QWORD *)(v7 + 8 * v11);
      if (!v18)
      {
        v11 = v17 + 2;
        if (v17 + 2 >= v10)
          goto LABEL_25;
        v18 = *(_QWORD *)(v7 + 8 * v11);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v9 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_9:
    v14 = *(_QWORD *)(v3 + 48) + 16 * v13;
    v15 = *(id *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    sub_1006B8360(*(id *)v14, v16);
    sub_100AE3804((uint64_t)v15, v16, v5);
  }
  v19 = v17 + 3;
  if (v19 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v11 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v11 >= v10)
      goto LABEL_25;
    v18 = *(_QWORD *)(v7 + 8 * v11);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

void sub_100AF1268(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23[4];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1014055C8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_27:
    swift_release(v3);
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_10;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v11)
      goto LABEL_26;
    v21 = *(_QWORD *)(v8 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v11)
        goto LABEL_26;
      v21 = *(_QWORD *)(v8 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v11)
          goto LABEL_26;
        v21 = *(_QWORD *)(v8 + 8 * v13);
        if (!v21)
          break;
      }
    }
LABEL_25:
    v10 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_10:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    Hasher.init(_seed:)(v23, *(_QWORD *)(v6 + 40));
    v17 = *(_QWORD *)(v16 + 16);
    swift_retain(v16);
    sub_1008DF544(v23, v17);
    sub_100A1C5DC(v23);
    v18 = Hasher._finalize()();
    v19 = _HashTable.nextHole(atOrAfter:)(v18 & ~(-1 << *(_BYTE *)(v6 + 32)), v6 + 56, ~(-1 << *(_BYTE *)(v6 + 32)));
    *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19) = v16;
    ++*(_QWORD *)(v6 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v11)
  {
LABEL_26:
    swift_release(v3);
    goto LABEL_27;
  }
  v21 = *(_QWORD *)(v8 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v21 = *(_QWORD *)(v8 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
}

void sub_100AF1498(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int64_t v51;
  uint64_t i;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[9];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  __chkstk_darwin(v7);
  v53 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - v10;
  v12 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1014055D8);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 0);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_release(v12);
LABEL_37:
    *v2 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v49 = v1;
  v50 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  v20 = swift_retain(v12);
  v21 = 0;
  v22 = type metadata accessor for CRLSpotlightManager.ChangeType;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_26;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v51)
      goto LABEL_35;
    v27 = *(_QWORD *)(v50 + 8 * v26);
    ++v21;
    if (!v27)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v51)
        goto LABEL_35;
      v27 = *(_QWORD *)(v50 + 8 * v21);
      if (!v27)
      {
        v21 = v26 + 2;
        if (v26 + 2 >= v51)
          goto LABEL_35;
        v27 = *(_QWORD *)(v50 + 8 * v21);
        if (!v27)
          break;
      }
    }
LABEL_25:
    v18 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_26:
    v29 = *(_QWORD *)(v12 + 48);
    v30 = *(_QWORD *)(v54 + 72);
    sub_1004B8460(v29 + v30 * v25, (uint64_t)v11, v22);
    Hasher.init(_seed:)(v56, *(_QWORD *)(v14 + 40));
    v31 = v11;
    v32 = (uint64_t)v11;
    v33 = v53;
    v34 = v22;
    sub_1004B8460(v32, v53, v22);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v55);
    sub_1004B84E0(v33, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    Hasher._combine(_:)(EnumCaseMultiPayload == 1);
    v36 = type metadata accessor for UUID(0);
    v37 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v56, v36, v37);
    v38 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v39 = *(_QWORD *)v38;
    v40 = *((_QWORD *)v38 + 1);
    swift_bridgeObjectRetain(v40);
    String.hash(into:)(v56, v39, v40);
    swift_bridgeObjectRelease();
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    v41 = Hasher._finalize()();
    v42 = -1 << *(_BYTE *)(v14 + 32);
    v43 = v41 & ~v42;
    v44 = v43 >> 6;
    if (((-1 << v43) & ~*(_QWORD *)(v19 + 8 * (v43 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v43) & ~*(_QWORD *)(v19 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
      v22 = v34;
      v11 = v31;
    }
    else
    {
      v45 = 0;
      v46 = (unint64_t)(63 - v42) >> 6;
      v22 = v34;
      v11 = v31;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v47 = v44 == v46;
        if (v44 == v46)
          v44 = 0;
        v45 |= v47;
        v48 = *(_QWORD *)(v19 + 8 * v44);
      }
      while (v48 == -1);
      v23 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_1004B84E0((uint64_t)v11, *(_QWORD *)(v14 + 48) + v23 * v30, v22);
    ++*(_QWORD *)(v14 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v51)
  {
LABEL_35:
    swift_release_n(v12, 2, v20);
    v2 = v49;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v50 + 8 * v28);
  if (v27)
  {
    v21 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v21 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v21 >= v51)
      goto LABEL_35;
    v27 = *(_QWORD *)(v50 + 8 * v21);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100AF18EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_101405410);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AF1B4C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t (*v43)(uint64_t);
  unint64_t *v44;
  uint64_t v45;

  v44 = a4;
  v45 = a5;
  v7 = v5;
  v43 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_1004B804C(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *v7 = v15;
    return;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v40 = v7;
  v41 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v42 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  v21 = swift_retain(v13);
  v22 = 0;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_26;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v42)
        goto LABEL_35;
      v27 = *(_QWORD *)(v41 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v42)
          goto LABEL_35;
        v27 = *(_QWORD *)(v41 + 8 * v22);
        if (!v27)
          break;
      }
    }
LABEL_25:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_26:
    v29 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v29 * v25, v9, v21);
    v30 = *(_QWORD *)(v15 + 40);
    v31 = sub_1004B7878(v44, v43, v45);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v9, v31);
    v33 = -1 << *(_BYTE *)(v15 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v23 * v29, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v42)
  {
LABEL_35:
    swift_release_n(v13, 2, v21);
    v7 = v40;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v41 + 8 * v28);
  if (v27)
  {
    v22 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v22 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v22 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v22);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100AF1E68(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  __n128 v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::Int v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_1004B804C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v32 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  v14 = swift_retain(v4);
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_27;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v19 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_36;
      v20 = *(_QWORD *)(v9 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v12)
          goto LABEL_36;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_26:
    v11 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_27:
    v22 = *(_QWORD *)(v7 + 40);
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v24 = NSObject._rawHashValue(seed:)(v22);
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2, v14);
    v3 = v32;
    goto LABEL_38;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AF20DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  _OWORD v32[2];
  uint64_t v33;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1004B804C(&qword_1013DEA18);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v31 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  v13 = swift_retain(v3);
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_27;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v20 >= v11)
      goto LABEL_36;
    v21 = *(_QWORD *)(v8 + 8 * v20);
    ++v14;
    if (!v21)
    {
      v14 = v20 + 1;
      if (v20 + 1 >= v11)
        goto LABEL_36;
      v21 = *(_QWORD *)(v8 + 8 * v14);
      if (!v21)
      {
        v14 = v20 + 2;
        if (v20 + 2 >= v11)
          goto LABEL_36;
        v21 = *(_QWORD *)(v8 + 8 * v14);
        if (!v21)
          break;
      }
    }
LABEL_26:
    v10 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_27:
    sub_1004B8968(*(_QWORD *)(v3 + 48) + 40 * v19, (uint64_t)v32);
    v23 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v6 + 48) + 40 * v15;
    v13 = (__n128)v32[0];
    v17 = v32[1];
    *(_QWORD *)(v16 + 32) = v33;
    *(__n128 *)v16 = v13;
    *(_OWORD *)(v16 + 16) = v17;
    ++*(_QWORD *)(v6 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2, v13);
    v2 = v31;
    goto LABEL_38;
  }
  v21 = *(_QWORD *)(v8 + 8 * v22);
  if (v21)
  {
    v14 = v22;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v14 >= v11)
      goto LABEL_36;
    v21 = *(_QWORD *)(v8 + 8 * v14);
    ++v22;
    if (v21)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

double sub_100AF236C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = (uint64_t)a1 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013F13C0) + 48);
  v5 = sub_1004B804C(&qword_101405DE0);
  v7 = *a1;
  v6 = a1[1];
  sub_1004CB7BC(v4, (uint64_t)a2 + *(int *)(v5 + 48), (uint64_t *)&unk_1013E1A50);
  *a2 = v7;
  a2[1] = v6;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v6).n128_u64[0];
  return result;
}

void sub_100AF23D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v47 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v46 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v55 = (uint64_t)&v44 - v13;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F1380);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = -1 << *(_BYTE *)(a1 + 32);
  v18 = ~v17;
  v19 = *(_QWORD *)(a1 + 64);
  v20 = -v17;
  v48 = a1;
  v49 = a1 + 64;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v50 = v18;
  v51 = 0;
  v52 = v21 & v19;
  v53 = a2;
  v54 = a3;
  v45 = a1;
  swift_bridgeObjectRetain(a1);
  v44 = a3;
  swift_retain(a3);
  sub_100CE0548((uint64_t)v16);
  v22 = sub_1004B804C(&qword_101405DE0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
LABEL_5:
    swift_release(v44);
    swift_bridgeObjectRelease(v45);
    sub_1004D284C(v48);
    swift_release(v54);
    return;
  }
  v23 = (uint64_t *)&unk_1013E1A50;
  while (1)
  {
    v26 = (uint64_t)v16 + *(int *)(v22 + 48);
    v27 = *v16;
    v28 = v16[1];
    v29 = v23;
    sub_1004C4938(v26, v55, v23);
    v30 = *a5;
    v32 = sub_100842E98(v27, v28);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (*(_QWORD *)(v30 + 24) >= v35)
    {
      if ((a4 & 1) != 0)
      {
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_10082D260();
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_10081633C(v35, a4 & 1);
      v37 = sub_100842E98(v27, v28);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_22;
      v32 = v37;
      if ((v36 & 1) != 0)
      {
LABEL_7:
        v24 = v55;
        v25 = v46;
        v23 = v29;
        sub_1004CB7BC(v55, v46, v29);
        sub_1004CB800(v24, v29);
        swift_bridgeObjectRelease(v28);
        sub_100582338(v25, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v47 + 72) * v32, v29);
        goto LABEL_8;
      }
    }
    v39 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    v40 = (uint64_t *)(v39[6] + 16 * v32);
    *v40 = v27;
    v40[1] = v28;
    v23 = v29;
    sub_1004C4938(v55, v39[7] + *(_QWORD *)(v47 + 72) * v32, v29);
    v41 = v39[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_21;
    v39[2] = v43;
LABEL_8:
    sub_100CE0548((uint64_t)v16);
    v22 = sub_1004B804C(&qword_101405DE0);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_100AF273C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100D1681C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100AF27A4(v4);
  *a1 = v2;
}

void sub_100AF27A4(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  double *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_100AF2E8C(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_100AF2F58((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_100D1664C((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (double *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100D15FCC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_100D15FCC((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_100AF2F58((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0.0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_100AF2E8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100AF2F58(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v19 = &v4[16 * v13];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v20 = (char *)(a3 - 16);
        v21 = v6;
        while (1)
        {
          v22 = v20 + 16;
          v23 = *((_QWORD *)v19 - 2);
          v24 = *((_QWORD *)v19 - 1);
          v25 = *((_QWORD *)v21 - 2);
          v26 = *((_QWORD *)v21 - 1);
          v21 -= 16;
          v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1) & 1) == 0)
          {
            v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_OWORD *)v20 = *((_OWORD *)v19 - 1);
            v21 = v6;
            v19 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
              *(_OWORD *)v20 = *(_OWORD *)v21;
            v31 = v21;
            if (v21 <= v7)
              goto LABEL_50;
          }
          v20 -= 16;
          v6 = v21;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *((_QWORD *)v6 + 1);
        v16 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v15, *(_QWORD *)v4, v16, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v30 = v4;
          v18 = v6;
        }
        else
        {
          v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v31 = v7;
    }
LABEL_50:
    sub_100D1630C((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

unint64_t sub_100AF31F0(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  _QWORD v17[2];

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  v9 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
    v9 = 11;
  v10 = v9 | (v5 << 16);
  while (1)
  {
    v10 = String.index(before:)(v10, a3, a4);
    v11 = String.subscript.getter(v10, a3, a4);
    v13 = v12;
    v17[0] = v11;
    v17[1] = v12;
    v14 = a1(v17);
    if (v4)
      break;
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
      return v10;
    if (v10 < 0x4000)
      return 0;
  }
  swift_bridgeObjectRelease(v13);
  return v10;
}

void sub_100AF32F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  v10 = *((_QWORD *)v9 - 1);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(v1, (uint64_t)v15, (uint64_t *)&unk_1013E87D0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v15, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1004B84E0((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLWPHyperlinkSmartFieldData);
    Hasher._combine(_:)(1u);
    v16 = v12[8];
    v22 = *(_QWORD *)v12;
    v23 = v16;
    v17 = sub_1004B804C(&qword_1013F3CC8);
    CRExtensible.hash(into:)(a1, v17);
    sub_1004CB7BC((uint64_t)&v12[v9[5]], (uint64_t)v8, &qword_1013E04D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      v18 = v21;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v21, v8, v3);
      Hasher._combine(_:)(1u);
      v19 = sub_1004B7878((unint64_t *)&unk_1013F3CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      dispatch thunk of Hashable.hash(into:)(a1, v3, v19);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v3);
    }
    String.hash(into:)(a1, *(_QWORD *)&v12[v9[6]], *(_QWORD *)&v12[v9[6] + 8]);
    sub_100957EF8(a1, *(_QWORD *)&v12[v9[7]]);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPHyperlinkSmartFieldData);
  }
}

uint64_t sub_100AF3584(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0) & 1;
}

void sub_100AF35D8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t, uint64_t);
  int64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v2 = sub_1004B804C(&qword_1013FE308);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1[2];
  while (1)
  {
    if ((~v5 & 0xF000000000000007) == 0)
      goto LABEL_27;
    v7 = v1[3];
    v6 = v1[4];
    v9 = v1[5];
    v8 = v1[6];
    if (!v8)
    {
      v18 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      v19 = (unint64_t)(v6 + 64) >> 6;
      v17 = v1[5];
      if (v18 >= v19)
        goto LABEL_24;
      v20 = *(_QWORD *)(v7 + 8 * v18);
      if (v20)
        goto LABEL_9;
      v21 = v9 + 2;
      v17 = v9 + 1;
      if (v9 + 2 >= v19)
        goto LABEL_24;
      v20 = *(_QWORD *)(v7 + 8 * v21);
      if (!v20)
      {
        v17 = v9 + 2;
        if (v9 + 3 >= v19)
          goto LABEL_24;
        v20 = *(_QWORD *)(v7 + 8 * (v9 + 3));
        if (v20)
        {
          v18 = v9 + 3;
          goto LABEL_9;
        }
        v21 = v9 + 4;
        v17 = v9 + 3;
        if (v9 + 4 >= v19)
          goto LABEL_24;
        v20 = *(_QWORD *)(v7 + 8 * v21);
        if (!v20)
        {
          v18 = v9 + 5;
          v17 = v9 + 4;
          if (v9 + 5 >= v19)
            goto LABEL_24;
          v20 = *(_QWORD *)(v7 + 8 * v18);
          if (!v20)
          {
            v17 = v19 - 1;
            v22 = v9 + 6;
            while (v19 != v22)
            {
              v20 = *(_QWORD *)(v7 + 8 * v22++);
              if (v20)
              {
                v18 = v22 - 1;
                goto LABEL_9;
              }
            }
LABEL_24:
            v13 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
            v10 = 0;
            goto LABEL_25;
          }
          goto LABEL_9;
        }
      }
      v18 = v21;
LABEL_9:
      v34 = v1[4];
      v10 = (v20 - 1) & v20;
      v11 = __clz(__rbit64(v20)) + (v18 << 6);
      v9 = v18;
      goto LABEL_5;
    }
    v34 = v1[4];
    v10 = (v8 - 1) & v8;
    v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v5 + 48);
    v13 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
    v14 = v5;
    v15 = *(_QWORD *)(v13 - 8);
    sub_1004B8460(v12 + *(_QWORD *)(v15 + 72) * v11, (uint64_t)v4, type metadata accessor for CRLSpotlightManager.ChangeType);
    v16 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
    v5 = v14;
    v16(v4, 0, 1, v13);
    v17 = v9;
    v6 = v34;
LABEL_25:
    v1[2] = v5;
    v1[3] = v7;
    v1[4] = v6;
    v1[5] = v17;
    v1[6] = v10;
    type metadata accessor for CRLSpotlightManager.ChangeType(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13) != 1)
    {
      sub_1004C4938((uint64_t)v4, v33, &qword_1013FE308);
      return;
    }
    sub_1004CB800((uint64_t)v4, &qword_1013FE308);
LABEL_27:
    v23 = v1[1];
    v24 = *(_QWORD *)(*v1 + 16);
    if (v23 == v24)
    {
      v32 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 1, 1, v32);
      return;
    }
    if (v23 >= v24)
      break;
    v25 = *(_QWORD *)(*v1 + 8 * v23 + 32);
    v1[1] = v23 + 1;
    v26 = -1 << *(_BYTE *)(v25 + 32);
    v34 = ~v26;
    v27 = -v26;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v29 = v4;
    v30 = v28 & *(_QWORD *)(v25 + 56);
    v31 = v1[2];
    swift_bridgeObjectRetain(v25);
    v5 = v25;
    sub_100B010A4(v31);
    v1[2] = v25;
    v1[3] = v25 + 56;
    v1[4] = v34;
    v1[5] = 0;
    v1[6] = v30;
    v4 = v29;
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_100AF390C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_100AF39CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    swift_bridgeObjectRetain(a2);
    v3._countAndFlagsBits = 46;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v5 = a1;
    v4 = (void *)a2;
  }
  else
  {
    v5 = 0;
    v4 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._object = (void *)0x8000000100FEFE20;
  v6._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v5;
  v8._object = v4;
  String.append(_:)(v8);
  v9._object = (void *)0x8000000100FD6350;
  v9._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 8236;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v5;
  v11._object = v4;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100FEFE40;
  v12._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v5;
  v14._object = v4;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x75755F7465737361;
  v15._object = (void *)0xEA00000000006469;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 8236;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = v5;
  v17._object = v4;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x7265727265666572;
  v18._object = (void *)0xED0000657079745FLL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 8236;
  v19._object = (void *)0xE200000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = v5;
  v20._object = v4;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v4);
  v21._object = (void *)0x8000000100FEEB40;
  v21._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v21);
  return v5;
}

uint64_t sub_100AF3BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  const unsigned __int8 *v23;
  const unsigned __int8 *v24;
  const unsigned __int8 *v25;
  const unsigned __int8 *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  sqlite3_int64 v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  const unsigned __int8 **v43;
  const unsigned __int8 *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1004B804C(&qword_1014053F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v47 = (uint64_t)&v44 - v12;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - v20;
  result = a2 + 2;
  if (__OFADD__(a2, 2))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v45 = v19;
  v46 = v11;
  v23 = sub_1006B6750(result, a1);
  if (!v24)
  {
    swift_release(a1);
    return 0;
  }
  v25 = v23;
  result = a2 + 3;
  if (__OFADD__(a2, 3))
    goto LABEL_18;
  v26 = v24;
  v44 = v25;
  v48 = v16;
  sub_1006B69C4(result, a1, (uint64_t)v15);
  v27 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v48) == 1)
  {
    swift_release(a1);
    swift_bridgeObjectRelease(v26);
    v28 = (uint64_t *)&unk_1013E1A50;
    v29 = (uint64_t)v15;
LABEL_8:
    sub_1004CB800(v29, v28);
    return 0;
  }
  v31 = v15;
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v32(v21, v31, v27);
  swift_retain(a1);
  sub_1004BBC0C(v33, a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_release(a1);
    v34 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v21, v27, v34);
    v28 = &qword_1014053F0;
    v29 = (uint64_t)v6;
    goto LABEL_8;
  }
  v35 = v47;
  sub_1004B84E0((uint64_t)v6, v47, type metadata accessor for CRLAssetReferrerIdentifier);
  result = a2 + 5;
  if (!__OFADD__(a2, 5))
  {
    v36 = sub_1006B64F4(result, a1);
    v38 = v37;
    swift_release(a1);
    if ((v38 & 1) == 0)
    {
      v39 = (uint64_t)v46;
      sub_1004B84E0(v35, (uint64_t)v46, type metadata accessor for CRLAssetReferrerIdentifier);
      v40 = v45;
      v41 = v48;
      v32(v45, v21, v48);
      v42 = type metadata accessor for CRLAssetReferenceDatabaseRow(0);
      v30 = swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
      sub_1004B84E0(v39, v30 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_referrerIdentifier, type metadata accessor for CRLAssetReferrerIdentifier);
      v43 = (const unsigned __int8 **)(v30 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_referrerAssetName);
      *v43 = v44;
      v43[1] = v26;
      v32((char *)(v30 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_assetUUID), v40, v41);
      *(_QWORD *)(v30 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_unsyncedChanges) = v36;
      return v30;
    }
    swift_bridgeObjectRelease(v26);
    sub_1004B84A4(v35, type metadata accessor for CRLAssetReferrerIdentifier);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v48);
    return 0;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100AF3F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  _QWORD v35[5];

  v35[3] = type metadata accessor for CRLBoardDataStore(0);
  v35[4] = &off_1012921A8;
  v35[0] = a1;
  v20 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData;
  *(_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData) = 0;
  sub_1004E90B0((uint64_t)v35, a15 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext);
  v21 = *(_QWORD *)(a15 + v20);
  *(_QWORD *)(a15 + v20) = a10;
  swift_retain(a15);
  swift_retain(a10);
  swift_release(v21);
  *(_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges) = a11;
  *(_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedAssetUUIDs) = a14;
  swift_release(a15);
  sub_1004B8460(a2, a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  v22 = a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v25(v22, a6, v23);
  v25(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, a7, v23);
  *(_OWORD *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData) = xmmword_100F062D0;
  v26 = (_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  *v26 = a3;
  v26[1] = a4;
  v26[2] = a5;
  *(_BYTE *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned) = a8;
  *(_BYTE *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) = a9;
  v27 = (_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v28 = *(_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v29 = *(_QWORD *)(a15 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  *v27 = a12;
  v27[1] = a13;
  sub_1004BE2FC(v28, v29);
  v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v30(a7, v23);
  v30(a6, v23);
  sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v35);
  return a15;
}

void sub_100AF41C0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v3 = v2;
  v19 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v5)
  {
    v6 = 4;
    while (1)
    {
      v8 = v6 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v10 = v6 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_17;
LABEL_11:
      v18 = v9;
      sub_100AC39A4(&v18, a2, &v17);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release(v9);
        swift_bridgeObjectRelease();
        return;
      }
      swift_release(v9);
      v12 = v17;
      if (v17)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v7);
      }
      ++v6;
      if (v10 == v5)
        goto LABEL_22;
    }
    v9 = *(_QWORD *)(a1 + 8 * v6);
    swift_retain(v9);
    v10 = v6 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
LABEL_22:
  swift_bridgeObjectRelease();
}

void sub_100AF436C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  BOOL v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[72];
  char v64[24];
  char v65[32];
  unint64_t v66;

  v3 = v2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v56 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v59 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_transientSyncExclusions);
    v60 = a1 & 0xC000000000000001;
    swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_transientSyncExclusions, v65, 0, 0);
    v9 = 4;
    v52 = xmmword_100EF5E40;
    v51 = (unint64_t)"rrentFocusedBoard %{public}@";
    v57 = a1;
    v58 = v8;
    while (1)
    {
      a2 = v9 - 4;
      if (!v60)
        break;
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
      v12 = v9 - 3;
      if (__OFADD__(a2, 1))
        goto LABEL_33;
LABEL_12:
      v13 = *v59;
      v14 = v11 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
      if (*(_QWORD *)(*v59 + 16))
      {
        swift_bridgeObjectRetain(*v59);
        v15 = sub_100843264(v14);
        if ((v16 & 1) != 0)
        {
          v17 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15) + 17);
          swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
          {
            v55 = v3;
            if (qword_1013DD858 != -1)
              swift_once(&qword_1013DD858, sub_100A05554);
            swift_beginAccess(&static OS_os_log.boardStore, v64, 0, 0);
            v53 = (id)static OS_os_log.boardStore;
            v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v18, v63);
            *(_OWORD *)(inited + 16) = v52;
            v20 = (uint64_t *)(v14 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
            v21 = *v20;
            v22 = (void *)v20[1];
            v23 = (void *)(v51 | 0x8000000000000000);
            if (*v20)
              v24 = 0;
            else
              v24 = v22 == (void *)0xE000000000000000;
            v25 = 0xD000000000000012;
            if (!v24
              && (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0, 0xE000000000000000, 0) & 1) == 0)
            {
              swift_bridgeObjectRetain(v22);
              v25 = v21;
              v23 = v22;
            }
            v54 = inited + 32;
            v26 = v53;
            v61 = UUID.uuidString.getter(v26);
            v62 = v27;
            v28._countAndFlagsBits = 15418;
            v28._object = (void *)0xE200000000000000;
            String.append(_:)(v28);
            v29._countAndFlagsBits = v25;
            v29._object = v23;
            String.append(_:)(v29);
            swift_bridgeObjectRelease();
            v30._countAndFlagsBits = 62;
            v30._object = (void *)0xE100000000000000;
            String.append(_:)(v30);
            v31 = v61;
            v32 = v62;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v31;
            *(_QWORD *)(inited + 40) = v32;
            v34 = static os_log_type_t.default.getter(v33);
            sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v34, "Excluding CKShare from unsynced changes. Board identifier: %{public}@", 69, 2, inited);
            swift_setDeallocating(inited);
            v35 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v54, 1, v35);
            swift_release(v11);

            v3 = v55;
            a1 = v57;
            goto LABEL_5;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v36 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
      if (v36 >> 60 != 15)
      {
        v37 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
        sub_1004B8930(0, &qword_1013FF470, NSKeyedUnarchiver_ptr);
        v38 = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
        sub_1004BE310(v37, v36);
        v39 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v38, v37, v36, v38);
        sub_1004BE2FC(v37, v36);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release(v11);
          swift_bridgeObjectRelease();
          return;
        }
        a1 = v57;
        if (v39)
        {
          v40 = v14;
          v41 = v56;
          sub_1004B8460(v40, v56, type metadata accessor for CRLBoardIdentifier);
          v42 = *(_BYTE *)(v11 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareUnsyncedChanges);
          v43 = type metadata accessor for CRLBoardShareSyncLocalChangeRecord(0);
          v44 = swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
          *(_BYTE *)(v44 + OBJC_IVAR____TtC8Freeform34CRLBoardShareSyncLocalChangeRecord_unsyncedChanges) = v42;
          sub_1004B84E0(v41, v44 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
          *(_QWORD *)(v44 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare) = v39;
          swift_release(v11);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
          v47 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v46 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v47 >= v46 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
          v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v44);
          specialized Array._endMutation()(v48);
          a1 = v57;
          v10 = v58;
          goto LABEL_6;
        }
      }
      swift_release(v11);
LABEL_5:
      v10 = v58;
LABEL_6:
      ++v9;
      if (v12 == v10)
        goto LABEL_38;
    }
    v11 = *(_QWORD *)(a1 + 8 * v9);
    swift_retain(v11);
    v12 = v9 - 3;
    if (!__OFADD__(a2, 1))
      goto LABEL_12;
LABEL_33:
    __break(1u);
LABEL_34:
    if (a1 < 0)
      v49 = a1;
    else
      v49 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v49);
  }
LABEL_38:
  swift_bridgeObjectRelease();
}

uint64_t sub_100AF48BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_101406500);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v22[-v13];
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData);
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData + 8);
  sub_1004BE310(v15, v16);
  v17 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
  CRDT.init(serializedData:)(v15, v16, v8, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_1004B84E0((uint64_t)v7, (uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
  sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLUserBoardMetadataCRDTData);
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_minRequiredVersionForFullFidelity);
  swift_release(a1);
  v19 = type metadata accessor for CRLUserBoardMetadataData(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  sub_1004B84E0((uint64_t)v4, v20 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84E0((uint64_t)v11, v20 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v18;
  return v20;
}

double *sub_100AF4B40(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  _UNKNOWN **v63;
  unint64_t v64;

  v3 = v2;
  v55 = a2;
  ObjectType = swift_getObjectType(a2);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101406500);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v53 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v47 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v46 = (uint64_t)&v45 - v14;
  v64 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v15)
  {
    v52 = a1 & 0xC000000000000001;
    v16 = 4;
    v50 = v10;
    v51 = a1;
    v48 = v15;
    v49 = v11;
    while (1)
    {
      v17 = v16 - 4;
      if (!v52)
        break;
      v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a1);
      v19 = v16 - 3;
      if (__OFADD__(v17, 1))
        goto LABEL_16;
LABEL_9:
      v59 = v19;
      v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData);
      v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_crdtData + 8);
      swift_retain(v18);
      sub_1004BE310(v20, v21);
      v22 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
      CRDT.init(serializedData:)(v20, v21, v11, v22);
      v60 = v16;
      if (v3)
      {
        swift_errorRelease(v3);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v10, 1, 1, v11);
        swift_release(v18);
        sub_1004CB800((uint64_t)v10, &qword_101406500);
        v23 = 0;
        v56 = 0;
      }
      else
      {
        v56 = 0;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v10, 0, 1, v11);
        v24 = v46;
        sub_1004B84E0((uint64_t)v10, v46, type metadata accessor for CRLUserBoardMetadataCRDTData);
        sub_1004B8460(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        v25 = v47;
        sub_1004B84E0(v24, v47, type metadata accessor for CRLUserBoardMetadataCRDTData);
        v26 = *(_QWORD *)(v18
                        + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_minRequiredVersionForFullFidelity);
        swift_release(v18);
        v27 = type metadata accessor for CRLUserBoardMetadataData(0);
        v23 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
        sub_1004B84E0((uint64_t)v7, v23 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84E0(v25, v23 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
        *(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v26;
      }
      sub_1004B8460(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_boardIdentifier, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      v57 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_unsyncedChanges);
      v29 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData);
      v28 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_syncData + 8);
      v58 = *(_QWORD *)(v18
                      + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_minRequiredVersionForFullFidelity);
      v30 = v55;
      v62 = ObjectType;
      v63 = &off_1012921A8;
      *(_QWORD *)&v61 = v55;
      v31 = type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
      v32 = swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      v33 = OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData;
      *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData) = 0;
      sub_1004DB728(&v61, v32 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext);
      v34 = (uint64_t)v7;
      v35 = *(_QWORD *)(v32 + v33);
      *(_QWORD *)(v32 + v33) = v23;
      v36 = v30;
      sub_10057939C(v29, v28);
      swift_retain(v32);
      v37 = v35;
      v7 = (char *)v34;
      swift_release(v37);
      *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges) = v57;
      swift_release(v32);
      sub_1004B84E0(v34, v32 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
      v38 = (uint64_t *)(v32 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
      *v38 = v29;
      v38[1] = v28;
      *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity) = v58;
      swift_release(v18);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
      v41 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v40 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v41 >= v40 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
      v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v32);
      specialized Array._endMutation()(v42);
      v16 = v60 + 1;
      v11 = v49;
      v10 = v50;
      a1 = v51;
      v3 = v56;
      if (v59 == v48)
      {
        swift_bridgeObjectRelease();
        return (double *)v64;
      }
    }
    v18 = *(_QWORD *)(a1 + 8 * v16);
    swift_retain(v18);
    v19 = v16 - 3;
    if (!__OFADD__(v17, 1))
      goto LABEL_9;
LABEL_16:
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v44 = a1;
    else
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v15 = _CocoaArrayWrapper.endIndex.getter(v44);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100AF5090(uint64_t a1, void *a2)
{
  void *v2;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;

  v2 = a2;
  if (String.count.getter(a1, a2) < 1)
  {
    v5 = 0;
    v2 = (void *)0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v4._countAndFlagsBits = 46;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    v5 = a1;
  }
  _StringGuts.grow(_:)(100);
  v6._countAndFlagsBits = v5;
  v6._object = v2;
  String.append(_:)(v6);
  v7._object = (void *)0x8000000100FD6350;
  v7._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v5;
  v9._object = v2;
  String.append(_:)(v9);
  v10._object = (void *)0xEA0000000000656DLL;
  v10._countAndFlagsBits = 0x616E5F72656E776FLL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v5;
  v12._object = v2;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x656E6961746E6F63;
  v13._object = (void *)0xEE00646975755F72;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = v5;
  v15._object = v2;
  String.append(_:)(v15);
  v16._object = (void *)0x8000000100FEEC30;
  v16._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v5;
  v18._object = v2;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 1635017060;
  v19._object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v5;
  v21._object = v2;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0x6E6F7473626D6F74;
  v22._object = (void *)0xEA00000000006465;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v5;
  v24._object = v2;
  String.append(_:)(v24);
  v25._object = (void *)0x8000000100FEEB40;
  v25._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 8236;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v5;
  v27._object = v2;
  String.append(_:)(v27);
  v28._object = (void *)0x8000000100FEF020;
  v28._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = v5;
  v30._object = v2;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x7461645F636E7973;
  v31._object = (void *)0xE900000000000061;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 8236;
  v32._object = (void *)0xE200000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = v5;
  v33._object = v2;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x6E6F7473626D6F74;
  v34._object = (void *)0xEE00657461645F65;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 8236;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = v5;
  v36._object = v2;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0xD00000000000001ALL;
  v37._object = (void *)0x8000000100FEF040;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 8236;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  v39._countAndFlagsBits = v5;
  v39._object = v2;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0x5F65726168736B63;
  v40._object = (void *)0xEC00000061746164;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 8236;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = v5;
  v42._object = v2;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0xD000000000000014;
  v43._object = (void *)0x8000000100FEEDE0;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 8236;
  v44._object = (void *)0xE200000000000000;
  String.append(_:)(v44);
  v45._countAndFlagsBits = v5;
  v45._object = v2;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0xD000000000000012;
  v46._object = (void *)0x8000000100FEF060;
  String.append(_:)(v46);
  v47._countAndFlagsBits = 8236;
  v47._object = (void *)0xE200000000000000;
  String.append(_:)(v47);
  v48._countAndFlagsBits = v5;
  v48._object = v2;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 0x61637369645F7369;
  v49._object = (void *)0xEE00656C62616472;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 8236;
  v50._object = (void *)0xE200000000000000;
  String.append(_:)(v50);
  v51._countAndFlagsBits = v5;
  v51._object = v2;
  String.append(_:)(v51);
  v52._countAndFlagsBits = 0xD00000000000002DLL;
  v52._object = (void *)0x8000000100FEEFF0;
  String.append(_:)(v52);
  v53._countAndFlagsBits = 8236;
  v53._object = (void *)0xE200000000000000;
  String.append(_:)(v53);
  v54._countAndFlagsBits = v5;
  v54._object = v2;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v2);
  v55._countAndFlagsBits = 0xD000000000000026;
  v55._object = (void *)0x8000000100FEEB60;
  String.append(_:)(v55);
  return 0;
}

uint64_t sub_100AF5564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t result;
  sqlite3_int64 v44;
  char v45;
  uint64_t v46;
  _BYTE *v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v54;
  _BYTE *v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  void (*v59)(_BYTE *, uint64_t);
  _BYTE *v60;
  uint64_t v61;
  char v62;
  sqlite3_int64 v63;
  char v64;
  uint64_t v65;
  int v66;
  _BYTE *v67;
  unint64_t v68;
  _BYTE *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  double v77;
  char v78;
  char v79;
  char v80;
  char v81;
  double v82;
  double v83;
  _BYTE *v84;
  void (*v85)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_BYTE *, uint64_t);
  uint64_t v95;
  _BYTE v96[12];
  int v97;
  sqlite3_int64 v98;
  sqlite3_int64 v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  double v108;
  uint64_t (*v109)(_BYTE *, uint64_t, uint64_t);
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _QWORD *v120;
  _BYTE *v121;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v5 = __chkstk_darwin(v4);
  v7 = &v96[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v96[-v8];
  v10 = type metadata accessor for UUID(0);
  v120 = *(_QWORD **)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = &v96[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v11);
  v116 = &v96[-v15];
  v16 = __chkstk_darwin(v14);
  v115 = &v96[-v17];
  v18 = __chkstk_darwin(v16);
  v114 = &v96[-v19];
  v20 = __chkstk_darwin(v18);
  v118 = &v96[-v21];
  __chkstk_darwin(v20);
  v119 = &v96[-v22];
  v23 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v23);
  v25 = &v96[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = type metadata accessor for CRLBoardIdentifier(0);
  v27 = __chkstk_darwin(v26);
  v113 = &v96[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = __chkstk_darwin(v27);
  v117 = &v96[-v30];
  v31 = __chkstk_darwin(v29);
  v33 = &v96[-v32];
  v34 = __chkstk_darwin(v31);
  v36 = &v96[-v35];
  __chkstk_darwin(v34);
  v121 = &v96[-v37];
  v38 = sub_1006B44FC(a2, a1);
  if (v39 >> 60 == 15)
  {
    swift_release(a1);
    return 0;
  }
  v40 = v39;
  v111 = v13;
  v112 = v10;
  v41 = (uint64_t)v38;
  sub_1004BE310((uint64_t)v38, v39);
  sub_10067B2E0(v41, v40);
  v110 = v41;
  sub_1004B84E0((uint64_t)v25, (uint64_t)v33, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v33, (uint64_t)v36, type metadata accessor for CRLBoardIdentifier);
  v42 = v121;
  sub_1004B84E0((uint64_t)v36, (uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
  result = a2 + 12;
  if (__OFADD__(a2, 12))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v44 = sub_1006B64F4(result, a1);
  if ((v45 & 1) != 0)
  {
    sub_1004BE2FC(v110, v40);
    swift_release(a1);
    v47 = v42;
LABEL_7:
    sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  v46 = v44;
  sub_100A6AB18(0, v44, &_mh_execute_header, (uint64_t)"init(row:columnOffsetIndex:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 10766, (uint64_t)&type metadata for UInt64, &qword_1014052E8);
  sub_1006B69C4(a2 + 2, a1, (uint64_t)v9);
  v48 = v120;
  v49 = v112;
  v109 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v120[6];
  v50 = v109(v9, 1, v112);
  if (v50 == 1)
  {
    swift_release(a1);
    sub_1004BE2FC(v110, v40);
    sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLBoardIdentifier);
    v51 = (uint64_t)v9;
LABEL_10:
    sub_1004CB800(v51, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v53 = (void (*)(_BYTE *, _BYTE *, uint64_t))v48[4];
  v53(v119, v9, v49);
  sub_1006B69C4(a2 + 3, a1, (uint64_t)v7);
  if (v109(v7, 1, v49) == 1)
  {
    swift_release(a1);
    sub_1004BE2FC(v110, v40);
    ((void (*)(_BYTE *, uint64_t))v48[1])(v119, v49);
    sub_1004B84A4((uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
    v51 = (uint64_t)v7;
    goto LABEL_10;
  }
  v54 = v118;
  v53(v118, v7, v49);
  v55 = sub_1006B44FC(a2 + 4, a1);
  v57 = v56;
  v58 = sub_1006B6418(a2 + 5, a1);
  if (v58 == 2)
  {
    sub_1004BE2FC((uint64_t)v55, v57);
    swift_release(a1);
    sub_1004BE2FC(v110, v40);
    v59 = (void (*)(_BYTE *, uint64_t))v120[1];
    v59(v54, v49);
    v60 = v119;
    v61 = v49;
LABEL_34:
    v59(v60, v61);
    v47 = v121;
    goto LABEL_7;
  }
  v62 = v58;
  v63 = sub_1006B64F4(a2 + 6, a1);
  if ((v64 & 1) != 0 || (v65 = v63, v66 = sub_1006B6418(a2 + 7, a1), v66 == 2))
  {
    v67 = v55;
    v68 = v57;
LABEL_33:
    sub_1004BE2FC((uint64_t)v67, v68);
    swift_release(a1);
    sub_1004BE2FC(v110, v40);
    v59 = (void (*)(_BYTE *, uint64_t))v120[1];
    v95 = v112;
    v59(v118, v112);
    v60 = v119;
    v61 = v95;
    goto LABEL_34;
  }
  LODWORD(v109) = v66;
  v69 = sub_1006B44FC(a2 + 8, a1);
  v71 = v70;
  v72 = sub_1006B6620(a2 + 9, a1);
  if ((v73 & 1) != 0 || (v108 = *(double *)&v72, v107 = sub_1006B6418(a2 + 10, a1), v107 == 2))
  {
    sub_1004BE2FC((uint64_t)v55, v57);
    v67 = v69;
    v68 = v71;
    goto LABEL_33;
  }
  v100 = v65;
  v104 = v69;
  v106 = v71;
  v103 = v55;
  v105 = v57;
  v101 = sub_1006B44FC(a2 + 11, a1);
  v102 = v74;
  result = a2 + 13;
  if (__OFADD__(a2, 13))
    goto LABEL_36;
  v75 = sub_1006B6620(result, a1);
  if ((v76 & 1) != 0)
  {
LABEL_32:
    sub_1004BE2FC((uint64_t)v103, v105);
    sub_1004BE2FC((uint64_t)v104, v106);
    v67 = v101;
    v68 = v102;
    goto LABEL_33;
  }
  v77 = *(double *)&v75;
  result = a2 + 14;
  if (__OFADD__(a2, 14))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v78 = sub_1006B6418(result, a1);
  if (v78 == 2)
    goto LABEL_32;
  v79 = v78;
  result = a2 + 15;
  if (__OFADD__(a2, 15))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v99 = sub_1006B64F4(result, a1);
  if ((v80 & 1) != 0)
    goto LABEL_32;
  result = a2 + 16;
  if (!__OFADD__(a2, 16))
  {
    v98 = sub_1006B64F4(result, a1);
    if ((v81 & 1) == 0)
    {
      v82 = v108;
      v83 = v77;
      v97 = v79 & 1;
      v107 &= 1u;
      LODWORD(v108) = v109 & 1;
      LODWORD(v109) = v62 & 1;
      v84 = v117;
      sub_1004B8460((uint64_t)v121, (uint64_t)v117, type metadata accessor for CRLBoardIdentifier);
      v85 = (void (*)(_BYTE *, _BYTE *, uint64_t))v120[2];
      v86 = v114;
      v87 = v112;
      v85(v114, v119, v112);
      v88 = v115;
      v85(v115, v118, v87);
      v89 = (uint64_t)v84;
      v90 = v113;
      sub_1004B8460(v89, (uint64_t)v113, type metadata accessor for CRLBoardIdentifier);
      v91 = (uint64_t)v116;
      v85(v116, v86, v87);
      v92 = (uint64_t)v111;
      v85(v111, v88, v87);
      v93 = type metadata accessor for CRLBoardDatabaseRow(0);
      swift_allocObject(v93, *(unsigned int *)(v93 + 48), *(unsigned __int16 *)(v93 + 52));
      v52 = sub_1009FFA00((uint64_t)v90, v46, v99, v98, v91, v92, (uint64_t)v103, v105, v82, v83, (char)v109, v100, SLOBYTE(v108), (uint64_t)v104, v106, v107, (uint64_t)v101, v102, v97);
      v94 = (void (*)(_BYTE *, uint64_t))v120[1];
      v94(v88, v87);
      v94(v86, v87);
      sub_1004B84A4((uint64_t)v117, type metadata accessor for CRLBoardIdentifier);
      swift_release(a1);
      sub_1004BE2FC(v110, v40);
      v94(v118, v87);
      v94(v119, v87);
      sub_1004B84A4((uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
      return v52;
    }
    goto LABEL_32;
  }
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_100AF5E90(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  char v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  _BYTE v32[72];
  _BYTE v33[24];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8);
  if (v1 >> 60 != 15)
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
    v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
    v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
    sub_1004BE310(v3, v1);
    sub_100A6AB18(0, v5, &_mh_execute_header, (uint64_t)"createItemData(from:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 11030, (uint64_t)&type metadata for UInt64, &qword_1014052E8);
    sub_1007BD85C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue));
    v7 = v6;
    v9 = v8;
    if ((v8 & 0x100) != 0)
    {
      if (qword_1013DD858 != -1)
        swift_once(&qword_1013DD858, sub_100A05554);
      swift_beginAccess(&static OS_os_log.boardStore, v33, 0, 0);
      v19 = (void *)static OS_os_log.boardStore;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v32);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v29 = v7;
      v30 = v9;
      v31 = 1;
      v22 = v19;
      v23 = String.init<A>(describing:)(&v29, &type metadata for CRLSerializableObjectType);
      v25 = v24;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v26 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v26;
      *(_QWORD *)(inited + 32) = v23;
      *(_QWORD *)(inited + 40) = v25;
      v27 = static os_log_type_t.error.getter(v26);
      sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v27, "Database record has invalid board item type: %@", 47, 2, inited);
      swift_setDeallocating(inited);
      v28 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v28);

    }
    else
    {
      v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
      v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
      if (v11 >> 60 != 15)
      {
        v12 = *v10;
        v13 = *v4;
        v14 = v4[1];
        v15 = v4[2];
        v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions);
        sub_1004BE310(*v10, v11);
        v17 = sub_10089BAB8(v7, v9 & 1, v13, v14, v15, v16, v3, v1, v12, v11);
        sub_1004BE2FC(v12, v11);
        sub_1004BE2FC(v3, v1);
        return v17;
      }
    }
    sub_1004BE2FC(v3, v1);
  }
  return 0;
}

uint64_t sub_100AF6140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[6];

  v36 = a2;
  v37 = a8;
  v44 = a6;
  v45 = a7;
  v42 = a4;
  v43 = a5;
  v41 = a3;
  v40 = a10;
  v38 = a14;
  v39 = a13;
  v34 = a12;
  v35 = a15;
  v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v20);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UUID(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[3] = type metadata accessor for CRLBoardDataStore(0);
  v46[4] = &off_1012921A8;
  v46[0] = a1;
  v27 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
  *(_QWORD *)(a16 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData) = 0;
  sub_1004E90B0((uint64_t)v46, a16 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext);
  v28 = *(_QWORD *)(a16 + v27);
  *(_QWORD *)(a16 + v27) = a11;
  swift_retain(a16);
  swift_retain(a11);
  swift_release(v28);
  *(_QWORD *)(a16 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) = v34;
  *(_QWORD *)(a16 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs) = v35;
  v29 = swift_release(a16);
  v30 = v36;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16))(v26, v36, v23, v29);
  v31 = v37;
  sub_1004CB7BC(v37, (uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(a9, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  v32 = sub_100C8198C((uint64_t)v26, v41, v42, v43, v44, v45, (uint64_t)v22, (uint64_t)v19, v40, v39, v38);
  sub_1004B84A4(a9, type metadata accessor for CRLBoardIdentifier);
  sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v23);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v46);
  return v32;
}

double *sub_100AF63B0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  id v58;
  const __CFString *v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  _QWORD *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[8];
  _QWORD v80[5];
  char v81[8];
  unint64_t v82;

  v3 = v2;
  v58 = a2;
  ObjectType = swift_getObjectType(a2);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v56 = (uint64_t)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v76 = (uint64_t)v51 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v55 = (uint64_t)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v78 = (uint64_t)v51 - v12;
  v77 = type metadata accessor for UUID(0);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v74 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v14)
  {
    v51[1] = v3;
    v61 = a1 & 0xC000000000000001;
    v60 = (id)objc_opt_self(NSUserDefaults);
    v59 = CFSTR("CRLImageItemsUseUnsupportedMinVersionUserDefault");
    v15 = 4;
    v52 = xmmword_100F062D0;
    v54 = a1;
    v53 = v14;
    while (1)
    {
      v16 = v15 - 4;
      if (!v61)
        break;
      v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
      v3 = v15 - 3;
      if (__OFADD__(v16, 1))
        goto LABEL_17;
LABEL_11:
      v18 = objc_msgSend(v60, "standardUserDefaults");
      v19 = objc_msgSend(v18, "BOOLForKey:", v59);

      if (v19 && *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue) == 5)
      {
        swift_release(v17);
      }
      else
      {
        v72 = v15;
        v73 = v3;
        v64 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
        v64(v74, v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, v77);
        v70 = *(_OWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
        v69 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions);
        v67 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions + 16);
        v68 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue);
        v20 = v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
        swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID, v81, 0, 0);
        sub_1004CB7BC(v20, v78, (uint64_t *)&unk_1013E1A50);
        sub_1004B8460(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier, v76, type metadata accessor for CRLBoardIdentifier);
        v71 = *(unsigned __int8 *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone);
        v21 = v58;
        swift_retain(v17);
        v23 = sub_100AF5E90(v22);
        v24 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges);
        v26 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
        v63 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
        v25 = v63;
        v62 = v26;
        v27 = type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
        v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
        v80[3] = ObjectType;
        v80[4] = &off_1012921A8;
        v80[0] = v21;
        v29 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData) = 0;
        sub_1004E90B0((uint64_t)v80, v28 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext);
        v30 = *(_QWORD *)(v28 + v29);
        v65 = v23;
        *(_QWORD *)(v28 + v29) = v23;
        v66 = v21;
        sub_10057939C(v25, v26);
        swift_retain(v28);
        swift_retain(v23);
        swift_release(v30);
        *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) = v24;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs) = &_swiftEmptySetSingleton;
        v31 = swift_release(v28);
        v32 = v74;
        v33 = v77;
        ((void (*)(uint64_t, char *, uint64_t, __n128))v64)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id, v74, v77, v31);
        v34 = v55;
        sub_1004CB7BC(v78, v55, (uint64_t *)&unk_1013E1A50);
        v35 = v76;
        v36 = v56;
        sub_1004B8460(v76, v56, type metadata accessor for CRLBoardIdentifier);
        v37 = v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
        v38 = v75;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID, 1, 1, v33);
        *(_OWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData) = v52;
        v39 = v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions;
        *(_OWORD *)v39 = v70;
        *(_QWORD *)(v39 + 16) = v67;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions) = v69;
        *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue) = v68;
        swift_beginAccess(v37, v79, 33, 0);
        sub_100582338(v34, v37, (uint64_t *)&unk_1013E1A50);
        swift_endAccess(v79);
        sub_1004B84E0(v36, v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        *(_BYTE *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned) = v71;
        v40 = (uint64_t *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
        v41 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
        v42 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
        v43 = v62;
        *v40 = v63;
        v40[1] = v43;
        sub_1004BE2FC(v41, v42);
        sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
        sub_1004CB800(v78, (uint64_t *)&unk_1013E1A50);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v77);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v80);

        swift_release_n(v17, 2, v44);
        swift_release(v65);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        v47 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v46 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v47 >= v46 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
        v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v28);
        specialized Array._endMutation()(v48);
        a1 = v54;
        v14 = v53;
        v15 = v72;
        v3 = v73;
      }
      ++v15;
      if (v3 == v14)
      {
        swift_bridgeObjectRelease();
        return (double *)v82;
      }
    }
    v17 = *(_QWORD *)(a1 + 8 * v15);
    swift_retain(v17);
    v3 = v15 - 3;
    if (!__OFADD__(v16, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v50 = a1;
    else
      v50 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v50);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double *sub_100AF6AE4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  _QWORD v49[2];
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  id v57;
  unint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  _QWORD *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[24];
  _QWORD v76[5];
  char v77[8];
  unint64_t v78;

  v3 = v2;
  v57 = a2;
  ObjectType = swift_getObjectType(a2);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v55 = (uint64_t)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v72 = (uint64_t)v49 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v54 = (uint64_t)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v74 = (uint64_t)v49 - v12;
  v73 = type metadata accessor for UUID(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v14)
  {
    v49[1] = v3;
    v53 = a1 & 0xC000000000000001;
    v3 = 4;
    v50 = xmmword_100F062D0;
    v52 = a1;
    v51 = v14;
    while (1)
    {
      v15 = v3 - 4;
      if (!v53)
        break;
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v17 = v3 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_13;
LABEL_9:
      v68 = v17;
      v69 = v3;
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v60(v70, v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, v73);
      v66 = *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
      v65 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions);
      v63 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions + 16);
      v64 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue);
      v18 = v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
      swift_beginAccess(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID, v77, 0, 0);
      sub_1004CB7BC(v18, v74, (uint64_t *)&unk_1013E1A50);
      sub_1004B8460(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier, v72, type metadata accessor for CRLBoardIdentifier);
      v67 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone);
      v19 = v57;
      swift_retain(v16);
      v21 = sub_100AF5E90(v20);
      v22 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges);
      v24 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
      v59 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
      v23 = v59;
      v58 = v24;
      v25 = type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
      v26 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      v76[3] = ObjectType;
      v76[4] = &off_1012921A8;
      v76[0] = v19;
      v27 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
      *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData) = 0;
      sub_1004E90B0((uint64_t)v76, v26 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext);
      v28 = *(_QWORD *)(v26 + v27);
      v61 = v21;
      *(_QWORD *)(v26 + v27) = v21;
      v62 = v19;
      sub_10057939C(v23, v24);
      swift_retain(v26);
      swift_retain(v21);
      swift_release(v28);
      *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) = v22;
      *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs) = &_swiftEmptySetSingleton;
      v29 = swift_release(v26);
      v30 = v70;
      v31 = v73;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v60)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id, v70, v73, v29);
      v32 = v54;
      sub_1004CB7BC(v74, v54, (uint64_t *)&unk_1013E1A50);
      v33 = v72;
      v34 = v55;
      sub_1004B8460(v72, v55, type metadata accessor for CRLBoardIdentifier);
      v35 = v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
      v36 = v71;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID, 1, 1, v31);
      *(_OWORD *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData) = v50;
      v37 = v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions;
      *(_OWORD *)v37 = v66;
      *(_QWORD *)(v37 + 16) = v63;
      *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions) = v65;
      *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue) = v64;
      swift_beginAccess(v35, v75, 33, 0);
      sub_100582338(v32, v35, (uint64_t *)&unk_1013E1A50);
      swift_endAccess(v75);
      sub_1004B84E0(v34, v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
      *(_BYTE *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned) = v67;
      v38 = (uint64_t *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
      v39 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
      v40 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
      v41 = v58;
      *v38 = v59;
      v38[1] = v41;
      sub_1004BE2FC(v39, v40);
      sub_1004B84A4(v33, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB800(v74, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v73);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v76);

      swift_release_n(v16, 2, v42);
      swift_release(v61);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v45 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v44 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v45 >= v44 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
      v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v26);
      specialized Array._endMutation()(v46);
      v3 = v69 + 1;
      a1 = v52;
      if (v68 == v51)
      {
        swift_bridgeObjectRelease();
        return (double *)v78;
      }
    }
    v16 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v16);
    v17 = v3 - 3;
    if (!__OFADD__(v15, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v48 = a1;
    else
      v48 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v48);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100AF7190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v30[5];

  v30[3] = type metadata accessor for CRLBoardDataStore(0);
  v30[4] = &off_1012921A8;
  v30[0] = a1;
  v16 = a12 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData;
  *(_OWORD *)v16 = xmmword_100F062D0;
  sub_1004E90B0((uint64_t)v30, a12 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_persistenceContext);
  v17 = (uint64_t *)(a12 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
  *v17 = a4;
  v17[1] = a5;
  v19 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v16 = a8;
  *(_QWORD *)(v16 + 8) = a9;
  swift_retain(a12);
  sub_1004BE310(a4, a5);
  sub_10057939C(a8, a9);
  sub_1004BE2FC(v19, v18);
  *(_QWORD *)(a12 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges) = a11;
  v20 = a12 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions;
  v21 = *(_OWORD *)(a10 + 16);
  *(_OWORD *)v20 = *(_OWORD *)a10;
  *(_OWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(a10 + 32);
  swift_release(a12);
  sub_1004B8460(a3, a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(_OWORD *)(a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData) = xmmword_100F062D0;
  *(_QWORD *)(a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex) = a2;
  v22 = (_QWORD *)(a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
  v23 = *(_QWORD *)(a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
  v24 = *(_QWORD *)(a12 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8);
  *v22 = a6;
  v22[1] = a7;
  sub_1004BE2FC(v23, v24);
  sub_1004B84A4(a3, type metadata accessor for CRLBoardIdentifier);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
  return a12;
}

_QWORD *sub_100AF7344(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v5 = v4;
  v24 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v7)
  {
    for (i = 4; ; ++i)
    {
      v10 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v12 = i - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_17;
LABEL_11:
      v23 = v11;
      a4(&v22, &v23, a2, a3);
      if (v5)
      {
        swift_bridgeObjectRelease(a1);
        swift_release(v11);
        return (_QWORD *)swift_bridgeObjectRelease(v24);
      }
      swift_release(v11);
      v14 = v22;
      if (v22)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v16 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v15 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v16 >= v15 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
        specialized Array._endMutation()(v9);
      }
      if (v12 == v7)
      {
        swift_bridgeObjectRelease(a1);
        return (_QWORD *)v24;
      }
    }
    v11 = *(_QWORD *)(a1 + 8 * i);
    swift_retain(v11);
    v12 = i - 3;
    if (!__OFADD__(v10, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

double *sub_100AF74F8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t ObjectType;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD v57[6];
  unint64_t v58;

  v3 = v2;
  v42 = a2;
  ObjectType = swift_getObjectType(a2);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v56 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v7)
  {
    v37[1] = v3;
    v40 = a1 & 0xC000000000000001;
    v8 = 4;
    v55 = xmmword_100F062D0;
    v39 = a1;
    v38 = v7;
    while (1)
    {
      v3 = v8 - 4;
      if (!v40)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a1);
      v10 = v8 - 3;
      if (__OFADD__(v3, 1))
        goto LABEL_13;
LABEL_9:
      v53 = v10;
      v54 = v8;
      v52 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketIndex);
      sub_1004B8460(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_boardIdentifier, v56, type metadata accessor for CRLBoardIdentifier);
      v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData);
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData + 8);
      v13 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData + 8);
      v47 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData);
      v15 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData);
      v14 = *(_QWORD *)(v9
                      + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData
                      + 8);
      v16 = *(_OWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions);
      v50 = *(_OWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 16);
      v51 = v16;
      v49 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 32);
      v48 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_unsyncedChanges);
      v17 = type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
      v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      v57[3] = ObjectType;
      v57[4] = &off_1012921A8;
      v19 = v42;
      v57[0] = v42;
      v20 = (uint64_t *)(v18
                      + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData);
      *(_OWORD *)(v18
                + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData) = v55;
      sub_1004E90B0((uint64_t)v57, v18 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_persistenceContext);
      v21 = (uint64_t *)(v18 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
      *v21 = v12;
      v21[1] = v11;
      v44 = *v20;
      v43 = v20[1];
      *v20 = v15;
      v20[1] = v14;
      v22 = v19;
      v45 = v12;
      sub_1004BE310(v12, v11);
      sub_10057939C(v15, v14);
      v46 = v22;
      sub_1004BE310(v12, v11);
      sub_10057939C(v15, v14);
      swift_retain(v9);
      v23 = v47;
      sub_10057939C(v47, v13);
      swift_retain(v18);
      sub_1004BE2FC(v44, v43);
      *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges) = v48;
      v24 = v18 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions;
      v25 = v50;
      *(_OWORD *)v24 = v51;
      *(_OWORD *)(v24 + 16) = v25;
      *(_QWORD *)(v24 + 32) = v49;
      swift_release(v18);
      v26 = v56;
      sub_1004B8460(v56, v18 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
      v27 = v18 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData;
      *(_OWORD *)v27 = v55;
      *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex) = v52;
      v28 = *(_QWORD *)v27;
      v29 = *(_QWORD *)(v27 + 8);
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v13;
      sub_1004BE2FC(v28, v29);
      sub_1004B84A4(v26, type metadata accessor for CRLBoardIdentifier);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v57);
      sub_1004BE2FC(v15, v14);
      sub_1004BBBC8(v45, v11);

      v31 = swift_release_n(v9, 2, v30);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v33 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v18);
      specialized Array._endMutation()(v34);
      v8 = v54 + 1;
      a1 = v39;
      if (v53 == v38)
      {
        swift_bridgeObjectRelease();
        return (double *)v58;
      }
    }
    v9 = *(_QWORD *)(a1 + 8 * v8);
    swift_retain(v9);
    v10 = v8 - 3;
    if (!__OFADD__(v3, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v36 = a1;
    else
      v36 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v36);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100AF7994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v19 = Set.init(minimumCapacity:)(v12, v2, v13);
  if (v12)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v15(v11, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v16(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_100AD569C((uint64_t)v8, (uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v14 += v18;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v16(v11, 1, 1, v2);
  }
  return v19;
}

void sub_100AF7B64(uint64_t a1)
{
  sub_100AF8224(a1, type metadata accessor for CRLBoardItem, (unint64_t *)&qword_1013E4190, &qword_1013DEA38);
}

void sub_100AF7B80(uint64_t a1)
{
  sub_100AF7BA4(a1, (unint64_t *)&qword_1013E56B0, off_101229828, (unint64_t *)&qword_1013E8770, (uint64_t *)&unk_1013DE800);
}

void sub_100AF7BA4(uint64_t a1, unint64_t *a2, _QWORD *a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void **v18;
  void *v19;
  uint64_t v20;
  id v21[2];

  v10 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = sub_1004B8930(0, a2, a3);
  v13 = sub_1005A15B8(a4, a2, a3, (uint64_t)&protocol conformance descriptor for NSObject);
  v21[1] = (id)Set.init(minimumCapacity:)(v11, v12, v13);
  if (!v10)
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
      return;
    goto LABEL_10;
  }
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(a1);
  if (v14)
  {
LABEL_10:
    if (v14 < 1)
    {
      __break(1u);
    }
    else if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v14; ++i)
      {
        v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_100ADA768((Swift::Int *)v21, v17, a2, a3, a5);

      }
    }
    else
    {
      v18 = (void **)(a1 + 32);
      do
      {
        v19 = *v18++;
        sub_100ADA768((Swift::Int *)v21, v19, a2, a3, a5);

        --v14;
      }
      while (v14);
    }
  }
}

uint64_t sub_100AF7D40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _OWORD v24[2];
  Swift::UInt64 v25[2];
  _QWORD v26[5];
  uint64_t v27;
  _QWORD v28[5];
  Swift::UInt64 v29;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_100AFFD08();
  v4 = Set.init(minimumCapacity:)(v2, &type metadata for AnyCRLCommandChangeContext, v3);
  if (!v2)
    return v4;
  v5 = 0;
  v6 = a1 + 32;
  while (1)
  {
    sub_10051FDDC(v6 + 48 * v5, (uint64_t)v28);
    Hasher.init(_seed:)(v26, *(_QWORD *)(v4 + 40));
    swift_bridgeObjectRetain(v4);
    AnyHashable.hash(into:)(v26);
    Hasher._combine(_:)(v29);
    v13 = Hasher._finalize()();
    v14 = -1 << *(_BYTE *)(v4 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      v16 = ~v14;
      while (1)
      {
        sub_10051FDDC(*(_QWORD *)(v4 + 48) + 48 * v15, (uint64_t)v26);
        if ((static AnyHashable.== infix(_:_:)(v26, v28) & 1) != 0 && v27 == v29)
          break;
        sub_10051FE18(v26);
        v15 = (v15 + 1) & v16;
        if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          goto LABEL_14;
      }
      sub_10051FE18(v26);
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10051FDDC((uint64_t)v28, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 16);
    if (*(_QWORD *)(v4 + 24) > v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_100AEAA5C();
      goto LABEL_5;
    }
    v19 = v18 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_100ADE574(v19);
    else
      sub_100AED934(v19);
    Hasher.init(_seed:)(v26, *(_QWORD *)(v4 + 40));
    AnyHashable.hash(into:)(v26);
    Hasher._combine(_:)(v25[1]);
    v20 = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v15 = v20 & ~v21;
    if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      break;
LABEL_5:
    *(_QWORD *)(v4 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v15;
    v7 = (_OWORD *)(*(_QWORD *)(v4 + 48) + 48 * v15);
    v8 = v24[0];
    v9 = *(_OWORD *)v25;
    v7[1] = v24[1];
    v7[2] = v9;
    *v7 = v8;
    v10 = *(_QWORD *)(v4 + 16);
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_26;
    }
    *(_QWORD *)(v4 + 16) = v12;
LABEL_7:
    swift_bridgeObjectRelease();
    ++v5;
    sub_10051FE18(v28);
    if (v5 == v2)
      return v4;
  }
  v22 = ~v21;
  while (1)
  {
    sub_10051FDDC(*(_QWORD *)(v4 + 48) + 48 * v15, (uint64_t)v26);
    if ((static AnyHashable.== infix(_:_:)(v26, v24) & 1) != 0 && v27 == v25[1])
      break;
    sub_10051FE18(v26);
    v15 = (v15 + 1) & v22;
    if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_5;
  }
LABEL_26:
  sub_10051FE18(v26);
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyCRLCommandChangeContext);
  __break(1u);
  return result;
}

uint64_t sub_100AF8024(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_100696BE0();
  result = Set.init(minimumCapacity:)(v2, &type metadata for CRLBoardLibraryViewModel.Library, v3);
  v8 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_100AD8850(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100AF8094(uint64_t a1)
{
  return sub_100AF8AD8(a1, type metadata accessor for CRLBoardLibraryViewModel.Item, (unint64_t *)&qword_101407360, (uint64_t)&unk_100F2A520, (void (*)(char *, char *))sub_100AD896C);
}

uint64_t sub_100AF80B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_1004B7878(&qword_101405300, v10, (uint64_t)&unk_100EFA718);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v16 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1004B8460(v13, (uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_100AD9FE0((uint64_t)v8, (uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item, (void (*)(_QWORD *, __n128))sub_10058A3F0, (void (*)(char *, unint64_t, uint64_t))sub_100AE7BE0, (uint64_t (*)(char *, uint64_t))sub_10059CBF0);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

void sub_100AF8208(uint64_t a1)
{
  sub_100AF8224(a1, (uint64_t (*)(uint64_t))type metadata accessor for CRLiOSMiniFormatterBuilder, &qword_1013F4B40, &qword_101405688);
}

void sub_100AF8224(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t *a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  id v19[2];

  v8 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = a2(0);
  v11 = sub_1004B7878(a3, a2, (uint64_t)&protocol conformance descriptor for NSObject);
  v19[1] = (id)Set.init(minimumCapacity:)(v9, v10, v11);
  if (!v8)
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return;
    goto LABEL_10;
  }
  if (a1 < 0)
    v13 = a1;
  else
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(a1);
  if (v12)
  {
LABEL_10:
    if (v12 < 1)
    {
      __break(1u);
    }
    else if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_100ADBA5C((Swift::Int *)v19, v15, a2, a4);

      }
    }
    else
    {
      v16 = (void **)(a1 + 32);
      do
      {
        v17 = *v16++;
        sub_100ADBA5C((Swift::Int *)v19, v17, a2, a4);

        --v12;
      }
      while (v12);
    }
  }
}

uint64_t sub_100AF83A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - v6;
  v8 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v45 = (uint64_t)&v44 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v19 = sub_1004B7878(&qword_101405698, v18, (uint64_t)&unk_100F024A4);
  v50 = v8;
  v20 = Set.init(minimumCapacity:)(v17, v8, v19);
  v47 = v17;
  if (v17)
  {
    v21 = 0;
    v46 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v52 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1004B8460(v46 + v52 * v21, (uint64_t)v16, type metadata accessor for CRLBoardIdentifierAndValue);
      Hasher.init(_seed:)(v53, *(_QWORD *)(v20 + 40));
      v25 = type metadata accessor for UUID(0);
      v26 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      swift_bridgeObjectRetain(v20);
      dispatch thunk of Hashable.hash(into:)(v53, v25, v26);
      v51 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v27 = &v16[*(int *)(v51 + 20)];
      v28 = *(_QWORD *)v27;
      v29 = *((_QWORD *)v27 + 1);
      swift_bridgeObjectRetain(v29);
      String.hash(into:)(v53, v28, v29);
      swift_bridgeObjectRelease(v29);
      v49 = *(int *)(v50 + 20);
      Hasher._combine(_:)(v16[v49]);
      v30 = Hasher._finalize()();
      v31 = -1 << *(_BYTE *)(v20 + 32);
      v32 = v30 & ~v31;
      v33 = *(_QWORD *)(v20 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32;
      v48 = v21;
      if ((v33 & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease(v20);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
        v23 = v45;
        sub_1004B8460((uint64_t)v16, v45, type metadata accessor for CRLBoardIdentifierAndValue);
        v53[0] = v20;
        sub_100AE7FD8(v23, v32, isUniquelyReferenced_nonNull_native);
        v20 = v53[0];
        v24 = 0x8000000000000000;
        goto LABEL_4;
      }
      v34 = ~v31;
      while (1)
      {
        sub_1004B8460(*(_QWORD *)(v20 + 48) + v32 * v52, (uint64_t)v11, type metadata accessor for CRLBoardIdentifierAndValue);
        v35 = static UUID.== infix(_:_:)(v11);
        sub_1004B8460((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        sub_1004B8460((uint64_t)v16, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
        if ((v35 & 1) == 0)
        {
          sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_8;
        }
        v36 = *(int *)(v51 + 20);
        v37 = *(_QWORD *)&v7[v36];
        v38 = *(_QWORD *)&v7[v36 + 8];
        v39 = &v4[v36];
        v40 = *((_QWORD *)v39 + 1);
        if (v37 == *(_QWORD *)v39 && v38 == v40)
          break;
        v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, *(_QWORD *)v39, v40, 0);
        sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        if ((v42 & 1) != 0)
          goto LABEL_17;
LABEL_8:
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifierAndValue);
        v32 = (v32 + 1) & v34;
        if (((*(_QWORD *)(v20 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
          goto LABEL_3;
      }
      sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
LABEL_17:
      if (v11[*(int *)(v50 + 20)] != v16[v49])
        goto LABEL_8;
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifierAndValue);
      v24 = v20;
LABEL_4:
      swift_bridgeObjectRelease(v24);
      v21 = v48 + 1;
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardIdentifierAndValue);
    }
    while (v21 != v47);
  }
  return v20;
}

uint64_t sub_100AF87D0(uint64_t a1)
{
  return sub_100AF8AD8(a1, type metadata accessor for CRLBoardIdentifier, &qword_1013E9A00, (uint64_t)&unk_100F0215C, (void (*)(char *, char *))sub_100AD7844);
}

void sub_100AF87F4(uint64_t a1)
{
  sub_100AF7BA4(a1, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (unint64_t *)&qword_1013E1778, (uint64_t *)&unk_1013DE990);
}

void sub_100AF8818(uint64_t a1)
{
  sub_100AF7BA4(a1, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr, (unint64_t *)&qword_1013E1768, &qword_101405608);
}

uint64_t sub_100AF883C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_1004B7878(&qword_101405600, v10, (uint64_t)&protocol conformance descriptor for UTType);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v17 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v5, v13, v2);
      sub_100ADAA4C((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_100AF8964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_1004B7878(&qword_1014055F0, v10, (uint64_t)&unk_100EFFE90);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v16 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1004B8460(v13, (uint64_t)v5, type metadata accessor for CRLSELibraryViewModel.Item);
      sub_100AD9FE0((uint64_t)v8, (uint64_t)v5, type metadata accessor for CRLSELibraryViewModel.Item, (void (*)(_QWORD *, __n128))sub_10065506C, (void (*)(char *, unint64_t, uint64_t))sub_100AE8EDC, (uint64_t (*)(char *, uint64_t))sub_1006577BC);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSELibraryViewModel.Item);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_100AF8AB4(uint64_t a1)
{
  return sub_100AF8AD8(a1, type metadata accessor for CRLSpotlightManager.ChangeType, &qword_1014055D0, (uint64_t)&unk_100F1DAAC, (void (*)(char *, char *))sub_100ADAF84);
}

uint64_t sub_100AF8AD8(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = sub_1004B7878(a3, a2, a4);
  result = Set.init(minimumCapacity:)(v17, v10, v18);
  v23 = result;
  if (v17)
  {
    v20 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v21 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_1004B8460(v20, (uint64_t)v14, a2);
      a5(v16, v14);
      sub_1004B84A4((uint64_t)v16, a2);
      v20 += v21;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_100AF8BFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int v9;
  void *v10[3];
  unsigned __int8 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_100B0000C();
  result = Set.init(minimumCapacity:)(v2, &type metadata for CRLBoardLibraryFolderViewModel.GroupSection, v3);
  v12 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 56);
    do
    {
      v6 = (void *)*((_QWORD *)v5 - 3);
      v7 = (void *)*((_QWORD *)v5 - 2);
      v8 = *((_QWORD *)v5 - 1);
      v9 = *v5;
      v5 += 32;
      sub_1004DD884(v6, v7, v8, v9);
      sub_100AD7BE8((uint64_t)v10, v6, (uint64_t)v7, v8, v9);
      sub_1004DD8B8(v10[0], v10[1], (uint64_t)v10[2], v11);
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_100AF8CB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1004B7878(&qword_101405480, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v19 = Set.init(minimumCapacity:)(v12, v2, v13);
  if (v12)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v15(v11, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v16(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_100ADB7EC((uint64_t)v8, (uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v14 += v18;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v16(v11, 1, 1, v2);
  }
  return v19;
}

void sub_100AF8E88(uint64_t a1)
{
  sub_100AF8224(a1, type metadata accessor for CRLSceneInfo, &qword_10140B790, &qword_1013DE780);
}

uint64_t sub_100AF8EA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];
  _BYTE v6[40];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  v7 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      sub_1004B8968(v4, (uint64_t)v5);
      sub_100ADBD08((uint64_t)v6, (uint64_t)v5);
      sub_1004B89A4((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_100AF8F2C(uint64_t a1)
{
  sub_100AF8224(a1, type metadata accessor for CRLCollaborationParticipant, (unint64_t *)&unk_1013E8E30, &qword_101405430);
}

void sub_100AF8F48(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;

  v4 = v3;
  v46 = a2;
  v47 = a3;
  v45 = sub_1004B804C(&qword_1014052F0);
  v6 = __chkstk_darwin(v45);
  v44 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v43 = (uint64_t)&v40 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v42 = (unint64_t)(v10 + 63) >> 6;
  v48 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (v12)
  {
    v52 = v4;
    v50 = (v12 - 1) & v12;
    v51 = v13;
    v14 = __clz(__rbit64(v12)) | (v13 << 6);
LABEL_5:
    v15 = v48;
    v16 = *(_QWORD *)(v48 + 48);
    v17 = v16 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 72) * v14;
    v18 = v43;
    sub_1004B8460(v17, v43, type metadata accessor for CRLBoardIdentifier);
    v19 = *(_QWORD *)(v15 + 56) + 40 * v14;
    v21 = *(_QWORD *)v19;
    v20 = *(_QWORD *)(v19 + 8);
    v23 = *(_QWORD *)(v19 + 16);
    v22 = *(void **)(v19 + 24);
    LOBYTE(v19) = *(_BYTE *)(v19 + 32);
    v24 = v45;
    v25 = v18 + *(int *)(v45 + 48);
    *(_QWORD *)v25 = v21;
    *(_QWORD *)(v25 + 8) = v20;
    *(_QWORD *)(v25 + 16) = v23;
    *(_QWORD *)(v25 + 24) = v22;
    *(_BYTE *)(v25 + 32) = v19;
    v26 = v18;
    v27 = v44;
    sub_1004C4938(v26, v44, &qword_1014052F0);
    v28 = v27 + *(int *)(v24 + 48);
    v29 = *(_QWORD *)(v28 + 8);
    v49 = *(_QWORD *)v28;
    v31 = *(_QWORD *)(v28 + 16);
    v30 = *(_QWORD *)(v28 + 24);
    v32 = *(unsigned __int8 *)(v28 + 32);
    v33 = v22;
    swift_retain(v21);
    swift_retain(v20);
    v34 = swift_retain(v23);
    v35 = v52;
    v46(v27, v49, v29, v31, v30, v32, v34);
    v4 = v35;
    sub_1004CB800(v27, &qword_1014052F0);
    v12 = v50;
    v13 = v51;
    if (v4)
      goto LABEL_24;
  }
  v36 = __OFADD__(v13, 1);
  v37 = v13 + 1;
  if (v36)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v37 >= v42)
    goto LABEL_24;
  v38 = *(_QWORD *)(v41 + 8 * v37);
  if (v38)
  {
LABEL_19:
    v52 = v4;
    v50 = (v38 - 1) & v38;
    v51 = v37;
    v14 = __clz(__rbit64(v38)) + (v37 << 6);
    goto LABEL_5;
  }
  v39 = v37 + 1;
  if (v37 + 1 >= v42)
    goto LABEL_24;
  v38 = *(_QWORD *)(v41 + 8 * v39);
  if (v38)
    goto LABEL_18;
  v39 = v37 + 2;
  if (v37 + 2 >= v42)
    goto LABEL_24;
  v38 = *(_QWORD *)(v41 + 8 * v39);
  if (v38)
    goto LABEL_18;
  v39 = v37 + 3;
  if (v37 + 3 >= v42)
    goto LABEL_24;
  v38 = *(_QWORD *)(v41 + 8 * v39);
  if (v38)
    goto LABEL_18;
  v39 = v37 + 4;
  if (v37 + 4 >= v42)
  {
LABEL_24:
    swift_release(v48);
    return;
  }
  v38 = *(_QWORD *)(v41 + 8 * v39);
  if (v38)
  {
LABEL_18:
    v37 = v39;
    goto LABEL_19;
  }
  while (1)
  {
    v37 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v37 >= v42)
      goto LABEL_24;
    v38 = *(_QWORD *)(v41 + 8 * v37);
    ++v39;
    if (v38)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_100AF923C(uint64_t a1, void (*a2)(char *, uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;

  v3 = v2;
  v30 = a2;
  v29 = sub_1004B804C(&qword_101405620);
  __chkstk_darwin(v29);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  v10 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  v31 = a1;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v14 << 6);
LABEL_5:
    v17 = v31;
    v18 = *(_QWORD *)(v31 + 48);
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v16, v19);
    v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v16);
    v21 = v29;
    *(_QWORD *)&v9[*(int *)(v29 + 48)] = v20;
    sub_1004C4938((uint64_t)v9, (uint64_t)v6, &qword_101405620);
    v22 = *(_QWORD *)&v6[*(int *)(v21 + 48)];
    v23 = swift_retain(v20);
    v30(v6, v22, v23);
    sub_1004CB800((uint64_t)v6, &qword_101405620);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v28)
    goto LABEL_24;
  v25 = *(_QWORD *)(v27 + 8 * v14);
  if (v25)
  {
LABEL_19:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v14 << 6);
    goto LABEL_5;
  }
  v26 = v14 + 1;
  if (v14 + 1 >= v28)
    goto LABEL_24;
  v25 = *(_QWORD *)(v27 + 8 * v26);
  if (v25)
    goto LABEL_18;
  v26 = v14 + 2;
  if (v14 + 2 >= v28)
    goto LABEL_24;
  v25 = *(_QWORD *)(v27 + 8 * v26);
  if (v25)
    goto LABEL_18;
  v26 = v14 + 3;
  if (v14 + 3 >= v28)
    goto LABEL_24;
  v25 = *(_QWORD *)(v27 + 8 * v26);
  if (v25)
    goto LABEL_18;
  v26 = v14 + 4;
  if (v14 + 4 >= v28)
  {
LABEL_24:
    swift_release(v31);
    return;
  }
  v25 = *(_QWORD *)(v27 + 8 * v26);
  if (v25)
  {
LABEL_18:
    v14 = v26;
    goto LABEL_19;
  }
  while (1)
  {
    v14 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v14 >= v28)
      goto LABEL_24;
    v25 = *(_QWORD *)(v27 + 8 * v14);
    ++v26;
    if (v25)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100AF94C0(uint64_t a1, char a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain(a1);
    v4 = *(unsigned __int8 *)(a1 + 32);
    if ((_DWORD)v4 == 2)
    {
      v6 = 0x8000000100FD6350;
      v5 = 0xD000000000000010;
    }
    else
    {
      if (*(_BYTE *)(a1 + 32))
        __asm { BR              X8 }
      v5 = 0x6975755F6D657469;
      v6 = 0xE900000000000064;
    }
    v7 = v6;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease(v6);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(0xE000000000000000);
    __asm { BR              X8 }
  }
  v9._countAndFlagsBits = 0x755F6D657469202CLL;
  v9._object = (void *)0xEB00000000646975;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x755F6D6574695F73;
  v10._object = (void *)0xEB00000000646975;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(0xE200000000000000);
  v12._object = (void *)0x8000000100FEF0E0;
  v12._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v12);
  v13._object = (void *)0x8000000100FEF0C0;
  v13._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(0xE200000000000000);
  if ((a2 & 1) != 0)
  {
    v15._countAndFlagsBits = 0xD000000000000012;
    v15._object = (void *)0x8000000100FEF100;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 807419424;
    v16._object = (void *)0xE400000000000000;
    String.append(_:)(v16);
    v18 = 0x20455245485720;
    v17 = (void *)0xE700000000000000;
  }
  else
  {
    v18 = 0;
    v17 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(174);
  v19._countAndFlagsBits = 0xD000000000000019;
  v19._object = (void *)0x8000000100FEF120;
  String.append(_:)(v19);
  swift_bridgeObjectRetain(0xE000000000000000);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v21._countAndFlagsBits = 0x4553282053412029;
  v21._object = (void *)0xED0000205443454CLL;
  String.append(_:)(v21);
  swift_bridgeObjectRetain(0xE000000000000000);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v23._countAndFlagsBits = 0x204D4F524620;
  v23._object = (void *)0xE600000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x74695F6472616F62;
  v24._object = (void *)0xEB00000000736D65;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x2820455245485720;
  v25._object = (void *)0xE800000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x6975755F6D657469;
  v26._object = (void *)0xE900000000000064;
  String.append(_:)(v26);
  v27._object = (void *)0xE900000000000020;
  v27._countAndFlagsBits = 0x444E41203F203D20;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0xD000000000000010;
  v28._object = (void *)0x8000000100FD6350;
  String.append(_:)(v28);
  v29._object = (void *)0x8000000100FEF140;
  v29._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(0xE000000000000000);
  v31._countAndFlagsBits = 0x204D4F524620;
  v31._object = (void *)0xE600000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x74695F6472616F62;
  v32._object = (void *)0xEB00000000736D65;
  String.append(_:)(v32);
  v33._object = (void *)0x8000000100FEF160;
  v33._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x74695F6472616F62;
  v34._object = (void *)0xEB00000000736D65;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 46;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x755F746E65726170;
  v36._object = (void *)0xEB00000000646975;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 2112800;
  v37._object = (void *)0xE300000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0x755F6D6574695F73;
  v38._object = (void *)0xEB00000000646975;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x20444E4120;
  v39._object = (void *)0xE500000000000000;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0x74695F6472616F62;
  v40._object = (void *)0xEB00000000736D65;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 46;
  v41._object = (void *)0xE100000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 0xD000000000000010;
  v42._object = (void *)0x8000000100FD6350;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 2112800;
  v43._object = (void *)0xE300000000000000;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0xD000000000000012;
  v44._object = (void *)0x8000000100FEF0C0;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0x454C455320292029;
  v45._object = (void *)0xEB00000000205443;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(0xE000000000000000);
  v47._countAndFlagsBits = 0x7573204D4F524620;
  v47._object = (void *)0xEF736D6574695F62;
  String.append(_:)(v47);
  v48._countAndFlagsBits = v18;
  v48._object = v17;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v17);
  return 0;
}

uint64_t sub_100AF9E60(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    swift_bridgeObjectRetain(a2);
    v3._countAndFlagsBits = 46;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v5 = a1;
    v4 = (void *)a2;
  }
  else
  {
    v5 = 0;
    v4 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._countAndFlagsBits = 0x75755F7465737361;
  v6._object = (void *)0xEA00000000006469;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v5;
  v8._object = v4;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x6F69736E65747865;
  v9._object = (void *)0xE90000000000006ELL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 8236;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v5;
  v11._object = v4;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v4);
  v12._countAndFlagsBits = 0x6E6F7473626D6F74;
  v12._object = (void *)0xEE00657461645F65;
  String.append(_:)(v12);
  return v5;
}

uint64_t sub_100AF9FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  const unsigned __int8 *v17;
  const unsigned __int8 *v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  char v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  const unsigned __int8 **v25;
  _BYTE v26[16];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v26[-v12];
  sub_1006B69C4(a2, a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_release(a1);
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  result = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    v18 = sub_1006B6750(result, a1);
    result = a2 + 2;
    if (!__OFADD__(a2, 2))
    {
      v19 = v17;
      v20 = sub_1006B6620(result, a1);
      v22 = v21;
      v23 = swift_release(a1);
      if ((v22 & 1) == 0)
      {
        ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v16)(v11, v13, v7, v23);
        v24 = type metadata accessor for CRLAssetDatabaseRow(0);
        v14 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
        v16((_BYTE *)(v14 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID), v11, v7);
        v25 = (const unsigned __int8 **)(v14 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
        *v25 = v18;
        v25[1] = v19;
        *(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) = v20;
        return v14;
      }
      (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v13, v7, v23);
      swift_bridgeObjectRelease(v19);
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100AFA1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  char v61;
  char v62;
  sqlite3_int64 v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  sqlite3_int64 v68;
  char v69;
  uint64_t v70;
  sqlite3_int64 v71;
  char v72;
  uint64_t v73;
  sqlite3_int64 v74;
  char v75;
  uint64_t v76;
  _BYTE *v77;
  char v78;
  void (*v79)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  void (*v89)(_BYTE *, uint64_t);
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE v93[12];
  int v94;
  uint64_t v95;
  sqlite3_int64 v96;
  uint64_t v97;
  unint64_t v98;
  _BYTE *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4);
  v115 = &v93[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = __chkstk_darwin(v6);
  v111 = &v93[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v110 = &v93[-v10];
  v11 = __chkstk_darwin(v9);
  v114 = &v93[-v12];
  v13 = __chkstk_darwin(v11);
  v112 = &v93[-v14];
  __chkstk_darwin(v13);
  v113 = &v93[-v15];
  v16 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v17 = __chkstk_darwin(v16);
  v108 = &v93[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __chkstk_darwin(v17);
  v109 = &v93[-v20];
  v21 = __chkstk_darwin(v19);
  v23 = &v93[-v22];
  v24 = __chkstk_darwin(v21);
  v26 = &v93[-v25];
  __chkstk_darwin(v24);
  v28 = &v93[-v27];
  v29 = type metadata accessor for UUID(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = __chkstk_darwin(v29);
  v33 = &v93[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = __chkstk_darwin(v31);
  v36 = &v93[-v35];
  __chkstk_darwin(v34);
  v38 = &v93[-v37];
  v116 = a1;
  sub_1006B69C4(a2, a1, (uint64_t)v28);
  v103 = v33;
  v104 = v36;
  v105 = v26;
  v106 = a2;
  v107 = v38;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    swift_release(v116);
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v41 = v30;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v107, v28, v29);
  v42 = v106;
  result = v106 + 1;
  v43 = v116;
  if (__OFADD__(v106, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  v44 = v29;
  sub_1006B69C4(result, v116, (uint64_t)v23);
  v46 = v114;
  v45 = v115;
  v47 = (uint64_t)v105;
  sub_1004C4938((uint64_t)v23, (uint64_t)v105, (uint64_t *)&unk_1013E1A50);
  result = v42 + 2;
  if (__OFADD__(v42, 2))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v48 = sub_1006B44FC(result, v43);
  if (v49 >> 60 == 15)
  {
    swift_release(v43);
LABEL_30:
    v92 = v47;
LABEL_31:
    sub_1004CB800(v92, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v107, v44);
    return 0;
  }
  v50 = (uint64_t)v48;
  v51 = v49;
  sub_1004BE310((uint64_t)v48, v49);
  sub_10067B2E0(v50, v51);
  sub_1004B84E0((uint64_t)v45, (uint64_t)v46, type metadata accessor for CRLBoardIdentifierStorage);
  v52 = v112;
  sub_1004B84E0((uint64_t)v46, (uint64_t)v112, type metadata accessor for CRLBoardIdentifier);
  v53 = v113;
  sub_1004B84E0((uint64_t)v52, (uint64_t)v113, type metadata accessor for CRLBoardIdentifier);
  result = v42 + 3;
  if (__OFADD__(v42, 3))
    goto LABEL_38;
  v54 = sub_1006B45D4(result, v43);
  v47 = (uint64_t)v105;
  if ((v55 & 1) != 0)
  {
LABEL_28:
    swift_release(v43);
    sub_1004BE2FC(v50, v51);
    v91 = v53;
LABEL_29:
    sub_1004B84A4((uint64_t)v91, type metadata accessor for CRLBoardIdentifier);
    goto LABEL_30;
  }
  v56 = v54;
  result = v42 + 4;
  if (__OFADD__(v42, 4))
    goto LABEL_39;
  v58 = sub_1006B44FC(result, v43);
  result = v42 + 5;
  if (__OFADD__(v42, 5))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v102 = v56;
  v114 = v58;
  v115 = v57;
  v59 = sub_1006B44FC(result, v43);
  v112 = v60;
  result = v42 + 6;
  if (__OFADD__(v42, 6))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v61 = sub_1006B6418(result, v43);
  if (v61 == 2)
  {
LABEL_27:
    sub_1004BE2FC((uint64_t)v59, (unint64_t)v112);
    sub_1004BE2FC((uint64_t)v114, (unint64_t)v115);
    goto LABEL_28;
  }
  v62 = v61;
  result = v42 + 7;
  if (__OFADD__(v42, 7))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v63 = sub_1006B64F4(result, v43);
  if ((v64 & 1) != 0)
    goto LABEL_27;
  v65 = v63;
  v66 = v106;
  result = v106 + 8;
  if (__OFADD__(v106, 8))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v101 = v50;
  v99 = sub_1006B44FC(result, v43);
  v100 = v67;
  result = v66 + 9;
  if (__OFADD__(v66, 9))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v68 = sub_1006B64F4(result, v43);
  if ((v69 & 1) != 0)
  {
LABEL_33:
    sub_1004BE2FC((uint64_t)v59, (unint64_t)v112);
    sub_1004BE2FC((uint64_t)v114, (unint64_t)v115);
    sub_1004BE2FC((uint64_t)v99, v100);
    swift_release(v43);
    sub_1004BE2FC(v101, v51);
    v91 = v113;
    goto LABEL_29;
  }
  v70 = v68;
  sub_100A6AB18(0, v68, &_mh_execute_header, (uint64_t)"init(row:columnOffsetIndex:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 10690, (uint64_t)&type metadata for UInt64, &qword_1014052E8);
  result = v106 + 10;
  if (__OFADD__(v106, 10))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v71 = sub_1006B64F4(result, v43);
  if ((v72 & 1) != 0)
    goto LABEL_33;
  v73 = v71;
  result = v106 + 11;
  if (__OFADD__(v106, 11))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v74 = sub_1006B64F4(result, v43);
  if ((v75 & 1) != 0)
  {
    sub_1004BE2FC((uint64_t)v59, (unint64_t)v112);
    sub_1004BE2FC((uint64_t)v114, (unint64_t)v115);
    sub_1004BE2FC((uint64_t)v99, v100);
    swift_release(v43);
    sub_1004BE2FC(v101, v51);
    sub_1004B84A4((uint64_t)v113, type metadata accessor for CRLBoardIdentifier);
    v92 = (uint64_t)v105;
    goto LABEL_31;
  }
  v76 = v74;
  v98 = v51;
  result = v106 + 12;
  if (!__OFADD__(v106, 12))
  {
    v97 = v76;
    v106 = v73;
    v96 = sub_1006B64F4(result, v43);
    v77 = v107;
    if ((v78 & 1) == 0)
    {
      v94 = v62 & 1;
      v79 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 16);
      v80 = v104;
      v81 = v44;
      v95 = v44;
      v79(v104, v107, v44);
      v82 = v109;
      sub_1004CB7BC((uint64_t)v105, (uint64_t)v109, (uint64_t *)&unk_1013E1A50);
      v83 = v110;
      sub_1004B8460((uint64_t)v113, (uint64_t)v110, type metadata accessor for CRLBoardIdentifier);
      v84 = (uint64_t)v103;
      v79(v103, v80, v81);
      v85 = (uint64_t)v82;
      v86 = v108;
      sub_1004CB7BC((uint64_t)v82, (uint64_t)v108, (uint64_t *)&unk_1013E1A50);
      v87 = v111;
      sub_1004B8460((uint64_t)v83, (uint64_t)v111, type metadata accessor for CRLBoardIdentifier);
      v88 = type metadata accessor for CRLBoardItemDatabaseRow(0);
      swift_allocObject(v88, *(unsigned int *)(v88 + 48), *(unsigned __int16 *)(v88 + 52));
      v39 = sub_100C0227C(v84, v70, v97, v96, v106, (uint64_t)v86, (uint64_t)v87, v102, (uint64_t)v114, (uint64_t)v115, (uint64_t)v59, (uint64_t)v112, v94, v65, (uint64_t)v99, v100);
      sub_1004B84A4((uint64_t)v83, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB800(v85, (uint64_t *)&unk_1013E1A50);
      v89 = *(void (**)(_BYTE *, uint64_t))(v41 + 8);
      v90 = v95;
      v89(v104, v95);
      swift_release(v116);
      sub_1004BE2FC(v101, v98);
      sub_1004B84A4((uint64_t)v113, type metadata accessor for CRLBoardIdentifier);
      sub_1004CB800((uint64_t)v105, (uint64_t *)&unk_1013E1A50);
      v89(v107, v90);
      return v39;
    }
    sub_1004BE2FC((uint64_t)v59, (unint64_t)v112);
    sub_1004BE2FC((uint64_t)v114, (unint64_t)v115);
    sub_1004BE2FC((uint64_t)v99, v100);
    swift_release(v43);
    sub_1004BE2FC(v101, v98);
    sub_1004B84A4((uint64_t)v113, type metadata accessor for CRLBoardIdentifier);
    sub_1004CB800((uint64_t)v105, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v77, v44);
    return 0;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_100AFAA78(uint64_t a1, void *a2)
{
  void *v2;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;

  v2 = a2;
  if (String.count.getter(a1, a2) < 1)
  {
    v5 = 0;
    v2 = (void *)0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v4._countAndFlagsBits = 46;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    v5 = a1;
  }
  _StringGuts.grow(_:)(52);
  v6._countAndFlagsBits = v5;
  v6._object = v2;
  String.append(_:)(v6);
  v7._object = (void *)0x8000000100FD6350;
  v7._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v5;
  v9._object = v2;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x7461645F74647263;
  v10._object = (void *)0xE900000000000061;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v5;
  v12._object = v2;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x726F7661665F7369;
  v13._object = (void *)0xEB00000000657469;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = v5;
  v15._object = v2;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD00000000000001BLL;
  v16._object = (void *)0x8000000100FEEB00;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v5;
  v18._object = v2;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x6174735F77656976;
  v19._object = (void *)0xEF617461645F6574;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v5;
  v21._object = v2;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000019;
  v22._object = (void *)0x8000000100FEEB20;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v5;
  v24._object = v2;
  String.append(_:)(v24);
  v25._object = (void *)0x8000000100FEEB40;
  v25._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 8236;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v5;
  v27._object = v2;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x7461645F636E7973;
  v28._object = (void *)0xE900000000000061;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = v5;
  v30._object = v2;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v2);
  v31._countAndFlagsBits = 0xD000000000000026;
  v31._object = (void *)0x8000000100FEEB60;
  String.append(_:)(v31);
  return 0;
}

uint64_t sub_100AFAD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  _BYTE *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  _BYTE *v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  sqlite3_int64 v38;
  char v39;
  _BYTE *v40;
  unint64_t v41;
  sqlite3_int64 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  sqlite3_int64 v46;
  unint64_t v47;
  _BYTE *v48;
  int v49;
  sqlite3_int64 v50;
  _BYTE *v51;
  unint64_t v52;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v46 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v46 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v46 - v17;
  v19 = sub_1006B44FC(a2, a1);
  if (v20 >> 60 == 15)
  {
    swift_release(a1);
    return 0;
  }
  v21 = (uint64_t)v19;
  v22 = v20;
  sub_1004BE310((uint64_t)v19, v20);
  sub_10067B2E0(v21, v22);
  sub_1004B84E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84E0((uint64_t)v16, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
  result = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v24 = sub_1006B44FC(result, a1);
  if (v25 >> 60 == 15)
  {
    v26 = v21;
    v27 = v22;
LABEL_13:
    sub_1004BE2FC(v26, v27);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  v28 = (uint64_t)v24;
  result = a2 + 2;
  if (__OFADD__(a2, 2))
    goto LABEL_26;
  v29 = v25;
  v30 = sub_1006B6418(result, a1);
  if (v30 == 2)
  {
LABEL_12:
    sub_1004BE2FC(v21, v22);
    v26 = v28;
    v27 = v29;
    goto LABEL_13;
  }
  v31 = v30;
  result = a2 + 3;
  if (__OFADD__(a2, 3))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v32 = sub_1006B6418(result, a1);
  if (v32 == 2)
    goto LABEL_12;
  v33 = v32;
  result = a2 + 4;
  if (__OFADD__(a2, 4))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v34 = sub_1006B44FC(result, a1);
  if (v35 >> 60 == 15)
    goto LABEL_12;
  v51 = v34;
  v52 = v35;
  result = a2 + 5;
  if (__OFADD__(a2, 5))
    goto LABEL_29;
  v50 = sub_1006B64F4(result, a1);
  v49 = v37;
  result = a2 + 6;
  if (__OFADD__(a2, 6))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v38 = sub_1006B64F4(result, a1);
  if ((v39 & 1) != 0)
  {
    sub_1004BE2FC(v21, v22);
    sub_1004BE2FC(v28, v29);
    v26 = (uint64_t)v51;
    v27 = v52;
    goto LABEL_13;
  }
  v46 = v38;
  result = a2 + 7;
  if (__OFADD__(a2, 7))
    goto LABEL_31;
  v40 = sub_1006B44FC(result, a1);
  v47 = v41;
  v48 = v40;
  result = a2 + 8;
  if (!__OFADD__(a2, 8))
  {
    v42 = sub_1006B64F4(result, a1);
    if ((v43 & 1) == 0)
    {
      v44 = v42;
      v49 &= 1u;
      sub_1004B8460((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      v45 = type metadata accessor for CRLUserBoardMetadataDatabaseRow(0);
      swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
      v36 = sub_10073DDDC((uint64_t)v10, v28, v29, v31 & 1, v33 & 1, (uint64_t)v51, v52, v50, v49, v46, (uint64_t)v48, v47, 2u, 2u, 2, v44);
      swift_release(a1);
      sub_1004BE2FC(v21, v22);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      return v36;
    }
    sub_1004BE2FC(v21, v22);
    sub_1004BE2FC(v28, v29);
    sub_1004BE2FC((uint64_t)v51, v52);
    v27 = v47;
    v26 = (uint64_t)v48;
    goto LABEL_13;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100AFB140()
{
  return sub_100634AA4(&qword_1014052E0);
}

uint64_t sub_100AFB14C(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1004B804C(&qword_1014052E0);
  return sub_100A9E4E8(a1, v3);
}

uint64_t sub_100AFB19C()
{
  uint64_t v0;
  unint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >= 2)
    swift_bridgeObjectRelease(v1);
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100AFB1E0()
{
  uint64_t v0;

  return sub_100A9E298(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void (**)(__n128))(v0 + 48));
}

unint64_t sub_100AFB1F4(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain(result);
  return result;
}

double sub_100AFB204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_100A9E554(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

void sub_100AFB21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_100A9E8EC(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

unint64_t sub_100AFB234(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease(result);
  return result;
}

_QWORD *sub_100AFB244(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE v46[72];
  uint64_t v47;
  char v48;
  char v49;
  _BYTE v50[72];
  _BYTE v51[72];
  _BYTE v52[32];

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8);
  if (v2 >> 60 == 15)
  {
    if (qword_1013DD858 != -1)
      swift_once(&qword_1013DD858, sub_100A05554);
    swift_beginAccess(&static OS_os_log.boardStore, v52, 0, 0);
    v3 = (void *)static OS_os_log.boardStore;
    v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v4, v51);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v6 = v3;
    v7 = UUID.uuidString.getter(v6);
    v9 = v8;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v10 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v10;
    *(_QWORD *)(inited + 32) = v7;
    *(_QWORD *)(inited + 40) = v9;
    v11 = static os_log_type_t.error.getter(v10);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v11, "Remote record is missing commonData: %@", 39, 2, inited);
    swift_setDeallocating(inited);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v12);

    return 0;
  }
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData);
  sub_1007BD85C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue));
  v15 = v14;
  v17 = v16;
  if ((v16 & 0x100) != 0)
  {
    sub_1004BE310(v13, v2);
    if (qword_1013DD858 != -1)
      swift_once(&qword_1013DD858, sub_100A05554);
    swift_beginAccess(&static OS_os_log.boardStore, v52, 0, 0);
    v29 = (void *)static OS_os_log.boardStore;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v31 = swift_initStackObject(v30, v50);
    *(_OWORD *)(v31 + 16) = xmmword_100EF5E40;
    v47 = v15;
    v48 = v17;
    v49 = 1;
    v32 = v29;
    v33 = String.init<A>(describing:)(&v47, &type metadata for CRLSerializableObjectType);
    v35 = v34;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    v36 = sub_1004CFC2C();
    *(_QWORD *)(v31 + 64) = v36;
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    v37 = static os_log_type_t.error.getter(v36);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v37, "Remote record has invalid board item type: %@", 45, 2, v31);
    swift_setDeallocating(v31);
    v38 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v31 + 32, 1, v38);

    goto LABEL_13;
  }
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8);
  if (v18 >> 60 == 15)
  {
    sub_1004BE310(v13, v2);
    if (qword_1013DD858 != -1)
      swift_once(&qword_1013DD858, sub_100A05554);
    swift_beginAccess(&static OS_os_log.boardStore, v52, 0, 0);
    v19 = (void *)static OS_os_log.boardStore;
    v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v21 = swift_initStackObject(v20, v46);
    *(_OWORD *)(v21 + 16) = xmmword_100EF5E40;
    v22 = v19;
    v23 = UUID.uuidString.getter(v22);
    v25 = v24;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    v26 = sub_1004CFC2C();
    *(_QWORD *)(v21 + 64) = v26;
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 40) = v25;
    v27 = static os_log_type_t.error.getter(v26);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v27, "Remote record is missing specificData: %@", 41, 2, v21);
    swift_setDeallocating(v21);
    v28 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v21 + 32, 1, v28);

LABEL_13:
    sub_1004BE2FC(v13, v2);
    return 0;
  }
  v40 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData);
  v41 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
  v42 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 8);
  v43 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 16);
  v44 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
  sub_10057939C(v13, v2);
  sub_10057939C(v40, v18);
  v45 = sub_10089BAB8(v15, v17 & 1, v41, v42, v43, v44, v13, v2, v40, v18);
  sub_1004BE2FC(v40, v18);
  sub_1004BE2FC(v13, v2);
  return v45;
}

uint64_t sub_100AFB6C4(uint64_t a1, void *a2)
{
  void *v2;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;

  v2 = a2;
  if (String.count.getter(a1, a2) < 1)
  {
    v5 = 0;
    v2 = (void *)0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v4._countAndFlagsBits = 46;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    v5 = a1;
  }
  _StringGuts.grow(_:)(76);
  v6._countAndFlagsBits = v5;
  v6._object = v2;
  String.append(_:)(v6);
  v7._object = (void *)0xE900000000000064;
  v7._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v5;
  v9._object = v2;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x755F746E65726170;
  v10._object = (void *)0xEB00000000646975;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v5;
  v12._object = v2;
  String.append(_:)(v12);
  v13._object = (void *)0x8000000100FD6350;
  v13._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = v5;
  v15._object = v2;
  String.append(_:)(v15);
  v16._object = (void *)0xE900000000000065;
  v16._countAndFlagsBits = 0x7079745F6D657469;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v5;
  v18._object = v2;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x645F6E6F6D6D6F63;
  v19._object = (void *)0xEB00000000617461;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v5;
  v21._object = v2;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0x6369666963657073;
  v22._object = (void *)0xED0000617461645FLL;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v5;
  v24._object = v2;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x6E6F7473626D6F74;
  v25._object = (void *)0xEA00000000006465;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 8236;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v5;
  v27._object = v2;
  String.append(_:)(v27);
  v28._object = (void *)0x8000000100FEEB40;
  v28._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = v5;
  v30._object = v2;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x7461645F636E7973;
  v31._object = (void *)0xE900000000000061;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 8236;
  v32._object = (void *)0xE200000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = v5;
  v33._object = v2;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000014;
  v34._object = (void *)0x8000000100FEEDE0;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 8236;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = v5;
  v36._object = v2;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x6F5F7463656A626FLL;
  v37._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 8236;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  v39._countAndFlagsBits = v5;
  v39._object = v2;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0xD00000000000002DLL;
  v40._object = (void *)0x8000000100FEEFF0;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 8236;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = v5;
  v42._object = v2;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v2);
  v43._countAndFlagsBits = 0xD000000000000026;
  v43._object = (void *)0x8000000100FEEB60;
  String.append(_:)(v43);
  return 0;
}

void sub_100AFBAA0(unint64_t a1)
{
  uint64_t v1;

  sub_100AACCB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_100AFBAAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    swift_bridgeObjectRetain(a2);
    v3._countAndFlagsBits = 46;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v5 = a1;
    v4 = (void *)a2;
  }
  else
  {
    v5 = 0;
    v4 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(64);
  v6._countAndFlagsBits = v5;
  v6._object = v4;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0xD000000000000011;
  v7._object = (void *)0x8000000100FEF210;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 8236;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v5;
  v9._object = v4;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x695F74656B637562;
  v10._object = (void *)0xEC0000007865646ELL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = v5;
  v12._object = v4;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x645F74656B637562;
  v13._object = (void *)0xEB00000000617461;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = v5;
  v15._object = v4;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD000000000000010;
  v16._object = (void *)0x8000000100FEEB40;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = v5;
  v18._object = v4;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x7461645F636E7973;
  v19._object = (void *)0xE900000000000061;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v5;
  v21._object = v4;
  String.append(_:)(v21);
  v22._object = (void *)0x8000000100FEF270;
  v22._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v5;
  v24._object = v4;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0xD00000000000001FLL;
  v25._object = (void *)0x8000000100FEF290;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 8236;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v5;
  v27._object = v4;
  String.append(_:)(v27);
  v28._object = (void *)0x8000000100FEF2B0;
  v28._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = v5;
  v30._object = v4;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0xD000000000000038;
  v31._object = (void *)0x8000000100FEF2D0;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 8236;
  v32._object = (void *)0xE200000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = v5;
  v33._object = v4;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000037;
  v34._object = (void *)0x8000000100FEF310;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 8236;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = v5;
  v36._object = v4;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v4);
  v37._countAndFlagsBits = 0xD000000000000026;
  v37._object = (void *)0x8000000100FEEB60;
  String.append(_:)(v37);
  return 0;
}

uint64_t sub_100AFBDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _BYTE *v27;
  unint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  sqlite3_int64 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  unint64_t v39;
  sqlite3_int64 v40;
  char v41;
  sqlite3_int64 v42;
  char v43;
  sqlite3_int64 v44;
  char v45;
  sqlite3_int64 v46;
  char v47;
  sqlite3_int64 v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  sqlite3_int64 v54;
  sqlite3_int64 v55;
  sqlite3_int64 v56;
  sqlite3_int64 v57;
  unint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;

  v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v53 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v53 - v17;
  v19 = sub_1006B44FC(a2, a1);
  if (v20 >> 60 == 15)
  {
    swift_release(a1);
    return 0;
  }
  v21 = (uint64_t)v19;
  v22 = v20;
  sub_1004BE310((uint64_t)v19, v20);
  sub_10067B2E0(v21, v22);
  sub_1004B84E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84E0((uint64_t)v16, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
  result = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v24 = sub_1006B45D4(result, a1);
  if ((v25 & 1) != 0)
  {
LABEL_7:
    v29 = (_BYTE *)v21;
    v30 = v22;
LABEL_8:
    sub_1004BE2FC((uint64_t)v29, v30);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  v26 = v24;
  result = a2 + 2;
  if (__OFADD__(a2, 2))
    goto LABEL_29;
  v27 = sub_1006B44FC(result, a1);
  if (v28 >> 60 == 15)
    goto LABEL_7;
  v32 = (uint64_t)v27;
  result = a2 + 3;
  if (__OFADD__(a2, 3))
    goto LABEL_30;
  v33 = v28;
  v34 = sub_1006B64F4(result, a1);
  if ((v35 & 1) != 0)
  {
    sub_1004BE2FC(v21, v22);
    v29 = (_BYTE *)v32;
    v30 = v33;
    goto LABEL_8;
  }
  v36 = v34;
  result = a2 + 4;
  if (__OFADD__(a2, 4))
    goto LABEL_31;
  v60 = sub_1006B44FC(result, a1);
  v61 = v37;
  result = a2 + 5;
  if (__OFADD__(a2, 5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v38 = sub_1006B44FC(result, a1);
  v58 = v39;
  v59 = v38;
  result = a2 + 6;
  if (__OFADD__(a2, 6))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v40 = sub_1006B64F4(result, a1);
  if ((v41 & 1) != 0)
  {
LABEL_27:
    sub_1004BE2FC(v21, v22);
    sub_1004BE2FC(v32, v33);
    sub_1004BE2FC((uint64_t)v59, v58);
    v29 = v60;
    v30 = v61;
    goto LABEL_8;
  }
  v57 = v40;
  sub_100A6AB18(0, v40, &_mh_execute_header, (uint64_t)"init(row:columnOffsetIndex:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 10920, (uint64_t)&type metadata for UInt64, &qword_1014052E8);
  result = a2 + 7;
  if (__OFADD__(a2, 7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v42 = sub_1006B64F4(result, a1);
  if ((v43 & 1) != 0)
    goto LABEL_27;
  v56 = v42;
  sub_100A6AB18(0, v42, &_mh_execute_header, (uint64_t)"init(row:columnOffsetIndex:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 10925, (uint64_t)&type metadata for UInt64, &qword_1014052E8);
  result = a2 + 8;
  if (__OFADD__(a2, 8))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v44 = sub_1006B64F4(result, a1);
  if ((v45 & 1) != 0)
    goto LABEL_27;
  v55 = v44;
  result = a2 + 9;
  if (__OFADD__(a2, 9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v46 = sub_1006B64F4(result, a1);
  if ((v47 & 1) != 0)
    goto LABEL_27;
  v54 = v46;
  result = a2 + 10;
  if (!__OFADD__(a2, 10))
  {
    v48 = sub_1006B64F4(result, a1);
    if ((v49 & 1) == 0)
    {
      v50 = v48;
      sub_1004B8460((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      *((_QWORD *)&v52 + 1) = v54;
      *(_QWORD *)&v52 = v55;
      *((_QWORD *)&v51 + 1) = v56;
      *(_QWORD *)&v51 = v57;
      v31 = sub_1008EE874((uint64_t)v10, v26, v32, v33, v36, (uint64_t)v60, v61, (uint64_t)v59, v58, v51, v52, v50);
      swift_release(a1);
      sub_1004BE2FC(v21, v22);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      return v31;
    }
    goto LABEL_27;
  }
LABEL_37:
  __break(1u);
  return result;
}

_QWORD *sub_100AFC268(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_1004B804C(&qword_101405EC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketIndex);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData + 8);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 8);
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 16);
  v22 = v9;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 24);
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions + 32);
  v20 = v11;
  sub_1004BE310(v7, v8);
  v12 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  v13 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  Capsule<>.init(serializedData:allowedAppFormats:)(v7, v8, 0, v12, v13);
  v14 = sub_1004B804C((uint64_t *)&unk_101406AD0);
  v15 = (_QWORD *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *((_BYTE *)v15 + *(_QWORD *)(*v15 + 136)) = 0;
  v15[2] = v6;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))((char *)v15 + *(_QWORD *)(*v15 + 120), v5, v2);
  *((_BYTE *)v15 + *(_QWORD *)(*v15 + 136)) = 0;
  swift_release(a1);
  v16 = (_QWORD *)((char *)v15 + *(_QWORD *)(*v15 + 128));
  *v16 = v22;
  v16[1] = v10;
  v17 = v20;
  v16[2] = v21;
  v16[3] = v17;
  v16[4] = v19;
  return v15;
}

unint64_t sub_100AFC540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  _BYTE v9[24];

  v2 = v1;
  swift_beginAccess(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120), v9, 33, 0);
  v4 = sub_1004B804C(&qword_101405EC0);
  v5 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  v6 = sub_1004CBA30(&qword_101405F20, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  v7 = Capsule.merge<A>(_:)(a1, v4, v5, v6);
  swift_endAccess(v9);
  result = sub_100AD5324();
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = (*(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) | v7) & 1;
  return result;
}

uint64_t sub_100AFC61C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_101406500);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v23[-v13];
  v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData);
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8);
  if (v16 >> 60 == 15)
  {
    swift_release(a1);
    return 0;
  }
  else
  {
    v18 = *v15;
    sub_1004BE310(*v15, *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8));
    v19 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
    CRDT.init(serializedData:)(v18, v16, v8, v19);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    sub_1004B84E0((uint64_t)v7, (uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
    sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLUserBoardMetadataCRDTData);
    v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    swift_release(a1);
    v21 = type metadata accessor for CRLUserBoardMetadataData(0);
    v17 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    sub_1004B84E0((uint64_t)v4, v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v11, v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
    *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v20;
  }
  return v17;
}

uint64_t sub_100AFC8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = 0; v4; i = 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    a2 = *(_QWORD *)(a2 + 24);
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain(v7);
      }
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v8 == v6 && v9 == a2)
      {
        swift_release(v7);
        return i;
      }
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, a2, 0);
      swift_release(v7);
      if ((v11 & 1) != 0)
        return i;
      v12 = i + 1;
      if (__OFADD__(i, 1))
        break;
      ++i;
      if (v12 == v4)
        return 0;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return i;
}

uint64_t sub_100AFC9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  if (a1 < 0)
    v9 = a1;
  else
    v9 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(a1);
  if (!v4)
    return 0;
LABEL_3:
  type metadata accessor for UUID(0);
  v5 = 0;
  a2 += *(_QWORD *)(*(_QWORD *)a2 + 104);
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }
    v7 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 104);
    sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    LOBYTE(v7) = dispatch thunk of static Equatable.== infix(_:_:)(v7, a2);
    swift_release(v6);
    if ((v7 & 1) != 0)
      return v5;
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4)
      return 0;
  }
}

id sub_100AFCB48(char *a1, void *a2, uint64_t a3, char *a4)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  Swift::String v64;
  __int128 v65;
  id v66;
  char *v67;
  __n128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  __int128 v75;
  id v76;
  __n128 v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  void (*v93)(char *, uint64_t);
  id v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  objc_class *ObjectType;
  unsigned int v106;
  void (*v107)(char *, _QWORD, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  objc_super v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  char v124[8];

  v111 = a4;
  v100 = a3;
  v112 = a2;
  v115 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v5 = type metadata accessor for URL(0);
  v113 = *(_QWORD *)(v5 - 8);
  v114 = v5;
  __chkstk_darwin(v5);
  v103 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v104 = (char *)&v96 - v8;
  v116 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v98 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_hasAttemptedVacuum] = 0;
  v17 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_logCategory;
  v18 = qword_1013DD858;
  v19 = v4;
  if (v18 != -1)
    swift_once(&qword_1013DD858, sub_100A05554);
  swift_beginAccess(&static OS_os_log.boardStore, v124, 0, 0);
  v20 = (void *)static OS_os_log.boardStore;
  *(_QWORD *)&v4[v17] = static OS_os_log.boardStore;
  v21 = &v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_storeName];
  *(_QWORD *)v21 = 0x7461446472616F62;
  *((_QWORD *)v21 + 1) = 0xE900000000000061;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_recordIDsToOverwrite] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_syncHelper] = 0;
  v22 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock;
  v23 = type metadata accessor for CRLUnfairLock();
  v24 = swift_allocObject(v23, 24, 7);
  v25 = v20;
  v26 = (_DWORD *)swift_slowAlloc(4, -1);
  *v26 = 0;
  *(_QWORD *)(v24 + 16) = v26;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)&v19[v22] = v24;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager] = 0;
  v27 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock;
  v28 = swift_allocObject(v23, 24, 7);
  v29 = (_DWORD *)swift_slowAlloc(4, -1);
  *v29 = 0;
  *(_QWORD *)(v28 + 16) = v29;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)&v19[v27] = v28;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager] = 0;
  v30 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock;
  v31 = swift_allocObject(v23, 24, 7);
  v32 = (_DWORD *)swift_slowAlloc(4, -1);
  *v32 = 0;
  *(_QWORD *)(v31 + 16) = v32;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)&v19[v30] = v31;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager] = 0;
  v33 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_assetUploadTracker;
  v34 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v35);
  *(_QWORD *)&v119 = _swiftEmptyArrayStorage;
  v36 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v37 = sub_1004B804C(&qword_1013FF6B0);
  v38 = sub_1004CBA30((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0, (uint64_t)&protocol conformance descriptor for [A]);
  v99 = v37;
  v108 = v38;
  v101 = v11;
  v109 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v37, v38, v11, v36);
  v39 = *(void (**)(_QWORD))(v9 + 104);
  v40 = v98;
  v106 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v107 = (void (*)(char *, _QWORD, uint64_t))v39;
  v39(v98);
  v102 = v13;
  v110 = v34;
  v41 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x8000000100FF1FE0, v16, v13, v40, 0);
  v42 = type metadata accessor for CRLAssetUploadTracker();
  v43 = swift_allocObject(v42, 56, 7);
  v44 = type metadata accessor for CRLAssetUploadObserverManager();
  v45 = swift_allocObject(v44, 120, 15);
  swift_defaultActor_initialize(v45, v46);
  *(_QWORD *)(v45 + 112) = objc_msgSend(objc_allocWithZone((Class)NSHashTable), "initWithOptions:capacity:", 5, 1);
  *(_QWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 24) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v43 + 32) = _swiftEmptyDictionarySingleton;
  *(_BYTE *)(v43 + 40) = 0;
  *(_QWORD *)(v43 + 48) = v41;
  *(_QWORD *)&v19[v33] = v43;
  v47 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_accountUtilities;
  v48 = type metadata accessor for CRLAccountUtilities();
  *(_QWORD *)&v19[v47] = swift_allocObject(v48, 16, 7);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_transientSyncExclusions] = _swiftEmptyDictionarySingleton;
  v49 = (void *)objc_opt_self(NSUserDefaults);
  v50 = objc_msgSend(v49, "standardUserDefaults");
  v51 = objc_msgSend(v50, "objectForKey:", CFSTR("CRLDeleteBoardCleanupTolerance"));

  if (v51)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v51);
    swift_unknownObjectRelease(v51);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_1004C4938((uint64_t)&v122, (uint64_t)&v119, &qword_1013E0230);
  if (*((_QWORD *)&v120 + 1))
  {
    if ((swift_dynamicCast(&v117, &v119, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v52 = v117;
      goto LABEL_11;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)&v119, &qword_1013E0230);
  }
  v52 = 0x40AC200000000000;
LABEL_11:
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__deletedBoardsCleanupTolerance] = v52;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_deletedBoardsCleanupWorkItem] = 0;
  v53 = objc_msgSend(v49, "standardUserDefaults");
  v54 = objc_msgSend(v53, "objectForKey:", CFSTR("CRLDeletedBoardTTL"));

  if (v54)
  {
    _bridgeAnyObjectToAny(_:)(&v122, v54);
    swift_unknownObjectRelease(v54);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  v55 = v115;
  sub_1004C4938((uint64_t)&v122, (uint64_t)&v119, &qword_1013E0230);
  if (*((_QWORD *)&v120 + 1))
  {
    v56 = v40;
    if ((swift_dynamicCast(&v117, &v119, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v57 = v117;
      goto LABEL_19;
    }
  }
  else
  {
    v56 = v40;
    sub_1004CB800((uint64_t)&v119, &qword_1013E0230);
  }
  v57 = 0x4143C68000000000;
LABEL_19:
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__deletedBoardTTL] = v57;
  v98 = *(char **)(v113 + 16);
  ((void (*)(char *, char *, uint64_t))v98)(&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_storeURL], v55, v114);
  v58 = v112;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_temporaryDirectory] = v112;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_lastFetchResultsTime] = 0;
  v59 = v100;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_sideStore] = v100;
  v60 = v111;
  v97 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue] = v111;
  v61 = v58;
  swift_retain(v59);
  v62 = v60;
  *(_QWORD *)&v119 = OS_dispatch_queue.label.getter();
  *((_QWORD *)&v119 + 1) = v63;
  v64._countAndFlagsBits = 0x646165722ELL;
  v64._object = (void *)0xE500000000000000;
  String.append(_:)(v64);
  v65 = v119;
  v66 = v62;
  v111 = v19;
  v67 = v16;
  static DispatchQoS.unspecified.getter(v68);
  *(_QWORD *)&v119 = _swiftEmptyArrayStorage;
  v69 = v102;
  v70 = v99;
  v71 = v101;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v99, v108, v101, v109);
  v107(v56, v106, v116);
  v72 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v65, *((_QWORD *)&v65 + 1), v67, v69, v56, v62);
  *(_QWORD *)&v111[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_readQueue] = v72;
  *(_QWORD *)&v119 = OS_dispatch_queue.label.getter();
  *((_QWORD *)&v119 + 1) = v73;
  v74._countAndFlagsBits = 0x65746972772ELL;
  v74._object = (void *)0xE600000000000000;
  String.append(_:)(v74);
  v75 = v119;
  v76 = v66;
  static DispatchQoS.unspecified.getter(v77);
  *(_QWORD *)&v119 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v70, v108, v71, v109);
  v107(v56, v106, v116);
  v78 = v67;
  v79 = v111;
  *(_QWORD *)&v79[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v75, *((_QWORD *)&v75 + 1), v78, v69, v56, v62);
  if (v112)
  {
    v80 = v104;
    if (qword_1013DCE20 != -1)
      swift_once(&qword_1013DCE20, sub_1006B47E8);
    v81 = v114;
    v82 = sub_1004F2A1C(v114, (uint64_t)qword_10147F150);
    v83 = (void (*)(char *, char *, uint64_t))v98;
    ((void (*)(char *, uint64_t, uint64_t))v98)(v80, v82, v81);
    v84 = v115;
  }
  else
  {
    v80 = v104;
    v84 = v115;
    URL.appendingPathComponent(_:)(0x642E736472616F62, 0xE900000000000062);
    v81 = v114;
    v83 = (void (*)(char *, char *, uint64_t))v98;
  }
  v85 = v103;
  v83(v103, v80, v81);
  v86 = *(void **)&v79[v97];
  v87 = type metadata accessor for SQLiteDatabase(0);
  v88 = swift_allocObject(v87, *(unsigned int *)(v87 + 48), *(unsigned __int16 *)(v87 + 52));
  *(_QWORD *)(v88 + 16) = 0;
  *(_BYTE *)(v88 + 24) = 0;
  v89 = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v88 + OBJC_IVAR____TtC8Freeform14SQLiteDatabase_url, v85, v81);
  *(_QWORD *)(v88 + 32) = v86;
  *(_QWORD *)&v79[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database] = v88;
  type metadata accessor for CRContext(0);
  v121 = 0;
  v119 = 0u;
  v120 = 0u;
  v90 = v86;
  v91 = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, &v119);
  sub_1004CB800((uint64_t)&v119, (uint64_t *)&unk_1014064C0);
  *(_QWORD *)&v79[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext] = v91;
  v92 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v93 = *(void (**)(char *, uint64_t))(v89 + 8);
  v93(v80, v81);
  *(_QWORD *)&v79[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_assetBundle] = v92;

  v118.receiver = v79;
  v118.super_class = ObjectType;
  v94 = objc_msgSendSuper2(&v118, "init");
  v93(v84, v81);
  return v94;
}

id sub_100AFD5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;

  v29 = a2;
  v26 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  v25 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v30 = _swiftEmptyArrayStorage;
  v18 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_1004B804C(&qword_1013FF6B0);
  v20 = sub_1004CBA30((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v19, v20, v6, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  v21 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x8000000100FF1FC0, v11, v8, v5, 0);
  v22 = objc_allocWithZone((Class)type metadata accessor for CRLBoardDataStore(0));
  v23 = sub_100AFCB48(v16, 0, v29, v21);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v26, v12);
  return v23;
}

double *sub_100AFD864(double *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSString v13;
  id v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  void (*v26)(char *, _QWORD, uint64_t);
  char *v27;
  double *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  double *v34;
  void (*v35)(_QWORD, _QWORD, _QWORD);
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v44;
  id v45;
  __n128 v46;
  char *v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(_QWORD, _QWORD, _QWORD);
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  double *v65;
  uint64_t v66;

  v56 = a1;
  v59 = type metadata accessor for URL(0);
  v57 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v58 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v64 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v63 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v13 = String._bridgeToObjectiveC()();
  v65 = 0;
  v14 = objc_msgSend(v12, "initWithSignature:error:", v13, &v65);

  v15 = v65;
  v61 = v14;
  if (v14)
  {
    v53 = v2;
    v16 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
    v65 = (double *)OS_dispatch_queue.label.getter(v15);
    v66 = v17;
    v18._countAndFlagsBits = 0x656469732ELL;
    v18._object = (void *)0xE500000000000000;
    String.append(_:)(v18);
    v19 = v66;
    v56 = v65;
    static DispatchQoS.unspecified.getter(v20);
    v65 = _swiftEmptyArrayStorage;
    v21 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
    v22 = sub_1004B804C(&qword_1013FF6B0);
    v23 = sub_1004CBA30((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0, (uint64_t)&protocol conformance descriptor for [A]);
    v24 = v63;
    v54 = v22;
    v55 = v7;
    v51 = v23;
    v52 = v21;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v22, v23, v7, v21);
    v25 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
    v26 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v27 = v64;
    v26(v64, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v62);
    v28 = v56;
    v56 = (double *)v16;
    v29 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v28, v19, v11, v24, v27, 0);
    v30 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, 1, 1, v59);
    v31 = type metadata accessor for CRLSideStore();
    v32 = swift_allocObject(v31, 64, 7);
    v33 = v29;
    v34 = (double *)v32;
    v35 = v60;
    v36 = sub_100810290(v30, v33);
    if (v35)
    {

    }
    else
    {
      v38 = (uint64_t)v36;
      LODWORD(v59) = v25;
      v60 = (void (*)(_QWORD, _QWORD, _QWORD))v26;
      v40 = v54;
      v39 = v55;
      v42 = v63;
      v41 = v64;
      OS_dispatch_queue.sync<A>(execute:)(sub_100B000EC, v36, (char *)&type metadata for () + 8);

      v44 = v61;
      v45 = objc_msgSend(v61, "URL");
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v45);

      v58 = (char *)v44;
      static DispatchQoS.unspecified.getter(v46);
      v65 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v40, v51, v39, v52);
      v60(v41, v59, v62);
      v47 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x8000000100FF1FC0, v11, v42, v41, 0);
      v48 = objc_allocWithZone((Class)type metadata accessor for CRLBoardDataStore(0));
      v34 = (double *)sub_100AFCB48(v53, v44, v38, v47);
      v49 = v58;

      swift_release(v38);
    }
  }
  else
  {
    v34 = v65;
    _convertNSErrorToError(_:)(v15);

    swift_willThrow(v37);
  }
  return v34;
}

uint64_t sub_100AFDD68(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *a1;
  swift_bridgeObjectRetain(*a1);
  v8 = sub_100AFC8BC(v7, a2);
  v10 = v9;
  v11 = v3;
  swift_bridgeObjectRelease(v6);
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_64;
    v10 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_65:
      if (v10 < 0)
        v35 = v10;
      else
        v35 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v10);
      if (v12 != v36)
        goto LABEL_6;
    }
    else if (v12 != *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v13 = *(_QWORD *)(a2 + 16);
      a2 = *(_QWORD *)(a2 + 24);
      v12 = v8 + 5;
      v39 = v11;
      while (1)
      {
        v14 = v12 - 4;
        v15 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v15);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v14 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v10 = *(_QWORD *)(v15 + 8 * v12);
          swift_retain(v10);
        }
        v16 = *(_QWORD *)(v10 + 16);
        v17 = *(_QWORD *)(v10 + 24);
        if (v16 == v13 && v17 == a2)
        {
          swift_release(v10);
          goto LABEL_39;
        }
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v13, a2, 0);
        swift_release(v10);
        if ((v19 & 1) != 0)
          goto LABEL_39;
        if (v14 != v8)
          break;
LABEL_35:
        if (__OFADD__(v8++, 1))
          goto LABEL_57;
LABEL_39:
        v30 = v12 - 3;
        if (__OFADD__(v14, 1))
          goto LABEL_56;
        v10 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (v10 < 0)
            v32 = *a1;
          else
            v32 = v10 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v31 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v10);
        }
        else
        {
          v31 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v12;
        if (v30 == v31)
          return v8;
      }
      v11 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, *a1);
        v11 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v14 & 0x8000000000000000) != 0)
            goto LABEL_60;
          if (v14 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_61;
          v21 = *(_QWORD *)(v11 + 8 * v12);
          swift_retain(v21);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_58;
        if (v8 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v20 = *(_QWORD *)(v11 + 8 * v8 + 32);
        swift_retain(v20);
        if ((v11 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v11);
      v11 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
      *a1 = v11;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v11 < 0 || (v11 & 0x4000000000000000) != 0)
      {
        v11 = a3(v11);
        *a1 = v11;
      }
      v23 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v21;
      swift_release(v23);
      specialized Array._endMutation()(v24);
      v10 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v10;
      if (!v25 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = a3(v10);
        *a1 = v10;
      }
      v11 = v39;
      if ((v14 & 0x8000000000000000) != 0)
        goto LABEL_62;
      v26 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v14 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_63;
      v27 = *(_QWORD *)(v26 + 8 * v12);
      *(_QWORD *)(v26 + 8 * v12) = v20;
      swift_release(v27);
      specialized Array._endMutation()(v28);
      goto LABEL_35;
    }
    return v8;
  }
  v33 = *a1;
  if (!((unint64_t)v33 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v33 < 0)
    v37 = v33;
  else
    v37 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v33);
  return v38;
}

uint64_t sub_100AFE0CC(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *a1;
  swift_bridgeObjectRetain(*a1);
  v8 = sub_100AFC9EC(v7, a2);
  v10 = v9;
  v11 = v3;
  swift_bridgeObjectRelease(v6);
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_57;
    v10 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_58:
      if (v10 < 0)
        v29 = v10;
      else
        v29 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v10);
      if (v12 != v30)
        goto LABEL_6;
    }
    else if (v12 != *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      type metadata accessor for UUID(0);
      v13 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104);
      v12 = v8 + 5;
      v33 = v11;
      while (1)
      {
        v14 = v12 - 4;
        v15 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v15);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v14 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v10 = *(_QWORD *)(v15 + 8 * v12);
          swift_retain(v10);
        }
        v16 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 104);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        a2 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v13);
        swift_release(v10);
        if ((a2 & 1) == 0)
          break;
LABEL_32:
        v24 = __OFADD__(v14, 1);
        v25 = v12 - 3;
        if (v24)
          goto LABEL_49;
        a2 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (a2 < 0)
            v26 = *a1;
          else
            v26 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v10 = _CocoaArrayWrapper.endIndex.getter(v26);
          swift_bridgeObjectRelease(a2);
        }
        else
        {
          v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v12;
        if (v25 == v10)
          return v8;
      }
      if (v14 == v8)
      {
LABEL_31:
        v24 = __OFADD__(v8++, 1);
        if (v24)
          goto LABEL_50;
        goto LABEL_32;
      }
      a2 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, *a1);
        a2 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v14 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v14 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v10 = *(_QWORD *)(a2 + 8 * v12);
          swift_retain(v10);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v8 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v11 = *(_QWORD *)(a2 + 8 * v8 + 32);
        swift_retain(v11);
        if ((a2 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a2);
      a2 = *a1;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(a2);
      *a1 = a2;
      if (!isUniquelyReferenced_nonNull_bridgeObject || a2 < 0 || (a2 & 0x4000000000000000) != 0)
      {
        a2 = a3(a2);
        *a1 = a2;
      }
      v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v10;
      swift_release(v18);
      specialized Array._endMutation()(v19);
      a2 = *a1;
      v20 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = a2;
      if (!v20 || a2 < 0 || (a2 & 0x4000000000000000) != 0)
      {
        a2 = a3(a2);
        *a1 = a2;
      }
      if ((v14 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v21 = a2 & 0xFFFFFFFFFFFFFF8;
      if (v14 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v22 = *(_QWORD *)(v21 + 8 * v12);
      *(_QWORD *)(v21 + 8 * v12) = v11;
      swift_release(v22);
      a2 = (uint64_t)a1;
      specialized Array._endMutation()(v23);
      v11 = v33;
      goto LABEL_31;
    }
    return v8;
  }
  v27 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v27 < 0)
    v31 = *a1;
  else
    v31 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v27);
  return v32;
}

double sub_100AFE460()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  double *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  v9 = swift_allocObject(&unk_1012937F8, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_100B01230;
  v20 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101293810;
  v10 = _Block_copy(aBlock);
  v11 = v0;
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v15 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

unint64_t sub_100AFE64C(unint64_t result)
{
  if (result >= 0x11)
    return 17;
  return result;
}

uint64_t sub_100AFE65C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, uint64_t, __n128);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  __int128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  id v60;
  _BYTE v61[24];
  _BYTE v62[32];

  v60 = a1;
  v3 = sub_1004B804C(&qword_101406B10);
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  v53 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v51 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v52 = (char *)&v50 - v9;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v29 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v16);
  v18 = a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
  v57 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier, v57, v19);
  v20 = (__int128 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
  v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
  v55 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 8);
  v56 = v21;
  v54 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 16);
  v22 = a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  v23 = swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID, v62, 0, 0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v58 = v15;
  v24(v15, v22, v10, v23);
  v25 = a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID;
  v26 = swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID, v61, 0, 0);
  v59 = v29;
  v24(v29, v25, v10, v26);
  v27 = 0;
  v28 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_isLocalTombstone);
  LODWORD(v29) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_hideFromRecentlyDeleted);
  v30 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
  v31 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
  if (v31 >> 60 != 15)
  {
    v32 = *v30;
    sub_10057939C(*v30, *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8));
    sub_10057939C(v32, v31);
    v33 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
    swift_retain(a2);
    CRDT.init(serializedData:)(v32, v31, v6, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v5, 0, 1, v6);
    LODWORD(v53) = (_DWORD)v29;
    v29 = v52;
    sub_1004B84E0((uint64_t)v5, (uint64_t)v52, type metadata accessor for CRLBoardCRDTData);
    v50 = *v20;
    v34 = *((_QWORD *)v20 + 2);
    v35 = v51;
    sub_1004B8460((uint64_t)v29, v51, type metadata accessor for CRLBoardCRDTData);
    v36 = (uint64_t *)(v18 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v38 = *v36;
    v37 = v36[1];
    v39 = type metadata accessor for CRLBoardData(0);
    v27 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    *(_QWORD *)(v27 + 16) = 7;
    *(_OWORD *)(v27 + 24) = v50;
    *(_QWORD *)(v27 + 40) = v34;
    sub_1004B84E0(v35, v27 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
    swift_bridgeObjectRetain(v37);
    swift_release(a2);
    sub_1004BE2FC(v32, v31);
    v40 = (_QWORD *)(v27 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    *v40 = v38;
    v40[1] = v37;
    v41 = (uint64_t)v29;
    LOBYTE(v29) = v53;
    sub_1004B84A4(v41, type metadata accessor for CRLBoardCRDTData);
  }
  v42 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_unsyncedChanges);
  v43 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData);
  v44 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData + 8);
  v45 = type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
  v46 = swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
  v47 = v60;
  sub_10057939C(v43, v44);
  v48 = sub_100AF3F94((uint64_t)v47, v57, v56, v55, v54, (uint64_t)v58, (uint64_t)v59, v28, (char)v29, v27, v42, v43, v44, (uint64_t)&_swiftEmptySetSingleton, v46);
  swift_release(v27);
  return v48;
}

uint64_t sub_100AFEB14()
{
  return sub_100B00C94(&qword_101405310);
}

uint64_t sub_100AFEB20()
{
  return sub_100B00D18(&qword_101405310, (uint64_t (*)(uint64_t))sub_100A80470);
}

uint64_t sub_100AFEB34()
{
  return sub_100B01378(&qword_101405318);
}

uint64_t sub_100AFEB40()
{
  return sub_100AFEB74(&qword_101405318, sub_100A7EFE0);
}

uint64_t sub_100AFEB54()
{
  return sub_100B01378(&qword_101405320);
}

uint64_t sub_100AFEB60()
{
  return sub_100AFEB74(&qword_101405320, (uint64_t (*)(void))sub_100A77B1C);
}

uint64_t sub_100AFEB74(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a1) - 8) + 80);
  return sub_100A9CB2C(*(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2, a1);
}

uint64_t sub_100AFEBC4()
{
  return sub_100B01378(&qword_101405328);
}

uint64_t sub_100AFEBD0()
{
  return sub_100AFEB74(&qword_101405328, sub_100A9BEC8);
}

uint64_t sub_100AFEBE4()
{
  return sub_100B01378(&qword_101405320);
}

uint64_t sub_100AFEBF0()
{
  return sub_100AFEB74(&qword_101405320, sub_100A787E4);
}

uint64_t sub_100AFEC04()
{
  return sub_100634AA4(&qword_101405330);
}

uint64_t sub_100AFEC10(uint64_t a1, char a2)
{
  return sub_100AFEC1C(a1, a2, &qword_101405330);
}

uint64_t sub_100AFEC1C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;

  v6 = a2 & 1;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a3) - 8) + 80);
  return sub_100ABF19C(a1, v6, v3 + ((v7 + 16) & ~v7), a3);
}

double sub_100AFEC78()
{
  uint64_t v0;

  return sub_100A9D3AC(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *, _QWORD))(v0 + 24));
}

uint64_t sub_100AFEC84()
{
  return sub_100634AA4(&qword_101405338);
}

uint64_t sub_100AFEC94(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1004B804C(&qword_101405338);
  return sub_100AA58C8(a1, v3);
}

uint64_t sub_100AFECE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v2 | 7;
  v5 = (v3 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + v0;
  v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;

  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v3, v8);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v4);
}

uint64_t sub_100AFEDA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100AA5274(*(_QWORD *)(v0 + 16), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(uint64_t (**)(uint64_t, _QWORD))(v0+ ((((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100AFEE00()
{
  uint64_t v0;

  return sub_100AA548C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(void **)(v0 + 40)) & 1;
}

void sub_100AFEE28()
{
  sub_100B012E8(&qword_1013DDAC0, &qword_101480A68, (uint64_t)sub_100A7431C);
}

uint64_t sub_100AFEE44()
{
  return sub_100634AA4(&qword_101405338);
}

uint64_t sub_100AFEE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_100AFEF00()
{
  return sub_100B01628(type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_100AA464C);
}

uint64_t sub_100AFEF14()
{
  return sub_100B0142C(&qword_101405340);
}

uint64_t sub_100AFEF20()
{
  return sub_100AFEF2C((uint64_t (*)(uint64_t))sub_100A83A44);
}

uint64_t sub_100AFEF2C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_101405340) - 8) + 80);
  return sub_100A9BE1C(*(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v5 + v6) & ~v6), a1);
}

uint64_t sub_100AFEFA0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AFEFC4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100AFEFF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10140E59C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_100D02710(a1, v4, v5, v6);
}

uint64_t sub_100AFF05C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100AFF090()
{
  uint64_t v0;

  sub_100A755BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100AFF0A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100AD406C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100AFF0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;

  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  v11 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v8, v5, v11);
  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v2 | v7 | 7);
}

void sub_100AFF1A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_100A9F478(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(void (**)(_QWORD))(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100AFF224()
{
  uint64_t v0;

  sub_100A9F668(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return 1;
}

unint64_t sub_100AFF250()
{
  unint64_t result;

  result = qword_1014053C0;
  if (!qword_1014053C0)
  {
    result = swift_getWitnessTable(&unk_100EFA38C, &type metadata for CRLBoardViewState);
    atomic_store(result, (unint64_t *)&qword_1014053C0);
  }
  return result;
}

uint64_t sub_100AFF294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A89B70(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_100AFF2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A8A4E0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100AFF2AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100AFF2E0()
{
  uint64_t v0;

  sub_100A759C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100AFF2F4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  __n128 v11;

  v1 = (int *)type metadata accessor for CRLBoardDataStoreChangeSet(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  v7 = v0 + v4;
  v8 = v0 + v4 + v1[5];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  v11 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, __n128))v10)(v7 + v1[6], v9, v11);
  swift_release(*(_QWORD *)(v7 + v1[7]));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100AFF434()
{
  return sub_100B01628(type metadata accessor for CRLBoardDataStoreChangeSet, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_100AA5BBC);
}

uint64_t sub_100AFF448()
{
  uint64_t v0;

  sub_100AA5DC4(*(_QWORD *)(v0 + 24));
  return 1;
}

uint64_t sub_100AFF470()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AFF494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100AFF510(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013E609C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1005CCC1C(a1, v5, v6, v7, v8);
}

uint64_t sub_100AFF5A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AFF5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4))
    swift_release(*(_QWORD *)(v0 + v4 + 8));
  return swift_deallocObject(v0, v4 + 16, v2 | 7);
}

uint64_t sub_100AFF670()
{
  return sub_100B01628(type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_100A966C0);
}

uint64_t sub_100AFF684()
{
  uint64_t v0;

  return sub_100A96A90(*(_QWORD *)(v0 + 16)) & 1;
}

uint64_t sub_100AFF6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_1004B804C(&qword_101405438);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 16) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v12 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v6, v12);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100AFF778()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004B804C(&qword_101405438);
  return sub_100AB6470(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
}

uint64_t sub_100AFF7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100AFF89C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100AB56B4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(uint64_t (**)(_QWORD, _QWORD))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100AFF8F4()
{
  return sub_100AFF90C() & 1;
}

uint64_t sub_100AFF90C()
{
  uint64_t v0;

  sub_100AB4CE4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return 1;
}

uint64_t sub_100AFF938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_101405438);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100AFF9F8()
{
  return sub_100AFFA14((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_101405438, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100AB60C8);
}

uint64_t sub_100AFFA14(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t (*a3)(_QWORD, unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a2) - 8) + 80);
  return a3(*(_QWORD *)(v3 + 16), v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_100AFFA94()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AA30A0);
}

uint64_t sub_100AFFAA0(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EB680) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_100AFFAE8()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AA2844);
}

uint64_t sub_100AFFAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1004B804C(&qword_1013EB680);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);

  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v0 + v4);
  v11 = *(_QWORD *)(v0 + v4 + 48);
  if (v11 >> 60 != 15)
    sub_1004BBBC8(v10[5], v11);
  v12 = v10[8];
  if (v12 >> 60 != 15)
    sub_1004BBBC8(v10[7], v12);
  v13 = v2 | v7 | 7;
  v14 = (v4 + v7 + 73) & ~v7;
  v15 = v14 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v5);
  return swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100AFFC10()
{
  type metadata accessor for CRLBoardIdentifier(0);
  sub_1004B804C(&qword_1013EB680);
  return sub_100AA17DC();
}

_QWORD *sub_100AFFC88(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[7];
  v3 = a1[8];
  sub_10057939C(a1[5], a1[6]);
  sub_10057939C(v2, v3);
  return a1;
}

uint64_t sub_100AFFCCC()
{
  uint64_t v0;

  sub_100AA19C8(*(_QWORD *)(v0 + 24), *(_OWORD **)(v0 + 32));
  return 1;
}

uint64_t sub_100AFFCFC()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AA3908);
}

unint64_t sub_100AFFD08()
{
  unint64_t result;

  result = qword_101405470;
  if (!qword_101405470)
  {
    result = swift_getWitnessTable(&unk_100EFE7C4, &type metadata for AnyCRLCommandChangeContext);
    atomic_store(result, (unint64_t *)&qword_101405470);
  }
  return result;
}

uint64_t sub_100AFFD4C()
{
  return sub_100B0142C(&qword_1013EB680);
}

uint64_t sub_100AFFD58()
{
  return sub_100AFFA14(type metadata accessor for CRLBoardIdentifier, &qword_1013EB680, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100AB0C5C);
}

uint64_t sub_100AFFD74()
{
  uint64_t v0;

  sub_100AAEDA8(*(_QWORD *)(v0 + 24));
  return 1;
}

uint64_t type metadata accessor for CRLBoardDataStore.KeyValueTableKey(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101405718, (uint64_t)&nominal type descriptor for CRLBoardDataStore.KeyValueTableKey);
}

uint64_t sub_100AFFDB0()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100AFFDBC()
{
  return sub_100AFFF80(48);
}

uint64_t sub_100AFFDC4()
{
  uint64_t v0;

  return sub_100A980BC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32));
}

uint64_t sub_100AFFDD0()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100AFFDDC()
{
  return sub_100AFFF80(48);
}

void sub_100AFFDE4()
{
  uint64_t v0;

  sub_100A9A27C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32));
}

uint64_t sub_100AFFDF0()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100AFFDFC()
{
  return sub_100AFFF80(49);
}

uint64_t sub_100AFFE04()
{
  uint64_t v0;

  return sub_100A959E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_100AFFE14()
{
  return sub_100B0142C(&qword_1013EB680);
}

uint64_t sub_100AFFE20()
{
  return sub_100AFFA14(type metadata accessor for CRLBoardIdentifier, &qword_1013EB680, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100AB04A4);
}

uint64_t sub_100AFFE3C()
{
  uint64_t v0;

  return sub_100AB0634(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24)) & 1;
}

uint64_t sub_100AFFE5C()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AAFA58);
}

uint64_t sub_100AFFE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

double sub_100AFFEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  return sub_100AB0404(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_100AFFF40()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AA0C74);
}

uint64_t sub_100AFFF4C()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100AFFF58()
{
  return sub_100AFFF80(48);
}

void sub_100AFFF60()
{
  uint64_t v0;

  sub_100A9FF24(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32));
}

uint64_t sub_100AFFF6C()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100AFFF78()
{
  return sub_100AFFF80(48);
}

uint64_t sub_100AFFF80(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  if (*(_QWORD *)(v1 + 32))
    swift_release(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, a1, 7);
}

double sub_100AFFFC8()
{
  uint64_t v0;

  return sub_100A9B218(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, __n128))(v0 + 32));
}

void sub_100AFFFD4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100AC1C74(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(uint64_t))sub_100AC1634, (uint64_t (*)(uint64_t, id))sub_100AF6AE4, a1);
}

double sub_100B00000()
{
  uint64_t v0;

  return sub_100A9F0D4(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t sub_100B0000C()
{
  unint64_t result;

  result = qword_1014054A0;
  if (!qword_1014054A0)
  {
    result = swift_getWitnessTable(&unk_100F20A74, &type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
    atomic_store(result, (unint64_t *)&qword_1014054A0);
  }
  return result;
}

uint64_t sub_100B00050(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_1004CB6A4(&qword_1013E4980);
    sub_1004B7878(a2, type metadata accessor for CRLBoardIdentifier, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B000D4()
{
  return sub_100B0142C(&qword_101405340);
}

uint64_t sub_100B000E0()
{
  return sub_100AFEF2C(sub_100A82FDC);
}

void sub_100B000EC()
{
  sub_100810270();
}

void sub_100B00104()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)*(id *)(v0 + 16);
  sub_1004E7CF0(v1, (uint64_t)v1);

}

void sub_100B00144()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)*(id *)(v0 + 16);
  sub_1004E7A08(v1);

}

void sub_100B00184()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)*(id *)(v0 + 16);
  sub_1004E6E50(v1, (uint64_t)v1);

}

void sub_100B001C4()
{
  sub_10080EB50(sub_100AFF8F4);
}

uint64_t sub_100B00204()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1014054BC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1014054B8 + dword_1014054B8))(v2, v3, v4);
}

double sub_100B00278(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB45A0(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100B00280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int EnumCaseMultiPayload;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_1013EB680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    v11 = swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload <= 1)
  {

  }
  v13 = (v4 + v5 + v8) & ~v8;
  v14 = v13 + v9;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v13, v6, v11);
  return swift_deallocObject(v0, v14, v3 | v8 | 7);
}

uint64_t sub_100B00394()
{
  return sub_100AFFA14(type metadata accessor for CRLBoardDataStore.KeyValueTableKey, &qword_1013EB680, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100AB48E0);
}

uint64_t sub_100B003B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1014054CC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1014054C8 + dword_1014054C8))(v2, v3, v4);
}

double sub_100B00428(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB374C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_1012930F0, (uint64_t)sub_100B004DC, (uint64_t)&unk_101293108);
}

uint64_t sub_100B0045C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B004DC()
{
  return sub_100AFFAA0((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100AB39C4);
}

uint64_t sub_100B004EC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1014054EC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1014054E8 + dword_1014054E8))(v2, v3, v4);
}

uint64_t sub_100B00560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  unsigned int EnumCaseMultiPayload;
  uint64_t v13;
  unsigned int v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);

  v11 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload <= 1)
  {

  }
  v14 = swift_getEnumCaseMultiPayload(v0 + v6, v1);
  if (v14 == 2)
  {
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v6, v16);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    v15 = swift_bridgeObjectRelease();
  }
  else if (v14 <= 1)
  {

  }
  v17 = (v5 + v9 + v6) & ~v9;
  v18 = v17 + v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v0 + v17, v7, v15);
  return swift_deallocObject(v0, v18, v3 | v9 | 7);
}

uint64_t sub_100B006EC()
{
  type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  sub_1004B804C(&qword_1013EB680);
  return sub_100AB2D18();
}

uint64_t sub_100B00764()
{
  uint64_t v0;

  return sub_100AB2EC8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40)) & 1;
}

uint64_t sub_100B00788()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B007BC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10140550C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_101405508 + dword_101405508))(v2, v3, v4);
}

double sub_100B00830(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB2020(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100B00838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_1013EB680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload <= 1)
  {

  }
  v12 = v3 | v8 | 7;
  v13 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + v8 + 8) & ~v8;

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v14, v6);
  return swift_deallocObject(v0, v14 + v9, v12);
}

uint64_t sub_100B00960()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004B804C(&qword_1013EB680);
  return sub_100AB2374(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3));
}

uint64_t sub_100B009D8()
{
  sub_100AAF198();
  return 1;
}

uint64_t sub_100B00A00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B00A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1006B5B50(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100B00A38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100B00A6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_10140552C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, void *, void *))((char *)&dword_101405528 + dword_101405528))(v2, v3, v5, v4);
}

double sub_100B00AEC(uint64_t a1)
{
  uint64_t v1;

  return sub_100AB0DEC(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100B00AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B00B78()
{
  uint64_t v0;

  sub_1004B804C(&qword_1013EB680);
  return sub_100AB1070(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100B00BB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B00BDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_101405554);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_101405550 + dword_101405550))(v2, v3, v4);
}

double sub_100B00C50(uint64_t a1)
{
  uint64_t v1;

  return sub_100A9CF94(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_101405570, (uint64_t)&unk_101293438, (uint64_t)sub_100B00D04, (uint64_t)&unk_101293450);
}

uint64_t sub_100B00C88()
{
  return sub_100B00C94(&qword_101405570);
}

uint64_t sub_100B00C94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1004B804C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100B00D04()
{
  return sub_100B00D18(&qword_101405570, (uint64_t (*)(uint64_t))sub_100A79800);
}

uint64_t sub_100B00D18(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(a1) - 8) + 80);
  return sub_100A9D204(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5), a2, a1);
}

sqlite3_stmt **sub_100B00D68@<X0>(sqlite3_stmt ***a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt **result;

  result = sub_100A79800(*(_QWORD *)(v1 + 24));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_100B00D98()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B00DBC()
{
  return sub_100B00DD8(40);
}

void sub_100B00DC4()
{
  uint64_t v0;

  sub_100A98E00(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100B00DD0()
{
  return sub_100B00DD8(48);
}

uint64_t sub_100B00DD8(uint64_t a1)
{
  _QWORD *v1;

  swift_release(v1[2]);
  if (v1[3])
    swift_release(v1[4]);
  return swift_deallocObject(v1, a1, 7);
}

void sub_100B00E18()
{
  uint64_t v0;

  sub_100A9B818(*(_QWORD *)(v0 + 16), *(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_100B00E28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_100A83944(*(_QWORD *)(v1 + 24));
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

void sub_100B00E58()
{
  sub_100B00ECC();
}

uint64_t sub_100B00E6C()
{
  uint64_t v0;

  return sub_100AAF8BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40)) & 1;
}

void sub_100B00E8C()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)*(id *)(v0 + 16);
  sub_1004E6500(v1);

}

void sub_100B00ECC()
{
  sub_10080EB50(sub_100B00E6C);
}

void sub_100B00F14()
{
  sub_100A6CBE4();
}

uint64_t sub_100B00F38()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10140557C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CFD00;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_101405578 + dword_101405578))(v2, v3);
}

double sub_100B00FA4(uint64_t a1)
{
  return sub_100A6C1DC(a1);
}

uint64_t sub_100B00FAC()
{
  return sub_100634AA4(&qword_1013EF328);
}

uint64_t sub_100B00FBC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  v2 = sub_100A6BDE4(1);
  return v1(v2);
}

uint64_t sub_100B00FFC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10140559C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CFD00;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_101405598 + dword_101405598))(v2, v3);
}

double sub_100B01068(uint64_t a1)
{
  return sub_100A6B9B8(a1);
}

uint64_t sub_100B01070()
{
  return sub_100634AA4(&qword_1013EB680);
}

uint64_t sub_100B01080()
{
  uint64_t v0;

  return sub_100A6B34C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

void sub_100B0108C(unint64_t a1@<X8>)
{
  sub_1008131B8(a1);
}

uint64_t sub_100B010A4(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)
    return sub_1004D284C(a1);
  return a1;
}

uint64_t sub_100B010B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B010E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100AC5540(a1, *(_QWORD *)(v1 + 16));
}

double sub_100B010EC(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  double result;

  if ((~a2 & 0xF000000000000007) != 0)
    return sub_1007B0D28(a1, a2, a3, a4, a5);
  return result;
}

double sub_100B01100(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  double result;

  if ((~a2 & 0xF000000000000007) != 0)
    return sub_1007B0C8C(a1, a2, a3, a4, a5);
  return result;
}

void sub_100B01118()
{
  sub_100B012E8(&qword_1013DDAB8, &qword_101480A60, (uint64_t)sub_100A742E8);
}

uint64_t sub_100B01134(uint64_t a1, uint64_t a2)
{
  return sub_100B01148(a1, a2);
}

uint64_t sub_100B01148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10062158C(a1, *(_QWORD *)(v2 + 16));
  if ((result & 1) != 0)
    return sub_100AC847C(a2);
  return result;
}

unint64_t sub_100B01190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101405630;
  if (!qword_101405630)
  {
    v1 = sub_1004CB6A4(&qword_101405EC0);
    sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Capsule<A>, v1);
    atomic_store(result, (unint64_t *)&qword_101405630);
  }
  return result;
}

uint64_t sub_100B0120C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100B01230()
{
  uint64_t v0;

  return sub_100ACB7F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100B0123C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

void sub_100B012CC()
{
  sub_100B012E8(&qword_1013DDAC8, &qword_101480A70, (uint64_t)sub_100A74350);
}

void sub_100B012E8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  sub_100A75E8C(*(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a1, a2, a3);
}

uint64_t sub_100B01344()
{
  return sub_100B0142C(&qword_101405658);
}

uint64_t sub_100B01350()
{
  return sub_100AFFA14(type metadata accessor for CRLBoardIdentifier, &qword_101405658, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100AA0B08);
}

uint64_t sub_100B0136C()
{
  return sub_100B01378(&qword_101405320);
}

uint64_t sub_100B01378(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1004B804C(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100B013E8()
{
  return sub_100AFEB74(&qword_101405320, (uint64_t (*)(void))sub_100A79050);
}

uint64_t sub_100B013FC()
{
  uint64_t v0;

  return sub_100AAF668(*(sqlite3_stmt ***)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40)) & 1;
}

uint64_t sub_100B01420()
{
  return sub_100B0142C(&qword_101405668);
}

uint64_t sub_100B0142C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = sub_1004B804C(a1);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v5 + v6 + v9) & ~v9;
  v11 = v10 + *(_QWORD *)(v8 + 64);
  v12 = v4 | v9 | 7;

  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v1 + v5, v13);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  v14 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v1 + v10, v7, v14);
  return swift_deallocObject(v1, v11, v12);
}

uint64_t sub_100B01508()
{
  return sub_100AFFA14(type metadata accessor for CRLBoardIdentifier, &qword_101405668, (uint64_t (*)(_QWORD, unint64_t, unint64_t))sub_100A9C67C);
}

unint64_t sub_100B01524()
{
  unint64_t result;

  result = qword_101405670;
  if (!qword_101405670)
  {
    result = swift_getWitnessTable(&unk_100EFA3B4, &type metadata for CRLBoardViewState);
    atomic_store(result, (unint64_t *)&qword_101405670);
  }
  return result;
}

uint64_t sub_100B01568()
{
  return sub_100634AA4(&qword_101405678);
}

uint64_t sub_100B01574(uint64_t a1, char a2)
{
  return sub_100AFEC1C(a1, a2, &qword_101405678);
}

uint64_t sub_100B01580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100B01614()
{
  return sub_100B01628((uint64_t (*)(_QWORD))&type metadata accessor for UUID, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_100ABEF34);
}

uint64_t sub_100B01628(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)(a1(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (_QWORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(*(_QWORD *)(v2 + 16), v2 + v4, *v5, v5[1]);
}

char *sub_100B01684(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v14 = &a1[v13];
      v15 = (char **)((char *)a2 + v13);
      v16 = v15[1];
      *(_QWORD *)v14 = *v15;
      *((_QWORD *)v14 + 1) = v16;
      swift_bridgeObjectRetain(v16);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v17 = *a2;
      *(_QWORD *)a1 = *a2;
      v18 = v17;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      v10 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

double sub_100B017A4(id *a1, uint64_t a2)
{
  unsigned int EnumCaseMultiPayload;
  double result;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 2)
  {
    v5 = type metadata accessor for UUID(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else if (EnumCaseMultiPayload <= 1)
  {

  }
  return result;
}

void **sub_100B01824(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v11 = (void **)((char *)a1 + v10);
    v12 = (void **)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    swift_bridgeObjectRetain(v13);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = v14;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = v7;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void **sub_100B0191C(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v11 = (void **)((char *)a1 + v10);
      v12 = (void **)((char *)a2 + v10);
      *v11 = *v12;
      v13 = v12[1];
      v11[1] = v13;
      swift_bridgeObjectRetain(v13);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v14 = *a2;
      *a1 = *a2;
      v15 = v14;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

char *sub_100B01A34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100B01AD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100B01B8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for CRLBoardDataStore.CRLBoardDataStoreMetadata(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardDataStore.CRLBoardDataStoreMetadata(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardDataStore.CRLBoardDataStoreMetadata(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100B01CFC + 4 * byte_100F26EF9[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100B01D30 + 4 * byte_100F26EF4[v4]))();
}

uint64_t sub_100B01D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100B01D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100B01D40);
  return result;
}

uint64_t sub_100B01D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100B01D54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100B01D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100B01D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDataStore.CRLBoardDataStoreMetadata()
{
  return &type metadata for CRLBoardDataStore.CRLBoardDataStoreMetadata;
}

uint64_t getEnumTagSinglePayload for CRLBoardDataStore.CRLBoardColumn(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardDataStore.CRLBoardColumn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_100B01E58 + 4 * byte_100F26F03[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_100B01E8C + 4 * byte_100F26EFE[v4]))();
}

uint64_t sub_100B01E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B01E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B01E9CLL);
  return result;
}

uint64_t sub_100B01EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B01EB0);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_100B01EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B01EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDataStore.CRLBoardColumn()
{
  return &type metadata for CRLBoardDataStore.CRLBoardColumn;
}

uint64_t storeEnumTagSinglePayload for CRLBoardDataStore.Table(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100B01F24 + 4 * byte_100F26F0D[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100B01F58 + 4 * byte_100F26F08[v4]))();
}

uint64_t sub_100B01F58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B01F60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B01F68);
  return result;
}

uint64_t sub_100B01F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B01F7CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100B01F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B01F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDataStore.Table()
{
  return &type metadata for CRLBoardDataStore.Table;
}

uint64_t storeEnumTagSinglePayload for CRLBoardDataStore.SchemaVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100B01FF0 + 4 * byte_100F26F17[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100B02024 + 4 * byte_100F26F12[v4]))();
}

uint64_t sub_100B02024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B0202C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B02034);
  return result;
}

uint64_t sub_100B02040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B02048);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100B0204C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B02054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDataStore.SchemaVersion()
{
  return &type metadata for CRLBoardDataStore.SchemaVersion;
}

unint64_t sub_100B02074()
{
  unint64_t result;

  result = qword_101405750;
  if (!qword_101405750)
  {
    result = swift_getWitnessTable(&unk_100F272C0, &type metadata for CRLBoardDataStore.Table);
    atomic_store(result, (unint64_t *)&qword_101405750);
  }
  return result;
}

uint64_t sub_100B020B8()
{
  return sub_1004CBA30(&qword_101405758, &qword_101405760, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_100B020E8()
{
  unint64_t result;

  result = qword_101405768;
  if (!qword_101405768)
  {
    result = swift_getWitnessTable(&unk_100F27398, &type metadata for CRLBoardDataStore.CRLBoardColumn);
    atomic_store(result, (unint64_t *)&qword_101405768);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain(v3);
  *a1 = v3;
  return a1;
}

unint64_t destroy for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

unint64_t *assignWithCopy for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain(v4);
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRelease(v3);
  }
  return a1;
}

unint64_t *assignWithTake for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
LABEL_5:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType()
{
  return &type metadata for CRLBoardDatabaseFetchRequest.CRLBoardItemDataFetchType;
}

unint64_t destroy for CRLBoardDatabaseFetchRequest(_QWORD *a1)
{
  unint64_t result;

  swift_bridgeObjectRelease(*a1);
  result = a1[1];
  if (result >= 2)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s8Freeform28CRLBoardDatabaseFetchRequestVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v4);
  if (v5 >= 2)
    swift_bridgeObjectRetain(v5);
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t assignWithCopy for CRLBoardDatabaseFetchRequest(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  v5 = (unint64_t *)(a1 + 8);
  v6 = a2[1];
  if (*(_QWORD *)(a1 + 8) >= 2uLL)
  {
    if (v6 >= 2)
    {
      *v5 = v6;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004CB800(a1 + 8, &qword_101405770);
      *v5 = a2[1];
    }
  }
  else
  {
    *v5 = v6;
    if (v6 >= 2)
      swift_bridgeObjectRetain(v6);
  }
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t assignWithTake for CRLBoardDatabaseFetchRequest(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = (unint64_t *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >= 2uLL)
  {
    if (v5 >= 2)
    {
      *v4 = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1004CB800(a1 + 8, &qword_101405770);
  }
  *v4 = v5;
LABEL_6:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardDatabaseFetchRequest(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardDatabaseFetchRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDatabaseFetchRequest()
{
  return &type metadata for CRLBoardDatabaseFetchRequest;
}

ValueMetadata *type metadata accessor for CRLBoardDatabaseFetchRequest.CRLBoardDataFetchType()
{
  return &type metadata for CRLBoardDatabaseFetchRequest.CRLBoardDataFetchType;
}

uint64_t sub_100B026C0()
{
  return sub_100B009D8() & 1;
}

void sub_100B026E4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1004B804C(&qword_1013F2128);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v13 >= v25)
      {
LABEL_33:
        sub_1004D284C(a1);
        return;
      }
      v14 = *(_QWORD *)(v26 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v26 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v25)
            goto LABEL_33;
          v14 = *(_QWORD *)(v26 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v25)
              goto LABEL_33;
            v14 = *(_QWORD *)(v26 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v25)
                goto LABEL_33;
              v14 = *(_QWORD *)(v26 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_37;
                  if (v12 >= v25)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v26 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1004B8968(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v37);
    sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_1004B8968((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_100B0307C((uint64_t)v34);
      swift_bridgeObjectRelease(v28);
      sub_1004D284C(a1);
      swift_release(v3);
      return;
    }
    v16 = v27;
    v17 = v28;
    sub_1004CB6E8((uint64_t)v35 + 8, (uint64_t)v29);
    sub_100B0307C((uint64_t)v34);
    sub_10050CB14(v29, v30);
    *(_QWORD *)&v31 = v16;
    *((_QWORD *)&v31 + 1) = v17;
    sub_10050CB14(v30, v32);
    v18 = v31;
    sub_10050CB14(v32, v33);
    sub_10050CB14(v33, &v31);
    v19 = sub_100842E98(v18, *((uint64_t *)&v18 + 1));
    v20 = v19;
    if ((v21 & 1) != 0)
    {
      v8 = v3[6] + 16 * v19;
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      *(_OWORD *)v8 = v18;
      v9 = (_QWORD *)(v3[7] + 32 * v20);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
      sub_10050CB14(&v31, v9);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v19;
    *(_OWORD *)(v3[6] + 16 * v19) = v18;
    sub_10050CB14(&v31, (_OWORD *)(v3[7] + 32 * v19));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_35;
    v3[2] = v24;
LABEL_8:
    v7 = v12;
    v6 = v10;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_100B02AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  int64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[40];
  _OWORD v38[2];
  _OWORD v39[2];
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[2];
  uint64_t v43;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1004B804C(&qword_101405810);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v34 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v33 = (unint64_t)(63 - v5) >> 6;
  v7 = (char *)v42 + 8;
  v8 = (char *)v39 + 8;
  swift_bridgeObjectRetain(v1);
  v9 = 0;
  v32 = v1;
  while (1)
  {
    if (v6)
    {
      v14 = (v6 - 1) & v6;
      v15 = __clz(__rbit64(v6)) | (v9 << 6);
      v16 = v9;
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_39;
      if (v17 >= v33)
      {
LABEL_36:
        sub_1004D284C(v1);
        return;
      }
      v18 = *(_QWORD *)(v34 + 8 * v17);
      v16 = v9 + 1;
      if (!v18)
      {
        v16 = v9 + 2;
        if (v9 + 2 >= v33)
          goto LABEL_36;
        v18 = *(_QWORD *)(v34 + 8 * v16);
        if (!v18)
        {
          v16 = v9 + 3;
          if (v9 + 3 >= v33)
            goto LABEL_36;
          v18 = *(_QWORD *)(v34 + 8 * v16);
          if (!v18)
          {
            v16 = v9 + 4;
            if (v9 + 4 >= v33)
              goto LABEL_36;
            v18 = *(_QWORD *)(v34 + 8 * v16);
            if (!v18)
            {
              v19 = v9 + 5;
              if (v9 + 5 >= v33)
                goto LABEL_36;
              v18 = *(_QWORD *)(v34 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v16 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_40;
                  if (v16 >= v33)
                    goto LABEL_36;
                  v18 = *(_QWORD *)(v34 + 8 * v16);
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v18 - 1) & v18;
      v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_1004B8968(*(_QWORD *)(v1 + 48) + 40 * v15, (uint64_t)v41);
    sub_1004CB6E8(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)v7);
    v39[0] = v42[0];
    v39[1] = v42[1];
    v40 = v43;
    v38[0] = v41[0];
    v38[1] = v41[1];
    sub_1004B8968((uint64_t)v38, (uint64_t)v37);
    if (!swift_dynamicCast(&v35, v37, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v35 = 0;
      v36 = 0;
      sub_100B0307C((uint64_t)v38);
      v31 = v36;
LABEL_35:
      swift_bridgeObjectRelease(v31);
      sub_1004D284C(v1);
      swift_release(v3);
      return;
    }
    v21 = v35;
    v20 = v36;
    sub_1004CB6E8((uint64_t)v8, (uint64_t)v37);
    sub_100B0307C((uint64_t)v38);
    v22 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    if ((swift_dynamicCast(&v35, v37, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
    {
      v35 = 0;
      swift_bridgeObjectRelease(v20);
      v31 = v35;
      goto LABEL_35;
    }
    v23 = v35;
    v24 = sub_100842E98(v21, v20);
    v25 = v24;
    if ((v26 & 1) != 0)
    {
      v10 = v8;
      v11 = v7;
      v12 = (uint64_t *)(v3[6] + 16 * v24);
      swift_bridgeObjectRelease(v12[1]);
      *v12 = v21;
      v12[1] = v20;
      v13 = v3[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8 * v25));
      *(_QWORD *)(v13 + 8 * v25) = v23;
      v7 = v11;
      v8 = v10;
      v1 = v32;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v24;
    v27 = (uint64_t *)(v3[6] + 16 * v24);
    *v27 = v21;
    v27[1] = v20;
    *(_QWORD *)(v3[7] + 8 * v24) = v23;
    v28 = v3[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_38;
    v3[2] = v30;
LABEL_8:
    v9 = v16;
    v6 = v14;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t type metadata accessor for CRLDeviceUtility()
{
  return objc_opt_self(_TtC8Freeform16CRLDeviceUtility);
}

uint64_t sub_100B02EA0()
{
  id v0;
  unsigned __int8 v1;
  char v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = objc_msgSend(v0, "BOOLForKey:", CFSTR("CRLForceDeviceIsNotCapableForUpdateUserDefault"));

  if ((v1 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(CRLRemoteDefaults), "sharedDefaults");
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "dictionaryForKey:", v4);

    if (v5)
    {
      v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      sub_100B02AA4(v6);
      v8 = v7;
      swift_bridgeObjectRelease(v6);
      if (v8)
      {
        if (*(_QWORD *)(v8 + 16))
        {
          v9 = sub_100842E98(0xD000000000000012, 0x8000000100FE1820);
          if ((v10 & 1) != 0)
          {
            v11 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v9);
            swift_bridgeObjectRetain(v11);
            swift_bridgeObjectRelease(v8);
            v12 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_platformString");
            v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
            v15 = v14;

            LOBYTE(v12) = sub_100C9DD14(v13, v15, v11);
            swift_bridgeObjectRelease(v11);
            swift_bridgeObjectRelease(v15);
            v2 = v12 ^ 1;
            return v2 & 1;
          }
        }
        swift_bridgeObjectRelease(v8);
      }
    }
    v2 = 1;
    return v2 & 1;
  }
  v2 = 0;
  return v2 & 1;
}

uint64_t sub_100B0307C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_101405818);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B030C8()
{
  uint64_t v0;

  v0 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  sub_100501DE0(v0, qword_101480AD8);
  sub_1004F2A1C(v0, (uint64_t)qword_101480AD8);
  return NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)(60.0);
}

id sub_100B03160()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommonConstants();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommonConstants()
{
  return objc_opt_self(_TtC8Freeform18CRLCommonConstants);
}

NSString sub_100B031B4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480AF0 = (uint64_t)result;
  return result;
}

NSString sub_100B031E8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480AF8 = (uint64_t)result;
  return result;
}

id sub_100B0321C(void *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  objc_class *v43;
  char *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  void *v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  void *v79;
  id result;
  void *v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  char *v98;
  id v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  id v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  _QWORD *v115;
  id v116;
  id v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t inited;
  unint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  void (*v135)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  id v137;
  _QWORD *v138;
  char *v139;
  void **v140;
  char v141[64];
  void **aBlock;
  uint64_t v143;
  uint64_t (*v144)(uint64_t, uint64_t);
  id v145;
  _UNKNOWN **v146;
  uint64_t v147;
  _OWORD v148[2];
  uint64_t v149;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v139 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = (_QWORD *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v137 = (id)*(v138 - 1);
  __chkstk_darwin(v138);
  v12 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLAccountUtilities();
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_QWORD *)(v3 + 120) = swift_allocObject(v16, 16, 7);
  v17 = type metadata accessor for CRLUnfairLock();
  v18 = swift_allocObject(v17, 24, 7);
  v19 = (_DWORD *)swift_slowAlloc(4, -1);
  *v19 = 0;
  *(_QWORD *)(v18 + 16) = v19;
  atomic_thread_fence(memory_order_acq_rel);
  *(_QWORD *)(v3 + 128) = v18;
  *(_WORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  v20 = type metadata accessor for CRLDatabaseSyncDataSource();
  v21 = swift_allocObject(v20, 25, 7);
  *(_QWORD *)(v21 + 16) = a1;
  *(_BYTE *)(v21 + 24) = 0;
  *(_QWORD *)(v3 + 56) = v21;
  v22 = type metadata accessor for CRLBoardSyncLogicProvider();
  v23 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v3 + 48) = v23;
  v24 = swift_allocObject(v20, 25, 7);
  *(_QWORD *)(v24 + 16) = a1;
  *(_BYTE *)(v24 + 24) = 1;
  *(_QWORD *)(v3 + 64) = v24;
  v25 = qword_1013DCB60;
  v26 = a1;
  v140 = a2;
  swift_retain(a2);
  if (v25 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v27 = (void *)qword_10147ECC0;
  v28 = type metadata accessor for CRLBoardShareController();
  v29 = (_QWORD *)swift_allocObject(v28, 144, 15);
  v30 = v27;
  swift_defaultActor_initialize(v29, v31);
  v32 = type metadata accessor for CRLZoneShareController();
  v29[16] = 0;
  v29[17] = 0;
  v33 = swift_allocObject(v32, 120, 15);
  swift_defaultActor_initialize(v33, v34);
  *(_QWORD *)(v33 + 112) = v30;
  v29[14] = v33;
  v29[15] = v26;
  v134 = v26;
  *(_QWORD *)(v3 + 40) = v29;
  v35 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter(v35);
  (*((void (**)(char *, _QWORD, _QWORD *))v137 + 13))(v12, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v138);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v36 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v37 = sub_1004B804C(&qword_1013FF6B0);
  v38 = sub_1008F1430();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v37, v38, v8, v36);
  v39 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000024, 0x8000000100FF63B0, v15, v10, v12, 0);
  v41 = *(_QWORD *)(v3 + 48);
  v40 = *(_QWORD *)(v3 + 56);
  memset(v148, 0, sizeof(v148));
  v149 = 0;
  v138 = (_QWORD *)type metadata accessor for CRLSyncPriorityProvider(0);
  v145 = v138;
  v146 = &off_10126D600;
  v42 = v140;
  aBlock = v140;
  v43 = (objc_class *)type metadata accessor for CRLSyncController();
  v44 = (char *)objc_allocWithZone(v43);
  v45 = sub_1004CB9AC((uint64_t)&aBlock, (uint64_t)v145);
  v46 = __chkstk_darwin(v45);
  v48 = (uint64_t *)((char *)&v133 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v49 + 16))(v48, v46);
  v50 = *v48;
  swift_retain(v42);
  swift_retain(v40);
  swift_retain(v41);
  v137 = v39;
  v51 = sub_100B05B58(0, v40, v41, v137, v50, 0, 0, v148, 0, v44);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
  *(_QWORD *)(v3 + 24) = v51;
  v52 = *(_QWORD *)(v3 + 56);
  v53 = type metadata accessor for TaskPriority(0);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v55 = (uint64_t)v139;
  v54(v139, 1, 1, v53);
  v56 = (_QWORD *)swift_allocObject(&unk_101293F30, 56, 7);
  v56[2] = 0;
  v56[3] = 0;
  v56[4] = v51;
  v56[5] = v52;
  v56[6] = &off_1012872E0;
  v57 = v51;
  swift_retain_n(v52, 2);
  v58 = v57;
  v59 = sub_100521B98(v55, (uint64_t)&unk_101405A80, (uint64_t)v56);

  swift_release(v52);
  v60 = swift_release(v59);
  v61 = *(void **)(v3 + 24);
  v62 = *(_QWORD *)(v3 + 40);
  v136 = v53;
  v135 = v54;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v54)(v55, 1, 1, v53, v60);
  v63 = (_QWORD *)swift_allocObject(&unk_101293F58, 56, 7);
  v63[2] = 0;
  v63[3] = 0;
  v63[4] = v61;
  v63[5] = v62;
  v63[6] = &off_1012A1820;
  v64 = v61;
  swift_retain_n(v62, 2);
  v65 = v64;
  v66 = sub_100521B98(v55, (uint64_t)&unk_101405A88, (uint64_t)v63);

  swift_release(v62);
  swift_release(v66);
  v67 = *(_QWORD *)(v3 + 64);
  v68 = *(_QWORD *)(v3 + 48);
  v145 = v138;
  v146 = &off_10126D600;
  aBlock = v42;
  v69 = (char *)objc_allocWithZone(v43);
  v70 = sub_1004CB9AC((uint64_t)&aBlock, (uint64_t)v145);
  v71 = __chkstk_darwin(v70);
  v73 = (uint64_t *)((char *)&v133 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v74 + 16))(v73, v71);
  v75 = *v73;
  swift_retain(v42);
  v76 = v137;
  swift_retain(v67);
  swift_retain(v68);
  v77 = sub_100B05B58(1, v67, v68, v76, v75, 0, 0, v148, 0, v69);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
  *(_QWORD *)(v3 + 32) = v77;
  v78 = *(_QWORD *)(v3 + 120);
  v79 = (void *)objc_opt_self(ACAccountStore);
  result = objc_msgSend(v79, "defaultStore", swift_retain(v78).n128_f64[0]);
  if (result)
  {
    v81 = result;
    v82 = objc_msgSend(result, "aa_primaryAppleAccount");
    swift_release(v78);

    if (v82)
    v138 = v76;
    *(_BYTE *)(v3 + 112) = v82 != 0;
    v83 = (void *)objc_opt_self(NSNotificationCenter);
    v84 = objc_msgSend(v83, "defaultCenter");
    v85 = v134;
    if (qword_1013DDAA8 != -1)
      swift_once(&qword_1013DDAA8, sub_100A74280);
    v86 = qword_101480A50;
    v87 = swift_allocObject(&unk_101293F80, 24, 7);
    swift_weakInit(v87 + 16, v3);
    v146 = (_UNKNOWN **)sub_100B061C4;
    v147 = v87;
    aBlock = _NSConcreteStackBlock;
    v143 = *(_QWORD *)"";
    v144 = sub_100568280;
    v145 = &unk_101293F98;
    v88 = _Block_copy(&aBlock);
    v89 = v147;
    v90 = v85;
    v91 = objc_msgSend(v84, "addObserverForName:object:queue:usingBlock:", v86, v90, 0, v88, swift_release(v89).n128_f64[0]);
    _Block_release(v88);

    v92 = *(_QWORD *)(v3 + 80);
    *(_QWORD *)(v3 + 80) = v91;
    swift_unknownObjectRelease(v92);
    v93 = objc_msgSend(v83, "defaultCenter");
    if (qword_1013DDAB0 != -1)
      swift_once(&qword_1013DDAB0, sub_100A742B4);
    v94 = qword_101480A58;
    v95 = swift_allocObject(&unk_101293F80, 24, 7);
    swift_weakInit(v95 + 16, v3);
    v146 = (_UNKNOWN **)sub_100B061C4;
    v147 = v95;
    aBlock = _NSConcreteStackBlock;
    v143 = *(_QWORD *)"";
    v144 = sub_100568280;
    v145 = &unk_101293FC0;
    v96 = _Block_copy(&aBlock);
    v97 = v147;
    v98 = (char *)v90;
    v99 = objc_msgSend(v93, "addObserverForName:object:queue:usingBlock:", v94, v98, 0, v96, swift_release(v97).n128_f64[0]);
    _Block_release(v96);

    v100 = *(_QWORD *)(v3 + 96);
    *(_QWORD *)(v3 + 96) = v99;
    swift_unknownObjectRelease(v100);
    v101 = objc_msgSend(v83, "defaultCenter");
    if (qword_1013DDE30 != -1)
      swift_once(&qword_1013DDE30, sub_100CAC2F4);
    v102 = qword_1014812B0;
    v103 = swift_allocObject(&unk_101293F80, 24, 7);
    swift_weakInit(v103 + 16, v3);
    v146 = (_UNKNOWN **)sub_100B061F4;
    v147 = v103;
    aBlock = _NSConcreteStackBlock;
    v143 = *(_QWORD *)"";
    v144 = sub_100568280;
    v145 = &unk_101293FE8;
    v104 = _Block_copy(&aBlock);
    v105 = objc_msgSend(v101, "addObserverForName:object:queue:usingBlock:", v102, 0, 0, v104, swift_release(v147).n128_f64[0]);
    _Block_release(v104);

    v106 = *(_QWORD *)(v3 + 88);
    *(_QWORD *)(v3 + 88) = v105;
    swift_unknownObjectRelease(v106);
    v107 = objc_msgSend(v83, "defaultCenter");
    if (qword_1013DDE38 != -1)
      swift_once(&qword_1013DDE38, sub_100CAC328);
    v108 = qword_1014812B8;
    v109 = swift_allocObject(&unk_101293F80, 24, 7);
    swift_weakInit(v109 + 16, v3);
    v146 = (_UNKNOWN **)sub_100B061FC;
    v147 = v109;
    aBlock = _NSConcreteStackBlock;
    v143 = *(_QWORD *)"";
    v144 = sub_100568280;
    v145 = &unk_101294010;
    v110 = _Block_copy(&aBlock);
    v111 = objc_msgSend(v107, "addObserverForName:object:queue:usingBlock:", v108, 0, 0, v110, swift_release(v147).n128_f64[0]);
    _Block_release(v110);

    v112 = *(_QWORD *)(v3 + 104);
    *(_QWORD *)(v3 + 104) = v111;
    swift_unknownObjectRelease(v112);
    v113 = *(void **)(v3 + 24);
    v114 = (uint64_t)v139;
    v135(v139, 1, 1, v136);
    v115 = (_QWORD *)swift_allocObject(&unk_101294048, 56, 7);
    v115[2] = 0;
    v115[3] = 0;
    v115[4] = v113;
    v115[5] = v3;
    v115[6] = &off_101293EC0;
    v116 = v113;
    swift_retain_n(v3, 2);
    v117 = v116;
    v118 = sub_100521B98(v114, (uint64_t)&unk_101405A90, (uint64_t)v115);

    swift_release(v3);
    swift_release(v118);
    v119 = *(char **)(v3 + 32);
    v120 = &v119[OBJC_IVAR____TtC8Freeform17CRLSyncController_fetchStatusObserver];
    *((_QWORD *)v120 + 1) = &off_101293EA8;
    swift_unknownObjectWeakAssign(v120, v3);
    v121 = *(char **)(v3 + 24);
    v122 = &v121[OBJC_IVAR____TtC8Freeform17CRLSyncController_fetchStatusObserver];
    *((_QWORD *)v122 + 1) = &off_101293EA8;
    swift_unknownObjectWeakAssign(v122, v3);
    v123 = sub_1004B804C(&qword_101405A98);
    inited = swift_initStackObject(v123, v141);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_BYTE *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = v121;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 56) = v119;
    v125 = sub_1008E02BC(inited);
    swift_setDeallocating(inited);
    v126 = v121;
    v127 = v119;
    v128 = sub_1004B804C(&qword_101405AA0);
    swift_arrayDestroy(inited + 32, 2, v128);
    v129 = type metadata accessor for CRLSyncHelper();
    v130 = swift_allocObject(v129, 24, 7);
    *(_QWORD *)(v130 + 16) = v125;
    v131 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_syncHelper;
    v132 = *(_QWORD *)&v98[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_syncHelper];
    if (v132)
    {
      swift_retain(*(_QWORD *)&v98[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_syncHelper]);
      sub_100757E04(&_mh_execute_header, (uint64_t)"syncHelper", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 57, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"syncHelper", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2u, 57, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
      swift_release(v132);
      v132 = *(_QWORD *)&v98[v131];
    }
    *(_QWORD *)&v98[v131] = v130;

    swift_release(v140);
    swift_release(v132);
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100B03FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_100B0506C();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_100B04010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10079A9B8(1);
    sub_10079A9B8(1);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_100B04078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v9, 0, 0);
    v5 = (id)static OS_os_log.dataSync;
    v7 = static os_log_type_t.default.getter(v6);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v7, "User attempted to share a board that has not yet synced, ensuring we save this board as soon as possible. Saving immediately.", 125, 2, (uint64_t)_swiftEmptyArrayStorage);

    v8 = *(id *)(v4 + 24);
    sub_10079AC64(1);
    swift_release(v4);

  }
}

uint64_t sub_100B04164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 80);
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    v6 = objc_msgSend(v5, "defaultCenter", swift_unknownObjectRetain(v4).n128_f64[0]);
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
  v7 = *(_QWORD *)(v0 + 96);
  if (v7)
  {
    v8 = (void *)objc_opt_self(NSNotificationCenter);
    v9 = objc_msgSend(v8, "defaultCenter", swift_unknownObjectRetain(v7).n128_f64[0]);
    objc_msgSend(v9, "removeObserver:", v7);
    swift_unknownObjectRelease(v7);

  }
  v10 = *(_QWORD *)(v0 + 88);
  if (v10)
  {
    v11 = (void *)objc_opt_self(NSNotificationCenter);
    v12 = objc_msgSend(v11, "defaultCenter", swift_unknownObjectRetain(v10).n128_f64[0]);
    objc_msgSend(v12, "removeObserver:", v10);
    swift_unknownObjectRelease(v10);

  }
  v13 = *(_QWORD *)(v0 + 104);
  if (v13)
  {
    v14 = (void *)objc_opt_self(NSNotificationCenter);
    v15 = objc_msgSend(v14, "defaultCenter", swift_unknownObjectRetain(v13).n128_f64[0]);
    objc_msgSend(v15, "removeObserver:", v13);
    swift_unknownObjectRelease(v13);

  }
  v16 = *(void **)(v0 + 24);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = type metadata accessor for TaskPriority(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v3, 1, 1, v18);
  v20 = (_QWORD *)swift_allocObject(&unk_101293EE0, 56, 7);
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v16;
  v20[5] = v17;
  v20[6] = &off_1012872E0;
  v21 = v16;
  swift_retain(v17);
  v22 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_101405A70, (uint64_t)v20);
  v23 = swift_release(v22);
  v24 = *(void **)(v0 + 24);
  v25 = *(_QWORD *)(v0 + 40);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v19)(v3, 1, 1, v18, v23);
  v26 = (_QWORD *)swift_allocObject(&unk_101293F08, 56, 7);
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  v26[5] = v25;
  v26[6] = &off_1012A1820;
  v27 = v24;
  swift_retain(v25);
  v28 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_101405A78, (uint64_t)v26);
  swift_release(v28);

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  return v0;
}

uint64_t sub_100B0446C()
{
  uint64_t v0;

  sub_100B04164();
  return swift_deallocClassInstance(v0, 138, 7);
}

void sub_100B0448C(char a1)
{
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  id v5;
  uint64_t *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*(_BYTE *)(v1 + 136) != (a1 & 1) && (*(_BYTE *)(v1 + 137) & 1) == 0)
  {
    if (*(_BYTE *)(v1 + 136))
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v10, 0, 0);
      v2 = (id)static OS_os_log.crlDefault;
      v4 = static os_log_type_t.default.getter(v3);
      sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Posting syncDidBegin notification.", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

      v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDAE8 != -1)
        swift_once(&qword_1013DDAE8, sub_100B031E8);
      v6 = &qword_101480AF8;
    }
    else
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v10, 0, 0);
      v7 = (id)static OS_os_log.crlDefault;
      v9 = static os_log_type_t.default.getter(v8);
      sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "Posting syncDidEnd notification.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDAE0 != -1)
        swift_once(&qword_1013DDAE0, sub_100B031B4);
      v6 = &qword_101480AF0;
    }
    objc_msgSend(v5, "postNotificationName:object:userInfo:", *v6, v1, 0);

  }
}

void sub_100B04690(char a1)
{
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  id v5;
  uint64_t *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*(_BYTE *)(v1 + 137) != (a1 & 1) && (*(_BYTE *)(v1 + 136) & 1) == 0)
  {
    if (*(_BYTE *)(v1 + 137))
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v10, 0, 0);
      v2 = (id)static OS_os_log.crlDefault;
      v4 = static os_log_type_t.default.getter(v3);
      sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Posting syncDidBegin notification.", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

      v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDAE8 != -1)
        swift_once(&qword_1013DDAE8, sub_100B031E8);
      v6 = &qword_101480AF8;
    }
    else
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v10, 0, 0);
      v7 = (id)static OS_os_log.crlDefault;
      v9 = static os_log_type_t.default.getter(v8);
      sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "Posting syncDidEnd notification.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DDAE0 != -1)
        swift_once(&qword_1013DDAE0, sub_100B031B4);
      v6 = &qword_101480AF0;
    }
    objc_msgSend(v5, "postNotificationName:object:userInfo:", *v6, v1, 0);

  }
}

void sub_100B04894()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t inited;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  int64_t v57;
  Swift::Int v58;
  __int128 v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68[104];
  char v69[8];
  _QWORD v70[6];

  v0 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v0);
  v60 = (char *)v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD770 != -1)
    goto LABEL_47;
LABEL_2:
  swift_beginAccess(&static OS_os_log.crlZoneRefetch, v69, 0, 0);
  v2 = (id)static OS_os_log.crlZoneRefetch;
  v4 = static os_log_type_t.debug.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Scheduling refetch for zones that need to be refetched.", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = 0;
  v6 = 0;
  v59 = xmmword_100EF5A10;
  v55 = (char *)&type metadata for Swift.AnyObject + 8;
  do
  {
    v7 = v5;
    if (v6 >= 2)
      goto LABEL_46;
    v8 = *((unsigned __int8 *)&off_101264B10 + v6 + 32);
    v9 = 24;
    if (v8)
      v9 = 32;
    v10 = 56;
    if (v8)
      v10 = 64;
    v11 = *(_QWORD *)(v52[0] + v10);
    v12 = *(void **)(v52[0] + v9);
    swift_retain(v11);
    v63 = v12;
    v13 = sub_1008F87B8();
    v14 = v13;
    v54 = v7;
    v53 = v11;
    if ((v13 & 0xC000000000000001) != 0)
    {
      if (v13 >= 0)
        v13 &= 0xFFFFFFFFFFFFFF8uLL;
      v15 = __CocoaSet.makeIterator()(v13);
      v16 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
      v17 = sub_1008E1BC8();
      v13 = (Swift::Int)Set.Iterator.init(_cocoa:)(v70, v15, v16, v17);
      v14 = v70[0];
      v58 = v70[1];
      v18 = v70[2];
      v19 = v70[3];
      v20 = v70[4];
    }
    else
    {
      v19 = 0;
      v21 = -1 << *(_BYTE *)(v13 + 32);
      v22 = *(_QWORD *)(v13 + 56);
      v58 = v13 + 56;
      v23 = ~v21;
      v24 = -v21;
      if (v24 < 64)
        v25 = ~(-1 << v24);
      else
        v25 = -1;
      v20 = v25 & v22;
      v18 = v23;
    }
    v56 = v14 & 0x7FFFFFFFFFFFFFFFLL;
    v52[1] = v18;
    v57 = (unint64_t)(v18 + 64) >> 6;
    v26 = 0x2065746176697250;
    if (v8)
      v26 = 0x5320646572616853;
    v62 = v26;
    v27 = 0xED000065706F6353;
    if (v8)
      v27 = 0xEC00000065706F63;
    v61 = v27;
    if (v14 < 0)
    {
      while (1)
      {
        v31 = __CocoaSet.Iterator.next()(v13);
        if (!v31)
          break;
        v32 = v31;
        v66 = v31;
        v33 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
        swift_unknownObjectRetain(v32);
        swift_dynamicCast(&v67, &v66, v55, v33, 7);
        v34 = v67;
        swift_unknownObjectRelease(v32);
        v30 = v19;
        v28 = v20;
        if (!v34)
          break;
LABEL_42:
        v65 = v30;
        v38 = (void *)static OS_os_log.crlZoneRefetch;
        v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v39, v68);
        *(_OWORD *)(inited + 16) = v59;
        v64 = v28;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v41 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v41;
        *(_QWORD *)(inited + 32) = v62;
        *(_QWORD *)(inited + 40) = v61;
        v42 = v38;
        v43 = objc_msgSend(v34, "zoneName");
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
        v46 = v45;

        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v41;
        *(_QWORD *)(inited + 72) = v44;
        *(_QWORD *)(inited + 80) = v46;
        v48 = static os_log_type_t.default.getter(v47);
        sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v48, "<%{public}@> Refetching records for zone to refetch: %@", 55, 2, inited);
        swift_setDeallocating(inited);
        v49 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v49);

        v50 = type metadata accessor for Date(0);
        v51 = (uint64_t)v60;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v60, 1, 1, v50);
        sub_10079865C(v34, 2, 0, v51, 9);

        v13 = sub_1004CB800(v51, &qword_1013E04F0);
        v19 = v65;
        v20 = v64;
        if ((v14 & 0x8000000000000000) == 0)
          goto LABEL_22;
      }
    }
    else
    {
LABEL_22:
      if (v20)
      {
        v28 = (v20 - 1) & v20;
        v29 = __clz(__rbit64(v20)) | (v19 << 6);
        v30 = v19;
        goto LABEL_41;
      }
      v35 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once(&qword_1013DD770, sub_100A02AA0);
        goto LABEL_2;
      }
      if (v35 < v57)
      {
        v36 = *(_QWORD *)(v58 + 8 * v35);
        v30 = v19 + 1;
        if (v36)
          goto LABEL_40;
        v30 = v19 + 2;
        if (v19 + 2 >= v57)
          goto LABEL_3;
        v36 = *(_QWORD *)(v58 + 8 * v30);
        if (v36)
          goto LABEL_40;
        v30 = v19 + 3;
        if (v19 + 3 >= v57)
          goto LABEL_3;
        v36 = *(_QWORD *)(v58 + 8 * v30);
        if (v36)
          goto LABEL_40;
        v30 = v19 + 4;
        if (v19 + 4 >= v57)
          goto LABEL_3;
        v36 = *(_QWORD *)(v58 + 8 * v30);
        if (v36)
        {
LABEL_40:
          v28 = (v36 - 1) & v36;
          v29 = __clz(__rbit64(v36)) + (v30 << 6);
LABEL_41:
          v34 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v29);
          if (!v34)
            goto LABEL_3;
          goto LABEL_42;
        }
        v37 = v19 + 5;
        while (v57 != v37)
        {
          v36 = *(_QWORD *)(v58 + 8 * v37++);
          if (v36)
          {
            v30 = v37 - 1;
            goto LABEL_40;
          }
        }
      }
    }
LABEL_3:
    sub_1004D284C(v14);
    swift_release(v53);

    v5 = 1;
    v6 = &_mh_execute_header.magic + 1;
  }
  while ((v54 & 1) == 0);
}

void sub_100B04ED0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v15, 0, 0);
  v4 = (void *)static OS_os_log.crlDefault;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, &v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLSyncController();
  *(_QWORD *)(inited + 64) = sub_1004B7878(&qword_101405A68, (uint64_t (*)(uint64_t))type metadata accessor for CRLSyncController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = a1;
  v7 = v4;
  v8 = a1;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v10, "Fetch did end for sync controller: %@", 37, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v8, *(_QWORD *)(v2 + 24)) & 1) != 0)
  {
    v12 = *(_BYTE *)(v2 + 136);
    *(_BYTE *)(v2 + 136) = 0;
    sub_100B0448C(v12);
  }
  else if ((static NSObject.== infix(_:_:)(v8, *(_QWORD *)(v2 + 32)) & 1) != 0)
  {
    v13 = *(_BYTE *)(v2 + 137);
    *(_BYTE *)(v2 + 137) = 0;
    sub_100B04690(v13);
  }
}

void sub_100B0506C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char *v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t inited;
  id v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  char v83[112];
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  char v87[72];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v2);
  v4 = &v83[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 128) + 16);
  os_unfair_lock_lock(v5);
  v6 = *(unsigned __int8 *)(v1 + 112);
  os_unfair_lock_unlock(v5);
  v7 = (void *)Notification.name.getter();
  if (qword_1013DDAB0 != -1)
    swift_once(&qword_1013DDAB0, sub_100A742B4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(qword_101480A58);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_14;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_14:

    if (!v6)
      return;
    v23 = 0;
    goto LABEL_16;
  }
  if (qword_1013DDAA8 != -1)
    swift_once(&qword_1013DDAA8, sub_100A74280);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(qword_101480A50);
  v18 = v17;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v21 = v19;
  if (v16 == v20 && v18 == v19)
  {

    v22 = swift_bridgeObjectRelease_n(v18, 2);
LABEL_19:
    v25 = Notification.userInfo.getter(v22);
    if (v25 && (v26 = v25, sub_100B026E4(v25), v28 = v27, swift_bridgeObjectRelease(v26), v28))
    {
      if (*(_QWORD *)(v28 + 16) && (v29 = sub_100842E98(0xD000000000000019, 0x8000000100FF02D0), (v30 & 1) != 0))
      {
        sub_1004CB6E8(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v85);
        swift_bridgeObjectRelease(v28);
        if (*((_QWORD *)&v86 + 1))
        {
          v31 = swift_dynamicCast(&v84, &v85, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
          if ((_DWORD)v31)
          {
            v32 = v84;
LABEL_33:
            v44 = Notification.userInfo.getter(v31);
            if (v44 && (v45 = v44, sub_100B026E4(v44), v47 = v46, swift_bridgeObjectRelease(v45), v47))
            {
              if (*(_QWORD *)(v47 + 16)
                && (v48 = sub_100842E98(0xD000000000000010, 0x8000000100FF02F0), (v49 & 1) != 0))
              {
                sub_1004CB6E8(*(_QWORD *)(v47 + 56) + 32 * v48, (uint64_t)&v85);
              }
              else
              {
                v86 = 0u;
                v85 = 0u;
              }
              swift_bridgeObjectRelease(v47);
              if (*((_QWORD *)&v86 + 1))
              {
                v50 = swift_dynamicCast(&v84, &v85, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
                if ((_DWORD)v50)
                {
                  v51 = v84;
                  if ((v32 & 1) == 0)
                  {
LABEL_47:
                    v52 = v51;
                    if (!v6)
                      return;
LABEL_48:
                    v53 = Notification.userInfo.getter(v50);
                    if (!v53)
                      goto LABEL_60;
                    v54 = v53;
                    sub_100B026E4(v53);
                    v56 = v55;
                    swift_bridgeObjectRelease(v54);
                    if (!v56)
                      goto LABEL_60;
                    if (*(_QWORD *)(v56 + 16)
                      && (v57 = sub_100842E98(0xD000000000000010, 0x8000000100FB5A20), (v58 & 1) != 0))
                    {
                      sub_1004CB6E8(*(_QWORD *)(v56 + 56) + 32 * v57, (uint64_t)&v85);
                    }
                    else
                    {
                      v86 = 0u;
                      v85 = 0u;
                    }
                    swift_bridgeObjectRelease(v56);
                    if (!*((_QWORD *)&v86 + 1))
                    {
                      v62 = &qword_1013E0230;
                      v63 = (char *)&v85;
                      goto LABEL_59;
                    }
                    v59 = sub_1004B804C(&qword_1013E4980);
                    if ((swift_dynamicCast(&v84, &v85, (char *)&type metadata for Any + 8, v59, 6) & 1) == 0)
                    {
LABEL_60:
                      if (qword_1013DD870 != -1)
                        swift_once(&qword_1013DD870, sub_100A059E0);
                      swift_beginAccess(&static OS_os_log.dataSync, &v85, 0, 0);
                      v64 = (id)static OS_os_log.dataSync;
                      v65 = static os_log_type_t.error.getter(v64);
                      sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v65, "Missing board ownerName in data store save notification", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

                      sub_10079AC64(v52);
                      v23 = v52;
LABEL_16:
                      sub_10079AC64(v23);
                      return;
                    }
                    v60 = v84;
                    sub_1008580C4(v84, (uint64_t)v4);
                    swift_bridgeObjectRelease(v60);
                    v61 = type metadata accessor for CRLBoardIdentifier(0);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v4, 1, v61) == 1)
                    {
                      v62 = &qword_1013E0270;
                      v63 = v4;
LABEL_59:
                      sub_1004CB800((uint64_t)v63, v62);
                      goto LABEL_60;
                    }
                    v66 = &v4[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
                    v67 = *(_QWORD *)v66;
                    v68 = *((_QWORD *)v66 + 1);
                    swift_bridgeObjectRetain(v68);
                    sub_1004BBB8C((uint64_t)v4);
                    if ((v67 || v68 != 0xE000000000000000)
                      && (_stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, 0, 0xE000000000000000, 0) & 1) == 0)
                    {
                      v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
                      v71 = v69;
                      if (v67 == v70 && v68 == v69)
                      {
                        swift_bridgeObjectRelease(v68);
                      }
                      else
                      {
                        v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v70, v69, 0);
                        swift_bridgeObjectRelease(v71);
                        if ((v72 & 1) == 0)
                        {
                          v73 = (id *)(v1 + 32);
                          goto LABEL_71;
                        }
                      }
                    }
                    v73 = (id *)(v1 + 24);
LABEL_71:
                    v74 = *v73;
                    swift_bridgeObjectRelease(v68);
                    if (qword_1013DD870 != -1)
                      swift_once(&qword_1013DD870, sub_100A059E0);
                    swift_beginAccess(&static OS_os_log.dataSync, &v85, 0, 0);
                    v75 = (void *)static OS_os_log.dataSync;
                    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                    inited = swift_initStackObject(v76, v83);
                    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
                    *(_QWORD *)(inited + 56) = &type metadata for Bool;
                    *(_QWORD *)(inited + 64) = &protocol witness table for Bool;
                    *(_BYTE *)(inited + 32) = v32;
                    *(_QWORD *)(inited + 96) = &type metadata for Bool;
                    *(_QWORD *)(inited + 104) = &protocol witness table for Bool;
                    *(_BYTE *)(inited + 72) = v51;
                    v78 = v75;
                    v80 = static os_log_type_t.default.getter(v79);
                    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v80, "Scheduling a sync after saving data. Has significant changes: %d, newAssetsAdded: %d", 84, 2, inited);
                    swift_setDeallocating(inited);
                    v81 = sub_1004B804C(&qword_1013E0190);
                    swift_arrayDestroy(inited + 32, 2, v81);

                    sub_10079AC64(v52);
                    return;
                  }
LABEL_41:
                  v52 = 1;
                  if (!v6)
                    return;
                  goto LABEL_48;
                }
LABEL_40:
                v51 = 0;
                if ((v32 & 1) == 0)
                  goto LABEL_47;
                goto LABEL_41;
              }
            }
            else
            {
              v86 = 0u;
              v85 = 0u;
            }
            v50 = sub_1004CB800((uint64_t)&v85, &qword_1013E0230);
            goto LABEL_40;
          }
LABEL_32:
          v32 = 0;
          goto LABEL_33;
        }
      }
      else
      {
        v86 = 0u;
        v85 = 0u;
        swift_bridgeObjectRelease(v28);
      }
    }
    else
    {
      v86 = 0u;
      v85 = 0u;
    }
    v31 = sub_1004CB800((uint64_t)&v85, &qword_1013E0230);
    goto LABEL_32;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);

  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v21);
  if ((v24 & 1) != 0)
    goto LABEL_19;
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v85, 0, 0);
  v33 = (void *)static OS_os_log.dataSync;
  v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v35 = swift_initStackObject(v34, v87);
  *(_OWORD *)(v35 + 16) = xmmword_100EF5E40;
  v36 = v33;
  v37 = (void *)Notification.name.getter();
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  *(_QWORD *)(v35 + 56) = &type metadata for String;
  v41 = sub_1004CFC2C();
  *(_QWORD *)(v35 + 64) = v41;
  *(_QWORD *)(v35 + 32) = v38;
  *(_QWORD *)(v35 + 40) = v40;
  v42 = static os_log_type_t.error.getter(v41);
  sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v42, "Encountered unknown notification in handleDataStoreDidSaveSyncableData named: %@", 80, 2, v35);
  swift_setDeallocating(v35);
  v43 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v35 + 32, 1, v43);

}

uint64_t type metadata accessor for CRLSyncDriver()
{
  return objc_opt_self(_TtC8Freeform13CRLSyncDriver);
}

uint64_t sub_100B05950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)&dword_101405A60 + dword_101405A60);
  v4 = (_QWORD *)swift_task_alloc(unk_101405A64);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1004CF80C;
  return v6(a2);
}

void sub_100B059B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v15, 0, 0);
  v4 = (void *)static OS_os_log.crlDefault;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, &v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = type metadata accessor for CRLSyncController();
  *(_QWORD *)(inited + 64) = sub_1004B7878(&qword_101405A68, (uint64_t (*)(uint64_t))type metadata accessor for CRLSyncController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(inited + 32) = a1;
  v7 = v4;
  v8 = a1;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v10, "Fetch did begin for sync controller: %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v8, *(_QWORD *)(v2 + 24)) & 1) != 0)
  {
    v12 = *(_BYTE *)(v2 + 136);
    *(_BYTE *)(v2 + 136) = 1;
    sub_100B0448C(v12);
  }
  else if ((static NSObject.== infix(_:_:)(v8, *(_QWORD *)(v2 + 32)) & 1) != 0)
  {
    v13 = *(_BYTE *)(v2 + 137);
    *(_BYTE *)(v2 + 137) = 1;
    sub_100B04690(v13);
  }
}

char *sub_100B05B58(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, char *a10)
{
  uint64_t isEscapingClosureAtFileLocation;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t i;
  uint64_t v29;
  id v30;
  id v31;
  objc_class *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  id v40;
  char v43;
  uint64_t v44;
  _QWORD aBlock[5];
  uint64_t v47;
  objc_super v48;
  _QWORD v49[6];

  isEscapingClosureAtFileLocation = a9;
  v43 = a1 & 1;
  v49[3] = type metadata accessor for CRLSyncPriorityProvider(0);
  v49[4] = &off_10126D600;
  v49[0] = a5;
  v15 = &a10[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  v16 = &a10[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  v17 = &a10[OBJC_IVAR____TtC8Freeform17CRLSyncController_fetchStatusObserver];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17);
  v18 = &a10[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine];
  *((_QWORD *)v18 + 4) = 0;
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *(_QWORD *)&a10[OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask] = 0;
  v19 = OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks;
  v20 = a10;
  *(_QWORD *)&a10[v19] = sub_1008D681C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset] = &_swiftEmptySetSingleton;
  v21 = &v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((_QWORD *)v21 + 4) = 0;
  v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_shouldFetchAssets] = 0;
  v22 = OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager;
  v23 = type metadata accessor for CRLAccountChangeObserverManager();
  v24 = swift_allocObject(v23, 120, 15);
  swift_defaultActor_initialize(v24, v25);
  *(_QWORD *)(v24 + 112) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v20[v22] = v24;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter] = 0;
  v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope] = v43;
  *((_QWORD *)v15 + 1) = &off_1012872F0;
  v44 = a2;
  swift_unknownObjectWeakAssign(v15, a2);
  *((_QWORD *)v16 + 1) = &off_101295480;
  swift_unknownObjectWeakAssign(v16, a3);
  v26 = &unk_1013F1000;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue] = a4;
  sub_1004E90B0((uint64_t)v49, (uint64_t)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider]);
  if (!a9)
  {
    v29 = qword_1013DCB60;
    v30 = a4;
    if (v29 != -1)
      goto LABEL_8;
    goto LABEL_4;
  }
  v27 = a4;
  for (i = a9; ; i = qword_10147ECC0)
  {
    v31 = v27;
    *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLSyncController_container] = i;
    v40 = (id)isEscapingClosureAtFileLocation;

    v32 = (objc_class *)type metadata accessor for CRLSyncController();
    v48.receiver = v20;
    v48.super_class = v32;
    v33 = (char *)objc_msgSendSuper2(&v48, "init");
    v34 = *(void **)&v33[v26[456]];
    v20 = (char *)swift_allocObject(&unk_101294070, 80, 7);
    *((_QWORD *)v20 + 2) = a6;
    *((_QWORD *)v20 + 3) = a7;
    *((_QWORD *)v20 + 4) = v33;
    sub_100B06280((uint64_t)a8, (uint64_t)(v20 + 40));
    v35 = swift_allocObject(&unk_101294098, 32, 7);
    *(_QWORD *)(v35 + 16) = sub_100B062C8;
    *(_QWORD *)(v35 + 24) = v20;
    aBlock[4] = sub_1005B71BC;
    v47 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100618D24;
    aBlock[3] = &unk_1012940B0;
    v26 = _Block_copy(aBlock);
    v36 = v47;
    v37 = v33;
    v38 = v34;
    sub_1004C0F54(a6, a7);
    sub_100B062E8(a8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1007B21E0);
    swift_retain(v35);
    swift_release(v36);
    dispatch_sync(v38, v26);

    _Block_release(v26);
    sub_100B062E8(a8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004DAD0C);
    sub_1004C1024(a6, a7);
    swift_release(v44);
    swift_release(a3);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v49);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v35, "", 82, 496, 25, 1);
    swift_release(v20);
    swift_release(v35);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_8:
    swift_once(&qword_1013DCB60, sub_100637218);
LABEL_4:
    v27 = (void *)qword_10147ECC0;
  }
  return v37;
}

uint64_t sub_100B05FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100B05FC0, 0, 0);
}

uint64_t sub_100B05FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  __n128 v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 128) + 16);
  os_unfair_lock_lock(v3);
  *(_BYTE *)(v2 + 112) = v1 != 0;
  os_unfair_lock_unlock(v3);
  if (*(_BYTE *)(v2 + 112) != 1
    || (sub_10079AC64(0),
        sub_10079AC64(0),
        sub_10079A9B8(1),
        v4.n128_f64[0] = sub_10079A9B8(1),
        (*(_BYTE *)(v2 + 112) & 1) == 0))
  {
    v5 = *(_QWORD *)(v0 + 24);
    if ((*(_BYTE *)(v5 + 136) & 1) != 0 || *(_BYTE *)(v5 + 137) == 1)
    {
      sub_100B04ED0(*(void **)(v5 + 24));
      sub_100B04ED0(*(void **)(v5 + 32));
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_100B06094(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013F20AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1007960D4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100B0611C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013F21D4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100795FB4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100B061A0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100B061C4(uint64_t a1)
{
  uint64_t v1;

  return sub_100B03FB4(a1, v1);
}

double sub_100B061DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100B061EC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100B061F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100B04010(a1, v1);
}

void sub_100B061FC(uint64_t a1)
{
  uint64_t v1;

  sub_100B04078(a1, v1);
}

uint64_t sub_100B06208()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100B0623C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100B06280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F21D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100B062C8()
{
  uint64_t v0;

  return sub_1007961FC(*(void (**)(_QWORD *__return_ptr, uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t *)(v0 + 40));
}

uint64_t sub_100B062D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_100B062E8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

void sub_100B0633C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  id v33;

  v3 = v2;
  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
    v9 = sub_1004B7878(&qword_101405AF0, type metadata accessor for CRLFreehandDrawingShapeItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v10 = Set.Iterator.init(_cocoa:)(v32, v7, v8, v9);
    v5 = v32[0];
    v30 = v32[1];
    v11 = v32[2];
    v12 = v32[3];
    v13 = v32[4];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v15 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v11 = v15;
    v12 = 0;
  }
  v29 = (unint64_t)(v11 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v18 = __CocoaSet.Iterator.next()(v10);
  if (v18)
  {
    v19 = v18;
    v31 = v18;
    v20 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = v33;
    swift_unknownObjectRelease(v19);
    v22 = v12;
    v23 = v13;
    while (v21)
    {
      v33 = v21;
      sub_100B0BF80((uint64_t *)&v33, a2);

      if (v3)
      {
        v28 = v5;
        goto LABEL_39;
      }
      v12 = v22;
      v13 = v23;
      if (v5 < 0)
        goto LABEL_11;
LABEL_14:
      if (v13)
      {
        v23 = (v13 - 1) & v13;
        v24 = __clz(__rbit64(v13)) | (v12 << 6);
        v22 = v12;
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v22 >= v29)
          break;
        v25 = *(_QWORD *)(v30 + 8 * v22);
        if (!v25)
        {
          v26 = v12 + 2;
          if (v12 + 2 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
            goto LABEL_25;
          v26 = v12 + 3;
          if (v12 + 3 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
            goto LABEL_25;
          v26 = v12 + 4;
          if (v12 + 4 >= v29)
            break;
          v25 = *(_QWORD *)(v30 + 8 * v26);
          if (v25)
          {
LABEL_25:
            v22 = v26;
          }
          else
          {
            v22 = v12 + 5;
            if (v12 + 5 >= v29)
              break;
            v25 = *(_QWORD *)(v30 + 8 * v22);
            if (!v25)
            {
              v27 = v12 + 6;
              while (v29 != v27)
              {
                v25 = *(_QWORD *)(v30 + 8 * v27++);
                if (v25)
                {
                  v22 = v27 - 1;
                  goto LABEL_26;
                }
              }
              break;
            }
          }
        }
LABEL_26:
        v23 = (v25 - 1) & v25;
        v24 = __clz(__rbit64(v25)) + (v22 << 6);
      }
      v21 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v24);
    }
  }
  v28 = v5;
LABEL_39:
  sub_1004D284C(v28);
}

uint64_t sub_100B06628(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v4 = a1;
  sub_1006006EC(0, v2, 0);
  v3 = _swiftEmptyArrayStorage;
  result = sub_100B59DA8(v4);
  v7 = result;
  v8 = 0;
  v9 = v4 + 64;
  v10 = *(_BYTE *)(v4 + 32);
  v31 = v4 + 88;
  v34 = v4 + 64;
  v35 = v4;
  v32 = v2;
  v33 = v6;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << v10)
  {
    v13 = (unint64_t)v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(v4 + 36) != v6)
      goto LABEL_30;
    v14 = v3;
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v16 = *a2;
    if (*(_QWORD *)(*a2 + 16) && (v17 = sub_100843260(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7)), (v18 & 1) != 0))
      v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    else
      v19 = 0;
    v3 = v14;
    result = sub_100A11DAC(v19, v15);
    v20 = result;
    v22 = v21;
    v24 = *((_QWORD *)v14 + 2);
    v23 = *((_QWORD *)v14 + 3);
    if (v24 >= v23 >> 1)
    {
      result = sub_1006006EC(v23 > 1, v24 + 1, 1);
      v3 = v14;
    }
    *((_QWORD *)v3 + 2) = v24 + 1;
    v25 = &v3[2 * v24];
    *((_QWORD *)v25 + 4) = v20;
    *((_QWORD *)v25 + 5) = v22;
    v4 = v35;
    v10 = *(_BYTE *)(v35 + 32);
    v11 = 1 << v10;
    if (v7 >= 1 << v10)
      goto LABEL_31;
    v9 = v34;
    v26 = *(_QWORD *)(v34 + 8 * v13);
    if ((v26 & (1 << v7)) == 0)
      goto LABEL_32;
    v6 = v33;
    if (*(_DWORD *)(v35 + 36) != v33)
      goto LABEL_33;
    v27 = v26 & (-2 << (v7 & 0x3F));
    if (v27)
    {
      v11 = __clz(__rbit64(v27)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v12 = v32;
    }
    else
    {
      v28 = v13 + 1;
      v29 = (v11 + 63) >> 6;
      v12 = v32;
      if (v13 + 1 < v29)
      {
        v30 = *(_QWORD *)(v34 + 8 * v28);
        if (!v30)
        {
          v28 = v13 + 2;
          if (v13 + 2 >= v29)
            goto LABEL_4;
          v30 = *(_QWORD *)(v34 + 8 * v28);
          if (!v30)
          {
            while (v29 - 3 != v13)
            {
              v30 = *(_QWORD *)(v31 + 8 * v13++);
              if (v30)
              {
                v28 = v13 + 2;
                goto LABEL_21;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_21:
        v11 = __clz(__rbit64(v30)) + (v28 << 6);
      }
    }
LABEL_4:
    ++v8;
    v7 = v11;
    if (v8 == v12)
      return (uint64_t)v3;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

char *sub_100B06888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _QWORD);
  uint64_t v37;
  void *v38;
  char *v39;
  objc_class *v40;
  id v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  _BYTE v53[32];
  _BYTE v54[24];
  _BYTE v55[32];
  char *v56;

  v51 = a4;
  v47 = a2;
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v49 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v44 = (char *)&v43 - v14;
  __chkstk_darwin(v15);
  v50 = (uint64_t)&v43 - v16;
  __chkstk_darwin(v17);
  v46 = (uint64_t)&v43 - v18;
  __chkstk_darwin(v19);
  v45 = (uint64_t)&v43 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v43 - v22;
  v48 = v4;
  v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v24);
  v25 = sub_100582484(1);
  swift_release(v24);
  v26 = (char *)v25 + *(_QWORD *)(*v25 + 632);
  swift_beginAccess(v26, v55, 0, 0);
  sub_1004CB7BC((uint64_t)v26, (uint64_t)v10, &qword_1013F5530);
  swift_retain(v25);
  v27 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v27);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  swift_release(v25);
  swift_beginAccess(v26, v53, 33, 0);
  v28 = (uint64_t)v56;
  sub_100D3D738(v51);
  swift_endAccess(v53);
  if (v28)
  {
    swift_release(v25);
    sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    v51 = v27;
    v29 = (uint64_t)v44;
    v43 = v8;
    v30 = v46;
    sub_1004CB7BC(v47, v46, (uint64_t *)&unk_1013E1A50);
    v56 = v23;
    sub_1004CB7BC((uint64_t)v23, v50, (uint64_t *)&unk_1013E1A50);
    v31 = type metadata accessor for UUID(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31);
    v34 = v45;
    if (v33 == 1)
    {
      sub_1004C4938(v50, v45, (uint64_t *)&unk_1013E1A50);
      swift_retain(v25);
      sub_1004CB800(v30, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v25);
      sub_1004CB800(v50, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34, v30, v31);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
    }
    sub_1004CB7BC(v34, v29, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v26, v54, 33, 0);
    v35 = v49;
    sub_1004CB7BC(v29, v49, (uint64_t *)&unk_1013E1A50);
    v36 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v53, v51);
    sub_100582338(v35, v37, (uint64_t *)&unk_1013E1A50);
    v36(v53, 0);
    sub_1004CB800(v29, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v54);
    sub_1004CB800(v34, (uint64_t *)&unk_1013E1A50);
    swift_release(v25);
    v38 = *(void **)(v48 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v39 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v38;
    *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v25;
    v40 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v52.receiver = v39;
    v52.super_class = v40;
    v41 = v38;
    v26 = (char *)objc_msgSendSuper2(&v52, "init");
    sub_1004CB800((uint64_t)v56, (uint64_t *)&unk_1013E1A50);
  }
  return v26;
}

uint64_t sub_100B06D98()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t ObjectType;
  uint64_t v8;
  objc_class *ObjCClassFromMetadata;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[72];

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = type metadata accessor for CRLFreehandDrawingItem(0);
    if ((objc_msgSend(v2, "isKindOfClass:", swift_getObjCClassFromMetadata(v3, v4)) & 1) != 0)
    {

    }
    else
    {
      v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v5, v15);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      ObjectType = swift_getObjectType(v2);
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType, v8);
      v10 = NSStringFromClass(ObjCClassFromMetadata);
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v11;
      *(_QWORD *)(inited + 40) = v13;
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2, 52, "Freehand shapes should only be inside freehand drawings (got %@).", 65, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2u, 52, (uint64_t)"Freehand shapes should only be inside freehand drawings (got %@).", 65, 2u);

      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_100B06F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t (*v24)(__n128);
  __n128 v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v32[24];

  v1 = v0;
  v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v5);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v9 != &off_1013E3B70)
    v9 = 0;
  v10 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 632);
  swift_beginAccess(v10, v32, 0, 0);
  sub_1004CB7BC(v10, (uint64_t)v7, &qword_1013F5530);
  v11 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v11);
  sub_1004CB800((uint64_t)v7, &qword_1013F5530);
  v12 = &v4[*(int *)(v2 + 28)];
  v13 = *(_QWORD *)v12;
  v14 = v12[8];
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLShapeItemParentAffinity);
  v15 = 0;
  if ((v14 & 1) == 0)
    v15 = CRLiCloudConnectionStatus.rawValue.getter(v13);
  v16 = sub_100A118B4(v15);
  if (v17)
    return v16;
  v18 = *(_QWORD **)(v1 + v8);
  v19 = *(uint64_t (**)(uint64_t))(*v18 + 408);
  v20 = v19(v16);
  if ((v21 & 1) == 0 || v20 != 1)
  {
    v29 = v19(v20);
    return sub_1007776BC(v29, v30 & 1);
  }
  v22 = *v18;
  result = swift_conformsToProtocol2(*v18, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v24 = *(uint64_t (**)(__n128))(v22 + 704);
    v25 = swift_retain(v18);
    v26 = (void *)v24(v25);
    v27 = objc_msgSend(v26, "inferredAccessibilityDescriptionNoShapeNames", swift_release(v18).n128_f64[0]);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    return v28;
  }
  __break(1u);
  return result;
}

id sub_100B0717C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v2);
  v3 = sub_100582484(0);
  swift_release(v2);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v4;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v3;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v6 = v4;
  return objc_msgSendSuper2(&v8, "init");
}

uint64_t sub_100B07270(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  CKRecordID v40;
  Swift::String v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _QWORD v50[3];
  uint64_t v51;

  v3 = (int *)sub_1004B804C(&qword_101405B00);
  v44 = (char *)*((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (char *)type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v43);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = sub_1004B804C(&qword_1013F55C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
  v15 = swift_dynamicCastClass(a1, v14);
  if (v15)
  {
    v16 = (char *)v15;
    v46 = a1;
    swift_unknownObjectRetain(a1);
    v45 = sub_100B0C364(v16, v1);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v17 != &off_1013E3B70)
      v17 = 0;
    v18 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 752);
    swift_beginAccess(v18, v49, 0, 0);
    sub_1004B8460(v18, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*(_UNKNOWN ****)v19 != &off_1013E3B70)
      v19 = 0;
    v20 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 752);
    swift_beginAccess(v20, v48, 0, 0);
    sub_1004B8460(v20, (uint64_t)v7, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    v21 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
    CRStruct_1.actionUndoingDifference(from:)(v7, v43, v21);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    if ((*((unsigned int (**)(char *, uint64_t, int *))v44 + 6))(v13, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v13, &qword_1013F55C0);
      memset(v50, 0, sizeof(v50));
      v51 = 1;
    }
    else
    {
      v22 = v3[12];
      v23 = (uint64_t)&v13[v22];
      v24 = v3[16];
      v25 = (uint64_t)&v13[v24];
      v26 = v3[20];
      v27 = (uint64_t)&v13[v26];
      v28 = v3[24];
      v29 = (uint64_t)&v5[v22];
      v30 = (uint64_t)&v5[v24];
      v43 = &v13[v28];
      v44 = &v5[v24];
      v31 = (uint64_t)&v5[v26];
      v32 = (uint64_t)&v5[v28];
      sub_1004C4938((uint64_t)v13, (uint64_t)v5, &qword_101405B08);
      sub_1004C4938(v23, v29, &qword_1013F8AF0);
      sub_1004C4938(v25, v30, &qword_101405B10);
      sub_1004C4938(v27, v31, &qword_101405B10);
      sub_1004C4938((uint64_t)v43, v32, &qword_101405B18);
      v51 = (uint64_t)v3;
      v33 = sub_10050D1B0(v50);
      v34 = (uint64_t)v33 + v3[12];
      v35 = (uint64_t)v33 + v3[16];
      v36 = (uint64_t)v33 + v3[20];
      v37 = (uint64_t)v33 + v3[24];
      sub_1004C4938((uint64_t)v5, (uint64_t)v33, &qword_101405B08);
      sub_1004C4938(v29, v34, &qword_1013F8AF0);
      sub_1004C4938((uint64_t)v44, v35, &qword_101405B10);
      sub_1004C4938(v31, v36, &qword_101405B10);
      sub_1004C4938(v32, v37, &qword_101405B18);
    }
    v38 = v45;
    swift_beginAccess(v45 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v47, 33, 0);
    sub_10083DA20((uint64_t)v50, 5);
    swift_endAccess(v47);
    swift_unknownObjectRelease(v46);
    return v38;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2, 72, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2u, 72, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v40, v41);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100B07738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  CKRecordID v8;
  Swift::String v9;

  v3 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_unknownObjectRetain(a1);
    v6 = sub_100B0C63C(v5, v1);
    swift_unknownObjectRelease(a1);
    return v6;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2, 84, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2u, 84, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

void sub_100B07880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  void (*v24)(char *, _QWORD, uint64_t, int *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN ****v32;
  _UNKNOWN ****v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  char *v45;
  _BYTE v46[24];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  char *v53;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F55C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - v9;
  v11 = (int *)sub_1004B804C(&qword_101405B00);
  v12 = *((_QWORD *)v11 - 1);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v46, 0, 0);
    v16 = *v15;
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain(v16);
      v17 = sub_1008431EC(5);
      if ((v18 & 1) != 0)
      {
        sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v47, &qword_1013E0230);
      }
      else
      {
        v47 = 0;
        v48 = 0;
        v49 = 0;
        v50 = 1;
      }
      swift_bridgeObjectRelease();
      if (v50 != 1)
      {
        sub_1004C4938((uint64_t)&v47, (uint64_t)v51, &qword_1013E0230);
        if (v52)
        {
          v23 = swift_dynamicCast(v10, v51, (char *)&type metadata for Any + 8, v11, 6);
          v24 = *(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56);
          v24(v10, v23 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) != 1)
          {
            v25 = v11[12];
            v26 = (uint64_t)&v14[v25];
            v27 = v11[16];
            v28 = (uint64_t)&v14[v27];
            v42 = &v14[v27];
            v43 = &v14[v25];
            v29 = v11[20];
            v44 = v24;
            v45 = &v14[v29];
            v30 = v11[24];
            v53 = &v14[v30];
            v39 = &v10[v25];
            v40 = &v10[v27];
            v31 = (uint64_t)&v10[v29];
            v41 = &v10[v30];
            sub_1004C4938((uint64_t)v10, (uint64_t)v14, &qword_101405B08);
            sub_1004C4938((uint64_t)v39, v26, &qword_1013F8AF0);
            sub_1004C4938((uint64_t)v40, v28, &qword_101405B10);
            sub_1004C4938(v31, (uint64_t)v45, &qword_101405B10);
            sub_1004C4938((uint64_t)v41, (uint64_t)v53, &qword_101405B18);
            v32 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            if (*v32 == &off_1013E3B70)
              v33 = v32;
            else
              v33 = 0;
            v34 = (uint64_t)&v7[v11[12]];
            v35 = (uint64_t)&v7[v11[16]];
            v36 = (uint64_t)&v7[v11[20]];
            v41 = &v7[v11[24]];
            sub_1004CB7BC((uint64_t)v14, (uint64_t)v7, &qword_101405B08);
            sub_1004CB7BC((uint64_t)v43, v34, &qword_1013F8AF0);
            sub_1004CB7BC((uint64_t)v42, v35, &qword_101405B10);
            sub_1004CB7BC((uint64_t)v45, v36, &qword_101405B10);
            sub_1004CB7BC((uint64_t)v53, (uint64_t)v41, &qword_101405B18);
            v44(v7, 0, 1, v11);
            swift_beginAccess((char *)(*v33)[94] + (_QWORD)v33, v51, 33, 0);
            v37 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
            v38 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
            swift_retain(v32);
            CRStruct_1.apply(_:)(v7, v37, v38);
            sub_1004CB800((uint64_t)v7, &qword_1013F55C0);
            swift_endAccess(v51);
            swift_release(v32);
            v21 = &qword_101405B00;
            v22 = (uint64_t)v14;
            goto LABEL_11;
          }
LABEL_10:
          v21 = &qword_1013F55C0;
          v22 = (uint64_t)v10;
LABEL_11:
          sub_1004CB800(v22, v21);
          return;
        }
        v19 = &qword_1013E0230;
        v20 = (uint64_t *)v51;
LABEL_9:
        sub_1004CB800((uint64_t)v20, v19);
        (*(void (**)(char *, uint64_t, uint64_t, int *))(v12 + 56))(v10, 1, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      v47 = 0;
      v48 = 0;
      v49 = 0;
      v50 = 1;
    }
    v19 = (uint64_t *)&unk_1013DFC00;
    v20 = &v47;
    goto LABEL_9;
  }
}

void sub_100B07CCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  float v71;
  float v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  float v80;
  float v81;
  float v82;
  float v83;
  float v84;
  int v85;
  int v86;
  int v87;
  int v88;
  uint64_t v89;
  char v90;
  __n128 v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  char v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  void *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  id v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  void (*v154)(void);
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  void (*v170)(uint64_t, uint64_t, __n128);
  __n128 v171;
  uint64_t v172;
  int v173;
  _QWORD *v174;
  int v175;
  char v176;
  char v177;
  uint64_t v178;
  _QWORD *ObjectType;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  unsigned __int8 *v208;
  unsigned __int8 *v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  int v214;
  int v215;
  int v216;
  float v217;
  void *v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  void (*v223)(void);
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  char *v227;
  _QWORD *v228;
  uint64_t v229;
  _OWORD v230[14];
  uint64_t v231;
  _OWORD v232[14];
  uint64_t v233;
  _BYTE v234[24];
  void *v235;
  uint64_t v236;
  _QWORD v237[29];
  _QWORD v238[29];
  _BYTE v239[232];
  _OWORD v240[14];
  uint64_t v241;
  _OWORD v242[14];
  uint64_t v243;

  v6 = v5;
  v228 = (_QWORD *)a5;
  v188 = a4;
  v185 = a1;
  v219 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v219);
  v227 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v183 - v11;
  v225 = type metadata accessor for CRLPKStrokePathData(0);
  v210 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v187 = (uint64_t)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v194 = (uint64_t)&v183 - v15;
  __chkstk_darwin(v16);
  v193 = (uint64_t)&v183 - v17;
  v18 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v18);
  v209 = (unsigned __int8 *)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v208 = (unsigned __int8 *)&v183 - v21;
  v22 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v183 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v183 - v29;
  __chkstk_darwin(v31);
  v207 = (char *)&v183 - v32;
  __chkstk_darwin(v33);
  v206 = (char *)&v183 - v34;
  __chkstk_darwin(v35);
  v205 = (char *)&v183 - v36;
  __chkstk_darwin(v37);
  v204 = (char *)&v183 - v38;
  __chkstk_darwin(v39);
  v203 = (char *)&v183 - v40;
  v229 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v229);
  v202 = (char *)&v183 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v201 = (char *)&v183 - v43;
  __chkstk_darwin(v44);
  v200 = (char *)&v183 - v45;
  __chkstk_darwin(v46);
  v199 = (char *)&v183 - v47;
  __chkstk_darwin(v48);
  v198 = (char *)&v183 - v49;
  __chkstk_darwin(v50);
  v197 = (char *)&v183 - v51;
  __chkstk_darwin(v52);
  v196 = (char *)&v183 - v53;
  __chkstk_darwin(v54);
  v195 = (char *)&v183 - v55;
  v226 = v6;
  v211 = a2;
  if (a3 == 5)
  {
    v225 = (uint64_t)v12;
    v150 = v219;
    v151 = type metadata accessor for CRLShapeItem(0);
    v152 = swift_dynamicCastClass(v188, v151);
    if (!v152)
      return;
    v153 = (void *)v152;
    v154 = *(void (**)(void))(v152 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v224 = swift_conformsToProtocol2(*(_QWORD *)v154, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!v224)
      goto LABEL_99;
    v155 = *(_QWORD *)(a2 + 16);
    v156 = v225;
    if (!v155)
    {
      v181 = v188;
      swift_unknownObjectRetain(v188);
      swift_retain(v154);
LABEL_93:
      swift_unknownObjectRetain(v181);
      sub_100B0DE64(v185, a2, 5, v153, v6);
      swift_release(v154);
      v182 = v181;
      goto LABEL_94;
    }
    v218 = v153;
    v221 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace;
    v222 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes;
    v220 = &v236;
    swift_unknownObjectRetain(v188);
    swift_bridgeObjectRetain(a2);
    swift_retain(v154);
    v157 = (_QWORD *)(a2 + 40);
    v158 = (uint64_t *)&unk_1013F1530;
    v159 = v150;
    v223 = v154;
    while (1)
    {
      v160 = *(v157 - 1);
      v161 = *v157;
      v162 = v160 == 0x7974536570616873 && v161 == 0xEE0061746144656CLL;
      if (!v162
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974536570616873, 0xEE0061746144656CLL, v160, v161, 0) & 1) == 0)
      {
        goto LABEL_70;
      }
      v228 = v157;
      v229 = v155;
      (*(void (**)(_QWORD))(v224 + 16))(*(_QWORD *)v154);
      v163 = sub_1004B804C(&qword_1013E0A88);
      CRRegister.wrappedValue.getter(v163);
      sub_1004C4938((uint64_t)v234, (uint64_t)v237, v158);
      sub_1004B84A4(v156, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      v164 = *(_QWORD **)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v165 = *v164;
      v166 = swift_conformsToProtocol2(*v164, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (!v166)
        goto LABEL_97;
      v167 = v159;
      v168 = v166;
      v169 = v158;
      v170 = *(void (**)(uint64_t, uint64_t, __n128))(v166 + 16);
      v171 = swift_retain(v164);
      v172 = (uint64_t)v227;
      v170(v165, v168, v171);
      swift_release(v164);
      CRRegister.wrappedValue.getter(v163);
      sub_1004C4938((uint64_t)v234, (uint64_t)v238, v169);
      sub_1004B84A4(v172, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      sub_1004C4938((uint64_t)v237, (uint64_t)v239, v169);
      v159 = v167;
      v158 = v169;
      if (sub_1004F276C((uint64_t)v239) == 1)
      {
        sub_1004C4938((uint64_t)v238, (uint64_t)v234, v169);
        v173 = sub_1004F276C((uint64_t)v234);
        v156 = v225;
        v174 = v226;
        v154 = v223;
        v155 = v229;
        if (v173 != 1)
          goto LABEL_83;
      }
      else
      {
        sub_1004C4938((uint64_t)v238, (uint64_t)v234, v169);
        v175 = sub_1004F276C((uint64_t)v234);
        v174 = v226;
        v155 = v229;
        if (v175 == 1)
        {
          v156 = v225;
          v154 = v223;
LABEL_83:
          sub_1004C4938((uint64_t)v237, (uint64_t)v234, v158);
          sub_1004C4938((uint64_t)v238, (uint64_t)v220, v158);
          sub_1004F2784((uint64_t)v234);
LABEL_84:
          v6 = v174;
          *(_QWORD *)((char *)v174 + v222) = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)((char *)v174 + v221) = 0;
          swift_bridgeObjectRelease();
          goto LABEL_69;
        }
        sub_1004C4938((uint64_t)v238, (uint64_t)v230, v158);
        v242[11] = v230[11];
        v242[12] = v230[12];
        v242[13] = v230[13];
        v242[7] = v230[7];
        v242[8] = v230[8];
        v242[9] = v230[9];
        v242[10] = v230[10];
        v242[3] = v230[3];
        v242[4] = v230[4];
        v242[5] = v230[5];
        v242[6] = v230[6];
        v242[0] = v230[0];
        v242[1] = v230[1];
        v243 = v231;
        v242[2] = v230[2];
        sub_1004C4938((uint64_t)v237, (uint64_t)v232, v158);
        v240[11] = v232[11];
        v240[12] = v232[12];
        v240[13] = v232[13];
        v240[7] = v232[7];
        v240[8] = v232[8];
        v240[9] = v232[9];
        v240[10] = v232[10];
        v240[3] = v232[3];
        v240[4] = v232[4];
        v240[5] = v232[5];
        v240[6] = v232[6];
        v240[0] = v232[0];
        v240[1] = v232[1];
        v241 = v233;
        v240[2] = v232[2];
        sub_1008D3994(v237, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
        v176 = sub_1008BE12C((uint64_t)v240, (uint64_t)v242);
        sub_1008D3994(v238, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v237, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v237, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        v156 = v225;
        v154 = v223;
        if ((v176 & 1) == 0)
          goto LABEL_84;
      }
      v6 = v174;
LABEL_69:
      v157 = v228;
LABEL_70:
      v157 += 2;
      if (!--v155)
      {
        a2 = v211;
        swift_bridgeObjectRelease();
        v181 = v188;
        v153 = v218;
        goto LABEL_93;
      }
    }
  }
  if (a3)
  {
    v177 = a3;
    v178 = v188;
    ObjectType = (_QWORD *)swift_getObjectType(v188);
    sub_10092658C(v185, a2, v177, v178, v6, ObjectType, (uint64_t)v228);
    return;
  }
  v56 = type metadata accessor for CRLShapeItem(0);
  v57 = (char *)swift_dynamicCastClass(v188, v56);
  if (v57)
  {
    v184 = v57;
    v58 = *(_QWORD **)&v57[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (!swift_conformsToProtocol2(*v58, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
      goto LABEL_98;
    v59 = *(_QWORD *)(a2 + 16);
    if (v59)
    {
      v191 = v27;
      v192 = v24;
      v221 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace;
      v213 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes;
      v186 = v185 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
      swift_unknownObjectRetain(v188);
      swift_retain(v58);
      swift_bridgeObjectRetain(a2);
      v60 = (uint64_t *)(a2 + 40);
      v189 = v22;
      v190 = v30;
      v222 = (uint64_t)v58;
      while (1)
      {
        v61 = *(v60 - 1);
        v62 = *v60;
        v63 = v61 == 0x6641746E65726170 && v62 == 0xEE007974696E6966;
        if (!v63
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, v61, v62, 0) & 1) == 0)
        {
          goto LABEL_9;
        }
        v219 = (uint64_t)v60;
        v220 = (uint64_t *)v59;
        v64 = *(char **)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (!swift_conformsToProtocol2(*(_QWORD *)v64, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
        {
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
          return;
        }
        v65 = (uint64_t)v195;
        v223 = *(void (**)(void))(*v58 + 640);
        v223();
        swift_retain(v64);
        v66 = sub_1004B804C((uint64_t *)&unk_101406B00);
        v67 = (uint64_t)v203;
        CRRegister.wrappedValue.getter(v66);
        sub_1004CB800(v65, &qword_1013F5530);
        v68 = type metadata accessor for CRLBoardItemParentAffinity(0);
        v69 = v67 + *(int *)(v68 + 20);
        v70 = *(float *)v69;
        v71 = *(float *)(v69 + 4);
        v72 = *(float *)(v69 + 8);
        LODWORD(v218) = *(_DWORD *)(v69 + 12);
        v217 = *(float *)(v69 + 16);
        v73 = *(unsigned __int8 *)(v69 + 20);
        v215 = *(unsigned __int8 *)(v69 + 21);
        v216 = v73;
        v214 = *(unsigned __int8 *)(v69 + 22);
        v212 = *(unsigned __int8 *)(v69 + 23);
        v74 = *(_QWORD *)(v69 + 24);
        swift_bridgeObjectRetain(v74);
        v75 = sub_1004B84A4(v67, type metadata accessor for CRLShapeItemParentAffinity);
        v76 = *(void (**)(uint64_t))(*(_QWORD *)v64 + 640);
        v77 = (uint64_t)v196;
        v227 = v64;
        v224 = (uint64_t)v76;
        v76(v75);
        v78 = (uint64_t)v204;
        v228 = (_QWORD *)v66;
        CRRegister.wrappedValue.getter(v66);
        sub_1004CB800(v77, &qword_1013F5530);
        v79 = v78 + *(int *)(v68 + 20);
        v80 = *(float *)v79;
        v81 = *(float *)(v79 + 4);
        v83 = *(float *)(v79 + 8);
        v82 = *(float *)(v79 + 12);
        v84 = *(float *)(v79 + 16);
        v85 = *(unsigned __int8 *)(v79 + 20);
        v86 = *(unsigned __int8 *)(v79 + 21);
        v87 = *(unsigned __int8 *)(v79 + 22);
        v88 = *(unsigned __int8 *)(v79 + 23);
        v89 = *(_QWORD *)(v79 + 24);
        swift_bridgeObjectRetain(v89);
        sub_1004B84A4(v78, type metadata accessor for CRLShapeItemParentAffinity);
        if (v70 != v80
          || v71 != v81
          || v72 != v83
          || *(float *)&v218 != v82
          || v217 != v84
          || ((v216 ^ v85) & 1) != 0
          || ((v215 ^ v86) & 1) != 0
          || ((v214 ^ v87) & 1) != 0
          || ((v212 ^ v88) & 1) != 0)
        {
          break;
        }
        v90 = sub_100C9E04C(v74, v89);
        swift_bridgeObjectRelease();
        v91 = swift_bridgeObjectRelease();
        v92 = v226;
        if ((v90 & 1) == 0)
          goto LABEL_28;
LABEL_29:
        v93 = (uint64_t)v197;
        ((void (*)(__n128))v223)(v91);
        v94 = (uint64_t)v228;
        v95 = (uint64_t)v205;
        CRRegister.wrappedValue.getter(v228);
        sub_1004CB800(v93, &qword_1013F5530);
        v96 = v189;
        v97 = v208;
        sub_1004B8460(v95 + *(int *)(v189 + 20), (uint64_t)v208, type metadata accessor for CRLPathSourceData);
        v98 = sub_1004B84A4(v95, type metadata accessor for CRLShapeItemParentAffinity);
        v99 = (uint64_t)v198;
        ((void (*)(uint64_t))v224)(v98);
        v100 = (uint64_t)v206;
        CRRegister.wrappedValue.getter(v94);
        sub_1004CB800(v99, &qword_1013F5530);
        v101 = v96;
        v102 = v209;
        sub_1004B8460(v100 + *(int *)(v96 + 20), (uint64_t)v209, type metadata accessor for CRLPathSourceData);
        sub_1004B84A4(v100, type metadata accessor for CRLShapeItemParentAffinity);
        v103 = sub_1009345F4(v97, v102);
        sub_1004B84A4((uint64_t)v102, type metadata accessor for CRLPathSourceData);
        v104 = sub_1004B84A4((uint64_t)v97, type metadata accessor for CRLPathSourceData);
        v106 = (uint64_t)v191;
        v107 = (uint64_t)v192;
        v108 = (uint64_t)v190;
        if ((v103 & 1) == 0)
        {
          v109 = v226;
          *(_QWORD *)((char *)v226 + v213) = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)((char *)v109 + v221) = 0;
          v105 = swift_bridgeObjectRelease();
        }
        v110 = (uint64_t)v199;
        ((void (*)(uint64_t, __n128))v223)(v104, v105);
        v111 = (uint64_t)v207;
        CRRegister.wrappedValue.getter(v228);
        sub_1004CB800(v110, &qword_1013F5530);
        v112 = v101;
        v113 = v111 + *(int *)(v101 + 24);
        v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48);
        if (v114(v113, 1, v225))
        {
          v115 = sub_1004B84A4(v111, type metadata accessor for CRLShapeItemParentAffinity);
          v116 = 0;
        }
        else
        {
          v117 = v113;
          v118 = v193;
          sub_1004B8460(v117, v193, type metadata accessor for CRLPKStrokePathData);
          sub_1004B84A4(v111, type metadata accessor for CRLShapeItemParentAffinity);
          v116 = (void *)sub_1009A6868();
          v115 = sub_1004B84A4(v118, type metadata accessor for CRLPKStrokePathData);
        }
        v119 = (uint64_t)v200;
        ((void (*)(uint64_t))v224)(v115);
        CRRegister.wrappedValue.getter(v228);
        sub_1004CB800(v119, &qword_1013F5530);
        v120 = v108 + *(int *)(v101 + 24);
        if (v114(v120, 1, v225))
        {
          v121 = sub_1004B84A4(v108, type metadata accessor for CRLShapeItemParentAffinity);
          if (!v116)
            goto LABEL_39;
LABEL_36:
          v123 = v116;
LABEL_37:

LABEL_38:
          v235 = &type metadata for Bool;
          v234[0] = 1;
          sub_1004CB7BC((uint64_t)v234, (uint64_t)v242, &qword_1013E0230);
          swift_beginAccess(v186, v240, 33, 0);
          sub_10083DAD8((uint64_t)v242, 0x18uLL);
          swift_endAccess(v240);
          sub_1004CB800((uint64_t)v234, &qword_1013E0230);
          v124 = v226;
          *(_QWORD *)((char *)v226 + v213) = 0;
          swift_bridgeObjectRelease();
          *(_QWORD *)((char *)v124 + v221) = 0;
          v122 = swift_bridgeObjectRelease();
          goto LABEL_39;
        }
        v129 = v120;
        v130 = v193;
        sub_1004B8460(v129, v193, type metadata accessor for CRLPKStrokePathData);
        sub_1004B84A4(v108, type metadata accessor for CRLShapeItemParentAffinity);
        v123 = (void *)sub_1009A6868();
        v121 = sub_1004B84A4(v130, type metadata accessor for CRLPKStrokePathData);
        if (v116)
        {
          if (!v123)
            goto LABEL_36;
          sub_1004B8930(0, &qword_101405AF8, off_101229968);
          v131 = v116;
          v132 = static NSObject.== infix(_:_:)(v131, v123);

          if ((v132 & 1) == 0)
            goto LABEL_38;
        }
        else if (v123)
        {
          goto LABEL_37;
        }
LABEL_39:
        v125 = (uint64_t)v201;
        v58 = (_QWORD *)v222;
        ((void (*)(uint64_t, __n128))v223)(v121, v122);
        CRRegister.wrappedValue.getter(v228);
        sub_1004CB800(v125, &qword_1013F5530);
        v126 = v106 + *(int *)(v101 + 24);
        if (v114(v126, 1, v225))
        {
          v127 = sub_1004B84A4(v106, type metadata accessor for CRLShapeItemParentAffinity);
          v128 = 0;
          v6 = v226;
        }
        else
        {
          v133 = v126;
          v134 = v194;
          sub_1004B8460(v133, v194, type metadata accessor for CRLPKStrokePathData);
          sub_1004B84A4(v106, type metadata accessor for CRLShapeItemParentAffinity);
          v135 = *(_QWORD *)(v134 + 80);
          if (v135)
          {
            sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
            swift_bridgeObjectRetain(v135);
            v128 = sub_100942548(v136, v137);
          }
          else
          {
            v128 = 0;
          }
          v6 = v226;
          v127 = sub_1004B84A4(v194, type metadata accessor for CRLPKStrokePathData);
        }
        v138 = (uint64_t)v202;
        ((void (*)(uint64_t))v224)(v127);
        CRRegister.wrappedValue.getter(v228);
        sub_1004CB800(v138, &qword_1013F5530);
        v139 = v107 + *(int *)(v112 + 24);
        if (v114(v139, 1, v225))
        {
          v140 = v107;
          v141 = type metadata accessor for CRLShapeItemParentAffinity;
          goto LABEL_53;
        }
        v142 = v139;
        v143 = v187;
        sub_1004B8460(v142, v187, type metadata accessor for CRLPKStrokePathData);
        sub_1004B84A4(v107, type metadata accessor for CRLShapeItemParentAffinity);
        v144 = *(_QWORD *)(v143 + 80);
        if (!v144)
        {
          v140 = v143;
          v141 = type metadata accessor for CRLPKStrokePathData;
LABEL_53:
          sub_1004B84A4(v140, v141);
          v60 = (uint64_t *)v219;
          if (v128)
            goto LABEL_54;
          goto LABEL_7;
        }
        sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
        swift_bridgeObjectRetain(v144);
        v147 = sub_100942548(v145, v146);
        sub_1004B84A4(v143, type metadata accessor for CRLPKStrokePathData);
        if (v128)
        {
          v60 = (uint64_t *)v219;
          if (!v147)
            goto LABEL_54;
          v148 = v128;
          v149 = static NSObject.== infix(_:_:)(v148, v147);

          if ((v149 & 1) == 0)
            goto LABEL_55;
        }
        else
        {
          v128 = v147;
          v60 = (uint64_t *)v219;
          if (v147)
          {
LABEL_54:

LABEL_55:
            *(_QWORD *)((char *)v6 + v213) = 0;
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v6 + v221) = 0;
            swift_release(v227);
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
LABEL_7:
        swift_release(v227);
LABEL_8:
        a2 = v211;
        v59 = (uint64_t)v220;
LABEL_9:
        v60 += 2;
        if (!--v59)
        {
          swift_bridgeObjectRelease();
          v180 = v188;
          goto LABEL_91;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v226;
LABEL_28:
      *(_QWORD *)((char *)v92 + v221) = 0;
      v91 = swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    v180 = v188;
    swift_unknownObjectRetain(v188);
    swift_retain(v58);
LABEL_91:
    swift_unknownObjectRetain(v180);
    sub_100B0DE64(v185, a2, 0, v184, v6);
    swift_release(v58);
    v182 = v180;
LABEL_94:
    swift_unknownObjectRelease_n(v182, 2);
  }
}

uint64_t sub_100B08F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(__n128);
  id v30;
  __n128 v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[29];
  _OWORD v61[14];
  uint64_t v62;
  _OWORD v63[14];
  uint64_t v64;

  v1 = v0;
  v2 = type metadata accessor for CRLPKStrokePathData(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes);
  v14 = v13;
  if (v13)
    goto LABEL_17;
  v54 = v10;
  v55 = v8;
  v56 = v3;
  v57 = v2;
  v58 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes;
  v15 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
  v16 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  if (v16)
  {
    v17 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  }
  else
  {
    v53 = v5;
    v18 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v19 = *v18;
    result = swift_conformsToProtocol2(*v18, &protocol descriptor for CRLStyleableData);
    if (!result)
      goto LABEL_19;
    *(_QWORD *)&v63[0] = v18;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(result + 8))(v60, v19, result);
    sub_1004C4938((uint64_t)v60, (uint64_t)v61, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)v61) == 1)
      goto LABEL_14;
    v63[12] = v61[12];
    v63[13] = v61[13];
    v64 = v62;
    v63[8] = v61[8];
    v63[9] = v61[9];
    v63[10] = v61[10];
    v63[11] = v61[11];
    v63[4] = v61[4];
    v63[5] = v61[5];
    v63[6] = v61[6];
    v63[7] = v61[7];
    v63[0] = v61[0];
    v63[1] = v61[1];
    v63[2] = v61[2];
    v63[3] = v61[3];
    v21 = sub_1008BEA4C((uint64_t)v63, 1);
    sub_1008D3994(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
    v22 = *(void **)(v1 + v15);
    *(_QWORD *)(v1 + v15) = v21;
    v17 = v21;

    v5 = v53;
  }
  v23 = objc_opt_self(CRLPencilKitInkStroke);
  v24 = swift_dynamicCastObjCClass(v17, v23);
  if (!v24)
  {
    v40 = v16;

LABEL_14:
    sub_100757E04(&_mh_execute_header, (uint64_t)"pencilKitStrokes", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2, 197, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilKitStrokes", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingShapeItem.swift", 98, 2u, 197, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v14 = 0;
LABEL_17:
    swift_bridgeObjectRetain(v13);
    return v14;
  }
  v25 = v24;
  v52 = v17;
  v53 = v5;
  v26 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v27 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v28 = *v27;
  result = swift_conformsToProtocol2(*v27, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v29 = *(uint64_t (**)(__n128))(v28 + 704);
    v30 = v16;
    v31 = swift_retain(v27);
    v32 = (void *)v29(v31);
    v33 = objc_msgSend(v32, "bezierPath", swift_release(v27).n128_f64[0]);

    v34 = *(_QWORD *)(v1 + v26);
    if (*(_UNKNOWN ****)v34 != &off_1013E3B70)
      v34 = 0;
    v35 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 632);
    swift_beginAccess(v35, &v59, 0, 0);
    sub_1004CB7BC(v35, (uint64_t)v12, &qword_1013F5530);
    v36 = sub_1004B804C((uint64_t *)&unk_101406B00);
    v37 = (uint64_t)v55;
    CRRegister.wrappedValue.getter(v36);
    sub_1004CB800((uint64_t)v12, &qword_1013F5530);
    v38 = v37 + *(int *)(v6 + 24);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v38, 1, v57))
    {
      sub_1004B84A4(v37, type metadata accessor for CRLShapeItemParentAffinity);
      v39 = 0;
    }
    else
    {
      v41 = v38;
      v42 = (uint64_t)v53;
      sub_1004B8460(v41, (uint64_t)v53, type metadata accessor for CRLPKStrokePathData);
      sub_1004B84A4(v37, type metadata accessor for CRLShapeItemParentAffinity);
      v39 = (void *)sub_1009A6868();
      sub_1004B84A4(v42, type metadata accessor for CRLPKStrokePathData);
    }
    v43 = v52;
    v44 = (void *)objc_opt_self(CRLPKStrokeConverter);
    v45 = sub_100B0A4C4();
    v46 = objc_msgSend(v44, "pencilKitStrokesFromPath:inkStroke:strokePathCompactData:maskPath:", v33, v25, v39, v45);

    v48 = type metadata accessor for PKStroke(0, v47);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v48);

    v50 = v58;
    v51 = *(_QWORD *)(v1 + v58);
    *(_QWORD *)(v1 + v58) = v49;

    swift_bridgeObjectRelease(v51);
    v14 = *(_QWORD *)(v1 + v50);
    swift_bridgeObjectRetain(v14);
    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

Class sub_100B094F4(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSArray v7;

  v4 = a1;
  v5 = a3();

  if (v5)
  {
    type metadata accessor for PKStroke(0, v6);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v7.super.isa = 0;
  }
  return v7.super.isa;
}

double *sub_100B09554(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  double d;
  CGFloat ty;
  CGFloat tx;
  CGFloat c;
  CGFloat b;
  double a;
  uint64_t (*v17)(void);
  _QWORD *v18;
  void *v19;
  void *Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;
  CGFloat v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  CGAffineTransform v39;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v3 = type metadata accessor for PKStroke(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v10 = v2;
  d = 1.0;
  ty = 0.0;
  tx = 0.0;
  c = 0.0;
  b = 0.0;
  a = 1.0;
  while (1)
  {
    v17 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0xE0);
    v18 = v10;
    v19 = (void *)v17();
    objc_msgSend(v19, "transform");
    v38 = *(_OWORD *)&t1.a;
    v37 = *(_OWORD *)&t1.c;
    v36 = *(_OWORD *)&t1.tx;

    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v38;
    *(_OWORD *)&t2.c = v37;
    *(_OWORD *)&t2.tx = v36;
    CGAffineTransformConcat(&v39, &t1, &t2);
    a = v39.a;
    b = v39.b;
    c = v39.c;
    d = v39.d;
    tx = v39.tx;
    ty = v39.ty;
    Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v18 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);

    if (!Strong)
      break;

    v21 = type metadata accessor for CRLBoardItem(0);
    v10 = (_QWORD *)swift_dynamicCastClass(Strong, v21);
    if (!v10)
      goto LABEL_6;
  }
  Strong = v18;
LABEL_6:

  v22 = sub_100B08F4C();
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)(v22 + 16);
    if (v24)
    {
      *(_QWORD *)&t2.a = _swiftEmptyArrayStorage;
      sub_100600C9C(0, v24, 0);
      v25 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      *(_QWORD *)&v36 = v23;
      *(_QWORD *)&v38 = v25;
      v26 = v23 + v25;
      v27 = *(_QWORD *)(v4 + 72);
      *(_QWORD *)&v37 = *(_QWORD *)(v4 + 16);
      v28 = v4;
      do
      {
        ((void (*)(char *, unint64_t, uint64_t))v37)(v6, v26, v3);
        isa = PKStroke._bridgeToObjectiveC()().super.isa;
        t1.a = a;
        t1.b = b;
        t1.c = c;
        t1.d = d;
        t1.tx = tx;
        t1.ty = ty;
        v30 = -[objc_class crl_strokeByAppendingTransform:](isa, "crl_strokeByAppendingTransform:", &t1, (_QWORD)v36);

        static PKStroke._unconditionallyBridgeFromObjectiveC(_:)(v30);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v31 = t2.a;
        if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&t2.a) & 1) == 0)
        {
          sub_100600C9C(0, *(_QWORD *)(*(_QWORD *)&v31 + 16) + 1, 1);
          v31 = t2.a;
        }
        v33 = *(_QWORD *)(*(_QWORD *)&v31 + 16);
        v32 = *(_QWORD *)(*(_QWORD *)&v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_100600C9C(v32 > 1, v33 + 1, 1);
          v31 = t2.a;
        }
        *(_QWORD *)(*(_QWORD *)&v31 + 16) = v33 + 1;
        v34 = *(_QWORD *)&v31 + v38 + v33 * v27;
        v4 = v28;
        (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v34, v9, v3);
        t2.a = v31;
        v26 += v27;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    }
  }
  else
  {
    v31 = 0.0;
  }
  return *(double **)&v31;
}

double sub_100B099E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v4;
  char v5;
  double result;

  v2 = v1;
  sub_100776700(a1);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong
    && (v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) != 0))
  {

  }
  else
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace) = 0;

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100B09ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[29];
  _OWORD v12[14];
  uint64_t v13;
  _OWORD v14[14];
  uint64_t v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  v4 = v3;
  if (v3)
    goto LABEL_6;
  v5 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v6 = *v5;
  result = swift_conformsToProtocol2(*v5, &protocol descriptor for CRLStyleableData);
  if (result)
  {
    *(_QWORD *)&v14[0] = v5;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(result + 8))(v11, v6, result);
    sub_1004C4938((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)v12) == 1)
    {
      v4 = 0;
    }
    else
    {
      v14[12] = v12[12];
      v14[13] = v12[13];
      v15 = v13;
      v14[8] = v12[8];
      v14[9] = v12[9];
      v14[10] = v12[10];
      v14[11] = v12[11];
      v14[4] = v12[4];
      v14[5] = v12[5];
      v14[6] = v12[6];
      v14[7] = v12[7];
      v14[0] = v12[0];
      v14[1] = v12[1];
      v14[2] = v12[2];
      v14[3] = v12[3];
      v4 = sub_1008BEA4C((uint64_t)v14, 1);
      sub_1008D3994(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
      v8 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      v9 = v4;

    }
LABEL_6:
    v10 = v3;
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

void sub_100B09C3C(void *a1)
{
  sub_100B0FBD0(a1);

}

void sub_100B09D20(void *a1)
{
  sub_100B0FC7C(a1);

}

uint64_t sub_100B09D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];

  v1 = type metadata accessor for CRLPKStrokePathData(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v11 != &off_1013E3B70)
    v11 = 0;
  v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 632);
  swift_beginAccess(v12, v18, 0, 0);
  sub_1004CB7BC(v12, (uint64_t)v10, &qword_1013F5530);
  v13 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v13);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  v14 = (uint64_t)&v7[*(int *)(v5 + 24)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1))
  {
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
    return 0;
  }
  else
  {
    sub_1004B8460(v14, (uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
    v15 = sub_1009A6868();
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
  }
  return v15;
}

void sub_100B09FA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char v17;
  _UNKNOWN ****v18;
  _UNKNOWN ****v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _UNKNOWN ****v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(_BYTE *, _QWORD);
  uint64_t v34;
  _QWORD *Strong;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  CKRecordID v40;
  Swift::String v41;
  char *v42;
  id v43;
  uint64_t v44;
  _UNKNOWN ****v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[32];
  _BYTE v49[24];
  char v50[24];

  v2 = v1;
  v4 = type metadata accessor for CRLPKStrokePathData(0);
  v46 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v47);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013FA6D8);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v15 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v16 = v15, v17 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x2F0))(), v16, (v17 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v40, v41);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (a1)
  {
    v42 = v6;
    v44 = v2;
    v18 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 == &off_1013E3B70)
      v19 = v18;
    else
      v19 = 0;
    v20 = (uint64_t)(*v19)[79] + (_QWORD)v19;
    swift_beginAccess(v20, v50, 0, 0);
    sub_1004CB7BC(v20, (uint64_t)v11, &qword_1013F5530);
    v43 = a1;
    v45 = v18;
    swift_retain(v18);
    v21 = sub_1004B804C((uint64_t *)&unk_101406B00);
    CRRegister.wrappedValue.getter(v21);
    sub_1004CB800((uint64_t)v11, &qword_1013F5530);
    v22 = &v9[*(int *)(v7 + 24)];
    v23 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v22, 1, v4))
    {
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLShapeItemParentAffinity);
      v24 = 0;
      v25 = v44;
      v26 = v45;
      v27 = v43;
    }
    else
    {
      v28 = (uint64_t)v22;
      v29 = (uint64_t)v42;
      sub_1004B8460(v28, (uint64_t)v42, type metadata accessor for CRLPKStrokePathData);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLShapeItemParentAffinity);
      v24 = *(id *)(v29 + 80);
      if (v24)
      {
        sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
        v30 = swift_bridgeObjectRetain(v24);
        v24 = sub_100942548(v30, v31);
      }
      v25 = v44;
      v26 = v45;
      v27 = v43;
      sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLPKStrokePathData);
    }
    v32 = v27;
    sub_1009A5BB4(v32, v24, (uint64_t)v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v4);
    swift_beginAccess((char *)(*v19)[79] + (_QWORD)v19, v49, 33, 0);
    v33 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v48, v21);
    sub_100582338((uint64_t)v14, v34 + *(int *)(v7 + 24), &qword_1013FA6D8);
    v33(v48, 0);
    swift_endAccess(v49);
    swift_release(v26);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (Strong
      && (v36 = Strong,
          v37 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v36,
          (v37 & 1) != 0))
    {

    }
    else
    {
      v38 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes);
      *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes) = 0;
      swift_bridgeObjectRelease(v38);
      v39 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace);
      *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace) = 0;

      swift_bridgeObjectRelease(v39);
    }
  }
}

id sub_100B0A4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v1 = type metadata accessor for CRLPKStrokePathData(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v11 != &off_1013E3B70)
    v11 = 0;
  v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 632);
  swift_beginAccess(v12, v20, 0, 0);
  sub_1004CB7BC(v12, (uint64_t)v10, &qword_1013F5530);
  v13 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v13);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  v14 = (uint64_t)&v7[*(int *)(v5 + 24)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1))
  {
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
    return 0;
  }
  else
  {
    sub_1004B8460(v14, (uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
    v15 = (id)*((_QWORD *)v4 + 10);
    if (v15)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013ED1E0, off_1012297C0);
      swift_bridgeObjectRetain(v15);
      v15 = sub_100942548(v16, v17);
    }
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLPKStrokePathData);
  }
  return v15;
}

uint64_t sub_100B0A720(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  _UNKNOWN ****v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  _QWORD *Strong;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  CKRecordID v37;
  Swift::String v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[32];
  _BYTE v46[24];
  _BYTE v47[24];

  v2 = v1;
  v42 = a1;
  v3 = sub_1004B804C(&qword_1013FA6D8);
  v4 = __chkstk_darwin(v3);
  v41 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - v6;
  v44 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v44);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLPKStrokePathData(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v43 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v16 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v17 = v16, v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x2F0))(), v17, (v18 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v37, v38);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v19 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v20 != &off_1013E3B70)
      v20 = 0;
    v21 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 632);
    swift_beginAccess(v21, v47, 0, 0);
    v40 = v2;
    sub_1004CB7BC(v21, (uint64_t)v12, &qword_1013F5530);
    v22 = sub_1004B804C((uint64_t *)&unk_101406B00);
    CRRegister.wrappedValue.getter(v22);
    sub_1004CB800((uint64_t)v12, &qword_1013F5530);
    sub_1004CB7BC((uint64_t)&v9[*(int *)(v44 + 24)], (uint64_t)v7, &qword_1013FA6D8);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLShapeItemParentAffinity);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {

      return sub_1004CB800((uint64_t)v7, &qword_1013FA6D8);
    }
    else
    {
      sub_1004B84E0((uint64_t)v7, v43, type metadata accessor for CRLPKStrokePathData);
      v24 = v40;
      v25 = *(_UNKNOWN *****)(v40 + v19);
      if (*v25 == &off_1013E3B70)
        v26 = *(_QWORD *)(v40 + v19);
      else
        v26 = 0;
      swift_retain(*(_QWORD *)(v40 + v19));
      v27 = (void *)sub_1009A6868();
      v28 = v42;
      v39 = v42;
      v29 = v41;
      sub_1009A5BB4(v27, v28, v41);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v13);
      swift_beginAccess(v26 + *(_QWORD *)(*(_QWORD *)v26 + 632), v46, 33, 0);
      v30 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v45, v22);
      sub_100582338(v29, v31 + *(int *)(v44 + 24), &qword_1013FA6D8);
      v30(v45, 0);
      swift_endAccess(v46);
      swift_release(v25);
      Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
      if (Strong
        && (v33 = Strong,
            v34 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
            v33,
            (v34 & 1) != 0))
      {

      }
      else
      {
        v35 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes);
        *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes) = 0;
        swift_bridgeObjectRelease(v35);
        v36 = *(_QWORD *)(v24
                        + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace);
        *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace) = 0;

        swift_bridgeObjectRelease(v36);
      }
      return sub_1004B84A4(v43, type metadata accessor for CRLPKStrokePathData);
    }
  }
  return result;
}

BOOL sub_100B0AC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  id v13;
  _BYTE v15[24];

  v1 = v0;
  v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v8 != &off_1013E3B70)
    v8 = 0;
  v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 632);
  swift_beginAccess(v9, v15, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v7, &qword_1013F5530);
  v10 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v10);
  sub_1004CB800((uint64_t)v7, &qword_1013F5530);
  v11 = v4[*(int *)(v2 + 28) + 8];
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLShapeItemParentAffinity);
  if (v11 != 255)
    return 0;
  v13 = sub_100B0A4C4();

  return v13 == 0;
}

uint64_t sub_100B0AF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v15[24];

  v1 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v7 != &off_1013E3B70)
    v7 = 0;
  v8 = v7 + *(_QWORD *)(*(_QWORD *)v7 + 632);
  swift_beginAccess(v8, v15, 0, 0);
  sub_1004CB7BC(v8, (uint64_t)v6, &qword_1013F5530);
  v9 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v9);
  sub_1004CB800((uint64_t)v6, &qword_1013F5530);
  v10 = &v3[*(int *)(v1 + 28)];
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLShapeItemParentAffinity);
  result = 0;
  if ((v12 & 1) == 0)
    return CRLiCloudConnectionStatus.rawValue.getter(v11);
  return result;
}

void sub_100B0B104(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _UNKNOWN ****v7;
  _UNKNOWN ****v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  CKRecordID v14;
  Swift::String v15;
  _BYTE v16[32];
  _BYTE v17[24];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v7 == &off_1013E3B70)
      v8 = v7;
    else
      v8 = 0;
    swift_retain(v7);
    v9 = sub_100A1267C(a1);
    swift_beginAccess((char *)(*v8)[79] + (_QWORD)v8, v17, 33, 0);
    sub_1004B804C(&qword_1013F5530);
    v10 = sub_1004B804C((uint64_t *)&unk_101406B00);
    v11 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v16, v10);
    v13 = v12 + *(int *)(type metadata accessor for CRLShapeItemParentAffinity(0) + 28);
    *(_QWORD *)v13 = v9;
    *(_BYTE *)(v13 + 8) = 0;
    v11(v16, 0);
    swift_endAccess(v17);
    swift_release(v7);
  }
}

uint64_t sub_100B0B324(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(__n128);
  __n128 v14;
  void *v15;
  id v16;
  uint64_t v17;
  void (*v18)(__n128);
  char *v19;
  __n128 v20;
  Class isa;
  void (*v22)(char *, uint64_t);
  id v23;
  char *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t (*v33)(__n128);
  __n128 v34;
  void *v35;
  id v36;
  uint64_t v37;
  void (*v38)(__n128);
  char *v39;
  __n128 v40;
  char *v41;
  Class v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  id v60;
  uint64_t v61;
  void (*v62)(__n128);
  __n128 v63;
  Class v64;
  id v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _BYTE v87[24];
  _BYTE v88[32];

  v2 = v1;
  v80 = type metadata accessor for CRLPKStrokePathData(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v71 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v77);
  v79 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v75);
  v76 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()), "init");
  v81 = a1;
  v86 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v13 = *(uint64_t (**)(__n128))(*(_QWORD *)v12 + 288);
  v14 = swift_retain(v12);
  v15 = (void *)v13(v14);
  swift_release(v12);
  v16 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetInfoGeometry(0));
  v83 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v18 = *(void (**)(__n128))(*(_QWORD *)v17 + 256);
  v85 = v2;
  v19 = v2;
  v20 = swift_retain(v17);
  v18(v20);
  swift_release(v17);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v74 = v10;
  v84 = v7;
  v82 = v22;
  v22(v10, v7);
  v23 = objc_msgSend(v16, "initWithId:geometry:", isa, v15);

  v24 = &v11[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
  swift_beginAccess(&v11[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v88, 33, 0);
  v25 = v23;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v73 = v11;
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);
  swift_endAccess(v88);
  v29 = v81;
  v30 = *(_QWORD **)(v81 + v86);
  v31 = *v30;
  result = swift_conformsToProtocol2(*v30, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v33 = *(uint64_t (**)(__n128))(v31 + 704);
    v34 = swift_retain(v30);
    v35 = (void *)v33(v34);
    swift_release(v30);
    v36 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetPathSource(0));
    v37 = *(_QWORD *)&v85[v83];
    v38 = *(void (**)(__n128))(*(_QWORD *)v37 + 256);
    v39 = v19;
    v40 = swift_retain(v37);
    v41 = v74;
    v38(v40);
    swift_release(v37);
    v42 = UUID._bridgeToObjectiveC()().super.isa;
    v82(v41, v84);
    v43 = objc_msgSend(v36, "initWithId:pathSource:", v42, v35);

    swift_beginAccess(v24, v88, 33, 0);
    v44 = v43;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
    v46 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v45 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v46 >= v45 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
    v72 = v25;
    v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
    specialized Array._endMutation()(v47);
    swift_endAccess(v88);
    v48 = *(_QWORD *)(v29 + v86);
    if (*(_UNKNOWN ****)v48 != &off_1013E3B70)
      v48 = 0;
    v49 = v48 + *(_QWORD *)(*(_QWORD *)v48 + 632);
    swift_beginAccess(v49, v88, 0, 0);
    v50 = v76;
    sub_1004CB7BC(v49, v76, &qword_1013F5530);
    v51 = v39;
    v52 = sub_1004B804C((uint64_t *)&unk_101406B00);
    v53 = (uint64_t)v79;
    CRRegister.wrappedValue.getter(v52);
    sub_1004CB800(v50, &qword_1013F5530);
    v54 = v53 + *(int *)(v77 + 24);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v54, 1, v80))
    {
      sub_1004B84A4(v53, type metadata accessor for CRLShapeItemParentAffinity);
      v55 = 0;
    }
    else
    {
      v56 = v54;
      v57 = v71;
      sub_1004B8460(v56, v71, type metadata accessor for CRLPKStrokePathData);
      sub_1004B84A4(v53, type metadata accessor for CRLShapeItemParentAffinity);
      v55 = (void *)sub_1009A6868();
      sub_1004B84A4(v57, type metadata accessor for CRLPKStrokePathData);
    }
    v58 = v73;
    v59 = sub_100B0A4C4();
    v60 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetFreehandDrawingShapeItemPKData(0));
    v61 = *(_QWORD *)&v85[v83];
    v62 = *(void (**)(__n128))(*(_QWORD *)v61 + 256);
    v63 = swift_retain(v61);
    v62(v63);
    swift_release(v61);
    v64 = UUID._bridgeToObjectiveC()().super.isa;
    v82(v41, v84);
    v65 = objc_msgSend(v60, "initWithId:strokePathCompactData:maskPath:", v64, v55, v59);

    swift_beginAccess(v24, v87, 33, 0);
    v66 = v65;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66);
    v68 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v67 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v68 >= v67 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
    v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66);
    specialized Array._endMutation()(v69);
    swift_endAccess(v87);

    return (uint64_t)v58;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100B0B994()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace));
}

id sub_100B0B9C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFreehandDrawingShapeItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100B0BA2C()
{
  return type metadata accessor for CRLFreehandDrawingShapeItem(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItem(uint64_t a1)
{
  uint64_t result;

  result = qword_101405AE0;
  if (!qword_101405AE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFreehandDrawingShapeItem);
  return result;
}

uint64_t sub_100B0BA70(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = "\b";
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 1336);
}

id sub_100B0BAB0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  void *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  objc_super v58;

  v56 = a7;
  v57 = a8;
  v54 = a5;
  v55 = a6;
  v47 = a3;
  v48 = a4;
  v52 = a2;
  v53 = a1;
  v49 = a9;
  v44 = a10;
  swift_getObjectType(v10);
  v45 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v45);
  v46 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v43 = (uint64_t)&v42 - v16;
  v17 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v19;
  v20 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v20);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v42 - v24;
  v26 = v10;
  v51 = v26;
  v27 = a4;
  v28 = v44;
  sub_100924F24(a2, a3, v27, a9, v44, (uint64_t)v25);
  sub_100924CCC(v54, v55, v56, v57, 0.0, 1, (uint64_t)v19);
  v29 = v43;
  sub_1004B8460((uint64_t)v19, v43, type metadata accessor for CRLShapeItemCRDTData);
  v30 = *(int *)(v45 + 20);

  *(_QWORD *)(v29 + v30) = _swiftEmptyDictionarySingleton;
  sub_1004CB7BC((uint64_t)v25, (uint64_t)v22, &qword_1013F5530);
  v31 = v46;
  sub_1004B8460(v29, v46, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  v32 = type metadata accessor for CRLFreehandDrawingShapeItemData(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  sub_1004B84E0(v31, v33 + *(_QWORD *)(*(_QWORD *)v33 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  *(_QWORD *)(v33 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v22, v33 + *(_QWORD *)(*(_QWORD *)v33 + 632), &qword_1013F5530);
  v34 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v35 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v53;
  *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v34;
  v36 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v58.receiver = v35;
  v58.super_class = v36;
  v37 = objc_msgSendSuper2(&v58, "init");

  v38 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v52, v38);
  sub_1004B84A4(v29, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  sub_1004B84A4((uint64_t)v50, type metadata accessor for CRLShapeItemCRDTData);
  sub_1004CB800((uint64_t)v25, &qword_1013F5530);
  v39 = v51;
  ObjectType = swift_getObjectType(v51);
  swift_deallocPartialClassInstance(v39, ObjectType, *(unsigned int *)((swift_isaMask & *v39) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v39) + 0x34));
  return v37;
}

void sub_100B0BF80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42[24];
  char v43[24];
  uint64_t v44;

  v41 = a2;
  v3 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v3);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v37 - v12;
  v14 = *a1;
  v15 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v16 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v16 != &off_1013E3B70)
    v16 = 0;
  v17 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
  swift_beginAccess(v17, v43, 0, 0);
  sub_1004CB7BC(v17, (uint64_t)v13, &qword_1013F5530);
  v39 = v8;
  v18 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v18);
  sub_1004CB800((uint64_t)v13, &qword_1013F5530);
  v40 = v3;
  v19 = &v7[*(int *)(v3 + 28)];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
  v22 = 0;
  if ((v21 & 1) == 0)
    v22 = CRLiCloudConnectionStatus.rawValue.getter(v20);
  v23 = *(_QWORD *)(v14 + v15);
  if (*(_UNKNOWN ****)v23 != &off_1013E3B70)
    v23 = 0;
  v24 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 632);
  swift_beginAccess(v24, v42, 0, 0);
  sub_1004CB7BC(v24, (uint64_t)v10, &qword_1013F5530);
  v25 = (uint64_t)v38;
  CRRegister.wrappedValue.getter(v18);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  v26 = v25 + *(int *)(v40 + 28);
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  sub_1004B84A4(v25, type metadata accessor for CRLShapeItemParentAffinity);
  v29 = 0;
  if ((v28 & 1) == 0)
    v29 = CRLiCloudConnectionStatus.rawValue.getter(v27);
  v30 = v41;
  v31 = *v41;
  v32 = *(_QWORD *)(*v41 + 16);
  if (v32)
  {
    v33 = sub_100843260(v29);
    if ((v34 & 1) != 0)
      v32 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v33);
    else
      v32 = 0;
  }
  v35 = v32 + 1;
  if (v32 == -1)
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
    v44 = *v30;
    *v30 = 0x8000000000000000;
    sub_10082A1A0(v35, v22, isUniquelyReferenced_nonNull_native);
    *v30 = v44;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100B0C364(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(__int128 *__return_ptr, __n128);
  id v14;
  __n128 v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(__n128);
  __n128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  CKRecordID v25;
  Swift::String v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardItemBase(0);
  v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    v10 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v13 = *(void (**)(__int128 *__return_ptr, __n128))(*(_QWORD *)v11 + 536);
    v14 = a1;
    swift_retain(v11);
    v15 = swift_retain(v12);
    v13(&v29, v15);
    swift_release(v11);
    swift_release(v12);
    if (v30)
    {
      sub_10050CB14(&v29, v31);
      sub_1004CB6E8((uint64_t)v31, (uint64_t)&v29);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v28 = _swiftEmptyDictionarySingleton;
      sub_1008256CC(&v29, 0, isUniquelyReferenced_nonNull_native);
      v17 = v28;
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v31);
    }
    else
    {
      sub_1004CB800((uint64_t)&v29, &qword_1013E0230);
      v17 = _swiftEmptyDictionarySingleton;
    }
    v18 = *(_QWORD *)(a2 + v10);
    v19 = *(void (**)(__n128))(*(_QWORD *)v18 + 256);
    v20 = swift_retain(v18);
    v19(v20);
    swift_release(v18);
    v21 = sub_100C9B734((uint64_t)v17);
    swift_bridgeObjectRelease();

    v22 = type metadata accessor for CRLTransactableUndoingMutations(0);
    v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v23 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v7, v4);
    *(_QWORD *)(v23 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values) = v21;
    return v23;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 798, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 798, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100B0C63C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  CKRecordID v38;
  uint64_t v39;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;

  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - v8;
  v10 = sub_1004B804C(&qword_1013FA6E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLShapeItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v44 = v4;
    v16 = type metadata accessor for CRLBoardItemBase(0);
    if (!swift_dynamicCastClass(v15, v16))
    {
      v41 = a1;
      sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
      goto LABEL_17;
    }
    v17 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v18 = *v17;
    v19 = swift_conformsToProtocol2(*v17, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (v19)
    {
      v20 = v19;
      v21 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 16);
      v43 = a1;
      v22 = swift_retain(v17);
      v21(v18, v20, v22);
      swift_release(v17);
      v23 = *(_QWORD **)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v24 = *v23;
      v25 = swift_conformsToProtocol2(*v23, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (v25)
      {
        v26 = v25;
        v27 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 16);
        v28 = swift_retain(v23);
        v27(v24, v26, v28);
        swift_release(v23);
        v29 = sub_1004B7878((unint64_t *)&qword_1013FA6E8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData, (uint64_t)&unk_100F2E580);
        CRType.observableDifference(from:)(v6, v44, v29);
        sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v30 = sub_1004B804C(&qword_1013FA6F0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30) == 1)
        {
          v31 = _swiftEmptyArrayStorage;
          if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
          {

            swift_bridgeObjectRelease();
            v32 = _swiftEmptyDictionarySingleton;
LABEL_12:
            sub_1004CB800((uint64_t)v12, &qword_1013FA6E0);
            return (uint64_t)v32;
          }
        }
        else
        {
          v31 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v34 = *((_QWORD *)v31 + 2);
          v33 = *((_QWORD *)v31 + 3);
          if (v34 >= v33 >> 1)
            v31 = (double *)sub_100D0EF94((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
          *((_QWORD *)v31 + 2) = v34 + 1;
          v35 = &v31[2 * v34];
          strcpy((char *)v35 + 32, "shapeStyleData");
          *((_BYTE *)v35 + 47) = -18;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v45 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v31, 5, isUniquelyReferenced_nonNull_native);
        v32 = v45;

        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 325, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 325, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
LABEL_17:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v38, *(Swift::String *)&v39);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_100B0CAF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[15];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v18[8] = a2;
  v7 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v18[9] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v19);
  v23 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v18[12] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v18[11] = (char *)v18 - v13;
  __chkstk_darwin(v14);
  v20 = (char *)v18 - v15;
  __chkstk_darwin(v16);
  v21 = (char *)v18 - v17;
  v24 = a5;
  __asm { BR              X10 }
}

void sub_100B0CC90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  void (*v17)(__n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(__n128);
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(__n128);
  __n128 v37;
  _QWORD *v38;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  _QWORD *v50;
  char v51;
  id v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  double v69;
  _QWORD *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(__n128);
  __n128 v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(__n128);
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  _BOOL8 v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  unint64_t v121;
  BOOL v122;
  _QWORD *v123;
  char v124;
  uint64_t v125;
  uint64_t inited;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for CRLBoardItemBase(0);
  v5 = swift_dynamicCastClass(v1, v4);
  *(_QWORD *)(v0 + 112) = v5;
  if (v5)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 16);
    if (v6)
    {
      v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      *(_QWORD *)(v0 + 144) = v3 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
      *(_QWORD *)(v0 + 40) = v1;
      *(_QWORD *)(v0 + 104) = v8;
      swift_retain(v8);
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 64));
      v10 = (_QWORD *)(v9 + 40);
      *(_QWORD *)(v0 + 48) = "accessibilityDescription";
      *(_QWORD *)(v0 + 56) = 0x8000000100FB8AF0;
      *(_QWORD *)(v0 + 24) = "servable deltas with wrong type";
      *(_QWORD *)(v0 + 32) = 0x8000000100FB8AD0;
      *(_OWORD *)v0 = xmmword_100EF5E40;
      v11 = *(_QWORD *)(v0 + 184);
      v12 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 80) = v7;
      while (1)
      {
        v14 = *(v10 - 1);
        v13 = *v10;
        v15 = v14 == 0x6641746E65726170 && v13 == 0xEE007974696E6966;
        if (!v15
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, *(v10 - 1), *v10, 0) & 1) == 0)
        {
          v32 = v14 == 0x64656B636F6CLL && v13 == 0xE600000000000000;
          if (v32
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0x64656B636F6CLL, 0xE600000000000000, v14, v13, 0) & 1) != 0)
          {
            v33 = v7;
            v34 = v6;
            v35 = *(_QWORD *)(v11 + v33);
            v36 = *(uint64_t (**)(__n128))(*(_QWORD *)v35 + 312);
            v37 = swift_retain(v35);
            LOBYTE(v36) = v36(v37);
            swift_release(v35);
            *(_QWORD *)(v0 + 280) = &type metadata for Bool;
            *(_BYTE *)(v0 + 256) = v36 & 1;
            v38 = *(_QWORD **)(v0 + 144);
            swift_beginAccess(v38, v0 + 232, 33, 0);
            sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v38);
            v40 = *v38;
            *(_QWORD *)(v0 + 192) = *v38;
            *v38 = 0x8000000000000000;
            v42 = sub_100843260(11);
            v43 = *(_QWORD *)(v40 + 16);
            v44 = (v41 & 1) == 0;
            v45 = v43 + v44;
            if (__OFADD__(v43, v44))
            {
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              type metadata accessor for CRLChangeProperty(0);
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v132);
              __break(1u);
              JUMPOUT(0x100B0DE3CLL);
            }
            v46 = v41;
            if (*(_QWORD *)(v40 + 24) >= v45)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_10082C8D0();
            }
            else
            {
              sub_100814B68(v45, isUniquelyReferenced_nonNull_native);
              v47 = sub_100843260(11);
              if ((v46 & 1) != (v48 & 1))
                goto LABEL_101;
              v42 = v47;
            }
            v11 = *(_QWORD *)(v0 + 184);
            v70 = *(_QWORD **)(v0 + 192);
            v12 = *(_QWORD *)(v0 + 136);
            if ((v46 & 1) != 0)
            {
              sub_100582338(v0 + 200, v70[7] + 32 * v42, &qword_1013E0230);
            }
            else
            {
              v70[(v42 >> 6) + 8] |= 1 << v42;
              *(_QWORD *)(v70[6] + 8 * v42) = 11;
              sub_1004C4938(v0 + 200, v70[7] + 32 * v42, &qword_1013E0230);
              v71 = v70[2];
              v72 = __OFADD__(v71, 1);
              v73 = v71 + 1;
              if (v72)
                goto LABEL_94;
              v70[2] = v73;
            }
            **(_QWORD **)(v0 + 144) = v70;
            swift_bridgeObjectRelease();
            swift_endAccess(v0 + 232);
            sub_1004CB800(v0 + 256, &qword_1013E0230);
            v6 = v34;
            v7 = *(_QWORD *)(v0 + 80);
            goto LABEL_6;
          }
          if (v14 == 0xD000000000000011 && v13 == *(_QWORD *)(v0 + 56)
            || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, *(_QWORD *)(v0 + 48) | 0x8000000000000000, v14, v13, 0) & 1) != 0)
          {
            v74 = v7;
            v75 = v6;
            v76 = *(_QWORD *)(v11 + v74);
            v77 = *(uint64_t (**)(__n128))(*(_QWORD *)v76 + 336);
            v78 = swift_retain(v76);
            LOBYTE(v77) = v77(v78);
            swift_release(v76);
            *(_QWORD *)(v0 + 280) = &type metadata for Bool;
            *(_BYTE *)(v0 + 256) = v77 & 1;
            v79 = *(_QWORD **)(v0 + 144);
            swift_beginAccess(v79, v0 + 232, 33, 0);
            sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
            v80 = swift_isUniquelyReferenced_nonNull_native(*v79);
            v81 = *v79;
            *(_QWORD *)(v0 + 192) = *v79;
            *v79 = 0x8000000000000000;
            v83 = sub_100843260(12);
            v84 = *(_QWORD *)(v81 + 16);
            v85 = (v82 & 1) == 0;
            v86 = v84 + v85;
            if (__OFADD__(v84, v85))
              goto LABEL_95;
            v87 = v82;
            if (*(_QWORD *)(v81 + 24) >= v86)
            {
              if ((v80 & 1) == 0)
                sub_10082C8D0();
            }
            else
            {
              sub_100814B68(v86, v80);
              v88 = sub_100843260(12);
              if ((v87 & 1) != (v89 & 1))
                goto LABEL_101;
              v83 = v88;
            }
            v11 = *(_QWORD *)(v0 + 184);
            v90 = *(_QWORD **)(v0 + 192);
            v12 = *(_QWORD *)(v0 + 136);
            if ((v87 & 1) != 0)
              goto LABEL_56;
            v90[(v83 >> 6) + 8] |= 1 << v83;
            *(_QWORD *)(v90[6] + 8 * v83) = 12;
            sub_1004C4938(v0 + 200, v90[7] + 32 * v83, &qword_1013E0230);
            v91 = v90[2];
            v72 = __OFADD__(v91, 1);
            v92 = v91 + 1;
            if (v72)
              goto LABEL_96;
LABEL_58:
            v90[2] = v92;
          }
          else
          {
            if (v14 == 0xD000000000000018 && v13 == *(_QWORD *)(v0 + 32)
              || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, *(_QWORD *)(v0 + 24) | 0x8000000000000000, v14, v13, 0) & 1) != 0)
            {
              v75 = v6;
              v93 = *(_QWORD *)(v11 + *(_QWORD *)(v0 + 80));
              v94 = *(uint64_t (**)(__n128))(*(_QWORD *)v93 + 360);
              v95 = swift_retain(v93);
              v96 = v94(v95);
              v98 = v97;
              swift_release(v93);
              *(_QWORD *)(v0 + 280) = &type metadata for String;
              *(_QWORD *)(v0 + 256) = v96;
              *(_QWORD *)(v0 + 264) = v98;
              v99 = *(_QWORD **)(v0 + 144);
              swift_beginAccess(v99, v0 + 232, 33, 0);
              sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
              v100 = swift_isUniquelyReferenced_nonNull_native(*v99);
              v101 = *v99;
              *(_QWORD *)(v0 + 192) = *v99;
              *v99 = 0x8000000000000000;
              v83 = sub_100843260(14);
              v103 = *(_QWORD *)(v101 + 16);
              v104 = (v102 & 1) == 0;
              v105 = v103 + v104;
              if (__OFADD__(v103, v104))
                goto LABEL_97;
              v106 = v102;
              if (*(_QWORD *)(v101 + 24) >= v105)
              {
                if ((v100 & 1) == 0)
                  sub_10082C8D0();
              }
              else
              {
                sub_100814B68(v105, v100);
                v107 = sub_100843260(14);
                if ((v106 & 1) != (v108 & 1))
                  goto LABEL_101;
                v83 = v107;
              }
              v11 = *(_QWORD *)(v0 + 184);
              v90 = *(_QWORD **)(v0 + 192);
              v12 = *(_QWORD *)(v0 + 136);
              if ((v106 & 1) == 0)
              {
                v90[(v83 >> 6) + 8] |= 1 << v83;
                *(_QWORD *)(v90[6] + 8 * v83) = 14;
                sub_1004C4938(v0 + 200, v90[7] + 32 * v83, &qword_1013E0230);
                v109 = v90[2];
                v72 = __OFADD__(v109, 1);
                v92 = v109 + 1;
                if (v72)
                  goto LABEL_98;
                goto LABEL_58;
              }
            }
            else
            {
              if ((v14 != 0x776F64616873 || v13 != 0xE600000000000000)
                && (_stringCompareWithSmolCheck(_:_:expecting:)(0x776F64616873, 0xE600000000000000, v14, v13, 0) & 1) == 0)
              {
                if (v14 == 0x6574726F70707573 && v13 == 0xE900000000000064
                  || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6574726F70707573, 0xE900000000000064, v14, v13, 0) & 1) != 0)
                {
                  v7 = *(_QWORD *)(v0 + 80);
                  v121 = *(_QWORD *)(*(_QWORD *)(v11 + v7) + 24);
                  v122 = sub_1001E9730() >= v121;
                  *(_QWORD *)(v0 + 280) = &type metadata for Bool;
                  *(_BYTE *)(v0 + 256) = v122;
                  v123 = *(_QWORD **)(v0 + 144);
                  swift_beginAccess(v123, v0 + 232, 33, 0);
                  sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
                  v124 = swift_isUniquelyReferenced_nonNull_native(*v123);
                  *(_QWORD *)(v0 + 192) = *v123;
                  *v123 = 0x8000000000000000;
                  sub_1008258FC(v0 + 200, 13, v124);
                  *v123 = *(_QWORD *)(v0 + 192);
                  swift_bridgeObjectRelease();
                  swift_endAccess(v0 + 232);
                  sub_1004CB800(v0 + 256, &qword_1013E0230);
                }
                else
                {
                  v125 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                  inited = swift_initStackObject(v125, v0 + 288);
                  *(_QWORD *)(v0 + 160) = v6;
                  v127 = inited;
                  *(_OWORD *)(inited + 16) = *(_OWORD *)v0;
                  *(_QWORD *)(inited + 56) = &type metadata for String;
                  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
                  *(_QWORD *)(v127 + 32) = v14;
                  v128 = v127 + 32;
                  *(_QWORD *)(v127 + 40) = v13;
                  swift_bridgeObjectRetain(v13);
                  v129 = v127;
                  v6 = *(_QWORD *)(v0 + 160);
                  swift_setDeallocating(v129);
                  v130 = sub_1004B804C(&qword_1013E0190);
                  v131 = v128;
                  v12 = *(_QWORD *)(v0 + 136);
                  v11 = *(_QWORD *)(v0 + 184);
                  swift_arrayDestroy(v131, 1, v130);
                  v7 = *(_QWORD *)(v0 + 80);
                }
                goto LABEL_6;
              }
              v75 = v6;
              *(_QWORD *)(v0 + 280) = &type metadata for Bool;
              *(_BYTE *)(v0 + 256) = 1;
              v110 = *(_QWORD **)(v0 + 144);
              swift_beginAccess(v110, v0 + 232, 33, 0);
              sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
              v111 = swift_isUniquelyReferenced_nonNull_native(*v110);
              v112 = *v110;
              *(_QWORD *)(v0 + 192) = *v110;
              *v110 = 0x8000000000000000;
              v83 = sub_100843260(16);
              v114 = *(_QWORD *)(v112 + 16);
              v115 = (v113 & 1) == 0;
              v116 = v114 + v115;
              if (__OFADD__(v114, v115))
                goto LABEL_99;
              v117 = v113;
              if (*(_QWORD *)(v112 + 24) >= v116)
              {
                if ((v111 & 1) == 0)
                  sub_10082C8D0();
              }
              else
              {
                sub_100814B68(v116, v111);
                v118 = sub_100843260(16);
                if ((v117 & 1) != (v119 & 1))
                  goto LABEL_101;
                v83 = v118;
              }
              v11 = *(_QWORD *)(v0 + 184);
              v90 = *(_QWORD **)(v0 + 192);
              v12 = *(_QWORD *)(v0 + 136);
              if ((v117 & 1) == 0)
              {
                v90[(v83 >> 6) + 8] |= 1 << v83;
                *(_QWORD *)(v90[6] + 8 * v83) = 16;
                sub_1004C4938(v0 + 200, v90[7] + 32 * v83, &qword_1013E0230);
                v120 = v90[2];
                v72 = __OFADD__(v120, 1);
                v92 = v120 + 1;
                if (v72)
                  goto LABEL_100;
                goto LABEL_58;
              }
            }
LABEL_56:
            sub_100582338(v0 + 200, v90[7] + 32 * v83, &qword_1013E0230);
          }
          v6 = v75;
          **(_QWORD **)(v0 + 144) = v90;
          swift_bridgeObjectRelease();
          swift_endAccess(v0 + 232);
          sub_1004CB800(v0 + 256, &qword_1013E0230);
          v7 = *(_QWORD *)(v0 + 80);
          goto LABEL_6;
        }
        *(_QWORD *)(v0 + 152) = v10;
        *(_QWORD *)(v0 + 160) = v6;
        (*(void (**)(void))(**(_QWORD **)(v0 + 104) + 264))();
        v16 = *(_QWORD *)(v11 + v7);
        v17 = *(void (**)(__n128))(*(_QWORD *)v16 + 264);
        v18 = swift_retain(v16);
        v19 = *(_QWORD *)(v0 + 128);
        v17(v18);
        swift_release(v16);
        v20 = *(_QWORD *)(v0 + 176);
        v21 = v20 + *(int *)(*(_QWORD *)(v0 + 120) + 48);
        sub_1004CB7BC(v12, v20, (uint64_t *)&unk_1013E1A50);
        sub_1004CB7BC(v19, v21, (uint64_t *)&unk_1013E1A50);
        v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 48);
        if (v22(v20, 1, v2) == 1)
        {
          sub_1004CB800(v19, (uint64_t *)&unk_1013E1A50);
          sub_1004CB800(v12, (uint64_t *)&unk_1013E1A50);
          v23 = v22(v21, 1, v2);
          v24 = *(_QWORD **)(v0 + 184);
          if (v23 == 1)
          {
            v25 = sub_1004CB800(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1013E1A50);
            goto LABEL_31;
          }
        }
        else
        {
          v26 = *(_QWORD *)(v0 + 88);
          sub_1004CB7BC(*(_QWORD *)(v0 + 176), v26, (uint64_t *)&unk_1013E1A50);
          if (v22(v21, 1, v2) != 1)
          {
            v59 = v26;
            v60 = *(_QWORD *)(v0 + 168);
            v61 = *(_QWORD *)(v0 + 72);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v61, v21, v2);
            sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v62 = dispatch thunk of static Equatable.== infix(_:_:)(v59, v61);
            v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
            v64 = v61;
            v7 = *(_QWORD *)(v0 + 80);
            v65 = *(_QWORD *)(v0 + 176);
            v63(v64, v2);
            sub_1004CB800(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_1013E1A50);
            sub_1004CB800(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1013E1A50);
            v63(v59, v2);
            v25 = sub_1004CB800(v65, (uint64_t *)&unk_1013E1A50);
            v24 = *(_QWORD **)(v0 + 184);
            if ((v62 & 1) != 0)
              goto LABEL_31;
            goto LABEL_18;
          }
          sub_1004CB800(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_1013E1A50);
          sub_1004CB800(v12, (uint64_t *)&unk_1013E1A50);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8))(v26, v2);
          v24 = *(_QWORD **)(v0 + 184);
        }
        sub_1004CB800(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1013F62D0);
LABEL_18:
        v27 = *(_QWORD *)((char *)v24 + v7);
        v28 = *(void (**)(__n128))(*(_QWORD *)v27 + 264);
        v29 = swift_retain(v27);
        v30 = *(_QWORD *)(v0 + 96);
        v28(v29);
        v31 = swift_release(v27);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v22)(v30, 1, v2, v31) == 1)
        {
          sub_1004CB800(v30, (uint64_t *)&unk_1013E1A50);
          *(_OWORD *)(v0 + 256) = 0u;
          *(_OWORD *)(v0 + 272) = 0u;
        }
        else
        {
          *(_QWORD *)(v0 + 280) = v2;
          v49 = sub_10050D1B0((_QWORD *)(v0 + 256));
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 32))(v49, v30, v2);
        }
        v50 = *(_QWORD **)(v0 + 144);
        swift_beginAccess(v50, v0 + 232, 33, 0);
        sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
        v51 = swift_isUniquelyReferenced_nonNull_native(*v50);
        *(_QWORD *)(v0 + 192) = *v50;
        *v50 = 0x8000000000000000;
        sub_1008258FC(v0 + 200, 0, v51);
        *v50 = *(_QWORD *)(v0 + 192);
        swift_bridgeObjectRelease();
        swift_endAccess(v0 + 232);
        v25 = sub_1004CB800(v0 + 256, &qword_1013E0230);
        v24 = *(_QWORD **)(v0 + 184);
LABEL_31:
        v52 = (id)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v24) + 0xE0))(v25);
        v53 = (void *)(*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 112)) + 0xE0))();
        v54 = sub_1004B8930(0, (unint64_t *)&qword_1013F1360, off_101229800);
        if ((static NSObject.== infix(_:_:)(v52, v53) & 1) == 0)
        {
          if ((objc_msgSend(v52, "isEqualExceptForPosition:", v53) & 1) != 0)
          {
            *(_QWORD *)(v0 + 280) = v54;
            *(_QWORD *)(v0 + 256) = v52;
            v55 = *(_QWORD **)(v0 + 144);
            swift_beginAccess(v55, v0 + 232, 33, 0);
            sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
            v56 = v52;
            v57 = swift_isUniquelyReferenced_nonNull_native(*v55);
            *(_QWORD *)(v0 + 192) = *v55;
            *v55 = 0x8000000000000000;
            sub_1008258FC(v0 + 200, 6, v57);
            *v55 = *(_QWORD *)(v0 + 192);
            swift_bridgeObjectRelease();
            swift_endAccess(v0 + 232);
            v58 = v0 + 256;
LABEL_38:
            sub_1004CB800(v58, &qword_1013E0230);

            goto LABEL_5;
          }
          *(_QWORD *)(v0 + 280) = v54;
          *(_QWORD *)(v0 + 256) = v52;
          sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
          v66 = *(_QWORD *)(v0 + 144);
          swift_beginAccess(v66, v0 + 232, 33, 0);
          v52 = v52;
          sub_10083DAD8(v0 + 200, 7uLL);
          swift_endAccess(v0 + 232);
          sub_1004CB800(v0 + 256, &qword_1013E0230);
          objc_msgSend(v52, "angle");
          v68 = v67;
          objc_msgSend(v53, "angle");
          if (!sub_10077F18C(v68, v69))
          {
            *(_QWORD *)(v0 + 280) = v54;
            *(_QWORD *)(v0 + 256) = v52;
            sub_1004CB7BC(v0 + 256, v0 + 200, &qword_1013E0230);
            swift_beginAccess(v66, v0 + 232, 33, 0);
            v56 = v52;
            sub_10083DAD8(v0 + 200, 8uLL);
            swift_endAccess(v0 + 232);
            v58 = v0 + 256;
            goto LABEL_38;
          }
        }

LABEL_5:
        v11 = *(_QWORD *)(v0 + 184);
        v12 = *(_QWORD *)(v0 + 136);
        v10 = *(_QWORD **)(v0 + 152);
        v6 = *(_QWORD *)(v0 + 160);
LABEL_6:
        v10 += 2;
        if (!--v6)
        {

          swift_release(*(_QWORD *)(v0 + 104));
          swift_bridgeObjectRelease();
          return;
        }
      }
    }
  }
}

void sub_100B0DE64(uint64_t a1, uint64_t a2, char a3, void *a4, _QWORD *a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 *v68;
  char v69;
  void (*v70)(__n128);
  __n128 v71;
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  void (*v86)(void);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t, __n128);
  __n128 v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  int v162;
  char v163;
  _QWORD *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, __n128);
  __n128 v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(uint64_t, uint64_t, __n128);
  __n128 v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t, __n128);
  __n128 v212;
  uint64_t v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(uint64_t, uint64_t, __n128);
  __n128 v234;
  uint64_t v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  float v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void (*v251)(uint64_t, uint64_t, __n128);
  __n128 v252;
  uint64_t v253;
  float v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(uint64_t, uint64_t, __n128);
  __n128 v260;
  float v261;
  id v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  id v267;
  int v268;
  char *v269;
  char *v270;
  __int128 v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  __int128 v295;
  uint64_t v296;
  __int128 v297;
  _BYTE v298[40];
  void *v299;
  _QWORD *v300;
  _QWORD *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  char *v309;
  unsigned __int8 *v310;
  uint64_t v311;
  _QWORD *v312;
  _OWORD v313[14];
  uint64_t v314;
  _OWORD v315[14];
  uint64_t v316;
  __int128 v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  __int128 v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD v343[29];
  _QWORD v344[29];
  uint64_t v345;
  char v346;
  __int128 v347;
  char v348;
  int v349;
  int v350;
  char v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  _QWORD v355[2];
  char v356;
  int v357;
  int v358;
  char v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  __int128 v363;
  char v364;
  int v365;
  int v366;
  char v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  __int128 v371;
  char v372;
  int v373;
  int v374;
  char v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  __int128 v379;
  char v380;
  int v381;
  int v382;
  char v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  __int128 v387;
  char v388;
  int v389;
  int v390;
  char v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  _OWORD v395[14];
  uint64_t v396;
  _OWORD v397[14];
  uint64_t v398;
  int v399;
  char v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  int v411;
  char v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;

  v312 = a5;
  v273 = a2;
  v301 = (_QWORD *)a1;
  v306 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v306);
  v8 = (char *)&v267 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v267 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v267 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v267 - v16;
  __chkstk_darwin(v18);
  v282 = (char *)&v267 - v19;
  __chkstk_darwin(v20);
  v293 = (char *)&v267 - v21;
  __chkstk_darwin(v22);
  v283 = (char *)&v267 - v23;
  __chkstk_darwin(v24);
  v285 = (char *)&v267 - v25;
  __chkstk_darwin(v26);
  v284 = (char *)&v267 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v267 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v267 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v267 - v35;
  v37 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v37);
  v310 = (unsigned __int8 *)&v267 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v309 = (char *)&v267 - v40;
  v308 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v308);
  v307 = (char *)&v267 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v305 = (char *)&v267 - v43;
  v304 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v304);
  v303 = (uint64_t)&v267 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v302 = (char *)&v267 - v46;
  if (a3 == 5)
  {
    v280 = v33;
    v281 = v30;
    v76 = type metadata accessor for CRLShapeItem(0);
    v77 = a4;
    v78 = swift_dynamicCastClass(a4, v76);
    if (!v78)
      return;
    v79 = (uint64_t)v36;
    v310 = *(unsigned __int8 **)(v78 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v309 = (char *)swift_conformsToProtocol2(*(_QWORD *)v310, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!v309)
      goto LABEL_101;
    v80 = *(char **)(v273 + 16);
    if (!v80)
      return;
    v270 = v8;
    v305 = (char *)v301 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
    v272 = &v342;
    v267 = v77;
    v81 = v273;
    swift_bridgeObjectRetain(v273);
    swift_retain(v310);
    v82 = (_QWORD *)(v81 + 40);
    v271 = xmmword_100EF5E40;
    v269 = v11;
    v278 = v14;
    v279 = v17;
    v277 = v79;
    while (1)
    {
      v301 = v82;
      v302 = v80;
      v84 = *(v82 - 1);
      v83 = *v82;
      v85 = v84 == 0x7974536570616873 && v83 == 0xEE0061746144656CLL;
      if (v85
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974536570616873, 0xEE0061746144656CLL, *(v82 - 1), *v82, 0) & 1) != 0)
      {
        break;
      }
      v130 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v131 = swift_allocObject(v130, 72, 7);
      *(_OWORD *)(v131 + 16) = v271;
      *(_QWORD *)(v131 + 56) = &type metadata for String;
      *(_QWORD *)(v131 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v131 + 32) = v84;
      *(_QWORD *)(v131 + 40) = v83;
      swift_bridgeObjectRetain(v83);
      swift_setDeallocating(v131);
      v132 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v131 + 32, 1, v132);
      swift_deallocClassInstance(v131, 32, 7);
LABEL_22:
      v82 = v301 + 2;
      v80 = v302 - 1;
      if (v302 == (char *)1)
      {

        swift_release(v310);
        swift_bridgeObjectRelease();
        return;
      }
    }
    v86 = (void (*)(void))*((_QWORD *)v309 + 2);
    v307 = *(char **)v310;
    v308 = (uint64_t)v86;
    v86();
    v87 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    CRRegister.wrappedValue.getter(v87);
    *(_QWORD *)&v298[32] = *((_QWORD *)&v317 + 1);
    v299 = (void *)v317;
    v300 = (_QWORD *)v318;
    v296 = v319;
    *(_QWORD *)&v297 = v320;
    v88 = v322;
    *(_QWORD *)&v298[16] = v321;
    *(_QWORD *)&v298[24] = v324;
    v303 = *((_QWORD *)&v318 + 1);
    v304 = v325;
    *(_QWORD *)&v298[8] = v326;
    v89 = v327;
    *((_QWORD *)&v297 + 1) = v323;
    *(_QWORD *)v298 = v328;
    sub_1004B84A4(v79, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    v311 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v90 = *(_QWORD **)((char *)v312 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v91 = *v90;
    v92 = swift_conformsToProtocol2(*v90, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!v92)
      goto LABEL_92;
    v93 = v92;
    v94 = *(void (**)(uint64_t, uint64_t, __n128))(v92 + 16);
    v95 = swift_retain(v90);
    v96 = (uint64_t)v280;
    v94(v91, v93, v95);
    swift_release(v90);
    CRRegister.wrappedValue.getter(v87);
    v295 = v317;
    v294 = *((_QWORD *)&v318 + 1);
    v97 = v318;
    v290 = v319;
    v291 = v320;
    v292 = v321;
    v98 = v322;
    v99 = v323;
    v288 = v325;
    v289 = v324;
    v100 = v327;
    v286 = v328;
    v287 = v326;
    sub_1004B84A4(v96, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    v101 = v89;
    v102 = v88;
    if (v89)
    {
      v103 = v303;
      v104 = v304;
      v106 = (uint64_t)v299;
      v105 = (uint64_t)v300;
      v107 = *(_QWORD *)v298;
      if (v100)
      {
        v274 = v99;
        v275 = v98;
        v276 = v102;
        *(_QWORD *)&v317 = v299;
        BYTE8(v317) = v298[32] & 1;
        v108 = v295;
        v345 = v295;
        v346 = BYTE8(v295) & 1;
        v109 = sub_1007C8324();
        swift_bridgeObjectRetain(*(_QWORD *)&v298[16]);
        v110 = *(_QWORD *)&v298[24];
        swift_bridgeObjectRetain(*(_QWORD *)&v298[24]);
        v111 = *(_QWORD *)&v298[8];
        swift_bridgeObjectRetain(*(_QWORD *)&v298[8]);
        swift_bridgeObjectRetain(v101);
        swift_bridgeObjectRetain(v107);
        if ((static CRExtensible.== infix(_:_:)(&v317, &v345, &type metadata for CRLFillData.FillType, v109, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)
        {
          v399 = (int)v300;
          v400 = BYTE4(v300) & 1;
          v401 = v303;
          v402 = v296;
          v403 = v297;
          v404 = *(_QWORD *)&v298[16];
          v405 = v276;
          v406 = *((_QWORD *)&v297 + 1);
          v407 = v110;
          v408 = v304;
          v409 = v111;
          v410 = v101;
          v112 = v97;
          v411 = v97;
          v412 = BYTE4(v97) & 1;
          v114 = v290;
          v113 = v291;
          v413 = v294;
          v414 = v290;
          v115 = v292;
          v415 = v291;
          v416 = v292;
          v417 = v275;
          v418 = v274;
          v117 = v288;
          v116 = v289;
          v419 = v289;
          v420 = v288;
          v118 = v287;
          v421 = v287;
          v422 = v100;
          if ((sub_1006C5A00((uint64_t)&v399, (uint64_t)&v411) & 1) != 0)
          {
            v119 = v114;
            v120 = *(_QWORD *)v298;
            v121 = v286;
            v268 = sub_100C9E04C(*(uint64_t *)v298, v286);
            sub_1004C4174(v295, *((uint64_t *)&v295 + 1), v112, v294, v119, v291, v292, v275, v274, v116, v117, v118, v100, v121);
            v265 = v120;
            v122 = *(_QWORD *)&v298[32];
            v123 = (uint64_t)v299;
            v124 = (uint64_t)v300;
            v125 = v303;
            v127 = v296;
            v126 = v297;
            v128 = *(_QWORD *)&v298[16];
            v129 = v276;
            sub_1004C4174((uint64_t)v299, *(uint64_t *)&v298[32], (uint64_t)v300, v303, v296, v297, *(uint64_t *)&v298[16], v276, *((uint64_t *)&v297 + 1), *(uint64_t *)&v298[24], v304, *(uint64_t *)&v298[8], v101, v265);
            sub_1004C4174(v123, v122, v124, v125, v127, v126, v128, v129, *((uint64_t *)&v297 + 1), *(uint64_t *)&v298[24], v304, *(uint64_t *)&v298[8], v101, *(uint64_t *)v298);
            if ((v268 & 1) != 0)
              goto LABEL_44;
          }
          else
          {
            sub_1004C4174(v295, *((uint64_t *)&v295 + 1), v112, v294, v114, v113, v115, v275, v274, v116, v117, v118, v100, v286);
            v141 = *(_QWORD *)v298;
            v142 = *(_QWORD *)&v298[32];
            v143 = (uint64_t)v299;
            v144 = (uint64_t)v300;
            v146 = v296;
            v145 = v297;
            v147 = *(_QWORD *)&v298[16];
            v148 = v276;
            sub_1004C4174((uint64_t)v299, *(uint64_t *)&v298[32], (uint64_t)v300, v303, v296, v297, *(uint64_t *)&v298[16], v276, *((uint64_t *)&v297 + 1), *(uint64_t *)&v298[24], v304, *(uint64_t *)&v298[8], v101, *(uint64_t *)v298);
            sub_1004C4174(v143, v142, v144, v303, v146, v145, v147, v148, *((uint64_t *)&v297 + 1), *(uint64_t *)&v298[24], v304, *(uint64_t *)&v298[8], v101, v141);
          }
        }
        else
        {
          sub_1004C4174(v108, *((uint64_t *)&v108 + 1), v97, v294, v290, v291, v292, v275, v274, v289, v288, v287, v100, v286);
          v266 = v107;
          v264 = v111;
          v263 = v110;
          v133 = *((_QWORD *)&v297 + 1);
          v134 = (uint64_t)v300;
          v135 = v303;
          v137 = v296;
          v136 = v297;
          v138 = *(_QWORD *)&v298[16];
          v139 = v107;
          v140 = v276;
          sub_1004C4174((uint64_t)v299, *(uint64_t *)&v298[32], (uint64_t)v300, v303, v296, v297, *(uint64_t *)&v298[16], v276, *((uint64_t *)&v297 + 1), v263, v304, v264, v101, v266);
          sub_1004C4174((uint64_t)v299, *(uint64_t *)&v298[32], v134, v135, v137, v136, v138, v140, v133, *(uint64_t *)&v298[24], v304, *(uint64_t *)&v298[8], v101, v139);
        }
LABEL_40:
        v149 = sub_100923670();
        if (v149)
        {
          v150 = v149;
          *((_QWORD *)&v318 + 1) = sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
          *(_QWORD *)&v317 = v150;
        }
        else
        {
          v317 = 0u;
          v318 = 0u;
        }
        sub_1004CB7BC((uint64_t)&v317, (uint64_t)&v345, &qword_1013E0230);
        swift_beginAccess(v305, v344, 33, 0);
        sub_10083DAD8((uint64_t)&v345, 0x14uLL);
        swift_endAccess(v344);
        sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
LABEL_44:
        v151 = (uint64_t)v281;
        ((void (*)(char *, char *))v308)(v307, v309);
        v152 = sub_1004B804C(&qword_1013E0A88);
        CRRegister.wrappedValue.getter(v152);
        sub_1004C4938((uint64_t)&v317, (uint64_t)v343, (uint64_t *)&unk_1013F1530);
        sub_1004B84A4(v151, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v153 = *(_QWORD **)((char *)v312 + v311);
        v154 = *v153;
        v155 = swift_conformsToProtocol2(*v153, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v155)
          goto LABEL_93;
        v156 = v155;
        v157 = *(void (**)(uint64_t, uint64_t, __n128))(v155 + 16);
        v158 = swift_retain(v153);
        v159 = (uint64_t)v284;
        v157(v154, v156, v158);
        swift_release(v153);
        CRRegister.wrappedValue.getter(v152);
        sub_1004C4938((uint64_t)&v317, (uint64_t)v344, (uint64_t *)&unk_1013F1530);
        sub_1004B84A4(v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1004C4938((uint64_t)v343, (uint64_t)&v345, (uint64_t *)&unk_1013F1530);
        if (sub_1004F276C((uint64_t)&v345) == 1)
        {
          sub_1004C4938((uint64_t)v344, (uint64_t)&v317, (uint64_t *)&unk_1013F1530);
          v160 = sub_1004F276C((uint64_t)&v317);
          v161 = (uint64_t)v285;
          if (v160 == 1)
            goto LABEL_55;
        }
        else
        {
          sub_1004C4938((uint64_t)v344, (uint64_t)&v317, (uint64_t *)&unk_1013F1530);
          v162 = sub_1004F276C((uint64_t)&v317);
          v161 = (uint64_t)v285;
          if (v162 != 1)
          {
            sub_1004C4938((uint64_t)v344, (uint64_t)v313, (uint64_t *)&unk_1013F1530);
            v397[12] = v313[12];
            v397[13] = v313[13];
            v398 = v314;
            v397[8] = v313[8];
            v397[9] = v313[9];
            v397[11] = v313[11];
            v397[10] = v313[10];
            v397[4] = v313[4];
            v397[5] = v313[5];
            v397[7] = v313[7];
            v397[6] = v313[6];
            v397[0] = v313[0];
            v397[1] = v313[1];
            v397[3] = v313[3];
            v397[2] = v313[2];
            sub_1004C4938((uint64_t)v343, (uint64_t)v315, (uint64_t *)&unk_1013F1530);
            v395[12] = v315[12];
            v395[13] = v315[13];
            v396 = v316;
            v395[8] = v315[8];
            v395[9] = v315[9];
            v395[11] = v315[11];
            v395[10] = v315[10];
            v395[4] = v315[4];
            v395[5] = v315[5];
            v395[7] = v315[7];
            v395[6] = v315[6];
            v395[0] = v315[0];
            v395[1] = v315[1];
            v395[3] = v315[3];
            v395[2] = v315[2];
            sub_1008D3994(v343, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
            v163 = sub_1008BE12C((uint64_t)v395, (uint64_t)v397);
            sub_1008D3994(v344, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            sub_1008D3994(v343, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            sub_1008D3994(v343, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
            if ((v163 & 1) != 0)
              goto LABEL_55;
            goto LABEL_51;
          }
        }
        sub_1004C4938((uint64_t)v343, (uint64_t)&v317, (uint64_t *)&unk_1013F1530);
        sub_1004C4938((uint64_t)v344, (uint64_t)v272, (uint64_t *)&unk_1013F1530);
        sub_1004F2784((uint64_t)&v317);
LABEL_51:
        v164 = v312;
        v165 = *(void **)((char *)v312 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
        *(_QWORD *)((char *)v312 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke) = 0;

        v166 = (*(uint64_t (**)(void))((swift_isaMask & *v164) + 0x420))();
        if (v166)
        {
          v167 = v166;
          *((_QWORD *)&v318 + 1) = sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
          *(_QWORD *)&v317 = v167;
        }
        else
        {
          v317 = 0u;
          v318 = 0u;
        }
        sub_1004CB7BC((uint64_t)&v317, (uint64_t)v315, &qword_1013E0230);
        swift_beginAccess(v305, v313, 33, 0);
        sub_10083DAD8((uint64_t)v315, 0xFuLL);
        swift_endAccess(v313);
        sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
LABEL_55:
        ((void (*)(char *, char *))v308)(v307, v309);
        v168 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
        CRRegister.wrappedValue.getter(v168);
        *(_OWORD *)v298 = v317;
        *(_OWORD *)&v298[16] = v318;
        v300 = (_QWORD *)v320;
        *(_QWORD *)&v298[32] = v319;
        v299 = (void *)v321;
        sub_1004B84A4(v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v169 = *(_QWORD **)((char *)v312 + v311);
        v170 = *v169;
        v171 = swift_conformsToProtocol2(*v169, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v171)
          goto LABEL_94;
        v172 = v171;
        v173 = *(void (**)(uint64_t, uint64_t, __n128))(v171 + 16);
        v174 = swift_retain(v169);
        v175 = (uint64_t)v283;
        v173(v170, v172, v174);
        swift_release(v169);
        v304 = v168;
        CRRegister.wrappedValue.getter(v168);
        v176 = v317;
        v178 = *((_QWORD *)&v318 + 1);
        v177 = v318;
        v303 = v319;
        v179 = v320;
        v180 = v321;
        sub_1004B84A4(v175, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v181 = (uint64_t)v300;
        if (v300)
        {
          v182 = (uint64_t)v293;
          if (v179)
          {
            v183 = *(_QWORD *)&v298[16];
            v297 = v176;
            v387 = v176;
            v388 = v177 & 1;
            v389 = HIDWORD(v177);
            v390 = v178;
            v391 = BYTE4(v178) & 1;
            v392 = v303;
            v393 = v179;
            v394 = v180;
            *((_QWORD *)&v295 + 1) = v177;
            v296 = v180;
            v184 = *(_OWORD *)v298;
            v379 = *(_OWORD *)v298;
            v380 = v298[16] & 1;
            v381 = *(_DWORD *)&v298[20];
            v185 = *(_QWORD *)&v298[24];
            v382 = *(_DWORD *)&v298[24];
            v383 = v298[28] & 1;
            v294 = v178;
            v186 = *(_QWORD *)&v298[32];
            v384 = *(_QWORD *)&v298[32];
            v385 = (uint64_t)v300;
            v187 = v179;
            v188 = (uint64_t)v299;
            v386 = (uint64_t)v299;
            sub_1004C48C4(*(uint64_t *)v298, *(uint64_t *)&v298[8], *(uint64_t *)&v298[16], *(uint64_t *)&v298[24], *(uint64_t *)&v298[32], (uint64_t)v300, (uint64_t)v299);
            LODWORD(v295) = sub_100785E54((uint64_t)&v379, (uint64_t)&v387);
            sub_1004C41DC(v297, *((uint64_t *)&v297 + 1), *((uint64_t *)&v295 + 1), v294, v303, v187, v296);
            sub_1004C41DC(v184, *((uint64_t *)&v184 + 1), v183, v185, v186, v181, v188);
            v189 = sub_1004C41DC(v184, *((uint64_t *)&v184 + 1), v183, v185, v186, v181, v188);
            if ((v295 & 1) != 0)
              goto LABEL_68;
            goto LABEL_62;
          }
        }
        else
        {
          v182 = (uint64_t)v293;
          if (!v179)
            goto LABEL_68;
        }
        sub_1004C41DC(*(uint64_t *)v298, *(uint64_t *)&v298[8], *(uint64_t *)&v298[16], *(uint64_t *)&v298[24], *(uint64_t *)&v298[32], (uint64_t)v300, (uint64_t)v299);
        v189 = sub_1004C41DC(v176, *((uint64_t *)&v176 + 1), v177, v178, v303, v179, v180);
LABEL_62:
        if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v312) + 0x4C0))(v189) & 1) != 0)
          goto LABEL_66;
        v190 = *(_QWORD **)((char *)v312 + v311);
        v191 = *v190;
        v192 = swift_conformsToProtocol2(*v190, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v192)
          goto LABEL_98;
        v193 = v192;
        v194 = *(void (**)(uint64_t, uint64_t, __n128))(v192 + 16);
        v195 = swift_retain(v190);
        v196 = (uint64_t)v270;
        v194(v191, v193, v195);
        swift_release(v190);
        CRRegister.wrappedValue.getter(v304);
        v197 = v317;
        v199 = *((_QWORD *)&v318 + 1);
        v198 = v318;
        v200 = v319;
        v201 = v320;
        v202 = v321;
        sub_1004B84A4(v196, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (!v201)
        {
LABEL_66:
          v317 = 0u;
          v318 = 0u;
        }
        else
        {
          v371 = v197;
          v372 = v198 & 1;
          v373 = HIDWORD(v198);
          v374 = v199;
          v375 = BYTE4(v199) & 1;
          v376 = v200;
          v377 = v201;
          v378 = v202;
          v203 = sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          v204 = sub_100785FD4((uint64_t)&v371);
          sub_1004C41DC(v197, *((uint64_t *)&v197 + 1), v198, v199, v200, v201, v202);
          *((_QWORD *)&v318 + 1) = v203;
          *(_QWORD *)&v317 = v204;
        }
        sub_1004CB7BC((uint64_t)&v317, (uint64_t)v315, &qword_1013E0230);
        swift_beginAccess(v305, v313, 33, 0);
        sub_10083DAD8((uint64_t)v315, 0x15uLL);
        swift_endAccess(v313);
        sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
        v182 = (uint64_t)v293;
LABEL_68:
        ((void (*)(char *, char *))v308)(v307, v309);
        v205 = v304;
        CRRegister.wrappedValue.getter(v304);
        *(_OWORD *)&v298[8] = v317;
        *(_OWORD *)&v298[24] = v318;
        v206 = v320;
        v299 = (void *)v319;
        v300 = (_QWORD *)v321;
        sub_1004B84A4(v182, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v207 = *(_QWORD **)((char *)v312 + v311);
        v208 = *v207;
        v209 = swift_conformsToProtocol2(*v207, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (!v209)
          goto LABEL_95;
        v210 = v209;
        v211 = *(void (**)(uint64_t, uint64_t, __n128))(v209 + 16);
        v212 = swift_retain(v207);
        v213 = (uint64_t)v282;
        v211(v208, v210, v212);
        swift_release(v207);
        CRRegister.wrappedValue.getter(v205);
        v214 = v317;
        v215 = *((_QWORD *)&v318 + 1);
        v216 = v318;
        v303 = v319;
        v217 = v320;
        v218 = v321;
        sub_1004B84A4(v213, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        v219 = v206;
        if (v206)
        {
          if (v217)
          {
            v220 = *(_QWORD *)&v298[24];
            v363 = v214;
            *((_QWORD *)&v297 + 1) = v218;
            *(_QWORD *)v298 = *((_QWORD *)&v214 + 1);
            v221 = v216;
            v364 = v216 & 1;
            v365 = HIDWORD(v216);
            v366 = v215;
            v367 = BYTE4(v215) & 1;
            v368 = v303;
            v369 = v217;
            v370 = v218;
            v222 = *(_QWORD *)&v298[8];
            v355[0] = *(_QWORD *)&v298[8];
            *(_QWORD *)&v297 = v217;
            v223 = *(_QWORD *)&v298[16];
            v355[1] = *(_QWORD *)&v298[16];
            v356 = v298[24] & 1;
            v357 = *(_DWORD *)&v298[28];
            v225 = *(_QWORD *)&v298[32];
            v224 = (uint64_t)v299;
            v358 = *(_DWORD *)&v298[32];
            v359 = v298[36] & 1;
            v360 = (uint64_t)v299;
            v361 = v219;
            *((_QWORD *)&v295 + 1) = v215;
            v226 = (uint64_t)v300;
            v362 = (uint64_t)v300;
            sub_1004C48C4(*(uint64_t *)&v298[8], *(uint64_t *)&v298[16], *(uint64_t *)&v298[24], *(uint64_t *)&v298[32], (uint64_t)v299, v219, (uint64_t)v300);
            LODWORD(v296) = sub_100785E54((uint64_t)v355, (uint64_t)&v363);
            sub_1004C41DC(v214, *(uint64_t *)v298, v221, *((uint64_t *)&v295 + 1), v303, v297, *((uint64_t *)&v297 + 1));
            sub_1004C41DC(v222, v223, v220, v225, v224, v219, v226);
            v227 = v224;
            v205 = v304;
            v228 = sub_1004C41DC(v222, v223, v220, v225, v227, v219, v226);
            if ((v296 & 1) != 0)
              goto LABEL_81;
LABEL_75:
            if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v312) + 0x4C0))(v228) & 1) != 0)
              goto LABEL_79;
            v229 = *(_QWORD **)((char *)v312 + v311);
            v230 = *v229;
            v231 = swift_conformsToProtocol2(*v229, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
            if (!v231)
              goto LABEL_99;
            v232 = v231;
            v233 = *(void (**)(uint64_t, uint64_t, __n128))(v231 + 16);
            v234 = swift_retain(v229);
            v235 = (uint64_t)v269;
            v233(v230, v232, v234);
            swift_release(v229);
            CRRegister.wrappedValue.getter(v205);
            v236 = v317;
            v238 = *((_QWORD *)&v318 + 1);
            v237 = v318;
            v239 = v319;
            v240 = v320;
            v241 = v321;
            sub_1004B84A4(v235, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (!v240)
            {
LABEL_79:
              v317 = 0u;
              v318 = 0u;
            }
            else
            {
              v347 = v236;
              v348 = v237 & 1;
              v349 = HIDWORD(v237);
              v350 = v238;
              v351 = BYTE4(v238) & 1;
              v352 = v239;
              v353 = v240;
              v354 = v241;
              v242 = sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
              v243 = sub_100785FD4((uint64_t)&v347);
              sub_1004C41DC(v236, *((uint64_t *)&v236 + 1), v237, v238, v239, v240, v241);
              *((_QWORD *)&v318 + 1) = v242;
              *(_QWORD *)&v317 = v243;
            }
            sub_1004CB7BC((uint64_t)&v317, (uint64_t)v315, &qword_1013E0230);
            swift_beginAccess(v305, v313, 33, 0);
            sub_10083DAD8((uint64_t)v315, 0x16uLL);
            swift_endAccess(v313);
            sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
            goto LABEL_81;
          }
        }
        else if (!v217)
        {
LABEL_81:
          v244 = (uint64_t)v279;
          ((void (*)(char *, char *))v308)(v307, v309);
          v245 = sub_1004B804C(&qword_1013F55A0);
          CRRegister.wrappedValue.getter(v245);
          v246 = *(float *)&v317;
          sub_1004B84A4(v244, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          v247 = *(_QWORD **)((char *)v312 + v311);
          v248 = *v247;
          v249 = swift_conformsToProtocol2(*v247, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
          if (!v249)
            goto LABEL_96;
          v250 = v249;
          v251 = *(void (**)(uint64_t, uint64_t, __n128))(v249 + 16);
          v252 = swift_retain(v247);
          v253 = (uint64_t)v278;
          v251(v248, v250, v252);
          swift_release(v247);
          CRRegister.wrappedValue.getter(v245);
          v254 = *(float *)&v317;
          sub_1004B84A4(v253, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if (v246 != v254)
          {
            v255 = *(_QWORD **)((char *)v312 + v311);
            v256 = *v255;
            v257 = swift_conformsToProtocol2(*v255, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
            if (!v257)
              goto LABEL_97;
            v258 = v257;
            v259 = *(void (**)(uint64_t, uint64_t, __n128))(v257 + 16);
            v260 = swift_retain(v255);
            v259(v256, v258, v260);
            swift_release(v255);
            CRRegister.wrappedValue.getter(v245);
            v261 = *(float *)&v317;
            sub_1004B84A4(v244, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            *((_QWORD *)&v318 + 1) = &type metadata for CGFloat;
            *(double *)&v317 = v261;
            sub_1004CB7BC((uint64_t)&v317, (uint64_t)v315, &qword_1013E0230);
            swift_beginAccess(v305, v313, 33, 0);
            sub_10083DAD8((uint64_t)v315, 0x17uLL);
            swift_endAccess(v313);
            sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
          }
          v79 = v277;
          goto LABEL_22;
        }
        sub_1004C41DC(*(uint64_t *)&v298[8], *(uint64_t *)&v298[16], *(uint64_t *)&v298[24], *(uint64_t *)&v298[32], (uint64_t)v299, v206, (uint64_t)v300);
        v228 = sub_1004C41DC(v214, *((uint64_t *)&v214 + 1), v216, v215, v303, v217, v218);
        goto LABEL_75;
      }
    }
    else
    {
      v103 = v303;
      v104 = v304;
      v106 = (uint64_t)v299;
      v105 = (uint64_t)v300;
      v107 = *(_QWORD *)v298;
      if (!v100)
        goto LABEL_44;
    }
    *(_QWORD *)&v317 = v106;
    *((_QWORD *)&v317 + 1) = *(_QWORD *)&v298[32];
    *(_QWORD *)&v318 = v105;
    *((_QWORD *)&v318 + 1) = v103;
    v319 = v296;
    v320 = v297;
    v321 = *(_QWORD *)&v298[16];
    v322 = v102;
    v323 = *((_QWORD *)&v297 + 1);
    v324 = *(_QWORD *)&v298[24];
    v325 = v104;
    v326 = *(_QWORD *)&v298[8];
    v327 = v89;
    v328 = v107;
    v329 = v295;
    v330 = v97;
    v331 = v294;
    v332 = v290;
    v333 = v291;
    v334 = v292;
    v335 = v98;
    v336 = v99;
    v337 = v289;
    v338 = v288;
    v339 = v287;
    v340 = v100;
    v341 = v286;
    sub_1007C825C((uint64_t)&v317);
    goto LABEL_40;
  }
  if (a3)
  {
    sub_100B0CAF8((uint64_t)v301, v273, a3, (uint64_t)a4, (uint64_t)v312);
    return;
  }
  v47 = type metadata accessor for CRLShapeItem(0);
  v48 = a4;
  v49 = swift_dynamicCastClass(a4, v47);
  if (v49)
  {
    v50 = v49;
    v51 = *(_QWORD **)(v49 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (!swift_conformsToProtocol2(*v51, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
      goto LABEL_100;
    v52 = v273;
    v53 = *(_QWORD *)(v273 + 16);
    if (!v53)
    {
      v262 = a4;
      swift_retain(v51);
LABEL_89:
      swift_unknownObjectRetain(v48);
      sub_100B0CAF8((uint64_t)v301, v52, 0, v50, (uint64_t)v312);
      swift_release(v51);

      return;
    }
    *(_QWORD *)&v298[32] = v50;
    v299 = a4;
    v300 = (_QWORD *)((char *)v301 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    v54 = a4;
    swift_retain(v51);
    swift_bridgeObjectRetain(v52);
    v55 = (uint64_t *)(v52 + 40);
    v306 = (uint64_t)v51;
    v56 = v303;
    v57 = (unsigned __int8 *)v309;
    while (1)
    {
      v58 = *(v55 - 1);
      v59 = *v55;
      v60 = v58 == 0x6641746E65726170 && v59 == 0xEE007974696E6966;
      if (v60
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, v58, v59, 0) & 1) != 0)
      {
        v311 = v53;
        v61 = *(_QWORD **)((char *)v312 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (!swift_conformsToProtocol2(*v61, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
        {
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
          return;
        }
        v62 = (uint64_t)v302;
        (*(void (**)(void))(*v51 + 640))();
        swift_retain(v61);
        v63 = sub_1004B804C((uint64_t *)&unk_101406B00);
        v64 = (uint64_t)v305;
        CRRegister.wrappedValue.getter(v63);
        sub_1004CB800(v62, &qword_1013F5530);
        v65 = v308;
        sub_1004B8460(v64 + *(int *)(v308 + 20), (uint64_t)v57, type metadata accessor for CRLPathSourceData);
        v66 = sub_1004B84A4(v64, type metadata accessor for CRLShapeItemParentAffinity);
        (*(void (**)(uint64_t))(*v61 + 640))(v66);
        v67 = (uint64_t)v307;
        CRRegister.wrappedValue.getter(v63);
        sub_1004CB800(v56, &qword_1013F5530);
        v68 = v310;
        sub_1004B8460(v67 + *(int *)(v65 + 20), (uint64_t)v310, type metadata accessor for CRLPathSourceData);
        sub_1004B84A4(v67, type metadata accessor for CRLShapeItemParentAffinity);
        v69 = sub_1009345F4(v57, v68);
        sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLPathSourceData);
        sub_1004B84A4((uint64_t)v57, type metadata accessor for CRLPathSourceData);
        if ((v69 & 1) == 0)
        {
          v70 = *(void (**)(__n128))(*v61 + 728);
          v71 = swift_retain(v61);
          v70(v71);
          v72 = swift_release(v61);
          v73 = (*(uint64_t (**)(__n128))((swift_isaMask & *v312) + 0x478))(v72);
          *((_QWORD *)&v318 + 1) = sub_1004B8930(0, (unint64_t *)&qword_1013EC648, off_101229970);
          *(_QWORD *)&v317 = v73;
          v74 = v300;
          swift_beginAccess(v300, v395, 33, 0);
          sub_1004CB7BC((uint64_t)&v317, (uint64_t)v397, &qword_1013E0230);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v74);
          v345 = *v74;
          *v74 = 0x8000000000000000;
          sub_1008258FC((uint64_t)v397, 19, isUniquelyReferenced_nonNull_native);
          *v74 = v345;
          swift_bridgeObjectRelease();
          swift_endAccess(v395);
          sub_1004CB800((uint64_t)&v317, &qword_1013E0230);
        }
        swift_release(v61);
        v51 = (_QWORD *)v306;
        v53 = v311;
      }
      v55 += 2;
      if (!--v53)
      {
        v52 = v273;
        swift_bridgeObjectRelease();
        v50 = *(_QWORD *)&v298[32];
        v48 = v299;
        goto LABEL_89;
      }
    }
  }
}

double sub_100B0FBD0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  _QWORD *Strong;
  void *v6;
  char v7;
  double result;

  v2 = v1;
  v4 = a1;
  sub_100A14388(a1);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (!Strong
    || (v6 = Strong, v7 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v6,
                     (v7 & 1) == 0))
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace) = 0;
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_100B0FC7C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v4;
  char v5;
  double result;

  v2 = v1;
  sub_10092345C((uint64_t)a1);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (!Strong
    || (v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) == 0))
  {
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace) = 0;
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100B0FD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;
  double *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v4 = type metadata accessor for PKStroke(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace;
  result = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace);
  if (!result)
  {
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 288);
    v15 = swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData));
    v16 = (void *)v14(v15);
    objc_msgSend(v16, "transform", swift_release(v13).n128_f64[0]);
    v17 = v40;
    v18 = v41;
    v19 = v42;
    v20 = v43;
    v21 = v44;
    v22 = v45;

    v23 = sub_100B08F4C();
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)(v23 + 16);
      if (v25)
      {
        v35 = v11;
        v36 = v3;
        v39 = _swiftEmptyArrayStorage;
        sub_100600C9C(0, v25, 0);
        v26 = *(unsigned __int8 *)(v5 + 80);
        v34 = v24;
        v38 = (v26 + 32) & ~v26;
        v27 = v24 + v38;
        v28 = *(_QWORD *)(v5 + 72);
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        do
        {
          v37(v7, v27, v4);
          isa = PKStroke._bridgeToObjectiveC()().super.isa;
          v40 = v17;
          v41 = v18;
          v42 = v19;
          v43 = v20;
          v44 = v21;
          v45 = v22;
          v30 = -[objc_class crl_strokeByAppendingTransform:](isa, "crl_strokeByAppendingTransform:", &v40, v34);

          static PKStroke._unconditionallyBridgeFromObjectiveC(_:)(v30);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          v31 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
          {
            sub_100600C9C(0, *((_QWORD *)v31 + 2) + 1, 1);
            v31 = v39;
          }
          v33 = *((_QWORD *)v31 + 2);
          v32 = *((_QWORD *)v31 + 3);
          if (v33 >= v32 >> 1)
          {
            sub_100600C9C(v32 > 1, v33 + 1, 1);
            v31 = v39;
          }
          *((_QWORD *)v31 + 2) = v33 + 1;
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v31 + v38 + v33 * v28, v10, v4);
          v39 = v31;
          v27 += v28;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        v11 = v35;
        v3 = v36;
      }
      else
      {
        swift_bridgeObjectRelease();
        v31 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      v31 = 0;
    }
    *(_QWORD *)(v3 + v11) = v31;
    swift_bridgeObjectRelease();
    return *(_QWORD *)(v3 + v11);
  }
  return result;
}

id sub_100B10024()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUnknownLayout()
{
  return objc_opt_self(_TtC8Freeform16CRLUnknownLayout);
}

void sub_100B10074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v47 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v40 = (char *)&v39 - v8;
  v49 = sub_1004B804C(&qword_101405F50);
  v9 = __chkstk_darwin(v49);
  v48 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v46 = (char *)&v39 - v12;
  __chkstk_darwin(v11);
  v45 = (char *)&v39 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v43 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v50 = a1;
  v18 = swift_bridgeObjectRetain(a1);
  v19 = 0;
  v42 = _swiftEmptyArrayStorage;
  v20 = (uint64_t)v46;
  if (!v17)
    goto LABEL_7;
LABEL_4:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v51 = v19;
  for (i = v21 | (v19 << 6); ; i = __clz(__rbit64(v31)) + (v32 << 6))
  {
    v23 = v50;
    v24 = *(_QWORD *)(v5 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    v26 = (uint64_t)v45;
    v25(v45, *(_QWORD *)(v50 + 48) + v24 * i, v4, v18);
    v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * i);
    *(_QWORD *)(v26 + *(int *)(v49 + 48)) = v27;
    sub_1004C4938(v26, v20, &qword_101405F50);
    ((void (*)(char *, uint64_t, uint64_t))v25)(v48, v20, v4);
    v28 = *(void (**)(void))(v5 + 32);
    v29 = (uint64_t)v47;
    v28();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v29, 0, 1, v4);
    swift_retain(v27);
    sub_1004CB800(v20, &qword_101405F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v4) == 1)
    {
      sub_1004CB800(v29, (uint64_t *)&unk_1013E1A50);
      v19 = v51;
      if (v17)
        goto LABEL_4;
    }
    else
    {
      v34 = v40;
      ((void (*)(char *, uint64_t, uint64_t))v28)(v40, v29, v4);
      ((void (*)(char *, char *, uint64_t))v28)(v41, v34, v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
        v42 = (_QWORD *)sub_100D0EC28(0, v42[2] + 1, 1, (unint64_t)v42);
      v36 = v42[2];
      v35 = v42[3];
      if (v36 >= v35 >> 1)
        v42 = (_QWORD *)sub_100D0EC28(v35 > 1, v36 + 1, 1, (unint64_t)v42);
      v37 = v41;
      v38 = v42;
      v42[2] = v36 + 1;
      ((void (*)(char *, char *, uint64_t))v28)((char *)v38+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ v36 * v24, v37, v4);
      v19 = v51;
      if (v17)
        goto LABEL_4;
    }
LABEL_7:
    v30 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v30 >= v44)
      goto LABEL_29;
    v31 = *(_QWORD *)(v43 + 8 * v30);
    v32 = v19 + 1;
    if (!v31)
    {
      v32 = v19 + 2;
      if (v19 + 2 >= v44)
        goto LABEL_29;
      v31 = *(_QWORD *)(v43 + 8 * v32);
      if (!v31)
      {
        v32 = v19 + 3;
        if (v19 + 3 >= v44)
          goto LABEL_29;
        v31 = *(_QWORD *)(v43 + 8 * v32);
        if (!v31)
        {
          v32 = v19 + 4;
          if (v19 + 4 >= v44)
            goto LABEL_29;
          v31 = *(_QWORD *)(v43 + 8 * v32);
          if (!v31)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v31 - 1) & v31;
    v51 = v32;
  }
  v33 = v19 + 5;
  if (v19 + 5 >= v44)
  {
LABEL_29:
    swift_release(v50);
    return;
  }
  v31 = *(_QWORD *)(v43 + 8 * v33);
  if (v31)
  {
    v32 = v19 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v44)
      goto LABEL_29;
    v31 = *(_QWORD *)(v43 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_100B104CC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;

  v52 = a1;
  v53 = a2;
  v51 = sub_1004B804C(&qword_101405F50);
  v5 = __chkstk_darwin(v51);
  v50 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v49 = (char *)&v41 - v8;
  __chkstk_darwin(v7);
  v48 = (char *)&v41 - v9;
  v57 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (!v13)
    return (uint64_t)v14;
  v58 = v3;
  v59 = _swiftEmptyArrayStorage;
  sub_100600724(0, v13, 0);
  result = sub_10051FA44(a3);
  v17 = result;
  v18 = 0;
  v19 = a3 + 64;
  v20 = *(_BYTE *)(a3 + 32);
  v42 = a3 + 80;
  v43 = v13;
  v46 = v10;
  v47 = a3;
  v44 = v16;
  v45 = a3 + 64;
  v21 = v57;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << v20)
  {
    v23 = (unint64_t)v17 >> 6;
    if ((*(_QWORD *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(a3 + 36) != (_DWORD)v16)
      goto LABEL_28;
    v54 = v18;
    v55 = 1 << v17;
    v24 = v51;
    v25 = *(int *)(v51 + 48);
    v26 = *(_QWORD *)(a3 + 48);
    v56 = *(_QWORD *)(v10 + 72);
    v27 = a3;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v29 = (uint64_t)v48;
    v28(v48, v26 + v56 * v17, v21);
    v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v17);
    *(_QWORD *)(v29 + v25) = v30;
    v31 = (uint64_t)v49;
    v28(v49, v29, v21);
    *(_QWORD *)(v31 + *(int *)(v24 + 48)) = v30;
    v32 = v50;
    sub_1004C4938(v31, v50, &qword_101405F50);
    swift_retain_n(v30, 2);
    sub_1004CB800(v29, &qword_101405F50);
    v33 = v58;
    v52(v32);
    sub_1004CB800(v32, &qword_101405F50);
    v14 = v59;
    v58 = v33;
    if (v33)
    {
      swift_release(v59);
      return (uint64_t)v14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
    {
      sub_100600724(0, v14[2] + 1, 1);
      v14 = v59;
    }
    v10 = v46;
    v35 = v14[2];
    v34 = v14[3];
    if (v35 >= v34 >> 1)
    {
      sub_100600724(v34 > 1, v35 + 1, 1);
      v14 = v59;
    }
    v14[2] = v35 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))((unint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ v35 * v56, v12, v57);
    v59 = v14;
    a3 = v47;
    v20 = *(_BYTE *)(v47 + 32);
    v22 = 1 << v20;
    if (v17 >= 1 << v20)
      goto LABEL_29;
    v19 = v45;
    v36 = *(_QWORD *)(v45 + 8 * v23);
    if ((v36 & v55) == 0)
      goto LABEL_30;
    LODWORD(v16) = v44;
    if (*(_DWORD *)(v47 + 36) != (_DWORD)v44)
      goto LABEL_31;
    v37 = v36 & (-2 << (v17 & 0x3F));
    if (v37)
    {
      v22 = __clz(__rbit64(v37)) | v17 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = v23 + 1;
      v39 = (v22 + 63) >> 6;
      if (v23 + 1 < v39)
      {
        v40 = *(_QWORD *)(v45 + 8 * v38);
        if (v40)
        {
LABEL_23:
          v22 = __clz(__rbit64(v40)) + (v38 << 6);
        }
        else
        {
          while (v39 - 2 != v23)
          {
            v40 = *(_QWORD *)(v42 + 8 * v23++);
            if (v40)
            {
              v38 = v23 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    v18 = v54 + 1;
    v17 = v22;
    if (v54 + 1 == v43)
      return (uint64_t)v14;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_100B108A0(void (*a1)(uint64_t *__return_ptr, uint64_t *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t *i;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v18 = _swiftEmptyArrayStorage;
    sub_100600A88(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v10 = *i;
      v16 = v10;
      v11 = swift_bridgeObjectRetain(v10);
      a1(&v17, &v16, v11);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease(v10);
      v12 = v17;
      v18 = v6;
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_100600A88(v13 > 1, v14 + 1, 1);
        v6 = v18;
      }
      v6[2] = v14 + 1;
      v6[v14 + 4] = v12;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
    swift_bridgeObjectRelease(v10);
  }
  return v6;
}

uint64_t sub_100B109C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[15] = a1;
  v2[16] = v1;
  v3 = type metadata accessor for CRLBoardCRDTData(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100B10A5C, 0, 0);
}

uint64_t sub_100B10A5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v2 = v0[18];
  v1 = v0[19];
  v4 = v0[16];
  v3 = v0[17];
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 12, 0, 0);
  sub_1004B8460(v8, v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)(v4 + v6) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v2, v11, v12, v1);
  v13 = swift_task_alloc(32);
  v0[20] = v13;
  *(_QWORD *)(v13 + 16) = v5;
  *(_QWORD *)(v13 + 24) = v1;
  v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[21] = v14;
  v15 = sub_1004B804C((uint64_t *)&unk_101405F80);
  *v14 = v0;
  v14[1] = sub_100B10BE4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000014, 0x8000000100FF78E0, sub_100B2D8F0, v13, v15);
}

uint64_t sub_100B10BE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B10D08;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 160));
    v4 = sub_100B10C50;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B10C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v10 = *(_OWORD *)(v0 + 32);
  v11 = *(_OWORD *)(v0 + 16);
  v8 = *(_OWORD *)(v0 + 64);
  v9 = *(_OWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 88);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  *(_OWORD *)v4 = v11;
  *(_OWORD *)(v4 + 16) = v10;
  *(_OWORD *)(v4 + 32) = v9;
  *(_OWORD *)(v4 + 48) = v8;
  *(_QWORD *)(v4 + 64) = v5;
  *(_BYTE *)(v4 + 72) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B10D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B10D70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v12 = v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v20, 0, 0);
  sub_1004B8460(v12, v6, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v11);
  v13 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v13);
  sub_1004B84A4(v6, type metadata accessor for CRLBoardCRDTData);
  swift_release(v11);
  LOBYTE(v6) = static UUID.== infix(_:_:)(a1);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  if ((v6 & 1) == 0)
  {
    v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
    swift_beginAccess(v14, v19, 0, 0);
    v15 = *v14;
    if (*(_QWORD *)(*v14 + 16))
    {
      swift_bridgeObjectRetain(*v14);
      v16 = sub_100842EFC(a1);
      if ((v17 & 1) != 0)
      {
        v2 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
        swift_unknownObjectRetain(v2);
        swift_bridgeObjectRelease();
        return v2;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  swift_unknownObjectRetain(v2);
  return v2;
}

void sub_100B10F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD *, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int64_t v57;
  char *v58;
  char *v59;
  _QWORD v60[4];
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101405F60);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - v12;
  sub_1004CB7BC(a1, (uint64_t)&v61, &qword_1013E0230);
  if (!*((_QWORD *)&v62 + 1))
  {
    sub_1004CB800((uint64_t)&v61, &qword_1013E0230);
    return;
  }
  v14 = sub_1004B804C(&qword_101405F68);
  if ((swift_dynamicCast(v60, &v61, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
    return;
  v15 = v60[0];
  if (*(_QWORD *)(a2 + 16) != *(_QWORD *)(v60[0] + 16))
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return;
  }
  v58 = v7;
  v16 = *(_QWORD *)(a2 + 64);
  v51 = a2 + 64;
  v17 = -1;
  v18 = -1 << *(_BYTE *)(a2 + 32);
  v50 = ~v18;
  if (-v18 < 64)
    v17 = ~(-1 << -(char)v18);
  v19 = v17 & v16;
  v52 = (unint64_t)(63 - v18) >> 6;
  v49 = v52 - 1;
  v54 = a2;
  v20 = swift_bridgeObjectRetain(a2);
  v21 = 0;
  v56 = v15;
  v59 = v10;
  v53 = v13;
  while (1)
  {
    v22 = v19;
    v23 = v21;
    v57 = v21;
    if (v19)
    {
      v24 = (v19 - 1) & v19;
      v25 = __clz(__rbit64(v19)) | (v21 << 6);
      v26 = v23;
LABEL_9:
      v27 = v54;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, *(_QWORD *)(v54 + 48) + *(_QWORD *)(v5 + 72) * v25, v4, v20);
      v28 = *(_QWORD *)(v27 + 56);
      v29 = sub_1004B804C(&qword_101405DF0);
      v30 = *(void **)(v28 + 8 * v25);
      v10 = v59;
      *(_QWORD *)&v59[*(int *)(v29 + 48)] = v30;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 0, 1, v29);
      v31 = v30;
      v21 = v26;
      v32 = (uint64_t)v58;
      v19 = v24;
      v13 = v53;
      goto LABEL_28;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    v32 = (uint64_t)v58;
    if (v26 < v52)
    {
      v33 = *(_QWORD *)(v51 + 8 * v26);
      if (v33)
        goto LABEL_13;
      v34 = v21 + 2;
      ++v21;
      if (v23 + 2 < v52)
      {
        v33 = *(_QWORD *)(v51 + 8 * v34);
        if (v33)
          goto LABEL_16;
        v21 = v23 + 2;
        if (v23 + 3 < v52)
        {
          v33 = *(_QWORD *)(v51 + 8 * (v23 + 3));
          if (v33)
          {
            v26 += 2;
            goto LABEL_13;
          }
          v34 = v23 + 4;
          v21 = v23 + 3;
          if (v23 + 4 < v52)
            break;
        }
      }
    }
LABEL_27:
    v35 = sub_1004B804C(&qword_101405DF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v10, 1, 1, v35);
    v19 = 0;
LABEL_28:
    sub_1004C4938((uint64_t)v10, (uint64_t)v13, &qword_101405F60);
    v36 = sub_1004B804C(&qword_101405DF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v13, 1, v36) == 1)
    {
      sub_1004D284C(v54);
      swift_bridgeObjectRelease();
      return;
    }
    v37 = *(void **)&v13[*(int *)(v36 + 48)];
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v32, v13, v4);
    v38 = *(_QWORD *)(v15 + 16);
    v55 = v22;
    if (v38 && (v39 = sub_100842EFC(v32), (v40 & 1) != 0))
    {
      sub_1004E90B0(*(_QWORD *)(v15 + 56) + 40 * v39, (uint64_t)&v61);
    }
    else
    {
      v63 = 0;
      v61 = 0u;
      v62 = 0u;
    }
    v41 = v5;
    v42 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v43 = v4;
    v42(v32, v4);
    v44 = *((_QWORD *)&v62 + 1);
    if (!*((_QWORD *)&v62 + 1))
    {

      swift_bridgeObjectRelease();
      sub_1004CB800((uint64_t)&v61, &qword_101405F70);
      sub_1004D284C(v54);
      return;
    }
    v45 = v63;
    sub_1004BB5A4(&v61, *((uint64_t *)&v62 + 1));
    v60[3] = type metadata accessor for CRLBoardItem(0);
    v60[0] = v37;
    v46 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v45 + 8);
    v47 = v37;
    LOBYTE(v45) = v46(v60, v44, v45);

    sub_1004CB800((uint64_t)v60, &qword_1013E0230);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v61);
    v4 = v43;
    v5 = v41;
    v15 = v56;
    v10 = v59;
    if ((v45 & 1) == 0)
    {
      sub_1004D284C(v54);
      goto LABEL_36;
    }
  }
  v33 = *(_QWORD *)(v51 + 8 * v34);
  if (v33)
  {
LABEL_16:
    v26 = v34;
LABEL_13:
    v24 = (v33 - 1) & v33;
    v25 = __clz(__rbit64(v33)) + (v26 << 6);
    goto LABEL_9;
  }
  while (1)
  {
    v26 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v26 >= v52)
    {
      v21 = v49;
      goto LABEL_27;
    }
    v33 = *(_QWORD *)(v51 + 8 * v26);
    ++v34;
    if (v33)
      goto LABEL_13;
  }
LABEL_42:
  __break(1u);
}

void sub_100B11450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *ObjCClassFromMetadata;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  double v10;
  unsigned int v11;
  id v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  __n128 v15;
  id aBlock[5];
  uint64_t v17;
  char v18;
  uint64_t v19;

  v18 = 1;
  v19 = 0;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2, a2);
  v6 = (_QWORD *)swift_allocObject(&unk_101294790, 48, 7);
  v6[2] = &v18;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = &v19;
  v7 = swift_allocObject(&unk_1012947B8, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100B2D8B8;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_1005B72B0;
  v17 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_1012947D0;
  v8 = _Block_copy(aBlock);
  v9 = v17;
  swift_retain(v7);
  *(_QWORD *)&v10 = swift_release(v9).n128_u64[0];
  aBlock[0] = 0;
  v11 = objc_msgSend(ObjCClassFromMetadata, "crl_catchExceptionsInBlock:error:", v8, aBlock, v10);
  _Block_release(v8);
  v12 = aBlock[0];
  v13 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 95, 20, 40, 1);
  swift_release(v7);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_10;
  if (!v11)
  {
    _convertNSErrorToError(_:)(v12);

    goto LABEL_6;
  }
  if (!v19)
  {
    if ((v18 & 1) == 0)
      goto LABEL_7;
    __break(1u);
LABEL_10:
    __break(1u);
  }
  swift_errorRetain(v19);
LABEL_6:
  swift_willThrow(v15);
  swift_errorRelease(v19);
LABEL_7:
  swift_release(v6);
}

_QWORD *sub_100B11638(_BYTE *a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _QWORD *result;
  uint64_t v4;

  result = a2(&v4);
  *a1 = 0;
  return result;
}

char *sub_100B1169C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  objc_class *v6;
  id v13;
  char *v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_100B2A698(a1, a2, a3, a4, a5, a6);

  swift_release(a2);
  swift_release(a3);
  swift_release(a4);

  return v14;
}

NSString sub_100B11734()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480B00 = (uint64_t)result;
  return result;
}

NSString sub_100B11768()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480B08 = (uint64_t)result;
  return result;
}

id sub_100B1179C(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DDAF0, (void **)&qword_101480B00, (void **)&qword_101480B10, (uint64_t)sub_100B11734);
}

id sub_100B117DC(uint64_t a1)
{
  return sub_1006487FC(a1, &qword_1013DDAF8, (void **)&qword_101480B08, (void **)&qword_101480B18, (uint64_t)sub_100B11768);
}

uint64_t sub_100B118E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[24];

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v13 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v32, 0, 0);
  sub_1004B8460(v13, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v12);
  v14 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v14);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v12);
  v15 = (uint64_t *)(*(_QWORD *)(v1 + v11) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain(v17);
  v18 = sub_10067AFD0((uint64_t)v7, v16, v17, (uint64_t)v10);
  v30 = UUID.uuidString.getter(v18);
  v31 = v19;
  swift_bridgeObjectRetain(v19);
  v20._countAndFlagsBits = 58;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21 = v30;
  v22 = v31;
  v23 = (uint64_t *)&v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  v24 = *v23;
  v25 = (void *)v23[1];
  v30 = v21;
  v31 = v22;
  swift_bridgeObjectRetain(v22);
  v26._countAndFlagsBits = v24;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27 = v30;
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  return v27;
}

Class sub_100B11B10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  Class isa;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + *a3) + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  type metadata accessor for UUID(0);
  type metadata accessor for CRLBoardItem(0);
  sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v3);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_100B11C00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27[24];
  uint64_t v28;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(char **)&v0[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v7 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v9 = v6;
  if (!v8)
  {
    sub_100740DA4();
    v8 = *(_QWORD *)&v6[v7];
  }
  if (v8)
    v10 = v8;
  else
    v10 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v8);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v22 = v10;
    else
      v22 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v23 = sub_1004B804C(&qword_1013E0670);
    v12 = _bridgeCocoaArray<A>(_:)(v22, v23);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = swift_bridgeObjectRetain(v10);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
    v12 = v10;
  }
  swift_bridgeObjectRelease(v10);
  v28 = v12;
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v14 = objc_msgSend(v13, "BOOLForKey:", CFSTR("CRLScenesDebugView"));

  if (v14)
  {
    v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v15, v27, 0, 0);
    v16 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15 + *(int *)(v16 + 36), v2);
    v17 = v1;
    v18 = (uint64_t)sub_10054B7E8((uint64_t)v5, (uint64_t)v17);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v24 = v18;
      else
        v24 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v25 = sub_1004B804C(&qword_1013E0670);
      v20 = _bridgeCocoaArray<A>(_:)(v24, v25);
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v19 = swift_bridgeObjectRetain(v18);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
      v20 = v18;
    }
    swift_bridgeObjectRelease(v18);
    sub_10061FE74(v20);
    return v28;
  }
  return v12;
}

uint64_t sub_100B11F00(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char *v45;
  _QWORD v46[3];
  _BYTE v47[24];
  uint64_t v48;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46[-1] - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v46[-1] - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v46[-1] - v20;
  sub_1004CB7BC(a1, (uint64_t)v47, &qword_1013E0230);
  if (!v48)
  {
    sub_1004CB800((uint64_t)v47, &qword_1013E0230);
    goto LABEL_9;
  }
  v22 = type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast(v46, v47, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
  {
LABEL_9:
    v43 = 0;
    return v43 & 1;
  }
  if ((char *)v46[0] == v2)
  {

    v43 = 1;
  }
  else
  {
    v45 = (char *)v46[0];
    v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v25 = v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v47, 0, 0);
    sub_1004B8460(v25, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v24);
    v26 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v26);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
    swift_release(v24);
    v27 = (uint64_t *)(*(_QWORD *)&v2[v23] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v28 = *v27;
    v29 = v27[1];
    swift_bridgeObjectRetain(v29);
    sub_10067AFD0((uint64_t)v9, v28, v29, (uint64_t)v21);
    v30 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v31 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v32 = v31 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v31 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v46, 0, 0);
    sub_1004B8460(v32, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v31);
    CRRegister.wrappedValue.getter(v26);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
    swift_release(v31);
    v33 = *(_QWORD *)&v45[v30];
    v34 = v45;
    v35 = (uint64_t *)(v33 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v36 = *v35;
    v37 = v35[1];
    swift_bridgeObjectRetain(v37);
    sub_10067AFD0((uint64_t)v9, v36, v37, (uint64_t)v18);
    LOBYTE(v36) = static UUID.== infix(_:_:)(v21);
    sub_1004B8460((uint64_t)v21, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460((uint64_t)v18, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    if ((v36 & 1) != 0)
    {
      v38 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v39 = *(_QWORD *)&v15[v38];
      v40 = *(_QWORD *)&v15[v38 + 8];
      v41 = &v12[v38];
      v42 = *((_QWORD *)v41 + 1);
      if (v39 == *(_QWORD *)v41 && v40 == v42)
        v43 = 1;
      else
        v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, *(_QWORD *)v41, v42, 0);
    }
    else
    {
      v43 = 0;
    }
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);

    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
  }
  return v43 & 1;
}

uint64_t sub_100B122DC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _BYTE v32[24];
  _QWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;

  v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v32[-v7];
  sub_1004CB7BC(a1, (uint64_t)v34, &qword_1013E0230);
  v9 = v35;
  if (v35)
  {
    v10 = sub_1004BB5A4(v34, v35);
    v11 = *(_QWORD *)(v9 - 8);
    v12 = __chkstk_darwin(v10);
    v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *, __n128))(v11 + 16))(v14, v12);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(v1, "isEqual:", v15);
  swift_unknownObjectRelease(v15);
  if (!v16)
    goto LABEL_12;
  sub_1004CB7BC(a1, (uint64_t)v34, &qword_1013E0230);
  if (!v35)
  {
    sub_1004CB800((uint64_t)v34, &qword_1013E0230);
    goto LABEL_12;
  }
  v17 = type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast(v33, v34, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
  {
LABEL_12:
    v30 = 0;
    return v30 & 1;
  }
  v18 = (char *)v33[0];
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v20 = *(_QWORD *)(v33[0] + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v21 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v33, 0, 0);
  sub_1004B8460(v21, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v22 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v32, 0, 0);
  sub_1004B8460(v22, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v19);
  swift_retain(v20);
  LOBYTE(v22) = sub_100DDAE78((uint64_t)v8, (uint64_t)v5);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_release(v19);
  swift_release(v20);
  if ((v22 & 1) == 0)
    goto LABEL_11;
  v23 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v24 = *(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v25 = sub_1004B804C(&qword_101405F58);
  v35 = v25;
  v34[0] = v24;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  sub_100B10F4C((uint64_t)v34, v23);
  LOBYTE(v24) = v26;
  swift_bridgeObjectRelease();
  sub_1004CB800((uint64_t)v34, &qword_1013E0230);
  if ((v24 & 1) == 0)
  {
LABEL_11:

    goto LABEL_12;
  }
  v27 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v28 = *(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v35 = v25;
  v34[0] = v28;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  sub_100B10F4C((uint64_t)v34, v27);
  v30 = v29;

  swift_bridgeObjectRelease();
  sub_1004CB800((uint64_t)v34, &qword_1013E0230);
  return v30 & 1;
}

Swift::Int sub_100B1267C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _OWORD v24[4];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()(v24);
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v13 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v23, 0, 0);
  sub_1004B8460(v13, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v12);
  v14 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v14);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v12);
  v15 = (uint64_t *)(*(_QWORD *)(v1 + v11) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain(v17);
  sub_10067AFD0((uint64_t)v7, v16, v17, (uint64_t)v10);
  v18 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v24, v5, v18);
  v19 = (uint64_t *)&v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(v21);
  String.hash(into:)(v24, v20, v21);
  swift_bridgeObjectRelease();
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  v28 = v24[2];
  v29 = v24[3];
  v30 = v25;
  v26 = v24[0];
  v27 = v24[1];
  return Hasher.finalize()();
}

double sub_100B12B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  char v15;
  uint64_t v16;
  __n128 v17;
  _QWORD v18[2];
  _QWORD v19[3];
  _BYTE v20[24];

  v3 = v2;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v10, v20, 0, 0);
  sub_1004B8460(v10, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v11 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v11);
  v13 = v19[0];
  v12 = v19[1];
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  if (v13 == a1 && v12 == a2)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v12, a1, a2, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    if ((v15 & 1) == 0)
    {
      v16 = *(_QWORD *)(v3 + v9);
      swift_beginAccess(v16 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v19, 33, 0);
      v18[0] = a1;
      v18[1] = a2;
      swift_retain(v16);
      v17 = swift_bridgeObjectRetain(a2);
      CRRegister.wrappedValue.setter(v18, v11, v17);
      swift_endAccess(v19);
      *(_QWORD *)&result = swift_release(v16).n128_u64[0];
    }
  }
  return result;
}

void sub_100B12D40(uint64_t a1, uint64_t a2, int a3, int a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  NSString v54;
  unsigned int v55;
  unint64_t v56;
  __n128 v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t inited;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  id v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void *v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  _QWORD *v158;
  void *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(_QWORD *, __n128);
  __n128 v165;
  void *v166;
  void *v167;
  unint64_t v168;
  _QWORD *v169;
  void *v170;
  unint64_t v171;
  _QWORD *v172;
  __n128 v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t);
  void *v206;
  _QWORD *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(_QWORD *, __n128);
  __n128 v212;
  void *v213;
  void *v214;
  unint64_t v215;
  _QWORD *v216;
  __n128 v217;
  void *v218;
  unint64_t v219;
  _QWORD *v220;
  __n128 v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(void);
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  BOOL v259;
  unint64_t v260;
  int64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void (*v265)(char *, uint64_t, uint64_t);
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(char *, uint64_t, uint64_t);
  id v278;
  uint64_t v279;
  void (*v280)(char *, id, uint64_t);
  char *v281;
  uint64_t v282;
  uint64_t v283;
  void (*v284)(id, uint64_t);
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t KeyPath;
  uint64_t v292;
  __n128 v293;
  void (*v294)(char *, uint64_t);
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  Class v306;
  _QWORD *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t ObjectType;
  uint64_t (*v320)(uint64_t, uint64_t);
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t v326;
  void (*v327)(_QWORD *, __n128);
  __n128 v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  void (*v335)(char *, uint64_t, uint64_t);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unsigned int (*v340)(uint64_t, uint64_t, uint64_t);
  void *v341;
  id v342;
  uint64_t v343;
  Class v344;
  id v345;
  void *v346;
  uint64_t v347;
  uint64_t v348;
  void (*v349)(char *, uint64_t);
  void *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t *v360;
  uint64_t v361;
  uint64_t v362;
  unint64_t v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  __n128 v374;
  uint64_t v375;
  void (*v376)(char *, uint64_t, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  _QWORD *v384;
  void *v385;
  char *v386;
  objc_class *v387;
  id v388;
  double v389;
  char *v390;
  uint64_t v391;
  void (*v392)(__n128);
  char *v393;
  __n128 v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  void (*v398)(char *, uint64_t);
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  _QWORD *v405;
  void *v406;
  char *v407;
  objc_class *v408;
  id v409;
  double v410;
  char *v411;
  uint64_t v412;
  uint64_t (*v413)(__n128);
  __n128 v414;
  void *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  unint64_t v423;
  uint64_t v424;
  uint64_t v425;
  __n128 v426;
  _QWORD *v427;
  char *v428;
  __n128 v429;
  unint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v440;
  unint64_t v441;
  void (*v442)(char *, uint64_t, uint64_t);
  __n128 v443;
  uint64_t v444;
  int64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  int64_t v451;
  unint64_t v452;
  unint64_t v453;
  uint64_t v454;
  unint64_t v455;
  int64_t v456;
  unint64_t v457;
  int64_t v458;
  __n128 v459;
  uint64_t v460;
  void (*v461)(char *, uint64_t);
  uint64_t v462;
  __n128 v463;
  uint64_t v464;
  uint64_t *v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  void *v471;
  _QWORD *v472;
  uint64_t v473;
  _QWORD *v474;
  uint64_t v475;
  id v476;
  void *v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char v482;
  char *v483;
  char *v484;
  uint64_t v485;
  void *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t (*v489)(void);
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  _QWORD *v496;
  id v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  __n128 v511;
  uint64_t v512;
  id v513;
  uint64_t v514;
  uint64_t v515;
  _QWORD *v516;
  void (*v517)(char *, uint64_t);
  unint64_t v518;
  unint64_t v519;
  uint64_t v520;
  unint64_t v521;
  uint64_t v522;
  uint64_t v523;
  Class isa;
  _QWORD *v525;
  void *v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  unint64_t v532;
  char *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  NSObject *v548;
  uint64_t v549;
  void *v550;
  uint64_t v551;
  uint64_t v552;
  _QWORD v553[2];
  double (*v554)(uint64_t, uint64_t);
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  __int128 v558;
  __int128 v559;
  uint64_t v560;
  uint64_t v561;
  int64_t v562;
  __int128 v563;
  uint64_t v564;
  uint64_t v565;
  unint64_t v566;
  _QWORD *v567;
  int64_t v568;
  uint64_t v569;
  uint64_t v570;
  _QWORD *v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  char *v575;
  void (*v576)(char *, uint64_t);
  uint64_t v577;
  void (*v578)(char *, uint64_t, uint64_t);
  uint64_t v579;
  uint64_t v580;
  void (*v581)(uint64_t, uint64_t);
  uint64_t v582;
  uint64_t *v583;
  uint64_t v584;
  uint64_t v585;
  double (*v586)(uint64_t, uint64_t);
  uint64_t v587;
  char *v588;
  uint64_t v589;
  char *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  char *v595;
  uint64_t v596;
  uint64_t v597;
  char *v598;
  uint64_t v599;
  uint64_t v600;
  char *v601;
  char *v602;
  uint64_t v603;
  uint64_t v604;
  char *v605;
  char *v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  char *v611;
  char *v612;
  __int128 v613;
  __int128 v614;
  uint64_t v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  _QWORD *v619;
  uint64_t v620;
  char *v621;
  char *v622;
  _QWORD *v623;
  uint64_t v624;
  char *v625;
  char *v626;
  int v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  objc_super v632;
  objc_super v633;
  void *v634;
  void *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  _OWORD v643[3];
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  uint64_t v674;
  uint64_t v675;
  char v676[24];
  _BYTE v677[40];
  _QWORD v678[4];
  char v679;

  LODWORD(v624) = a4;
  v627 = a3;
  v630 = a1;
  v7 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v7);
  v598 = (char *)&v556 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v10 = __chkstk_darwin(v9);
  v602 = (char *)&v556 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v594 = (uint64_t)&v556 - v13;
  __chkstk_darwin(v12);
  v597 = (uint64_t)&v556 - v14;
  v15 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v15);
  v600 = (uint64_t)&v556 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v596 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v596);
  v599 = (uint64_t)&v556 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C((uint64_t *)&unk_101405EA0);
  v19 = __chkstk_darwin(v18);
  v610 = (uint64_t)&v556 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v606 = (char *)&v556 - v21;
  v22 = sub_1004B804C(&qword_101403058);
  __chkstk_darwin(v22);
  v605 = (char *)&v556 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v615 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v604 = *(_QWORD *)(v615 - 8);
  __chkstk_darwin(v615);
  v609 = (uint64_t)&v556 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C((uint64_t *)&unk_101405EB0);
  v26 = __chkstk_darwin(v25);
  v611 = (char *)&v556 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v612 = (char *)&v556 - v28;
  v603 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  v591 = *(_QWORD *)(v603 - 8);
  __chkstk_darwin(v603);
  v590 = (char *)&v556 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v608 = sub_1004B804C(&qword_101405EC0);
  v589 = *(_QWORD *)(v608 - 8);
  __chkstk_darwin(v608);
  v607 = (char *)&v556 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v613 = sub_1004B804C((uint64_t *)&unk_101406AC0);
  v592 = *(_QWORD *)(v613 - 8);
  __chkstk_darwin(v613);
  *(_QWORD *)&v614 = (char *)&v556 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for CRLBoardIdentifier(0);
  v33 = __chkstk_darwin(v32);
  v593 = (uint64_t)&v556 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v617 = (uint64_t)&v556 - v36;
  v37 = __chkstk_darwin(v35);
  v623 = (uint64_t *)((char *)&v556 - v38);
  __chkstk_darwin(v37);
  v40 = (char *)&v556 - v39;
  v620 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v620);
  v42 = (char *)&v556 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v629 = type metadata accessor for UUID(0);
  v628 = *(_QWORD *)(v629 - 8);
  v43 = __chkstk_darwin(v629);
  v601 = (char *)&v556 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v43);
  v595 = (char *)&v556 - v46;
  v47 = __chkstk_darwin(v45);
  v616 = (char *)&v556 - v48;
  v49 = __chkstk_darwin(v47);
  v625 = (char *)&v556 - v50;
  v588 = v51;
  __chkstk_darwin(v49);
  v631 = (uint64_t)&v556 - v52;
  v53 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v53, "BOOLForKey:", v54);

  if (v55)
  {
    v56 = sub_100B2D600();
    swift_allocError(&type metadata for CRLBoard.CRLBoardError, v56, 0, 0);
    v57 = (__n128)xmmword_100F02070;
    *v58 = xmmword_100F02070;
LABEL_30:
    swift_willThrow(v57);
    return;
  }
  v626 = v42;
  v586 = (double (*)(uint64_t, uint64_t))a2;
  v622 = v4;
  v59 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  v585 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  v60 = *(_QWORD *)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
  if (*(_QWORD *)(v60 + 16)
    || *(_QWORD *)(*(_QWORD *)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16)
    || (v61 = v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds,
        swift_beginAccess(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, &v636, 0, 0), *(_QWORD *)(*(_QWORD *)v61 + 16)))
  {
    swift_bridgeObjectRetain(v60);
    sub_100B10074(v62);
    v64 = v63;
    swift_bridgeObjectRelease(v60);
    v65 = *(_QWORD *)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
    swift_bridgeObjectRetain(v65);
    sub_100B10074(v66);
    v68 = v67;
    v618 = v5;
    swift_bridgeObjectRelease(v65);
    if (qword_1013DD8B8 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, v676, 0, 0);
    v69 = (void *)static OS_os_log.boardItemLifecycle;
    v70 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v70, &v675);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v72 = sub_1004B804C(&qword_1013F0310);
    *(_QWORD *)(inited + 56) = v72;
    v73 = sub_1004CBA30(&qword_101405EC8, &qword_1013F0310, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(inited + 32) = v64;
    *(_QWORD *)(inited + 96) = v72;
    *(_QWORD *)(inited + 104) = v73;
    *(_QWORD *)(inited + 64) = v73;
    *(_QWORD *)(inited + 72) = v68;
    v74 = (uint64_t *)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
    swift_beginAccess(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds, &v674, 0, 0);
    v75 = *v74;
    *(_QWORD *)(inited + 136) = sub_1004B804C(&qword_101405ED0);
    *(_QWORD *)(inited + 144) = sub_1004CBA30(&qword_101405ED8, &qword_101405ED0, (uint64_t)&protocol conformance descriptor for Set<A>);
    *(_QWORD *)(inited + 112) = v75;
    v76 = v69;
    v619 = v68;
    swift_bridgeObjectRetain(v68);
    v77 = swift_bridgeObjectRetain(v75);
    v78 = static os_log_type_t.default.getter(v77);
    sub_100A06EBC((uint64_t)v76, &_mh_execute_header, v78, "🚖 mergeDatabaseChanges() hasSignificantChanges: pendingchanges, removedItemKeys: %{public}@, addedItemKeys: %{public}@, removedNewlyCreatedKeys: %{public}@", 158, 0, inited);
    swift_setDeallocating(inited);
    v79 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v79);

  }
  else
  {
    v618 = v5;
    v619 = _swiftEmptyArrayStorage;
  }
  v80 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  v81 = *(NSObject **)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  v82 = swift_allocObject(&unk_1012946D0, 32, 7);
  *(_QWORD *)(v82 + 16) = sub_100B2BB50;
  *(_QWORD *)(v82 + 24) = v59;
  *(_QWORD *)&v673 = sub_1005B72B0;
  *((_QWORD *)&v673 + 1) = v82;
  *(_QWORD *)&v671 = _NSConcreteStackBlock;
  *((_QWORD *)&v671 + 1) = *(_QWORD *)"";
  *(_QWORD *)&v672 = sub_100618D24;
  *((_QWORD *)&v672 + 1) = &unk_1012946E8;
  v83 = _Block_copy(&v671);
  v84 = *((_QWORD *)&v673 + 1);
  swift_retain(v59);
  swift_retain(v82);
  swift_release(v84);
  dispatch_sync(v81, v83);
  _Block_release(v83);
  LOBYTE(v81) = swift_isEscapingClosureAtFileLocation(v82, "", 89, 266, 26, 1);
  swift_release(v59);
  swift_release(v82);
  v85 = (uint64_t)v626;
  if ((v81 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v86 = (uint64_t *)(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
    swift_beginAccess(v59 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue, &v670, 0, 0);
    v82 = *v86;
    v87 = (unint64_t)*v86 >> 62;
    v583 = v86;
    v584 = v59;
    v582 = v80;
    if (!v87)
    {
      if (!*(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_13;
      goto LABEL_12;
    }
  }
  if (v82 < 0)
    v222 = v82;
  else
    v222 = v82 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v82);
  v223 = _CocoaArrayWrapper.endIndex.getter(v222);
  swift_bridgeObjectRelease(v82);
  if (v223)
  {
LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 272, "If we have unprocessed items while we're about to mergeDatabaseChanges() they might not be considered for created/undeleted pending items.", 138, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 272, (uint64_t)"If we have unprocessed items while we're about to mergeDatabaseChanges() they might not be considered for created/undeleted pending items.", 138, 2u);
  }
LABEL_13:
  if ((v627 & 1) != 0)
  {
    v621 = v40;
    if (qword_1013DD8B8 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v639, 0, 0);
    v88 = (void *)static OS_os_log.boardItemLifecycle;
    v89 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v90 = swift_initStackObject(v89, &v638);
    *(_OWORD *)(v90 + 16) = xmmword_100EF5E40;
    v91 = *(_QWORD *)&v622[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v92 = v91 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v91 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v637, 0, 0);
    sub_1004B8460(v92, v85, type metadata accessor for CRLBoardCRDTData);
    v93 = v88;
    swift_retain(v91);
    v94 = sub_1004B804C(&qword_1013E1A80);
    v95 = v631;
    CRRegister.wrappedValue.getter(v94);
    sub_1004B84A4(v85, type metadata accessor for CRLBoardCRDTData);
    swift_release(v91);
    v97 = UUID.uuidString.getter(v96);
    v99 = v98;
    (*(void (**)(uint64_t, uint64_t))(v628 + 8))(v95, v629);
    *(_QWORD *)(v90 + 56) = &type metadata for String;
    *(_QWORD *)(v90 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v90 + 32) = v97;
    *(_QWORD *)(v90 + 40) = v99;
    v101 = static os_log_type_t.default.getter(v100);
    sub_100A06EBC((uint64_t)v93, &_mh_execute_header, v101, "🚖 mergeDatabaseChanges() logs squelched. Board: %{public}@", 61, 0, v90);
    swift_setDeallocating(v90);
    v102 = *(_QWORD *)(v90 + 16);
    v103 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v90 + 32, v102, v103);

    v40 = v621;
  }
  v104 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v105 = v622;
  v106 = *(_QWORD *)&v622[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v107 = v106 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v106 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v669, 0, 0);
  sub_1004B8460(v107, v85, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v106);
  v108 = sub_1004B804C(&qword_1013E1A80);
  v109 = v631;
  v621 = (char *)v108;
  CRRegister.wrappedValue.getter(v108);
  sub_1004B84A4(v85, type metadata accessor for CRLBoardCRDTData);
  swift_release(v106);
  v587 = v104;
  v110 = (uint64_t *)(*(_QWORD *)&v105[v104] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v112 = *v110;
  v111 = v110[1];
  swift_bridgeObjectRetain(v111);
  sub_10067AFD0(v109, v112, v111, (uint64_t)v40);
  v113 = v630;
  swift_beginAccess(v630 + 16, &v668, 0, 0);
  v114 = *(_QWORD *)(v113 + 16);
  swift_bridgeObjectRetain(v114);
  sub_10061868C((uint64_t)v40, v114, (uint64_t)v677);
  swift_bridgeObjectRelease(v114);
  sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLBoardIdentifier);
  sub_1004C4938((uint64_t)v677, (uint64_t)v678, &qword_101405EE0);
  v115 = v678[0];
  if (v678[0])
  {
    v116 = v678[1];
    v117 = v678[2];
    v118 = v105;
    v119 = (void *)v678[3];
    v120 = v679;
    v121 = sub_1004B8930(0, &qword_101405F28, NSException_ptr);
    __chkstk_darwin(v121);
    *(&v556 - 8) = v115;
    *(&v556 - 7) = v116;
    *(&v556 - 6) = v117;
    *(&v556 - 5) = (uint64_t)v119;
    LOBYTE(v553[0]) = v120;
    v553[1] = v118;
    v554 = v586;
    LOBYTE(v555) = v624;
    v122 = v618;
    sub_100B11450((uint64_t)sub_100B2D868, (uint64_t)(&v556 - 10));
    if (v122)
    {
      swift_bridgeObjectRelease(v619);
      swift_release(v117);
      swift_release(v116);
      swift_release(v115);

      return;
    }
    swift_release(v117);
    swift_release(v116);
    swift_release(v115);

    v105 = v118;
    v85 = (uint64_t)v626;
    v123 = 0;
  }
  else
  {
    v123 = v618;
  }
  v635 = &_swiftEmptySetSingleton;
  v124 = v587;
  v125 = *(_QWORD *)&v105[v587];
  v126 = v125 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v125 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v667, 0, 0);
  sub_1004B8460(v126, v85, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v125);
  v127 = (uint64_t)v625;
  CRRegister.wrappedValue.getter(v621);
  sub_1004B84A4(v85, type metadata accessor for CRLBoardCRDTData);
  swift_release(v125);
  v128 = v631;
  sub_100AD569C(v631, v127);
  v581 = *(void (**)(uint64_t, uint64_t))(v628 + 8);
  v581(v128, v629);
  v129 = v584;
  v130 = *(_QWORD *)(v584 + v585);
  swift_bridgeObjectRetain(v130);
  v131 = sub_100B104CC((void (*)(uint64_t))sub_1005F0D8C, 0, v130);
  v618 = v123;
  v132 = sub_100AF7994(v131);
  swift_bridgeObjectRelease(v130);
  swift_bridgeObjectRelease(v131);
  v133 = (_QWORD *)(v129 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds);
  v134 = (uint64_t)v626;
  swift_beginAccess(v129 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds, &v666, 0, 0);
  swift_bridgeObjectRetain(*v133);
  v136 = sub_100CA03B4(v135, v132);
  v137 = *(_QWORD *)&v105[v124];
  v138 = v137 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v137 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v665, 0, 0);
  sub_1004B8460(v138, v134, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v137);
  CRRegister.wrappedValue.getter(v621);
  sub_1004B84A4(v134, type metadata accessor for CRLBoardCRDTData);
  swift_release(v137);
  v139 = (uint64_t *)(*(_QWORD *)&v105[v124] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v141 = *v139;
  v140 = v139[1];
  swift_bridgeObjectRetain(v140);
  v142 = (uint64_t)v623;
  sub_10067AFD0(v128, v141, v140, (uint64_t)v623);
  v143 = v630;
  swift_beginAccess(v630 + 24, &v664, 0, 0);
  v144 = *(_QWORD *)(v143 + 24);
  v145 = v619;
  if (!*(_QWORD *)(v144 + 16))
    goto LABEL_29;
  swift_bridgeObjectRetain(v144);
  v146 = sub_100843264(v142);
  if ((v147 & 1) == 0)
  {
    swift_bridgeObjectRelease(v144);
LABEL_29:
    sub_1004B84A4(v142, type metadata accessor for CRLBoardIdentifier);
    v167 = v635;
    swift_bridgeObjectRelease(v136);
    swift_bridgeObjectRelease(v145);
    swift_bridgeObjectRelease(v167);
    v168 = sub_100B2D600();
    swift_allocError(&type metadata for CRLBoard.CRLBoardError, v168, 0, 0);
    *v169 = 0;
    v169[1] = 0;
    goto LABEL_30;
  }
  v585 = v136;
  v148 = *(_QWORD *)(*(_QWORD *)(v144 + 56) + 8 * v146);
  swift_retain(v148);
  swift_bridgeObjectRelease(v144);
  sub_1004B84A4(v142, type metadata accessor for CRLBoardIdentifier);
  v149 = *(_QWORD *)&v105[v587] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v149, &v663, 0, 0);
  v150 = v105;
  sub_1004B8460(v149, v134, type metadata accessor for CRLBoardCRDTData);
  v151 = v631;
  CRRegister.wrappedValue.getter(v621);
  v152 = sub_1004B84A4(v134, type metadata accessor for CRLBoardCRDTData);
  v153 = v625;
  (*(void (**)(uint64_t))(**(_QWORD **)(v148 + 16) + 256))(v152);
  LOBYTE(v149) = static UUID.== infix(_:_:)(v151);
  v154 = v153;
  v155 = v629;
  v156 = v581;
  v581((uint64_t)v154, v629);
  v156(v151, v155);
  if ((v149 & 1) == 0)
  {
    v170 = v635;
    swift_bridgeObjectRelease(v585);
    swift_bridgeObjectRelease(v619);
    swift_bridgeObjectRelease(v170);
    v171 = sub_100B2D600();
    swift_allocError(&type metadata for CRLBoard.CRLBoardError, v171, 0, 0);
    *v172 = 0xD000000000000023;
    v172[1] = 0x8000000100FF7510;
    swift_willThrow(v173);
LABEL_32:
    swift_release(v148);
    return;
  }
  v157 = v134;
  v158 = *(_QWORD **)(v148 + 16);
  v159 = *(void **)&v150[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  swift_retain(v158);
  v160 = v159;
  v161 = (uint64_t)v586;
  v162 = v618;
  sub_100DBEE64((uint64_t)v160, (uint64_t)&off_10127C5E0);
  if (v162)
  {
    v166 = v635;
    swift_release(v148);
    swift_release(v158);
    swift_bridgeObjectRelease(v585);

    swift_bridgeObjectRelease(v619);
    swift_bridgeObjectRelease(v166);
    return;
  }
  v163 = *(_QWORD *)&v160[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v164 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v163 + 432);
  v165 = swift_retain(v163);
  v164(v158, v165);
  (*(void (**)(_QWORD *))(*(_QWORD *)v163 + 424))(v158);
  sub_1005DAB90(v158[3], v158[4], v158[5], v158[2]);
  swift_release(v163);
  sub_100DB0D78((uint64_t)v160, (uint64_t)&off_10127C5E0, v624);

  v174 = (uint64_t)v625;
  (*(void (**)(void))(*v158 + 256))();
  swift_beginAccess(&v635, &v671, 33, 0);
  v623 = v158;
  v175 = v156;
  v176 = v631;
  sub_100AD569C(v631, v174);
  swift_endAccess(&v671);
  v175(v176, v629);
  v177 = v585;
  sub_100B16A08(v148, (uint64_t)&v635, v585, v627 & 1, (uint64_t)v622, v161, v624);
  v618 = 0;
  v178 = v161;
  v580 = v148;
  v179 = v587;
  v180 = *(_QWORD *)&v622[v587];
  v181 = v180 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v180 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v662, 0, 0);
  sub_1004B8460(v181, v157, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v180);
  CRRegister.wrappedValue.getter(v621);
  sub_1004B84A4(v157, type metadata accessor for CRLBoardCRDTData);
  v182 = v180;
  v183 = v622;
  swift_release(v182);
  v184 = v580;
  v185 = (uint64_t *)(*(_QWORD *)&v183[v179] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v187 = *v185;
  v186 = v185[1];
  swift_bridgeObjectRetain(v186);
  v188 = v617;
  sub_10067AFD0(v176, v187, v186, v617);
  v189 = v630;
  swift_beginAccess(v630 + 32, &v661, 0, 0);
  v190 = *(_QWORD *)(v189 + 32);
  v191 = (uint64_t)v623;
  if (!*(_QWORD *)(v190 + 16))
  {
LABEL_41:
    sub_1004B84A4(v188, type metadata accessor for CRLBoardIdentifier);
    v214 = v635;
    swift_bridgeObjectRelease(v177);
    swift_bridgeObjectRelease(v619);
    swift_bridgeObjectRelease(v214);
    v215 = sub_100B2D600();
    swift_allocError(&type metadata for CRLBoard.CRLBoardError, v215, 0, 0);
    *v216 = 0;
    v216[1] = 0;
    swift_willThrow(v217);
    swift_release(v184);
    swift_release(v191);
    return;
  }
  swift_bridgeObjectRetain(v190);
  v192 = sub_100843264(v188);
  if ((v193 & 1) == 0)
  {
    swift_bridgeObjectRelease(v190);
    goto LABEL_41;
  }
  v194 = *(_QWORD *)(*(_QWORD *)(v190 + 56) + 8 * v192);
  swift_retain(v194);
  swift_bridgeObjectRelease(v190);
  v195 = v188;
  v148 = v194;
  sub_1004B84A4(v195, type metadata accessor for CRLBoardIdentifier);
  v196 = *(_QWORD *)&v183[v587] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v196, &v660, 0, 0);
  v197 = v183;
  sub_1004B8460(v196, v157, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
  v198 = v631;
  CRRegister.wrappedValue.getter(v621);
  v199 = v157;
  v200 = v198;
  v201 = sub_1004B84A4(v199, type metadata accessor for CRLBoardCRDTData);
  v202 = v625;
  (*(void (**)(uint64_t))(**(_QWORD **)(v148 + 16) + 256))(v201);
  LOBYTE(v196) = static UUID.== infix(_:_:)(v198);
  v203 = v202;
  v204 = v629;
  v205 = v581;
  v581((uint64_t)v203, v629);
  v205(v200, v204);
  if ((v196 & 1) == 0)
  {
    v218 = v635;
    swift_bridgeObjectRelease(v585);
    swift_bridgeObjectRelease(v619);
    swift_bridgeObjectRelease(v218);
    v219 = sub_100B2D600();
    swift_allocError(&type metadata for CRLBoard.CRLBoardError, v219, 0, 0);
    *v220 = 0xD00000000000003CLL;
    v220[1] = 0x8000000100FF7540;
    swift_willThrow(v221);
    swift_release(v184);
    swift_release(v623);
    goto LABEL_32;
  }
  v206 = *(void **)&v197[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer];
  v207 = *(_QWORD **)(v148 + 16);
  swift_retain(v207);
  v208 = v206;
  v209 = v618;
  sub_100DBEE64((uint64_t)v208, (uint64_t)&off_10127C5E0);
  v579 = v148;
  if (v209)
  {
    v213 = v635;
    swift_release(v184);
    swift_release(v623);
    swift_release(v579);
    swift_release(v207);
    swift_bridgeObjectRelease(v585);

    swift_bridgeObjectRelease(v619);
    swift_bridgeObjectRelease(v213);
    return;
  }
  v210 = *(_QWORD *)&v208[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v211 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v210 + 432);
  v212 = swift_retain(v210);
  v211(v207, v212);
  (*(void (**)(_QWORD *))(*(_QWORD *)v210 + 424))(v207);
  sub_1005DAB90(v207[3], v207[4], v207[5], v207[2]);
  swift_release(v210);
  sub_100DB0D78((uint64_t)v208, (uint64_t)&off_10127C5E0, v624);

  v224 = *(void (**)(void))(*v207 + 256);
  v225 = (uint64_t)v625;
  v567 = v207;
  v224();
  swift_beginAccess(&v635, &v671, 33, 0);
  sub_100AD569C(v200, v225);
  swift_endAccess(&v671);
  v205(v200, v629);
  sub_100B16A08(v579, (uint64_t)&v635, v585, v627 & 1, (uint64_t)v622, v178, v624);
  v618 = 0;
  v634 = &_swiftEmptySetSingleton;
  v226 = v622;
  v227 = v587;
  v228 = *(_QWORD *)&v622[v587];
  v229 = v228 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v228 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v659, 0, 0);
  v230 = v229;
  v231 = (uint64_t)v626;
  sub_1004B8460(v230, (uint64_t)v626, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v228);
  v232 = v631;
  CRRegister.wrappedValue.getter(v621);
  sub_1004B84A4(v231, type metadata accessor for CRLBoardCRDTData);
  swift_release(v228);
  v233 = (uint64_t *)(*(_QWORD *)&v226[v227] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v235 = *v233;
  v234 = v233[1];
  swift_bridgeObjectRetain(v234);
  sub_10067AFD0(v232, v235, v234, v593);
  v236 = v630;
  swift_beginAccess(v630 + 40, &v658, 0, 0);
  v237 = *(_QWORD *)(v236 + 40);
  if (!*(_QWORD *)(v237 + 16))
    goto LABEL_126;
  swift_bridgeObjectRetain(v237);
  v238 = sub_100843264(v593);
  if ((v239 & 1) == 0)
  {
    swift_bridgeObjectRelease(v237);
LABEL_126:
    sub_1004B84A4(v593, type metadata accessor for CRLBoardIdentifier);
    swift_bridgeObjectRelease(v585);
    goto LABEL_127;
  }
  v240 = *(_QWORD *)(*(_QWORD *)(v237 + 56) + 8 * v238);
  swift_retain(v240);
  swift_bridgeObjectRelease(v237);
  sub_1004B84A4(v593, type metadata accessor for CRLBoardIdentifier);
  v241 = *(_QWORD *)&v622[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager];
  v242 = *(_QWORD *)(v241 + 16);
  v243 = swift_beginAccess(v240 + 16, &v649, 0, 0);
  v560 = v240;
  v244 = *(_QWORD *)(v240 + 16);
  __chkstk_darwin(v243);
  v554 = sub_100B2D654;
  v555 = v242;
  swift_retain(v242);
  swift_bridgeObjectRetain(v244);
  v245 = v618;
  sub_100D6E7BC((void (*)(_QWORD *, __n128))sub_100B2D65C, (uint64_t)v553, v244);
  swift_release(v242);
  swift_bridgeObjectRelease(v244);
  v557 = v241;
  v246 = *(_QWORD *)(v241 + 16);
  *(_QWORD *)&v671 = &_swiftEmptyDictionarySingleton;
  v247 = swift_beginAccess(v246 + 16, &v648, 0, 0);
  v248 = *(_QWORD *)(v246 + 16);
  v249 = __chkstk_darwin(v247);
  __chkstk_darwin(v249);
  v554 = sub_100B2D674;
  v555 = v250;
  swift_retain(v246);
  swift_bridgeObjectRetain(v248);
  sub_100D6E7BC((void (*)(_QWORD *, __n128))sub_100B2D944, (uint64_t)v553, v248);
  swift_release(v246);
  swift_bridgeObjectRelease(v248);
  v251 = v671;
  sub_100B2A0A0((void (*)(uint64_t *__return_ptr, uint64_t *, __n128))sub_100A2A270, 0, v671);
  v253 = v252;
  v618 = v245;
  swift_bridgeObjectRelease(v251);
  v568 = 0;
  v254 = *(_QWORD *)(v253 + 64);
  v561 = v253 + 64;
  v255 = 1 << *(_BYTE *)(v253 + 32);
  v256 = -1;
  if (v255 < 64)
    v256 = ~(-1 << v255);
  v566 = v256 & v254;
  v564 = v253;
  v565 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  v562 = (unint64_t)(v255 + 63) >> 6;
  v575 = v588 + 32;
  v563 = xmmword_100EF5550;
  v559 = xmmword_100EEF400;
  v558 = xmmword_100EF5E40;
LABEL_55:
  if (!v566)
  {
    v259 = __OFADD__(v568++, 1);
    if (v259)
      goto LABEL_216;
    if (v568 < v562)
    {
      v260 = *(_QWORD *)(v561 + 8 * v568);
      if (v260)
      {
LABEL_67:
        v566 = (v260 - 1) & v260;
        v258 = __clz(__rbit64(v260)) + (v568 << 6);
        goto LABEL_68;
      }
      v261 = v568 + 1;
      if (v568 + 1 < v562)
      {
        v260 = *(_QWORD *)(v561 + 8 * v261);
        if (v260)
          goto LABEL_66;
        v261 = v568 + 2;
        if (v568 + 2 >= v562)
          goto LABEL_139;
        v260 = *(_QWORD *)(v561 + 8 * v261);
        if (v260)
        {
LABEL_66:
          v568 = v261;
          goto LABEL_67;
        }
        v261 = v568 + 3;
        if (v568 + 3 < v562)
        {
          v260 = *(_QWORD *)(v561 + 8 * v261);
          if (v260)
            goto LABEL_66;
          while (1)
          {
            v568 = v261 + 1;
            if (__OFADD__(v261, 1))
              goto LABEL_218;
            if (v568 >= v562)
              break;
            v260 = *(_QWORD *)(v561 + 8 * v568);
            ++v261;
            if (v260)
              goto LABEL_67;
          }
        }
      }
    }
LABEL_139:
    swift_bridgeObjectRelease(v585);
    swift_release(v564);
    v444 = *(_QWORD *)(v557 + 16);
    swift_beginAccess(v444 + 16, &v640, 0, 0);
    v445 = 0;
    v446 = *(_QWORD *)(v444 + 16);
    v447 = v446 + 64;
    v448 = 1 << *(_BYTE *)(v446 + 32);
    v449 = -1;
    if (v448 < 64)
      v449 = ~(-1 << v448);
    v450 = v449 & *(_QWORD *)(v446 + 64);
    v451 = (unint64_t)(v448 + 63) >> 6;
    while (1)
    {
      if (v450)
      {
        v452 = __clz(__rbit64(v450));
        v450 &= v450 - 1;
        v453 = v452 | (v445 << 6);
      }
      else
      {
        v259 = __OFADD__(v445++, 1);
        if (v259)
          goto LABEL_215;
        if (v445 >= v451)
          goto LABEL_162;
        v455 = *(_QWORD *)(v447 + 8 * v445);
        if (!v455)
        {
          v456 = v445 + 1;
          if (v445 + 1 >= v451)
            goto LABEL_162;
          v455 = *(_QWORD *)(v447 + 8 * v456);
          if (v455)
            goto LABEL_154;
          v456 = v445 + 2;
          if (v445 + 2 >= v451)
            goto LABEL_162;
          v455 = *(_QWORD *)(v447 + 8 * v456);
          if (v455)
            goto LABEL_154;
          v456 = v445 + 3;
          if (v445 + 3 >= v451)
            goto LABEL_162;
          v455 = *(_QWORD *)(v447 + 8 * v456);
          if (v455)
          {
LABEL_154:
            v445 = v456;
          }
          else
          {
            v458 = v445 + 4;
            if (v445 + 4 >= v451)
              goto LABEL_162;
            v455 = *(_QWORD *)(v447 + 8 * v458);
            v445 += 4;
            if (!v455)
            {
              while (1)
              {
                v445 = v458 + 1;
                if (__OFADD__(v458, 1))
                  goto LABEL_219;
                if (v445 >= v451)
                  break;
                v455 = *(_QWORD *)(v447 + 8 * v445);
                ++v458;
                if (v455)
                  goto LABEL_155;
              }
LABEL_162:
              swift_release(v560);
LABEL_127:
              v427 = v619;
              v630 = sub_100AF7994((uint64_t)v619);
              swift_bridgeObjectRelease(v427);
              v428 = &v622[OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap];
              swift_beginAccess(&v622[OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap], v643, 0, 0);
              v429 = swift_bridgeObjectRetain(*(_QWORD *)v428);
              v624 = sub_100A651C8(v429);
              v430 = sub_1008D5420((uint64_t)_swiftEmptyArrayStorage);
              v431 = *v583;
              if ((unint64_t)*v583 >> 62)
              {
                if (v431 < 0)
                  v462 = *v583;
                else
                  v462 = v431 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(*v583);
                v432 = _CocoaArrayWrapper.endIndex.getter(v462);
                if (v432)
                  goto LABEL_129;
              }
              else
              {
                v432 = *(_QWORD *)((v431 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain(*v583);
                if (v432)
                {
LABEL_129:
                  if (v432 < 1)
                    goto LABEL_217;
                  v433 = 0;
                  do
                  {
                    if ((v431 & 0xC000000000000001) != 0)
                    {
                      v434 = specialized _ArrayBuffer._getElementSlowPath(_:)(v433, v431);
                    }
                    else
                    {
                      v434 = *(_QWORD *)(v431 + 8 * v433 + 32);
                      swift_retain(v434);
                    }
                    v435 = (uint64_t *)(v434 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
                    swift_beginAccess(v434 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects, &v657, 0, 0);
                    v436 = *v435;
                    swift_bridgeObjectRetain(v436);
                    v438 = sub_1005FA3C0(v437);
                    swift_bridgeObjectRelease(v436);
                    swift_bridgeObjectRetain(v430);
                    swift_bridgeObjectRetain(v438);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v430);
                    *(_QWORD *)&v671 = v430;
                    v440 = v618;
                    sub_100B29C14(v438, (uint64_t)sub_100B29BA0, 0, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *, __n128))sub_100B2A2C8, 0);
                    v618 = v440;
                    if (v440)
                      goto LABEL_220;
                    ++v433;
                    v441 = v671;
                    swift_bridgeObjectRelease(0x8000000000000000);
                    swift_bridgeObjectRelease(v430);
                    swift_release(v434);
                    swift_bridgeObjectRelease(v438);
                    v430 = v441;
                  }
                  while (v432 != v433);
                }
              }
              v463 = swift_bridgeObjectRelease(v431);
              v464 = sub_100A651C8(v463);
              v465 = (uint64_t *)(v584 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
              swift_beginAccess(v584 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas, &v656, 0, 0);
              v466 = *v465;
              swift_bridgeObjectRetain(v466);
              v467 = v618;
              v468 = sub_100B104CC((void (*)(uint64_t))sub_1005F0D8C, 0, v466);
              v618 = v467;
              v469 = sub_100AF7994(v468);
              swift_bridgeObjectRelease(v466);
              swift_bridgeObjectRelease(v468);
              v470 = sub_100CA03B4(v469, v464);
              v471 = v635;
              if (*((_QWORD *)v635 + 2) <= *(_QWORD *)(v624 + 16) >> 3)
              {
                *(_QWORD *)&v671 = v624;
                sub_100DB6134((uint64_t)v635);
                swift_bridgeObjectRelease(v471);
                v472 = (_QWORD *)v671;
              }
              else
              {
                v472 = sub_100DB730C((uint64_t)v635, v624);
                swift_bridgeObjectRelease(v471);
              }
              if (*(_QWORD *)(v630 + 16) <= v472[2] >> 3)
              {
                *(_QWORD *)&v671 = v472;
                v475 = v630;
                sub_100DB6134(v630);
                swift_bridgeObjectRelease(v475);
                v474 = (_QWORD *)v671;
              }
              else
              {
                v473 = v630;
                v474 = sub_100DB730C(v630, (uint64_t)v472);
                swift_bridgeObjectRelease(v473);
              }
              if (*(_QWORD *)(v470 + 16) <= v474[2] >> 3)
              {
                *(_QWORD *)&v671 = v474;
                sub_100DB6134(v470);
                swift_bridgeObjectRelease(v470);
                v620 = v671;
              }
              else
              {
                v620 = (uint64_t)sub_100DB730C(v470, (uint64_t)v474);
                swift_bridgeObjectRelease(v470);
              }
              v476 = v622;
              v477 = v634;
              sub_100A29D28((uint64_t)v634);
              swift_bridgeObjectRelease(v477);
              v478 = 0;
              v479 = *(_QWORD *)(v620 + 56);
              v617 = v620 + 56;
              v480 = 1 << *(_BYTE *)(v620 + 32);
              v481 = -1;
              if (v480 < 64)
                v481 = ~(-1 << v480);
              v630 = v481 & v479;
              v619 = (_QWORD *)((unint64_t)(v480 + 63) >> 6);
              v613 = xmmword_100EF5A10;
              v614 = xmmword_100EF5550;
              v482 = v627;
              v484 = v601;
              v483 = v602;
              v485 = v628;
              while (2)
              {
                if (v630)
                {
                  v518 = __clz(__rbit64(v630));
                  v630 &= v630 - 1;
                  v519 = v518 | (v478 << 6);
                }
                else
                {
                  v520 = v478 + 1;
                  if (__OFADD__(v478, 1))
                  {
                    __break(1u);
                    goto LABEL_213;
                  }
                  if (v520 >= (uint64_t)v619)
                    goto LABEL_209;
                  v521 = *(_QWORD *)(v617 + 8 * v520);
                  ++v478;
                  if (!v521)
                  {
                    v478 = v520 + 1;
                    if (v520 + 1 >= (uint64_t)v619)
                      goto LABEL_209;
                    v521 = *(_QWORD *)(v617 + 8 * v478);
                    if (!v521)
                    {
                      v478 = v520 + 2;
                      if (v520 + 2 >= (uint64_t)v619)
                        goto LABEL_209;
                      v521 = *(_QWORD *)(v617 + 8 * v478);
                      if (!v521)
                      {
                        v522 = v520 + 3;
                        if (v522 >= (uint64_t)v619)
                        {
LABEL_209:
                          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v628 + 56))(v602, 1, 1, v629);
LABEL_210:
                          swift_release(v620);
                          v547 = v584;
                          v548 = *(NSObject **)(v584 + v582);
                          v549 = swift_allocObject(&unk_101294720, 32, 7);
                          *(_QWORD *)(v549 + 16) = sub_100B2BD10;
                          *(_QWORD *)(v549 + 24) = v547;
                          *(_QWORD *)&v673 = sub_1005B72B0;
                          *((_QWORD *)&v673 + 1) = v549;
                          *(_QWORD *)&v671 = _NSConcreteStackBlock;
                          *((_QWORD *)&v671 + 1) = *(_QWORD *)"";
                          *(_QWORD *)&v672 = sub_100618D24;
                          *((_QWORD *)&v672 + 1) = &unk_101294738;
                          v550 = _Block_copy(&v671);
                          v551 = *((_QWORD *)&v673 + 1);
                          swift_retain(v547);
                          swift_retain(v549);
                          swift_release(v551);
                          dispatch_sync(v548, v550);
                          _Block_release(v550);
                          LOBYTE(v548) = swift_isEscapingClosureAtFileLocation(v549, "", 89, 273, 26, 1);
                          swift_release(v580);
                          swift_release(v623);
                          swift_release(v579);
                          swift_release(v567);
                          swift_release(v547);
                          swift_release(v549);
                          if ((v548 & 1) == 0)
                            return;
                          goto LABEL_214;
                        }
                        v521 = *(_QWORD *)(v617 + 8 * v522);
                        if (!v521)
                        {
                          while (1)
                          {
                            v478 = v522 + 1;
                            if (__OFADD__(v522, 1))
                              break;
                            if (v478 >= (uint64_t)v619)
                              goto LABEL_209;
                            v521 = *(_QWORD *)(v617 + 8 * v478);
                            ++v522;
                            if (v521)
                              goto LABEL_199;
                          }
LABEL_213:
                          __break(1u);
LABEL_214:
                          __break(1u);
LABEL_215:
                          __break(1u);
LABEL_216:
                          __break(1u);
LABEL_217:
                          __break(1u);
LABEL_218:
                          __break(1u);
LABEL_219:
                          __break(1u);
LABEL_220:
                          v552 = v671;
                          swift_bridgeObjectRelease(0x8000000000000000);
                          swift_bridgeObjectRelease(v552);
                          __break(1u);
                          return;
                        }
                        v478 = v522;
                      }
                    }
                  }
LABEL_199:
                  v630 = (v521 - 1) & v521;
                  v519 = __clz(__rbit64(v521)) + (v478 << 6);
                  v476 = v622;
                  v482 = v627;
                  v484 = v601;
                  v483 = v602;
                  v485 = v628;
                }
                v523 = v629;
                (*(void (**)(char *, unint64_t, uint64_t))(v485 + 16))(v483, *(_QWORD *)(v620 + 48) + *(_QWORD *)(v485 + 72) * v519, v629);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v485 + 56))(v483, 0, 1, v523);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v485 + 48))(v483, 1, v523) == 1)
                  goto LABEL_210;
                (*(void (**)(char *, char *, uint64_t))(v485 + 32))(v484, v483, v523);
                isa = UUID._bridgeToObjectiveC()().super.isa;
                v525 = objc_msgSend(v476, "getBoardItemForUUID:", isa);

                if (v525)
                {
                  v624 = v478;
                  if ((v482 & 1) == 0)
                  {
                    if (qword_1013DD8B8 != -1)
                      swift_once(&qword_1013DD8B8, sub_100A06704);
                    swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v652, 0, 0);
                    v486 = (void *)static OS_os_log.boardItemLifecycle;
                    v487 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                    v488 = swift_initStackObject(v487, &v651);
                    *(_OWORD *)(v488 + 16) = v614;
                    v489 = *(uint64_t (**)(void))((swift_isaMask & *v525) + 0x88);
                    v616 = v486;
                    v490 = v631;
                    v491 = v489();
                    v492 = UUID.uuidString.getter(v491);
                    v494 = v493;
                    v581(v490, v629);
                    *(_QWORD *)(v488 + 56) = &type metadata for String;
                    v495 = sub_1004CFC2C();
                    *(_QWORD *)(v488 + 64) = v495;
                    *(_QWORD *)(v488 + 32) = v492;
                    v615 = v488 + 32;
                    *(_QWORD *)(v488 + 40) = v494;
                    v496 = v525;
                    v497 = objc_msgSend(v496, "description");
                    v498 = static String._unconditionallyBridgeFromObjectiveC(_:)(v497);
                    v500 = v499;

                    *(_QWORD *)(v488 + 96) = &type metadata for String;
                    *(_QWORD *)(v488 + 104) = v495;
                    *(_QWORD *)(v488 + 72) = v498;
                    *(_QWORD *)(v488 + 80) = v500;
                    v501 = v622;
                    v502 = *(_QWORD *)&v622[v587];
                    v503 = v502 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                    swift_beginAccess(v502 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v650, 0, 0);
                    v504 = v503;
                    v505 = (uint64_t)v626;
                    sub_1004B8460(v504, (uint64_t)v626, type metadata accessor for CRLBoardCRDTData);
                    swift_retain(v502);
                    v506 = v625;
                    CRRegister.wrappedValue.getter(v621);
                    sub_1004B84A4(v505, type metadata accessor for CRLBoardCRDTData);
                    swift_release(v502);
                    v508 = UUID.uuidString.getter(v507);
                    v510 = v509;
                    v511.n128_f64[0] = ((double (*)(char *, uint64_t))v581)(v506, v629);
                    *(_QWORD *)(v488 + 136) = &type metadata for String;
                    *(_QWORD *)(v488 + 144) = v495;
                    *(_QWORD *)(v488 + 112) = v508;
                    *(_QWORD *)(v488 + 120) = v510;
                    v476 = v501;
                    v512 = static os_log_type_t.default.getter(v511);
                    v513 = v616;
                    sub_100A06EBC((uint64_t)v616, &_mh_execute_header, v512, "🚖 ⭕ mergeDatabaseChanges() deleted %{public}@%{public}@. Board: %{public}@", 79, 0, v488);
                    swift_setDeallocating(v488);
                    v514 = *(_QWORD *)(v488 + 16);
                    v515 = sub_1004B804C(&qword_1013E0190);
                    swift_arrayDestroy(v615, v514, v515);

                    v482 = v627;
                    v484 = v601;
                    v483 = v602;
                    v485 = v628;
                  }
                  v516 = v525;
                  sub_100DBC500(v516, 0, 0, (uint64_t)v586);

                  goto LABEL_182;
                }
                v517 = (void (*)(char *, uint64_t))v581;
                if ((v482 & 1) == 0)
                {
                  v624 = v478;
                  if (qword_1013DD8B8 != -1)
                    swift_once(&qword_1013DD8B8, sub_100A06704);
                  swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v655, 0, 0);
                  v526 = (void *)static OS_os_log.boardItemLifecycle;
                  v527 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                  v528 = swift_initStackObject(v527, &v654);
                  *(_OWORD *)(v528 + 16) = v613;
                  v516 = v526;
                  v484 = v601;
                  v529 = UUID.uuidString.getter(v516);
                  v531 = v530;
                  *(_QWORD *)(v528 + 56) = &type metadata for String;
                  v532 = sub_1004CFC2C();
                  *(_QWORD *)(v528 + 32) = v529;
                  v616 = (char *)(v528 + 32);
                  *(_QWORD *)(v528 + 64) = v532;
                  *(_QWORD *)(v528 + 40) = v531;
                  v533 = v622;
                  v534 = *(_QWORD *)&v622[v587];
                  v535 = v534 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                  swift_beginAccess(v534 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v653, 0, 0);
                  v536 = v535;
                  v537 = (uint64_t)v626;
                  sub_1004B8460(v536, (uint64_t)v626, type metadata accessor for CRLBoardCRDTData);
                  swift_retain(v534);
                  v538 = v631;
                  CRRegister.wrappedValue.getter(v621);
                  sub_1004B84A4(v537, type metadata accessor for CRLBoardCRDTData);
                  swift_release(v534);
                  v540 = UUID.uuidString.getter(v539);
                  v542 = v541;
                  v543 = ((uint64_t (*)(uint64_t, uint64_t))v581)(v538, v629);
                  *(_QWORD *)(v528 + 96) = &type metadata for String;
                  *(_QWORD *)(v528 + 104) = v532;
                  *(_QWORD *)(v528 + 72) = v540;
                  *(_QWORD *)(v528 + 80) = v542;
                  v476 = v533;
                  v544 = static os_log_type_t.error.getter(v543);
                  sub_100A06EBC((uint64_t)v516, &_mh_execute_header, v544, "🚖 ⭕ ERROR: Unable to remove item %{public}@. Board %{public}@", 66, 0, v528);
                  swift_setDeallocating(v528);
                  v545 = *(_QWORD *)(v528 + 16);
                  v546 = sub_1004B804C(&qword_1013E0190);
                  swift_arrayDestroy(v616, v545, v546);
                  v482 = v627;
                  v483 = v602;
                  v485 = v628;
LABEL_182:

                  v517 = (void (*)(char *, uint64_t))v581;
                  v478 = v624;
                }
                v517(v484, v629);
                continue;
              }
            }
          }
        }
LABEL_155:
        v457 = __clz(__rbit64(v455));
        v450 = (v455 - 1) & v455;
        v453 = v457 + (v445 << 6);
      }
      v454 = *(_QWORD *)(*(_QWORD *)(v446 + 56) + 8 * v453);
      *(_BYTE *)(v454 + *(_QWORD *)(*(_QWORD *)v454 + 136)) = 0;
    }
  }
  v257 = __clz(__rbit64(v566));
  v566 &= v566 - 1;
  v258 = v257 | (v568 << 6);
LABEL_68:
  v262 = *(_QWORD *)(*(_QWORD *)(v564 + 56) + 8 * v258);
  v263 = v262 + *(_QWORD *)(*(_QWORD *)v262 + 120);
  swift_beginAccess(v263, &v647, 0, 0);
  v264 = v589;
  v265 = *(void (**)(char *, uint64_t, uint64_t))(v589 + 16);
  v266 = v607;
  v267 = v608;
  v265(v607, v263, v608);
  v268 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  swift_retain(v262);
  v269 = v590;
  v577 = v268;
  Capsule<>.root.getter(v267, v268);
  v576 = *(void (**)(char *, uint64_t))(v264 + 8);
  v576(v266, v267);
  v270 = v603;
  CRDictionary.makeIterator()(v603);
  (*(void (**)(char *, uint64_t))(v591 + 8))(v269, v270);
  v271 = *(_QWORD *)(*(_QWORD *)v262 + 128);
  v617 = *(_QWORD *)(*(_QWORD *)v262 + 136);
  v620 = v262;
  v571 = (_QWORD *)(v262 + v271);
  v272 = v628;
  v273 = (uint64_t)v612;
  v593 = v263;
  v588 = (char *)v265;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v274 = (uint64_t)v611;
        CRDictionary.Iterator.next()(v613);
        sub_1004C4938(v274, v273, (uint64_t *)&unk_101405EB0);
        v275 = sub_1004B804C(&qword_101405EF8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v275 - 8) + 48))(v273, 1, v275) == 1)
        {
          (*(void (**)(_QWORD, _QWORD))(v592 + 8))(v614, v613);
          swift_release(v620);
          goto LABEL_55;
        }
        v276 = v273 + *(int *)(v275 + 48);
        v277 = *(void (**)(char *, uint64_t, uint64_t))(v272 + 32);
        v278 = v616;
        v279 = v629;
        v277(v616, v273, v629);
        v280 = *(void (**)(char *, id, uint64_t))(v272 + 16);
        v281 = v625;
        v280(v625, v278, v279);
        swift_beginAccess(&v635, &v671, 33, 0);
        v282 = (uint64_t)v281;
        v283 = v631;
        sub_100AD569C(v631, v282);
        swift_endAccess(&v671);
        v284 = (void (*)(id, uint64_t))v581;
        v581(v283, v279);
        if (*(_BYTE *)(v620 + v617) != 1)
        {
          v284(v278, v279);
          v273 = (uint64_t)v612;
          goto LABEL_115;
        }
        v630 = v276;
        v285 = v607;
        v286 = v608;
        ((void (*)(char *, uint64_t, uint64_t))v588)(v607, v593, v608);
        v287 = ((uint64_t (*)(uint64_t, id, uint64_t))v280)(v283, v278, v279);
        __chkstk_darwin(v287);
        v289 = (uint64_t *)((char *)&v556 - ((v288 + 15) & 0xFFFFFFFFFFFFFFF0));
        v290 = v615;
        *v289 = v279;
        v289[1] = v290;
        v289[2] = sub_1004B7878(&qword_101405F08, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&unk_100F304AC);
        v289[3] = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
        v578 = v277;
        v277((char *)v289 + 32, v283, v279);
        KeyPath = swift_getKeyPath(&unk_100F277A8);
        v292 = (uint64_t)v606;
        Capsule<>.subscript.getter(KeyPath, v286, v577);
        v293 = swift_release(KeyPath);
        v294 = v576;
        ((void (*)(char *, uint64_t, __n128))v576)(v285, v286, v293);
        v295 = v610;
        sub_1004CB7BC(v292, v610, (uint64_t *)&unk_101405EA0);
        v296 = sub_1004B804C(&qword_101405F00);
        v297 = *(_QWORD *)(v296 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v297 + 48))(v295, 1, v296) == 1)
        {
          sub_1004CB800(v292, (uint64_t *)&unk_101405EA0);
          sub_1004CB800(v295, (uint64_t *)&unk_101405EA0);
          v298 = 1;
          v299 = (uint64_t)v605;
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t))v588)(v285, v593, v286);
          v300 = sub_1004CBA30(&qword_101405F20, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
          v299 = (uint64_t)v605;
          Ref.subscript.getter(v285, v296, v603, v300);
          v294(v285, v286);
          sub_1004CB800(v292, (uint64_t *)&unk_101405EA0);
          (*(void (**)(uint64_t, uint64_t))(v297 + 8))(v610, v296);
          v298 = 0;
        }
        v301 = v604;
        v302 = v615;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v604 + 56))(v299, v298, 1, v615);
        v303 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v301 + 48))(v299, 1, v302);
        v304 = v630;
        if (v303 != 1)
          break;
        v581((uint64_t)v616, v629);
        sub_1004CB800(v299, &qword_101403058);
        (*(void (**)(uint64_t, uint64_t))(v297 + 8))(v304, v296);
        v273 = (uint64_t)v612;
        v272 = v628;
      }
      v569 = v297;
      sub_1004B84E0(v299, v609, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      *(_QWORD *)&v572 = v571[1];
      v305 = v571[4];
      *(_QWORD *)&v573 = v571[3];
      *(_QWORD *)&v574 = v305;
      v306 = UUID._bridgeToObjectiveC()().super.isa;
      v307 = objc_msgSend(v622, "getBoardItemForUUID:", v306);

      v570 = v296;
      if (v307)
      {
        v308 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
        v309 = swift_dynamicCastClass(v307, v308);
        if (v309)
        {
          v310 = v309;
          v311 = v615;
          v312 = v609;
          v313 = v599;
          sub_1004CB7BC(v609 + *(int *)(v615 + 20), v599, &qword_1013F5530);
          v314 = v600;
          v315 = sub_1004B8460(v312 + *(int *)(v311 + 24), v600, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          v316 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v307) + 0x358))(v315);
          v318 = v317;
          ObjectType = swift_getObjectType(v316);
          v320 = *(uint64_t (**)(uint64_t, uint64_t))(v318 + 32);
          v578 = v307;
          v321 = v320(ObjectType, v318);
          swift_unknownObjectRelease(v316);
          v322 = type metadata accessor for CRLFreehandDrawingShapeItemData(0);
          v323 = swift_allocObject(v322, *(unsigned int *)(v322 + 48), *(unsigned __int16 *)(v322 + 52));
          sub_1004B84E0(v314, v323 + *(_QWORD *)(*(_QWORD *)v323 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          *(_QWORD *)(v323 + qword_10140A310) = 0;
          sub_1004C4938(v313, v323 + *(_QWORD *)(*(_QWORD *)v323 + 632), &qword_1013F5530);
          v324 = sub_1005E1000(v572, v573, v574, v321);
          v325 = v618;
          sub_100DBEE64(v310, (uint64_t)&off_10127C5E0);
          v618 = v325;
          if (v325)
            goto LABEL_137;
          v326 = *(_QWORD *)(v310 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v327 = *(void (**)(_QWORD *, __n128))(*(_QWORD *)v326 + 432);
          v328 = swift_retain(v326);
          v327(v324, v328);
          (*(void (**)(_QWORD *))(*(_QWORD *)v326 + 424))(v324);
          v329 = v324[5];
          v330 = v324[2];
          *(_OWORD *)(v326 + 24) = *(_OWORD *)(v324 + 3);
          *(_QWORD *)(v326 + 40) = v329;
          if ((v330 & 1) != 0)
          {
            v331 = *(_QWORD *)(v326 + 16);
            if ((v331 & 1) == 0)
              *(_QWORD *)(v326 + 16) = v331 | 1;
          }
          sub_1005E1074();
          if ((v330 & 4) != 0)
          {
            v332 = *(_QWORD *)(v326 + 16);
            if ((v332 & 4) == 0)
              *(_QWORD *)(v326 + 16) = v332 | 4;
          }
          if ((v330 & 2) != 0)
          {
            v333 = *(_QWORD *)(v326 + 16);
            if ((v333 & 2) == 0)
              *(_QWORD *)(v326 + 16) = v333 | 2;
          }
          swift_release(v326);
          v334 = v618;
          sub_100DB0D78(v310, (uint64_t)&off_10127C5E0, v624);
          v618 = v334;
          if (v334)
          {
LABEL_137:
            swift_release(v560);
            swift_bridgeObjectRelease(v585);
            swift_bridgeObjectRelease(v619);
            swift_release(v620);
            swift_release(v580);
            swift_release(v579);
            v442 = v578;

            swift_release(v324);
            swift_release(v623);
            swift_release(v567);
            sub_1004B84A4(v609, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
            v581((uint64_t)v616, v629);
            goto LABEL_138;
          }
          v335 = v578;

          swift_release(v324);
        }
        else
        {
          v341 = v307;
          if (qword_1013DD6B8 != -1)
            swift_once(&qword_1013DD6B8, sub_100A00A6C);
          swift_beginAccess(&static OS_os_log.crlDefault, &v641, 0, 0);
          v342 = (id)static OS_os_log.crlDefault;
          v343 = static os_log_type_t.error.getter(v342);
          sub_100A06EBC((uint64_t)v342, &_mh_execute_header, v343, "Tried to merge freehand drawing shape data to non freehand drawing shape item.", 78, 2, (uint64_t)_swiftEmptyArrayStorage);

        }
        sub_1004B84A4(v609, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
        v581((uint64_t)v616, v629);
        goto LABEL_114;
      }
      v336 = v609 + *(int *)(v615 + 20);
      v337 = sub_1004B804C((uint64_t *)&unk_101406B00);
      v338 = (uint64_t)v598;
      CRRegister.wrappedValue.getter(v337);
      v339 = v597;
      sub_1004CB7BC(v338, v597, (uint64_t *)&unk_1013E1A50);
      sub_1004B84A4(v338, type metadata accessor for CRLShapeItemParentAffinity);
      v340 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v628 + 48);
      if (v340(v339, 1, v629) == 1)
      {
        sub_1004CB800(v339, (uint64_t *)&unk_1013E1A50);
        goto LABEL_103;
      }
      v578(v595, v339, v629);
      v344 = UUID._bridgeToObjectiveC()().super.isa;
      v345 = objc_msgSend(v622, "getBoardItemForUUID:", v344);

      if (v345)
        break;
LABEL_102:
      v581((uint64_t)v595, v629);
LABEL_103:
      if ((v627 & 1) == 0)
      {
        if (qword_1013DD8B8 != -1)
          swift_once(&qword_1013DD8B8, sub_100A06704);
        swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v646, 0, 0);
        v350 = (void *)static OS_os_log.boardItemLifecycle;
        v351 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v352 = swift_initStackObject(v351, &v645);
        *(_OWORD *)(v352 + 16) = v563;
        v578 = v350;
        v353 = UUID.uuidString.getter(v578);
        v355 = v354;
        *(_QWORD *)(v352 + 56) = &type metadata for String;
        v356 = sub_1004CFC2C();
        *(_QWORD *)(v352 + 32) = v353;
        v570 = v352 + 32;
        *(_QWORD *)(v352 + 64) = v356;
        *(_QWORD *)(v352 + 40) = v355;
        v357 = (uint64_t)v598;
        CRRegister.wrappedValue.getter(v337);
        v358 = v594;
        sub_1004CB7BC(v357, v594, (uint64_t *)&unk_1013E1A50);
        sub_1004B84A4(v357, type metadata accessor for CRLShapeItemParentAffinity);
        v359 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v340)(v358, 1, v629);
        if ((_DWORD)v359 == 1)
        {
          sub_1004CB800(v594, (uint64_t *)&unk_1013E1A50);
          v360 = (uint64_t *)(v352 + 72);
          *(_QWORD *)(v352 + 96) = &type metadata for String;
          *(_QWORD *)(v352 + 104) = v356;
          goto LABEL_110;
        }
        v361 = v594;
        v362 = UUID.uuidString.getter(v359);
        v364 = v363;
        v581(v361, v629);
        v360 = (uint64_t *)(v352 + 72);
        *(_QWORD *)(v352 + 96) = &type metadata for String;
        *(_QWORD *)(v352 + 104) = v356;
        if (v364)
        {
          *v360 = v362;
        }
        else
        {
LABEL_110:
          *v360 = 7104878;
          v364 = 0xE300000000000000;
        }
        *(_QWORD *)(v352 + 80) = v364;
        v365 = *(_QWORD *)&v622[v587];
        v366 = v365 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v365 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v644, 0, 0);
        v367 = v366;
        v368 = (uint64_t)v626;
        sub_1004B8460(v367, (uint64_t)v626, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v365);
        v369 = v631;
        CRRegister.wrappedValue.getter(v621);
        sub_1004B84A4(v368, type metadata accessor for CRLBoardCRDTData);
        swift_release(v365);
        v371 = UUID.uuidString.getter(v370);
        v373 = v372;
        v374.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v581)(v369, v629);
        *(_QWORD *)(v352 + 136) = &type metadata for String;
        *(_QWORD *)(v352 + 144) = v356;
        *(_QWORD *)(v352 + 112) = v371;
        *(_QWORD *)(v352 + 120) = v373;
        v375 = static os_log_type_t.default.getter(v374);
        v376 = v578;
        sub_100A06EBC((uint64_t)v578, &_mh_execute_header, v375, "🚖 mergeDatabaseChanges() found orphaned stroke %{public}@ missing parent %{public}@. Board: %{public}@", 105, 0, v352);
        swift_setDeallocating(v352);
        v377 = *(_QWORD *)(v352 + 16);
        v378 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v570, v377, v378);

      }
      v379 = v599;
      sub_1004CB7BC(v336, v599, &qword_1013F5530);
      v380 = v609;
      v381 = v600;
      sub_1004B8460(v609 + *(int *)(v615 + 24), v600, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      v382 = type metadata accessor for CRLFreehandDrawingShapeItemData(0);
      v383 = swift_allocObject(v382, *(unsigned int *)(v382 + 48), *(unsigned __int16 *)(v382 + 52));
      sub_1004B84E0(v381, v383 + *(_QWORD *)(*(_QWORD *)v383 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      *(_QWORD *)(v383 + qword_10140A310) = 0;
      sub_1004C4938(v379, v383 + *(_QWORD *)(*(_QWORD *)v383 + 632), &qword_1013F5530);
      v384 = sub_1005E1000(v572, v573, v574, 2);
      v385 = *(void **)&v622[v565];
      v386 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
      *(_QWORD *)&v386[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
      *(_QWORD *)&v386[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
      *(_QWORD *)&v386[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
      *(_QWORD *)&v386[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v385;
      *(_QWORD *)&v386[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v384;
      v387 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
      v633.receiver = v386;
      v633.super_class = v387;
      v388 = v385;
      *(_QWORD *)&v389 = swift_retain(v384).n128_u64[0];
      v390 = (char *)objc_msgSendSuper2(&v633, "init", v389);
      sub_100DBD020(v390, 0, 1, (uint64_t)v586);

      v391 = *(_QWORD *)&v390[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v392 = *(void (**)(__n128))(*(_QWORD *)v391 + 256);
      v393 = v390;
      v394 = swift_retain(v391);
      v395 = (uint64_t)v625;
      v392(v394);

      swift_release(v391);
      v396 = v631;
      sub_100AD569C(v631, v395);
      swift_release(v384);

      v397 = v629;
      v398 = (void (*)(char *, uint64_t))v581;
      v581(v396, v629);
      v399 = v380;
LABEL_113:
      sub_1004B84A4(v399, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      v398(v616, v397);
LABEL_114:
      v272 = v628;
      v273 = (uint64_t)v612;
      v276 = v630;
LABEL_115:
      v400 = sub_1004B804C(&qword_101405F00);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v400 - 8) + 8))(v276, v400);
    }
    v346 = v345;
    v347 = type metadata accessor for CRLContainerItem(0);
    v578 = (void (*)(char *, uint64_t, uint64_t))swift_dynamicCastClass(v345, v347);
    if (!v578)
    {

      goto LABEL_102;
    }
    if ((sub_10062158C((uint64_t)v616, v585) & 1) == 0)
      break;

    v348 = v629;
    v349 = (void (*)(char *, uint64_t))v581;
    v581((uint64_t)v595, v629);
    sub_1004B84A4(v609, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    v349(v616, v348);
    (*(void (**)(uint64_t, uint64_t))(v569 + 8))(v630, v570);
    v272 = v628;
    v273 = (uint64_t)v612;
  }
  v401 = v599;
  sub_1004CB7BC(v336, v599, &qword_1013F5530);
  v402 = v600;
  sub_1004B8460(v609 + *(int *)(v615 + 24), v600, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  v403 = type metadata accessor for CRLFreehandDrawingShapeItemData(0);
  v404 = swift_allocObject(v403, *(unsigned int *)(v403 + 48), *(unsigned __int16 *)(v403 + 52));
  sub_1004B84E0(v402, v404 + *(_QWORD *)(*(_QWORD *)v404 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  *(_QWORD *)(v404 + qword_10140A310) = 0;
  sub_1004C4938(v401, v404 + *(_QWORD *)(*(_QWORD *)v404 + 632), &qword_1013F5530);
  v405 = sub_1005E1000(v572, v573, v574, 2);
  v406 = *(void **)&v622[v565];
  v407 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
  *(_QWORD *)&v407[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
  *(_QWORD *)&v407[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
  *(_QWORD *)&v407[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v407[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v406;
  *(_QWORD *)&v407[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v405;
  v408 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v632.receiver = v407;
  v632.super_class = v408;
  v409 = v406;
  *(_QWORD *)&v410 = swift_retain(v405).n128_u64[0];
  v411 = (char *)objc_msgSendSuper2(&v632, "init", v410);
  v412 = *(_QWORD *)&v411[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v413 = *(uint64_t (**)(__n128))(*(_QWORD *)v412 + 288);
  v414 = swift_retain(v412);
  v415 = (void *)v413(v414);
  objc_msgSend(v415, "transform", swift_release(v412).n128_f64[0]);
  v573 = v643[1];
  v574 = v643[0];
  v572 = v643[2];

  v671 = v574;
  v672 = v573;
  v673 = v572;
  if (!sub_100192C0C((double *)&v671))
  {
    swift_release(v405);

    goto LABEL_120;
  }
  v416 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v417 = swift_allocObject(v416, 40, 7);
  *(_OWORD *)(v417 + 16) = v559;
  *(_QWORD *)(v417 + 32) = v411;
  *(_QWORD *)&v643[0] = v417;
  specialized Array._endMutation()(v417);
  v418 = *(_QWORD *)&v643[0];
  v419 = v411;
  v420 = NSNotFound.getter(v419);
  v421 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
  v422 = swift_initStackObject(v421, &v642);
  *(_OWORD *)(v422 + 16) = v558;
  *(_QWORD *)(v422 + 32) = v420;
  *(_QWORD *)(v422 + 40) = v418;
  v423 = sub_1008E00A0((_QWORD *)v422);
  swift_setDeallocating(v422);
  swift_bridgeObjectRetain(v418);
  v424 = sub_1004B804C((uint64_t *)&unk_101406AF0);
  swift_arrayDestroy(v422 + 32, 1, v424);
  v425 = v618;
  sub_100745390(v423, (uint64_t)v586);
  v618 = v425;
  if (!v425)
  {
    swift_release(v405);

    swift_bridgeObjectRelease(v418);
    v426 = swift_bridgeObjectRelease(v423);
LABEL_120:
    v397 = v629;
    v398 = (void (*)(char *, uint64_t))v581;
    ((void (*)(char *, uint64_t, __n128))v581)(v595, v629, v426);
    v399 = v609;
    goto LABEL_113;
  }
  swift_bridgeObjectRelease(v619);
  swift_release(v620);
  swift_release(v405);
  swift_release(v580);
  swift_release(v579);

  swift_release(v623);
  swift_release(v567);
  swift_release(v560);

  swift_bridgeObjectRelease(v585);
  swift_bridgeObjectRelease(v418);
  v459 = swift_bridgeObjectRelease(v423);
  v460 = v629;
  v461 = (void (*)(char *, uint64_t))v581;
  ((void (*)(char *, uint64_t, __n128))v581)(v595, v629, v459);
  sub_1004B84A4(v609, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v461(v616, v460);
LABEL_138:
  (*(void (**)(_QWORD, _QWORD))(v592 + 8))(v614, v613);
  swift_release(v564);
  swift_bridgeObjectRelease(v634);
  v443 = swift_bridgeObjectRelease(v635);
  (*(void (**)(uint64_t, uint64_t, __n128))(v569 + 8))(v630, v570, v443);
}

void sub_100B16774(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  uint64_t v32;

  v26 = a4;
  v28 = a3;
  v5 = *a1;
  v6 = (void *)a1[3];
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v22 - v11;
  v13 = v6;
  sub_100D2C2C0(v6);
  v27 = a2;
  v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v25 = v5;
  v15 = v5 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15, v31, 0, 0);
  sub_1004B8460(v15, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  v16 = v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v30, 0, 0);
  sub_1004B8460(v16, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v17 = sub_1004B7878((unint64_t *)&unk_101405DD0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A468);
  swift_retain(v14);
  v24 = v7;
  LOBYTE(v16) = CRStruct_6.hasDelta(from:)(v10, v7, v17);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  swift_release(v14);
  if ((v16 & 1) != 0)
  {
    v18 = v32;
    sub_100DBEE64(v27, (uint64_t)&off_1012942F0);
    if (!v18)
    {
      v19 = v27;
      v20 = *(_QWORD *)(v27 + v23);
      sub_1004B8460(v15, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      swift_beginAccess(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v29, 33, 0);
      swift_retain(v20);
      CRStruct_6.merge(_:)(v12, v24, v17);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      swift_endAccess(v29);
      v21 = *(_QWORD *)(v25 + 40);
      *(_OWORD *)(v20 + 24) = *(_OWORD *)(v25 + 24);
      *(_QWORD *)(v20 + 40) = v21;
      sub_100DD0B74();
      swift_release(v20);
      sub_100DB0D78(v19, (uint64_t)&off_1012942F0, v26);
    }
  }

}

void sub_100B16A08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(__n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  Class isa;
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __n128 v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  void (*v103)(__n128);
  Class v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  void (*v113)(__n128);
  char *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(__n128);
  char *v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  __n128 v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  id v162;
  void (*v163)(void (*)(__n128), uint64_t);
  __n128 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  __int128 v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(__n128);
  char *v193;
  id v194;
  _QWORD *v195;
  unsigned int v196;
  uint64_t v197;
  __int128 v198;
  char *v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  void (*v203)(char *, uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223[24];
  _QWORD v224[3];
  char v225[32];
  uint64_t v226;

  v196 = a7;
  v197 = a6;
  v207 = a4;
  v208 = a2;
  v209 = a3;
  v9 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v9);
  v188 = (char *)&v182 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v12 = *(_QWORD *)(v11 - 8);
  v190 = v11;
  v191 = v12;
  __chkstk_darwin(v11);
  v189 = (char *)&v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v14);
  v193 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v16);
  v202 = (uint64_t)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for UUID(0);
  v210 = *(_QWORD *)(v212 - 8);
  v18 = __chkstk_darwin(v212);
  v186 = (char *)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (void (*)(__n128))((char *)&v182 - v21);
  v23 = __chkstk_darwin(v20);
  v211 = (char *)&v182 - v24;
  __chkstk_darwin(v23);
  v26 = (char *)&v182 - v25;
  swift_beginAccess(a1 + 24, v225, 0, 0);
  v27 = *(_QWORD *)(a1 + 24);
  v226 = v27;
  if ((unint64_t)v27 >> 62)
  {
LABEL_62:
    if (v27 < 0)
      v180 = v27;
    else
      v180 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v27, 2);
    v181 = _CocoaArrayWrapper.endIndex.getter(v180);
    swift_bridgeObjectRelease(v27);
    if (v181)
      goto LABEL_3;
LABEL_56:
    swift_bridgeObjectRelease(v27);
    return;
  }
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v27);
  if (!v28)
    goto LABEL_56;
LABEL_3:
  v187 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  v200 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v198 = xmmword_100EF5550;
  v185 = xmmword_100EF5A10;
  v184 = xmmword_100F05060;
  v204 = a5;
  v192 = v22;
  v199 = v26;
  while (1)
  {
    v29 = (unint64_t)v27 >> 62;
    if ((unint64_t)v27 >> 62)
      break;
    if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_6:
    if ((v27 & 0xC000000000000001) != 0)
    {
      v30 = (char *)a5;
      a5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
      if (!v29)
        goto LABEL_9;
    }
    else
    {
      if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_60;
      v30 = (char *)a5;
      a5 = *(_QWORD *)(v27 + 32);
      swift_retain(a5);
      if (!v29)
      {
LABEL_9:
        v31 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_21;
      }
    }
    if (v27 < 0)
      v34 = v27;
    else
      v34 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v31 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v27);
LABEL_21:
    if (!v31)
      goto LABEL_61;
    sub_100CFE434(0, 1);
    v35 = *(_QWORD *)(a5 + 16);
    v22 = *(void (**)(__n128))(*(_QWORD *)v35 + 256);
    v36 = swift_retain(v35);
    v37 = (uint64_t)v211;
    v22(v36);
    swift_beginAccess(v208, v224, 33, 0);
    sub_100AD569C((uint64_t)v26, v37);
    swift_endAccess(v224);
    v38 = *(void (**)(char *, uint64_t))(v210 + 8);
    v39 = v212;
    v38(v26, v212);
    swift_beginAccess(a5 + 24, v223, 0, 0);
    swift_bridgeObjectRetain(*(_QWORD *)(a5 + 24));
    v41 = sub_10061F854(v40);
    ((void (*)(uint64_t))v22)(v41);
    v42 = sub_10062158C((uint64_t)v26, v209);
    v43 = ((uint64_t (*)(char *, uint64_t))v38)(v26, v39);
    if ((v42 & 1) != 0)
    {
      if ((v207 & 1) == 0)
      {
        v206 = a5;
        if (qword_1013DD8B8 != -1)
          swift_once(&qword_1013DD8B8, sub_100A06704);
        swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v215, 0, 0);
        v47 = (void *)static OS_os_log.boardItemLifecycle;
        v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v48, &v214);
        *(_OWORD *)(inited + 16) = v198;
        v201 = v47;
        v50 = ((uint64_t (*)(void))v22)();
        v51 = UUID.uuidString.getter(v50);
        v53 = v52;
        v38(v26, v212);
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v22 = (void (*)(__n128))sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v22;
        *(_QWORD *)(inited + 32) = v51;
        v203 = (void (*)(char *, uint64_t))(inited + 32);
        *(_QWORD *)(inited + 40) = v53;
        v224[0] = v35;
        v54 = type metadata accessor for CRLBoardItemData();
        swift_retain(v35);
        v55 = String.init<A>(describing:)(v224, v54);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v22;
        *(_QWORD *)(inited + 72) = v55;
        *(_QWORD *)(inited + 80) = v56;
        v57 = *(_QWORD *)(v204 + v200);
        v58 = v57 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v57 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v213, 0, 0);
        v59 = v58;
        v60 = v202;
        sub_1004B8460(v59, v202, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v57);
        v61 = sub_1004B804C(&qword_1013E1A80);
        v62 = v211;
        CRRegister.wrappedValue.getter(v61);
        sub_1004B84A4(v60, type metadata accessor for CRLBoardCRDTData);
        swift_release(v57);
        v64 = UUID.uuidString.getter(v63);
        v66 = v65;
        v67 = v62;
        v26 = v199;
        v68.n128_f64[0] = ((double (*)(char *, uint64_t))v38)(v67, v212);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v22;
        *(_QWORD *)(inited + 112) = v64;
        *(_QWORD *)(inited + 120) = v66;
        v69 = static os_log_type_t.default.getter(v68);
        v70 = v201;
        sub_100A06EBC((uint64_t)v201, &_mh_execute_header, v69, "🚖 mergeDatabaseChanges() ignoring %{public}@%{public}@ because it is pending deletion, or is a realTimePeerDeletedItemIds. Board: %{public}@", 143, 0, inited);
        swift_release(v206);
        swift_release(v35);
        swift_setDeallocating(inited);
        v71 = *(_QWORD *)(inited + 16);
        v72 = sub_1004B804C(&qword_1013E0190);
        v73 = v203;
        a5 = v204;
LABEL_38:
        swift_arrayDestroy(v73, v71, v72);

        goto LABEL_39;
      }
      swift_release(a5);
LABEL_29:
      swift_release(v35);
      a5 = (uint64_t)v30;
      goto LABEL_39;
    }
    ((void (*)(uint64_t))v22)(v43);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v38(v26, v212);
    v45 = objc_msgSend(v30, "getBoardItemForUUID:", isa);

    if (v45)
    {
      v46 = v205;
      (*(void (**)(uint64_t, uint64_t, _QWORD))((swift_isaMask & *v45) + 0x1E8))(v35, v197, v196);
      v205 = v46;
      if (v46)
      {
        v27 = v226;
        swift_release(a5);
        swift_release(v35);

        goto LABEL_56;
      }
      if ((v207 & 1) == 0)
      {
        v206 = a5;
        if (qword_1013DD8B8 != -1)
          swift_once(&qword_1013DD8B8, sub_100A06704);
        swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v218, 0, 0);
        v76 = (void *)static OS_os_log.boardItemLifecycle;
        v77 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v78 = swift_initStackObject(v77, &v217);
        *(_OWORD *)(v78 + 16) = v198;
        v79 = *(uint64_t (**)(void))((swift_isaMask & *v45) + 0x88);
        v195 = v76;
        v80 = v79();
        v81 = UUID.uuidString.getter(v80);
        v83 = v82;
        v38(v26, v212);
        *(_QWORD *)(v78 + 56) = &type metadata for String;
        v22 = (void (*)(__n128))sub_1004CFC2C();
        *(_QWORD *)(v78 + 64) = v22;
        *(_QWORD *)(v78 + 32) = v81;
        v201 = (_QWORD *)(v78 + 32);
        *(_QWORD *)(v78 + 40) = v83;
        v84 = v45;
        v194 = v84;
        v85 = objc_msgSend(v84, "description");
        v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
        v88 = v87;

        *(_QWORD *)(v78 + 96) = &type metadata for String;
        *(_QWORD *)(v78 + 104) = v22;
        *(_QWORD *)(v78 + 72) = v86;
        *(_QWORD *)(v78 + 80) = v88;
        v203 = v38;
        v89 = v204;
        v90 = *(_QWORD *)(v204 + v200);
        v91 = v90 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v90 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v216, 0, 0);
        v92 = v91;
        v93 = v202;
        sub_1004B8460(v92, v202, type metadata accessor for CRLBoardCRDTData);
        swift_retain(v90);
        v94 = sub_1004B804C(&qword_1013E1A80);
        v95 = v211;
        CRRegister.wrappedValue.getter(v94);
        a5 = v89;
        sub_1004B84A4(v93, type metadata accessor for CRLBoardCRDTData);
        swift_release(v90);
        v97 = UUID.uuidString.getter(v96);
        v99 = v98;
        v100 = v95;
        v26 = v199;
        v101.n128_f64[0] = ((double (*)(char *, uint64_t))v203)(v100, v212);
        *(_QWORD *)(v78 + 136) = &type metadata for String;
        *(_QWORD *)(v78 + 144) = v22;
        *(_QWORD *)(v78 + 112) = v97;
        *(_QWORD *)(v78 + 120) = v99;
        v102 = static os_log_type_t.default.getter(v101);
        v70 = v195;
        sub_100A06EBC((uint64_t)v195, &_mh_execute_header, v102, "🚖 mergeDatabaseChanges() modified %{public}@%{public}@. Board: %{public}@", 76, 0, v78);
        swift_release(v206);

        swift_release(v35);
        swift_setDeallocating(v78);
        v71 = *(_QWORD *)(v78 + 16);
        v72 = sub_1004B804C(&qword_1013E0190);
        v73 = (void (*)(char *, uint64_t))v201;
        goto LABEL_38;
      }
      swift_release(a5);

      goto LABEL_29;
    }
    v74 = (uint64_t)v193;
    (*(void (**)(void))(*(_QWORD *)v35 + 264))();
    v75 = v210;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v74, 1, v212) == 1)
    {
      swift_release(a5);
      swift_release(v35);
      sub_1004CB800(v74, (uint64_t *)&unk_1013E1A50);
      a5 = (uint64_t)v30;
    }
    else
    {
      v203 = v38;
      v103 = v192;
      (*(void (**)(void (*)(__n128), uint64_t, uint64_t))(v75 + 32))(v192, v74, v212);
      v104 = UUID._bridgeToObjectiveC()().super.isa;
      v105 = (char *)objc_msgSend(v30, "getContainerItemForUUID:", v104);

      if (v105)
      {
        v106 = sub_10089D640(v35, *(void **)&v30[v187]);
        v107 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        v108 = *(_QWORD *)&v105[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v109 = type metadata accessor for CRLContainerItemData(0);
        v110 = *(void (**)(void))(*(_QWORD *)swift_dynamicCastClassUnconditional(v108, v109, 0, 0, 0) + 680);
        v201 = v105;
        v111 = (uint64_t)v188;
        v110();
        v112 = v190;
        v113 = (void (*)(__n128))v189;
        (*(void (**)(char *, uint64_t, uint64_t))(v191 + 16))(v189, v111, v190);
        sub_1004B84A4(v111, type metadata accessor for CRLContainerItemCRDTData);
        if ((v207 & 1) == 0)
        {
          v195 = v106;
          v114 = (char *)v201;
          v206 = a5;
          if (qword_1013DD8B8 != -1)
            swift_once(&qword_1013DD8B8, sub_100A06704);
          swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v221, 0, 0);
          v115 = (void *)static OS_os_log.boardItemLifecycle;
          v116 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v117 = swift_initStackObject(v116, &v220);
          *(_OWORD *)(v117 + 16) = v184;
          v118 = *(_QWORD *)&v114[v107];
          v119 = *(void (**)(__n128))(*(_QWORD *)v118 + 256);
          v194 = v115;
          v120 = v114;
          v121 = swift_retain(v118);
          v119(v121);

          swift_release(v118);
          v123 = UUID.uuidString.getter(v122);
          v125 = v124;
          v203(v26, v212);
          *(_QWORD *)(v117 + 56) = &type metadata for String;
          v126 = sub_1004CFC2C();
          *(_QWORD *)(v117 + 64) = v126;
          *(_QWORD *)(v117 + 32) = v123;
          v183 = v117 + 32;
          *(_QWORD *)(v117 + 40) = v125;
          v127 = v120;
          v128 = objc_msgSend(v127, "description");
          v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
          v131 = v130;

          *(_QWORD *)(v117 + 96) = &type metadata for String;
          *(_QWORD *)(v117 + 104) = v126;
          *(_QWORD *)(v117 + 72) = v129;
          *(_QWORD *)(v117 + 80) = v131;
          v132 = v211;
          v133 = v195;
          v134 = (*(uint64_t (**)(void))((swift_isaMask & *v195) + 0x88))();
          v135 = UUID.uuidString.getter(v134);
          v137 = v136;
          v203(v132, v212);
          *(_QWORD *)(v117 + 136) = &type metadata for String;
          *(_QWORD *)(v117 + 144) = v126;
          *(_QWORD *)(v117 + 112) = v135;
          *(_QWORD *)(v117 + 120) = v137;
          v138 = v133;
          v139 = objc_msgSend(v138, "description");
          v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v139);
          v142 = v141;

          *(_QWORD *)(v117 + 176) = &type metadata for String;
          *(_QWORD *)(v117 + 184) = v126;
          *(_QWORD *)(v117 + 152) = v140;
          *(_QWORD *)(v117 + 160) = v142;
          v143 = *(_QWORD *)(v204 + v200);
          v144 = v143 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess(v143 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v219, 0, 0);
          v145 = v144;
          v146 = v202;
          sub_1004B8460(v145, v202, type metadata accessor for CRLBoardCRDTData);
          swift_retain(v143);
          v147 = sub_1004B804C(&qword_1013E1A80);
          v148 = v186;
          CRRegister.wrappedValue.getter(v147);
          sub_1004B84A4(v146, type metadata accessor for CRLBoardCRDTData);
          swift_release(v143);
          v150 = UUID.uuidString.getter(v149);
          v152 = v151;
          v153 = v148;
          v106 = v195;
          v154.n128_f64[0] = ((double (*)(char *, uint64_t))v203)(v153, v212);
          *(_QWORD *)(v117 + 216) = &type metadata for String;
          *(_QWORD *)(v117 + 224) = v126;
          *(_QWORD *)(v117 + 192) = v150;
          *(_QWORD *)(v117 + 200) = v152;
          v155 = static os_log_type_t.default.getter(v154);
          v156 = v194;
          sub_100A06EBC((uint64_t)v194, &_mh_execute_header, v155, "🚖 🟢 mergeDatabaseChanges() parent %{public}@%{public}@ created %{public}@%{public}@. Board: %{public}@", 108, 0, v117);
          swift_setDeallocating(v117);
          v157 = *(_QWORD *)(v117 + 16);
          v158 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v183, v157, v158);

          v113 = (void (*)(__n128))v189;
          v112 = v190;
          a5 = v206;
        }
        v22 = v113;
        v159 = v205;
        v160 = CROrderedSet.index(where:)(sub_100B2D8D4, v35, v112);
        v162 = v201;
        sub_100745268(v106, v160, v161 & 1, v197);
        v163 = (void (*)(void (*)(__n128), uint64_t))v203;
        v205 = v159;
        if (v159)
        {

          swift_release(v35);
          v179 = swift_release(a5);
          (*(void (**)(void (*)(__n128), uint64_t, __n128))(v191 + 8))(v22, v112, v179);
          v163(v192, v212);
          v27 = v226;
          goto LABEL_56;
        }

        swift_release(v35);
        v164 = swift_release(a5);
        (*(void (**)(void (*)(__n128), uint64_t, __n128))(v191 + 8))(v22, v112, v164);
        v163(v192, v212);
        a5 = v204;
      }
      else
      {
        v165 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v166 = swift_initStackObject(v165, &v222);
        *(_OWORD *)(v166 + 16) = v185;
        v167 = ((uint64_t (*)(void))v22)();
        v168 = UUID.uuidString.getter(v167);
        v170 = v169;
        v203(v26, v212);
        *(_QWORD *)(v166 + 56) = &type metadata for String;
        v171 = sub_1004CFC2C();
        v206 = a5;
        v172 = v171;
        *(_QWORD *)(v166 + 64) = v171;
        *(_QWORD *)(v166 + 32) = v168;
        *(_QWORD *)(v166 + 40) = v170;
        v173 = UUID.uuidString.getter(v171);
        *(_QWORD *)(v166 + 96) = &type metadata for String;
        *(_QWORD *)(v166 + 104) = v172;
        v174 = v204;
        *(_QWORD *)(v166 + 72) = v173;
        *(_QWORD *)(v166 + 80) = v175;
        v22 = (void (*)(__n128))"Unable to create item %@ because expected parent %@ does not exist.";
        sub_100757E04(&_mh_execute_header, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 339, "Unable to create item %@ because expected parent %@ does not exist.", 67, 2u, v166);
        a5 = v174;
        sub_1004F5394(v166, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 339, (uint64_t)"Unable to create item %@ because expected parent %@ does not exist.", 67, 2u);
        swift_release(v206);
        swift_bridgeObjectRelease(v166);
        v176 = swift_release(v35);
        ((void (*)(void (*)(__n128), uint64_t, __n128))v203)(v103, v212, v176);
      }
    }
LABEL_39:
    v27 = v226;
    if ((unint64_t)v226 >> 62)
    {
      if (v226 < 0)
        v177 = v226;
      else
        v177 = v226 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v226);
      v178 = _CocoaArrayWrapper.endIndex.getter(v177);
      swift_bridgeObjectRelease(v27);
      if (!v178)
        goto LABEL_56;
    }
    else if (!*(_QWORD *)((v226 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_56;
    }
  }
  if (v27 < 0)
    v32 = v27;
  else
    v32 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v22 = (void (*)(__n128))_CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v27);
  if (v22)
  {
    swift_bridgeObjectRetain(v27);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v27);
    if (!v33)
      goto LABEL_59;
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_100B17A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(_QWORD *)a2 + 256))(v6);
  LOBYTE(a2) = static UUID.== infix(_:_:)(a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return a2 & 1;
}

uint64_t sub_100B17AD0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(__n128);
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  char v79[24];
  char v80[24];
  char v81[72];
  char v82[16];
  char v83[8];

  v73 = a3;
  v67 = a2;
  v66 = a1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v68 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v74 = (uint64_t)&v65 - v7;
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for UUID(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v13);
  v72 = (uint64_t *)((char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - v16;
  v75 = v3;
  v18 = v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo, v83, 0, 0);
  v71 = v18;
  sub_1004CB7BC(v18, (uint64_t)v17, (uint64_t *)&unk_101405E90);
  v19 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v69 = *(_QWORD *)(v19 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t))(v69 + 48);
  v70 = v19;
  if (v20(v17, 1) != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"enterRealTimeSyncSession(globallyScopedOwnerName:localParticipantUUID:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 460, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enterRealTimeSyncSession(globallyScopedOwnerName:localParticipantUUID:)", 71, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 460, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
  }
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_101405E90);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v82, 0, 0);
  v21 = (void *)static OS_os_log.realTimeSync;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v81);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v24 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v25 = v75;
  v26 = *(_QWORD *)(v75 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v27 = v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v80, 0, 0);
  sub_1004B8460(v27, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v28 = v21;
  swift_retain(v26);
  v29 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v29);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_release(v26);
  v31 = UUID.uuidString.getter(v30);
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v12, v77);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v31;
  *(_QWORD *)(inited + 40) = v33;
  v35 = static os_log_type_t.default.getter(v34);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v35, "CRLBoard: Entering real time collaboration session for board %{public}@", 71, 2, inited);
  swift_setDeallocating(inited);
  v36 = *(_QWORD *)(inited + 16);
  v37 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v36, v37);

  v38 = *(_QWORD *)(v25 + v24);
  v39 = v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v79, 0, 0);
  sub_1004B8460(v39, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v38);
  CRRegister.wrappedValue.getter(v29);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_release(v38);
  v40 = v67;
  swift_bridgeObjectRetain(v67);
  v41 = v74;
  sub_10067AFD0((uint64_t)v12, v66, v40, v74);
  v42 = v68;
  sub_1004B8460(v41, v68, type metadata accessor for CRLBoardIdentifier);
  v43 = *(char **)(v25 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v44 = *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v45 = *(void (**)(__n128))(*(_QWORD *)v44 + 256);
  v46 = v43;
  v47 = swift_retain(v44);
  v45(v47);

  swift_release(v44);
  v48 = type metadata accessor for CRLBoardChangeSet(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = sub_1005F1674(v42, (uint64_t)v12, 1);
  v78[0] = *(_QWORD *)(v49 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher);
  v50 = v78[0];
  v51 = swift_allocObject(&unk_101294518, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16);
  swift_retain(v50);
  v52 = sub_1004B804C(&qword_1013E7560);
  v53 = sub_1004CBA30(&qword_101405D10, &qword_1013E7560, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v54 = Publisher<>.sink(receiveValue:)(sub_100B2D5D0, v51, v52, v53);
  swift_release(v51);
  swift_release(v78[0]);
  v55 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable) = v54;
  v56 = swift_release(v55);
  v57 = v70;
  v58 = v72;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v76 + 16))((char *)v72 + *(int *)(v70 + 20), v73, v77, v56);
  *v58 = v49;
  v59 = *(int *)(v57 + 24);
  v60 = type metadata accessor for CRLCollaborationParticipantCollection(0);
  swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
  swift_retain(v49);
  v61 = sub_1006431DC();
  *(uint64_t *)((char *)v58 + v59) = v61;
  Date.init()(v61);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v58, 0, 1, v57);
  v62 = v71;
  swift_beginAccess(v71, v78, 33, 0);
  sub_100582338((uint64_t)v58, v62, (uint64_t *)&unk_101405E90);
  swift_endAccess(v78);
  v63 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDB00 != -1)
    swift_once(&qword_1013DDB00, sub_100B1179C);
  objc_msgSend(v63, "postNotificationName:object:", qword_101480B10, v25);
  swift_release(v49);

  return sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
}

void sub_100B18254(unsigned __int8 *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v6 = sub_1004B804C(&qword_101405D18);
  __chkstk_darwin(v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for UUID(0);
  __chkstk_darwin(v12);
  v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v15);
  v17 = &v30[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v20 = (char *)Strong;
    v32 = *(_QWORD *)(Strong + *a3);
    v21 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v31 = v18;
    v22 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v23 = v22 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v22 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v33, 0, 0);
    sub_1004B8460(v23, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v22);
    v24 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v24);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
    swift_release(v22);
    v25 = (uint64_t *)(*(_QWORD *)&v20[v21] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain(v27);
    sub_10067AFD0((uint64_t)v14, v26, v27, (uint64_t)v17);
    v28 = *(int *)(v6 + 48);
    sub_1004B84E0((uint64_t)v17, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    v8[v28] = v31;
    PassthroughSubject.send(_:)(v8, v29);
    sub_1004CB800((uint64_t)v8, &qword_101405D18);

  }
}

uint64_t sub_100B1856C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[5];
  uint64_t v61;
  char v62[24];
  char v63[72];
  char v64[24];
  char v65[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for UUID(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_101405E90);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v51 - v10;
  v12 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo, v65, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v11, (uint64_t *)&unk_101405E90);
  v54 = v13;
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v55 = v12;
  if (v17(v11, 1, v12) == 1)
    return sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101405E90);
  v52 = v16;
  v53 = v9;
  v56 = v15;
  sub_1004B84E0((uint64_t)v11, (uint64_t)v15, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, v64, 0, 0);
  v19 = (void *)static OS_os_log.realTimeSync;
  v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v20, v63);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v59 = v0;
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v23 = v22 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v22 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v62, 0, 0);
  sub_1004B8460(v23, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v24 = v19;
  swift_retain(v22);
  v25 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v25);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v22);
  v27 = UUID.uuidString.getter(v26);
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v58);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)(inited + 40) = v29;
  v31 = static os_log_type_t.default.getter(v30);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v31, "CRLBoard: Exiting real time collaboration session for board %{public}@", 70, 2, inited);
  swift_setDeallocating(inited);
  v32 = *(_QWORD *)(inited + 16);
  v33 = sub_1004B804C(&qword_1013E0190);
  v34 = v59;
  swift_arrayDestroy(inited + 32, v32, v33);

  v35 = OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable;
  v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable);
  if (v36)
  {
    swift_retain(*(_QWORD *)(v34 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable));
    AnyCancellable.cancel()();
    swift_release(v36);
    v37 = *(_QWORD *)(v34 + v35);
  }
  else
  {
    v37 = 0;
  }
  *(_QWORD *)(v34 + v35) = 0;
  swift_release(v37);
  v38 = (char *)*v56;
  v39 = (void *)static OS_os_log.realTimeSync;
  swift_retain(*v56);
  v40 = v39;
  v42 = static os_log_type_t.default.getter(v41);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v42, "CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

  v43 = *(NSObject **)&v38[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue];
  v44 = swift_allocObject(&unk_101294658, 32, 7);
  *(_QWORD *)(v44 + 16) = v38;
  *(_QWORD *)(v44 + 24) = 0;
  v45 = swift_allocObject(&unk_101294680, 32, 7);
  *(_QWORD *)(v45 + 16) = sub_100B2D908;
  *(_QWORD *)(v45 + 24) = v44;
  aBlock[4] = sub_1005B72B0;
  v61 = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_101294698;
  v46 = _Block_copy(aBlock);
  v47 = v61;
  swift_retain(v38);
  swift_retain(v45);
  swift_release(v47);
  dispatch_sync(v43, v46);
  _Block_release(v46);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation(v45, "", 89, 247, 26, 1);
  swift_release(v38);
  swift_release(v44);
  v48 = swift_release(v45);
  if ((v43 & 1) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v49 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v54 + 56))(v53, 1, 1, v55, v48);
  v50 = v52;
  swift_beginAccess(v52, aBlock, 33, 0);
  sub_100582338(v49, v50, (uint64_t *)&unk_101405E90);
  swift_endAccess(aBlock);
  v38 = (char *)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DDB00 != -1)
LABEL_12:
    swift_once(&qword_1013DDB00, sub_100B1179C);
  objc_msgSend(v38, "postNotificationName:object:", qword_101480B10, v59);

  return sub_1004B84A4((uint64_t)v56, type metadata accessor for CRLBoard.RealTimeSessionInfo);
}

void sub_100B18BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t v16;
  double *v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE *v27;

  v5 = v3;
  v9 = type metadata accessor for CRLBoardScenesCRDTData(0);
  __chkstk_darwin(v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v13 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v14 = v12;
  v15 = v13;
  sub_100DBEE64((uint64_t)v14, (uint64_t)&off_10127C5E0);
  if (v4)
  {

  }
  else
  {
    v27 = v11;
    v16 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v17 = *(double **)&v15[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    if (!v17)
    {
      sub_100740DA4();
      v17 = *(double **)&v15[v16];
    }
    if (v17)
      v18 = v17;
    else
      v18 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v17);
    sub_10074643C((uint64_t)v18, a2, a3);
    swift_bridgeObjectRelease(v18);
    sub_100DB0D78((uint64_t)v14, (uint64_t)&off_10127C5E0, 2u);

    v19 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v20, v26, 0, 0);
    v21 = type metadata accessor for CRLBoardCRDTData(0);
    v22 = (uint64_t)v27;
    sub_1004B8460(v20 + *(int *)(v21 + 36), (uint64_t)v27, type metadata accessor for CRLBoardScenesCRDTData);
    v23 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v25, 33, 0);
    v24 = v23 + *(int *)(v21 + 36);
    swift_retain(v19);
    sub_100B2D54C(v22, v24);
    swift_endAccess(v25);
    swift_release(v19);
  }
}

char *sub_100B18E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  char *v36;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];

  v1 = v0;
  v2 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v38 = *(_OWORD *)(v11 + 24);
  v12 = *(_QWORD *)(v11 + 40);
  v13 = v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v42, 0, 0);
  sub_1004B8460(v13, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v15 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v39 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
  v14 = v39;
  v16 = type metadata accessor for CRLBoardData(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  *(_QWORD *)(v17 + 16) = 7;
  *(_OWORD *)(v17 + 24) = v38;
  *(_QWORD *)(v17 + 40) = v12;
  sub_1004B84E0((uint64_t)v10, v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  v18 = (_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  *v18 = v15;
  v18[1] = v14;
  v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v21 = type metadata accessor for CRLContainerItemData(0);
  v22 = swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 632);
  swift_beginAccess(v23, v41, 0, 0);
  sub_1004CB7BC(v23, (uint64_t)v7, (uint64_t *)&unk_1013F02C0);
  v24 = swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v24 + 680))();
  v25 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  sub_1004B84E0((uint64_t)v4, v25 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938((uint64_t)v7, v25 + *(_QWORD *)(*(_QWORD *)v25 + 632), (uint64_t *)&unk_1013F02C0);
  v26 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer)
                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v28 = swift_dynamicCastClassUnconditional(v27, v21, 0, 0, 0);
  v29 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 632);
  swift_beginAccess(v29, v40, 0, 0);
  sub_1004CB7BC(v29, (uint64_t)v7, (uint64_t *)&unk_1013F02C0);
  v30 = swift_dynamicCastClassUnconditional(v27, v21, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v30 + 680))();
  v31 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  sub_1004B84E0((uint64_t)v4, v31 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938((uint64_t)v7, v31 + *(_QWORD *)(*(_QWORD *)v31 + 632), (uint64_t *)&unk_1013F02C0);
  v32 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  v33 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  LODWORD(v1) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported);
  v34 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
  swift_bridgeObjectRetain(v39);
  v35 = v33;
  v36 = sub_100B2A698(v35, v17, (uint64_t)v26, (uint64_t)v32, 0, v1);

  swift_release(v17);
  swift_release(v26);
  swift_release(v32);
  return v36;
}

uint64_t sub_100B19284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  char v25;
  char v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  CKRecordID v60;
  Swift::String v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _OWORD v74[2];
  char v75[24];
  char v76[24];
  __int128 v77;
  __int128 v78;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  __chkstk_darwin(v4);
  v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)sub_1004B804C((uint64_t *)&unk_101405E00);
  v65 = (char *)*((_QWORD *)v6 - 1);
  __chkstk_darwin(v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v67);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  v14 = sub_1004B804C(&qword_101405DF8);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CRLBoard(0);
  v72 = a1;
  v18 = swift_dynamicCastClass(a1, v17);
  if (v18)
  {
    v19 = v18;
    v68 = v2;
    v66 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v20, v76, 0, 0);
    sub_1004B8460(v20, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v21, v75, 0, 0);
    sub_1004B8460(v21, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    v22 = sub_1004B7878((unint64_t *)&unk_101405DD0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A468);
    swift_unknownObjectRetain(v72);
    CRStruct_6.actionUndoingDifference(from:)(v10, v67, v22);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    v67 = (uint64_t)v13;
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    if ((*((unsigned int (**)(char *, uint64_t, int *))v65 + 6))(v16, 1, v6) == 1)
    {
      sub_1004CB800((uint64_t)v16, &qword_101405DF8);
      v23 = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
      v24 = sub_1008431EC(2);
      v26 = v25;
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        *(_QWORD *)&v74[0] = _swiftEmptyDictionarySingleton;
        v29 = v70;
        v28 = v71;
        v30 = v68;
        v31 = v69;
        v32 = v67;
        v33 = v66;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10082C534();
          v23 = *(_QWORD **)&v74[0];
        }
        sub_10050CB14((_OWORD *)(v23[7] + 32 * v24), &v77);
        sub_10051999C(v24, (uint64_t)v23);
        swift_bridgeObjectRelease();
      }
      else
      {
        v77 = 0u;
        v78 = 0u;
        v29 = v70;
        v28 = v71;
        v30 = v68;
        v31 = v69;
        v32 = v67;
        v33 = v66;
      }
      sub_1004CB800((uint64_t)&v77, &qword_1013E0230);
    }
    else
    {
      v34 = v6[12];
      v35 = (uint64_t)&v16[v34];
      v36 = v6[16];
      v37 = (uint64_t)&v16[v36];
      v38 = v6[20];
      v62 = &v16[v38];
      v39 = v6[24];
      v63 = &v16[v39];
      v40 = v6[28];
      v64 = &v16[v40];
      v41 = (uint64_t)&v8[v34];
      v65 = &v8[v34];
      v42 = (uint64_t)&v8[v36];
      v43 = (uint64_t)&v8[v38];
      v44 = (uint64_t)&v8[v39];
      v45 = (uint64_t)&v8[v40];
      sub_1004C4938((uint64_t)v16, (uint64_t)v8, &qword_1013E6B08);
      sub_1004C4938(v35, v41, (uint64_t *)&unk_101405E10);
      sub_1004C4938(v37, v42, &qword_1013E6B18);
      sub_1004C4938((uint64_t)v62, v43, &qword_101405E20);
      sub_1004C4938((uint64_t)v63, v44, &qword_101405E28);
      sub_1004C4938((uint64_t)v64, v45, &qword_101405E30);
      *((_QWORD *)&v78 + 1) = v6;
      v46 = sub_10050D1B0(&v77);
      v47 = (uint64_t)v46 + v6[12];
      v48 = (uint64_t)v46 + v6[16];
      v49 = (uint64_t)v46 + v6[20];
      v50 = (uint64_t)v46 + v6[24];
      v51 = (uint64_t)v46 + v6[28];
      sub_1004C4938((uint64_t)v8, (uint64_t)v46, &qword_1013E6B08);
      sub_1004C4938((uint64_t)v65, v47, (uint64_t *)&unk_101405E10);
      sub_1004C4938(v42, v48, &qword_1013E6B18);
      sub_1004C4938(v43, v49, &qword_101405E20);
      sub_1004C4938(v44, v50, &qword_101405E28);
      sub_1004C4938(v45, v51, &qword_101405E30);
      sub_10050CB14(&v77, v74);
      v52 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v73 = _swiftEmptyDictionarySingleton;
      sub_1008256CC(v74, 2, v52);
      v23 = v73;
      swift_bridgeObjectRelease();
      v29 = v70;
      v28 = v71;
      v30 = v68;
      v31 = v69;
      v32 = v67;
      v33 = v66;
    }
    v53 = *(_QWORD *)(v30 + v33);
    v54 = v53 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v53 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v77, 0, 0);
    sub_1004B8460(v54, v32, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v53);
    v55 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v55);
    sub_1004B84A4(v32, type metadata accessor for CRLBoardCRDTData);
    swift_release(v53);
    v56 = sub_100C9B734((uint64_t)v23);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v72);
    v57 = type metadata accessor for CRLTransactableUndoingMutations(0);
    v58 = swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v58 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v31, v28);
    *(_QWORD *)(v58 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values) = v56;
    return v58;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 538, "Tried to undo from mismatched type", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 538, (uint64_t)"Tried to undo from mismatched type", 34, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v60, v61);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100B19988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  int v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  unsigned int v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  double *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v87;
  unint64_t v88;
  double *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  double *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  double *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  _QWORD *v117;
  char v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  double *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t result;
  double *v130;
  double *v131;
  CKRecordID v132;
  Swift::String v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  _QWORD *v156;
  char v157[24];
  char v158[32];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v147 = *(_QWORD *)(v4 - 8);
  v148 = v4;
  __chkstk_darwin(v4);
  v146 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101405E38);
  v153 = *(_QWORD *)(v6 - 8);
  v154 = (int *)v6;
  __chkstk_darwin(v6);
  v138 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v140 = (char *)&v134 - v9;
  __chkstk_darwin(v10);
  v139 = (char *)&v134 - v11;
  __chkstk_darwin(v12);
  v137 = (char *)&v134 - v13;
  __chkstk_darwin(v14);
  v136 = (uint64_t)&v134 - v15;
  __chkstk_darwin(v16);
  v155 = (uint64_t)&v134 - v17;
  v152 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v152);
  v19 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v134 - v21;
  v23 = sub_1004B804C(&qword_101405E40);
  __chkstk_darwin(v23);
  v25 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v134 - v27;
  v29 = type metadata accessor for CRLBoard(0);
  v30 = a1;
  v31 = swift_dynamicCastClass(a1, v29);
  if (v31)
  {
    v32 = v31;
    v145 = v2;
    v141 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v33, v158, 0, 0);
    sub_1004B8460(v33, (uint64_t)v22, type metadata accessor for CRLBoardCRDTData);
    v144 = v32;
    v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v34, v157, 0, 0);
    sub_1004B8460(v34, (uint64_t)v19, type metadata accessor for CRLBoardCRDTData);
    v35 = sub_1004B7878((unint64_t *)&unk_101405E48, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A270);
    swift_unknownObjectRetain(v30);
    CRType.observableDifference(from:)(v19, v152, v35);
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardCRDTData);
    v143 = v22;
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardCRDTData);
    sub_1004CB7BC((uint64_t)v28, (uint64_t)v25, &qword_101405E40);
    v36 = v154;
    v37 = (*(uint64_t (**)(char *, uint64_t, int *))(v153 + 48))(v25, 1, v154);
    v142 = v28;
    if (v37 == 1)
    {
      sub_1004CB800((uint64_t)v25, &qword_101405E40);
      v38 = _swiftEmptyArrayStorage;
      v40 = v147;
      v39 = v148;
      v41 = v145;
      v42 = v146;
      v43 = v144;
    }
    else
    {
      v44 = v36;
      v45 = v36[12];
      v46 = v155;
      v47 = v155 + v45;
      v48 = v36[16];
      v49 = v155 + v48;
      v50 = v36[20];
      v51 = v155 + v50;
      v52 = v36[24];
      v53 = v155 + v52;
      v151 = v155 + v50;
      v152 = v155 + v52;
      v54 = v36[28];
      v153 = v155 + v54;
      v55 = (uint64_t)&v25[v45];
      v56 = (uint64_t)&v25[v48];
      v57 = v44;
      v58 = (uint64_t)&v25[v50];
      v149 = &v25[v52];
      v150 = &v25[v54];
      sub_1004C4938((uint64_t)v25, v155, &qword_1013E9C40);
      sub_1004C4938(v55, v47, &qword_101405E58);
      sub_1004C4938(v56, v49, &qword_1013E9C40);
      sub_1004C4938(v58, v51, &qword_101405E60);
      sub_1004C4938((uint64_t)v149, v53, &qword_101405E68);
      v59 = v46;
      v60 = v153;
      sub_1004C4938((uint64_t)v150, v153, &qword_101405E70);
      v61 = v136;
      v62 = v136 + v57[16];
      v63 = v136 + v57[20];
      v64 = v136 + v57[24];
      v65 = v136 + v57[28];
      v66 = v59;
      v67 = v136 + v57[12];
      sub_1004CB7BC(v66, v136, &qword_1013E9C40);
      v149 = (char *)v47;
      sub_1004CB7BC(v47, v67, &qword_101405E58);
      v150 = (char *)v49;
      sub_1004CB7BC(v49, v62, &qword_1013E9C40);
      sub_1004CB7BC(v151, v63, &qword_101405E60);
      sub_1004CB7BC(v152, v64, &qword_101405E68);
      sub_1004CB7BC(v60, v65, &qword_101405E70);
      v68 = type metadata accessor for CRValueObservableDifference(0);
      v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48);
      v70 = v69(v61, 1, v68);
      v135 = v68;
      v134 = v69;
      if (v70 == 1)
      {
        sub_1004CB800(v65, &qword_101405E70);
        sub_1004CB800(v64, &qword_101405E68);
        sub_1004CB800(v63, &qword_101405E60);
        sub_1004CB800(v62, &qword_1013E9C40);
        sub_1004CB800(v67, &qword_101405E58);
        sub_1004CB800(v61, &qword_1013E9C40);
        v38 = _swiftEmptyArrayStorage;
        v72 = v154;
        v71 = v155;
        v73 = (uint64_t)v137;
      }
      else
      {
        sub_1004CB800(v61, &qword_1013E9C40);
        sub_1004CB800(v65, &qword_101405E70);
        sub_1004CB800(v64, &qword_101405E68);
        sub_1004CB800(v63, &qword_101405E60);
        sub_1004CB800(v62, &qword_1013E9C40);
        sub_1004CB800(v67, &qword_101405E58);
        v38 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v75 = *((_QWORD *)v38 + 2);
        v74 = *((_QWORD *)v38 + 3);
        if (v75 >= v74 >> 1)
          v38 = (double *)sub_100D0EF94((_QWORD *)(v74 > 1), v75 + 1, 1, v38);
        v72 = v154;
        v71 = v155;
        v73 = (uint64_t)v137;
        *((_QWORD *)v38 + 2) = v75 + 1;
        v76 = &v38[2 * v75];
        *((_QWORD *)v76 + 4) = 25705;
        v76[5] = -1.15172193e164;
      }
      v77 = v73 + v72[12];
      v78 = v73 + v72[16];
      v79 = v73 + v72[20];
      v80 = v73 + v72[24];
      v81 = v73 + v72[28];
      sub_1004CB7BC(v71, v73, &qword_1013E9C40);
      sub_1004CB7BC((uint64_t)v149, v77, &qword_101405E58);
      sub_1004CB7BC((uint64_t)v150, v78, &qword_1013E9C40);
      sub_1004CB7BC(v151, v79, &qword_101405E60);
      sub_1004CB7BC(v152, v80, &qword_101405E68);
      sub_1004CB7BC(v153, v81, &qword_101405E70);
      v82 = sub_1004B804C(&qword_101405E78);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v77, 1, v82) == 1)
      {
        sub_1004CB800(v81, &qword_101405E70);
        sub_1004CB800(v80, &qword_101405E68);
        sub_1004CB800(v79, &qword_101405E60);
        sub_1004CB800(v78, &qword_1013E9C40);
        sub_1004CB800(v77, &qword_101405E58);
        sub_1004CB800(v73, &qword_1013E9C40);
        v83 = v154;
        v84 = (uint64_t)v139;
        v85 = (uint64_t)v138;
      }
      else
      {
        sub_1004CB800(v77, &qword_101405E58);
        sub_1004CB800(v81, &qword_101405E70);
        sub_1004CB800(v80, &qword_101405E68);
        sub_1004CB800(v79, &qword_101405E60);
        sub_1004CB800(v78, &qword_1013E9C40);
        sub_1004CB800(v73, &qword_1013E9C40);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
        v85 = (uint64_t)v138;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v38 = (double *)sub_100D0EF94(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        v83 = v154;
        v88 = *((_QWORD *)v38 + 2);
        v87 = *((_QWORD *)v38 + 3);
        v84 = (uint64_t)v139;
        if (v88 >= v87 >> 1)
        {
          v130 = (double *)sub_100D0EF94((_QWORD *)(v87 > 1), v88 + 1, 1, v38);
          v84 = (uint64_t)v139;
          v38 = v130;
        }
        *((_QWORD *)v38 + 2) = v88 + 1;
        v89 = &v38[2 * v88];
        v89[4] = -2.31584178e77;
        *((_QWORD *)v89 + 5) = 0x8000000100FF7240;
      }
      v90 = v84 + v83[12];
      v91 = v84 + v83[16];
      v92 = v84 + v83[20];
      v93 = v84 + v83[24];
      v94 = v84 + v83[28];
      sub_1004CB7BC(v155, v84, &qword_1013E9C40);
      sub_1004CB7BC((uint64_t)v149, v90, &qword_101405E58);
      sub_1004CB7BC((uint64_t)v150, v91, &qword_1013E9C40);
      sub_1004CB7BC(v151, v92, &qword_101405E60);
      sub_1004CB7BC(v152, v93, &qword_101405E68);
      sub_1004CB7BC(v153, v94, &qword_101405E70);
      if (v134(v91, 1, v135) == 1)
      {
        sub_1004CB800(v94, &qword_101405E70);
        sub_1004CB800(v93, &qword_101405E68);
        sub_1004CB800(v92, &qword_101405E60);
        sub_1004CB800(v91, &qword_1013E9C40);
        sub_1004CB800(v90, &qword_101405E58);
        sub_1004CB800(v84, &qword_1013E9C40);
        v95 = (uint64_t)v140;
      }
      else
      {
        sub_1004CB800(v91, &qword_1013E9C40);
        sub_1004CB800(v94, &qword_101405E70);
        sub_1004CB800(v93, &qword_101405E68);
        sub_1004CB800(v92, &qword_101405E60);
        sub_1004CB800(v90, &qword_101405E58);
        sub_1004CB800(v84, &qword_1013E9C40);
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
          v38 = (double *)sub_100D0EF94(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        v97 = *((_QWORD *)v38 + 2);
        v96 = *((_QWORD *)v38 + 3);
        v95 = (uint64_t)v140;
        if (v97 >= v96 >> 1)
        {
          v131 = (double *)sub_100D0EF94((_QWORD *)(v96 > 1), v97 + 1, 1, v38);
          v95 = (uint64_t)v140;
          v38 = v131;
        }
        *((_QWORD *)v38 + 2) = v97 + 1;
        v98 = &v38[2 * v97];
        *((_QWORD *)v98 + 4) = 0x656C746974;
        v98[5] = -3.24180904e178;
      }
      v99 = v95 + v83[12];
      v100 = v95 + v83[16];
      v101 = v95 + v83[20];
      v102 = v95 + v83[24];
      v103 = v95 + v83[28];
      sub_1004CB7BC(v155, v95, &qword_1013E9C40);
      sub_1004CB7BC((uint64_t)v149, v99, &qword_101405E58);
      sub_1004CB7BC((uint64_t)v150, v100, &qword_1013E9C40);
      sub_1004CB7BC(v151, v101, &qword_101405E60);
      sub_1004CB7BC(v152, v102, &qword_101405E68);
      sub_1004CB7BC(v153, v103, &qword_101405E70);
      v104 = sub_1004B804C(&qword_101405E80);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v101, 1, v104) == 1)
      {
        sub_1004CB800(v103, &qword_101405E70);
        sub_1004CB800(v102, &qword_101405E68);
        sub_1004CB800(v101, &qword_101405E60);
        sub_1004CB800(v100, &qword_1013E9C40);
        sub_1004CB800(v99, &qword_101405E58);
        sub_1004CB800(v95, &qword_1013E9C40);
        v42 = v146;
      }
      else
      {
        sub_1004CB800(v101, &qword_101405E60);
        sub_1004CB800(v103, &qword_101405E70);
        sub_1004CB800(v102, &qword_101405E68);
        sub_1004CB800(v100, &qword_1013E9C40);
        sub_1004CB800(v99, &qword_101405E58);
        sub_1004CB800(v95, &qword_1013E9C40);
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
          v38 = (double *)sub_100D0EF94(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        v42 = v146;
        v106 = *((_QWORD *)v38 + 2);
        v105 = *((_QWORD *)v38 + 3);
        if (v106 >= v105 >> 1)
          v38 = (double *)sub_100D0EF94((_QWORD *)(v105 > 1), v106 + 1, 1, v38);
        *((_QWORD *)v38 + 2) = v106 + 1;
        v107 = &v38[2 * v106];
        v107[4] = 2.22866467e252;
        v107[5] = -3.30793415e228;
      }
      v108 = v85 + v83[12];
      v109 = v85 + v83[16];
      v110 = v85 + v83[20];
      v111 = v85 + v83[24];
      v112 = v85 + v83[28];
      v113 = v155;
      sub_1004CB7BC(v155, v85, &qword_1013E9C40);
      sub_1004CB7BC((uint64_t)v149, v108, &qword_101405E58);
      sub_1004CB7BC((uint64_t)v150, v109, &qword_1013E9C40);
      sub_1004CB7BC(v151, v110, &qword_101405E60);
      sub_1004CB7BC(v152, v111, &qword_101405E68);
      sub_1004CB7BC(v153, v112, &qword_101405E70);
      v114 = sub_1004B804C(&qword_101405E88);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v112, 1, v114) != 1)
      {
        sub_1004CB800(v112, &qword_101405E70);
        sub_1004CB800(v111, &qword_101405E68);
        sub_1004CB800(v110, &qword_101405E60);
        sub_1004CB800(v109, &qword_1013E9C40);
        sub_1004CB800(v108, &qword_101405E58);
        sub_1004CB800(v85, &qword_1013E9C40);
        v118 = swift_isUniquelyReferenced_nonNull_native(v38);
        v43 = v144;
        v41 = v145;
        v115 = (uint64_t)v143;
        if ((v118 & 1) == 0)
          v38 = (double *)sub_100D0EF94(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
        v40 = v147;
        v39 = v148;
        v119 = v155;
        v121 = *((_QWORD *)v38 + 2);
        v120 = *((_QWORD *)v38 + 3);
        if (v121 >= v120 >> 1)
          v38 = (double *)sub_100D0EF94((_QWORD *)(v120 > 1), v121 + 1, 1, v38);
        *((_QWORD *)v38 + 2) = v121 + 1;
        v122 = &v38[2 * v121];
        *((_QWORD *)v122 + 4) = 0x73656E656373;
        v122[5] = -2.12455197e183;
        sub_1004CB800(v119, &qword_101405E38);
        if (*((_QWORD *)v38 + 2))
          goto LABEL_33;
        goto LABEL_39;
      }
      sub_1004CB800(v113, &qword_101405E38);
      sub_1004CB800(v112, &qword_101405E70);
      sub_1004CB800(v111, &qword_101405E68);
      sub_1004CB800(v110, &qword_101405E60);
      sub_1004CB800(v109, &qword_1013E9C40);
      sub_1004CB800(v108, &qword_101405E58);
      sub_1004CB800(v85, &qword_1013E9C40);
      v40 = v147;
      v39 = v148;
      v43 = v144;
      v41 = v145;
    }
    v115 = (uint64_t)v143;
    if (*((_QWORD *)v38 + 2))
    {
LABEL_33:
      v116 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v156 = _swiftEmptyDictionarySingleton;
      sub_100825A20((uint64_t)v38, 2, v116);
      v117 = v156;
      swift_bridgeObjectRelease();
LABEL_40:
      v123 = *(_QWORD *)(v41 + v141);
      v124 = v123 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v123 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v156, 0, 0);
      sub_1004B8460(v124, v115, type metadata accessor for CRLBoardCRDTData);
      swift_retain(v123);
      v125 = sub_1004B804C(&qword_1013E1A80);
      CRRegister.wrappedValue.getter(v125);
      sub_1004B84A4(v115, type metadata accessor for CRLBoardCRDTData);
      swift_release(v123);
      sub_1004CB800((uint64_t)v142, &qword_101405E40);
      v126 = type metadata accessor for CRLTransactableObservableDeltas(0);
      v127 = swift_allocObject(v126, *(unsigned int *)(v126 + 48), *(unsigned __int16 *)(v126 + 52));
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v127 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id, v42, v39);
      *(_QWORD *)(v127 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys) = v117;
      v128 = (uint64_t *)(v127 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
      *v128 = v43;
      v128[1] = (uint64_t)&off_1012942F0;
      return v127;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    v117 = _swiftEmptyDictionarySingleton;
    goto LABEL_40;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 549, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 549, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v132, v133);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_100B1AAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  char v30;
  unint64_t v31;
  _BYTE *v32;
  __n128 v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76[24];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[24];
  uint64_t v82;
  char v83[32];
  uint64_t v84;

  v3 = v2;
  v84 = a2;
  v5 = sub_1004B804C(&qword_101405DF8);
  __chkstk_darwin(v5);
  v69 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v72 = (char *)&v63 - v8;
  v73 = sub_1004B804C((uint64_t *)&unk_101405E00);
  v71 = *(_QWORD **)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v68);
  v11 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v63 - v18;
  v74 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v63 - v18, a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v12, v17);
  v67 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v21 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v83, 0, 0);
  sub_1004B8460(v21, v11, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v20);
  v22 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v22);
  sub_1004B84A4(v11, type metadata accessor for CRLBoardCRDTData);
  swift_release(v20);
  LOBYTE(v11) = static UUID.== infix(_:_:)(v19);
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v15, v12);
  v23(v19, v12);
  if ((v11 & 1) == 0)
  {
    v31 = sub_10077F578();
    swift_allocError(&type metadata for CRLTransactableError, v31, 0, 0);
    *v32 = 3;
    swift_willThrow(v33);
    return;
  }
  v24 = v75;
  sub_100DBEE64(v3, (uint64_t)&off_1012942F0);
  if (!v24)
  {
    v25 = v3;
    v26 = (_QWORD *)(v74 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(v74 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v76, 0, 0);
    v27 = *v26;
    if (*(_QWORD *)(*v26 + 16))
    {
      swift_bridgeObjectRetain(*v26);
      v28 = sub_1008431EC(2);
      v29 = (int *)v73;
      if ((v30 & 1) != 0)
      {
        sub_1004CB7BC(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v77, &qword_1013E0230);
      }
      else
      {
        v77 = 0;
        v78 = 0;
        v79 = 0;
        v80 = 1;
      }
      swift_bridgeObjectRelease();
      if (v80 != 1)
      {
        sub_1004C4938((uint64_t)&v77, (uint64_t)v81, &qword_1013E0230);
        v34 = v72;
        if (v82)
        {
          v37 = swift_dynamicCast(v72, v81, (char *)&type metadata for Any + 8, v29, 6);
          v38 = v71;
          v39 = (_QWORD *)v71[7];
          ((void (*)(char *, _QWORD, uint64_t, int *))v39)(v34, v37 ^ 1u, 1, v29);
          if (((unsigned int (*)(char *, uint64_t, int *))v38[6])(v34, 1, v29) != 1)
          {
            v40 = v29[12];
            v41 = v70 + v40;
            v42 = v29[16];
            v43 = v70 + v42;
            v66 = v70 + v42;
            v44 = v29[20];
            v45 = v70 + v44;
            v65 = v70 + v44;
            v46 = v29[24];
            v64 = v70 + v46;
            v47 = v29[28];
            v75 = v70 + v47;
            v48 = (uint64_t)&v34[v40];
            v63 = &v34[v42];
            v71 = v39;
            v49 = (uint64_t)&v34[v44];
            v50 = (uint64_t)v34;
            v51 = (uint64_t)&v34[v46];
            v74 = v50 + v47;
            sub_1004C4938(v50, v70, &qword_1013E6B08);
            sub_1004C4938(v48, v41, (uint64_t *)&unk_101405E10);
            sub_1004C4938((uint64_t)v63, v43, &qword_1013E6B18);
            sub_1004C4938(v49, v45, &qword_101405E20);
            v52 = v51;
            v53 = v64;
            sub_1004C4938(v52, v64, &qword_101405E28);
            sub_1004C4938(v74, v75, &qword_101405E30);
            v72 = *(char **)(v25 + v67);
            v54 = v69;
            v55 = v69 + v29[12];
            v56 = v69 + v29[16];
            v57 = v69 + v29[20];
            v67 = v69 + v29[24];
            v58 = v29[28];
            v74 = v25;
            v59 = v69 + v58;
            sub_1004CB7BC(v70, v69, &qword_1013E6B08);
            sub_1004CB7BC(v41, v55, (uint64_t *)&unk_101405E10);
            sub_1004CB7BC(v66, v56, &qword_1013E6B18);
            sub_1004CB7BC(v65, v57, &qword_101405E20);
            sub_1004CB7BC(v53, v67, &qword_101405E28);
            v60 = v59;
            v25 = v74;
            sub_1004CB7BC(v75, v60, &qword_101405E30);
            ((void (*)(uint64_t, _QWORD, uint64_t, int *))v71)(v54, 0, 1, v29);
            v61 = v72;
            swift_beginAccess(&v72[OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData], v81, 33, 0);
            v62 = sub_1004B7878((unint64_t *)&unk_101405DD0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A468);
            swift_retain(v61);
            CRStruct_6.apply(_:)(v54, v68, v62);
            sub_1004CB800(v54, &qword_101405DF8);
            swift_endAccess(v81);
            swift_release(v61);
            v35 = (uint64_t *)&unk_101405E00;
            v36 = v70;
            goto LABEL_13;
          }
LABEL_12:
          v35 = &qword_101405DF8;
          v36 = (uint64_t)v34;
LABEL_13:
          sub_1004CB800(v36, v35);
          sub_100DB0D78(v25, (uint64_t)&off_1012942F0, 2u);
          return;
        }
        sub_1004CB800((uint64_t)v81, &qword_1013E0230);
LABEL_11:
        ((void (*)(char *, uint64_t, uint64_t, int *))v71[7])(v34, 1, 1, v29);
        goto LABEL_12;
      }
    }
    else
    {
      v77 = 0;
      v78 = 0;
      v79 = 0;
      v80 = 1;
      v29 = (int *)v73;
    }
    sub_1004CB800((uint64_t)&v77, (uint64_t *)&unk_1013DFC00);
    v34 = v72;
    goto LABEL_11;
  }
}

uint64_t sub_100B1B1A0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  swift_retain(v3);
  v4 = sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
  sub_100A63508(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_100AF7994(v6);
  swift_release(v3);
  swift_bridgeObjectRelease();
  v12 = v7;
  if ((a1 & 1) != 0)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    sub_1007409E0(1);
    v10 = v9;

    sub_10051257C(v10);
    return v12;
  }
  return v7;
}

uint64_t sub_100B1B3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v28)(void);
  id v29;
  _QWORD *v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v40 = sub_1004B804C(&qword_101405DF0);
  __chkstk_darwin(v40);
  v39 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - v3;
  __chkstk_darwin(v5);
  v38 = (char *)&v36 - v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v8 = *(_QWORD *)(v7 + 64);
  v36 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v41 = v7;
  result = swift_bridgeObjectRetain_n(v7, 2);
  v13 = 0;
  v14 = v39;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_5;
    }
    v31 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v31 >= v37)
      goto LABEL_26;
    v32 = *(_QWORD *)(v36 + 8 * v31);
    ++v13;
    if (!v32)
    {
      v13 = v31 + 1;
      if (v31 + 1 >= v37)
        goto LABEL_26;
      v32 = *(_QWORD *)(v36 + 8 * v13);
      if (!v32)
      {
        v13 = v31 + 2;
        if (v31 + 2 >= v37)
          goto LABEL_26;
        v32 = *(_QWORD *)(v36 + 8 * v13);
        if (!v32)
        {
          v13 = v31 + 3;
          if (v31 + 3 >= v37)
            goto LABEL_26;
          v32 = *(_QWORD *)(v36 + 8 * v13);
          if (!v32)
          {
            v13 = v31 + 4;
            if (v31 + 4 >= v37)
              goto LABEL_26;
            v32 = *(_QWORD *)(v36 + 8 * v13);
            if (!v32)
            {
              v33 = v31 + 5;
              if (v33 >= v37)
              {
LABEL_26:
                v34 = 0;
                goto LABEL_27;
              }
              v32 = *(_QWORD *)(v36 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  v13 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    goto LABEL_29;
                  if (v13 >= v37)
                    goto LABEL_26;
                  v32 = *(_QWORD *)(v36 + 8 * v13);
                  ++v33;
                  if (v32)
                    goto LABEL_24;
                }
              }
              v13 = v33;
            }
          }
        }
      }
    }
LABEL_24:
    v11 = (v32 - 1) & v32;
    v16 = __clz(__rbit64(v32)) + (v13 << 6);
LABEL_5:
    v17 = v41;
    v18 = *(_QWORD *)(v41 + 48);
    v19 = type metadata accessor for UUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v18 + *(_QWORD *)(v20 + 72) * v16;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v23 = (uint64_t)v38;
    v22(v38, v21, v19);
    v24 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v16);
    v25 = v40;
    *(_QWORD *)(v23 + *(int *)(v40 + 48)) = v24;
    sub_1004C4938(v23, (uint64_t)v4, &qword_101405DF0);
    v26 = *(int *)(v25 + 48);
    v22(v14, (uint64_t)v4, v19);
    v27 = *(_QWORD **)&v4[v26];
    *(_QWORD *)&v14[v26] = v27;
    v28 = *(uint64_t (**)(void))((swift_isaMask & *v27) + 0x350);
    v29 = v24;
    v30 = v27;
    LOBYTE(v27) = v28();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
    result = sub_1004CB800((uint64_t)v4, &qword_101405DF0);
    if ((v27 & 1) == 0)
    {
      v34 = 1;
LABEL_27:
      v35 = v41;
      swift_release(v41);
      swift_bridgeObjectRelease(v35);
      return v34;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100B1B718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v28)(void);
  id v29;
  _QWORD *v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v40 = sub_1004B804C(&qword_101405DF0);
  __chkstk_darwin(v40);
  v39 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - v3;
  __chkstk_darwin(v5);
  v38 = (char *)&v36 - v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  v8 = *(_QWORD *)(v7 + 64);
  v36 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v41 = v7;
  result = swift_bridgeObjectRetain_n(v7, 2);
  v13 = 0;
  v14 = v39;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_5;
    }
    v31 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v31 >= v37)
      goto LABEL_26;
    v32 = *(_QWORD *)(v36 + 8 * v31);
    ++v13;
    if (!v32)
    {
      v13 = v31 + 1;
      if (v31 + 1 >= v37)
        goto LABEL_26;
      v32 = *(_QWORD *)(v36 + 8 * v13);
      if (!v32)
      {
        v13 = v31 + 2;
        if (v31 + 2 >= v37)
          goto LABEL_26;
        v32 = *(_QWORD *)(v36 + 8 * v13);
        if (!v32)
        {
          v13 = v31 + 3;
          if (v31 + 3 >= v37)
            goto LABEL_26;
          v32 = *(_QWORD *)(v36 + 8 * v13);
          if (!v32)
          {
            v13 = v31 + 4;
            if (v31 + 4 >= v37)
              goto LABEL_26;
            v32 = *(_QWORD *)(v36 + 8 * v13);
            if (!v32)
            {
              v33 = v31 + 5;
              if (v33 >= v37)
              {
LABEL_26:
                v34 = 0;
                goto LABEL_27;
              }
              v32 = *(_QWORD *)(v36 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  v13 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    goto LABEL_29;
                  if (v13 >= v37)
                    goto LABEL_26;
                  v32 = *(_QWORD *)(v36 + 8 * v13);
                  ++v33;
                  if (v32)
                    goto LABEL_24;
                }
              }
              v13 = v33;
            }
          }
        }
      }
    }
LABEL_24:
    v11 = (v32 - 1) & v32;
    v16 = __clz(__rbit64(v32)) + (v13 << 6);
LABEL_5:
    v17 = v41;
    v18 = *(_QWORD *)(v41 + 48);
    v19 = type metadata accessor for UUID(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v18 + *(_QWORD *)(v20 + 72) * v16;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v23 = (uint64_t)v38;
    v22(v38, v21, v19);
    v24 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v16);
    v25 = v40;
    *(_QWORD *)(v23 + *(int *)(v40 + 48)) = v24;
    sub_1004C4938(v23, (uint64_t)v4, &qword_101405DF0);
    v26 = *(int *)(v25 + 48);
    v22(v14, (uint64_t)v4, v19);
    v27 = *(_QWORD **)&v4[v26];
    *(_QWORD *)&v14[v26] = v27;
    v28 = *(uint64_t (**)(void))((swift_isaMask & *v27) + 0x1D8);
    v29 = v24;
    v30 = v27;
    LOBYTE(v27) = v28();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v19);
    result = sub_1004CB800((uint64_t)v4, &qword_101405DF0);
    if ((v27 & 1) != 0)
    {
      v34 = 1;
LABEL_27:
      v35 = v41;
      swift_release(v41);
      swift_bridgeObjectRelease(v35);
      return v34;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_100B1BA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[32];
  uint64_t v23;
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for NSFastEnumerationIterator(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + 24);
  v6 = objc_msgSend(objc_allocWithZone((Class)CRLDocumentModelEnumerator), "initWithRootModelObject:flags:filter:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer), 0, 0);
  v27 = (uint64_t)_swiftEmptyArrayStorage;
  NSEnumerator.makeIterator()();
  v7 = sub_1004B7878(&qword_101405DE8, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()(v1, v7);
  while (v26)
  {
    sub_10050CB14(&v25, v24);
    sub_1004CB6E8((uint64_t)v24, (uint64_t)v22);
    v9 = type metadata accessor for CRLBoardItemBase(0);
    if ((swift_dynamicCast(&v23, v22, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
      v23 = 0;
    v10 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
    v11 = v23;
    if (v23)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v13 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized Array._endMutation()(v8);
    }
    dispatch thunk of IteratorProtocol.next()(v1, v7);
  }
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  v14 = v27;
  if (!((unint64_t)v27 >> 62))
  {
    v15 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_12;
LABEL_26:

    swift_bridgeObjectRelease(v14);
    return;
  }
  if (v27 < 0)
    v21 = v27;
  else
    v21 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v15 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v14);
  if (!v15)
    goto LABEL_26;
LABEL_12:
  if (v15 >= 1)
  {
    for (i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
        v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
      else
        v18 = (char *)*(id *)(v14 + 8 * i + 32);
      v19 = v18;
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      swift_retain(v20);

      if ((*(_BYTE *)(v20 + 16) & 1) != 0)
      {
        v17 = *(_QWORD *)(v20 + 24);
        swift_release(v20);
        if (v17 > v5)
          v5 = v17;
      }
      else
      {
        swift_release(v20);
      }
    }
    goto LABEL_26;
  }
  __break(1u);
}

void sub_100B1BD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v24[32];
  uint64_t v25;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v1 = type metadata accessor for NSFastEnumerationIterator(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + 32);
  v6 = objc_msgSend(objc_allocWithZone((Class)CRLDocumentModelEnumerator), "initWithRootModelObject:flags:filter:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer), 0, 0);
  v29 = (uint64_t)_swiftEmptyArrayStorage;
  NSEnumerator.makeIterator()();
  v7 = sub_1004B7878(&qword_101405DE8, (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator, (uint64_t)&protocol conformance descriptor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()(v1, v7);
  while (v28)
  {
    sub_10050CB14(&v27, v26);
    sub_1004CB6E8((uint64_t)v26, (uint64_t)v24);
    v9 = type metadata accessor for CRLBoardItemBase(0);
    if ((swift_dynamicCast(&v25, v24, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
      v25 = 0;
    v10 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
    v11 = v25;
    if (v25)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v13 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized Array._endMutation()(v8);
    }
    dispatch thunk of IteratorProtocol.next()(v1, v7);
  }
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  v14 = v29;
  if (!((unint64_t)v29 >> 62))
  {
    v15 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_12;
LABEL_26:

    swift_bridgeObjectRelease();
    return;
  }
  if (v29 < 0)
    v23 = v29;
  else
    v23 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v29);
  v15 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_26;
LABEL_12:
  if (v15 >= 1)
  {
    for (i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
      else
        v19 = (char *)*(id *)(v14 + 8 * i + 32);
      v20 = v19;
      v21 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v22 = *(_QWORD *)(*(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 24);
      if (sub_1001E9730() >= v22)
      {
        v17 = *(_QWORD *)&v20[v21];
        swift_retain(v17);

        v18 = *(_QWORD *)(v17 + 32);
        swift_release(v17);
        if (v18 > v5)
          v5 = v18;
      }
      else
      {

      }
    }
    goto LABEL_26;
  }
  __break(1u);
}

void sub_100B1C080(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, unint64_t, __n128);
  __n128 v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD, __n128);
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, unint64_t, __n128);
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, unint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(__n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(__n128);
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  double *v79;
  char *v80;
  double *v81;
  char *v82;
  uint64_t v83;
  double *v84;
  char *v85;
  double *v86;
  double *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  unint64_t v109;
  char v110[112];
  char v111[8];
  double *v112;

  v5 = v4;
  v107 = a3;
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - v12;
  v108 = v3;
  v106 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v15 = v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  LODWORD(v109) = a2;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v111, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v15, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
    v16 = sub_1004B7878((unint64_t *)&unk_101405DD0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A468);
    swift_retain(v14);
    CRStruct_6.copy(renamingReferences:)(0, v8, v16);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  }
  else
  {
    sub_1004B8460(v15, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v14);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v17 = type metadata accessor for CRCodableVersion(0);
  v18 = sub_1004F2A1C(v17, (uint64_t)qword_10147EB08);
  v19 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
  v20 = CRDT.serializedData(_:version:)(a1, v18, v8, v19);
  if (v5)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    swift_release(v14);
  }
  else
  {
    v22 = v21;
    v105 = v20;
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    swift_release(v14);
    v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
    v24 = v108;
    v25 = *(_QWORD *)(*(_QWORD *)(v108 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                    + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v26 = *(uint64_t (**)(uint64_t, unint64_t, __n128))(*(_QWORD *)v25 + 456);
    v27 = swift_retain(v25);
    v28 = v109;
    v103 = v26(a1, v109 & 1, v27);
    v104 = v29;
    swift_release(v25);
    v30 = *(_QWORD *)(*(_QWORD *)(v24 + v23) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v31 = *(uint64_t (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)v30 + 464);
    v32 = swift_retain(v30);
    v33 = v31(a1, v28 & 1, v32);
    v35 = v34;
    swift_release(v30);
    v100 = v23;
    v102 = v33;
    v101 = v35;
    v36 = OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer;
    v37 = *(_QWORD *)(*(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer)
                    + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v38 = *(uint64_t (**)(uint64_t, unint64_t, __n128))(*(_QWORD *)v37 + 456);
    v39 = swift_retain(v37);
    v40 = v109 & 1;
    v41 = v38(a1, v40, v39);
    v43 = v42;
    swift_release(v37);
    v99 = v41;
    v109 = v22;
    v44 = *(_QWORD *)(*(_QWORD *)(v24 + v36) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v45 = *(uint64_t (**)(uint64_t, unint64_t, __n128))(*(_QWORD *)v44 + 464);
    v46 = swift_retain(v44);
    v47 = v45(a1, v40, v46);
    v49 = v48;
    swift_release(v44);
    v50 = sub_1004B804C(&qword_1013EB970);
    inited = swift_initStackObject(v50, v110);
    v52 = v47;
    v98 = v47;
    v53 = inited;
    *(_OWORD *)(inited + 16) = xmmword_100F05060;
    *(_BYTE *)(inited + 32) = 0;
    v54 = v105;
    v55 = v109;
    *(_QWORD *)(v53 + 40) = v105;
    *(_QWORD *)(v53 + 48) = v55;
    *(_BYTE *)(v53 + 56) = 1;
    v56 = v103;
    v57 = v104;
    *(_QWORD *)(v53 + 64) = v103;
    *(_QWORD *)(v53 + 72) = v57;
    *(_BYTE *)(v53 + 80) = 2;
    v58 = v43;
    v59 = v101;
    *(_QWORD *)(v53 + 88) = v102;
    *(_QWORD *)(v53 + 96) = v59;
    *(_BYTE *)(v53 + 104) = 3;
    v60 = v99;
    *(_QWORD *)(v53 + 112) = v99;
    *(_QWORD *)(v53 + 120) = v58;
    *(_BYTE *)(v53 + 128) = 4;
    *(_QWORD *)(v53 + 136) = v52;
    *(_QWORD *)(v53 + 144) = v49;
    sub_1004BE310(v54, v55);
    sub_1004BE310(v56, v57);
    sub_1004BE310(v102, v59);
    v97 = v58;
    sub_1004BE310(v60, v58);
    v96 = v49;
    sub_1004BE310(v98, v49);
    sub_1008D5B0C(v53);
    v95 = v61;
    v62 = v100;
    v63 = v108;
    v64 = *(_QWORD *)(*(_QWORD *)(v108 + v100) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v65 = *(uint64_t (**)(__n128))(*(_QWORD *)v64 + 568);
    v66 = swift_retain(v64);
    v67 = v65(v66);
    swift_release(v64);
    v68 = *(_QWORD *)(*(_QWORD *)(v63 + v62) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v69 = *(uint64_t (**)(__n128))(*(_QWORD *)v68 + 576);
    v70 = swift_retain(v68);
    v71 = v69(v70);
    swift_release(v68);
    v72 = sub_10077BE6C(v71, v67);
    v73 = sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
    v94 = sub_10077BE6C(v72, v73);
    v74 = *(_QWORD **)(v63 + v106);
    v106 = v74[3];
    v76 = v74[4];
    v75 = v74[5];
    v93 = v76;
    v92 = v75;
    v77 = *(char **)(v63 + v62);
    v78 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v79 = *(double **)&v77[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    v80 = v77;
    if (!v79)
    {
      sub_100740DA4();
      v79 = *(double **)&v77[v78];
    }
    if (v79)
      v81 = v79;
    else
      v81 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v79);

    v82 = *(char **)(v63 + v36);
    v83 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v84 = *(double **)&v82[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    v85 = v82;
    if (!v84)
    {
      sub_100740DA4();
      v84 = *(double **)&v82[v83];
    }
    if (v84)
      v86 = v84;
    else
      v86 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v84);

    v112 = v81;
    sub_10061EAC8((uint64_t)v86);
    v87 = sub_100520ADC((uint64_t)v112);
    sub_1004BBBC8(v105, v109);
    sub_1004BBBC8(v103, v104);
    sub_1004BBBC8(v102, v101);
    sub_1004BBBC8(v99, v97);
    sub_1004BBBC8(v98, v96);
    swift_bridgeObjectRelease();
    v88 = v107;
    v89 = v93;
    *v107 = v106;
    v88[1] = v89;
    v88[2] = v92;
    *(_OWORD *)(v88 + 3) = xmmword_100F27600;
    v90 = v94;
    v88[5] = v95;
    v88[6] = v90;
    v88[7] = (uint64_t)v87;
  }
}

void sub_100B1C950(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  char *v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  double *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  objc_super v52;
  char v53[24];
  char v54[72];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[32];
  uint64_t v59;

  v51 = a3;
  v49 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v47 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardScenesCRDTData(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v46 - v10;
  v12 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v50 = a2;
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v14 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v58, 0, 0);
  v15 = type metadata accessor for CRLBoardCRDTData(0);
  sub_1004B8460(v14 + *(int *)(v15 + 36), (uint64_t)v11, type metadata accessor for CRLBoardScenesCRDTData);
  swift_retain(v13);
  v16 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  v59 = a1;
  CRDictionary.subscript.getter(a1, v16);
  v17 = v55;
  v18 = v56;
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardScenesCRDTData);
  swift_release(v13);
  if (v18)
  {
    v46 = v17;
    v19 = *(_QWORD *)(v50 + v12);
    v20 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v53, 0, 0);
    sub_1004B8460(v20 + *(int *)(v15 + 36), (uint64_t)v9, type metadata accessor for CRLBoardScenesCRDTData);
    swift_retain(v19);
    v21 = sub_1004B804C(&qword_101405CC0);
    v22 = v59;
    CRDictionary.subscript.getter(v59, v21);
    if (v57)
    {
      v23 = v55;
      v24 = v56;
      swift_bridgeObjectRelease(v57);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardScenesCRDTData);
      v25 = swift_release(v19);
      v26 = v48;
      v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v48 + 16);
      v28 = v47;
      v29 = v49;
      v27(v47, v22, v49, v25);
      v30 = (objc_class *)type metadata accessor for CRLSceneInfo(0);
      v31 = (char *)objc_allocWithZone(v30);
      *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo] = 0;
      *(_QWORD *)&v31[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass] = 0;
      v32 = v18;
      v33 = v31;
      ObservationRegistrar.init()();
      ((void (*)(char *, char *, uint64_t))v27)(&v33[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v28, v29);
      v34 = &v33[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name];
      *(_QWORD *)v34 = v46;
      *((_QWORD *)v34 + 1) = v32;
      v35 = (double *)&v33[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      *v35 = *(float *)&v23;
      v35[1] = *((float *)&v23 + 1);
      v35[2] = *(float *)&v24;
      v35[3] = *((float *)&v24 + 1);

      v52.receiver = v33;
      v52.super_class = v30;
      v36 = objc_msgSendSuper2(&v52, "init");
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
      goto LABEL_8;
    }
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardScenesCRDTData);
    swift_bridgeObjectRelease(v18);
    swift_release(v19);
  }
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  swift_beginAccess(&static OS_os_log.crlScenes, &v55, 0, 0);
  v37 = (void *)static OS_os_log.crlScenes;
  v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v38, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v40 = v37;
  v41 = UUID.uuidString.getter(v40);
  v43 = v42;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v41;
  *(_QWORD *)(inited + 40) = v43;
  v44 = static os_log_type_t.error.getter();
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v44, "Failed creating scene info with UUID %{public}", 46, 2, inited);
  swift_setDeallocating(inited);
  v45 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v45);

  v36 = 0;
LABEL_8:
  *v51 = v36;
}

uint64_t sub_100B1CDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  double *v31;
  __n128 v32;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  char v37[24];

  v7 = v6;
  v34 = a1;
  v35 = a2;
  v12 = type metadata accessor for CRLSceneDataValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v20 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v20, v37, 0, 0);
  v21 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v20 + *(int *)(v21 + 36), v15);
  v22 = CROrderedSet.count.getter(v15);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v23 = sub_100B2AFB8(v22);
  v25 = v24;
  v26 = *(_QWORD *)(v7 + v19);
  swift_beginAccess(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v36, 33, 0);
  v27 = type metadata accessor for UUID(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v29 = v34;
  v28(v14, v34, v27);
  v30 = (uint64_t *)&v14[*(int *)(v12 + 20)];
  *v30 = v23;
  v30[1] = v25;
  v31 = (double *)&v14[*(int *)(v12 + 24)];
  *v31 = a3;
  v31[1] = a4;
  v31[2] = a5;
  v31[3] = a6;
  swift_retain(v26);
  swift_bridgeObjectRetain(v25);
  sub_1005C6ECC((uint64_t)v14);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLSceneDataValue);
  swift_endAccess(v36);
  swift_release(v26);
  v32 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v28)(v35, v29, v27, v32);
}

id sub_100B1D110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  char *v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  char *v31;
  char *v32;
  double *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t inited;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;
  char v52[24];
  char v53[72];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[32];

  v2 = v1;
  v49 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardScenesCRDTData(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v46 - v9;
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v13 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v57, 0, 0);
  v14 = type metadata accessor for CRLBoardCRDTData(0);
  sub_1004B8460(v13 + *(int *)(v14 + 36), (uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
  swift_retain(v12);
  v15 = sub_1004B804C((uint64_t *)&unk_101405CB0);
  v50 = a1;
  CRDictionary.subscript.getter(a1, v15);
  v16 = v54;
  v17 = v55;
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
  swift_release(v12);
  if (v17)
  {
    v18 = *(_QWORD *)(v2 + v11);
    v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v52, 0, 0);
    sub_1004B8460(v19 + *(int *)(v14 + 36), (uint64_t)v8, type metadata accessor for CRLBoardScenesCRDTData);
    swift_retain(v18);
    v20 = sub_1004B804C(&qword_101405CC0);
    v21 = v50;
    CRDictionary.subscript.getter(v50, v20);
    if (v56)
    {
      v22 = v54;
      v23 = v55;
      swift_bridgeObjectRelease(v56);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardScenesCRDTData);
      v24 = swift_release(v18);
      v25 = v48;
      v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v48 + 16);
      v27 = v47;
      v28 = v49;
      v26(v47, v21, v49, v24);
      v29 = (objc_class *)type metadata accessor for CRLSceneInfo(0);
      v30 = (char *)objc_allocWithZone(v29);
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo] = 0;
      *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass] = 0;
      v31 = v30;
      ObservationRegistrar.init()();
      ((void (*)(char *, char *, uint64_t))v26)(&v31[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v27, v28);
      v32 = &v31[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name];
      *(_QWORD *)v32 = v16;
      *((_QWORD *)v32 + 1) = v17;
      v33 = (double *)&v31[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      *v33 = *(float *)&v22;
      v33[1] = *((float *)&v22 + 1);
      v33[2] = *(float *)&v23;
      v33[3] = *((float *)&v23 + 1);

      v51.receiver = v31;
      v51.super_class = v29;
      v34 = objc_msgSendSuper2(&v51, "init");
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
      return v34;
    }
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardScenesCRDTData);
    swift_bridgeObjectRelease(v17);
    swift_release(v18);
  }
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  swift_beginAccess(&static OS_os_log.crlScenes, &v54, 0, 0);
  v35 = (void *)static OS_os_log.crlScenes;
  v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v36, v53);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v38 = v35;
  v39 = UUID.uuidString.getter(v38);
  v41 = v40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v39;
  *(_QWORD *)(inited + 40) = v41;
  v43 = static os_log_type_t.default.getter(v42);
  sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v43, "Failed retrieving scene data with UUID %{public}", 48, 2, inited);
  swift_setDeallocating(inited);
  v44 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v44);

  return 0;
}

uint64_t sub_100B1DADC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  char v64;
  _QWORD *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  char v84[112];
  _QWORD v85[2];
  char v86[8];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v71[0] = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v71 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1004B804C((uint64_t *)&unk_101405DA0);
  v78 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v14 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = a1;
  v85[0] = a1;
  v79 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15, v86, 0, 0);
  v76 = type metadata accessor for CRLBoardCRDTData(0);
  v16 = v15 + *(int *)(v76 + 36);
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v73(v12, v16, v9);
  v80 = v1;
  v17 = v1;
  v18 = sub_10054B7E8((uint64_t)v12, (uint64_t)v17);
  v71[1] = 0;
  v72 = v17;

  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v74 = v12;
  v20 = v12;
  v21 = v82;
  v75 = v9;
  v19(v20, v9);
  v83[0] = v18;
  v22 = sub_1004B804C(&qword_1013F6740);
  v23 = sub_1004CBA30(&qword_101405DB0, &qword_1013F6740, (uint64_t)&protocol conformance descriptor for [A]);
  v24 = sub_1004B7878(&qword_101405DB8, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
  BidirectionalCollection<>.difference<A>(from:)(v83, v22, v22, v23, v23, v24);
  v25 = swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(CollectionDifference.insertions.getter(v21, v25) + 16);
  v27 = swift_bridgeObjectRelease();
  v77 = v14;
  v28 = *(_QWORD *)(CollectionDifference.removals.getter(v21, v27) + 16);
  swift_bridgeObjectRelease();
  if (v26 != v28)
  {
    v71[0] = v19;
    v39 = v79;
    v40 = v80;
    if (qword_1013DD7E0 != -1)
      swift_once(&qword_1013DD7E0, sub_100A03F14);
    swift_beginAccess(&static OS_os_log.crlScenes, v85, 0, 0);
    v41 = (void *)static OS_os_log.crlScenes;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v42, v84);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    type metadata accessor for CRLSceneInfo(0);
    v44 = v41;
    v46 = Array.description.getter(v45);
    v48 = v47;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v49 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v46;
    *(_QWORD *)(inited + 64) = v49;
    *(_QWORD *)(inited + 40) = v48;
    v50 = *(_QWORD *)&v40[v39] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    v51 = swift_beginAccess(v50, v83, 0, 0);
    v52 = (uint64_t)v74;
    v53 = v75;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v73)(v74, v50 + *(int *)(v76 + 36), v75, v51);
    v54 = v72;
    sub_10054B7E8(v52, (uint64_t)v54);

    v55.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v71[0])(v52, v53);
    v56 = Array.description.getter(v55);
    v58 = v57;
    v59 = swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v49;
    *(_QWORD *)(inited + 72) = v56;
    *(_QWORD *)(inited + 80) = v58;
    v60 = static os_log_type_t.default.getter(v59);
    sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v60, "Reordered scene infos (%{public}@) do not match existing scene infos (%{public}@).", 82, 2, inited);
    swift_setDeallocating(inited);
    v61 = *(_QWORD *)(inited + 16);
    v62 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v61, v62);

    v64 = 0;
    v21 = v82;
    goto LABEL_21;
  }
  v29 = *(char **)&v80[v79];
  v30 = v81;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0)
      v70 = v81;
    else
      v70 = v81 & 0xFFFFFFFFFFFFFF8;
    swift_retain(*(_QWORD *)&v80[v79]);
    swift_bridgeObjectRetain(v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(*(_QWORD *)&v80[v79]);
  }
  v32 = _swiftEmptyArrayStorage;
  if (!v31)
  {
LABEL_20:
    swift_beginAccess(&v29[OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData], v85, 33, 0);
    v64 = sub_1005C75D8((uint64_t)v32);
    swift_endAccess(v85);
    swift_release(v29);
    v63 = swift_bridgeObjectRelease();
LABEL_21:
    (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v77, v21, v63);
    return v64 & 1;
  }
  v85[0] = _swiftEmptyArrayStorage;
  result = sub_100600724(0, v31 & ~(v31 >> 63), 0);
  if ((v31 & 0x8000000000000000) == 0)
  {
    v80 = v29;
    v32 = (double *)v85[0];
    if ((v30 & 0xC000000000000001) != 0)
    {
      v34 = 0;
      do
      {
        v35 = v30;
        v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v30);
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v36 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v3);
        swift_unknownObjectRelease(v36);
        v85[0] = v32;
        v38 = *((_QWORD *)v32 + 2);
        v37 = *((_QWORD *)v32 + 3);
        if (v38 >= v37 >> 1)
        {
          sub_100600724(v37 > 1, v38 + 1, 1);
          v32 = (double *)v85[0];
        }
        ++v34;
        *((_QWORD *)v32 + 2) = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v32+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v38, v8, v3);
        v30 = v35;
      }
      while (v31 != v34);
    }
    else
    {
      v65 = (_QWORD *)(v30 + 32);
      v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
      v67 = v71[0];
      do
      {
        v66(v67, *v65 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v3);
        v85[0] = v32;
        v69 = *((_QWORD *)v32 + 2);
        v68 = *((_QWORD *)v32 + 3);
        if (v69 >= v68 >> 1)
        {
          sub_100600724(v68 > 1, v69 + 1, 1);
          v67 = v71[0];
          v32 = (double *)v85[0];
        }
        *((_QWORD *)v32 + 2) = v69 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v32+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v69, v67, v3);
        ++v65;
        --v31;
      }
      while (v31);
    }
    v21 = v82;
    v29 = v80;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_100B1E398()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoard(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100B1E518()
{
  return type metadata accessor for CRLBoard(0);
}

uint64_t type metadata accessor for CRLBoard(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101405BB8, (uint64_t)&nominal type descriptor for CRLBoard);
}

void sub_100B1E534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[20];

  v5[0] = "\b";
  v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_100B1E618(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[7] = &unk_100F27640;
    v5[4] = v4;
    v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[15] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[17] = "\b";
    v5[18] = &unk_100F27658;
    v5[19] = &unk_100F27670;
    swift_updateClassMetadata2(a1, 256, 20, v5, a1 + 80);
  }
}

void sub_100B1E618(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_101405BC8)
  {
    v2 = type metadata accessor for CRLBoard.RealTimeSessionInfo(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_101405BC8);
  }
}

uint64_t type metadata accessor for CRLBoard.RealTimeSessionInfo(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101405C60, (uint64_t)&nominal type descriptor for CRLBoard.RealTimeSessionInfo);
}

double sub_100B1E680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v9[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v5 = v4 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v9, 0, 0);
  sub_1004B8460(v5, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v6);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_100B1E768()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext)).n128_u64[0];
  return result;
}

double sub_100B1E778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext) = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

double sub_100B1E790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v9[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v5 = v4 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v9, 0, 0);
  sub_1004B8460(v5, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v6);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

char *sub_100B1E874()
{
  return sub_100B18E54();
}

void sub_100B1E898(uint64_t a1, uint64_t a2)
{
  sub_100B1AAFC(a1, a2);
}

double sub_100B1E8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  swift_retain(v2);
  sub_100DD0B74();
  swift_release(v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_opportunisticallyBuiltAffectedItemSetIncludingParents) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100B1E908()
{
  void **v0;
  void *v1;
  Class isa;
  Class v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  type metadata accessor for UUID(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = Array._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v1, "resolveAncestorsFor:ignoringIds:", isa, v3);

  v5 = type metadata accessor for CRLBoardItem(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  return v7;
}

double sub_100B1E9D0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)).n128_u64[0];
  return result;
}

double sub_100B1EA04@<D0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;

  sub_100B1C080(a1, a2, (uint64_t *)v8);
  if (!v3)
  {
    v6 = v8[1];
    *a3 = v8[0];
    a3[1] = v6;
    result = *(double *)&v9;
    v7 = v10;
    a3[2] = v9;
    a3[3] = v7;
  }
  return result;
}

uint64_t sub_100B1EA44(uint64_t a1)
{
  return sub_100B122DC(a1) & 1;
}

id sub_100B1EA80(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  v12 = sub_100B10D70((uint64_t)v10);
  if (v12)
  {
    v13 = v12;
    v14 = a4(0);
    v15 = (void *)swift_dynamicCastClass(v13, v14);

    if (!v15)
      swift_unknownObjectRelease(v13);
  }
  else
  {

    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15;
}

double sub_100B1EB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  double result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  __n128 v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[72];
  char v49[24];
  uint64_t v50;
  _BYTE v51[24];
  _BYTE v52[24];
  char v53[32];

  v4 = v3;
  v46 = a2;
  v47 = a1;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v14 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v53, 0, 0);
  sub_1004B8460(v14, v8, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v13);
  v15 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v15);
  sub_1004B84A4(v8, type metadata accessor for CRLBoardCRDTData);
  v16 = v13;
  v17 = a3;
  swift_release(v16);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  LOBYTE(v8) = dispatch thunk of static Equatable.== infix(_:_:)(a3, v12);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  if ((v8 & 1) == 0)
  {
    v20 = v47;
    if (v47)
    {
      v21 = (_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
      swift_beginAccess(v21, v52, 0, 0);
      v22 = *v21;
      v23 = *(_QWORD *)(*v21 + 16);
      v24 = swift_unknownObjectRetain(v20);
      if (v23)
      {
        swift_bridgeObjectRetain(v22);
        v25 = sub_100842EFC(v17);
        if ((v26 & 1) != 0)
        {
          v27 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 16 * v25);
          swift_unknownObjectRetain(v27);
          swift_bridgeObjectRelease();
          if (v27 == v20)
          {
            v24 = swift_unknownObjectRelease(v20);
          }
          else
          {
            v45 = v27;
            if (qword_1013DD6B8 != -1)
              swift_once(&qword_1013DD6B8, sub_100A00A6C);
            swift_beginAccess(&static OS_os_log.crlDefault, v49, 0, 0);
            v28 = (void *)static OS_os_log.crlDefault;
            v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v29, v48);
            *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
            v44 = v28;
            v31 = UUID.uuidString.getter(v44);
            v32 = v17;
            v34 = v33;
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v31;
            *(_QWORD *)(inited + 40) = v34;
            v17 = v32;
            v36 = static os_log_type_t.default.getter(v35);
            v37 = v44;
            sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v36, "Overwriting an existing object in objectUUIDMap with a different instance for the same UUID %@.", 95, 2, inited);
            swift_setDeallocating(inited);
            v38 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 1, v38);
            swift_unknownObjectRelease(v45);

            v20 = v47;
          }
        }
        else
        {
          v24 = swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v17, v9, v24);
      swift_beginAccess(v21, v51, 33, 0);
      swift_unknownObjectRetain(v20);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v21);
      v50 = *v21;
      *v21 = 0x8000000000000000;
      sub_10082540C(v20, v46, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
      *v21 = v50;
      v42 = swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t, __n128))v18)(v12, v9, v42);
      swift_endAccess(v51);
      v40 = v20;
    }
    else
    {
      swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap, v52, 33, 0);
      v39 = sub_100846B80(v17);
      swift_endAccess(v52);
      v40 = v39;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v40).n128_u64[0];
  }
  return result;
}

double sub_100B1EF70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t ObjectType;
  double v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  uint64_t v27;
  _BYTE v28[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for CRLBoardItem(0);
  v11 = swift_dynamicCastClass(a1, v10);
  if (v11)
  {
    v13 = v11;
    v14 = type metadata accessor for CRLTransactableHashableWrapper();
    v15 = swift_allocObject(v14, 32, 7);
    *(_QWORD *)(v15 + 16) = v13;
    *(_QWORD *)(v15 + 24) = &off_10127C5E0;
    v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData);
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData, v28, 0, 0);
    v17 = *v16;
    swift_unknownObjectRetain_n(a1, 2);
    swift_bridgeObjectRetain(v17);
    v18 = sub_100621710(v15, v17);
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_4;
    ObjectType = swift_getObjectType(a1);
    (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
    v20 = sub_100B1EB5C(a1, a2, (uint64_t)v9);
    (*(void (**)(_BYTE *, uint64_t, double))(v7 + 8))(v9, v6, v20);
    v21 = v16[1];
    swift_bridgeObjectRetain(v21);
    v22 = sub_100621710(v15, v21);
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
LABEL_4:
      swift_unknownObjectRelease(a1);
      v23 = v15;
    }
    else
    {
      swift_beginAccess(v16, v26, 33, 0);
      swift_retain(v15);
      sub_100AD58F8(&v27, v15);
      v24 = v27;
      swift_endAccess(v26);
      swift_release(v15);
      swift_unknownObjectRelease(a1);
      v23 = v24;
    }
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

void sub_100B1F150(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  id v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[32];
  _BYTE v41[32];

  v2 = v1;
  v31 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v11 = v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v41, 0, 0);
  sub_1004B8460(v11, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  v33 = type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
  swift_retain(v10);
  v32 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v32);
  LODWORD(v11) = v40[0];
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release(v10);
  if ((_DWORD)v11 == 1)
  {
    sub_100DBEE64(v2, (uint64_t)&off_1012942F0);
    v30[1] = a1;
    if (qword_1013DD858 != -1)
      swift_once(&qword_1013DD858, sub_100A05554);
    swift_beginAccess(&static OS_os_log.boardStore, &v39, 0, 0);
    v30[0] = (id)static OS_os_log.boardStore;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v12, &v38);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v14 = *(_QWORD *)(v2 + v34);
    v15 = v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v37, 0, 0);
    sub_1004B8460(v15, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    v30[0] = v30[0];
    swift_retain(v14);
    v16 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v16);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    swift_release(v14);
    v18 = UUID.uuidString.getter(v17);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v18;
    *(_QWORD *)(inited + 40) = v20;
    v22 = static os_log_type_t.default.getter(v21);
    v23 = v30[0];
    sub_100A06EBC((uint64_t)v30[0], &_mh_execute_header, v22, "Marking board as not discardable: %{public}@", 44, 2, inited);
    swift_setDeallocating(inited);
    v24 = *(_QWORD *)(inited + 16);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, v24, v25);

    v31 = v2;
    v26 = *(_QWORD *)(v2 + v34);
    v27 = v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v36, 0, 0);
    sub_1004B8460(v27, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v26);
    v28 = v32;
    CRRegister.wrappedValue.getter(v32);
    LODWORD(v24) = v40[0];
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    if ((_DWORD)v24 == 1)
    {
      v29 = swift_beginAccess(v27, v40, 33, 0);
      v35 = 0;
      CRRegister.wrappedValue.setter(&v35, v28, v29);
      swift_endAccess(v40);
    }
    swift_release(v26);
    sub_100DB0D78(v31, (uint64_t)&off_1012942F0, 2u);
  }
}

void sub_100B1F658()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  Class isa;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(__n128);
  char *v50;
  __n128 v51;
  char *v52;
  uint64_t (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t ObjectType;
  void (*v86)(uint64_t, uint64_t, __n128);
  __n128 v87;
  char *v88;
  Class v89;
  uint64_t v90;
  id v91;
  _QWORD *v92;
  Class v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  void (*v115)(void);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t *v123;
  CKRecordID v124;
  Swift::String v125;
  uint64_t v126;
  uint64_t *v127;
  __int128 v128;
  uint64_t (*v129)(void);
  char *v130;
  char *v131;
  uint64_t v132;
  id v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  char *v143;
  unint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150[24];
  _QWORD v151[5];
  _QWORD v152[6];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v1);
  v130 = (char *)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v143 = (char *)&v126 - v4;
  inited = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(inited - 8);
  __chkstk_darwin(inited);
  v138 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v126 - v9;
  __chkstk_darwin(v11);
  v140 = (char *)&v126 - v12;
  v145 = v0;
  v13 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData];
  swift_beginAccess(v13, v150, 1, 0);
  v127 = v13;
  v14 = *v13;
  if ((*v13 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *v13;
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v16 = __CocoaSet.makeIterator()(v15);
    v17 = type metadata accessor for CRLTransactableHashableWrapper();
    v18 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v19 = Set.Iterator.init(_cocoa:)(v151, v16, v17, v18);
    v14 = v151[0];
    v139 = v151[1];
    v20 = v151[2];
    v21 = v151[3];
    v22 = v151[4];
  }
  else
  {
    v23 = -1 << *(_BYTE *)(v14 + 32);
    v24 = *(_QWORD *)(v14 + 56);
    v139 = v14 + 56;
    v20 = ~v23;
    v25 = -v23;
    if (v25 < 64)
      v26 = ~(-1 << v25);
    else
      v26 = -1;
    v22 = v26 & v24;
    swift_bridgeObjectRetain(v14);
    v21 = 0;
  }
  v132 = v20;
  v135 = (char *)(v14 & 0x7FFFFFFFFFFFFFFFLL);
  v136 = (char *)((unint64_t)(v20 + 64) >> 6);
  v134 = (char *)&type metadata for Swift.AnyObject + 8;
  v141 = v6;
  v142 = (void (*)(char *, uint64_t))v14;
  v146 = v10;
  while (1)
  {
    if (v14 < 0)
    {
      v30 = __CocoaSet.Iterator.next()(v19);
      if (!v30)
        goto LABEL_45;
      v31 = v30;
      v148 = v30;
      v32 = type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(v152, &v148, v134, v32, 7);
      v33 = v152[0];
      swift_unknownObjectRelease(v31);
      v29 = v21;
      v27 = v22;
      if (!v33)
        goto LABEL_45;
      goto LABEL_33;
    }
    if (v22)
    {
      v27 = (v22 - 1) & v22;
      v28 = __clz(__rbit64(v22)) | (v21 << 6);
      v29 = v21;
      goto LABEL_32;
    }
    v34 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      sub_100757E04(&_mh_execute_header, (uint64_t)"fixUp()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1087, "Unable to find the parent of child %@%@ with parentUUID %@", 58, 2u, inited);
      sub_100518FC0(inited, (uint64_t)"Unable to find the parent of child %@%@ with parentUUID %@");
      sub_100519194(inited, (uint64_t)"fixUp()", 7, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1087, (uint64_t)"Unable to find the parent of child %@%@ with parentUUID %@", 58, 2u);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v124, v125);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
      __break(1u);
      return;
    }
    if (v34 >= (uint64_t)v136)
      goto LABEL_45;
    v35 = *(_QWORD *)(v139 + 8 * v34);
    v29 = v21 + 1;
    if (!v35)
    {
      v29 = v21 + 2;
      if (v21 + 2 >= (uint64_t)v136)
        goto LABEL_45;
      v35 = *(_QWORD *)(v139 + 8 * v29);
      if (!v35)
      {
        v29 = v21 + 3;
        if (v21 + 3 >= (uint64_t)v136)
          goto LABEL_45;
        v35 = *(_QWORD *)(v139 + 8 * v29);
        if (!v35)
        {
          v29 = v21 + 4;
          if (v21 + 4 >= (uint64_t)v136)
            goto LABEL_45;
          v35 = *(_QWORD *)(v139 + 8 * v29);
          if (!v35)
            break;
        }
      }
    }
LABEL_31:
    v27 = (v35 - 1) & v35;
    v28 = __clz(__rbit64(v35)) + (v29 << 6);
LABEL_32:
    v33 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v28);
    swift_retain(v33);
    if (!v33)
      goto LABEL_45;
LABEL_33:
    v37 = *(_QWORD *)(v33 + 16);
    v38 = type metadata accessor for CRLBoardItem(0);
    v39 = (_QWORD *)swift_dynamicCastClass(v37, v38);
    if (v39)
    {
      v40 = v39;
      v144 = v27;
      v41 = *(void (**)(uint64_t))((swift_isaMask & *v39) + 0xB8);
      v42 = swift_unknownObjectRetain_n(v37, 2);
      v43 = (uint64_t)v143;
      v41(v42);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v43, 1, inited) == 1)
      {
        swift_release(v33);
        swift_unknownObjectRelease_n(v37, 2);
        v19 = (_QWORD *)sub_1004CB800(v43, (uint64_t *)&unk_1013E1A50);
LABEL_42:
        v21 = v29;
        v22 = v144;
LABEL_43:
        v14 = (uint64_t)v142;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v140, v43, inited);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        v45 = objc_msgSend(v145, "getContainerItemForUUID:", isa);

        if (v45)
        {
          v46 = (uint64_t)v146;
          (*(void (**)(void))((swift_isaMask & *v40) + 0x88))();
          sub_10074315C(v46, 1);

          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v46, inited);
        }
        v47 = (char *)objc_msgSend(v40, "parentContainerItem");
        if (!v47)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v140, inited);
          swift_release(v33);
          v19 = (_QWORD *)swift_unknownObjectRelease_n(v37, 2);
          goto LABEL_42;
        }
        v48 = *(_QWORD *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v49 = *(void (**)(__n128))(*(_QWORD *)v48 + 256);
        v50 = v47;
        v51 = swift_retain(v48);
        v49(v51);
        v133 = v50;

        swift_release(v48);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v52 = v140;
        LOBYTE(v48) = dispatch thunk of static Equatable.== infix(_:_:)(v146, v140);
        v53 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
        v54 = (uint64_t)v146;
        v55 = v53(v146, inited);
        if ((v48 & 1) != 0)
        {
          v53(v52, inited);
          swift_release(v33);

          v19 = (_QWORD *)swift_unknownObjectRelease_n(v37, 2);
          v21 = v29;
          v22 = v144;
          v6 = v141;
          goto LABEL_43;
        }
        (*(void (**)(uint64_t))((swift_isaMask & *v40) + 0x88))(v55);
        v56 = v133;
        sub_10074315C(v54, 1);

        swift_release(v33);
        swift_unknownObjectRelease_n(v37, 2);
        v53((char *)v54, inited);
        v19 = (_QWORD *)v53(v52, inited);
        v21 = v29;
        v22 = v144;
        v6 = v141;
        v14 = (uint64_t)v142;
      }
    }
    else
    {
      swift_release(v33);
      v21 = v29;
      v22 = v27;
    }
  }
  v36 = (char *)(v21 + 5);
  while (v136 != v36)
  {
    v35 = *(_QWORD *)(v139 + 8 * (_QWORD)v36++);
    if (v35)
    {
      v29 = (uint64_t)(v36 - 1);
      goto LABEL_31;
    }
  }
LABEL_45:
  sub_1004D284C(v14);
  v57 = v127[1];
  if ((v57 & 0xC000000000000001) != 0)
  {
    if (v57 < 0)
      v58 = v127[1];
    else
      v58 = v57 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v127[1]);
    v59 = __CocoaSet.makeIterator()(v58);
    v60 = type metadata accessor for CRLTransactableHashableWrapper();
    v61 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
    v62 = Set.Iterator.init(_cocoa:)(v152, v59, v60, v61);
    v57 = v152[0];
    v134 = (char *)v152[1];
    v63 = v152[2];
    v64 = v152[3];
    v65 = v152[4];
  }
  else
  {
    v66 = -1 << *(_BYTE *)(v57 + 32);
    v67 = *(_QWORD *)(v57 + 56);
    v134 = (char *)(v57 + 56);
    v68 = ~v66;
    v69 = -v66;
    if (v69 < 64)
      v70 = ~(-1 << v69);
    else
      v70 = -1;
    v65 = v70 & v67;
    swift_bridgeObjectRetain(v57);
    v63 = v68;
    v64 = 0;
  }
  v71 = v130;
  v126 = v63;
  v132 = v57 & 0x7FFFFFFFFFFFFFFFLL;
  v133 = (id)((unint64_t)(v63 + 64) >> 6);
  v128 = xmmword_100EF5550;
  v131 = (char *)&type metadata for Swift.AnyObject + 8;
  v137 = inited;
  v139 = v57;
  if ((v57 & 0x8000000000000000) == 0)
    goto LABEL_60;
LABEL_57:
  v72 = __CocoaSet.Iterator.next()(v62);
  if (v72)
  {
    v73 = v72;
    v147 = v72;
    v74 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v73);
    swift_dynamicCast(&v148, &v147, v131, v74, 7);
    v75 = v148;
    swift_unknownObjectRelease(v73);
    v76 = v64;
    v77 = v65;
    while (v75)
    {
      v143 = (char *)v77;
      v144 = v76;
      v82 = (uint64_t)v71;
      v84 = *(char **)(v75 + 16);
      v83 = *(_QWORD *)(v75 + 24);
      ObjectType = swift_getObjectType(v84);
      v86 = *(void (**)(uint64_t, uint64_t, __n128))(v83 + 32);
      v87 = swift_unknownObjectRetain(v84);
      v88 = v146;
      v86(ObjectType, v83, v87);
      v89 = UUID._bridgeToObjectiveC()().super.isa;
      v90 = v141;
      v91 = v145;
      v142 = *(void (**)(char *, uint64_t))(v141 + 8);
      v142(v88, inited);
      v92 = objc_msgSend(v91, "getBoardItemForUUID:", v89, v126);

      if (v92)
      {
        v140 = v84;
        v71 = (char *)v82;
        (*(void (**)(void))((swift_isaMask & *v92) + 0xB8))();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v82, 1, inited) == 1)
        {
          sub_1004CB800(v82, (uint64_t *)&unk_1013E1A50);
          if (v92 == *(_QWORD **)&v145[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer])
          {
            *(_QWORD *)((char *)v92 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = 0;
            v121 = v92;
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v121 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = 0;
            swift_bridgeObjectRelease();
            *(_QWORD *)((char *)v121 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = 0;
            swift_release(v75);
            swift_unknownObjectRelease(v140);

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release(v75);
            swift_unknownObjectRelease(v140);

          }
        }
        else
        {
          (*(void (**)(void))(v90 + 32))();
          v135 = (char *)objc_msgSend(v92, "parentContainerItem");
          v93 = UUID._bridgeToObjectiveC()().super.isa;
          v136 = (char *)objc_msgSend(v145, "getContainerItemForUUID:", v93);

          v94 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v95 = inited;
          inited = swift_initStackObject(v94, &v149);
          *(_OWORD *)(inited + 16) = v128;
          v96 = v146;
          v129 = *(uint64_t (**)(void))((swift_isaMask & *v92) + 0x88);
          v97 = v129();
          v98 = UUID.uuidString.getter(v97);
          v100 = v99;
          v142(v96, v95);
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v101 = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v98;
          *(_QWORD *)(inited + 64) = v101;
          *(_QWORD *)(inited + 40) = v100;
          v102 = v92;
          v103 = objc_msgSend(v102, "description");
          v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
          v106 = v105;

          *(_QWORD *)(inited + 96) = &type metadata for String;
          *(_QWORD *)(inited + 104) = v101;
          *(_QWORD *)(inited + 72) = v104;
          *(_QWORD *)(inited + 80) = v106;
          v107 = v136;
          v109 = UUID.uuidString.getter(v108);
          *(_QWORD *)(inited + 136) = &type metadata for String;
          *(_QWORD *)(inited + 144) = v101;
          *(_QWORD *)(inited + 112) = v109;
          *(_QWORD *)(inited + 120) = v110;
          if (!v107)
            goto LABEL_95;
          swift_setDeallocating(inited);
          v111 = *(_QWORD *)(inited + 16);
          v112 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, v111, v112);
          v71 = v130;
          v113 = v135;
          if (v135)
          {
            v114 = *(_QWORD *)&v135[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
            v115 = *(void (**)(void))(*(_QWORD *)v114 + 256);
            swift_retain(v114);
            v116 = v113;
            v117 = (uint64_t)v146;
            v115();
            swift_release(v114);
            v118 = sub_100B10D70(v117);
            v142((char *)v117, v137);
            v119 = swift_unknownObjectRelease(v118);
            if (v118)
            {
              if (v116 == v107)
              {
                *(_QWORD *)&v116[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
                swift_bridgeObjectRelease();
                *(_QWORD *)&v116[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
                swift_bridgeObjectRelease();
                *(_QWORD *)&v116[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;

                swift_bridgeObjectRelease();
              }
              else
              {
                v120 = (uint64_t)v146;
                ((void (*)(__n128))v129)(v119);
                sub_10074315C(v120, 1);

                v142((char *)v120, v137);
              }
            }
            else
            {

            }
          }
          v122 = v107;
          sub_100742678(v102, 1);

          swift_release(v75);
          swift_unknownObjectRelease(v140);

          inited = v137;
          v62 = (_QWORD *)((uint64_t (*)(char *, uint64_t))v142)(v138, v137);
        }
        v65 = (unint64_t)v143;
        v64 = v144;
        v57 = v139;
        if (v139 < 0)
          goto LABEL_57;
      }
      else
      {
        swift_release(v75);
        swift_unknownObjectRelease(v84);
        v65 = (unint64_t)v143;
        v64 = v144;
        v57 = v139;
        v71 = (char *)v82;
        if (v139 < 0)
          goto LABEL_57;
      }
LABEL_60:
      if (v65)
      {
        v77 = (v65 - 1) & v65;
        v78 = __clz(__rbit64(v65)) | (v64 << 6);
        v76 = v64;
      }
      else
      {
        v79 = v64 + 1;
        if (__OFADD__(v64, 1))
          goto LABEL_94;
        if (v79 >= (uint64_t)v133)
          break;
        v80 = *(_QWORD *)&v134[8 * v79];
        v76 = v64 + 1;
        if (!v80)
        {
          v76 = v64 + 2;
          if ((uint64_t)(v64 + 2) >= (uint64_t)v133)
            break;
          v80 = *(_QWORD *)&v134[8 * v76];
          if (!v80)
          {
            v76 = v64 + 3;
            if ((uint64_t)(v64 + 3) >= (uint64_t)v133)
              break;
            v80 = *(_QWORD *)&v134[8 * v76];
            if (!v80)
            {
              v76 = v64 + 4;
              if ((uint64_t)(v64 + 4) >= (uint64_t)v133)
                break;
              v80 = *(_QWORD *)&v134[8 * v76];
              if (!v80)
              {
                v81 = (void *)(v64 + 5);
                while (v133 != v81)
                {
                  v80 = *(_QWORD *)&v134[8 * (_QWORD)v81];
                  v81 = (char *)v81 + 1;
                  if (v80)
                  {
                    v76 = (unint64_t)v81 - 1;
                    goto LABEL_75;
                  }
                }
                break;
              }
            }
          }
        }
LABEL_75:
        v77 = (v80 - 1) & v80;
        v78 = __clz(__rbit64(v80)) + (v76 << 6);
      }
      v75 = *(_QWORD *)(*(_QWORD *)(v57 + 48) + 8 * v78);
      swift_retain(v75);
    }
  }
  sub_1004D284C(v57);
  v123 = v127;
  *v127 = (uint64_t)&_swiftEmptySetSingleton;
  v123[1] = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void *sub_100B204CC(char *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(__n128);
  char *v40;
  __n128 v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  uint64_t v46;
  void (*v47)(__n128);
  __n128 v48;
  Class isa;
  id v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v52;
  id v53;
  __n128 v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(void);
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t Strong;
  id v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  __n128 v108;
  char v109;
  void (*v110)(__n128);
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t inited;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  Swift::Int v131;
  unint64_t v132;
  id v133;
  char v134;
  void (*v135)(char *, uint64_t, uint64_t);
  char *v136;
  uint64_t v137;
  Class v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  id v142;
  char v143;
  char v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  Swift::Int v148;
  void *result;
  uint64_t v150;
  Swift::Int v151;
  CKRecordID v152;
  Swift::String v153;
  uint64_t v154;
  int v155;
  id v156;
  char *v157;
  uint64_t j;
  uint64_t v159;
  char *v160;
  id v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  __int128 v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  unint64_t i;
  void *v174;
  uint64_t v175;
  void (*v176)(_QWORD, _QWORD, _QWORD, __n128);
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  char v182[24];
  uint64_t v183;
  unint64_t v184;
  id v185[6];

  v154 = a2;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v171 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v168 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v157 = (char *)&v154 - v10;
  __chkstk_darwin(v11);
  v170 = (char *)&v154 - v12;
  __chkstk_darwin(v13);
  i = (unint64_t)&v154 - v14;
  __chkstk_darwin(v15);
  v172 = (char *)&v154 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v154 - v18;
  v20 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v20);
  v167 = (char *)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v160 = (char *)&v154 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v154 - v25;
  v183 = (uint64_t)&_swiftEmptySetSingleton;
  v184 = (unint64_t)&_swiftEmptySetSingleton;
  v27 = *(void **)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v174 = v2;
  v175 = v7;
  v28 = *(void **)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer];
  v29 = (char *)*((_QWORD *)a1 + 2);
  v178 = v6;
  v156 = v28;
  v161 = v27;
  v162 = a1;
  if (v29)
  {
    v30 = a1;
    v31 = &a1[(*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)];
    v165 = *(_QWORD *)(v7 + 72);
    v32 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v7 + 16);
    v164 = v27;
    v163 = v28;
    v33 = swift_bridgeObjectRetain(v30);
    *(_QWORD *)&v166 = v26;
    v176 = v32;
    v34 = v178;
    while (1)
    {
      v36 = v178;
      v32(v26, v31, v178, v33);
      v37 = v175;
      v169 = *(char **)(v175 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v169)(v26, 0, 1, v36);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v26, 1, v36) == 1)
        goto LABEL_14;
      v177 = v29;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v19, v26, v34);
      v38 = *(_QWORD *)&v164[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v39 = *(void (**)(__n128))(*(_QWORD *)v38 + 256);
      v40 = v164;
      v41 = swift_retain(v38);
      v42 = v19;
      v43 = v172;
      v39(v41);

      v32 = v176;
      swift_release(v38);
      LOBYTE(v38) = static UUID.== infix(_:_:)(v42);
      v44 = *(void (**)(char *, uint64_t))(v37 + 8);
      v44(v43, v34);
      v45 = i;
      ((void (*)(unint64_t, char *, uint64_t))v32)(i, v42, v34);
      if ((v38 & 1) != 0)
      {
        v44((char *)v45, v34);
      }
      else
      {
        v46 = *(_QWORD *)&v163[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v47 = *(void (**)(__n128))(*(_QWORD *)v46 + 256);
        v48 = swift_retain(v46);
        v47(v48);
        v32 = v176;
        swift_release(v46);
        LOBYTE(v46) = static UUID.== infix(_:_:)(v45);
        v44(v43, v34);
        v44((char *)v45, v34);
        if ((v46 & 1) == 0)
        {
          v19 = v42;
          isa = UUID._bridgeToObjectiveC()().super.isa;
          v50 = objc_msgSend(v174, "getBoardItemForUUID:", isa);

          if (v50)
          {
            sub_100AD7814((Swift::Int *)v185, v50);

          }
          v44(v42, v178);
          v26 = (char *)v166;
          v32 = v176;
          v35 = v177;
          goto LABEL_5;
        }
      }
      v19 = v42;
      v44(v42, v34);
      v26 = (char *)v166;
      v35 = v177;
LABEL_5:
      v31 += v165;
      v29 = v35 - 1;
      if (!v29)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v169)(v26, 1, 1, v178, v33);
        goto LABEL_14;
      }
    }
  }
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56);
  v52 = v27;
  v53 = v28;
  v54 = swift_bridgeObjectRetain(a1);
  v51(v26, 1, 1, v178, v54);
LABEL_14:
  swift_bridgeObjectRelease();
  v56 = v183;
  if ((v183 & 0xC000000000000001) != 0)
  {
    if (v183 < 0)
      v57 = v183;
    else
      v57 = v183 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v183);
    v58 = __CocoaSet.count.getter(v57);
    swift_bridgeObjectRelease();
  }
  else
  {
    v58 = *(_QWORD *)(v183 + 16);
  }
  v59 = v156;
  v60 = v175;
  if (!v58)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_104;
    goto LABEL_98;
  }
  v155 = 0;
  v169 = (char *)OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v166 = xmmword_100EF5550;
  v162 = (char *)&type metadata for Swift.AnyObject + 8;
LABEL_23:
  if ((v56 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)(v56 + 16))
      goto LABEL_95;
    v67 = 0;
    v183 = (uint64_t)&_swiftEmptySetSingleton;
    v69 = -1 << *(_BYTE *)(v56 + 32);
    v70 = *(_QWORD *)(v56 + 56);
    v165 = v56 + 56;
    v66 = ~v69;
    v71 = -v69;
    if (v71 < 64)
      v72 = ~(-1 << v71);
    else
      v72 = -1;
    v68 = (id)(v72 & v70);
    goto LABEL_34;
  }
  if (v56 < 0)
    v61 = v56;
  else
    v61 = v56 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v56);
  v62 = __CocoaSet.count.getter(v61);
  swift_bridgeObjectRelease();
  if (v62)
  {
    v183 = (uint64_t)&_swiftEmptySetSingleton;
    v63 = __CocoaSet.makeIterator()(v61);
    v64 = type metadata accessor for CRLBoardItem(0);
    v65 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v55 = Set.Iterator.init(_cocoa:)(v185, v63, v64, v65);
    v56 = (uint64_t)v185[0];
    v165 = (uint64_t)v185[1];
    v66 = (uint64_t)v185[2];
    v67 = (char *)v185[3];
    v68 = v185[4];
LABEL_34:
    v159 = v66;
    v163 = (char *)(v56 & 0x7FFFFFFFFFFFFFFFLL);
    v164 = (char *)((unint64_t)(v66 + 64) >> 6);
    for (i = v56; ; v56 = i)
    {
      v59 = v67;
      v73 = (unint64_t)v68;
      if (v56 < 0)
      {
LABEL_58:
        v86 = __CocoaSet.Iterator.next()(v55);
        if (!v86)
          goto LABEL_22;
        v87 = v86;
        v179 = v86;
        v88 = type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain(v87);
        swift_dynamicCast(&v180, &v179, v162, v88, 7);
        v85 = v180;
        swift_unknownObjectRelease(v87);
        v81 = (char *)v59;
        v79 = v73;
        if (!v85)
          goto LABEL_22;
        goto LABEL_60;
      }
      while (1)
      {
        while (1)
        {
          if (v73)
          {
            v79 = (v73 - 1) & v73;
            v80 = __clz(__rbit64(v73)) | ((_QWORD)v59 << 6);
            v81 = (char *)v59;
            goto LABEL_56;
          }
          v82 = (uint64_t)v59 + 1;
          if (__OFADD__(v59, 1))
          {
            __break(1u);
LABEL_104:
            if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
            {
LABEL_98:

              return &_swiftEmptySetSingleton;
            }
            goto LABEL_107;
          }
          if (v82 >= (uint64_t)v164)
            goto LABEL_22;
          v83 = *(_QWORD *)(v165 + 8 * v82);
          v81 = (char *)v59 + 1;
          if (!v83)
          {
            v81 = (char *)v59 + 2;
            if ((uint64_t)((char *)v59 + 2) >= (uint64_t)v164)
              goto LABEL_22;
            v83 = *(_QWORD *)(v165 + 8 * (_QWORD)v81);
            if (!v83)
            {
              v81 = (char *)v59 + 3;
              if ((uint64_t)((char *)v59 + 3) >= (uint64_t)v164)
                goto LABEL_22;
              v83 = *(_QWORD *)(v165 + 8 * (_QWORD)v81);
              if (!v83)
              {
                v81 = (char *)v59 + 4;
                if ((uint64_t)((char *)v59 + 4) >= (uint64_t)v164)
                  goto LABEL_22;
                v83 = *(_QWORD *)(v165 + 8 * (_QWORD)v81);
                if (!v83)
                {
                  v84 = (char *)v59 + 5;
                  while (v164 != v84)
                  {
                    v83 = *(_QWORD *)(v165 + 8 * (_QWORD)v84++);
                    if (v83)
                    {
                      v81 = v84 - 1;
                      goto LABEL_55;
                    }
                  }
LABEL_22:
                  v55 = (_QWORD *)sub_1004D284C(v56);
                  v56 = v183;
                  goto LABEL_23;
                }
              }
            }
          }
LABEL_55:
          v79 = (v83 - 1) & v83;
          v80 = __clz(__rbit64(v83)) + ((_QWORD)v81 << 6);
LABEL_56:
          v85 = *(id *)(*(_QWORD *)(v56 + 48) + 8 * v80);
          if (!v85)
            goto LABEL_22;
LABEL_60:
          v176 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v79;
          v177 = v81;
          v89 = *(void (**)(void))((swift_isaMask & *v85) + 0x88);
          v90 = v85;
          v91 = v172;
          v89();
          v92 = *(_QWORD *)&v169[(_QWORD)v174];
          v93 = v92 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess(v92 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v182, 0, 0);
          v94 = v93;
          v95 = v171;
          sub_1004B8460(v94, v171, type metadata accessor for CRLBoardCRDTData);
          swift_retain(v92);
          v96 = sub_1004B804C(&qword_1013E1A80);
          v97 = v170;
          CRRegister.wrappedValue.getter(v96);
          sub_1004B84A4(v95, type metadata accessor for CRLBoardCRDTData);
          swift_release(v92);
          LOBYTE(v95) = static UUID.== infix(_:_:)(v91);
          v98 = *(void (**)(char *, uint64_t))(v60 + 8);
          v99 = v178;
          v98(v97, v178);
          v98(v91, v99);
          if ((v95 & 1) != 0)
            goto LABEL_72;
          v100 = type metadata accessor for CRLBoardItem(0);
          v101 = swift_dynamicCastClass(v90, v100);
          if (!v101)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315, "unknown type", 12, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_getParentOf(transactable:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1315, (uint64_t)"unknown type", 12, 2u);
LABEL_72:

            goto LABEL_73;
          }
          v102 = (_QWORD *)v101;
          Strong = swift_unknownObjectWeakLoadStrong(v101 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
          if (Strong)
          {
            v104 = (id)Strong;

            break;
          }
          v110 = *(void (**)(__n128))((swift_isaMask & *v102) + 0xB8);
          v111 = swift_unknownObjectRetain(v90);
          v112 = (uint64_t)v160;
          v110(v111);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v112, 1, v178) == 1)
          {

            sub_1004CB800(v112, (uint64_t *)&unk_1013E1A50);
            goto LABEL_72;
          }
          v135 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
          v136 = v157;
          v137 = v178;
          v135(v157, v112, v178);
          v138 = UUID._bridgeToObjectiveC()().super.isa;
          v104 = objc_msgSend(v174, "getBoardItemForUUID:", v138);

          v98(v136, v137);
          if (v104)
            break;
LABEL_73:
          v113 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v113, &v181);
          *(_OWORD *)(inited + 16) = v166;
          v115 = v168;
          v116 = ((uint64_t (*)(void))v89)();
          v117 = UUID.uuidString.getter(v116);
          v119 = v118;
          v98(v115, v178);
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v120 = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v117;
          *(_QWORD *)(inited + 64) = v120;
          *(_QWORD *)(inited + 40) = v119;
          v121 = v90;
          v122 = objc_msgSend(v121, "description");
          v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v122);
          v125 = v124;

          *(_QWORD *)(inited + 96) = &type metadata for String;
          *(_QWORD *)(inited + 104) = v120;
          *(_QWORD *)(inited + 72) = v123;
          *(_QWORD *)(inited + 80) = v125;
          v126 = (uint64_t)v167;
          (*(void (**)(void))((swift_isaMask & *v121) + 0xB8))();
          v127 = v175;
          v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v126, 1, v178);
          if ((_DWORD)v128 == 1)
          {
            sub_1004CB800(v126, (uint64_t *)&unk_1013E1A50);
            v74 = (uint64_t *)(inited + 112);
            *(_QWORD *)(inited + 136) = &type metadata for String;
            *(_QWORD *)(inited + 144) = v120;
          }
          else
          {
            v129 = UUID.uuidString.getter(v128);
            v76 = v130;
            v98((char *)v126, v178);
            v74 = (uint64_t *)(inited + 112);
            *(_QWORD *)(inited + 136) = &type metadata for String;
            *(_QWORD *)(inited + 144) = v120;
            if (v76)
            {
              *v74 = v129;
              v75 = v175;
              goto LABEL_39;
            }
            v127 = v175;
          }
          v75 = v127;
          *v74 = 7104878;
          v76 = 0xE300000000000000;
LABEL_39:
          *(_QWORD *)(inited + 120) = v76;
          sub_100757E04(&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1175, "BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u, inited);
          sub_1004F5394(inited, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1175, (uint64_t)"BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u);

          swift_setDeallocating(inited);
          v77 = *(_QWORD *)(inited + 16);
          v78 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, v77, v78);
          v73 = (unint64_t)v176;
          v59 = v177;
          v60 = v75;
          v56 = i;
          if ((i & 0x8000000000000000) != 0)
            goto LABEL_58;
        }
        v105 = swift_dynamicCastClass(v104, v100);
        if (!v105)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1162, "Found a non board item parent somehow", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Found a non board item parent somehow");
          sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1162, (uint64_t)"Found a non board item parent somehow", 37, 2u);
          SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v152, v153);
          result = (void *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
          __break(1u);
          return result;
        }
        v106 = (void *)v105;
        v107 = v184;
        if ((v184 & 0xC000000000000001) == 0)
          break;
        swift_unknownObjectRetain_n(v104, 2);
        v108 = swift_bridgeObjectRetain(v107);
        v109 = __CocoaSet.contains(_:)(v108);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(v104);
        if ((v109 & 1) == 0)
          goto LABEL_89;
        swift_unknownObjectRelease_n(v104, 2);

LABEL_68:
        v73 = (unint64_t)v176;
        v59 = v177;
LABEL_91:
        v60 = v175;
        v56 = i;
        if ((i & 0x8000000000000000) != 0)
          goto LABEL_58;
      }
      if (!*(_QWORD *)(v184 + 16))
      {
        swift_unknownObjectRetain(v104);
        goto LABEL_89;
      }
      v131 = *(_QWORD *)(v184 + 40);
      swift_unknownObjectRetain(v104);
      swift_bridgeObjectRetain(v107);
      v132 = NSObject._rawHashValue(seed:)(v131) & ~(-1 << *(_BYTE *)(v107 + 32));
      if (((*(_QWORD *)(v107 + 56 + ((v132 >> 3) & 0xFFFFFFFFFFFFF8)) >> v132) & 1) == 0)
        goto LABEL_88;
      j = -1 << *(_BYTE *)(v107 + 32);
      v133 = *(id *)(*(_QWORD *)(v107 + 48) + 8 * v132);
      v134 = static NSObject.== infix(_:_:)(v133, v106);

      if ((v134 & 1) != 0)
      {
        swift_unknownObjectRelease_n(v104, 2);

        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
      v139 = ~j;
      v140 = v132 + 1;
      for (j = ~j; ; v139 = j)
      {
        v141 = v140 & v139;
        if (((*(_QWORD *)(v107 + 56 + (((v140 & v139) >> 3) & 0xFFFFFFFFFFFFF8)) >> (v140 & v139)) & 1) == 0)
          break;
        v142 = *(id *)(*(_QWORD *)(v107 + 48) + 8 * v141);
        v143 = static NSObject.== infix(_:_:)(v142, v106);

        if ((v143 & 1) != 0)
        {

          swift_bridgeObjectRelease();
          v55 = (_QWORD *)swift_unknownObjectRelease_n(v104, 2);
          goto LABEL_68;
        }
        v140 = v141 + 1;
      }
LABEL_88:
      swift_bridgeObjectRelease();
LABEL_89:
      swift_unknownObjectRetain(v104);
      sub_100AD7814((Swift::Int *)&v180, v106);

      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      v144 = static NSObject.== infix(_:_:)(v106, v161);
      v68 = v176;
      v67 = v177;
      if ((v144 & 1) == 0)
      {
        sub_100AD7814((Swift::Int *)&v180, v106);

        swift_unknownObjectRelease(v104);
        v59 = v67;
        v73 = (unint64_t)v68;
        goto LABEL_91;
      }
      swift_unknownObjectRelease_n(v104, 2);

      v155 = 1;
      v60 = v175;
    }
  }
LABEL_95:
  if ((v155 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1181, "resolveParentHierarchy didn't find root, maybe in a loop? or maybe rootContainer was sent as only input param", 109, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1181, (uint64_t)"resolveParentHierarchy didn't find root, maybe in a loop? or maybe rootContainer was sent as only input param", 109, 2u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {

      return &_swiftEmptySetSingleton;
    }
    v150 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
    v59 = v156;
    if (!v150)
      goto LABEL_98;
LABEL_107:
    sub_1004B5FB0((uint64_t)_swiftEmptyArrayStorage);
    v148 = v151;

    return (void *)v148;
  }
  v145 = v184;
  v146 = v154;
  swift_bridgeObjectRetain(v154);
  swift_bridgeObjectRetain(v145);
  v148 = sub_100B2D128(v147, v146);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (void *)v148;
}

void *sub_100B216A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(__n128);
  id v40;
  __n128 v41;
  char v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, __n128);
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  char v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  id v70;
  _QWORD *v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t inited;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  char v103[40];
  char v104[40];
  uint64_t v105;
  char v106[48];

  v5 = type metadata accessor for UUID(0);
  v101 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v99 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v98 = (char *)&v94 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v100 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    return &_swiftEmptySetSingleton;
  v11 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v12 = sub_100844028((uint64_t)v11);
  if ((v13 & 1) == 0)
  {

    return &_swiftEmptySetSingleton;
  }
  v96 = a2;
  v94 = a1;
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
  swift_bridgeObjectRetain(v14);
  v95 = v11;

  while (2)
  {
    v15 = v14 & 0xC000000000000001;
    LODWORD(v102) = (v14 & 0xC000000000000001) != 0;
    if (v14 < 0)
      v16 = v14;
    else
      v16 = v14 & 0xFFFFFFFFFFFFFF8;
    v97 = v14 + 80;
    while (1)
    {
      if (v15)
      {
        if (__CocoaSet.count.getter(v16) >= 2)
          goto LABEL_88;
        v24 = __CocoaSet.startIndex.getter(v16);
        v17 = v25;
        v26 = __CocoaSet.endIndex.getter(v16);
        v28 = static __CocoaSet.Index.== infix(_:_:)(v24, v17, v26, v27);
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRelease();
        v29 = v24;
        if ((v28 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        if (*(_QWORD *)(v14 + 16) > 1uLL)
          goto LABEL_88;
        v30 = *(_BYTE *)(v14 + 32);
        v29 = 1 << v30;
        v31 = *(_QWORD *)(v14 + 56);
        if (v31)
        {
          v32 = 0;
        }
        else
        {
          v47 = v30 & 0x3F;
          if (v47 < 7)
            goto LABEL_8;
          v31 = *(_QWORD *)(v14 + 64);
          if (v31)
          {
            v32 = 1;
          }
          else
          {
            if (v47 < 8)
              goto LABEL_8;
            v31 = *(_QWORD *)(v14 + 72);
            if (!v31)
            {
              v49 = 0;
              v50 = (unint64_t)(v29 + 63) >> 6;
              if (v50 <= 3)
                v50 = 3;
              v51 = v50 - 3;
              while (v51 != v49)
              {
                v31 = *(_QWORD *)(v97 + 8 * v49++);
                if (v31)
                {
                  v32 = v49 + 2;
                  goto LABEL_19;
                }
              }
LABEL_8:
              v17 = *(unsigned int *)(v14 + 36);
              swift_bridgeObjectRetain(v14);
LABEL_9:
              sub_100503494(v29, v17, v15 != 0);
              swift_bridgeObjectRelease();
              if (!v15)
                goto LABEL_25;
              goto LABEL_10;
            }
            v32 = 2;
          }
        }
LABEL_19:
        v24 = __clz(__rbit64(v31)) + (v32 << 6);
        v17 = *(unsigned int *)(v14 + 36);
        swift_bridgeObjectRetain(v14);
        if (v24 == v29)
          goto LABEL_9;
      }
      sub_1005C3C98(v24, v17, (char)v102, v14);
      v34 = v33;
      sub_100503494(v24, v17, v15 != 0);
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for CRLGroupItem(0);
      v36 = swift_dynamicCastClass(v34, v35);
      if (!v36)
        break;
      v37 = v36;
      v38 = *(_QWORD *)(v36 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v39 = *(uint64_t (**)(__n128))(*(_QWORD *)v38 + 312);
      v40 = v34;
      v41 = swift_retain(v38);
      v42 = v39(v41);

      swift_release(v38);
      if ((v42 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v74 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        inited = swift_initStackObject(v74, v103);
        *(_OWORD *)(inited + 16) = xmmword_100EEF400;
        *(_QWORD *)(inited + 32) = v37;
        v105 = inited;
        specialized Array._endMutation()(inited);
        v76 = v105;
        if ((unint64_t)v105 >> 62)
        {
          if (v105 < 0)
            v87 = v105;
          else
            v87 = v105 & 0xFFFFFFFFFFFFFF8;
          v88 = v40;
          swift_bridgeObjectRetain(v76);
          v89 = _CocoaArrayWrapper.endIndex.getter(v87);
          swift_bridgeObjectRelease();
          if (!v89)
            goto LABEL_80;
LABEL_69:
          sub_1004B5FB0(v76);
          v14 = v79;
        }
        else
        {
          v77 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10);
          v78 = v40;
          if (v77)
            goto LABEL_69;
LABEL_80:
          v14 = (uint64_t)&_swiftEmptySetSingleton;
        }
        swift_bridgeObjectRelease();

        goto LABEL_88;
      }

      if (!v15)
        goto LABEL_25;
LABEL_10:
      v18 = __CocoaSet.startIndex.getter(v16);
      v20 = v19;
      v21 = __CocoaSet.endIndex.getter(v16);
      v23 = static __CocoaSet.Index.== infix(_:_:)(v18, v20, v21, v22);
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
        goto LABEL_54;
LABEL_11:
      sub_100503494(v18, v20, v15 != 0);
      swift_bridgeObjectRelease();
    }

    if (v15)
      goto LABEL_10;
LABEL_25:
    v43 = *(_BYTE *)(v14 + 32);
    v18 = 1 << v43;
    v44 = *(_QWORD *)(v14 + 56);
    if (v44)
    {
      v45 = 0;
      goto LABEL_27;
    }
    v48 = v43 & 0x3F;
    if (v48 < 7)
      goto LABEL_53;
    v44 = *(_QWORD *)(v14 + 64);
    if (v44)
    {
      v45 = 1;
      goto LABEL_27;
    }
    if (v48 < 8)
    {
LABEL_53:
      v20 = *(unsigned int *)(v14 + 36);
      swift_bridgeObjectRetain(v14);
      goto LABEL_11;
    }
    v44 = *(_QWORD *)(v14 + 72);
    if (!v44)
    {
      v52 = 0;
      v53 = (unint64_t)(v18 + 63) >> 6;
      if (v53 <= 3)
        v53 = 3;
      v54 = v53 - 3;
      while (v54 != v52)
      {
        v44 = *(_QWORD *)(v97 + 8 * v52++);
        if (v44)
        {
          v45 = v52 + 2;
          goto LABEL_27;
        }
      }
      goto LABEL_53;
    }
    v45 = 2;
LABEL_27:
    v46 = __clz(__rbit64(v44)) + (v45 << 6);
    v20 = *(unsigned int *)(v14 + 36);
    swift_bridgeObjectRetain(v14);
    if (v46 == v18)
      goto LABEL_11;
    v18 = v46;
LABEL_54:
    sub_1005C3C98(v18, v20, (char)v102, v14);
    v102 = v55;
    sub_100503494(v18, v20, v15 != 0);
    swift_bridgeObjectRelease_n(v14, 2);
    v56 = *(_QWORD *)(v96 + 16);
    if (v56)
    {
      v57 = v101;
      v58 = v96 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
      v59 = swift_bridgeObjectRetain(v96);
      v60 = *(_QWORD *)(v57 + 72);
      v61 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v57 + 16);
      v62 = v100;
      while (1)
      {
        v61(v62, v58, v5, v59);
        v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
        v63(v62, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v62, 1, v5) == 1)
          break;
        v64 = v98;
        v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v57 + 32))(v98, v62, v5);
        v66 = v99;
        (*(void (**)(uint64_t))((swift_isaMask & *v102) + 0x88))(v65);
        v67 = static UUID.== infix(_:_:)(v64);
        v68 = *(void (**)(char *, uint64_t))(v57 + 8);
        v68(v66, v5);
        v68(v64, v5);
        if ((v67 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v80 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v81 = swift_initStackObject(v80, v104);
          *(_OWORD *)(v81 + 16) = xmmword_100EEF400;
          v70 = v102;
          goto LABEL_71;
        }
        v58 += v60;
        --v56;
        v62 = v100;
        v57 = v101;
        if (!v56)
          goto LABEL_61;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v96);
      v62 = v100;
      v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
LABEL_61:
      v63(v62, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
    v69 = v94;
    v70 = v102;
    if (*(_QWORD *)(v94 + 16))
    {
      v71 = v102;
      v72 = sub_100844028((uint64_t)v71);
      if ((v73 & 1) != 0)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v69 + 56) + 8 * v72);
        swift_bridgeObjectRetain(v14);

        continue;
      }

    }
    break;
  }
  v86 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v81 = swift_initStackObject(v86, v106);
  *(_OWORD *)(v81 + 16) = xmmword_100EEF400;
LABEL_71:
  *(_QWORD *)(v81 + 32) = v70;
  v105 = v81;
  specialized Array._endMutation()(v81);
  v82 = v105;
  if ((unint64_t)v105 >> 62)
  {
    if (v105 < 0)
      v90 = v105;
    else
      v90 = v105 & 0xFFFFFFFFFFFFFF8;
    v91 = v70;
    swift_bridgeObjectRetain(v82);
    v92 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease();
    if (!v92)
      goto LABEL_86;
LABEL_73:
    sub_1004B5FB0(v82);
    v14 = v85;
  }
  else
  {
    v83 = *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10);
    v84 = v70;
    if (v83)
      goto LABEL_73;
LABEL_86:
    v14 = (uint64_t)&_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();

LABEL_88:
  return (void *)v14;
}

uint64_t sub_100B21F94(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, __n128);
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  Class isa;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  int64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  uint64_t inited;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t);
  unint64_t v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_BYTE *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  _BOOL8 v94;
  uint64_t v95;
  char v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  void *v110;
  unint64_t v111;
  _QWORD *v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t isUniquelyReferenced_nonNull_native;
  int v117;
  unint64_t v118;
  uint64_t v119;
  _BOOL8 v120;
  uint64_t v121;
  unint64_t v122;
  int v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t result;
  unint64_t v131;
  CKRecordID v132;
  Swift::String v133;
  _BYTE v134[12];
  int v135;
  __int128 v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  int64_t v143;
  _QWORD *v144;
  __int128 v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  _QWORD *v150;
  _BYTE *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160[6];

  v154 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v146 = &v134[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v134[-v6];
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v151 = &v134[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v134[-v11];
  v149 = v1;
  v13 = *(void **)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  v159 = (uint64_t)&_swiftEmptySetSingleton;
  v14 = *(_QWORD *)(a1 + 16);
  v147 = v3;
  v137 = v13;
  v152 = a1;
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v153 = *(_QWORD *)(v3 + 72);
    v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16);
    v17 = v13;
    v18 = swift_bridgeObjectRetain(a1);
    v19 = v147;
    while (1)
    {
      v20 = v154;
      v16(v12, v15, v154, v18);
      v21 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v19 + 56);
      ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v21)(v12, 0, 1, v20);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v20) == 1)
        break;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v7, v12, v20);
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v7, v20);
      v23 = objc_msgSend(v149, "getBoardItemForUUID:", isa);

      if (v23)
      {
        sub_100AD7814((Swift::Int *)v160, v23);

      }
      v15 += v153;
      if (!--v14)
        goto LABEL_8;
    }
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
    v24 = v13;
    v18 = swift_bridgeObjectRetain(a1);
LABEL_8:
    v21(v12, 1, 1, v154, v18);
  }
  swift_bridgeObjectRelease();
  v26 = v159;
  if ((v159 & 0xC000000000000001) != 0)
  {
    if (v159 < 0)
      v27 = v159;
    else
      v27 = v159 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v159);
    v28 = __CocoaSet.count.getter(v27);
    swift_bridgeObjectRelease();
    if (v28)
      goto LABEL_14;
LABEL_97:
    swift_bridgeObjectRelease();
    v131 = sub_1008D8030((uint64_t)_swiftEmptyArrayStorage);

LABEL_99:
    swift_bridgeObjectRelease();
    return v131;
  }
  if (!*(_QWORD *)(v159 + 16))
    goto LABEL_97;
LABEL_14:
  v135 = 0;
  v139 = (uint64_t)_swiftEmptyDictionarySingleton;
  v145 = xmmword_100EF5550;
  v136 = xmmword_100EEF400;
  v141 = (char *)&type metadata for Swift.AnyObject + 8;
LABEL_16:
  if ((v26 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v26 + 16))
    {
      v35 = 0;
      v159 = (uint64_t)&_swiftEmptySetSingleton;
      v37 = -1 << *(_BYTE *)(v26 + 32);
      v38 = *(_QWORD *)(v26 + 56);
      v144 = (_QWORD *)(v26 + 56);
      v34 = ~v37;
      v39 = -v37;
      if (v39 < 64)
        v40 = ~(-1 << v39);
      else
        v40 = -1;
      v36 = v40 & v38;
      goto LABEL_27;
    }
    goto LABEL_94;
  }
  if (v26 < 0)
    v29 = v26;
  else
    v29 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v30 = __CocoaSet.count.getter(v29);
  swift_bridgeObjectRelease();
  if (!v30)
  {
LABEL_94:
    if ((v135 & 1) != 0)
    {

      swift_bridgeObjectRelease();
      return v139;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1260, "resolveToSiblings didn't find root, maybe in a loop?", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentMapOfItems(from:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1260, (uint64_t)"resolveToSiblings didn't find root, maybe in a loop?", 52, 2u);
    swift_bridgeObjectRelease();
    v131 = sub_1008D8030((uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_99;
  }
  v159 = (uint64_t)&_swiftEmptySetSingleton;
  v31 = __CocoaSet.makeIterator()(v29);
  v32 = type metadata accessor for CRLBoardItem(0);
  v33 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v25 = Set.Iterator.init(_cocoa:)(v160, v31, v32, v33);
  v26 = (uint64_t)v160[0];
  v144 = v160[1];
  v34 = (uint64_t)v160[2];
  v35 = (uint64_t)v160[3];
  v36 = (unint64_t)v160[4];
LABEL_27:
  v140 = v34;
  v142 = v26 & 0x7FFFFFFFFFFFFFFFLL;
  v143 = (unint64_t)(v34 + 64) >> 6;
  v148 = v26;
  while (2)
  {
    while (1)
    {
      v41 = v35;
      while (1)
      {
        if (v26 < 0)
        {
          v50 = (void *)__CocoaSet.Iterator.next()(v25);
          if (!v50)
            goto LABEL_15;
          v51 = v50;
          v155 = v50;
          v52 = type metadata accessor for CRLBoardItem(0);
          swift_unknownObjectRetain(v51);
          swift_dynamicCast(&v157, &v155, v141, v52, 7);
          v53 = (id)v157;
          swift_unknownObjectRelease(v51);
          v35 = v41;
          v47 = v36;
          v49 = v154;
          if (!v53)
            goto LABEL_15;
        }
        else
        {
          if (v36)
          {
            v47 = (v36 - 1) & v36;
            v48 = __clz(__rbit64(v36)) | (v41 << 6);
            v35 = v41;
            v49 = v154;
          }
          else
          {
            v54 = v41 + 1;
            v49 = v154;
            if (__OFADD__(v41, 1))
            {
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
              goto LABEL_104;
            }
            if (v54 >= v143)
              goto LABEL_15;
            v55 = v144[v54];
            v35 = v41 + 1;
            if (!v55)
            {
              v35 = v41 + 2;
              if (v41 + 2 >= v143)
                goto LABEL_15;
              v55 = v144[v35];
              if (!v55)
              {
                v35 = v41 + 3;
                if (v41 + 3 >= v143)
                  goto LABEL_15;
                v55 = v144[v35];
                if (!v55)
                {
                  v35 = v41 + 4;
                  if (v41 + 4 >= v143)
                    goto LABEL_15;
                  v55 = v144[v35];
                  if (!v55)
                  {
                    v56 = v41 + 5;
                    while (v143 != v56)
                    {
                      v55 = v144[v56++];
                      if (v55)
                      {
                        v35 = v56 - 1;
                        goto LABEL_51;
                      }
                    }
LABEL_15:
                    v25 = (_QWORD *)sub_1004D284C(v26);
                    v26 = v159;
                    goto LABEL_16;
                  }
                }
              }
            }
LABEL_51:
            v47 = (v55 - 1) & v55;
            v48 = __clz(__rbit64(v55)) + (v35 << 6);
          }
          v53 = *(id *)(*(_QWORD *)(v26 + 48) + 8 * v48);
          if (!v53)
            goto LABEL_15;
        }
        v57 = v53;
        v58 = sub_100B2A2E4(v57, v149);

        v152 = v35;
        v153 = v47;
        if (v58)
          break;
        v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v59, &v158);
        *(_OWORD *)(inited + 16) = v145;
        v61 = v146;
        v62 = (*(uint64_t (**)(void))((swift_isaMask & *v57) + 0x88))();
        v63 = UUID.uuidString.getter(v62);
        v65 = v64;
        v66 = v147;
        v67 = *(void (**)(_BYTE *, uint64_t))(v147 + 8);
        v67(v61, v49);
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v68 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v63;
        v150 = (_QWORD *)(inited + 32);
        *(_QWORD *)(inited + 64) = v68;
        *(_QWORD *)(inited + 40) = v65;
        v69 = v57;
        v70 = objc_msgSend(v69, "description");
        v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
        v73 = v72;

        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v68;
        *(_QWORD *)(inited + 72) = v71;
        *(_QWORD *)(inited + 80) = v73;
        v74 = v154;
        (*(void (**)(void))((swift_isaMask & *v69) + 0xB8))();
        v75 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v66 + 48);
        v76 = (uint64_t)v151;
        v77 = v75(v151, 1, v74);
        if ((_DWORD)v77 == 1)
        {
          sub_1004CB800(v76, (uint64_t *)&unk_1013E1A50);
          v42 = (uint64_t *)(inited + 112);
          *(_QWORD *)(inited + 136) = &type metadata for String;
          *(_QWORD *)(inited + 144) = v68;
LABEL_30:
          v26 = v148;
          v43 = v150;
          *v42 = 7104878;
          v44 = 0xE300000000000000;
          goto LABEL_31;
        }
        v78 = UUID.uuidString.getter(v77);
        v44 = v79;
        v67((_BYTE *)v76, v74);
        v42 = (uint64_t *)(inited + 112);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v68;
        if (!v44)
          goto LABEL_30;
        *v42 = v78;
        v26 = v148;
        v43 = v150;
LABEL_31:
        *(_QWORD *)(inited + 120) = v44;
        sub_100757E04(&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1254, "BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u, inited);
        sub_1004F5394(inited, (uint64_t)"parentMapOfItems(from:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1254, (uint64_t)"BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u);

        swift_setDeallocating(inited);
        v45 = *(_QWORD *)(inited + 16);
        v46 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v43, v45, v46);
        v41 = v152;
        v36 = v153;
      }
      v80 = type metadata accessor for CRLBoardItem(0);
      v81 = swift_dynamicCastClass(v58, v80);
      if (!v81)
        goto LABEL_105;
      v82 = (void *)v81;
      v83 = *(_QWORD *)(v139 + 16);
      swift_unknownObjectRetain(v58);
      v138 = v80;
      if (v83)
        break;
LABEL_65:
      v99 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v100 = swift_initStackObject(v99, &v156);
      *(_OWORD *)(v100 + 16) = v136;
      *(_QWORD *)(v100 + 32) = v57;
      v157 = v100;
      specialized Array._endMutation()(v100);
      v101 = v157;
      if ((unint64_t)v157 >> 62)
      {
        v110 = v82;
        if (v157 < 0)
          v111 = v157;
        else
          v111 = v157 & 0xFFFFFFFFFFFFFF8;
        v112 = v57;
        swift_unknownObjectRetain(v58);
        swift_bridgeObjectRetain(v101);
        v113 = v111;
        v82 = v110;
        v114 = _CocoaArrayWrapper.endIndex.getter(v113);
        swift_bridgeObjectRelease();
        if (v114)
        {
LABEL_67:
          sub_1004B5FB0(v101);
          v150 = v104;
          goto LABEL_80;
        }
      }
      else
      {
        v102 = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFF8) + 0x10);
        v103 = v57;
        swift_unknownObjectRetain(v58);
        if (v102)
          goto LABEL_67;
      }
      v150 = &_swiftEmptySetSingleton;
LABEL_80:
      swift_bridgeObjectRelease();
      v115 = (_QWORD *)v139;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v139);
      v157 = (uint64_t)v115;
      v118 = sub_100844028((uint64_t)v82);
      v119 = v115[2];
      v120 = (v117 & 1) == 0;
      v121 = v119 + v120;
      if (__OFADD__(v119, v120))
        goto LABEL_101;
      if (v115[3] >= v121)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v129 = v117;
          sub_1008342E8();
          LOBYTE(v117) = v129;
        }
      }
      else
      {
        LODWORD(v139) = v117;
        sub_10082383C(v121, isUniquelyReferenced_nonNull_native);
        v122 = sub_100844028((uint64_t)v82);
        v123 = v117 & 1;
        LOBYTE(v117) = v139;
        if ((v139 & 1) != v123)
          goto LABEL_106;
        v118 = v122;
      }
      v124 = (_QWORD *)v157;
      v139 = v157;
      if ((v117 & 1) != 0)
      {
        v125 = *(_QWORD *)(v157 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v125 + 8 * v118) = v150;
      }
      else
      {
        *(_QWORD *)(v157 + 8 * (v118 >> 6) + 64) |= 1 << v118;
        v126 = 8 * v118;
        *(_QWORD *)(v124[6] + v126) = v82;
        *(_QWORD *)(v124[7] + v126) = v150;
        v127 = v124[2];
        v108 = __OFADD__(v127, 1);
        v128 = v127 + 1;
        if (v108)
          goto LABEL_102;
        v124[2] = v128;
        swift_unknownObjectRetain(v58);
      }
      swift_unknownObjectRelease(v58);
      swift_bridgeObjectRelease();
      sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      if ((static NSObject.== infix(_:_:)(v82, v137) & 1) != 0)
      {
        swift_unknownObjectRelease_n(v58, 2);

        v135 = 1;
      }
      else
      {
        sub_100AD7814(&v157, v82);

        swift_unknownObjectRelease(v58);
      }
      v36 = v153;
    }
    swift_unknownObjectRetain(v58);
    v84 = (_QWORD *)v139;
    v85 = sub_100844028((uint64_t)v82);
    if ((v86 & 1) == 0)
    {
      swift_unknownObjectRelease(v58);
      v35 = v152;
      goto LABEL_65;
    }
    v87 = *(_QWORD *)(v84[7] + 8 * v85);
    swift_bridgeObjectRetain(v87);
    swift_unknownObjectRelease(v58);
    v157 = v87;
    v150 = v57;
    sub_100AD7814((Swift::Int *)&v155, v150);

    v88 = (uint64_t)v82;
    v89 = v157;
    swift_unknownObjectRetain(v58);
    v90 = swift_isUniquelyReferenced_nonNull_native(v84);
    v155 = v84;
    v92 = sub_100844028(v88);
    v93 = v84[2];
    v94 = (v91 & 1) == 0;
    v95 = v93 + v94;
    if (__OFADD__(v93, v94))
      goto LABEL_103;
    v96 = v91;
    if (v84[3] >= v95)
    {
      v35 = v152;
      if ((v90 & 1) == 0)
        sub_1008342E8();
    }
    else
    {
      sub_10082383C(v95, v90);
      v97 = sub_100844028(v88);
      v35 = v152;
      if ((v96 & 1) != (v98 & 1))
        goto LABEL_106;
      v92 = v97;
    }
    v105 = v155;
    v139 = (uint64_t)v155;
    if ((v96 & 1) != 0)
    {
      v106 = *((_QWORD *)v155 + 7);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 8 * v92) = v89;
LABEL_74:

      swift_unknownObjectRelease_n(v58, 3);
      swift_bridgeObjectRelease();
      v36 = v153;
      continue;
    }
    break;
  }
  *((_QWORD *)v155 + (v92 >> 6) + 8) |= 1 << v92;
  *(_QWORD *)(v105[6] + 8 * v92) = v88;
  *(_QWORD *)(v105[7] + 8 * v92) = v89;
  v107 = v105[2];
  v108 = __OFADD__(v107, 1);
  v109 = v107 + 1;
  if (!v108)
  {
    v105[2] = v109;
    swift_unknownObjectRetain(v58);
    goto LABEL_74;
  }
LABEL_104:
  __break(1u);
LABEL_105:
  sub_100757E04(&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1234, "Found a non board item parent somehow", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Found a non board item parent somehow");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentMapOfItems(from:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1234, (uint64_t)"Found a non board item parent somehow", 37, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v132, v133);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
LABEL_106:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v138);
  __break(1u);
  return result;
}

id sub_100B22E44()
{
  void *v0;

  return objc_msgSend(v0, "fixUp");
}

id sub_100B22E54()
{
  void *v0;

  return objc_msgSend(v0, "shouldEnsureParentsOfCreatedObjects");
}

uint64_t sub_100B22E74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for CRLBoardCRDTData(0);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100B22F0C, 0, 0);
}

uint64_t sub_100B22F0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v16 = v0[5];
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 2, 0, 0);
  sub_1004B8460(v8, v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)(v4 + v6) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v2, v11, v12, v1);
  v13 = (_QWORD *)swift_task_alloc(48);
  v0[10] = v13;
  v13[2] = v5;
  v13[3] = v1;
  v13[4] = v16;
  v14 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[11] = v14;
  *v14 = v0;
  v14[1] = sub_100B23090;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, 0, 0, 0xD000000000000028, 0x8000000100FF6EF0, sub_100B2C814, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_100B23090()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B23160;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 80));
    v4 = sub_100B230FC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B230FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B23160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B231C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[21] = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v1[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v1[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100B23260, 0, 0);
}

uint64_t sub_100B23260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if (sub_1005F155C())
  {
    v1 = *(_QWORD *)(v0 + 184);
    v2 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v1);
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    v9 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v11 = v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v10 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 88, 0, 0);
    sub_1004B8460(v11, v6, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v10);
    v12 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v12);
    sub_1004B84A4(v6, type metadata accessor for CRLBoardCRDTData);
    swift_release(v10);
    v13 = (uint64_t *)(*(_QWORD *)(v7 + v9) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    sub_10067AFD0(v5, v14, v15, v4);
    v16 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 200) = v16;
    *(_QWORD *)(v16 + 16) = v8;
    *(_QWORD *)(v16 + 24) = v4;
    v17 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 208) = v17;
    *v17 = v0;
    v17[1] = sub_100B2343C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 224, 0, 0, 0xD00000000000002ELL, 0x8000000100FF6F40, sub_100B2CB58, v16, &type metadata for Bool);
  }
}

uint64_t sub_100B2343C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B2350C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 200));
    v4 = sub_100B234A8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B234A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 224);
  sub_1004B84A4(*(_QWORD *)(v0 + 192), type metadata accessor for CRLBoardIdentifier);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100B2350C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v2 = *(_QWORD *)(v0 + 216);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 112, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v2, v0 + 160, v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Failed to check if board hasUnsyncedChanges %@", 46, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_errorRelease(v2);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100B237CC(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_101405D84;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_100B2382C;
  return sub_100B231C8();
}

uint64_t sub_100B2382C(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 32));

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

void sub_100B238A0(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD);
  char v34[16];
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD aBlock[3];
  void *v39;
  uint64_t (*v40)();
  uint64_t v41;

  v32 = a2;
  v33 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_101405CE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardDataStoreChangeSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v30 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v31 = (uint64_t)&v28 - v10;
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager];
  v39 = (void *)type metadata accessor for CRLBoard(0);
  v40 = (uint64_t (*)())&off_1012942D0;
  aBlock[0] = v2;
  v13 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  v35 = v11;
  v36 = v12;
  v37 = aBlock;
  v29 = v2;
  OS_dispatch_queue.sync<A>(execute:)(sub_100B2BB34, v34, v3);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  v14 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_101405CE0);
    if (v33)
      v33(0, 0);
  }
  else
  {
    v15 = v31;
    sub_1004B84E0((uint64_t)v5, v31, type metadata accessor for CRLBoardDataStoreChangeSet);
    v16 = *(NSObject **)(v11 + v13);
    v17 = swift_allocObject(&unk_101294388, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_100B2BB50;
    *(_QWORD *)(v17 + 24) = v11;
    v40 = sub_1005B71BC;
    v41 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100618D24;
    v39 = &unk_1012943A0;
    v18 = _Block_copy(aBlock);
    v19 = v41;
    swift_retain(v11);
    swift_retain(v17);
    swift_release(v19);
    dispatch_sync(v16, v18);
    _Block_release(v18);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v17, "", 89, 266, 26, 1);
    swift_release(v11);
    swift_release(v17);
    if ((v16 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v21 = v29;
      v20 = v30;
      sub_1004B8460(v15, v30, type metadata accessor for CRLBoardDataStoreChangeSet);
      v22 = *(unsigned __int8 *)(v14 + 80);
      v23 = (v22 + 40) & ~v22;
      v24 = (_QWORD *)swift_allocObject(&unk_1012943D8, v23 + v8, v22 | 7);
      v25 = v32;
      v26 = (uint64_t)v33;
      v24[2] = v21;
      v24[3] = v26;
      v24[4] = v25;
      sub_1004B84E0(v20, (uint64_t)v24 + v23, type metadata accessor for CRLBoardDataStoreChangeSet);
      v27 = v21;
      sub_1004C0F54(v26, v25);
      sub_100AA5934(v15, (uint64_t)sub_100B2BCB0, (uint64_t)v24);
      swift_release(v24);
      sub_1004B84A4(v15, type metadata accessor for CRLBoardDataStoreChangeSet);
    }
  }
}

double sub_100B23C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v2 = sub_1004B804C(&qword_101405340);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1012945B8, v7 + v4, v6 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100B238A0((void (*)(_QWORD, _QWORD))sub_100B2CA98, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_100B23CF0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    v6 = a1;
    swift_errorRetain(a1);
    v4 = sub_1004B804C(&qword_101405340);
    return CheckedContinuation.resume(throwing:)(&v6, v4);
  }
  else
  {
    v5 = a1 & 1;
    v2 = sub_1004B804C(&qword_101405340);
    return CheckedContinuation.resume(returning:)(&v5, v2);
  }
}

uint64_t sub_100B23E78(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch(sub_100B23EC0, 0, 0);
}

uint64_t sub_100B23EC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_100B23F68;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000019, 0x8000000100FF6F20, sub_100B2CA2C, v2, &type metadata for Bool);
}

uint64_t sub_100B23F68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B24020;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 32));
    v4 = sub_100B23FD4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B23FD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 56), 0);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B24020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);

  swift_task_dealloc(v2);
  v4 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, _QWORD, void *))(v3 + 16))(v3, 0, v4);

  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B2409C(uint64_t a1, char *a2, double (*a3)(uint64_t, _QWORD, __n128), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  NSObject *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  _QWORD v75[2];
  char *v76;
  uint64_t v77;
  double (*v78)(uint64_t, _QWORD, __n128);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char v82[8];
  uint64_t v83;
  uint64_t v84;
  char v85[8];
  char v86[72];
  void **aBlock;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  void *v90;
  uint64_t (*v91)();
  uint64_t v92;
  char v93[24];
  _BYTE v94[24];

  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = ((char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v13 = a2;
    swift_errorRetain(a1);
    if (qword_1013DD858 != -1)
      goto LABEL_51;
    goto LABEL_3;
  }
  v81 = v16;
  v79 = v10;
  v37 = *(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager] + 16);
  swift_beginAccess(v37 + 16, v94, 0, 0);
  v38 = 0;
  v39 = *(_QWORD *)(v37 + 16);
  v40 = v39 + 64;
  v41 = 1 << *(_BYTE *)(v39 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & *(_QWORD *)(v39 + 64);
  v44 = (unint64_t)(v41 + 63) >> 6;
  while (1)
  {
    if (v43)
    {
      v45 = __clz(__rbit64(v43));
      v43 &= v43 - 1;
      v46 = v45 | (v38 << 6);
      goto LABEL_11;
    }
    v48 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v48 >= v44)
      goto LABEL_29;
    v49 = *(_QWORD *)(v40 + 8 * v48);
    ++v38;
    if (!v49)
    {
      v38 = v48 + 1;
      if (v48 + 1 >= v44)
        goto LABEL_29;
      v49 = *(_QWORD *)(v40 + 8 * v38);
      if (!v49)
      {
        v38 = v48 + 2;
        if (v48 + 2 >= v44)
          goto LABEL_29;
        v49 = *(_QWORD *)(v40 + 8 * v38);
        if (!v49)
        {
          v38 = v48 + 3;
          if (v48 + 3 >= v44)
            goto LABEL_29;
          v49 = *(_QWORD *)(v40 + 8 * v38);
          if (!v49)
            break;
        }
      }
    }
LABEL_28:
    v43 = (v49 - 1) & v49;
    v46 = __clz(__rbit64(v49)) + (v38 << 6);
LABEL_11:
    v47 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v46);
    *(_BYTE *)(v47 + *(_QWORD *)(*(_QWORD *)v47 + 136)) = 0;
  }
  v50 = v48 + 4;
  if (v50 >= v44)
  {
LABEL_29:
    v51 = *(_QWORD *)(a5 + *(int *)(type metadata accessor for CRLBoardDataStoreChangeSet(0) + 52));
    v77 = v11;
    v76 = v13;
    v78 = a3;
    v75[1] = a4;
    v80 = a2;
    if (!v51)
    {
      v13 = 0;
      goto LABEL_43;
    }
    v52 = v51 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v51 >> 62)
      goto LABEL_56;
    v53 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_32;
  }
  v49 = *(_QWORD *)(v40 + 8 * v50);
  if (v49)
  {
    v38 = v50;
    goto LABEL_28;
  }
  while (1)
  {
    v38 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v38 >= v44)
      goto LABEL_29;
    v49 = *(_QWORD *)(v40 + 8 * v38);
    ++v50;
    if (v49)
      goto LABEL_28;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  swift_once(&qword_1013DD858, sub_100A05554);
LABEL_3:
  swift_beginAccess(&static OS_os_log.boardStore, v94, 0, 0);
  v19 = (void *)static OS_os_log.boardStore;
  v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v20, v86);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(a1, v85, v82);
  v22 = v83;
  v23 = v84;
  v24 = v19;
  v25 = Error.localizedDescription.getter(v22, v23);
  v27 = v26;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v28 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v28;
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(inited + 40) = v27;
  v29 = static os_log_type_t.error.getter(v28);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v29, "Saving board change set failed with error %@", 44, 2, inited);
  swift_setDeallocating(inited);
  v30 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v30);

  v31 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  v32 = *(NSObject **)(v31 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  v33 = swift_allocObject(&unk_1012944C8, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_100B2BD10;
  *(_QWORD *)(v33 + 24) = v31;
  v91 = sub_1005B72B0;
  v92 = v33;
  aBlock = _NSConcreteStackBlock;
  v88 = *(_QWORD *)"";
  v89 = sub_100618D24;
  v90 = &unk_1012944E0;
  v34 = _Block_copy(&aBlock);
  v35 = v92;
  swift_retain(v31);
  swift_retain(v33);
  swift_release(v35);
  dispatch_sync(v32, v34);
  _Block_release(v34);
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v33, "", 89, 273, 26, 1);
  swift_release(v31);
  swift_release(v33);
  if ((v32 & 1) == 0)
  {
    if (a3)
    {
      swift_errorRetain(a1);
      ((void (*)(uint64_t, uint64_t))a3)(a1, 1);
      swift_errorRelease(a1);
    }
    return swift_errorRelease(a1);
  }
  __break(1u);
  while (2)
  {
    swift_once(&qword_1013DD888, sub_100A05DE4);
LABEL_44:
    swift_beginAccess(&static OS_os_log.realTimeSync, v93, 0, 0);
    v60 = (id)static OS_os_log.realTimeSync;
    v62 = static os_log_type_t.default.getter(v61);
    sub_100A06EBC((uint64_t)v60, &_mh_execute_header, v62, "CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

    v15 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
    v18 = *(NSObject **)(v33 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    v63 = swift_allocObject(&unk_101294400, 32, 7);
    *(_QWORD *)(v63 + 16) = v33;
    *(_QWORD *)(v63 + 24) = v13;
    v64 = swift_allocObject(&unk_101294428, 32, 7);
    *(_QWORD *)(v64 + 16) = sub_100B2BCF8;
    *(_QWORD *)(v64 + 24) = v63;
    v91 = sub_1005B72B0;
    v92 = v64;
    aBlock = _NSConcreteStackBlock;
    v88 = *(_QWORD *)"";
    v89 = sub_100618D24;
    v90 = &unk_101294440;
    v65 = _Block_copy(&aBlock);
    v51 = v92;
    swift_bridgeObjectRetain(v13);
    swift_retain(v33);
    swift_retain(v64);
    swift_release(v51);
    dispatch_sync(v18, v65);
    _Block_release(v65);
    LOBYTE(v65) = swift_isEscapingClosureAtFileLocation(v64, "", 89, 247, 26, 1);
    swift_bridgeObjectRelease(v13);
    swift_release(v63);
    swift_release(v64);
    if ((v65 & 1) != 0)
    {
      __break(1u);
      goto LABEL_55;
    }
    v66 = *(NSObject **)(v33 + v15);
    v67 = swift_allocObject(&unk_101294478, 32, 7);
    *(_QWORD *)(v67 + 16) = sub_100B2BD10;
    *(_QWORD *)(v67 + 24) = v33;
    v91 = sub_1005B72B0;
    v92 = v67;
    aBlock = _NSConcreteStackBlock;
    v88 = *(_QWORD *)"";
    v89 = sub_100618D24;
    v90 = &unk_101294490;
    v68 = _Block_copy(&aBlock);
    v69 = v92;
    swift_retain(v33);
    swift_retain(v67);
    swift_release(v69);
    dispatch_sync(v66, v68);
    _Block_release(v68);
    LOBYTE(v66) = swift_isEscapingClosureAtFileLocation(v67, "", 89, 273, 26, 1);
    swift_release(v33);
    v70 = swift_release(v67);
    if ((v66 & 1) != 0)
    {
LABEL_55:
      __break(1u);
LABEL_56:
      if (v51 >= 0)
        v74 = v52;
      else
        v74 = v51;
      swift_bridgeObjectRetain(v51);
      v53 = _CocoaArrayWrapper.endIndex.getter(v74);
      swift_bridgeObjectRelease(v51);
LABEL_32:
      v54 = (void **)_swiftEmptyArrayStorage;
      if (v53)
      {
        aBlock = (void **)_swiftEmptyArrayStorage;
        result = sub_100600724(0, v53 & ~(v53 >> 63), 0);
        if (v53 < 0)
        {
          __break(1u);
          return result;
        }
        v55 = 0;
        v54 = aBlock;
        do
        {
          if ((v51 & 0xC000000000000001) != 0)
          {
            v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v51);
          }
          else
          {
            v56 = *(_QWORD *)(v51 + 8 * v55 + 32);
            v57 = swift_retain(v56);
          }
          (*(void (**)(__n128))(*(_QWORD *)v56 + 256))(v57);
          swift_release(v56);
          aBlock = v54;
          v59 = (unint64_t)v54[2];
          v58 = (unint64_t)v54[3];
          if (v59 >= v58 >> 1)
          {
            sub_100600724(v58 > 1, v59 + 1, 1);
            v54 = aBlock;
          }
          ++v55;
          v54[2] = (void *)(v59 + 1);
          (*(void (**)(unint64_t, NSObject *, uint64_t))(v15 + 32))((unint64_t)v54+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v59, v18, v81);
        }
        while (v53 != v55);
      }
      v13 = (char *)sub_100AF7994((uint64_t)v54);
      swift_bridgeObjectRelease(v54);
      a2 = v80;
LABEL_43:
      v33 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
      if (qword_1013DD888 != -1)
        continue;
      goto LABEL_44;
    }
    break;
  }
  if (v78)
    v70.n128_f64[0] = v78(1, 0, v70);
  v71 = v76;
  v72 = static Date.now.getter(v70);
  v73 = Date.timeIntervalSince1970.getter(v72);
  result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v71, v79);
  *(double *)&v80[OBJC_IVAR____TtC8Freeform8CRLBoard_lastSaveChangesTime] = v73;
  return result;
}

char *sub_100B24950(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  objc_class *ObjectType;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  id v20;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = *(void **)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v8 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v9 = type metadata accessor for CRLContainerItemData(0);
  v19 = swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
  v10 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer] + v7);
  v11 = swift_dynamicCastClassUnconditional(v10, v9, 0, 0, 0);
  v12 = *(void **)(*(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  v13 = a1[OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported];
  v14 = objc_allocWithZone(ObjectType);
  v20 = v12;
  v15 = v5;
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  v16 = sub_100B2A698(v15, v6, v19, v11, v12, v13);

  swift_release(v6);
  swift_release(v8);
  swift_release(v10);

  v17 = swift_getObjectType(v2);
  swift_deallocPartialClassInstance(v2, v17, *(unsigned int *)((swift_isaMask & *v2) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v2) + 0x34));
  return v16;
}

void *sub_100B24BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CGFloat b;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  CGFloat v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  char **v17;
  _QWORD *v18;
  double *v19;
  uint64_t v20;
  Swift::String v21;
  void *object;
  CGFloat a;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Class isa;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  double d;
  CGFloat ty;
  _QWORD *v44;
  CGFloat tx;
  CGFloat c;
  CGFloat v47;
  double v48;
  uint64_t (*v49)(void);
  _QWORD *v50;
  void *v51;
  void *Strong;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  Class v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  CGFloat v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  uint64_t v73;
  void (*v74)(_QWORD, unint64_t, uint64_t, __n128);
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  double v79;
  double v80;
  uint64_t v81;
  double *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  Class v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  unint64_t v105;
  id v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  CGFloat v110;
  CGFloat v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  unint64_t v117;
  double v118;
  unint64_t v119;
  char *v120;
  char *v121;
  CGFloat v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  CGAffineTransform v129;
  CGAffineTransform t2;
  CGAffineTransform t1;
  double *v132;

  v109 = type metadata accessor for PKDrawing(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PKStroke(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  *(_QWORD *)&b = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v120 = (char *)&v100 - v8;
  __chkstk_darwin(v9);
  v121 = (char *)&v100 - v10;
  v11 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  sub_100B2574C((uint64_t)v11);
  v13 = v12;

  v14 = (unint64_t)objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
  v132 = _swiftEmptyArrayStorage;
  if (*(_QWORD *)&v13 >> 62)
    goto LABEL_60;
  v15 = *(_QWORD *)((*(_QWORD *)&v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v15)
  {
    v106 = (id)v14;
    v16 = 0.0;
    v105 = *(_QWORD *)&v13 & 0xC000000000000001;
    v102 = *(_QWORD *)&v13 & 0xFFFFFFFFFFFFFF8;
    v101 = *(_QWORD *)&v13 + 32;
    v17 = &selRef_startAnimation;
    v18 = &unk_1013F1000;
    v123 = v3;
    v124 = v4;
    v122 = b;
    v103 = v15;
    v104 = v13;
    while (1)
    {
      if (v105)
      {
        b = v16;
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(*(_QWORD *)&v16, *(_QWORD *)&v13);
        v34 = *(_QWORD *)&b + 1;
        if (__OFADD__(*(_QWORD *)&b, 1))
          goto LABEL_58;
      }
      else
      {
        if (*(_QWORD *)&v16 >= *(_QWORD *)(v102 + 16))
          goto LABEL_59;
        b = v16;
        v33 = *(id *)(v101 + 8 * *(_QWORD *)&v16);
        v34 = *(_QWORD *)&b + 1;
        if (__OFADD__(*(_QWORD *)&b, 1))
          goto LABEL_58;
      }
      v110 = b;
      v112 = *(double *)&v34;
      v13 = COERCE_DOUBLE(v33);
      sub_1004E3864();
      v36 = v35;
      v111 = v13;

      if ((unint64_t)v36 >> 62)
        break;
      b = *(double *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (b != 0.0)
        goto LABEL_14;
LABEL_4:
      v19 = _swiftEmptyArrayStorage;
LABEL_5:
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRetain(v19);
      sub_100621120(v20);
      t1.a = 1.04272732e-306;
      t1.b = -1.39234638e188;
      t2.a = v110;
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v21._object;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(object);
      a = t1.a;
      b = t1.b;
      *(_QWORD *)&t1.a = v19;
      swift_bridgeObjectRetain(v19);
      v24 = sub_1004B804C(&qword_101405CC8);
      v25 = sub_1004CBA30((unint64_t *)&unk_101405CD0, &qword_101405CC8, (uint64_t)&protocol conformance descriptor for [A]);
      v26 = v19;
      v27 = v107;
      v28 = PKDrawing.init<A>(strokes:)(&t1, v24, v25);
      v29 = PKDrawing.dataRepresentation()(v28);
      v14 = v30;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v27, v109);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1004BBBC8(v29, v14);
      t1.a = a;
      t1.b = b;
      v3 = v123;
      swift_bridgeObjectRetain(*(_QWORD *)&b);
      v32 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&t1, &type metadata for String);
      objc_msgSend(v106, "__swift_setObject:forKeyedSubscript:", isa, v32);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(*(_QWORD *)&b);

      swift_unknownObjectRelease(v32);
      v16 = v112;
      v13 = v104;
      if (*(_QWORD *)&v112 == v103)
      {
        swift_bridgeObjectRelease(*(_QWORD *)&v104);
        v82 = v132;
        v14 = (unint64_t)v106;
        goto LABEL_65;
      }
    }
    if (v36 < 0)
      v81 = v36;
    else
      v81 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    b = COERCE_DOUBLE(_CocoaArrayWrapper.endIndex.getter(v81));
    swift_bridgeObjectRelease(v36);
    if (b == 0.0)
      goto LABEL_4;
LABEL_14:
    v14 = 0;
    v117 = v36 & 0xC000000000000001;
    v114 = v36 & 0xFFFFFFFFFFFFFF8;
    v113 = v36 + 32;
    v19 = _swiftEmptyArrayStorage;
    v115 = v36;
    v116 = b;
    while (1)
    {
      if (v117)
      {
        v37 = COERCE_DOUBLE(specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v36));
      }
      else
      {
        if (v14 >= *(_QWORD *)(v114 + 16))
          goto LABEL_57;
        *(_QWORD *)&v37 = *(id *)(v113 + 8 * v14);
      }
      v13 = v37;
      if (__OFADD__(v14++, 1))
        break;
      v119 = v14;
      v39 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
      v40 = swift_dynamicCastClass(*(_QWORD *)&v13, v39);
      if (v40)
      {
        v41 = (_QWORD *)v40;
        v125 = (unint64_t)v19;
        v118 = COERCE_DOUBLE(*(id *)&v13);
        d = 1.0;
        ty = 0.0;
        v44 = v41;
        tx = 0.0;
        c = 0.0;
        v47 = 0.0;
        v48 = 1.0;
        while (1)
        {
          v49 = *(uint64_t (**)(void))((swift_isaMask & *v44) + 0xE0);
          v50 = v44;
          v51 = (void *)v49();
          objc_msgSend(v51, v17[498]);
          v128 = *(_OWORD *)&t1.a;
          v127 = *(_OWORD *)&t1.c;
          v126 = *(_OWORD *)&t1.tx;

          t1.a = v48;
          t1.b = v47;
          t1.c = c;
          t1.d = d;
          t1.tx = tx;
          t1.ty = ty;
          *(_OWORD *)&t2.a = v128;
          *(_OWORD *)&t2.c = v127;
          *(_OWORD *)&t2.tx = v126;
          CGAffineTransformConcat(&v129, &t1, &t2);
          v48 = v129.a;
          v47 = v129.b;
          c = v129.c;
          d = v129.d;
          tx = v129.tx;
          ty = v129.ty;
          Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v50 + v18[49]);

          if (!Strong)
            break;

          v53 = type metadata accessor for CRLBoardItem(0);
          v44 = (_QWORD *)swift_dynamicCastClass(Strong, v53);
          if (!v44)
            goto LABEL_28;
        }
        Strong = v50;
LABEL_28:

        v54 = sub_100B08F4C();
        if (v54)
        {
          v55 = v54;
          v56 = *(_QWORD *)(v54 + 16);
          if (v56)
          {
            *(_QWORD *)&t2.a = _swiftEmptyArrayStorage;
            sub_100600C9C(0, v56, 0);
            v57 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
            *(_QWORD *)&v126 = v55;
            *(_QWORD *)&v128 = v57;
            v58 = v55 + v57;
            v59 = *(_QWORD *)(v4 + 72);
            *(_QWORD *)&v127 = *(_QWORD *)(v4 + 16);
            do
            {
              v60 = v120;
              ((void (*)(char *, unint64_t, uint64_t))v127)(v120, v58, v3);
              v61 = PKStroke._bridgeToObjectiveC()().super.isa;
              t1.a = v48;
              t1.b = v47;
              t1.c = c;
              t1.d = d;
              t1.tx = tx;
              t1.ty = ty;
              v62 = -[objc_class crl_strokeByAppendingTransform:](v61, "crl_strokeByAppendingTransform:", &t1);

              static PKStroke._unconditionallyBridgeFromObjectiveC(_:)(v62);
              (*(void (**)(char *, uint64_t))(v4 + 8))(v60, v3);
              v13 = t2.a;
              if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)&t2.a) & 1) == 0)
              {
                sub_100600C9C(0, *(_QWORD *)(*(_QWORD *)&v13 + 16) + 1, 1);
                v13 = t2.a;
              }
              v64 = *(_QWORD *)(*(_QWORD *)&v13 + 16);
              v63 = *(_QWORD *)(*(_QWORD *)&v13 + 24);
              v65 = v121;
              if (v64 >= v63 >> 1)
              {
                sub_100600C9C(v63 > 1, v64 + 1, 1);
                v65 = v121;
                v13 = t2.a;
              }
              *(_QWORD *)(*(_QWORD *)&v13 + 16) = v64 + 1;
              v66 = *(_QWORD *)&v13 + v128 + v64 * v59;
              v4 = v124;
              v3 = v123;
              (*(void (**)(unint64_t, char *, uint64_t))(v124 + 32))(v66, v65, v123);
              t2.a = v13;
              v58 += v59;
              --v56;
            }
            while (v56);
            swift_bridgeObjectRelease(v126);
            v17 = &selRef_startAnimation;
            v18 = (_QWORD *)&unk_1013F1000;
            v36 = v115;
          }
          else
          {
            swift_bridgeObjectRelease(v54);
            v13 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
          }
          v67 = *(_QWORD *)(*(_QWORD *)&v13 + 16);
          v68 = v122;
          if (v67)
          {
            v69 = v4;
            v70 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
            v71 = *(_QWORD *)&v13 + v70;
            v72 = swift_bridgeObjectRetain(*(_QWORD *)&v13);
            v73 = *(_QWORD *)(v69 + 72);
            v74 = *(void (**)(_QWORD, unint64_t, uint64_t, __n128))(v69 + 16);
            v75 = v125;
            do
            {
              v74(*(_QWORD *)&v68, v71, v3, v72);
              if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) == 0)
                v75 = sub_100D11A1C(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
              v125 = v75;
              v77 = *(_QWORD *)(v75 + 16);
              v76 = *(_QWORD *)(v75 + 24);
              if (v77 >= v76 >> 1)
                v125 = sub_100D11A1C(v76 > 1, v77 + 1, 1, v125);
              v75 = v125;
              *(_QWORD *)(v125 + 16) = v77 + 1;
              v78 = v75 + v70 + v77 * v73;
              v68 = v122;
              v3 = v123;
              (*(void (**)(unint64_t, CGFloat, uint64_t))(v124 + 32))(v78, COERCE_CGFLOAT(*(_QWORD *)&v122), v123);
              v71 += v73;
              --v67;
            }
            while (v67);
            v79 = v118;

            swift_bridgeObjectRelease(*(_QWORD *)&v13);
            v4 = v124;
            v17 = &selRef_startAnimation;
            v18 = (_QWORD *)&unk_1013F1000;
            v36 = v115;
          }
          else
          {
            v80 = v118;

          }
          swift_bridgeObjectRelease(*(_QWORD *)&v13);
        }
        else
        {
          v13 = v118;

        }
        v19 = (double *)v125;
        b = v116;
      }
      else
      {

      }
      v14 = v119;
      if (v119 == *(_QWORD *)&b)
        goto LABEL_5;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    if (v13 < 0.0)
      v83 = *(_QWORD *)&v13;
    else
      v83 = *(_QWORD *)&v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v13);
    v15 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease(*(_QWORD *)&v13);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v13);
  v82 = _swiftEmptyArrayStorage;
LABEL_65:
  *(_QWORD *)&t1.a = v82;
  v84 = sub_1004B804C(&qword_101405CC8);
  v85 = sub_1004CBA30((unint64_t *)&unk_101405CD0, &qword_101405CC8, (uint64_t)&protocol conformance descriptor for [A]);
  v86 = v107;
  v87 = PKDrawing.init<A>(strokes:)(&t1, v84, v85);
  v88 = PKDrawing.dataRepresentation()(v87);
  v90 = v89;
  (*(void (**)(char *, uint64_t))(v108 + 8))(v86, v109);
  v91 = Data._bridgeToObjectiveC()().super.isa;
  sub_1004BBBC8(v88, v90);
  strcpy((char *)&t1, "MergedDrawing");
  HIWORD(t1.b) = -4864;
  v92 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&t1, &type metadata for String);
  objc_msgSend((id)v14, "__swift_setObject:forKeyedSubscript:", v91, v92);

  swift_unknownObjectRelease(v92);
  v93 = (void *)objc_opt_self(NSKeyedArchiver);
  t1.a = 0.0;
  v94 = objc_msgSend(v93, "archivedDataWithRootObject:requiringSecureCoding:error:", v14, 1, &t1);
  v95 = *(id *)&t1.a;
  if (v94)
  {
    v96 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v94);

  }
  else
  {
    v96 = v95;
    v97 = _convertNSErrorToError(_:)(v95);

    v100 = v97;
    swift_willThrow(v98);
  }

  return v96;
}

void sub_100B2574C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = (uint64_t)_swiftEmptyArrayStorage;
  v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v4)
  {
    sub_100740DA4();
    v4 = *(_QWORD *)(a1 + v3);
  }
  if (v4)
    v2 = v4;
  if (!((unint64_t)v2 >> 62))
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_7;
LABEL_24:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v17 = v2;
  else
    v17 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v2);
  if (!v5)
    goto LABEL_24;
LABEL_7:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v11 = *(id *)(v2 + 8 * i + 32);
      v12 = v11;
      v13 = type metadata accessor for CRLFreehandDrawingItem(0);
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v7 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v9 >= v8 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized Array._endMutation()(v10);
      }
      else
      {
        v15 = type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass(v12, v15))
        {
          v16 = sub_100B2574C();
          sub_100620F58(v16);
        }
      }

    }
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_100B259C0()
{
  return type metadata accessor for CRLImmutableBoard(0);
}

uint64_t type metadata accessor for CRLImmutableBoard(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101405BF8, (uint64_t)&nominal type descriptor for CRLImmutableBoard);
}

uint64_t sub_100B259DC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 984);
}

ValueMetadata *type metadata accessor for FixupBookkeepingData()
{
  return &type metadata for FixupBookkeepingData;
}

uint64_t *sub_100B25B84(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_retain(v4);
    v12(v9, v10, v11, v13);
    v14 = a3[6];
    v15 = a3[7];
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = v16;
    v17 = (char *)v7 + v15;
    v18 = (char *)a2 + v15;
    v19 = type metadata accessor for Date(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
    v21 = swift_retain(v16);
    v20(v17, v18, v19, v21);
  }
  return v7;
}

uint64_t sub_100B25C6C(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release(*(_QWORD *)((char *)a1 + a2[6]));
  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t *sub_100B25CEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  __n128 v20;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_retain(v6);
  v11(v8, v9, v10, v12);
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(uint64_t *)((char *)a2 + v13);
  *(uint64_t *)((char *)a1 + v13) = v15;
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = type metadata accessor for Date(0);
  v19 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
  v20 = swift_retain(v15);
  v19(v16, v17, v18, v20);
  return a1;
}

uint64_t *sub_100B25DAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(uint64_t *)((char *)a2 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_QWORD *sub_100B25E70(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t *sub_100B25F10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(uint64_t *)((char *)a1 + v11);
  *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_100B25FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B25FD0);
}

uint64_t sub_100B25FD0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100B26070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B2607C);
}

char *sub_100B2607C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_100B26118(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B261AC(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878((unint64_t *)&unk_101405CA0, type metadata accessor for CRLBoard, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100B261E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  char v32[24];
  objc_super v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (objc_class *)type metadata accessor for CRLBoard(0);
  v33.receiver = v0;
  v33.super_class = v12;
  v13 = objc_msgSendSuper2(&v33, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v34 = v14;
  v35 = v16;
  v17._countAndFlagsBits = 8250;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v20 = v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v32, 0, 0);
  sub_1004B8460(v20, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v19);
  v21 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v21);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v19);
  v22 = (uint64_t *)(*(_QWORD *)&v1[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v23 = *v22;
  v24 = v22[1];
  swift_bridgeObjectRetain(v24);
  sub_10067AFD0((uint64_t)v8, v23, v24, (uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v25 = sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  v26 = UUID.uuidString.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  return v34;
}

double sub_100B26428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  char v24[24];

  v6 = sub_1004B804C(&qword_101405EC0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(a3 + 16);
  swift_beginAccess(a3 + 16, v24, 0, 0);
  v11 = *(_QWORD *)(a3 + 16);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_100842E60(a1), (v13 & 1) != 0))
  {
    v14 = *(_QWORD **)(*(_QWORD *)(v11 + 56) + 8 * v12);
    v15 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 120);
    swift_beginAccess(v15, v23, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
    swift_retain(v14);
    sub_100AFC540((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v16 = v14;
  }
  else
  {
    v17 = sub_1005F840C(0);
    *((_BYTE *)v17 + *(_QWORD *)(*v17 + 136)) = 1;
    swift_beginAccess(v10, v23, 33, 0);
    swift_retain(v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
    v22 = *v10;
    *v10 = 0x8000000000000000;
    sub_100825D0C((uint64_t)v17, a1, isUniquelyReferenced_nonNull_native);
    v19 = *v10;
    *v10 = v22;
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v23);
    v16 = v17;
  }
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

double sub_100B265C4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  double result;
  uint64_t v9;

  swift_retain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
  v9 = *a3;
  *a3 = 0x8000000000000000;
  sub_100825D0C(a2, a1, isUniquelyReferenced_nonNull_native);
  v7 = *a3;
  *a3 = v9;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_100B26638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t KeyPath;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[24];

  v35 = a1;
  v36 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101405EC0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_101405EA0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v32 - v15;
  v17 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 120);
  swift_beginAccess(v17, v37, 0, 0);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v34 = v17;
  v33(v10, v17, v7);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v35, v3);
  __chkstk_darwin(v18);
  v19 = (uint64_t *)((char *)&v32 - ((v5 + 47) & 0xFFFFFFFFFFFFFFF0));
  *v19 = v3;
  v35 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v19[1] = v35;
  v19[2] = sub_1004B7878(&qword_101405F08, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&unk_100F304AC);
  v19[3] = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 32))(v19 + 4, v6, v3);
  KeyPath = swift_getKeyPath(&unk_100F277A8);
  v21 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  Capsule<>.subscript.getter(KeyPath, v7, v21);
  v22 = swift_release(KeyPath);
  v23 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
  v23(v10, v7, v22);
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_101405EA0);
  v24 = sub_1004B804C(&qword_101405F00);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v24) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_101405EA0);
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_101405EA0);
    v26 = 1;
    v27 = v36;
  }
  else
  {
    v33(v10, v34, v7);
    v28 = sub_1004B804C((uint64_t *)&unk_1014148B0);
    v29 = sub_1004CBA30(&qword_101405F20, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
    v30 = v36;
    Ref.subscript.getter(v10, v24, v28, v29);
    ((void (*)(char *, uint64_t))v23)(v10, v7);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_101405EA0);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
    v26 = 0;
    v27 = v30;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, v26, 1);
}

uint64_t sub_100B2699C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a3 + a2 - 32);
  v5 = *(_QWORD *)(a3 + a2 - 16);
  v6 = type metadata accessor for Ref(255, *(_QWORD *)(a3 + a2 - 24), *(_QWORD *)(a3 + a2 - 8));
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v6);
  v9 = *(_OWORD *)(v5 + 8);
  v12[0] = v4;
  v12[1] = v6;
  v13 = v9;
  v14 = WitnessTable;
  v15 = v8;
  v10 = type metadata accessor for CRDictionary(0, v12);
  return CRDictionary.subscript.getter(a2, v10);
}

uint64_t sub_100B26A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a4 + a3 - 32);
  v7 = *(_QWORD *)(a4 + a3 - 16);
  v8 = type metadata accessor for Ref(255, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 8));
  v9 = type metadata accessor for Optional(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v22 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)v22 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v22 - v14, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v8);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for Ref<A>, v8);
  v19 = *(_OWORD *)(v7 + 8);
  v22[0] = v6;
  v22[1] = v8;
  v23 = v19;
  v24 = WitnessTable;
  v25 = v18;
  v20 = type metadata accessor for CRDictionary(0, v22);
  return CRDictionary.subscript.setter(v13, v15, v20);
}

uint64_t sub_100B26B84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t);
  __n128 v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[9];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v40 - v8;
  v10 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = *v1;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v12 = swift_retain(a1);
    v13 = __CocoaSet.contains(_:)(v12);
    swift_release(a1);
    if ((v13 & 1) != 0)
    {
      sub_100B29244(v11, a1);
      v15 = v14;
      swift_bridgeObjectRelease(v10);
      return v15;
    }
LABEL_11:
    swift_bridgeObjectRelease(v10);
    return 0;
  }
  v41 = v1;
  Hasher.init(_seed:)(v49, *(_QWORD *)(v10 + 40));
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType(v16);
  v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
  v20 = swift_bridgeObjectRetain(v10);
  v47 = v17;
  v48 = v16;
  v45 = v19;
  v46 = ObjectType;
  ((void (*)(uint64_t, uint64_t, __n128))v19)(ObjectType, v17, v20);
  v21 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v49, v3, v21);
  v44 = *(void (**)(char *, uint64_t))(v4 + 8);
  v44(v9, v3);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v10 + 32);
  v24 = v22 & ~v23;
  v43 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    goto LABEL_11;
  v42 = ~v23;
  while (1)
  {
    v25 = v10;
    v26 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v24);
    v27 = v3;
    v28 = *(_QWORD *)(v26 + 24);
    v29 = swift_getObjectType(*(_QWORD *)(v26 + 16));
    v30 = *(void (**)(uint64_t, uint64_t, __n128))(v28 + 32);
    v31 = swift_retain(v26);
    v32 = v28;
    v3 = v27;
    v30(v29, v32, v31);
    v45(v46, v47);
    v33 = static UUID.== infix(_:_:)(v9);
    v34 = v44;
    v44(v7, v27);
    v34(v9, v27);
    swift_release(v26);
    if ((v33 & 1) != 0)
      break;
    v24 = (v24 + 1) & v42;
    v10 = v25;
    if (((*(_QWORD *)(v43 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(v25);
  v36 = v41;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v41);
  v38 = *v36;
  v49[0] = *v36;
  *v36 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100AE9E78();
    v38 = v49[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v38 + 48) + 8 * v24);
  sub_100BA088C(v24);
  v39 = *v36;
  *v36 = v49[0];
  swift_bridgeObjectRelease(v39);
  return v15;
}

uint64_t sub_100B26E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v22 = swift_bridgeObjectRelease(v10);
        v23 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
      }
    }
    swift_bridgeObjectRelease(v10);
    v24 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v26 = *v24;
    v35 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AE9E64();
      v26 = v35;
    }
    v27 = *(_QWORD *)(v26 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v27, v6);
    sub_100BA0B28(v16);
    v28 = *v24;
    *v24 = v35;
    v22 = swift_bridgeObjectRelease(v28);
    v23 = 0;
  }
  else
  {
    v22 = swift_bridgeObjectRelease(v10);
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
}

uint64_t sub_100B2709C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AEA8AC();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_100BA0B44(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

uint64_t sub_100B27228(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  char v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD v40[9];

  v9 = *(_QWORD *)v4;
  Hasher.init(_seed:)(v40, *(_QWORD *)(*(_QWORD *)v4 + 40));
  swift_bridgeObjectRetain(v9);
  sub_1009E3D90((uint64_t)v40, (uint64_t)a1, a2, a3, a4);
  v10 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
  if (((*(_QWORD *)(v9 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  v31 = -1 << *(_BYTE *)(v9 + 32);
  v34 = v4;
  v11 = *(_QWORD *)(v9 + 48) + 32 * v10;
  v12 = a2;
  v13 = *(id *)v11;
  v14 = *(void **)(v11 + 8);
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(_BYTE *)(v11 + 24);
  sub_1004DD884(*(id *)v11, v14, v15, v16);
  HIDWORD(v36) = a4;
  LOBYTE(v12) = sub_1009E554C((uint64_t)v13, (uint64_t)v14, v15, v16, (uint64_t)a1, v12, a3, a4, v31, v9 + 56, v34, v36, a1, v12);
  sub_1004DD8B8(v13, v14, v15, v16);
  if ((v12 & 1) == 0)
  {
    v21 = v33;
    v22 = ~v32;
    v10 = (v10 + 1) & ~v32;
    for (i = (v10 >> 3) & 0xFFFFFFFFFFFFF8; ((*(_QWORD *)(v21 + i) >> v10) & 1) != 0; i = (v10 >> 3) & 0xFFFFFFFFFFFFF8)
    {
      v24 = *(_QWORD *)(v9 + 48) + 32 * v10;
      v25 = *(id *)v24;
      v26 = *(void **)(v24 + 8);
      v27 = *(_QWORD *)(v24 + 16);
      v28 = *(_BYTE *)(v24 + 24);
      sub_1004DD884(*(id *)v24, v26, v27, v28);
      v29 = sub_1009E554C((uint64_t)v25, (uint64_t)v26, v27, v28, (uint64_t)v38, v39, a3, SBYTE4(v37), v32, v33, (uint64_t)v35, v37, v38, v39);
      sub_1004DD8B8(v25, v26, v27, v28);
      if ((v29 & 1) != 0)
        goto LABEL_3;
      v10 = (v10 + 1) & v22;
    }
    goto LABEL_10;
  }
LABEL_3:
  swift_bridgeObjectRelease(v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
  v18 = *v35;
  v40[0] = *v35;
  *v35 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AEAC38();
    v18 = v40[0];
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 32 * v10);
  sub_100BA0D08(v10);
  v20 = *v35;
  *v35 = v40[0];
  swift_bridgeObjectRelease(v20);
  return v19;
}

uint64_t sub_100B2748C(void *a1)
{
  return sub_100B2905C(a1, (void (*)(_QWORD))type metadata accessor for CRLCollaborationParticipant, (void (*)(unint64_t, __n128))sub_100BA0F30, sub_100AEB020, sub_100ADC314);
}

uint64_t sub_100B274B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[9];

  v44 = a2;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  v43 = v2;
  v14 = *v2;
  Hasher.init(_seed:)(v48, *(_QWORD *)(*v2 + 40));
  v15 = type metadata accessor for UUID(0);
  v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v14);
  dispatch thunk of Hashable.hash(into:)(v48, v15, v16);
  v45 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v17 = (uint64_t *)(a1 + *(int *)(v45 + 20));
  v18 = *v17;
  v19 = v17[1];
  swift_bridgeObjectRetain(v19);
  String.hash(into:)(v48, v18, v19);
  swift_bridgeObjectRelease();
  v20 = Hasher._finalize()();
  v21 = -1 << *(_BYTE *)(v14 + 32);
  v22 = v20 & ~v21;
  v23 = v14;
  v47 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
    v34 = swift_bridgeObjectRelease();
    v35 = 1;
    v36 = v44;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v36, v35, 1, v4, v34);
  }
  v41 = v5;
  v42 = v4;
  v46 = ~v21;
  v24 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    v25 = v23;
    sub_1004B8460(*(_QWORD *)(v23 + 48) + v24 * v22, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    v26 = static UUID.== infix(_:_:)(v13);
    sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    sub_1004B8460(a1, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    if ((v26 & 1) == 0)
    {
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_4;
    }
    v27 = *(int *)(v45 + 20);
    v28 = *(_QWORD *)&v10[v27];
    v29 = *(_QWORD *)&v10[v27 + 8];
    v30 = &v7[v27];
    v31 = *((_QWORD *)v30 + 1);
    if (v28 == *(_QWORD *)v30 && v29 == v31)
      break;
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, *(_QWORD *)v30, v31, 0);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    if ((v33 & 1) != 0)
      goto LABEL_15;
LABEL_4:
    v22 = (v22 + 1) & v46;
    v23 = v25;
    if (((*(_QWORD *)(v47 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    {
      v34 = swift_bridgeObjectRelease();
      v35 = 1;
      v36 = v44;
      goto LABEL_18;
    }
  }
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
LABEL_15:
  swift_bridgeObjectRelease();
  v37 = v43;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v43);
  v39 = *v37;
  v48[0] = *v37;
  *v37 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100AEAC24();
    v39 = v48[0];
  }
  v36 = v44;
  sub_1004B84E0(*(_QWORD *)(v39 + 48) + v24 * v22, v44, type metadata accessor for CRLBoardIdentifier);
  sub_100BA0F34(v22);
  *v37 = v48[0];
  v34 = swift_bridgeObjectRelease();
  v35 = 0;
LABEL_18:
  v5 = v41;
  v4 = v42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v36, v35, 1, v4, v34);
}

void sub_100B27820(double a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, Swift::UInt64 a5@<D0>)
{
  _QWORD *v5;
  uint64_t v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  Swift::UInt64 v14;
  Swift::UInt64 v15;
  Swift::UInt64 v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  BOOL v27;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD v37[9];

  v11 = *v5;
  Hasher.init(_seed:)(v37, *(_QWORD *)(*v5 + 40));
  v12 = *(_QWORD *)&a1;
  v13 = *(_QWORD *)&a2;
  if ((a3 & 1) != 0)
  {
    v12 = qword_100F27860[*(_QWORD *)&a1];
    v13 = v12;
  }
  if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v14 = v12;
  else
    v14 = 0;
  Hasher._combine(_:)(v14);
  if ((v13 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v15 = v13;
  else
    v15 = 0;
  Hasher._combine(_:)(v15);
  if ((a5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v16 = a5;
  else
    v16 = 0;
  Hasher._combine(_:)(v16);
  v17 = Hasher._finalize()();
  v18 = -1 << *(_BYTE *)(v11 + 32);
  v19 = v17 & ~v18;
  v20 = 0uLL;
  if (((*(_QWORD *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v21 = ~v18;
    while (1)
    {
      v22 = *(_QWORD *)(v11 + 48) + 32 * v19;
      if (*(_BYTE *)(v22 + 16) == 1)
      {
        v23 = &dbl_100F27888[*(_QWORD *)v22];
        v24 = *v23;
      }
      else
      {
        v23 = (double *)(v22 + 8);
        v24 = *(double *)v22;
      }
      v25 = a1;
      v26 = a2;
      if ((a3 & 1) != 0)
      {
        v25 = dbl_100F27888[*(_QWORD *)&a1];
        v26 = v25;
      }
      v27 = v24 == v25 && *v23 == v26;
      if (v27 && *(double *)(v22 + 24) == *(double *)&a5)
        break;
      v19 = (v19 + 1) & v21;
      if (((*(_QWORD *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_27;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v33 = *v5;
    v37[0] = *v5;
    *v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEB1BC();
      v33 = v37[0];
    }
    v34 = *(_QWORD *)(v33 + 48) + 32 * v19;
    v36 = *(_OWORD *)v34;
    v29 = *(unsigned __int8 *)(v34 + 16);
    v30 = *(_QWORD *)(v34 + 24);
    sub_100BA1218(v19);
    v35 = *v5;
    *v5 = v37[0];
    swift_bridgeObjectRelease(v35);
    v20 = v36;
    v31 = 0;
  }
  else
  {
LABEL_27:
    v29 = 0;
    v30 = 0;
    v31 = 1;
  }
  *(_OWORD *)a4 = v20;
  *(_QWORD *)(a4 + 16) = v29;
  *(_QWORD *)(a4 + 24) = v30;
  *(_BYTE *)(a4 + 32) = v31;
}

uint64_t sub_100B27A18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v4 = v2;
    else
      v4 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = swift_retain(a1);
    v6 = __CocoaSet.contains(_:)(v5);
    swift_release(a1);
    if ((v6 & 1) != 0)
    {
      sub_100B2951C(v4, a1);
      v8 = v7;
      swift_bridgeObjectRelease(v2);
      return v8;
    }
LABEL_11:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  v9 = *(_QWORD *)(v2 + 40);
  v10 = type metadata accessor for CalculateExpression(0);
  v11 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain(v2);
  v12 = dispatch thunk of Hashable._rawHashValue(seed:)(v9, v10, v11);
  v13 = -1 << *(_BYTE *)(v2 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    goto LABEL_11;
  v15 = ~v13;
  sub_1004B7878(&qword_1013DEA10, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  while (1)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v20, &v21) & 1) != 0)
      break;
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v18 = *v1;
  v20 = *v1;
  *v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100AEB368();
    v18 = v20;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v14);
  sub_100BA1410(v14);
  v19 = *v1;
  *v1 = v20;
  swift_bridgeObjectRelease(v19);
  return v8;
}

uint64_t sub_100B27C04(Swift::UInt a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::UInt v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _QWORD v21[9];

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = swift_retain(a1);
    v7 = __CocoaSet.contains(_:)(v6);
    swift_release(a1);
    if ((v7 & 1) != 0)
    {
      sub_100B296CC(v5, a1);
      v9 = v8;
      swift_bridgeObjectRelease();
      return v9;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  Hasher.init(_seed:)(v21, *(_QWORD *)(v4 + 40));
  Hasher._combine(_:)(a1);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  v13 = ~v11;
  v14 = a1 + 16;
  swift_bridgeObjectRetain(v4);
  while (1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) + 16);
    if (Strong)
    {
      v16 = Strong;
      v17 = swift_unknownObjectWeakLoadStrong(v14);
      swift_unknownObjectRelease(v16);
      if (v17)
      {
        swift_unknownObjectRelease(v17);
        if (v16 == v17)
          break;
      }
    }
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v19 = *v2;
  v21[0] = *v2;
  *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100AEB374();
    v19 = v21[0];
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
  sub_100BA15E4(v12);
  *v2 = v21[0];
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100B27DC8(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v8 = __CocoaSet.contains(_:)(v7);

    if ((v8 & 1) != 0)
    {
      sub_100B2986C(v5, (uint64_t)v6, (uint64_t (*)(__n128))sub_100ADC940, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (void (*)(unint64_t, __n128))sub_100BA0F30);
      v10 = v9;
      swift_bridgeObjectRelease();
      return v10;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v11 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v12 = NSObject._rawHashValue(seed:)(v11);
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v4 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    goto LABEL_15;
  sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v15 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
  v16 = static NSObject.== infix(_:_:)(v15, a1);

  if ((v16 & 1) == 0)
  {
    v17 = ~v13;
    do
    {
      v14 = (v14 + 1) & v17;
      if (((*(_QWORD *)(v4 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_15;
      v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
      v19 = static NSObject.== infix(_:_:)(v18, a1);

    }
    while ((v19 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v21 = *v2;
  v23 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AEB380();
    v21 = v23;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v14);
  sub_100BA0F30(v14);
  *v2 = v23;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100B27FBC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v8 = __CocoaSet.contains(_:)(v7);

    if ((v8 & 1) != 0)
    {
      sub_100B2986C(v5, (uint64_t)v6, (uint64_t (*)(__n128))sub_100ADC95C, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr, (void (*)(unint64_t, __n128))sub_100BA0F30);
      v10 = v9;
      swift_bridgeObjectRelease();
      return v10;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v11 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v12 = NSObject._rawHashValue(seed:)(v11);
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v4 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    goto LABEL_15;
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  v15 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
  v16 = static NSObject.== infix(_:_:)(v15, a1);

  if ((v16 & 1) == 0)
  {
    v17 = ~v13;
    do
    {
      v14 = (v14 + 1) & v17;
      if (((*(_QWORD *)(v4 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_15;
      v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
      v19 = static NSObject.== infix(_:_:)(v18, a1);

    }
    while ((v19 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v21 = *v2;
  v23 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AEB38C();
    v21 = v23;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v14);
  sub_100BA0F30(v14);
  *v2 = v23;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100B281B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_1004B7878(&qword_101405600, v12, (uint64_t)&protocol conformance descriptor for UTType);
  swift_bridgeObjectRetain(v10);
  v32 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v30 = v3;
    v31 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v33 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      sub_1004B7878((unint64_t *)&qword_1013FFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v32);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v22 = swift_bridgeObjectRelease();
        v23 = 1;
        a2 = v31;
        v7 = v33;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
      }
    }
    swift_bridgeObjectRelease();
    v24 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
    v26 = *v24;
    v34 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEB398();
      v26 = v34;
    }
    v27 = *(_QWORD *)(v26 + 48) + v20;
    v7 = v33;
    a2 = v31;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 32))(v31, v27, v6);
    sub_100BA178C(v16);
    *v24 = v34;
    v22 = swift_bridgeObjectRelease();
    v23 = 0;
  }
  else
  {
    v22 = swift_bridgeObjectRelease();
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
}

uint64_t sub_100B283EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  __n128 v17;
  uint64_t v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v9);
  sub_10065506C();
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v25 = v2;
    v26 = v6;
    v27 = v5;
    v28 = a2;
    v13 = ~v11;
    v14 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1004B8460(*(_QWORD *)(v9 + 48) + v14 * v12, (uint64_t)v8, type metadata accessor for CRLSELibraryViewModel.Item);
      sub_1006577BC((uint64_t)v8, a1);
      v16 = v15;
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSELibraryViewModel.Item);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        v17 = swift_bridgeObjectRelease(v9);
        v18 = 1;
        a2 = v28;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease(v9);
    v19 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
    v21 = *v19;
    v29[0] = *v19;
    *v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEB3AC();
      v21 = v29[0];
    }
    a2 = v28;
    sub_1004B84E0(*(_QWORD *)(v21 + 48) + v14 * v12, v28, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_100BA17A8(v12);
    v22 = *v19;
    *v19 = v29[0];
    v17 = swift_bridgeObjectRelease(v22);
    v18 = 0;
LABEL_10:
    v6 = v26;
    v5 = v27;
  }
  else
  {
    v17 = swift_bridgeObjectRelease(v9);
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(a2, v18, 1, v5, v17);
}

uint64_t sub_100B285E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  __n128 v67;
  uint64_t v68;
  uint64_t *v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[10];

  v3 = v2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v80 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v73 - v9;
  __chkstk_darwin(v11);
  v81 = (char *)&v73 - v12;
  __chkstk_darwin(v13);
  v79 = (uint64_t)&v73 - v14;
  __chkstk_darwin(v15);
  v78 = (uint64_t)&v73 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - v18;
  v90 = sub_1004B804C(&qword_1013FE120);
  __chkstk_darwin(v90);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v84 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v85 = (uint64_t)&v73 - v26;
  __chkstk_darwin(v27);
  v92 = (uint64_t)&v73 - v28;
  v29 = *v3;
  Hasher.init(_seed:)(v93, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v29);
  v91 = a1;
  sub_100972048((uint64_t)v93);
  v30 = Hasher._finalize()();
  v31 = -1 << *(_BYTE *)(v29 + 32);
  v32 = v30 & ~v31;
  v33 = v29;
  v89 = v29 + 56;
  if (((*(_QWORD *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
  {
    v67 = swift_bridgeObjectRelease();
    v68 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(a2, v68, 1, v22, v67);
  }
  v77 = v10;
  v73 = v3;
  v75 = a2;
  v86 = ~v31;
  v74 = v23;
  v87 = *(_QWORD *)(v23 + 72);
  v34 = (uint64_t)v81;
  v35 = (uint64_t)v84;
  v36 = v92;
  v83 = v22;
  v88 = v33;
  v76 = v19;
  while (1)
  {
    v37 = v87 * v32;
    sub_1004B8460(*(_QWORD *)(v33 + 48) + v87 * v32, v36, type metadata accessor for CRLSpotlightManager.ChangeType);
    v38 = v36;
    v39 = (uint64_t)&v21[*(int *)(v90 + 48)];
    sub_1004B8460(v38, (uint64_t)v21, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_1004B8460(v91, v39, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload(v21, v22) != 1)
      break;
    sub_1004B8460((uint64_t)v21, v35, type metadata accessor for CRLSpotlightManager.ChangeType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v39, v22);
    v41 = v35;
    if (EnumCaseMultiPayload == 1)
    {
      v82 = v37;
      sub_1004B84E0(v39, v34, type metadata accessor for CRLBoardIdentifier);
      v42 = static UUID.== infix(_:_:)(v35);
      v43 = (uint64_t)v77;
      sub_1004B8460(v35, (uint64_t)v77, type metadata accessor for CRLBoardIdentifier);
      v44 = v80;
      sub_1004B8460(v34, v80, type metadata accessor for CRLBoardIdentifier);
      if ((v42 & 1) != 0)
      {
        v45 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v46 = *(_QWORD *)(v43 + v45);
        v47 = *(_QWORD *)(v43 + v45 + 8);
        v48 = (_QWORD *)(v44 + v45);
        v49 = v48[1];
        if (v46 == *v48 && v47 == v49)
        {
          v65 = v44;
          goto LABEL_29;
        }
        v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, *v48, v49, 0);
        sub_1004B84A4(v44, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v34, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
        v22 = v83;
        v19 = v76;
        if ((v51 & 1) != 0)
          goto LABEL_30;
      }
      else
      {
        sub_1004B84A4(v44, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v34, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
        v22 = v83;
        v19 = v76;
      }
      goto LABEL_24;
    }
LABEL_3:
    sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
    sub_1004CB800((uint64_t)v21, &qword_1013FE120);
LABEL_4:
    v36 = v92;
    sub_1004B84A4(v92, type metadata accessor for CRLSpotlightManager.ChangeType);
    v32 = (v32 + 1) & v86;
    v33 = v88;
    if (((*(_QWORD *)(v89 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
    {
      v67 = swift_bridgeObjectRelease();
      v68 = 1;
      a2 = v75;
      goto LABEL_33;
    }
  }
  v52 = v85;
  sub_1004B8460((uint64_t)v21, v85, type metadata accessor for CRLSpotlightManager.ChangeType);
  v53 = swift_getEnumCaseMultiPayload(v39, v22);
  v41 = v52;
  v35 = (uint64_t)v84;
  if (v53 == 1)
    goto LABEL_3;
  v82 = v37;
  sub_1004B84E0(v39, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  v54 = v85;
  v55 = static UUID.== infix(_:_:)(v85);
  v56 = v78;
  sub_1004B8460(v54, v78, type metadata accessor for CRLBoardIdentifier);
  v57 = v79;
  sub_1004B8460((uint64_t)v19, v79, type metadata accessor for CRLBoardIdentifier);
  if ((v55 & 1) == 0)
  {
    sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v56, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
    v34 = (uint64_t)v81;
    v22 = v83;
    v35 = (uint64_t)v84;
LABEL_24:
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLSpotlightManager.ChangeType);
    goto LABEL_4;
  }
  v34 = (uint64_t)v19;
  v58 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v59 = *(_QWORD *)(v56 + v58);
  v60 = *(_QWORD *)(v56 + v58 + 8);
  v61 = (uint64_t *)(v57 + v58);
  v62 = *v61;
  v63 = v61[1];
  v64 = v59 == *v61 && v60 == v63;
  v65 = v57;
  v43 = v56;
  if (!v64)
  {
    v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, v62, v63, 0);
    sub_1004B84A4(v57, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
    v19 = (char *)v34;
    sub_1004B84A4(v34, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4(v85, type metadata accessor for CRLBoardIdentifier);
    v34 = (uint64_t)v81;
    v22 = v83;
    v35 = (uint64_t)v84;
    if ((v66 & 1) != 0)
      goto LABEL_30;
    goto LABEL_24;
  }
  v35 = v85;
LABEL_29:
  v22 = v83;
  sub_1004B84A4(v65, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v43, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v34, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
LABEL_30:
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_1004B84A4(v92, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_bridgeObjectRelease();
  v69 = v73;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v73);
  v71 = *v69;
  v93[0] = *v69;
  *v69 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100AEB718();
    v71 = v93[0];
  }
  a2 = v75;
  sub_1004B84E0(*(_QWORD *)(v71 + 48) + v82, v75, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_100BA1E9C(v32);
  *v69 = v93[0];
  v67 = swift_bridgeObjectRelease();
  v68 = 0;
LABEL_33:
  v23 = v74;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(a2, v68, 1, v22, v67);
}

uint64_t sub_100B28CF4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = *v2;
  v5 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v2 + 40), a1);
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v11 = *v2;
  v15 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AEB944();
    v11 = v15;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_100BA2230(v7);
  v13 = *v2;
  *v2 = v15;
  swift_bridgeObjectRelease(v13);
  return v12;
}

uint64_t sub_100B28DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_1004B7878(&qword_101405480, v12, (uint64_t)&protocol conformance descriptor for IndexPath);
  swift_bridgeObjectRetain(v10);
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      sub_1004B7878(&qword_101405D30, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v22 = swift_bridgeObjectRelease(v10);
        v23 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
      }
    }
    swift_bridgeObjectRelease(v10);
    v24 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v26 = *v24;
    v35 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEBAD8();
      v26 = v35;
    }
    v27 = *(_QWORD *)(v26 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v27, v6);
    sub_100BA23B4(v16);
    v28 = *v24;
    *v24 = v35;
    v22 = swift_bridgeObjectRelease(v28);
    v23 = 0;
  }
  else
  {
    v22 = swift_bridgeObjectRelease(v10);
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v23, 1, v6, v22);
}

uint64_t sub_100B29038(void *a1)
{
  return sub_100B2905C(a1, (void (*)(_QWORD))type metadata accessor for CRLSceneInfo, (void (*)(unint64_t, __n128))sub_100BA0F30, sub_100AEBD10, sub_100ADCB20);
}

uint64_t sub_100B2905C(void *a1, void (*a2)(_QWORD), void (*a3)(unint64_t, __n128), void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v12;
  id v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(void);
  uint64_t v33;

  v8 = v5;
  v10 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v12 = *v5;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v13 = a1;
    v15 = __CocoaSet.contains(_:)(v14);

    if ((v15 & 1) != 0)
    {
      sub_100B29A0C(v12, (uint64_t)v13, a5, a2, a3);
      v17 = v16;
      swift_bridgeObjectRelease(v10);
      return v17;
    }
LABEL_15:
    swift_bridgeObjectRelease(v10);
    return 0;
  }
  v19 = *(_QWORD *)(v10 + 40);
  swift_bridgeObjectRetain(v10);
  v20 = NSObject._rawHashValue(seed:)(v19);
  v21 = -1 << *(_BYTE *)(v10 + 32);
  v22 = v20 & ~v21;
  if (((*(_QWORD *)(v10 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    goto LABEL_15;
  v32 = a4;
  a2(0);
  v23 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v22);
  v24 = static NSObject.== infix(_:_:)(v23, a1);

  if ((v24 & 1) == 0)
  {
    v25 = ~v21;
    do
    {
      v22 = (v22 + 1) & v25;
      if (((*(_QWORD *)(v10 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_15;
      v26 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v22);
      v27 = static NSObject.== infix(_:_:)(v26, a1);

    }
    while ((v27 & 1) == 0);
  }
  swift_bridgeObjectRelease(v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
  v29 = *v8;
  v33 = *v8;
  *v8 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    v32();
    v29 = v33;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v29 + 48) + 8 * v22);
  ((void (*)(unint64_t))a3)(v22);
  v30 = *v8;
  *v8 = v33;
  swift_bridgeObjectRelease(v30);
  return v17;
}

void sub_100B29244(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t);
  __n128 v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, __n128);
  __n128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int *v37;
  Swift::Int v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  _QWORD v45[9];
  Swift::Int v46;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v37 - v10;
  v37 = v2;
  swift_bridgeObjectRelease(*v2);
  v12 = __CocoaSet.count.getter(a1);
  v13 = swift_unknownObjectRetain(a1);
  v14 = sub_100ADBE80(v13, v12);
  v46 = v14;
  Hasher.init(_seed:)(v45, *(_QWORD *)(v14 + 40));
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  ObjectType = swift_getObjectType(v15);
  v18 = *(void (**)(uint64_t, uint64_t))(v16 + 32);
  v19 = swift_retain(v14);
  v41 = v15;
  v42 = v16;
  v39 = ObjectType;
  v40 = v18;
  ((void (*)(uint64_t, uint64_t, __n128))v18)(ObjectType, v16, v19);
  v20 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v45, v5, v20);
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v43 = v5;
  v21(v11, v5);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v14 + 32);
  v24 = v22 & ~v23;
  v44 = v14;
  v38 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
  {
    v25 = ~v23;
    while (1)
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v44 + 48) + 8 * v24);
      v27 = *(_QWORD *)(v26 + 24);
      v28 = swift_getObjectType(*(_QWORD *)(v26 + 16));
      v29 = *(void (**)(uint64_t, uint64_t, __n128))(v27 + 32);
      v30 = swift_retain(v26);
      v29(v28, v27, v30);
      v40(v39, v42);
      v31 = static UUID.== infix(_:_:)(v11);
      v32 = v43;
      v21(v9, v43);
      v21(v11, v32);
      swift_release(v26);
      if ((v31 & 1) != 0)
        break;
      v24 = (v24 + 1) & v25;
      if (((*(_QWORD *)(v38 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
        swift_release(v44);
        __break(1u);
        break;
      }
    }
    swift_release(v44);
    v33 = *(_QWORD *)(*(_QWORD *)(v46 + 48) + 8 * v24);
    sub_100BA088C(v24);
    v40(v39, v42);
    v34 = *(_QWORD *)(v33 + 24);
    v35 = swift_getObjectType(*(_QWORD *)(v33 + 16));
    (*(void (**)(uint64_t, uint64_t))(v34 + 32))(v35, v34);
    LOBYTE(v34) = static UUID.== infix(_:_:)(v11);
    v36 = v43;
    v21(v9, v43);
    v21(v11, v36);
    if ((v34 & 1) != 0)
    {
      *v37 = v46;
      return;
    }
    __break(1u);
  }
  swift_release(v44);
  __break(1u);
}

void sub_100B2951C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v17 = a2;
  swift_bridgeObjectRelease(*v3);
  v5 = __CocoaSet.count.getter(a1);
  swift_unknownObjectRetain(a1);
  v7 = sub_100ADC51C(v6, v5);
  v16 = v7;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = type metadata accessor for CalculateExpression(0);
  v10 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain(v7);
  v11 = dispatch thunk of Hashable._rawHashValue(seed:)(v8, v9, v10);
  v12 = -1 << *(_BYTE *)(v7 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v7 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    sub_1004B7878(&qword_1013DEA10, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    while (1)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v15, &v17) & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v7 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_release(v7);
        __break(1u);
        break;
      }
    }
    swift_release(v7);
    v7 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13);
    v15 = v7;
    sub_100BA1410(v13);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v17, &v15) & 1) != 0)
    {
      *v3 = v16;
      return;
    }
    __break(1u);
  }
  swift_release(v7);
  __break(1u);
}

void sub_100B296CC(uint64_t a1, Swift::UInt a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::UInt v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[9];
  Swift::Int v21;

  v3 = v2;
  swift_bridgeObjectRelease();
  v6 = __CocoaSet.count.getter(a1);
  swift_unknownObjectRetain(a1);
  v8 = sub_100ADC73C(v7, v6);
  v21 = v8;
  Hasher.init(_seed:)(v20, *(_QWORD *)(v8 + 40));
  Hasher._combine(_:)(a2);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = a2 + 16;
    swift_retain(v8);
    while (1)
    {
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v11) + 16);
      if (Strong)
      {
        v15 = Strong;
        v16 = swift_unknownObjectWeakLoadStrong(v13);
        swift_unknownObjectRelease(v15);
        if (v16)
        {
          swift_unknownObjectRelease(v16);
          if (v15 == v16)
            break;
        }
      }
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_13;
    }
    swift_release(v8);
    v8 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v11);
    sub_100BA15E4(v11);
    v17 = swift_unknownObjectWeakLoadStrong(v13);
    if (!v17)
      goto LABEL_14;
    v18 = v17;
    v19 = swift_unknownObjectWeakLoadStrong(v8 + 16);
    swift_unknownObjectRelease(v18);
    if (!v19)
      goto LABEL_14;
    swift_unknownObjectRelease(v19);
    if (v18 == v19)
    {
      *v3 = v21;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  swift_release(v8);
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_100B2986C(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128), unint64_t *a4, _QWORD *a5, void (*a6)(unint64_t, __n128))
{
  uint64_t *v6;
  uint64_t *v11;
  __n128 v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  __n128 v25;
  uint64_t v26;

  v11 = v6;
  swift_bridgeObjectRelease();
  __CocoaSet.count.getter(a1);
  v14 = swift_unknownObjectRetain(a1);
  v15 = a3(v14);
  v26 = v15;
  v16 = *(_QWORD *)(v15 + 40);
  swift_retain(v15);
  v17 = NSObject._rawHashValue(seed:)(v16);
  v18 = -1 << *(_BYTE *)(v15 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    sub_1004B8930(0, a4, a5);
    v20 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * v19);
    v21 = static NSObject.== infix(_:_:)(v20, a2);

    if ((v21 & 1) != 0)
    {
LABEL_6:
      v25 = swift_release(v15);
      v15 = *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v19);
      a6(v19, v25);
      if ((static NSObject.== infix(_:_:)(a2, v15) & 1) != 0)
      {
        *v11 = v26;
        return;
      }
      __break(1u);
    }
    else
    {
      v22 = ~v18;
      while (1)
      {
        v19 = (v19 + 1) & v22;
        if (((*(_QWORD *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          break;
        v23 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, a2);

        if ((v24 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v15);
    __break(1u);
  }
  swift_release(v15);
  __break(1u);
}

void sub_100B29A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(_QWORD), void (*a5)(unint64_t, __n128))
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  __n128 v24;
  uint64_t v25;

  v9 = v5;
  swift_bridgeObjectRelease(*v9);
  v12 = __CocoaSet.count.getter(a1);
  v13 = swift_unknownObjectRetain(a1);
  v14 = a3(v13, v12);
  v25 = v14;
  v15 = *(_QWORD *)(v14 + 40);
  swift_retain(v14);
  v16 = NSObject._rawHashValue(seed:)(v15);
  v17 = -1 << *(_BYTE *)(v14 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    a4(0);
    v19 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v18);
    v20 = static NSObject.== infix(_:_:)(v19, a2);

    if ((v20 & 1) != 0)
    {
LABEL_6:
      v24 = swift_release(v14);
      v14 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v18);
      a5(v18, v24);
      if ((static NSObject.== infix(_:_:)(a2, v14) & 1) != 0)
      {
        *v9 = v25;
        return;
      }
      __break(1u);
    }
    else
    {
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v14);
    __break(1u);
  }
  swift_release(v14);
  __break(1u);
}

double sub_100B29BA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = *(int *)(sub_1004B804C(&qword_101405F50) + 48);
  v5 = *(int *)(sub_1004B804C((uint64_t *)&unk_101405F40) + 48);
  v6 = *(_QWORD *)(a1 + v4);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  *(_QWORD *)(a2 + v5) = v6;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

void sub_100B29C14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, uint64_t *, __n128), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t *__return_ptr, uint64_t *, uint64_t *, __n128);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v7 = v6;
  v54 = a5;
  v55 = a6;
  v58 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E7580);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = -1 << *(_BYTE *)(a1 + 32);
  v19 = ~v18;
  v20 = *(_QWORD *)(a1 + 64);
  v21 = -v18;
  v62 = a1;
  v63 = a1 + 64;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v64 = v19;
  v65 = 0;
  v66 = v22 & v20;
  v67 = a2;
  v68 = a3;
  v53 = a1;
  swift_bridgeObjectRetain(a1);
  v52 = a3;
  swift_retain(a3);
  sub_100CE052C((uint64_t)v17);
  v23 = sub_1004B804C((uint64_t *)&unk_101405F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release(v52);
    swift_bridgeObjectRelease(v53);
    sub_1004D284C(v62);
    swift_release(v68);
    return;
  }
  v56 = v12;
  v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  while (1)
  {
    v29 = *(int *)(v23 + 48);
    v24(v14, v17, v58);
    v30 = *(_QWORD *)&v17[v29];
    v69 = v30;
    v31 = *(_QWORD **)v7;
    v33 = sub_100842EFC((uint64_t)v14);
    v34 = v31[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v58);
      __break(1u);
      goto LABEL_26;
    }
    v37 = v32;
    if (v31[3] < v36)
      break;
    if ((a4 & 1) != 0)
    {
      if ((v32 & 1) != 0)
        goto LABEL_17;
    }
    else
    {
      sub_10082CCAC();
      if ((v37 & 1) != 0)
        goto LABEL_17;
    }
LABEL_7:
    v25 = *(_QWORD **)v7;
    *(_QWORD *)(*(_QWORD *)v7 + 8 * (v33 >> 6) + 64) |= 1 << v33;
    v24((char *)(v25[6] + *(_QWORD *)(v56 + 72) * v33), v14, v58);
    *(_QWORD *)(v25[7] + 8 * v33) = v30;
    v26 = v25[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_24;
    v25[2] = v28;
LABEL_9:
    sub_100CE052C((uint64_t)v17);
    v23 = sub_1004B804C((uint64_t *)&unk_101405F40);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
      goto LABEL_5;
  }
  sub_100815638(v36, a4 & 1);
  v38 = sub_100842EFC((uint64_t)v14);
  if ((v37 & 1) != (v39 & 1))
    goto LABEL_25;
  v33 = v38;
  if ((v37 & 1) == 0)
    goto LABEL_7;
LABEL_17:
  v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 56) + 8 * v33);
  v61 = v40;
  v41 = swift_retain(v40);
  v42 = v57;
  v54(&v59, &v61, &v69, v41);
  if (!v42)
  {
    v57 = 0;
    swift_release(v30);
    v43 = swift_release(v40);
    (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v14, v58, v43);
    v44 = *(_QWORD *)(*(_QWORD *)v7 + 56);
    v45 = 8 * v33;
    v46 = v59;
    swift_release(*(_QWORD *)(v44 + v45));
    *(_QWORD *)(v44 + v45) = v46;
    goto LABEL_9;
  }
  swift_release(v40);
  v61 = v42;
  swift_errorRetain(v42);
  v47 = sub_1004B804C(&qword_1013E0210);
  if ((swift_dynamicCast(v47, &v61, v47, &type metadata for _MergeError, 0) & 1) == 0)
  {
    swift_release(v52);
    swift_bridgeObjectRelease(v53);
    v48 = swift_release(v69);
    (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v14, v58, v48);
    sub_1004D284C(v62);
    swift_release(v68);
    swift_errorRelease(v61);
    return;
  }
LABEL_26:
  v59 = 0;
  v60 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v49._object = (void *)0x8000000100FE7890;
  v49._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v49);
  _print_unlocked<A, B>(_:_:)(v14, &v59, v58, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v50._countAndFlagsBits = 39;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v59, v60, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void sub_100B2A0A0(void (*a1)(uint64_t *__return_ptr, uint64_t *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1004B804C((uint64_t *)&unk_101405F30);
  v5 = static _DictionaryStorage.copy(original:)(a3);
  v6 = (_QWORD *)v5;
  v7 = 0;
  v27 = a3;
  v10 = *(_QWORD *)(a3 + 64);
  v9 = a3 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v24 = (unint64_t)(v11 + 63) >> 6;
  v25 = v5 + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v27 + 48) + 8 * i);
    v20 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * i);
    v29 = v20;
    v21 = swift_retain(v20);
    a1(&v28, &v29, v21);
    swift_release(v20);
    if (v3)
    {
      swift_release(v6);
      return;
    }
    *(_QWORD *)(v25 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v19;
    *(_QWORD *)(v6[7] + 8 * i) = v28;
    v22 = v6[2];
    v16 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v23;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v7++, 1);
    if (v16)
      goto LABEL_27;
    if (v7 >= v24)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v7);
    if (!v17)
      break;
LABEL_15:
    v13 = (v17 - 1) & v17;
  }
  v18 = v7 + 1;
  if (v7 + 1 >= v24)
    return;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 2;
  if (v7 + 2 >= v24)
    return;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 3;
  if (v7 + 3 >= v24)
    return;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_14:
    v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v24)
      return;
    v17 = *(_QWORD *)(v9 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

double sub_100B2A2C8@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

id sub_100B2A2E4(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t Strong;
  void (*v29)(__n128);
  __n128 v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  Class isa;
  uint64_t v35;
  char *v36;
  id v37;
  _BYTE v38[24];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v36 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v35 - v18;
  (*(void (**)(__n128))((swift_isaMask & *a1) + 0x88))(v17);
  v37 = a2;
  v20 = *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v21 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v38, 0, 0);
  sub_1004B8460(v21, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v20);
  v22 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v22);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release(v20);
  LOBYTE(v20) = static UUID.== infix(_:_:)(v19);
  v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v15, v10);
  v23(v19, v10);
  v24 = 0;
  if ((v20 & 1) == 0)
  {
    v25 = type metadata accessor for CRLBoardItem(0);
    v26 = swift_dynamicCastClass(a1, v25);
    if (v26)
    {
      v27 = (_QWORD *)v26;
      Strong = swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
      if (Strong)
        return (id)Strong;
      v29 = *(void (**)(__n128))((swift_isaMask & *v27) + 0xB8);
      v30 = swift_unknownObjectRetain(a1);
      v29(v30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
      {
        v32 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v33 = v36;
        v32(v36, v6, v10);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        v24 = objc_msgSend(v37, "getBoardItemForUUID:", isa);

        v23(v33, v10);
        return v24;
      }

      sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315, "unknown type", 12, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_getParentOf(transactable:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 1315, (uint64_t)"unknown type", 12, 2u);
    }
    return 0;
  }
  return v24;
}

char *sub_100B2A698(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(__n128);
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  objc_class *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _BYTE v70[12];
  int v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  void *v75;
  _QWORD v76[3];
  objc_super v77;
  char v78[24];

  v7 = v6;
  v71 = a6;
  v74 = a4;
  v75 = a5;
  v72 = a3;
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10);
  v12 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for UUID(0);
  __chkstk_darwin(v13);
  v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for CRLBoardIdentifier(0);
  v17 = __chkstk_darwin(v16);
  v19 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v73 = &v70[-v20];
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext] = 0;
  v21 = &v6[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
  v22 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  v23 = &v7[OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData];
  *(_QWORD *)v23 = &_swiftEmptySetSingleton;
  *((_QWORD *)v23 + 1) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_cancellables] = &_swiftEmptySetSingleton;
  v24 = OBJC_IVAR____TtC8Freeform8CRLBoard_opportunisticallyBuiltAffectedItemSetIncludingParents;
  *(_QWORD *)&v7[v24] = sub_1008DFF9C((uint64_t)_swiftEmptyArrayStorage);
  v25 = OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedChangeAvailablePublisher;
  v26 = sub_1004B804C(&qword_101405CF0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = v7;
  *(_QWORD *)&v7[v25] = PassthroughSubject.init()();
  v28 = OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedRealTimeChangesAvailablePublisher;
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)&v27[v28] = PassthroughSubject.init()();
  v29 = OBJC_IVAR____TtC8Freeform8CRLBoard_changeSummaryPublisher;
  v30 = sub_1004B804C(&qword_101405CF8);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  *(_QWORD *)&v27[v29] = PassthroughSubject.init()();
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable] = 0;
  swift_unknownObjectWeakInit(&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_hack_editingCoordinator], 0);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_store] = a1;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_data] = a2;
  v27[OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported] = v71;
  v31 = (objc_class *)type metadata accessor for CRLRootContainerItem(0);
  v32 = objc_allocWithZone(v31);
  v33 = a1;
  swift_retain(a2);
  v34 = v72;
  swift_retain(v72);
  v35 = sub_1007489D0((uint64_t)v33, v34);
  v36 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer] = v35;
  v37 = objc_allocWithZone(v31);
  v38 = v33;
  v39 = v74;
  swift_retain(v74);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer] = sub_1007489D0((uint64_t)v38, v39);
  v40 = a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v78, 0, 0);
  sub_1004B8460(v40, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  v41 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v41);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  v42 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v43 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
  swift_bridgeObjectRetain(v43);
  v44 = v73;
  sub_10067AFD0((uint64_t)v15, v42, v43, (uint64_t)v73);
  sub_1004B8460((uint64_t)v44, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  v45 = *(char **)&v27[v36];
  v46 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v47 = *(void (**)(__n128))(*(_QWORD *)v46 + 256);
  v48 = v45;
  v49 = swift_retain(v46);
  v47(v49);

  swift_release(v46);
  v50 = type metadata accessor for CRLBoardChangeSet(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges] = sub_1005F1674((uint64_t)v19, (uint64_t)v15, 0);
  v51 = type metadata accessor for CRLFreehandDrawingShapeItemBucketManager();
  v52 = swift_allocObject(v51, 24, 7);
  v53 = sub_1004B804C((uint64_t *)&unk_101405D00);
  v54 = swift_allocObject(v53, 32, 7);
  *(_QWORD *)(v54 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v54 + 24) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v52 + 16) = v54;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager] = v52;
  v55 = type metadata accessor for CRLActiveBoardShareState();
  v56 = swift_allocObject(v55, 32, 7);
  *(_QWORD *)(v56 + 16) = 0;
  swift_unknownObjectWeakInit(v56 + 24, 0);
  v57 = *(void **)(v56 + 16);
  v58 = v75;
  *(_QWORD *)(v56 + 16) = v75;
  v59 = v58;

  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] = v56;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_lastSaveChangesTime] = 0;

  v60 = (objc_class *)type metadata accessor for CRLBoard(0);
  v77.receiver = v27;
  v77.super_class = v60;
  v61 = (char *)objc_msgSendSuper2(&v77, "init");
  swift_unknownObjectWeakAssign(*(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]+ OBJC_IVAR____TtC8Freeform20CRLRootContainerItem_board, v61);
  v76[0] = *(_QWORD *)(*(_QWORD *)&v61[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges]
                     + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher);
  v62 = v76[0];
  v63 = swift_allocObject(&unk_101294518, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v61);
  v64 = v61;
  swift_retain(v62);
  v65 = sub_1004B804C(&qword_1013E7560);
  v66 = sub_1004CBA30(&qword_101405D10, &qword_1013E7560, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v67 = Publisher<>.sink(receiveValue:)(sub_100B2C7F4, v63, v65, v66);
  swift_release(v63);
  swift_release(v76[0]);
  v68 = &v64[OBJC_IVAR____TtC8Freeform8CRLBoard_cancellables];
  swift_beginAccess(&v64[OBJC_IVAR____TtC8Freeform8CRLBoard_cancellables], v76, 33, 0);
  AnyCancellable.store(in:)(v68);
  swift_endAccess(v76);
  swift_release(v67);

  sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLBoardIdentifier);
  return v64;
}

void sub_100B2AC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];

  v3 = v2;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  ObjectType = swift_getObjectType(a1);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v18 = v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v36, 0, 0);
  sub_1004B8460(v18, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v17);
  v19 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v19);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_release(v17);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  LOBYTE(v18) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v12);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v12, v9);
  if ((v18 & 1) == 0)
  {
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap, v35, 33, 0);
    v22 = sub_100846B80((uint64_t)v15);
    swift_endAccess(v35);
    v21 = swift_unknownObjectRelease(v22);
  }
  ((void (*)(char *, uint64_t, __n128))v20)(v15, v9, v21);
  v23 = type metadata accessor for CRLBoardItem(0);
  v24 = swift_dynamicCastClass(a1, v23);
  if (v24)
  {
    v25 = v24;
    v26 = type metadata accessor for CRLTransactableHashableWrapper();
    v27 = swift_allocObject(v26, 32, 7);
    *(_QWORD *)(v27 + 16) = v25;
    *(_QWORD *)(v27 + 24) = &off_10127C5E0;
    v28 = v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData;
    swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData, v35, 33, 0);
    swift_unknownObjectRetain_n(a1, 2);
    swift_retain(v27);
    sub_100AD58F8(&v34, v27);
    v29 = v34;
    swift_endAccess(v35);
    swift_release(v29);
    swift_beginAccess(v28, v35, 33, 0);
    v30 = sub_100B26B84(v27);
    swift_endAccess(v35);
    swift_release(v27);
    swift_unknownObjectRelease(a1);
    swift_release(v30);
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E7C00, OS_os_log_ptr);
    v31 = (void *)static OS_os_log.default.getter();
    v32 = static os_log_type_t.error.getter(v31);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v32, "Trying to remove non-boardItem transactable.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

uint64_t sub_100B2AFB8(uint64_t a1)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  result = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(result + 16) = xmmword_100EF5E40;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(result + 56) = &type metadata for Int;
    *(_QWORD *)(result + 64) = &protocol witness table for Int;
    *(_QWORD *)(result + 32) = a1 + 1;
    v11 = static String.localizedStringWithFormat(_:_:)(v6, v8, result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

void sub_100B2B104(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

void sub_100B2B1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  uint64_t v55;
  uint64_t v56;
  CKRecordID v57;
  Swift::String v58;

  v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x7461446472616F62, 0xE900000000000061, 0);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    goto LABEL_59;
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    *(_QWORD *)(v3 - 328) = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    swift_bridgeObjectRetain(v1);
    *(_QWORD *)(v3 - 336) = v1;
    v7 = (_QWORD *)(v1 + 40);
    *(_OWORD *)(v3 - 352) = xmmword_100EF5E40;
    while (1)
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      v10 = v9 == 0x656C746974 && v8 == 0xE500000000000000;
      if (v10
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, *(v7 - 1), *v7, 0) & 1) != 0)
      {
        v11 = *(_QWORD *)(*(_QWORD *)(v3 - 312) + *(_QWORD *)(v3 - 328))
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess(v11, v3 - 304, 0, 0);
        sub_1004B8460(v11, v2, type metadata accessor for CRLBoardCRDTData);
        v12 = sub_1004B804C(&qword_1013E1980);
        CRRegister.wrappedValue.getter(v12);
        v13 = *(_QWORD *)(v3 - 192);
        v14 = *(_QWORD *)(v3 - 184);
        sub_1004B84A4(v2, type metadata accessor for CRLBoardCRDTData);
        *(_QWORD *)(v3 - 168) = &type metadata for String;
        *(_QWORD *)(v3 - 192) = v13;
        *(_QWORD *)(v3 - 184) = v14;
        swift_beginAccess(v6, v3 - 240, 33, 0);
        sub_1004CB7BC(v3 - 192, v3 - 272, &qword_1013E0230);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
        v16 = *v6;
        *(_QWORD *)(v3 - 280) = *v6;
        *v6 = 0x8000000000000000;
        v18 = sub_100843260(2);
        v19 = *(_QWORD *)(v16 + 16);
        v20 = (v17 & 1) == 0;
        v21 = v19 + v20;
        if (__OFADD__(v19, v20))
        {
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          type metadata accessor for CRLChangeProperty(0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v56);
          __break(1u);
LABEL_59:
          sub_100757E04(&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 609, "Invalid CRLTransactablePropertyMapKeys key for CRLBoard", 55, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid CRLTransactablePropertyMapKeys key for CRLBoard");
          sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2u, 609, (uint64_t)"Invalid CRLTransactablePropertyMapKeys key for CRLBoard", 55, 2u);
          SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v57, v58);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
          __break(1u);
          JUMPOUT(0x100B2BAB4);
        }
        v22 = v17;
        if (*(_QWORD *)(v16 + 24) >= v21)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_10082C8D0();
        }
        else
        {
          sub_100814B68(v21, isUniquelyReferenced_nonNull_native);
          v23 = sub_100843260(2);
          if ((v22 & 1) != (v24 & 1))
            goto LABEL_58;
          v18 = v23;
        }
        v25 = *(_QWORD **)(v3 - 280);
        if ((v22 & 1) == 0)
        {
          v25[(v18 >> 6) + 8] |= 1 << v18;
          *(_QWORD *)(v25[6] + 8 * v18) = 2;
          sub_1004C4938(v3 - 272, v25[7] + 32 * v18, &qword_1013E0230);
          v26 = v25[2];
          v27 = __OFADD__(v26, 1);
          v28 = v26 + 1;
          if (v27)
            goto LABEL_53;
LABEL_18:
          v25[2] = v28;
          goto LABEL_19;
        }
      }
      else
      {
        v29 = v9 == 0x7453747265736E69 && v8 == 0xEF61746144656C79;
        if (v29
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7453747265736E69, 0xEF61746144656C79, v9, v8, 0) & 1) != 0)
        {
          *(_QWORD *)(v3 - 168) = &type metadata for Bool;
          *(_BYTE *)(v3 - 192) = 1;
          swift_beginAccess(v6, v3 - 240, 33, 0);
          sub_1004CB7BC(v3 - 192, v3 - 272, &qword_1013E0230);
          v30 = swift_isUniquelyReferenced_nonNull_native(*v6);
          v31 = *v6;
          *(_QWORD *)(v3 - 280) = *v6;
          *v6 = 0x8000000000000000;
          v18 = sub_100843260(3);
          v33 = *(_QWORD *)(v31 + 16);
          v34 = (v32 & 1) == 0;
          v35 = v33 + v34;
          if (__OFADD__(v33, v34))
            goto LABEL_54;
          v36 = v32;
          if (*(_QWORD *)(v31 + 24) >= v35)
          {
            if ((v30 & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v35, v30);
            v37 = sub_100843260(3);
            if ((v36 & 1) != (v38 & 1))
              goto LABEL_58;
            v18 = v37;
          }
          v25 = *(_QWORD **)(v3 - 280);
          if ((v36 & 1) == 0)
          {
            v25[(v18 >> 6) + 8] |= 1 << v18;
            *(_QWORD *)(v25[6] + 8 * v18) = 3;
            sub_1004C4938(v3 - 272, v25[7] + 32 * v18, &qword_1013E0230);
            v39 = v25[2];
            v27 = __OFADD__(v39, 1);
            v28 = v39 + 1;
            if (v27)
              goto LABEL_55;
            goto LABEL_18;
          }
        }
        else
        {
          if ((v9 != 0x73656E656373 || v8 != 0xE600000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(0x73656E656373, 0xE600000000000000, v9, v8, 0) & 1) == 0)
          {
            v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            inited = swift_initStackObject(v53, v3 - 160);
            *(_OWORD *)(inited + 16) = *(_OWORD *)(v3 - 352);
            *(_QWORD *)(inited + 56) = &type metadata for String;
            *(_QWORD *)(inited + 64) = sub_1004CFC2C();
            *(_QWORD *)(inited + 32) = v9;
            *(_QWORD *)(inited + 40) = v8;
            swift_bridgeObjectRetain(v8);
            swift_setDeallocating(inited);
            v55 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(inited + 32, 1, v55);
            goto LABEL_20;
          }
          v40 = *(_QWORD *)(*(_QWORD *)(v3 - 312) + *(_QWORD *)(v3 - 328))
              + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess(v40, v3 - 216, 0, 0);
          v41 = v40 + *(int *)(*(_QWORD *)(v3 - 320) + 36);
          *(_QWORD *)(v3 - 168) = type metadata accessor for CRLBoardScenesCRDTData(0);
          v42 = sub_10050D1B0((_QWORD *)(v3 - 192));
          sub_1004B8460(v41, (uint64_t)v42, type metadata accessor for CRLBoardScenesCRDTData);
          swift_beginAccess(v6, v3 - 240, 33, 0);
          sub_1004CB7BC(v3 - 192, v3 - 272, &qword_1013E0230);
          v43 = swift_isUniquelyReferenced_nonNull_native(*v6);
          v44 = *v6;
          *(_QWORD *)(v3 - 280) = *v6;
          *v6 = 0x8000000000000000;
          v18 = sub_100843260(53);
          v46 = *(_QWORD *)(v44 + 16);
          v47 = (v45 & 1) == 0;
          v48 = v46 + v47;
          if (__OFADD__(v46, v47))
            goto LABEL_56;
          v49 = v45;
          if (*(_QWORD *)(v44 + 24) >= v48)
          {
            if ((v43 & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v48, v43);
            v50 = sub_100843260(53);
            if ((v49 & 1) != (v51 & 1))
              goto LABEL_58;
            v18 = v50;
          }
          v25 = *(_QWORD **)(v3 - 280);
          if ((v49 & 1) == 0)
          {
            v25[(v18 >> 6) + 8] |= 1 << v18;
            *(_QWORD *)(v25[6] + 8 * v18) = 53;
            sub_1004C4938(v3 - 272, v25[7] + 32 * v18, &qword_1013E0230);
            v52 = v25[2];
            v27 = __OFADD__(v52, 1);
            v28 = v52 + 1;
            if (v27)
              goto LABEL_57;
            goto LABEL_18;
          }
        }
      }
      sub_100582338(v3 - 272, v25[7] + 32 * v18, &qword_1013E0230);
LABEL_19:
      *v6 = v25;
      swift_bridgeObjectRelease();
      swift_endAccess(v3 - 240);
      sub_1004CB800(v3 - 192, &qword_1013E0230);
LABEL_20:
      v7 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

unint64_t sub_100B2BADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014068F0;
  if (!qword_1014068F0)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1014068F0);
  }
  return result;
}

void sub_100B2BB34(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1005F4624(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), a1);
}

void sub_100B2BB50()
{
  uint64_t v0;

  sub_1005F1E58(v0);
}

uint64_t sub_100B2BB58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100B2BB68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100B2BB78(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100B2BB80()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  __n128 v12;

  v1 = (int *)type metadata accessor for CRLBoardDataStoreChangeSet(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  v5 = v3 | 7;
  v6 = (v3 + 40) & ~v3;
  v7 = v6 + v4;
  v8 = v0 + v6;
  v9 = v0 + v6 + v1[5];
  v10 = type metadata accessor for UUID(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  v12 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, __n128))v11)(v8 + v1[6], v10, v12);
  swift_release(*(_QWORD *)(v8 + v1[7]));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v7, v5);
}

uint64_t sub_100B2BCB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardDataStoreChangeSet(0) - 8) + 80);
  return sub_100B2409C(a1, *(char **)(v1 + 16), *(double (**)(uint64_t, _QWORD, __n128))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

void sub_100B2BCF8()
{
  uint64_t v0;

  sub_1005F1A18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100B2BD00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100B2BD10()
{
  uint64_t v0;

  sub_1005F1FB8(v0);
}

uint64_t sub_100B2BD18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B2BD28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_100B2BD38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  double v34;
  float v35;
  double v36;
  float v37;
  double v38;
  float v39;
  double v40;
  float v41;
  double v42;
  float v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  double v64;
  float v65;
  double v66;
  float v67;
  double v68;
  float v69;
  double v70;
  float v71;
  double v72;
  float v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  id v108;
  id v109;
  _QWORD *v110;
  char *v111;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v145[128];
  _OWORD v146[8];

  v127 = a4;
  v128 = a3;
  v124 = a2;
  v129 = a1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  v5 = __chkstk_darwin(v4);
  v126 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v122 = (uint64_t)&v113 - v7;
  v139 = type metadata accessor for CRLContainerItemCRDTData(0);
  v8 = __chkstk_darwin(v139);
  v137 = (uint64_t)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v136 = (char *)&v113 - v10;
  v11 = type metadata accessor for UUID(0);
  v121 = *(_QWORD *)(v11 - 8);
  v12 = v121;
  v13 = __chkstk_darwin(v11);
  v125 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v123 = (char *)&v113 - v16;
  __chkstk_darwin(v15);
  v142 = (char *)&v113 - v17;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v19 = __chkstk_darwin(v18);
  v134 = (uint64_t)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v113 - v21;
  v135 = type metadata accessor for CRLBoardItemParentAffinity(0);
  v23 = __chkstk_darwin(v135);
  v25 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v133 = (uint64_t)&v113 - v26;
  v27 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  v28 = __chkstk_darwin(v27);
  v132 = (uint64_t)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v131 = (uint64_t)&v113 - v30;
  v31 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v130 = v11;
  v32(v22, 1, 1, v11);
  v33 = v32;
  v117 = v32;
  objc_msgSend(v31, "position");
  v35 = v34;
  v37 = v36;
  objc_msgSend(v31, "size");
  v39 = v38;
  v41 = v40;
  objc_msgSend(v31, "angle");
  v43 = v42;
  LODWORD(v141) = objc_msgSend(v31, "widthValid");
  LODWORD(v140) = objc_msgSend(v31, "heightValid");
  LOBYTE(v32) = objc_msgSend(v31, "horizontalFlip");
  v44 = objc_msgSend(v31, "verticalFlip");
  v116 = v22;
  v45 = v134;
  sub_1004CB7BC((uint64_t)v22, v134, (uint64_t *)&unk_1013E1A50);
  v33(v25, 1, 1, v11);
  v46 = v135;
  *(_QWORD *)&v25[*(int *)(v135 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338(v45, (uint64_t)v25, (uint64_t *)&unk_1013E1A50);
  v47 = *(int *)(v46 + 20);
  v119 = v25;
  v48 = &v25[v47];
  *(float *)v48 = v35;
  *((float *)v48 + 1) = v37;
  *((float *)v48 + 2) = v39;
  *((float *)v48 + 3) = v41;
  *((float *)v48 + 4) = v43;
  v48[20] = v141;
  v48[21] = (char)v140;
  v48[22] = (char)v32;
  v48[23] = v44;
  *((_QWORD *)v48 + 3) = _swiftEmptyDictionarySingleton;
  v49 = v133;
  sub_1004B84E0((uint64_t)v25, v133, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E1A50);
  sub_1004C3A10(v146);
  v50 = sub_1004C4938((uint64_t)v146, (uint64_t)v145, (uint64_t *)&unk_1013F02D0);
  v51 = v142;
  UUID.init()(v50);
  v52 = v131;
  sub_100D5EF54((uint64_t)v51, v49, 0, 0, 0, 0xE000000000000000, (uint64_t)v145, v131);
  v53 = (uint64_t)v136;
  *(_QWORD *)&v136[*(int *)(v139 + 20)] = _swiftEmptyDictionarySingleton;
  v120 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v54 = v130;
  CROrderedSet.init()(v130, &protocol witness table for UUID, v120);
  v55 = v52;
  v56 = v52;
  v57 = v132;
  sub_1004CB7BC(v55, v132, (uint64_t *)&unk_1013F02C0);
  v58 = v137;
  sub_1004B8460(v53, v137, type metadata accessor for CRLContainerItemCRDTData);
  v141 = 0x1000000000000;
  v138 = 0x2000400000000;

  sub_1004B84A4(v53, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004CB800(v56, (uint64_t *)&unk_1013F02C0);
  v118 = type metadata accessor for CRLContainerItemData(0);
  v59 = swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
  sub_1004B84E0(v58, v59 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938(v57, v59 + *(_QWORD *)(*(_QWORD *)v59 + 632), (uint64_t *)&unk_1013F02C0);
  v140 = sub_1005E1000(v141, 0x2000400000000, v141, 4);
  v60 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  v61 = (uint64_t)v116;
  v62 = v117;
  v63 = v54;
  v117(v116, 1, 1, v54);
  objc_msgSend(v60, "position");
  v65 = v64;
  v67 = v66;
  objc_msgSend(v60, "size");
  v69 = v68;
  v71 = v70;
  objc_msgSend(v60, "angle");
  v73 = v72;
  v115 = objc_msgSend(v60, "widthValid");
  v114 = objc_msgSend(v60, "heightValid");
  LOBYTE(v57) = objc_msgSend(v60, "horizontalFlip");
  LOBYTE(v54) = objc_msgSend(v60, "verticalFlip");
  v74 = v134;
  sub_1004CB7BC(v61, v134, (uint64_t *)&unk_1013E1A50);
  v75 = (uint64_t)v119;
  v62(v119, 1, 1, v63);
  v76 = v135;
  *(_QWORD *)(v75 + *(int *)(v135 + 24)) = _swiftEmptyDictionarySingleton;
  sub_100582338(v74, v75, (uint64_t *)&unk_1013E1A50);
  v77 = v75 + *(int *)(v76 + 20);
  *(float *)v77 = v65;
  *(float *)(v77 + 4) = v67;
  *(float *)(v77 + 8) = v69;
  *(float *)(v77 + 12) = v71;
  *(float *)(v77 + 16) = v73;
  *(_BYTE *)(v77 + 20) = v115;
  *(_BYTE *)(v77 + 21) = v114;
  *(_BYTE *)(v77 + 22) = v57;
  *(_BYTE *)(v77 + 23) = v54;
  *(_QWORD *)(v77 + 24) = _swiftEmptyDictionarySingleton;
  v78 = v133;
  sub_1004B84E0(v75, v133, type metadata accessor for CRLBoardItemParentAffinity);
  v79 = sub_1004CB800(v61, (uint64_t *)&unk_1013E1A50);
  v80 = v142;
  UUID.init()(v79);
  v81 = v131;
  sub_100D5EF54((uint64_t)v80, v78, 0, 0, 0, 0xE000000000000000, (uint64_t)v145, v131);
  v82 = (uint64_t)v136;
  *(_QWORD *)&v136[*(int *)(v139 + 20)] = _swiftEmptyDictionarySingleton;
  v83 = v130;
  CROrderedSet.init()(v130, &protocol witness table for UUID, v120);
  v84 = v132;
  sub_1004CB7BC(v81, v132, (uint64_t *)&unk_1013F02C0);
  v85 = v137;
  sub_1004B8460(v82, v137, type metadata accessor for CRLContainerItemCRDTData);

  sub_1004B84A4(v82, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004CB800(v81, (uint64_t *)&unk_1013F02C0);
  v86 = swift_allocObject(v118, *(unsigned int *)(v118 + 48), *(unsigned __int16 *)(v118 + 52));
  sub_1004B84E0(v85, v86 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938(v84, v86 + *(_QWORD *)(*(_QWORD *)v86 + 632), (uint64_t *)&unk_1013F02C0);
  v87 = sub_1005E1000(v141, v138, v141, 4);
  v88 = v80;
  v89 = v124;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v88, v124, v83);
  v90 = v140;
  v91 = (uint64_t)v140 + *(_QWORD *)(*v140 + 632);
  swift_beginAccess(v91, &v144, 0, 0);
  sub_1004CB7BC(v91, v81, (uint64_t *)&unk_1013F02C0);
  swift_retain(v90);
  v92 = sub_1004B804C(&qword_1013E1A80);
  v93 = v123;
  CRRegister.wrappedValue.getter(v92);
  sub_1004CB800(v81, (uint64_t *)&unk_1013F02C0);
  swift_release(v90);
  v94 = (uint64_t)v87 + *(_QWORD *)(*v87 + 632);
  swift_beginAccess(v94, &v143, 0, 0);
  sub_1004CB7BC(v94, v81, (uint64_t *)&unk_1013F02C0);
  swift_retain(v87);
  v95 = v125;
  CRRegister.wrappedValue.getter(v92);
  sub_1004CB800(v81, (uint64_t *)&unk_1013F02C0);
  swift_release(v87);
  v96 = v127;
  swift_bridgeObjectRetain(v127);
  v97 = v122;
  sub_100DD10B4(v142, v93, v95, v128, v96, v122);
  v98 = v97;
  v99 = v126;
  sub_1004B8460(v97, v126, type metadata accessor for CRLBoardCRDTData);
  v100 = (uint64_t *)(v89 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v102 = *v100;
  v101 = v100[1];
  v103 = type metadata accessor for CRLBoardData(0);
  v104 = (_QWORD *)swift_allocObject(v103, *(unsigned int *)(v103 + 48), *(unsigned __int16 *)(v103 + 52));
  v105 = v141;
  v104[2] = 7;
  v104[3] = v105;
  v104[4] = v138;
  v104[5] = v105;
  sub_1004B84E0(v99, (uint64_t)v104 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  v106 = (_QWORD *)((char *)v104 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *v106 = v102;
  v106[1] = v101;
  v107 = qword_1013DDDD0;
  swift_bridgeObjectRetain(v101);
  if (v107 != -1)
    swift_once(&qword_1013DDDD0, sub_100C0292C);
  if (!sub_100C03680((void *)qword_10140A1D0))
    sub_100C03914();
  v108 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
  v109 = v129;
  v110 = v140;
  v111 = sub_100B2A698(v109, (uint64_t)v104, (uint64_t)v140, (uint64_t)v87, 0, 0);

  swift_release(v104);
  swift_release(v110);
  swift_release(v87);
  sub_1004B84A4(v98, type metadata accessor for CRLBoardCRDTData);
  return v111;
}

uint64_t sub_100B2C7D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100B2C7F4(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100B18254(a1, v1, &OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedChangeAvailablePublisher);
}

double sub_100B2C814(uint64_t a1)
{
  uint64_t v1;

  return sub_100AA14B4(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

char *sub_100B2C820(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for UUID(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLImmutableBoard(0));
  v7 = a1;
  v8 = sub_100B24950(v7);
  v9 = type metadata accessor for CRLUUIDRemapHelper();
  v10 = swift_allocObject(v9, 40, 7);
  *(_QWORD *)(v10 + 24) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v10 + 32) = _swiftEmptyDictionarySingleton;
  *(_BYTE *)(v10 + 16) = 0;
  sub_1004B7878(&qword_1013EBC50, type metadata accessor for CRLImmutableBoard, (uint64_t)&unk_100F276E4);
  v11 = v8;
  swift_unknownObjectRetain(v11);
  UUID.init()(v12);
  v13 = type metadata accessor for CRLTransactionContext(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v15 = sub_1006AD8C4((uint64_t)v11, 0, 0, (uint64_t)v5, 0, v14);

  sub_100B18BB8((uint64_t)v7, v15, v10);
  if (v1)
  {
    swift_release(v10);
    swift_release(v15);

  }
  else
  {
    v16 = (*(uint64_t (**)(void))(*(_QWORD *)v15 + 720))();
    swift_release(v10);
    swift_release(v15);
    swift_release(v16);
  }
  return v11;
}

uint64_t sub_100B2C9C0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_101405D3C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CFD00;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_101405D38 + dword_101405D38))(v2, v3);
}

double sub_100B2CA2C(uint64_t a1)
{
  return sub_100B23C14(a1);
}

uint64_t sub_100B2CA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_101405340);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B2CA98(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1004B804C(&qword_101405340);
  return sub_100B23CF0(a1, v3);
}

uint64_t sub_100B2CAEC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_101405D64);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_101405D60 + dword_101405D60))(v2, v3);
}

double sub_100B2CB58(uint64_t a1)
{
  uint64_t v1;

  return sub_100A9BDD4(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100B2CB60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t i;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  _QWORD *v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  char *v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  int64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v42 = a2;
  v45 = a1;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v55 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v53 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v56 = (char *)&v41 - v12;
  v47 = a3;
  v48 = 0;
  v13 = 0;
  v16 = *(_QWORD *)(a3 + 56);
  v15 = a3 + 56;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v15 - 24);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v14;
  v43 = v15;
  v44 = (unint64_t)(v17 + 63) >> 6;
  v46 = a4;
  if ((v18 & v14) != 0)
    goto LABEL_9;
LABEL_10:
  v27 = v13 + 1;
  if (__OFADD__(v13, 1))
    goto LABEL_34;
  if (v27 >= v44)
    goto LABEL_32;
  v28 = *(_QWORD *)(v43 + 8 * v27);
  ++v13;
  if (!v28)
  {
    v13 = v27 + 1;
    if (v27 + 1 >= v44)
      goto LABEL_32;
    v28 = *(_QWORD *)(v43 + 8 * v13);
    if (!v28)
    {
      v13 = v27 + 2;
      if (v27 + 2 >= v44)
        goto LABEL_32;
      v28 = *(_QWORD *)(v43 + 8 * v13);
      if (!v28)
      {
        v29 = v27 + 3;
        if (v29 < v44)
        {
          v28 = *(_QWORD *)(v43 + 8 * v29);
          if (!v28)
          {
            while (1)
            {
              v13 = v29 + 1;
              if (__OFADD__(v29, 1))
                goto LABEL_35;
              if (v13 >= v44)
                goto LABEL_32;
              v28 = *(_QWORD *)(v43 + 8 * v13);
              ++v29;
              if (v28)
                goto LABEL_23;
            }
          }
          v13 = v29;
          goto LABEL_23;
        }
LABEL_32:
        v40 = v47;
        swift_retain(v47);
        sub_100CD8140(v45, v42, v48, v40);
        return;
      }
    }
  }
LABEL_23:
  v25 = (v28 - 1) & v28;
  for (i = __clz(__rbit64(v28)) + (v13 << 6); ; i = v24 | (v13 << 6))
  {
    v30 = *(_QWORD **)(*(_QWORD *)(v47 + 48) + 8 * i);
    v31 = *(void (**)(void))((swift_isaMask & *v30) + 0x88);
    v50 = v30;
    v31();
    v32 = *(_QWORD *)(a4 + 16);
    v51 = v25;
    v52 = v13;
    v49 = i;
    if (v32)
    {
      v33 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v20 = swift_bridgeObjectRetain(a4);
      v54 = *(_QWORD *)(v9 + 72);
      v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
      while (1)
      {
        v35 = v55;
        v34(v55, v33, v8, v20);
        v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v35, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v35, 1, v8) == 1)
          break;
        v36 = v53;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v53, v35, v8);
        sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v37 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v56);
        v38 = *(void (**)(char *, uint64_t))(v9 + 8);
        v38(v36, v8);
        if ((v37 & 1) != 0)
        {
          a4 = v46;
          v39 = swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t, __n128))v38)(v56, v8, v39);

          v19 = v51;
          v13 = v52;
          if (v51)
            goto LABEL_9;
          goto LABEL_10;
        }
        v33 += v54;
        if (!--v32)
          goto LABEL_6;
      }
    }
    else
    {
      v20 = swift_bridgeObjectRetain(a4);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
LABEL_6:
      v21(v55, 1, 1, v8, v20);
    }
    a4 = v46;
    v22 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v56, v8, v22);

    *(unint64_t *)((char *)v45 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
    v23 = __OFADD__(v48++, 1);
    v19 = v51;
    v13 = v52;
    if (v23)
      break;
    if (!v51)
      goto LABEL_10;
LABEL_9:
    v24 = __clz(__rbit64(v19));
    v25 = (v19 - 1) & v19;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_100B2CF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    sub_100B2CB60((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release(a1);
    v12 = swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow(v12);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v8, -1);
    bzero(v13, v8);
    swift_bridgeObjectRetain(a2);
    sub_100B2CB60((unint64_t *)v13, v7, a1, a2);
    v11 = v14;
    swift_release(a1);
    swift_bridgeObjectRelease();
    swift_slowDealloc(v13, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v11;
}

Swift::Int sub_100B2D128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  Swift::Int result;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  void (*v29)(char *, unint64_t, uint64_t, __n128);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char v31;
  void (*v32)(char *, uint64_t);
  __n128 v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v48 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v51 = (char *)v43 - v13;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v49 = v8;
    v8 = (char *)&_swiftEmptySetSingleton;
    v54 = &_swiftEmptySetSingleton;
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v47 = __CocoaSet.makeIterator()(v14);
    v15 = __CocoaSet.Iterator.next()(v47);
    if (v15)
    {
      v16 = v15;
      v43[1] = v3;
      v45 = type metadata accessor for CRLBoardItem(0);
      v44 = (char *)&type metadata for Swift.AnyObject + 8;
      v46 = a2;
      v18 = v48;
      v17 = v49;
      do
      {
        v52 = v16;
        v25 = swift_dynamicCast(&v53, &v52, v44, v45, 7);
        (*(void (**)(uint64_t))((swift_isaMask & *v53) + 0x88))(v25);
        v26 = *(_QWORD *)(a2 + 16);
        if (v26)
        {
          v27 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
          v28 = swift_bridgeObjectRetain(a2);
          v50 = *(_QWORD *)(v10 + 72);
          v29 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
          while (1)
          {
            v29(v17, v27, v9, v28);
            v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
            v30(v17, 0, 1, v9);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
              break;
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v17, v9);
            sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v31 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v51);
            v32 = *(void (**)(char *, uint64_t))(v10 + 8);
            v32(v18, v9);
            if ((v31 & 1) != 0)
            {
              a2 = v46;
              v41 = swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t, __n128))v32)(v51, v9, v41);

              v17 = v49;
              goto LABEL_10;
            }
            v17 = v49;
            v27 += v50;
            if (!--v26)
              goto LABEL_18;
          }
        }
        else
        {
          swift_bridgeObjectRetain(a2);
          v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_18:
          v30(v17, 1, 1, v9);
        }
        a2 = v46;
        v33 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v51, v9, v33);
        v34 = v53;
        v35 = v54;
        v36 = v54[2];
        if (v54[3] <= v36)
        {
          sub_100ADE280(v36 + 1);
          v35 = v54;
        }
        result = NSObject._rawHashValue(seed:)(v35[5]);
        v20 = v35 + 7;
        v21 = -1 << *((_BYTE *)v35 + 32);
        v22 = result & ~v21;
        v23 = v22 >> 6;
        if (((-1 << v22) & ~v35[(v22 >> 6) + 7]) != 0)
        {
          v24 = __clz(__rbit64((-1 << v22) & ~v35[(v22 >> 6) + 7])) | v22 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v37 = 0;
          v38 = (unint64_t)(63 - v21) >> 6;
          do
          {
            if (++v23 == v38 && (v37 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v39 = v23 == v38;
            if (v23 == v38)
              v23 = 0;
            v37 |= v39;
            v40 = v20[v23];
          }
          while (v40 == -1);
          v24 = __clz(__rbit64(~v40)) + (v23 << 6);
        }
        *(_QWORD *)((char *)v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
        *(_QWORD *)(v35[6] + 8 * v24) = v34;
        ++v35[2];
LABEL_10:
        v16 = __CocoaSet.Iterator.next()(result);
      }
      while (v16);
      v8 = (char *)v54;
    }
    swift_bridgeObjectRelease();
    swift_release(v47);
  }
  else
  {
    v42 = sub_100B2CF64(a1, a2);
    if (!v2)
      return v42;
  }
  return (Swift::Int)v8;
}

uint64_t sub_100B2D54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B2D594()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B2D5C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100B2D5D0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100B18254(a1, v1, &OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedRealTimeChangesAvailablePublisher);
}

uint64_t sub_100B2D5F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100B2D600()
{
  unint64_t result;

  result = qword_101405EE8;
  if (!qword_101405EE8)
  {
    result = swift_getWitnessTable(&unk_100F27818, &type metadata for CRLBoard.CRLBoardError);
    atomic_store(result, (unint64_t *)&qword_101405EE8);
  }
  return result;
}

uint64_t sub_100B2D644()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100B2D654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100B26428(a1, a2, v2);
}

uint64_t sub_100B2D65C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1005F96E0(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

double sub_100B2D674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100B265C4(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_100B2D67C(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
}

uint64_t sub_100B2D688(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
}

uint64_t sub_100B2D694(uint64_t a1)
{
  return sub_100B2D6AC(a1, (uint64_t)&protocol conformance descriptor for Ref<A>);
}

uint64_t sub_100B2D6A0(uint64_t a1)
{
  return sub_100B2D6AC(a1, (uint64_t)&protocol conformance descriptor for Ref<A>);
}

uint64_t sub_100B2D6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Ref(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24));
  return swift_getWitnessTable(a2, v3);
}

unint64_t sub_100B2D6E8(_QWORD *a1)
{
  return ((*(_QWORD *)(*(_QWORD *)(*a1 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_100B2D710(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + a1 - 32) - 8) + 8))();
}

__n128 sub_100B2D724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + a1 - 32) - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  v6 = (*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = a1 + v6;
  v8 = a2 + v6;
  result = *(__n128 *)(v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

uint64_t sub_100B2D788(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a2, a1) & 1;
}

uint64_t sub_100B2D7D0(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of Hashable.hashValue.getter(*(_QWORD *)(a2 + a1 - 32), *(_QWORD *)(*(_QWORD *)(a2 + a1 - 16) + 16));
}

__n128 sub_100B2D804(__n128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  __n128 result;

  v4 = *(_QWORD *)(a1->n128_u64[0] - 8);
  v5 = *(_QWORD *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  result = a1[1];
  *v6 = *a1;
  v6[1] = result;
  return result;
}

void sub_100B2D868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 16);
  v5 = v1;
  v6 = v2;
  v7 = v3;
  sub_100B16774((uint64_t *)&v4, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_100B2D8A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

_QWORD *sub_100B2D8B8()
{
  uint64_t v0;

  return sub_100B11638(*(_BYTE **)(v0 + 16), *(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_100B2D8C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B2D8D4(uint64_t a1)
{
  uint64_t v1;

  return sub_100B17A28(a1, v1) & 1;
}

double sub_100B2D8F0(uint64_t a1)
{
  uint64_t v1;

  return sub_100A9C658(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for CRLBoard.CRLBoardError()
{
  return &type metadata for CRLBoard.CRLBoardError;
}

uint64_t sub_100B2D944(_QWORD *a1)
{
  return sub_100B2D65C(a1);
}

void sub_100B2D958(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  sub_100B12D40(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform30CRLCommandMergeDatabaseChanges_fetchResult), a2, 0, a3);
}

double sub_100B2D9BC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC8Freeform30CRLCommandMergeDatabaseChanges_fetchResult)).n128_u64[0];
  return result;
}

id sub_100B2D9CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandMergeDatabaseChanges();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandMergeDatabaseChanges()
{
  return objc_opt_self(_TtC8Freeform30CRLCommandMergeDatabaseChanges);
}

unint64_t sub_100B2DA30()
{
  unint64_t result;

  result = qword_101405FC0;
  if (!qword_101405FC0)
  {
    result = swift_getWitnessTable(&unk_100F27960, &type metadata for CRLFavoriteBoardIntent_v2);
    atomic_store(result, (unint64_t *)&qword_101405FC0);
  }
  return result;
}

unint64_t sub_100B2DA78()
{
  unint64_t result;

  result = qword_101405FC8;
  if (!qword_101405FC8)
  {
    result = swift_getWitnessTable(&unk_100F27988, &type metadata for CRLFavoriteBoardIntent_v2);
    atomic_store(result, (unint64_t *)&qword_101405FC8);
  }
  return result;
}

uint64_t sub_100B2DABC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101132B74, 1);
}

uint64_t sub_100B2DACC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101132B4C, 1);
}

uint64_t sub_100B2DADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  _BYTE v55[12];
  unsigned int v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v59;
  unsigned int v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD v72[2];
  _BYTE v73[56];

  v70 = a1;
  v71 = type metadata accessor for InputConnectionBehavior(0);
  v64 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = &v55[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v67 = &v55[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v66 = &v55[-v5];
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v65 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v8);
  v10 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v23 = &v55[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v61 = &v55[-v25];
  v63 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 104);
  v28(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter title for board", 25, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100FF79D0);
  static Locale.current.getter(v29);
  v56 = v27;
  v57 = v11;
  v58 = v28;
  v28(v14, v27, v11);
  v59 = v10;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for boards", 32, 2);
  v62 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v62(v10, 0, 1, v68);
  v30 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v65, 1, 1, v30);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v31);
  v28(v14, v27, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Prompt for selecting a board from the list", 42, 2);
  v32 = v66;
  IntentDialog.init(_:)(v23);
  v33 = type metadata accessor for IntentDialog(0);
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v32, 0, 1, v33);
  v35 = v67;
  v34(v67, 1, 1, v33);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v64 = *(_QWORD *)(v64 + 104);
  v36 = v69;
  ((void (*)(_BYTE *))v64)(v69);
  v37 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v38 = v61;
  v39 = v59;
  v40 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v61, v59, v65, v32, v35, v36, v37);
  *v70 = v40;
  v65 = (_BYTE *)sub_1004B804C(&qword_101406020);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x6574617453, 0xE500000000000000);
  static Locale.current.getter(v41);
  v42 = v56;
  v43 = v57;
  v44 = v58;
  v58(v14, v56, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter title for favorite state", 34, 2);
  v45 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004ELL, 0x8000000100FF7A20);
  static Locale.current.getter(v45);
  v44(v14, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for favorite state", 40, 2);
  v62(v39, 0, 1, v68);
  v73[0] = 0;
  v46 = v66;
  v34(v66, 1, 1, v33);
  v47 = v67;
  v34(v67, 1, 1, v33);
  v48 = v69;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v64)(v69, v60, v71);
  v49 = sub_100857940();
  v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v38, v39, v73, v46, v47, v48, &off_101265770, v49);
  v51 = v70;
  v70[1] = v50;
  sub_1004B804C(&qword_1013E1128);
  v72[0] = 0xD00000000000001FLL;
  v72[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v72, &type metadata for String, &protocol witness table for String);
  v52 = type metadata accessor for AppDependencyManager(0);
  v53 = static AppDependencyManager.shared.getter(v52);
  result = AppDependency.__allocating_init(key:manager:)(v73, v53);
  v51[2] = result;
  v51[6] = (uint64_t)&type metadata for CRLFavoriteBoardIntentPerformer;
  v51[7] = (uint64_t)&off_101295E38;
  return result;
}

uint64_t sub_100B2E220(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[20] = a1;
  v2[21] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[23] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v5);
  v2[25] = swift_task_alloc(v5);
  v6 = type metadata accessor for Logger(0);
  v2[26] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[27] = v7;
  v2[28] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100B2E2D4, 0, 0);
}

uint64_t sub_100B2E2D4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(char, uint64_t, uint64_t);

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = (_QWORD *)v0[25];
  v2 = (_QWORD *)v0[21];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 15, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  IntentParameter.wrappedValue.getter(v0 + 32);
  v0[29] = *v2;
  v3 = *((_BYTE *)v0 + 256);
  v4 = IntentParameter.wrappedValue.getter(v1);
  AppDependency.wrappedValue.getter(v4);
  v0[13] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[14] = &off_10129B460;
  v7 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_101406A08 + dword_101406A08);
  v5 = (_QWORD *)swift_task_alloc(unk_101406A0C);
  v0[30] = v5;
  *v5 = v0;
  v5[1] = sub_100B2E3F8;
  return v7(v3, v0[25], (uint64_t)(v0 + 10));
}

uint64_t sub_100B2E3F8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 240);
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_1004B84A4(*(_QWORD *)(v4 + 200), type metadata accessor for CRLBoardEntity);
    v6 = sub_100B2E568;
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 200);
    *(_BYTE *)(v4 + 258) = a1 & 1;
    sub_1004B84A4(v7, type metadata accessor for CRLBoardEntity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v4 + 80));
    v6 = sub_100B2E49C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100B2E49C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_BYTE *)(v0 + 258);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD **)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 176);
  IntentParameter.wrappedValue.getter(v6);
  *(_BYTE *)(v0 + 257) = v1;
  EntityProperty.wrappedValue.setter(v0 + 257);
  v7 = sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardEntity);
  static IntentResult.result<>()(v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B2E568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  os_log_type_t type;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(uint64_t **)(v0 + 168);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 80));
  sub_100B2F758(v2, v0 + 16);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    type = v5;
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD **)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v30 = swift_slowAlloc(32, -1);
    v31 = v30;
    *(_DWORD *)v9 = 138412546;
    swift_errorRetain(v6);
    v11 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v0 + 144) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    *(_WORD *)(v9 + 12) = 2080;
    IntentParameter.wrappedValue.getter(v7);
    sub_1004E1B3C((uint64_t)v7 + *(int *)(v28 + 40), v8);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardEntity);
    v12 = sub_10067AD38();
    v14 = v13;
    sub_1004B84A4(v8, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 152) = sub_100BF0F1C(v12, v14, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease();
    sub_100B2F78C((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v4, type, "Error changing favorite status: %@ - %s", (uint8_t *)v9, 0x16u);
    v15 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v10, 1, v15);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {
    v16 = *(_QWORD *)(v0 + 248);

    swift_errorRelease(v16);
    swift_errorRelease(v16);
    sub_100B2F78C((_QWORD *)(v0 + 16));
  }
  v17 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = type metadata accessor for _PrebuiltAppIntentError(0);
  v25 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v24, v25, 0, 0);
  v26.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v26);
  swift_errorRelease(v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc(v18);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B2E888(uint64_t a1)
{
  return sub_100B2EDF0(a1, qword_101480B80, 0xD000000000000019, 0x8000000100FF7AE0);
}

uint64_t sub_100B2E8AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_101406060);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_101406068);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100B2F714();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F27AE8);
  v9 = sub_1004B804C(&qword_101406070);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(byte_100F27B10);
  v12 = sub_1004B804C(&qword_101406078);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLFavoriteBoardIntent_v2, v6);
}

uint64_t sub_100B2EA60@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DDB10, (uint64_t)qword_101480B80, (uint64_t)sub_100B2E888, a1);
}

uint64_t sub_100B2EA80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10140605C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_100B2E220(a1);
}

uint64_t sub_100B2EAD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B2F714();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100B2EB00()
{
  unint64_t result;

  result = qword_101405FD8;
  if (!qword_101405FD8)
  {
    result = swift_getWitnessTable(&unk_100F27A34, &type metadata for CRLFavoriteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_101405FD8);
  }
  return result;
}

unint64_t sub_100B2EB48()
{
  unint64_t result;

  result = qword_101405FE0;
  if (!qword_101405FE0)
  {
    result = swift_getWitnessTable(&unk_100F27A5C, &type metadata for CRLFavoriteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_101405FE0);
  }
  return result;
}

uint64_t sub_100B2EB8C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101132B18, 1) + 8);
}

uint64_t sub_100B2EBB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101132AF0, 1);
}

uint64_t sub_100B2EBC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for CRLBoardEntity(0);
  v2[7] = v3;
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v2[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[10] = v5;
  v2[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100B2EC44, 0, 0);
}

uint64_t sub_100B2EC44()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 16, 0, 0);
  v1 = Logger.init(_:)((id)static OS_os_log.appIntents);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Called old version of intent. Try with CRLFavoriteBoardIntent_v2", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD **)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);

  IntentParameter.wrappedValue.getter(v8);
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  static IntentResult.result<A>(value:)(v8, v9, v10);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B2EDCC(uint64_t a1)
{
  return sub_100B2EDF0(a1, qword_101480B98, 0xD000000000000016, 0x8000000100FF7AC0);
}

uint64_t sub_100B2EDF0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v17, a2);
  sub_1004F2A1C(v17, (uint64_t)a2);
  v18 = String.LocalizationValue.init(stringLiteral:)(a3, a4);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0x6E497070414C5243, 0xED000073746E6574, v13, v10, "App intent title", 16, 2);
}

uint64_t sub_100B2EF78@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C9920(&qword_1013DDB18, (uint64_t)qword_101480B98, (uint64_t)sub_100B2EDCC, a1);
}

uint64_t sub_100B2EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_1004B804C(&qword_101406038);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101406040);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, a1, a2);
  v10._countAndFlagsBits = 543450177;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(byte_100F27AC0);
  v12 = sub_1004B804C(&qword_101406048);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0x6F766166206F7420;
  v13._object = (void *)0xED00007365746972;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_100B2F118(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_101406034);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return sub_100B2EBC0(a1, v4);
}

uint64_t sub_100B2F170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100B2F28C();
  *a1 = result;
  return result;
}

uint64_t sub_100B2F194(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B2F6A8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLFavoriteBoardIntent()
{
  return &type metadata for CRLFavoriteBoardIntent;
}

ValueMetadata *type metadata accessor for CRLFavoriteBoardIntent_v2()
{
  return &type metadata for CRLFavoriteBoardIntent_v2;
}

uint64_t sub_100B2F1DC()
{
  return sub_1004CBA30(&qword_101405FF0, &qword_101405FF8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100B2F208()
{
  return sub_1004CBA30(&qword_101406000, &qword_101406008, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100B2F234()
{
  return sub_1004CBA30(&qword_101406010, &qword_101406018, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100B2F260()
{
  return sub_1004CBA30(&qword_1013E10F8, &qword_1013E1100, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100B2F28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v43 = *(_QWORD *)(v0 - 8);
  v44 = v0;
  __chkstk_darwin(v0);
  v42 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v40 = (char *)&v38 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1004B804C(&qword_1013E1120);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter title for board", 25, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x8000000100FF7AA0);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for boards", 32, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for CRLBoardEntity(0);
  v30 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v40;
  v32(v40, 1, 1, v31);
  v34 = v41;
  v32(v41, 1, 1, v31);
  v35 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v42, enum case for InputConnectionBehavior.default(_:), v44);
  v36 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
}

unint64_t sub_100B2F6A8()
{
  unint64_t result;

  result = qword_101406028;
  if (!qword_101406028)
  {
    result = swift_getWitnessTable(&unk_100F279A4, &type metadata for CRLFavoriteBoardIntent);
    atomic_store(result, &qword_101406028);
  }
  return result;
}

uint64_t sub_100B2F6EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100B2F714()
{
  unint64_t result;

  result = qword_101406050;
  if (!qword_101406050)
  {
    result = swift_getWitnessTable(&unk_100F278D0, &type metadata for CRLFavoriteBoardIntent_v2);
    atomic_store(result, &qword_101406050);
  }
  return result;
}

uint64_t sub_100B2F758(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for CRLRenameBoardIntent(a2, a1);
  return a2;
}

_QWORD *sub_100B2F78C(_QWORD *a1)
{
  destroy for CRLRenameBoardIntent(a1);
  return a1;
}

uint64_t sub_100B2F7B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100B2F7E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_100B2F808()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  unint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  Class isa;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t Strong;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  char v80;
  void *v81;
  void *v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  char *v91;
  id v92;
  int v93;
  int v94;
  uint64_t v95;

  v1 = v0;
  v2 = type metadata accessor for UICellConfigurationState(0);
  v86 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, "view", v3);
  if (!v6)
    goto LABEL_31;
  v7 = v6;
  v8 = objc_msgSend(v6, "layer");

  v9 = *(void **)((char *)v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView);
  v10 = objc_msgSend(v9, "layer");
  v92 = *(id *)((char *)v0
              + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView);
  v11 = objc_msgSend(v92, "layer");
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v13 = v12;
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  objc_msgSend(v8, "setMasksToBounds:", 0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setMasksToBounds:", 0);
  v14 = objc_msgSend(v0, "view");
  if (!v14)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v15 = v14;
  v89 = v8;
  v90 = v2;
  v88 = v10;
  v91 = v5;
  objc_msgSend(v14, "addSubview:", v9);

  v16 = v92;
  objc_msgSend(v92, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v87 = v11;
  objc_msgSend(v11, "setMasksToBounds:", 1);
  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v18 = v17;
  objc_msgSend(v17, "addSubview:", v16);

  v19 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v20 = swift_allocObject(v19, 96, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5FF0;
  v21 = objc_msgSend(v9, "topAnchor");
  v22 = objc_msgSend(v16, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v9, "leadingAnchor");
  v25 = objc_msgSend(v16, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v9, "trailingAnchor");
  v28 = objc_msgSend(v16, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v9, "bottomAnchor");
  v31 = objc_msgSend(v16, "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 56) = v32;
  v33 = objc_msgSend(v16, "topAnchor");
  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "topAnchor");

  v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v20 + 64) = v37;
  v38 = objc_msgSend(v16, "leadingAnchor");
  v39 = objc_msgSend(v1, "view");
  if (!v39)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "leadingAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(v20 + 72) = v42;
  v43 = objc_msgSend(v16, "trailingAnchor");
  v44 = objc_msgSend(v1, "view");
  if (!v44)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, "trailingAnchor");

  v47 = objc_msgSend(v43, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v20 + 80) = v47;
  v48 = objc_msgSend(v16, "bottomAnchor");
  v49 = objc_msgSend(v1, "view");
  if (!v49)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    return;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, "bottomAnchor");

  v52 = objc_msgSend(v48, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(v20 + 88) = v52;
  v95 = v20;
  specialized Array._endMutation()(v53);
  v54 = v95;
  if (!((unint64_t)v95 >> 62))
  {
    v55 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v95);
    if (v55)
      goto LABEL_11;
LABEL_22:
    swift_bridgeObjectRelease(v54);
    v63 = v90;
    goto LABEL_23;
  }
  if (v95 < 0)
    v64 = v95;
  else
    v64 = v95 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v95);
  v55 = _CocoaArrayWrapper.endIndex.getter(v64);
  if (!v55)
    goto LABEL_22;
LABEL_11:
  type metadata accessor for UILayoutPriority(0);
  if (v55 < 1)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v57 = v56;
  v58 = 0;
  do
  {
    if ((v54 & 0xC000000000000001) != 0)
      v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v54);
    else
      v59 = *(id *)(v54 + 8 * v58 + 32);
    v60 = v59;
    ++v58;
    v93 = 1065353216;
    v94 = 1148846080;
    v61 = sub_1004DDC04();
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v95, &v94, &v93, v57, v61);
    LODWORD(v62) = v95;
    objc_msgSend(v60, "setPriority:", v62);

  }
  while (v55 != v58);
  swift_bridgeObjectRelease(v54);
  v63 = v90;
  v16 = v92;
LABEL_23:
  v65 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v65, "activateConstraints:", isa, swift_bridgeObjectRelease(v54).n128_f64[0]);

  v67 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView);
  objc_msgSend(v67, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "addSubview:", v67);
  v68 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView);
  objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v67, "addSubview:", v68);
  v69 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  objc_msgSend(v69, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v67, "addSubview:", v69);
  v70 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  objc_msgSend(v70, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v70, "setLineBreakMode:", 4);
  objc_msgSend(v16, "addSubview:", v70);
  v71 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v71, "setLineBreakMode:", 4);
  objc_msgSend(v16, "addSubview:", v71);
  v72 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v72, "setLineBreakMode:", 4);
  objc_msgSend(v16, "addSubview:", v72);
  v73 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  objc_msgSend(v73, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "addSubview:", v73);
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  v75 = v91;
  if (Strong)
  {
    v76 = Strong;
    v77 = objc_opt_self(UICollectionViewCell);
    v78 = (void *)swift_dynamicCastObjCClass(v76, v77);
    if (v78)
    {
      v79 = objc_msgSend(v78, "_bridgedConfigurationState");
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

      v80 = UICellConfigurationState.isEditing.getter();
      (*(void (**)(_QWORD))((swift_isaMask & *v1) + 0x168))(v80 & 1);
      v81 = *(void **)((char *)v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
      objc_msgSend(v81, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v92, "addSubview:", v81);
      v82 = *(void **)((char *)v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView);
      objc_msgSend(v82, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v83 = objc_msgSend(v1, "view");
      if (v83)
      {
        v84 = v83;
        objc_msgSend(v83, "addSubview:", v82);

        swift_unknownObjectRelease(v76);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v75, v63);
        return;
      }
      goto LABEL_39;
    }
    swift_unknownObjectRelease(v76);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"prepareAndAddSubviews()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 773, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"prepareAndAddSubviews()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2u, 773, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

}

void sub_100B30260()
{
  _QWORD *v0;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x1C8))();
  sub_100B33C80();
  sub_100B32AB8();
  sub_100B3057C();
}

uint64_t sub_100B302B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return v6;
}

uint64_t sub_100B30338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 168))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return v6;
}

uint64_t sub_100B303B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 216))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return v6;
}

void sub_100B30438(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;

  v2 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView) = a1;
  v9 = a1;
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)(v1 + v2);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setBackgroundStyle:", 1);
    objc_msgSend(v5, "setHorizontalAlignment:", 1);
    v6 = *(void **)(v1
                  + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView);
    objc_msgSend(v6, "addSubview:", v5);
    sub_1008900A0(v6, v5);
    LODWORD(v7) = 1148846080;
    objc_msgSend(v5, "setContentCompressionResistancePriority:forAxis:", 0, v7);
    LODWORD(v8) = 1148846080;
    objc_msgSend(v5, "setContentCompressionResistancePriority:forAxis:", 1, v8);

    v3 = v9;
    v9 = v5;
  }

}

uint64_t sub_100B3053C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode);
}

id sub_100B3054C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1
           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode) = a1;
  return objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge), "setHidden:", (a1 & 1) == 0);
}

void sub_100B3057C()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  unsigned __int8 v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  Class isa;
  id v23;
  id v24;
  void *v25;
  NSString v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  id v35;
  int v36;
  id v37;
  NSString v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  unint64_t v43;
  id v44;

  v1 = v0;
  v2 = (char *)v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (Strong)
  {
    v4 = Strong;
    v5 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType(Strong);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 336))(ObjectType, v5);
    swift_unknownObjectRelease(v4);
    if (v7)
    {
      if (v7 == 1)
        v8 = 0x8000000100FF8250;
      else
        v8 = 0xE700000000000000;
      v9 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel), "font");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "fontDescriptor");

        objc_msgSend(v11, "pointSize");
        v13 = v12;

      }
      else
      {
        v13 = 0.0;
      }
      if (qword_1013DDB28 != -1)
        swift_once(&qword_1013DDB28, sub_100B31A80);
      v14 = qword_101480BB8;
      v15 = (void *)objc_opt_self(UIImageSymbolConfiguration);
      v16 = objc_msgSend(v15, "configurationWithPointSize:weight:", v14, v13);
      v17 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v18 = swift_allocObject(v17, 40, 7);
      v19 = v18;
      *(_OWORD *)(v18 + 16) = xmmword_100EEF400;
      if (qword_1013DDB20 != -1)
        v18 = swift_once(&qword_1013DDB20, sub_100B31A6C);
      v20 = (void *)qword_101480BB0;
      *(_QWORD *)(v19 + 32) = qword_101480BB0;
      specialized Array._endMutation()(v18);
      sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
      v21 = v20;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v23 = objc_msgSend(v15, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

      v24 = objc_msgSend(v16, "configurationByApplyingConfiguration:", v23);
      v43 = (unint64_t)objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      v25 = (void *)objc_opt_self(UIImage);
      v26 = String._bridgeToObjectiveC()();
      v27 = objc_msgSend(v25, "systemImageNamed:", v26, swift_bridgeObjectRelease(v8).n128_f64[0]);

      v28 = objc_msgSend(v27, "imageByApplyingSymbolConfiguration:", v24);
      objc_msgSend((id)v43, "setImage:", v28);

    }
    else
    {
      v43 = v7;
    }
  }
  else
  {
    v43 = 0;
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x178))();
  v30 = v29;
  v31 = objc_allocWithZone((Class)NSMutableAttributedString);
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v31, "initWithString:", v32, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v34 = (id)v43;
  if (v43)
  {
    v35 = (id)v43;
    v36 = sub_1003A91F4();
    v37 = objc_allocWithZone((Class)NSAttributedString);
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v37, "initWithString:", v38);

    if (v36)
    {
      objc_msgSend(v33, "insertAttributedString:atIndex:", v39, 0);

      v40 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v35);
      objc_msgSend(v33, "insertAttributedString:atIndex:", v40, 0);
    }
    else
    {
      objc_msgSend(v33, "appendAttributedString:", v39);

      v40 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v35);
      objc_msgSend(v33, "appendAttributedString:", v40);
    }

    v34 = (id)v43;
  }
  v44 = v34;
  v41 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  v42 = v33;
  objc_msgSend(v41, "setAttributedText:", v42);

}

void sub_100B30A58()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x188))();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "setText:", v4);

}

void sub_100B30ACC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;

  v1 = v0;
  v2 = _s8GridItemCMa(0);
  v3 = (id)swift_dynamicCastClass(v0, v2);
  if (v3)
  {
    v4 = v0;
    v5 = sub_10055AF50();
    v6 = *(id *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
    *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = v5;
    v7 = v5;
    if (!v6)
      goto LABEL_9;
    v6 = v6;
    objc_msgSend(v6, "removeFromParentViewController");
    v3 = objc_msgSend(v6, "view");
    if (v3)
    {
LABEL_8:
      v11 = v3;
      objc_msgSend(v3, "removeFromSuperview");

      goto LABEL_9;
    }
    __break(1u);
  }
  v8 = _s8ListItemCMa((uint64_t)v3);
  if (!swift_dynamicCastClass(v0, v8))
    goto LABEL_11;
  v9 = v0;
  v10 = sub_1007F2334();
  v6 = *(id *)&v9[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  *(_QWORD *)&v9[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = v10;
  v7 = v10;
  if (!v6)
  {
LABEL_9:
    sub_100B310B0();

    sub_100B310B0();
    return;
  }
  v6 = v6;
  objc_msgSend(v6, "removeFromParentViewController");
  v3 = objc_msgSend(v6, "view");
  if (v3)
    goto LABEL_8;
  __break(1u);
LABEL_11:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD0000000000000A5, 0x8000000100FF80A0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 77, 0);
  __break(1u);
}

id sub_100B30C5C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD);
  _QWORD *v12;
  char *v13;
  id v14;
  _QWORD *v15;
  id v16;
  char v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for AppEntityVisualState(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = (id)__chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v10 = *(_QWORD **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v10)
  {
    v11 = *(void (**)(_QWORD))((swift_isaMask & *v10) + 0x168);
    v12 = v10;
    v11(a1 & 1);

    v13 = v2;
    v14 = objc_msgSend(v13, "isSelected");
    result = objc_msgSend(v13, "isHighlighted");
    v15 = *(_QWORD **)&v2[v9];
    if (v15)
    {
      v16 = result;
      v17 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v14, v16, 0, 0, v17 & 1, 0);

      UIView.updateAppEntityAnnotation(with:)(v8);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100B30DA8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v4+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "superview");
    if (!v5)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"thumbnailFrameInItem", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 186, "Thumbnail image view has no superview, so we can't determine a rect for the zoom animation.", 91, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"thumbnailFrameInItem", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2u, 186, (uint64_t)"Thumbnail image view has no superview, so we can't determine a rect for the zoom animation.", 91, 2u);
      v8 = 0;
      v10 = 0;
      v12 = 0;
      v14 = 0;
      goto LABEL_6;
    }
    v6 = *(_QWORD *)(v1 + v3);
    if (v6)
    {
      objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView), "frame");
      objc_msgSend(v5, "convertRect:toCoordinateSpace:", v1);
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

LABEL_6:
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v14;
      *(_BYTE *)(a1 + 32) = v5 == 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100B30F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  void *v7;
  id v8;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle + 8);
  *v3 = a1;
  v3[1] = a2;
  if (a2)
  {
    if (v5)
    {
      v6 = v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v4, v5, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v5);
        return;
      }
    }
  }
  else if (!v5)
  {
    return;
  }
  v7 = *(void **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v7)
  {
    v8 = v7;
    sub_100B3057C();
    swift_bridgeObjectRelease(v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_100B30FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText + 8);
  *v3 = a1;
  v3[1] = a2;
  if (a2)
  {
    if (v5)
    {
      v6 = v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v4, v5, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v5);
        return;
      }
    }
  }
  else if (!v5)
  {
    return;
  }
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v7)
  {
    v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x190);
    v9 = v7;
    v8();
    swift_bridgeObjectRelease(v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_100B310B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v12 = objc_msgSend(v0, "contentView");
  v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = v2 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  *(_QWORD *)(v3 + 8) = &off_101294C00;
  *(_QWORD *)&v4 = swift_unknownObjectWeakAssign(v3, v0).n128_u64[0];
  v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v5, "loadViewIfNeeded", v4);
  v6 = *(void **)&v0[v1];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v7 = objc_msgSend(v6, "view");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v12, "addSubview:", v7);
    v9 = objc_msgSend(v12, "layer");
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v10 = objc_msgSend(v0, "contentView");
    sub_1008900A0(v0, v10);

    sub_1008900A0(v12, v8);
    objc_msgSend(v9, "setMasksToBounds:", 0);

    v11 = v9;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"didUpdateViewController()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 389, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didUpdateViewController()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2u, 389, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v11 = v12;
  }

}

_BYTE *sub_100B3129C(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *result;
  int v5;

  *(_BYTE *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected) = a1;
  v3 = a1 & 1;
  result = *(_BYTE **)(v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
  v5 = result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = a1;
  if (v5 != v3)
    return objc_msgSend(result, "setNeedsDisplay");
  return result;
}

id sub_100B312E4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  id v17;
  objc_super v19;

  v9 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = 0;
  v11 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName];
  *v15 = 0;
  v15[1] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = 1;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = 0;
  v16 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  *(_QWORD *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = 0;
  v19.receiver = v4;
  v19.super_class = (Class)_s4ItemCMa(0);
  v17 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  sub_100B30ACC();

  return v17;
}

id sub_100B314D4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id result;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;
  char *v14;
  id v15;
  _QWORD *v16;
  id v17;
  char v18;
  objc_super v19;

  v2 = v1;
  v4 = type metadata accessor for AppEntityVisualState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)_s4ItemCMa(0);
  v19.receiver = v2;
  v19.super_class = v8;
  result = objc_msgSendSuper2(&v19, "setSelected:", a1 & 1);
  v10 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v11 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v2, "isSelected");
    (*(void (**)(id))((swift_isaMask & *v12) + 0x120))(v13);

    v14 = v2;
    v15 = objc_msgSend(v14, "isSelected");
    result = objc_msgSend(v14, "isHighlighted");
    v16 = *(_QWORD **)&v2[v10];
    if (v16)
    {
      v17 = result;
      v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v15, v17, 0, 0, v18 & 1, 0);

      UIView.updateAppEntityAnnotation(with:)(v7);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100B31654(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)_s4ItemCMa(0);
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_100B316D4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id result;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  unsigned __int8 v13;
  char *v14;
  id v15;
  _QWORD *v16;
  id v17;
  char v18;
  objc_super v19;

  v2 = v1;
  v4 = type metadata accessor for AppEntityVisualState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)_s4ItemCMa(0);
  v19.receiver = v2;
  v19.super_class = v8;
  result = objc_msgSendSuper2(&v19, "setHighlighted:", a1 & 1);
  v10 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  v11 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v2, "isHighlighted");
    *((_BYTE *)v12 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted) = v13;
    (*(void (**)(void))((swift_isaMask & *v12) + 0x1C8))();

    v14 = v2;
    v15 = objc_msgSend(v14, "isSelected");
    result = objc_msgSend(v14, "isHighlighted");
    v16 = *(_QWORD **)&v2[v10];
    if (v16)
    {
      v17 = result;
      v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v15, v17, 0, 0, v18 & 1, 0);

      UIView.updateAppEntityAnnotation(with:)(v7);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100B31854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  void (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;

  v3 = v2;
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8);
  if (!v6)
  {
    if (!a2)
      return;
LABEL_10:
    v8 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
    v9 = *(_QWORD **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
    if (v9)
    {
      v10 = *(void **)((char *)v9
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
      v11 = *(void (**)(void))((swift_isaMask & *v9) + 0x198);
      v12 = v9;
      v11();
      v14 = v13;
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      objc_msgSend(v10, "setText:", v15);

      v16 = *(void **)(v3 + v8);
      if (v16)
      {
        v17 = objc_msgSend(v16, "view");
        if (v17)
        {
          v18 = v17;
          objc_msgSend(v17, "setNeedsUpdateConstraints");

          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  if (!a2)
    goto LABEL_10;
  v7 = *v5 == a1 && v6 == a2;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, a1, a2, 0) & 1) == 0)
    goto LABEL_10;
}

void sub_100B31990()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  int v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v1)
  {
    v2 = *(_BYTE **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
    v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite);
    v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
    v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = v3;
    v5 = *(void **)&v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView];
    v6 = v3 ^ 1u;
    v8 = v2;
    objc_msgSend(v5, "setHidden:", v6);
    if (v2[v4] == 1)
      v7 = v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] ^ 1;
    else
      v7 = 1;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView], "setHidden:", v7 & 1);

  }
  else
  {
    __break(1u);
  }
}

id sub_100B31A6C(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondaryLabelColor, &qword_101480BB0);
}

UIImageSymbolWeight sub_100B31A80()
{
  UIImageSymbolWeight result;

  result = UIImageSymbolWeightForFontWeight(UIFontWeightMedium);
  qword_101480BB8 = result;
  return result;
}

char *sub_100B31AA8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  uint64_t v16;
  id v17;
  NSString v18;
  uint64_t v19;
  id v20;
  NSString v21;
  char *v22;
  uint64_t v23;
  objc_super v25;

  v1 = &v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView;
  v3 = (objc_class *)type metadata accessor for CRLShadowView();
  v4 = objc_allocWithZone(v3);
  v5 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC18ThumbnailImageViewCMa()), "init");
  v8 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone(v3), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa()), "init");
  v11 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView;
  *(_QWORD *)&v5[v11] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView] = 0;
  v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = 0;
  v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted] = 0;
  v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = 0;
  v12 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa()), "init");
  v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode] = 0;
  v13 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v15, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v5[v13] = v14;
  v16 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel;
  v17 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v18, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v5[v16] = v17;
  v19 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel;
  v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v21, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v5[v19] = v20;
  *(_QWORD *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = 0;

  v25.receiver = v5;
  v25.super_class = (Class)_s4ItemC14ViewControllerCMa();
  v22 = (char *)objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton]
      + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate;
  *(_QWORD *)(v23 + 8) = &off_101294BB0;
  swift_unknownObjectWeakAssign(v23, v22);
  return v22;
}

void sub_100B31F24()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)_s4ItemC14ViewControllerCMa();
  v1 = objc_msgSendSuper2(&v11, "viewDidLoad");
  v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x1C0))(v1);
  v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1C8))(v2);
  v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1D0))(v3);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x1D8))(v4);
  v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v6 = swift_allocObject(&unk_101294DB0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v9[4] = sub_100B368DC;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = *(_QWORD *)"";
  v9[2] = sub_100568280;
  v9[3] = &unk_101294DC8;
  v7 = _Block_copy(v9);
  v8 = objc_msgSend(v5, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, 0, v7, swift_release(v10).n128_f64[0]);
  _Block_release(v7);
  swift_unknownObjectRelease(v8);

}

void sub_100B3209C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x1D8))();

  }
}

void sub_100B32138()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD0000000000000A5, 0x8000000100FF80A0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 787, 0);
  __break(1u);
}

void sub_100B32190()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD0000000000000A5, 0x8000000100FF80A0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 792, 0);
  __break(1u);
}

id sub_100B32300(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s4ItemC14ViewControllerC8ItemViewCMa);
}

id sub_100B32468(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s4ItemC14ViewControllerC18ThumbnailImageViewCMa);
}

UIFontTextStyle sub_100B32474()
{
  qword_101406080 = (uint64_t)UIFontTextStyleCaption1;
  return UIFontTextStyleCaption1;
}

UIFontTextStyle sub_100B3248C()
{
  qword_101406088 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

id sub_100B324A4(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_systemRedColor, &qword_101406090);
}

id sub_100B324B8(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_whiteColor, &qword_101406098);
}

char *sub_100B324CC()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  Class isa;
  id v48;
  id v49;
  objc_super v50;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = &v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = 0;
  v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] = 0;
  v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size] = 1;

  v50.receiver = v5;
  v50.super_class = (Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa();
  v8 = objc_msgSendSuper2(&v50, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setUserInteractionEnabled:", 0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v10 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v10 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  *(_QWORD *)(v10 + 48) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v10 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  v11 = (char *)v8;
  v12 = UIView.registerForTraitChanges<A>(_:handler:)(v10, sub_100B35FFC, 0, ObjectType);
  swift_unknownObjectRelease(v12);

  *(_QWORD *)&v13 = swift_bridgeObjectRelease().n128_u64[0];
  v14 = *(void **)&v11[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView];
  v15 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v13);
  objc_msgSend(v14, "setHidden:", 1);
  objc_msgSend(v11, "addSubview:", v14);
  v16 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  v17 = *(void **)&v11[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView];
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v17, "setHidden:", 1);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v17, "setContentCompressionResistancePriority:forAxis:", 0, v18);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v17, "setContentHuggingPriority:forAxis:", 0, v19);
  objc_msgSend(v11, "addSubview:", v17);
  sub_100B32AB8();
  v20 = objc_msgSend(v17, "topAnchor");
  v21 = objc_msgSend(v11, "topAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  v23 = objc_msgSend(*(id *)&v11[v16], "leadingAnchor");
  v24 = objc_msgSend(v11, "leadingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  v26 = objc_msgSend(*(id *)&v11[v16], "trailingAnchor");
  v27 = objc_msgSend(v11, "trailingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  v29 = objc_msgSend(*(id *)&v11[v16], "bottomAnchor");
  v30 = objc_msgSend(v11, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  v32 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v33 = swift_allocObject(v32, 80, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100EF8FC0;
  *(_QWORD *)(v33 + 32) = v22;
  *(_QWORD *)(v33 + 40) = v25;
  *(_QWORD *)(v33 + 48) = v28;
  *(_QWORD *)(v33 + 56) = v31;
  v34 = v15;
  v35 = *(void **)&v11[v15];
  v49 = v22;
  v48 = v25;
  v36 = v28;
  v37 = v31;
  v38 = objc_msgSend(v35, "centerXAnchor");
  v39 = objc_msgSend(*(id *)&v11[v16], "centerXAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v33 + 64) = v40;
  v41 = objc_msgSend(*(id *)&v11[v34], "centerYAnchor");
  v42 = objc_msgSend(*(id *)&v11[v16], "centerYAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v33 + 72) = v43;
  specialized Array._endMutation()(v44);
  v45 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v11;
}

void sub_100B32AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  Class isa;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  id v28;
  uint64_t v29;
  id v30;
  Class v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;

  v1 = v0;
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size) & 1) != 0)
  {
    if (qword_1013DDB38 != -1)
      swift_once(&qword_1013DDB38, sub_100B3248C);
    v2 = &qword_101406088;
  }
  else
  {
    if (qword_1013DDB30 != -1)
      swift_once(&qword_1013DDB30, sub_100B32474);
    v2 = &qword_101406080;
  }
  v35 = (id)*v2;
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", v35);
  objc_msgSend(v3, "pointSize");
  v5 = v4;

  v6 = *(void **)(v1
                + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView);
  v7 = (void *)objc_opt_self(UIImage);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "systemImageNamed:", v8);

  objc_msgSend(v6, "setImage:", v9);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v11 = swift_allocObject(v10, 40, 7);
  v12 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_100EEF400;
  if (qword_1013DDB48 != -1)
    v11 = swift_once(&qword_1013DDB48, sub_100B324B8);
  v13 = (void *)qword_101406098;
  *(_QWORD *)(v12 + 32) = qword_101406098;
  specialized Array._endMutation()(v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  v14 = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v16 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v17 = objc_msgSend(v16, "configurationWithPaletteColors:", isa);

  v18 = objc_msgSend(v16, "configurationWithPointSize:weight:", 9, v5 + 1.0);
  v19 = objc_msgSend(v17, "configurationByApplyingConfiguration:", v18);

  objc_msgSend(v6, "setPreferredSymbolConfiguration:", v19);
  v20 = *(void **)(v1
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView);
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v7, "systemImageNamed:", v21);

  objc_msgSend(v20, "setImage:", v22);
  v23 = v1
      + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate);
  if (Strong)
  {
    v25 = Strong;
    v26 = *(_QWORD *)(v23 + 8);
    ObjectType = swift_getObjectType(Strong);
    if (qword_1013DDB40 != -1)
      swift_once(&qword_1013DDB40, sub_100B324A4);
    v28 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(v1, qword_101406090, ObjectType, v26);
    swift_unknownObjectRelease(v25);
  }
  else
  {
    if (qword_1013DDB40 != -1)
      swift_once(&qword_1013DDB40, sub_100B324A4);
    v28 = (id)qword_101406090;
  }
  v29 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v29 + 32) = v28;
  v36 = v29;
  specialized Array._endMutation()(v29);
  v30 = v28;
  v31 = Array._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v16, "configurationWithPaletteColors:", v31, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v33 = objc_msgSend(v16, "configurationWithPointSize:weight:", 4, v5);
  v34 = objc_msgSend(v32, "configurationByApplyingConfiguration:", v33);

  objc_msgSend(v20, "setPreferredSymbolConfiguration:", v34);
}

id sub_100B32F80(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s4ItemC14ViewControllerC14FavoriteButtonCMa);
}

UIFontTextStyle sub_100B32FD4()
{
  qword_1014060A0 = (uint64_t)UIFontTextStyleTitle2;
  return UIFontTextStyleTitle2;
}

UIImageSymbolWeight sub_100B32FEC()
{
  UIImageSymbolWeight result;

  result = UIImageSymbolWeightForFontWeight(UIFontWeightRegular);
  qword_1014060A8 = result;
  return result;
}

id sub_100B33014(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_whiteColor, &qword_1014060B0);
}

void sub_100B33028()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v0);

  if (v1)
    qword_1014060B8 = (uint64_t)v1;
  else
    __break(1u);
}

id sub_100B330A0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.8);
  qword_1014060C0 = (uint64_t)result;
  return result;
}

id sub_100B330DC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.5);
  qword_1014060C8 = (uint64_t)result;
  return result;
}

void sub_100B33114()
{
  qword_1014060D0 = 0;
  *(_QWORD *)algn_1014060D8 = 0;
}

void sub_100B33124()
{
  qword_1014060E0 = 0x4000000000000000;
}

void sub_100B33134()
{
  _BYTE *v0;
  char *v1;
  NSString v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  objc_super v19;

  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = 0;
  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "systemImageNamed:", v2);

  if (v4)
  {
    v5 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage;
    if (qword_1013DDB60 != -1)
      swift_once(&qword_1013DDB60, sub_100B33014);
    v6 = objc_msgSend(v4, "imageWithTintColor:", qword_1014060B0);

    *(_QWORD *)&v1[v5] = v6;
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v3, "systemImageNamed:", v7);

    if (v8)
    {
      v9 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage;
      v10 = objc_msgSend(v8, "imageWithTintColor:", qword_1014060B0);

      *(_QWORD *)&v1[v9] = v10;
      *(_QWORD *)&v1[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = 0;
      *(_QWORD *)&v1[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = 0;

      v19.receiver = v1;
      v19.super_class = (Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa();
      v11 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      sub_100B33C80();
      v12 = (void *)objc_opt_self(UIColor);
      v13 = v11;
      v14 = objc_msgSend(v12, "clearColor");
      objc_msgSend(v13, "setBackgroundColor:", v14);

      LODWORD(v15) = 1148846080;
      objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 0, v15);
      LODWORD(v16) = 1148846080;
      objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 1, v16);
      LODWORD(v17) = 1148846080;
      objc_msgSend(v13, "setContentHuggingPriority:forAxis:", 0, v17);
      LODWORD(v18) = 1148846080;
      objc_msgSend(v13, "setContentHuggingPriority:forAxis:", 1, v18);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CGFloat sub_100B33434()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  CGRect v37;
  CGRect v38;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage);
  v2 = 0.0;
  v3 = 0.0;
  v4 = 0.0;
  if (v1)
  {
    v5 = v1;
    objc_msgSend(v5, "size");
    v7 = v6;
    v9 = v8;
    objc_msgSend(v5, "alignmentRectInsets");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v4 = v7 - (v13 + v17);
    v3 = v9 - (v11 + v15);
  }
  v18 = *(void **)(v0
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage);
  v19 = 0.0;
  if (v18)
  {
    v20 = v18;
    objc_msgSend(v20, "size");
    v22 = v21;
    v24 = v23;
    objc_msgSend(v20, "alignmentRectInsets");
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    v19 = v22 - (v28 + v32);
    v2 = v24 - (v26 + v30);
  }
  v37.origin.x = 0.0;
  v37.origin.y = 0.0;
  v33 = 0;
  v34 = 0;
  v37.size.width = v4;
  v37.size.height = v3;
  v35 = v2;
  v38 = CGRectUnion(v37, *(CGRect *)(&v19 - 2));
  return v38.size.width;
}

void sub_100B33564(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  CGContext *v15;
  CGContext *v16;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGFloat Width;
  double v24;
  CGFloat y;
  double v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  const CGPath *v30;
  CGColor *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t);
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGColor *v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  CGColor *v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  double v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  CGFloat v57;
  const CGPath *v58;
  CGColor *v59;
  void *v60;
  void *v61;
  id v62;
  CGColor *v63;
  uint64_t v64;
  double v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  const CGPath *v69;
  objc_super v70;
  CGSize v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v5 = v4;
  v10 = type metadata accessor for CGPathFillRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (objc_class *)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa();
  v70.receiver = v4;
  v70.super_class = v14;
  objc_msgSendSuper2(&v70, "drawRect:", a1, a2, a3, a4);
  v15 = UIGraphicsGetCurrentContext();
  if (v15)
  {
    v16 = v15;
    v17 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage;
    v18 = *(void **)&v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage];
    if (v18)
    {
      objc_msgSend(v18, "size");
      v20 = v19;
      v22 = v21;
      v72.origin.x = a1;
      v72.origin.y = a2;
      v72.size.width = a3;
      v72.size.height = a4;
      Width = CGRectGetWidth(v72);
      v73.origin.y = a2;
      v24 = Width * 0.5 - v20 * 0.5;
      v66 = a1;
      v67 = a3;
      v73.origin.x = a1;
      y = v73.origin.y;
      v73.size.width = a3;
      v68 = a4;
      v73.size.height = a4;
      v26 = CGRectGetHeight(v73) * 0.5 - v20 * 0.5;
      v74.origin.x = v24;
      v74.origin.y = v26;
      v74.size.width = v20;
      v74.size.height = v22;
      v27 = CGRectGetWidth(v74) * 0.21 * 0.5;
      v75.origin.x = v24;
      v75.origin.y = v26;
      v75.size.width = v20;
      v75.size.height = v22;
      v28 = CGRectGetWidth(v75);
      v65 = 0.21;
      v29 = v28 * 0.21 * 0.5;
      v76.origin.x = v24;
      v76.origin.y = v26;
      v76.size.width = v20;
      v76.size.height = v22;
      v77 = CGRectInset(v76, v27, v29);
      v30 = CGPathCreateWithEllipseInRect(v77, 0);
      if (qword_1013DDB70 != -1)
        swift_once(&qword_1013DDB70, sub_100B330A0);
      v31 = (CGColor *)objc_msgSend((id)qword_1014060C0, "CGColor");
      CGContextSetFillColorWithColor(v16, v31);

      CGContextAddPath(v16, v30);
      v32 = enum case for CGPathFillRule.evenOdd(_:);
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
      v33(v13, enum case for CGPathFillRule.evenOdd(_:), v10);
      CGContextRef.fillPath(using:)(v13);
      v34 = *(void (**)(char *, uint64_t))(v11 + 8);
      v34(v13, v10);
      CGContextSaveGState(v16);
      if (qword_1013DDB80 != -1)
        swift_once(&qword_1013DDB80, sub_100B33114);
      v35 = *(double *)&qword_1014060D0;
      v36 = *(double *)algn_1014060D8;
      if (qword_1013DDB88 != -1)
        swift_once(&qword_1013DDB88, sub_100B33124);
      v69 = v30;
      v37 = *(double *)&qword_1014060E0;
      if (qword_1013DDB78 != -1)
        swift_once(&qword_1013DDB78, sub_100B330DC);
      v38 = (CGColor *)objc_msgSend((id)qword_1014060C8, "CGColor");
      v71.width = v35;
      v71.height = v36;
      CGContextSetShadowWithColor(v16, v71, v37, v38);

      v39 = *(void **)&v5[v17];
      if (v39)
      {
        v40 = qword_1013DDB60;
        v41 = v39;
        if (v40 != -1)
          swift_once(&qword_1013DDB60, sub_100B33014);
        v42 = (void *)qword_1014060B0;
        v78.origin.x = v24;
        v78.origin.y = v26;
        v78.size.width = v20;
        v78.size.height = v22;
        CGContextBeginTransparencyLayerWithRect(v16, v78, 0);
        UIGraphicsPushContext(v16);
        objc_msgSend(v41, "drawInRect:", v24, v26, v20, v22);
        UIGraphicsPopContext();
        CGContextSetBlendMode(v16, kCGBlendModeSourceIn);
        v43 = (CGColor *)objc_msgSend(v42, "CGColor");
        CGContextSetFillColorWithColor(v16, v43);

        v79.origin.x = v24;
        v79.origin.y = v26;
        v79.size.width = v20;
        v79.size.height = v22;
        CGContextFillRect(v16, v79);
        CGContextEndTransparencyLayer(v16);

        CGContextRestoreGState(v16);
        if (v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] != 1)
          goto LABEL_20;
        v44 = *(void **)&v5[v17];
        if (v44)
        {
          objc_msgSend(v44, "size");
          v46 = v45;
          v48 = v47;
          v49 = v66;
          v50 = v67;
          v80.origin.x = v66;
          v80.origin.y = y;
          v80.size.width = v67;
          v51 = v68;
          v80.size.height = v68;
          v52 = CGRectGetWidth(v80) * 0.5 - v46 * 0.5;
          v81.origin.x = v49;
          v81.origin.y = y;
          v81.size.width = v50;
          v81.size.height = v51;
          v53 = CGRectGetHeight(v81) * 0.5 - v46 * 0.5;
          v82.origin.x = v52;
          v82.origin.y = v53;
          v82.size.width = v46;
          v82.size.height = v48;
          v54 = CGRectGetWidth(v82);
          v55 = v65;
          v56 = v54 * v65 * 0.5;
          v83.origin.x = v52;
          v83.origin.y = v53;
          v83.size.width = v46;
          v83.size.height = v48;
          v57 = CGRectGetWidth(v83) * v55 * 0.5;
          v84.origin.x = v52;
          v84.origin.y = v53;
          v84.size.width = v46;
          v84.size.height = v48;
          v85 = CGRectInset(v84, v56, v57);
          v58 = CGPathCreateWithEllipseInRect(v85, 0);
          if (qword_1013DDB68 != -1)
            swift_once(&qword_1013DDB68, sub_100B33028);
          v59 = (CGColor *)objc_msgSend((id)qword_1014060B8, "CGColor");
          CGContextSetFillColorWithColor(v16, v59);

          CGContextAddPath(v16, v58);
          v33(v13, v32, v10);
          CGContextRef.fillPath(using:)(v13);
          v34(v13, v10);
          v60 = *(void **)&v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage];
          if (v60)
          {
            v61 = (void *)qword_1014060B0;
            v62 = v60;
            v86.origin.x = v52;
            v86.origin.y = v53;
            v86.size.width = v46;
            v86.size.height = v48;
            CGContextBeginTransparencyLayerWithRect(v16, v86, 0);
            UIGraphicsPushContext(v16);
            objc_msgSend(v62, "drawInRect:", v52, v53, v46, v48);
            UIGraphicsPopContext();
            CGContextSetBlendMode(v16, kCGBlendModeSourceIn);
            v63 = (CGColor *)objc_msgSend(v61, "CGColor");
            CGContextSetFillColorWithColor(v16, v63);

            v87.origin.x = v52;
            v87.origin.y = v53;
            v87.size.width = v46;
            v87.size.height = v48;
            CGContextFillRect(v16, v87);
            CGContextEndTransparencyLayer(v16);

LABEL_20:
            return;
          }
LABEL_25:
          __break(1u);
          return;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
}

void sub_100B33C80()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  if (qword_1013DDB58 != -1)
    swift_once(&qword_1013DDB58, sub_100B32FEC);
  v1 = qword_1014060A8;
  v2 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v3 = objc_msgSend(v2, "configurationWithWeight:", v1);
  if (qword_1013DDB50 != -1)
    swift_once(&qword_1013DDB50, sub_100B32FD4);
  v4 = objc_msgSend(v2, "configurationWithTextStyle:", qword_1014060A0);
  v5 = objc_msgSend(v3, "configurationByApplyingConfiguration:", v4);

  v6 = objc_msgSend(v0, "traitCollection");
  v11 = objc_msgSend(v5, "configurationWithTraitCollection:", v6);

  v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage], "imageByApplyingSymbolConfiguration:", v11);
  v8 = *(void **)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage];
  *(_QWORD *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = v7;

  v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage], "imageByApplyingSymbolConfiguration:", v11);
  v10 = *(void **)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage];
  *(_QWORD *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = v9;

  objc_msgSend(v0, "invalidateIntrinsicContentSize");
}

void sub_100B33E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_100B33E74(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s4ItemC14ViewControllerC19SelectionStateBadgeCMa);
}

id sub_100B33F08(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s4ItemC14ViewControllerCMa);
}

uint64_t sub_100B34024()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double *v25;
  unint64_t v26;
  unint64_t v27;
  double *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  double *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  double *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double *v71;
  char v72[24];
  objc_super v73;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2);
  v68 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v67 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - v10;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - v16;
  v18 = (objc_class *)_s4ItemCMa(0);
  v73.receiver = v1;
  v73.super_class = v18;
  v19 = objc_msgSendSuper2(&v73, "accessibilityLabel");
  if (!v19)
    goto LABEL_9;
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v24 = v21 & 0xFFFFFFFFFFFFLL;
  if (!v24)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v25 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  v67 = v1;
  v25 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v27 = *((_QWORD *)v25 + 2);
  v26 = *((_QWORD *)v25 + 3);
  if (v27 >= v26 >> 1)
    v25 = (double *)sub_100D0EF94((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  *((_QWORD *)v25 + 2) = v27 + 1;
  v28 = &v25[2 * v27];
  *((_QWORD *)v28 + 4) = v21;
  *((_QWORD *)v28 + 5) = v23;
  v1 = v67;
LABEL_10:
  v29 = (uint64_t)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item], v72, 0, 0);
  sub_10057B540(v29, (uint64_t)v17);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v30(v17, 1, v4))
  {
    sub_1006F00F4((uint64_t)v17);
  }
  else
  {
    sub_10068FB24((uint64_t)v17, (uint64_t)v11);
    sub_1006F00F4((uint64_t)v17);
    v31 = sub_100BCB654();
    v33 = v32;
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v35 = *((_QWORD *)v25 + 2);
    v34 = *((_QWORD *)v25 + 3);
    if (v35 >= v34 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v34 > 1), v35 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v35 + 1;
    v36 = &v25[2 * v35];
    *((_QWORD *)v36 + 4) = v31;
    *((_QWORD *)v36 + 5) = v33;
  }
  sub_10057B540(v29, (uint64_t)v14);
  if (v30(v14, 1, v4))
  {
    sub_1006F00F4((uint64_t)v14);
  }
  else
  {
    v37 = v70;
    sub_10068FB24((uint64_t)v14, v70);
    sub_1006F00F4((uint64_t)v14);
    v38 = v69;
    sub_10068FB24(v37, v69);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v4);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v40 = v38;
        v41 = v68;
        sub_1004B84E0(v40, v68, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v43 = v42;
        v45 = v44;
        v46 = v41;
        v47 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        v49 = (uint64_t *)(v38 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
        v43 = *v49;
        v45 = v49[1];
        v47 = type metadata accessor for CRLBoardIdentifier;
        v46 = v38;
      }
      sub_1004B84A4(v46, v47);
    }
    else
    {
      v43 = sub_100BCE3AC();
      v45 = v48;
    }
    sub_1004B84A4(v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v51 = *((_QWORD *)v25 + 2);
    v50 = *((_QWORD *)v25 + 3);
    if (v51 >= v50 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v51 + 1;
    v52 = &v25[2 * v51];
    *((_QWORD *)v52 + 4) = v43;
    *((_QWORD *)v52 + 5) = v45;
  }
  v53 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText + 8];
  if (v53)
  {
    v54 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText
                                          + 8]);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v56 = *((_QWORD *)v25 + 2);
    v55 = *((_QWORD *)v25 + 3);
    if (v56 >= v55 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v55 > 1), v56 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v56 + 1;
    v57 = &v25[2 * v56];
    *((_QWORD *)v57 + 4) = v54;
    *((_QWORD *)v57 + 5) = v53;
  }
  v58 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8];
  if (v58)
  {
    v59 = *(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName
                                          + 8]);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (double *)sub_100D0EF94(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v61 = *((_QWORD *)v25 + 2);
    v60 = *((_QWORD *)v25 + 3);
    if (v61 >= v60 >> 1)
      v25 = (double *)sub_100D0EF94((_QWORD *)(v60 > 1), v61 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v61 + 1;
    v62 = &v25[2 * v61];
    *((_QWORD *)v62 + 4) = v59;
    *((_QWORD *)v62 + 5) = v58;
  }
  v71 = v25;
  v63 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v64 = sub_100500464();
  v65 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v63, v64);
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_100B345D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate);
  if (Strong)
  {
    v5 = Strong;
    v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    v7 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 5, 5, v7);
    sub_100BD0ED4(v6, (uint64_t)v3);
    LOBYTE(v6) = v8;
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    swift_unknownObjectRelease(v5);
    if ((v6 & 1) != 0)
      return 0;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite) != 1)
    return 0;
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  return v13;
}

uint64_t sub_100B34788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v7 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 5, 5, v7);
  sub_100BD0ED4(v6, (uint64_t)v3);
  LOBYTE(v6) = v8;
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v6 & 1) != 0
    || *(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState) == 1)
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v11 == 1)
  {
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    swift_unknownObjectRelease(v5);

  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v12, "localizedStringForKey:value:table:", v16, v17, 0);

    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    swift_unknownObjectRelease(v5);

  }
  return v9;
}

double *sub_100B34A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  _QWORD v31[7];
  _BYTE v33[24];
  double *v34;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v31 - v6;
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _swiftEmptyArrayStorage;
  v11 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v13 = Strong;
  v14 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRelease(v13);
  v15 = type metadata accessor for CRLBoardLibrary();
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {
    swift_unknownObjectRelease(v14);
    return _swiftEmptyArrayStorage;
  }
  v17 = v16;
  v18 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item, v33, 0, 0);
  sub_10057B540(v18, (uint64_t)v7);
  v19 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  if (v20(v7, 1, v19) == 1)
  {
    swift_unknownObjectRelease(v14);
    sub_1006F00F4((uint64_t)v7);
    return _swiftEmptyArrayStorage;
  }
  if (swift_getEnumCaseMultiPayload(v7, v19) != 2)
  {
    swift_unknownObjectRelease(v14);
    v28 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    v29 = (uint64_t)v7;
LABEL_13:
    sub_1004B84A4(v29, v28);
    return _swiftEmptyArrayStorage;
  }
  sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease();
  sub_1004B84E0((uint64_t)v7, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  v21 = swift_unknownObjectWeakLoadStrong(v11);
  if (!v21)
  {
    swift_unknownObjectRelease(v14);
    v28 = type metadata accessor for CRLBoardIdentifier;
    v29 = (uint64_t)v10;
    goto LABEL_13;
  }
  v22 = v21;
  sub_10057B540(v18, (uint64_t)v4);
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v4, 1, v19);
  if ((_DWORD)v23 == 1)
  {
    __break(1u);
    JUMPOUT(0x100B350BCLL);
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v23);
  v31[-2] = v10;
  swift_bridgeObjectRetain(v24);
  v25 = (char *)sub_100C9D0C0((uint64_t (*)(id *))sub_1006F01E8, (uint64_t)&v31[-4], v24);
  swift_bridgeObjectRelease();
  v26 = sub_100B8A5D4((uint64_t)v4, v25);
  swift_unknownObjectRelease(v22);

  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (*((_QWORD *)v26 + 2))
  {
    v31[1] = v10;
    v31[6] = objc_opt_self(UIImageSymbolConfiguration);
    v31[5] = objc_opt_self(UIImage);
    swift_bridgeObjectRetain(v26);
    v31[3] = "plus.square.on.square";
    v31[4] = "en the view options menu.";
    v31[2] = "Freeform.ViewController";
    v27 = *((unsigned __int8 *)v26 + 32);
    sub_100DA9874(v27);
    __asm { BR              X8 }
  }
  swift_unknownObjectRelease(v14);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

BOOL sub_100B350EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v5 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = Strong;
    v11 = static MainActor.shared.getter(v10);
    v12 = swift_allocObject(&unk_101294EF0, 41, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v12 + 32) = v10;
    *(_BYTE *)(v12 + 40) = a3;
    v13 = sub_100521B98((uint64_t)v7, (uint64_t)&unk_101406318, v12);
    swift_release(v13);

  }
  return Strong != 0;
}

uint64_t sub_100B35210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 208) = a5;
  *(_QWORD *)(v5 + 144) = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  *(_QWORD *)(v5 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 160) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 168) = v8;
  *(_QWORD *)(v5 + 176) = v9;
  return swift_task_switch(sub_100B352A4, v8, v9);
}

uint64_t sub_100B352A4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate);
  *(_QWORD *)(v0 + 184) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 144) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
    swift_beginAccess(v3, v0 + 88, 0, 0);
    sub_10057B540(v3, v2);
    v4 = (_QWORD *)swift_task_alloc(dword_1014074CC);
    *(_QWORD *)(v0 + 192) = v4;
    *v4 = v0;
    v4[1] = sub_1006EF414;
    return sub_100B88A00(*(_BYTE *)(v0 + 208), *(_QWORD *)(v0 + 152));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B35374()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate]);
  if (Strong)
  {
    v8 = Strong;
    v9 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    v10 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 5, 5, v10);
    sub_100BD0ED4(v9, (uint64_t)v6);
    LOBYTE(v9) = v11;
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v9 & 1) == 0 && v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] != 1)
    {
      v14 = type metadata accessor for TaskPriority(0);
      v12 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = v0;
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_101294E00, 40, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      v18 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_101406308, (uint64_t)v17);
      swift_unknownObjectRelease(v8);
      swift_release(v18);
      return v12;
    }
    swift_unknownObjectRelease(v8);
  }
  return 0;
}

uint64_t sub_100B3553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[5] = a4;
  v5 = sub_1004B804C(&qword_1013E01F0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v4[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E3830) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v8);
  v4[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v4[12] = v9;
  v4[13] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v4[14] = v10;
  v4[15] = v11;
  return swift_task_switch(sub_100B3562C, v10, v11);
}

uint64_t sub_100B3562C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate);
  *(_QWORD *)(v0 + 128) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
    swift_beginAccess(v4, v0 + 16, 0, 0);
    v5 = sub_10057B540(v4, v3);
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_100B35728, v6, v7);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100B35728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 136));
  sub_10057B540(v2, v1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    sub_1006F00F4(v6);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    sub_1004B84E0(v6, v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v9 = sub_1004B804C(&qword_1014072D0);
    v10 = *(unsigned __int8 *)(v7 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject(v9, v11 + *(_QWORD *)(v7 + 72), v10 | 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
    v13 = v12 + v11;
    sub_10068FB24(v8, v12 + v11);
    v14 = sub_100BCDE20(v12);
    v15 = sub_100AF87D0((uint64_t)v14);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = *(_QWORD *)(v0 + 48);
      v17 = *(id *)(v0 + 128);
      sub_100BB3C58(v15, (uint64_t)v17);
      v19 = v18;
      swift_unknownObjectRelease(v17);
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
      v21 = swift_allocObject(&unk_101294E28, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      swift_retain(v21);
      v23 = static MainActor.shared.getter(v22);
      v24 = swift_allocObject(&unk_101294E50, 49, 7);
      *(_QWORD *)(v24 + 16) = v23;
      *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v15;
      *(_BYTE *)(v24 + 48) = v19 & 1;
      swift_release(v21);
      v25 = sub_100521B98(v16, (uint64_t)&unk_1013EDF70, v24);
      objc_msgSend(v17, "setEditing:animated:", 0, 1, swift_release(v25).n128_f64[0]);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 56);
    swift_setDeallocating(v12);
    swift_arrayDestroy(v13, *(_QWORD *)(v12 + 16), v27);
    swift_deallocClassInstance(v12, 32, 7);
    sub_1004B84A4(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  v28 = *(_QWORD *)(v0 + 128);
  sub_1006F00F4(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(v28);
  return swift_task_switch(sub_1006EFC54, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

id sub_100B359C0()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))_s4ItemCMa);
}

uint64_t sub_100B35A7C()
{
  return _s4ItemCMa(0);
}

uint64_t _s4ItemCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_101406128;
  if (!qword_101406128)
    return swift_getSingletonMetadata(a1, &_s4ItemCMn);
  return result;
}

void sub_100B35AC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  sub_10050AB74(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F27B60;
    v4[2] = &unk_100F27B78;
    v4[3] = &unk_100F27B78;
    v4[4] = &unk_100F27B78;
    v4[5] = &unk_100F27B78;
    v4[6] = &unk_100F27B78;
    v4[7] = &unk_100F27B60;
    v4[8] = &unk_100F27B60;
    v4[9] = &unk_100F27B90;
    v4[10] = &unk_100F27BA8;
    v4[11] = &unk_100F27BC0;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

uint64_t _s4ItemC14ViewControllerCMa()
{
  return objc_opt_self(_TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController);
}

uint64_t _s4ItemC14ViewControllerC8ItemViewCMa()
{
  return objc_opt_self(_TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController8ItemView);
}

uint64_t _s4ItemC14ViewControllerC18ThumbnailImageViewCMa()
{
  return objc_opt_self(_TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController18ThumbnailImageView);
}

uint64_t _s4ItemC14ViewControllerC14FavoriteButtonCMa()
{
  return objc_opt_self(_TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton);
}

uint64_t _s4ItemC14ViewControllerC19SelectionStateBadgeCMa()
{
  return objc_opt_self(_TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge);
}

uint64_t _s4ItemC14ViewControllerC14FavoriteButtonC4SizeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100B35C54 + 4 * byte_100F27B45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100B35C88 + 4 * byte_100F27B40[v4]))();
}

uint64_t sub_100B35C88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B35C90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B35C98);
  return result;
}

uint64_t sub_100B35CA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B35CACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100B35CB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B35CB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4ItemC14ViewControllerC14FavoriteButtonC4SizeOMa()
{
  return &_s4ItemC14ViewControllerC14FavoriteButtonC4SizeON;
}

uint64_t _s4ItemC16BoardAccessStateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100B35D20 + 4 * byte_100F27B4F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100B35D54 + 4 * byte_100F27B4A[v4]))();
}

uint64_t sub_100B35D54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B35D5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B35D64);
  return result;
}

uint64_t sub_100B35D70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B35D78);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100B35D7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B35D84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4ItemC16BoardAccessStateOMa()
{
  return &_s4ItemC16BoardAccessStateON;
}

unint64_t sub_100B35DA4()
{
  unint64_t result;

  result = qword_1014062F0;
  if (!qword_1014062F0)
  {
    result = swift_getWitnessTable(&unk_100F27CC4, &_s4ItemC16BoardAccessStateON);
    atomic_store(result, (unint64_t *)&qword_1014062F0);
  }
  return result;
}

unint64_t sub_100B35DEC()
{
  unint64_t result;

  result = qword_1014062F8;
  if (!qword_1014062F8)
  {
    result = swift_getWitnessTable(&unk_100F27D2C, &_s4ItemC14ViewControllerC14FavoriteButtonC4SizeON);
    atomic_store(result, &qword_1014062F8);
  }
  return result;
}

uint64_t sub_100B35E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10057B540(v3, a1);
}

void sub_100B35E80(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v2)
  {
    v3 = objc_retain(*(id *)(v2
                           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView));
    objc_msgSend(v3, "setImage:", a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B35EE8@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_100B30DA8((uint64_t)v3);
  return sub_10057B588((uint64_t)v3, a1);
}

uint64_t sub_100B35F24()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x228))();
}

uint64_t sub_100B35F40(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
}

uint64_t sub_100B35F50(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
}

uint64_t sub_100B35F5C(uint64_t a1, uint64_t a2)
{
  return sub_1006EFFD4(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
}

void sub_100B35F68()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v1)
    (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x160))();
  else
    __break(1u);
}

uint64_t sub_100B35FB4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState);
}

id sub_100B35FC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = _s8GridItemCMa(0);
  return objc_msgSend(v0, "isKindOfClass:", swift_getObjCClassFromMetadata(v1, v2));
}

id sub_100B35FF4(uint64_t a1, void *a2)
{
  return sub_100B3601C(a2);
}

void sub_100B35FFC()
{
  sub_100B32AB8();
}

id sub_100B3601C(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *((_QWORD *)v3 + 1);
    ObjectType = swift_getObjectType(Strong);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 408))(ObjectType, v6) & 1) != 0)
    {
      if (objc_msgSend((id)objc_opt_self(CRLAccessibility), "isIncreaseContrastEnabled"))
      {
        v8 = objc_msgSend(v2, "traitCollection");
        v9 = objc_msgSend(v8, "userInterfaceStyle");

        if (v9 == (id)2)
        {
          v10 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
          v11 = (void *)UITraitCollection.modifyingTraits(_:)(sub_1004C70CC, 0);

          v12 = objc_msgSend(a1, "resolvedColorWithTraitCollection:", v11);
          swift_unknownObjectRelease(v5);

          return v12;
        }
      }
    }
    swift_unknownObjectRelease(v5);
  }
  return a1;
}

void sub_100B36164()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;

  v1 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = 0;
  v3 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName];
  *v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = 1;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = 0;
  v8 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 68, 0);
  __break(1u);
}

void sub_100B362A0()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  id v18;
  NSString v19;

  v1 = &v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView;
  v3 = (objc_class *)type metadata accessor for CRLShadowView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC18ThumbnailImageViewCMa()), "init");
  v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(v3), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa()), "init");
  v9 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = 0;
  v10 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa()), "init");
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode] = 0;
  v11 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel;
  v12 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v13, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v0[v11] = v12;
  v14 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel;
  v15 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setText:", v16, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v0[v14] = v15;
  v17 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel;
  v18 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_bridgeObjectRetain(unk_1014060F0);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v19, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v0[v17] = v18;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 656, 0);
  __break(1u);
}

void sub_100B365FC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = &v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = 0;
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] = 0;
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 1014, 0);
  __break(1u);
}

void sub_100B36700()
{
  _BYTE *v0;
  NSString v1;
  id v2;
  NSString v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = 0;
  v1 = String._bridgeToObjectiveC()();
  v2 = (id)objc_opt_self(UIImage);
  v3 = objc_msgSend(v2, "systemImageNamed:", v1);

  if (!v3)
    __break(1u);
  v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage;
  if (qword_1013DDB60 != -1)
    goto LABEL_6;
  while (1)
  {
    v5 = objc_msgSend(v3, "imageWithTintColor:", qword_1014060B0);

    *(_QWORD *)&v0[v4] = v5;
    v3 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend(v2, "systemImageNamed:", v3);

    if (v2)
      break;
    __break(1u);
LABEL_6:
    swift_once(&qword_1013DDB60, sub_100B33014);
  }
  v6 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage;
  v7 = objc_msgSend(v2, "imageWithTintColor:", qword_1014060B0);

  *(_QWORD *)&v0[v6] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLFolderViewController-Item.swift", 43, 2, 1139, 0);
  __break(1u);
}

uint64_t sub_100B368B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100B368DC(uint64_t a1)
{
  uint64_t v1;

  sub_100B3209C(a1, v1);
}

double sub_100B368E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100B368F4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100B368FC()
{
  return sub_1006F0278(40);
}

uint64_t sub_100B36904(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_101406304);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100B3553C(a1, v4, v5, v6);
}

uint64_t sub_100B36970()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100B369A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

BOOL sub_100B369C8(uint64_t a1)
{
  uint64_t v1;

  return sub_100B350EC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100B369D4()
{
  return sub_1006F0278(41);
}

uint64_t sub_100B369DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_101406314);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100B35210(a1, v4, v5, v6, v7);
}

uint64_t destroy for CRLLayerImplicitPropertyTransition(uint64_t a1)
{
  uint64_t result;

  result = swift_unknownObjectWeakDestroy(a1);
  if (*(_QWORD *)(a1 + 32))
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 8));
  return result;
}

uint64_t initializeWithCopy for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;

  v4 = (_OWORD *)(swift_unknownObjectWeakCopyInit(a1, a2) + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  if (v6)
  {
    *(_QWORD *)(a1 + 32) = v6;
    (**(void (***)(_OWORD *, _OWORD *))(v6 - 8))(v4, v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 24);
    *v4 = *v5;
    v4[1] = v7;
  }
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2);
  v5 = (_OWORD *)(v4 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(v4 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v4 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v7;
    goto LABEL_8;
  }
  if (!v6)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v4 + 8));
    goto LABEL_7;
  }
  sub_10071E968((uint64_t *)(v4 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  result = *(__n128 *)(a2 + 24);
  *(__n128 *)(v3 + 24) = result;
  *(_BYTE *)(v3 + 40) = *(_BYTE *)(a2 + 40);
  return result;
}

uint64_t assignWithTake for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  v5 = (_OWORD *)(v4 + 8);
  if (*(_QWORD *)(v4 + 32))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v4 + 8));
  v6 = *(_OWORD *)(a2 + 24);
  *v5 = *(_OWORD *)(a2 + 8);
  v5[1] = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerImplicitPropertyTransition(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerImplicitPropertyTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerImplicitPropertyTransition()
{
  return &type metadata for CRLLayerImplicitPropertyTransition;
}

uint64_t sub_100B36CE8@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  NSString v7;
  double v8;
  id v9;
  id v10;
  _OWORD v12[2];

  v3 = v2;
  v6 = objc_msgSend(v2, "presentationLayer");
  sub_1008A4EC8(a1);
  v7 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v6)
  {
    v10 = objc_msgSend(v3, "valueForKey:", v7, v8);

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)(v12, v10);
      swift_unknownObjectRelease(v10);
      return sub_1004D28A4((uint64_t)v12, a2);
    }
LABEL_7:
    memset(v12, 0, sizeof(v12));
    return sub_1004D28A4((uint64_t)v12, a2);
  }
  v9 = objc_msgSend(v6, "valueForKey:", v7, v8);

  if (!v9)
  {

    goto LABEL_7;
  }
  _bridgeAnyObjectToAny(_:)(v12, v9);

  swift_unknownObjectRelease(v9);
  return sub_1004D28A4((uint64_t)v12, a2);
}

void sub_100B36DF4()
{
  __asm { BR              X10 }
}

uint64_t sub_100B36E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1004F370C(v1 + 8, v0);
  *(_BYTE *)(v0 + 256) = 1;
  return result;
}

double sub_100B378E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  __int128 v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[32];
  _OWORD v18[2];

  v2 = v1;
  v4 = *(_BYTE *)(v1 + 40);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100B36CE8(v4, (uint64_t)v18);

  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_1004F370C(v2 + 8, (uint64_t)v17);
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  LOBYTE(v15) = v4;
  *((_QWORD *)&v15 + 1) = sub_1008A4EC8(v4);
  v16 = v7;
  sub_10056B738((uint64_t)v18, (uint64_t)&v11);
  sub_10056B738((uint64_t)v17, (uint64_t)&v13);
  v8 = v14;
  *(_OWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 80) = v16;
  result = *(double *)&v11;
  v10 = v12;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v10;
  return result;
}

unint64_t sub_100B379B4(uint64_t a1)
{
  unint64_t result;

  result = sub_100B379D8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100B379D8()
{
  unint64_t result;

  result = qword_101406320;
  if (!qword_101406320)
  {
    result = swift_getWitnessTable(&unk_100F27DD4, &type metadata for CRLLayerImplicitPropertyTransition);
    atomic_store(result, (unint64_t *)&qword_101406320);
  }
  return result;
}

BOOL sub_100B37A1C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  void *Strong;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  id v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[8];
  uint64_t v23;
  _BYTE v24[48];
  _BYTE v25[48];

  v4 = *(_BYTE *)(a2 + 40);
  v5 = sub_1008A4EC8(*(_BYTE *)(a1 + 40));
  v7 = v6;
  v8 = sub_1008A4EC8(v4);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
    sub_100B37C28(a1, (uint64_t)v25);
    sub_100B37C28(a2, (uint64_t)v24);
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100B37C28(a1, (uint64_t)v25);
    sub_100B37C28(a2, (uint64_t)v24);
    if ((v11 & 1) == 0)
    {
      sub_100B37C5C((uint64_t)v24);
      sub_100B37C5C((uint64_t)v25);
LABEL_15:
      sub_100B37C28(a1, (uint64_t)v22);
      sub_100B37C28(a2, (uint64_t)&v20);
      goto LABEL_16;
    }
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v25);
  v13 = swift_unknownObjectWeakLoadStrong(v24);
  v14 = (void *)v13;
  if (!Strong)
  {
    sub_100B37C5C((uint64_t)v24);
    sub_100B37C5C((uint64_t)v25);
    if (v14)
    {

      goto LABEL_15;
    }
    sub_100B37C28(a1, (uint64_t)v22);
    sub_100B37C28(a2, (uint64_t)&v20);
LABEL_18:
    v18 = sub_1008A7434((uint64_t)&v23, (uint64_t)&v21);
    goto LABEL_19;
  }
  if (!v13)
  {
    v17 = Strong;
    sub_100B37C5C((uint64_t)v24);
    sub_100B37C5C((uint64_t)v25);

    goto LABEL_15;
  }
  sub_1004EB280();
  v15 = Strong;
  v16 = static NSObject.== infix(_:_:)(v15, v14);
  sub_100B37C5C((uint64_t)v24);
  sub_100B37C5C((uint64_t)v25);

  sub_100B37C28(a1, (uint64_t)v22);
  sub_100B37C28(a2, (uint64_t)&v20);
  if ((v16 & 1) != 0)
    goto LABEL_18;
LABEL_16:
  v18 = 0;
LABEL_19:
  sub_100B37C5C((uint64_t)&v20);
  sub_100B37C5C((uint64_t)v22);
  return v18;
}

uint64_t sub_100B37C28(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLLayerImplicitPropertyTransition(a2, a1);
  return a2;
}

uint64_t sub_100B37C5C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  if (*(_QWORD *)(a1 + 32))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 8));
  return a1;
}

void sub_100B37C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  CKRecordZoneID v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  NSString *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v2 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v41 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - v9;
  v47 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a1 + 56);
  v38 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v40 = CKCurrentUserDefaultName;
  v43 = a1;
  swift_bridgeObjectRetain(a1);
  v15 = 0;
  v42 = v2;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    sub_1004B8460(*(_QWORD *)(v43 + 48) + *(_QWORD *)(v41 + 72) * i, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v10, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v4, v7, v2);
    v21 = (uint64_t *)&v7[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v22 = *v21;
    v23 = (void *)v21[1];
    if (*v21)
      v24 = 0;
    else
      v24 = v23 == (void *)0xE000000000000000;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0, 0xE000000000000000, 0) & 1) != 0)
    {
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v22 = v25;
      v23 = v26;
    }
    else
    {
      swift_bridgeObjectRetain(v23);
    }
    v45 = 0x5F6472616F42;
    v46 = 0xE600000000000000;
    v27._countAndFlagsBits = UUID.uuidString.getter(v25);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28 = v45;
    v29 = (void *)v46;
    sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v30._countAndFlagsBits = v28;
    v30._object = v29;
    v31._countAndFlagsBits = v22;
    v31._object = v23;
    v32.super.isa = CKRecordZoneID.init(zoneName:ownerName:)(v30, v31).super.isa;
    v2 = v42;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v4, v42);
    v33 = sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
    v35 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v34 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v34 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
    v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32.super.isa);
    specialized Array._endMutation()(v36);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v39)
      goto LABEL_32;
    v19 = *(_QWORD *)(v38 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v39)
        goto LABEL_32;
      v19 = *(_QWORD *)(v38 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v39)
          goto LABEL_32;
        v19 = *(_QWORD *)(v38 + 8 * v15);
        if (!v19)
        {
          v15 = v18 + 3;
          if (v18 + 3 >= v39)
            goto LABEL_32;
          v19 = *(_QWORD *)(v38 + 8 * v15);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v14 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v39)
  {
LABEL_32:
    swift_release(v43);
    return;
  }
  v19 = *(_QWORD *)(v38 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v39)
      goto LABEL_32;
    v19 = *(_QWORD *)(v38 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_100B38068@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  sub_100B466B8((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_1013E1A50);
    v13 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = objc_msgSend(v1, "ownerName");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  v21 = v19;
  if (v16 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease_n(v18, 2);
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);
    swift_bridgeObjectRelease(v18);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
    if ((v22 & 1) == 0)
    {
      v26 = objc_msgSend(v1, "ownerName", v23);
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v25 = v27;

      goto LABEL_9;
    }
  }
  v24 = 0;
  v25 = 0xE000000000000000;
LABEL_9:
  sub_10067AFD0((uint64_t)v10, v24, v25, a1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v28 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 0, 1, v28);
}

uint64_t sub_100B382BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t inited;
  Swift::String v28;
  __int128 v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v42;
  uint64_t v43;
  double v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[72];
  __int128 v56;
  __int128 v57;

  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101406518);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLAssetSyncMetadata(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v54 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  *(_QWORD *)&v56 = a1;
  *((_QWORD *)&v56 + 1) = a2;
  swift_bridgeObjectRetain(a2);
  v16._countAndFlagsBits = 0x7465737341;
  v16._object = (void *)0xE500000000000000;
  String.append(_:)(v16);
  v17 = *((_QWORD *)&v56 + 1);
  v18 = CKRecord.subscript.getter(v56);
  swift_bridgeObjectRelease(v17);
  if (v18)
  {
    v19 = objc_opt_self(CKAsset);
    v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
    if (!v20)
    {
      swift_unknownObjectRelease(v18);
      return 0;
    }
    v50 = v20;
    v51 = v6;
    v52 = v18;
    v53 = a1;
    *(_QWORD *)&v57 = a1;
    *((_QWORD *)&v57 + 1) = a2;
    swift_bridgeObjectRetain_n(a2, 2);
    v21._countAndFlagsBits = 0x74654D7465737341;
    v21._object = (void *)0xED00006174616461;
    String.append(_:)(v21);
    v22 = v57;
    sub_100B39450(v57, *((uint64_t *)&v57 + 1), 0, &v57);
    v23 = *((_QWORD *)&v57 + 1);
    if (*((_QWORD *)&v57 + 1) >> 60 == 15)
    {
      sub_100B389CC(v22, *((uint64_t *)&v22 + 1), &v56);
      swift_bridgeObjectRelease(*((_QWORD *)&v22 + 1));
      v23 = *((_QWORD *)&v56 + 1);
      if (*((_QWORD *)&v56 + 1) >> 60 == 15)
      {
        v24 = v53;
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, &v56, 0, 0);
        v25 = (void *)static OS_os_log.dataSync;
        v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v26, v55);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)&v57 = v24;
        *((_QWORD *)&v57 + 1) = a2;
        swift_bridgeObjectRetain(a2);
        v28._countAndFlagsBits = 0x74654D7465737341;
        v28._object = (void *)0xED00006174616461;
        String.append(_:)(v28);
        v29 = v57;
        v30 = v25;
        swift_bridgeObjectRelease(a2);
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v31 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v31;
        *(_OWORD *)(inited + 32) = v29;
        v32 = static os_log_type_t.error.getter(v31);
        sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "Ignoring an asset without a corresponding metadata field. Expected field that is missing: %@", 92, 2, inited);
        swift_setDeallocating(inited);
        v33 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v33);
        swift_unknownObjectRelease(v52);

        return 0;
      }
      v34 = v56;
    }
    else
    {
      v34 = v57;
      swift_bridgeObjectRelease(*((_QWORD *)&v22 + 1));
    }
    v35 = v53;
    v36 = type metadata accessor for PropertyListDecoder(0);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    v37 = PropertyListDecoder.init()();
    v38 = sub_1004B7878(&qword_1014064A8, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC90);
    v53 = v34;
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v10, v34, v23, v10, v38, v39);
    v40 = (uint64_t)v51;
    v42 = swift_release(v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v11 + 56))(v9, 0, 1, v10, v42);
    swift_bridgeObjectRelease(a2);
    sub_1004B84E0((uint64_t)v9, (uint64_t)v15, type metadata accessor for CRLAssetSyncMetadata);
    v43 = v54;
    sub_1004B8460((uint64_t)v15, v54, type metadata accessor for CRLAssetSyncMetadata);
    *(_QWORD *)&v44 = swift_bridgeObjectRetain(a2).n128_u64[0];
    v45 = objc_msgSend(v50, "fileURL", v44);
    if (v45)
    {
      v46 = v45;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v45);
      sub_1004BE2FC(v53, v23);

      swift_unknownObjectRelease(v52);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLAssetSyncMetadata);
      v47 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v40, 0, 1, v47);
    }
    else
    {
      sub_1004BE2FC(v53, v23);
      swift_unknownObjectRelease(v52);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLAssetSyncMetadata);
      v48 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v40, 1, 1, v48);
    }
    v49 = type metadata accessor for CRLAssetSyncRemoteRecord(0);
    v18 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
    *(_QWORD *)(v18 + 16) = v35;
    *(_QWORD *)(v18 + 24) = a2;
    sub_1004B84E0(v43, v18 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, type metadata accessor for CRLAssetSyncMetadata);
    sub_1004C4938(v40, v18 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, &qword_1013E04D0);
  }
  return v18;
}

void sub_100B389CC(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  uint64_t ObjectType;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[152];
  __int128 v23;
  uint64_t v24;

  v6 = CKRecord.subscript.getter(a1);
  if (!v6)
  {
LABEL_7:
    v9 = xmmword_100F062D0;
    goto LABEL_8;
  }
  v7 = v6;
  v24 = v6;
  swift_unknownObjectRetain(v6);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0510);
  if ((swift_dynamicCast(&v23, &v24, v8, &type metadata for Data, 6) & 1) == 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v23, 0, 0);
    v10 = (void *)static OS_os_log.dataSync;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v11, v22);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v13 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v13;
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 72) = 1635017028;
    *(_QWORD *)(inited + 80) = 0xE400000000000000;
    ObjectType = swift_getObjectType(v7);
    v15 = v10;
    swift_bridgeObjectRetain(a2);
    v16 = _typeName(_:qualified:)(ObjectType, 0);
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v13;
    *(_QWORD *)(inited + 112) = v16;
    *(_QWORD *)(inited + 120) = v17;
    v18 = static os_log_type_t.error.getter(v16);
    sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v18, "Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v19);

    swift_bridgeObjectRetain(a2);
    _typeName(_:qualified:)(ObjectType, 0);
    v21 = v20;
    swift_bridgeObjectRelease(a2);
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v21);
    goto LABEL_7;
  }
  swift_unknownObjectRelease(v7);
  v9 = v23;
LABEL_8:
  *a3 = v9;
}

uint64_t sub_100B38BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  uint64_t ObjectType;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BYTE v23[152];
  uint64_t v24;
  char v25;
  uint64_t v26;

  result = CKRecord.subscript.getter(a1);
  if (result)
  {
    v11 = result;
    v26 = result;
    swift_unknownObjectRetain(result);
    v12 = sub_1004B804C((uint64_t *)&unk_1013E0510);
    if (swift_dynamicCast(&v24, &v26, v12, a3, 6))
    {
      v25 = 0;
      swift_unknownObjectRelease(v11);
      return v24;
    }
    else
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v24, 0, 0);
      v22 = (void *)static OS_os_log.dataSync;
      v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v13, v23);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v15 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v15;
      *(_QWORD *)(inited + 64) = v15;
      *(_QWORD *)(inited + 72) = a4;
      *(_QWORD *)(inited + 80) = a5;
      ObjectType = swift_getObjectType(v11);
      v17 = v22;
      swift_bridgeObjectRetain(a2);
      v18 = _typeName(_:qualified:)(ObjectType, 0);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v15;
      *(_QWORD *)(inited + 112) = v18;
      *(_QWORD *)(inited + 120) = v19;
      v20 = static os_log_type_t.error.getter(v18);
      sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v20, "Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
      swift_setDeallocating(inited);
      v21 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v21);

      swift_bridgeObjectRetain(a2);
      _typeName(_:qualified:)(ObjectType, 0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v11);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B38DD0(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v7 = sub_1004B8930(0, a3, a4);
  result = CKRecord.subscript.getter(a1);
  if (result)
  {
    v9 = result;
    v10 = objc_opt_self(*a4);
    result = swift_dynamicCastObjCClass(v9, v10);
    if (!result)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v24, 0, 0);
      v11 = (void *)static OS_os_log.dataSync;
      v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v12, &v23);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v14 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v14;
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      v15 = v11;
      swift_bridgeObjectRetain(a2);
      v16 = _typeName(_:qualified:)(v7, 0);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v14;
      *(_QWORD *)(inited + 72) = v16;
      *(_QWORD *)(inited + 80) = v17;
      ObjectType = swift_getObjectType(v9);
      v19 = _typeName(_:qualified:)(ObjectType, 0);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v14;
      *(_QWORD *)(inited + 112) = v19;
      *(_QWORD *)(inited + 120) = v20;
      v21 = static os_log_type_t.error.getter(v19);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v21, "Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
      swift_setDeallocating(inited);
      v22 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v22);

      swift_bridgeObjectRetain(a2);
      _typeName(_:qualified:)(v7, 0);
      _typeName(_:qualified:)(ObjectType, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v9);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B38FCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  Swift::String v5;
  Swift::String v6;

  if (a1 == 0x6472616F42 && a2 == 0xE500000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F42, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    return 1;
  }
  if (a1 == 0x74654D6472616F42 && a2 == 0xED00006174616461
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x74654D6472616F42, 0xED00006174616461, a1, a2, 0) & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100FAA8E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FAA8E0, a1, a2, 0) & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0x74696B64756F6C63 && a2 == 0xEE0065726168732ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x74696B64756F6C63, 0xEE0065726168732ELL, a1, a2, 0) & 1) != 0)
  {
    return 7;
  }
  v5._countAndFlagsBits = 0x6574496472616F42;
  v5._object = (void *)0xEA00000000005F6DLL;
  if (String.hasPrefix(_:)(v5))
    return 0;
  if (a1 == 0x425F63696C627550 && a2 == 0xEC0000006472616FLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x425F63696C627550, 0xEC0000006472616FLL, a1, a2, 0) & 1) != 0)
  {
    return 4;
  }
  v6._countAndFlagsBits = 0xD000000000000011;
  v6._object = (void *)0x8000000100FF82C0;
  if (String.hasPrefix(_:)(v6))
    return 5;
  result = 6;
  if (a1 != 0xD00000000000001CLL || a2 != 0x8000000100FAA930)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100FAA930, a1, a2, 0) & 1) != 0)
      return 6;
    else
      return 8;
  }
  return result;
}

uint64_t sub_100B39284()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __n128 v6;
  id v8;

  v8 = 0;
  v1 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", v0, 1, &v8);
  v2 = v8;
  if (v1)
  {
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);

  }
  else
  {
    v4 = v2;
    v5 = _convertNSErrorToError(_:)(v2);

    swift_willThrow(v6);
    swift_errorRelease(v5);
    return 0;
  }
  return v3;
}

CKRecordID sub_100B39360()
{
  uint64_t v0;
  Class v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;

  v1 = sub_100B4AD90(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v3 = qword_101406330;
  v2 = off_101406338;
  swift_bridgeObjectRetain(off_101406338);
  v4 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v6 = v5;
  swift_bridgeObjectRetain(v2);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v3;
  v8._object = v2;
  return CKRecordID.init(recordName:zoneID:)(v8, (CKRecordZoneID)v1);
}

void sub_100B39450(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, __int128 *a4@<X8>)
{
  void *v4;
  void *v5;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  uint64_t ObjectType;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[152];
  __int128 v28;
  id v29;

  v5 = v4;
  v10 = objc_msgSend(v5, "encryptedValues");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "objectForKeyedSubscript:", v11);

  swift_unknownObjectRelease(v10);
  if (!v12)
  {
LABEL_9:
    v14 = xmmword_100F062D0;
    goto LABEL_10;
  }
  v29 = v12;
  swift_unknownObjectRetain(v12);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E0510);
  if ((swift_dynamicCast(&v28, &v29, v13, &type metadata for Data, 6) & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v28, 0, 0);
      v15 = (void *)static OS_os_log.dataSync;
      v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v16, v27);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v18 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v18;
      *(_QWORD *)(inited + 64) = v18;
      *(_QWORD *)(inited + 72) = 1635017028;
      *(_QWORD *)(inited + 80) = 0xE400000000000000;
      ObjectType = swift_getObjectType(v12);
      v20 = v15;
      swift_bridgeObjectRetain(a2);
      v21 = _typeName(_:qualified:)(ObjectType, 0);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v18;
      *(_QWORD *)(inited + 112) = v21;
      *(_QWORD *)(inited + 120) = v22;
      v23 = static os_log_type_t.error.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v23, "Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating(inited);
      v24 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v24);

      swift_bridgeObjectRetain(a2);
      _typeName(_:qualified:)(ObjectType, 0);
      v26 = v25;
      swift_bridgeObjectRelease(a2);
      swift_unknownObjectRelease(v12);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      swift_unknownObjectRelease(v12);
    }
    goto LABEL_9;
  }
  swift_unknownObjectRelease(v12);
  v14 = v28;
LABEL_10:
  *a4 = v14;
}

uint64_t sub_100B396BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  unint64_t v21;
  uint64_t ObjectType;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31[2];

  v13 = objc_msgSend(v6, "encryptedValues");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "objectForKeyedSubscript:", v14);

  swift_unknownObjectRelease(v13);
  if (v15)
  {
    v31[0] = v15;
    swift_unknownObjectRetain(v15);
    v16 = sub_1004B804C((uint64_t *)&unk_1013E0510);
    if (swift_dynamicCast(&v29, v31, v16, a4, 6))
    {
      v30 = 0;
      swift_unknownObjectRelease(v15);
      return v29;
    }
    if ((a3 & 1) != 0)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v29, 0, 0);
      v18 = (void *)static OS_os_log.dataSync;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, &v28);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v21 = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v21;
      *(_QWORD *)(inited + 64) = v21;
      *(_QWORD *)(inited + 72) = a5;
      *(_QWORD *)(inited + 80) = a6;
      ObjectType = swift_getObjectType(v15);
      v23 = v18;
      swift_bridgeObjectRetain(a2);
      v24 = _typeName(_:qualified:)(ObjectType, 0);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v21;
      *(_QWORD *)(inited + 112) = v24;
      *(_QWORD *)(inited + 120) = v25;
      v26 = static os_log_type_t.error.getter(v24);
      sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v26, "Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating(inited);
      v27 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v27);

      swift_bridgeObjectRetain(a2);
      _typeName(_:qualified:)(ObjectType, 0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease(v15);
    }
  }
  return 0;
}

uint64_t sub_100B39920(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v4 = v3;
  v8 = sub_1004B8930(0, (unint64_t *)&unk_1014064E0, CKMergeableRecordValue_ptr);
  v9 = objc_msgSend(v4, "encryptedValues");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "objectForKeyedSubscript:", v10);

  swift_unknownObjectRelease(v9);
  if (v11)
  {
    v12 = objc_opt_self(CKMergeableRecordValue);
    result = swift_dynamicCastObjCClass(v11, v12);
    if (result)
      return result;
    if ((a3 & 1) != 0)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v27, 0, 0);
      v14 = (void *)static OS_os_log.dataSync;
      v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v15, &v26);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v17 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v17;
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      v18 = v14;
      swift_bridgeObjectRetain(a2);
      v19 = _typeName(_:qualified:)(v8, 0);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v17;
      *(_QWORD *)(inited + 72) = v19;
      *(_QWORD *)(inited + 80) = v20;
      ObjectType = swift_getObjectType(v11);
      v22 = _typeName(_:qualified:)(ObjectType, 0);
      *(_QWORD *)(inited + 136) = &type metadata for String;
      *(_QWORD *)(inited + 144) = v17;
      *(_QWORD *)(inited + 112) = v22;
      *(_QWORD *)(inited + 120) = v23;
      v24 = static os_log_type_t.error.getter(v22);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v24, "Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating(inited);
      v25 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 3, v25);

      swift_bridgeObjectRetain(a2);
      _typeName(_:qualified:)(v8, 0);
      _typeName(_:qualified:)(ObjectType, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease(v11);
    }
  }
  return 0;
}

void sub_100B39B84(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147[72];
  _BYTE v148[32];

  v142 = a1;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v135 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v136 = *(_QWORD *)(v9 - 8);
  v137 = v9;
  __chkstk_darwin(v9);
  v132 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v133 = (char *)&v132 - v12;
  v13 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v13);
  v15 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v132 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v132 - v20;
  v22 = type metadata accessor for CRLBoardIdentifier(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v134 = (uint64_t)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v138 = (uint64_t)&v132 - v26;
  __chkstk_darwin(v27);
  v139 = (uint64_t)&v132 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v132 - v30;
  v140 = a2;
  v141 = a3;
  switch(sub_100B38FCC(a2, a3))
  {
    case 0u:
      v134 = a4;
      v32 = v142;
      v33 = objc_msgSend(v142, "zoneID");
      sub_100B38068((uint64_t)v18);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22) == 1)
      {
        sub_1004CB800((uint64_t)v18, &qword_1013E0270);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v148, 0, 0);
        v34 = (void *)static OS_os_log.dataSync;
        v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v35, &v145);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        v37 = v34;
        v38 = objc_msgSend(v32, "recordName");
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v41 = v40;

        *(_QWORD *)(inited + 56) = &type metadata for String;
        v42 = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v39;
        *(_QWORD *)(inited + 40) = v41;
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v42;
        v43 = v140;
        *(_QWORD *)(inited + 64) = v42;
        *(_QWORD *)(inited + 72) = v43;
        v44 = v141;
        *(_QWORD *)(inited + 80) = v141;
        swift_bridgeObjectRetain(v44);
        v46 = static os_log_type_t.error.getter(v45);
        sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v46, "Cannot extract boardIdentifier from the recordID %{public}@. Record Type: %{public}@", 84, 2, inited);
        swift_setDeallocating(inited);
        v47 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v47);

        v48 = (_OWORD *)v134;
        *(_QWORD *)(v134 + 32) = 0;
        *v48 = 0u;
        v48[1] = 0u;
      }
      else
      {
        v90 = (uint64_t)v18;
        v91 = v138;
        sub_1004B84E0(v90, v138, type metadata accessor for CRLBoardIdentifier);
        v92 = objc_msgSend(v32, "recordName");
        v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
        v95 = v94;

        v96 = (uint64_t)v135;
        UUID.init(uuidString:)(v93, v95, v97);
        v98 = swift_bridgeObjectRelease();
        v100 = v136;
        v99 = v137;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v136 + 48))(v96, 1, v137, v98) != 1)
        {
          v124 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 32);
          v125 = v91;
          v126 = v133;
          v124(v133, v96, v99);
          v127 = v132;
          (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v132, v126, v99);
          v128 = v139;
          sub_1004B8460(v125, v139, type metadata accessor for CRLBoardIdentifier);
          v129 = type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(0);
          v130 = swift_allocObject(v129, *(unsigned int *)(v129 + 48), *(unsigned __int16 *)(v129 + 52));
          v124((char *)(v130 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_itemUUID), (uint64_t)v127, v99);
          sub_1004B84E0(v128, v130 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
          v131 = (uint64_t *)v134;
          *(_QWORD *)(v134 + 24) = v129;
          v131[4] = (uint64_t)&off_10129E2F8;
          *v131 = v130;
          (*(void (**)(char *, uint64_t))(v100 + 8))(v126, v99);
          v119 = v125;
          goto LABEL_26;
        }
        sub_1004CB800(v96, (uint64_t *)&unk_1013E1A50);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v148, 0, 0);
        v101 = (void *)static OS_os_log.dataSync;
        v102 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v103 = swift_initStackObject(v102, &v144);
        *(_OWORD *)(v103 + 16) = xmmword_100EF5A10;
        v104 = v101;
        v105 = objc_msgSend(v32, "recordName");
        v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
        v108 = v107;

        *(_QWORD *)(v103 + 56) = &type metadata for String;
        v109 = sub_1004CFC2C();
        *(_QWORD *)(v103 + 32) = v106;
        *(_QWORD *)(v103 + 40) = v108;
        *(_QWORD *)(v103 + 96) = &type metadata for String;
        *(_QWORD *)(v103 + 104) = v109;
        v110 = v140;
        *(_QWORD *)(v103 + 64) = v109;
        *(_QWORD *)(v103 + 72) = v110;
        v111 = v141;
        *(_QWORD *)(v103 + 80) = v141;
        swift_bridgeObjectRetain(v111);
        v113 = static os_log_type_t.error.getter(v112);
        sub_100A06EBC((uint64_t)v104, &_mh_execute_header, v113, "Cannot extract itemUUID from the recordID %{public}@. Record Type: %{public}@", 77, 2, v103);
        swift_setDeallocating(v103);
        v114 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v103 + 32, 2, v114);

        sub_1004B84A4(v91, type metadata accessor for CRLBoardIdentifier);
        v115 = v134;
        *(_OWORD *)v134 = 0u;
        *(_OWORD *)(v115 + 16) = 0u;
        *(_QWORD *)(v115 + 32) = 0;
      }
      break;
    case 1u:
      v49 = a4;
      v50 = v142;
      v51 = objc_msgSend(v142, "zoneID");
      sub_100B38068((uint64_t)v21);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
      {
        sub_1004B84E0((uint64_t)v21, (uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
        v116 = v139;
        sub_1004B8460((uint64_t)v31, v139, type metadata accessor for CRLBoardIdentifier);
        v117 = type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
        v118 = swift_allocObject(v117, *(unsigned int *)(v117 + 48), *(unsigned __int16 *)(v117 + 52));
        sub_1004B84E0(v116, v118 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        *(_QWORD *)(v49 + 24) = v117;
        *(_QWORD *)(v49 + 32) = &off_1012A5990;
        *(_QWORD *)v49 = v118;
        v119 = (uint64_t)v31;
        goto LABEL_26;
      }
      sub_1004CB800((uint64_t)v21, &qword_1013E0270);
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v148, 0, 0);
      v52 = (void *)static OS_os_log.dataSync;
      v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v54 = swift_initStackObject(v53, &v143);
      *(_OWORD *)(v54 + 16) = xmmword_100EF5A10;
      v55 = v52;
      v56 = objc_msgSend(v50, "recordName");
      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

      *(_QWORD *)(v54 + 56) = &type metadata for String;
      v60 = sub_1004CFC2C();
      *(_QWORD *)(v54 + 32) = v57;
      v61 = v54 + 32;
      *(_QWORD *)(v54 + 40) = v59;
      *(_QWORD *)(v54 + 96) = &type metadata for String;
      *(_QWORD *)(v54 + 104) = v60;
      v62 = v140;
      *(_QWORD *)(v54 + 64) = v60;
      *(_QWORD *)(v54 + 72) = v62;
      v63 = v141;
      *(_QWORD *)(v54 + 80) = v141;
      swift_bridgeObjectRetain(v63);
      v65 = static os_log_type_t.error.getter(v64);
      v66 = "Cannot extract boardIdentifier from the recordID %{public}@. Record Type: %{public}@";
      v67 = (uint64_t)v55;
      v68 = 84;
      goto LABEL_18;
    case 2u:
    case 3u:
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      break;
    case 7u:
      v49 = a4;
      v77 = v142;
      v78 = objc_msgSend(v142, "zoneID");
      sub_100B38068((uint64_t)v15);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
      {
        sub_1004CB800((uint64_t)v15, &qword_1013E0270);
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, v148, 0, 0);
        v79 = (void *)static OS_os_log.dataSync;
        v80 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v54 = swift_initStackObject(v80, &v146);
        *(_OWORD *)(v54 + 16) = xmmword_100EF5A10;
        v55 = v79;
        v81 = objc_msgSend(v77, "recordName");
        v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
        v84 = v83;

        *(_QWORD *)(v54 + 56) = &type metadata for String;
        v85 = sub_1004CFC2C();
        *(_QWORD *)(v54 + 32) = v82;
        v61 = v54 + 32;
        *(_QWORD *)(v54 + 40) = v84;
        *(_QWORD *)(v54 + 96) = &type metadata for String;
        *(_QWORD *)(v54 + 104) = v85;
        v86 = v140;
        *(_QWORD *)(v54 + 64) = v85;
        *(_QWORD *)(v54 + 72) = v86;
        v87 = v141;
        *(_QWORD *)(v54 + 80) = v141;
        swift_bridgeObjectRetain(v87);
        v65 = static os_log_type_t.error.getter(v88);
        v66 = "Cannot extract board identifier from the recordID %{public}@. Record Type: %{public}@";
        v67 = (uint64_t)v55;
        v68 = 85;
LABEL_18:
        sub_100A06EBC(v67, &_mh_execute_header, v65, v66, v68, 2, v54);
        swift_setDeallocating(v54);
        v89 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v61, 2, v89);

        *(_QWORD *)(v49 + 32) = 0;
        *(_OWORD *)v49 = 0u;
        *(_OWORD *)(v49 + 16) = 0u;
      }
      else
      {
        v120 = v134;
        sub_1004B84E0((uint64_t)v15, v134, type metadata accessor for CRLBoardIdentifier);
        v121 = v139;
        sub_1004B8460(v120, v139, type metadata accessor for CRLBoardIdentifier);
        v122 = type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(0);
        v123 = swift_allocObject(v122, *(unsigned int *)(v122 + 48), *(unsigned __int16 *)(v122 + 52));
        sub_1004B84E0(v121, v123 + OBJC_IVAR____TtC8Freeform39CRLBoardShareSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        *(_QWORD *)(v49 + 24) = v122;
        *(_QWORD *)(v49 + 32) = &off_10129ED30;
        *(_QWORD *)v49 = v123;
        v119 = v120;
LABEL_26:
        sub_1004B84A4(v119, type metadata accessor for CRLBoardIdentifier);
      }
      break;
    default:
      v69 = a4;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v148, 0, 0);
      v70 = (void *)static OS_os_log.dataSync;
      v71 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v72 = swift_initStackObject(v71, v147);
      *(_OWORD *)(v72 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v72 + 56) = &type metadata for String;
      *(_QWORD *)(v72 + 64) = sub_1004CFC2C();
      v73 = v141;
      *(_QWORD *)(v72 + 32) = v140;
      *(_QWORD *)(v72 + 40) = v73;
      swift_bridgeObjectRetain(v73);
      v74 = v70;
      v75 = static os_log_type_t.error.getter(v74);
      sub_100A06EBC((uint64_t)v74, &_mh_execute_header, v75, "CRLBoardSyncLogicProvider received an unknown remote record type for creating identifier. Record Type: %{public}@", 113, 2, v72);
      swift_setDeallocating(v72);
      v76 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v72 + 32, 1, v76);

      *(_QWORD *)(v69 + 32) = 0;
      *(_OWORD *)v69 = 0u;
      *(_OWORD *)(v69 + 16) = 0u;
      break;
  }
}

uint64_t sub_100B3A714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  uint64_t v39;
  _BYTE v41[24];

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (!v10)
  {
    v15 = type metadata accessor for CRLBoardSyncRemoteRecord(0);
    v16 = swift_dynamicCastClass(a1, v15);
    if (v16)
    {
      v17 = v16;
      v18 = type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
      v19 = swift_dynamicCastClass(a3, v18);
      swift_unknownObjectRetain(a1);
      if (v19)
      {
        swift_unknownObjectRetain(a3);
        v14 = sub_100B3BB60(v17, v19);
        swift_unknownObjectRelease(a1);
        swift_unknownObjectRelease(a3);
        return v14;
      }
    }
    else
    {
      v20 = type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
      v21 = swift_dynamicCastClass(a1, v20);
      if (v21)
      {
        v22 = v21;
        v23 = type metadata accessor for CRLBoardShareSyncLocalChangeRecord(0);
        if (swift_dynamicCastClass(a3, v23))
        {
          sub_1004B8460(v22 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
          v24 = *(void **)(v22 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
          v14 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
          *(_BYTE *)(v14 + OBJC_IVAR____TtC8Freeform34CRLBoardShareSyncLocalChangeRecord_unsyncedChanges) = 0;
          sub_1004B84E0((uint64_t)v8, v14 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
          *(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare) = v24;
          v25 = v24;
          return v14;
        }
        swift_unknownObjectRetain(a1);
        goto LABEL_18;
      }
      v26 = type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
      v27 = swift_dynamicCastClass(a1, v26);
      if (v27)
      {
        v28 = v27;
        v29 = type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
        v30 = swift_dynamicCastClass(a3, v29);
        swift_unknownObjectRetain(a1);
        if (v30)
        {
          swift_unknownObjectRetain(a3);
          v14 = sub_100B3C490(v28, v30);
          swift_unknownObjectRelease(a1);
          swift_unknownObjectRelease(a3);
          return v14;
        }
      }
      else
      {
        v32 = type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
        v33 = swift_dynamicCastClass(a1, v32);
        if (!v33)
        {
          if (qword_1013DD870 != -1)
            swift_once(&qword_1013DD870, sub_100A059E0);
          swift_beginAccess(&static OS_os_log.dataSync, v41, 0, 0);
          v38 = (id)static OS_os_log.dataSync;
          v39 = static os_log_type_t.error.getter(v38);
          sub_100A06EBC((uint64_t)v38, &_mh_execute_header, v39, "Unable to resolve conflict for unhandled record type.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_100B3AAE4(a1, a2, a3);
          return 0;
        }
        v34 = v33;
        v35 = type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
        v36 = swift_dynamicCastClass(a3, v35);
        swift_unknownObjectRetain(a1);
        if (v36)
        {
          swift_unknownObjectRetain(a3);
          v14 = sub_100B3C884(v34, v36);
          swift_unknownObjectRelease(a1);
          swift_unknownObjectRelease(a3);
          return v14;
        }
      }
    }
LABEL_17:
    v31 = a1;
LABEL_18:
    sub_100B3AAE4(v31, a2, a3);
    swift_unknownObjectRelease(a1);
    return 0;
  }
  v11 = v10;
  v12 = type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
  v13 = swift_dynamicCastClass(a3, v12);
  swift_unknownObjectRetain(a1);
  if (!v13)
    goto LABEL_17;
  swift_unknownObjectRetain(a3);
  v14 = sub_100B3B7F4(v11, v13);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  return v14;
}

double sub_100B3AAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t ObjectType;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  _BYTE v20[112];
  _BYTE v21[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v21, 0, 0);
  v5 = (void *)static OS_os_log.dataSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v20);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  ObjectType = swift_getObjectType(a1);
  v9 = v5;
  v10 = _typeName(_:qualified:)(ObjectType, 0);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = swift_getObjectType(a3);
  v15 = _typeName(_:qualified:)(v14, 0);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v17 = static os_log_type_t.error.getter(v15);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v17, "CRLBoardSyncLogicProvider received an unknown remote record object to resolve a conflict. Remote Record: %{public}@, Local Record: %{public}@", 141, 2, inited);
  swift_setDeallocating(inited);
  v18 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v18);

  _typeName(_:qualified:)(ObjectType, 0);
  _typeName(_:qualified:)(v14, 0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100B3AC84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t ObjectType;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  __int128 v17[2];
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v8 = objc_msgSend(a3, "recordID");
  ObjectType = swift_getObjectType(a1);
  v20[0] = a1;
  v10 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(ObjectType);
  v11 = static NSObject.== infix(_:_:)(v8, v10);

  if ((v11 & 1) != 0)
  {
    v19[0] = a1;
    v19[1] = a2;
    swift_unknownObjectRetain(a1);
    v12 = sub_1004B804C((uint64_t *)&unk_1013E87C0);
    v13 = sub_1004B804C(&qword_101406508);
    if (swift_dynamicCast(v17, v19, v12, v13, 6))
    {
      sub_1004DB728(v17, (uint64_t)v20);
      v14 = v21;
      v15 = v22;
      sub_1004BB5A4(v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 16))(a3, *(_QWORD *)(v4 + 16), v14, v15);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
      return result;
    }
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_1004CB800((uint64_t)v17, &qword_101406510);
  }
  return sub_100B3ADF8(a1, a2, a3);
}

double sub_100B3ADF8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t ObjectType;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  double result;
  _BYTE v36[112];
  _BYTE v37[32];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v37, 0, 0);
  v5 = (void *)static OS_os_log.dataSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  ObjectType = swift_getObjectType(a1);
  v9 = v5;
  v10 = _typeName(_:qualified:)(ObjectType, 0);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 40) = v12;
  v15._countAndFlagsBits = CKRecord.recordType.getter(v14);
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x203A444920;
  v16._object = (void *)0xE500000000000000;
  String.append(_:)(v16);
  v17 = objc_msgSend(a3, "recordID");
  v18 = objc_msgSend(v17, "recordName");

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 72) = 0x203A65707954;
  *(_QWORD *)(inited + 80) = 0xE600000000000000;
  v24 = static os_log_type_t.error.getter(v23);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v24, "CRLBoardSyncLogicProvider received an unknown local record or cloud record to apply changes. Local Record: %{public}@, Cloud Record: %{public}@", 143, 2, inited);
  swift_setDeallocating(inited);
  v25 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v25);

  _typeName(_:qualified:)(ObjectType, 0);
  v27._countAndFlagsBits = CKRecord.recordType.getter(v26);
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x203A444920;
  v28._object = (void *)0xE500000000000000;
  String.append(_:)(v28);
  v29 = objc_msgSend(a3, "recordID", 0x203A65707954, 0xE600000000000000);
  v30 = objc_msgSend(v29, "recordName");

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34._countAndFlagsBits = v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100B3B0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;
  Class isa;
  char v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v18[144];

  v2 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v9._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  v9._object = v10;
  v11._countAndFlagsBits = 0x74654D6472616F42;
  v11._object = (void *)0xED00006174616461;
  isa = CKRecordZoneID.init(zoneName:ownerName:)(v11, v9).super.isa;
  v13 = static NSObject.== infix(_:_:)(a1, isa);

  if ((v13 & 1) != 0)
    return 1;
  sub_100B38068((uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E0270);
  }
  else
  {
    v15 = sub_1004B84E0((uint64_t)v4, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    __chkstk_darwin(v15);
    *(_QWORD *)&v18[-16] = v16;
    *(_QWORD *)&v18[-8] = v8;
    OS_dispatch_queue.sync<A>(execute:)(sub_100B4EAAC, &v18[-32], &type metadata for Bool);
    v17 = v18[112];
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    if ((v17 & 1) != 0)
      return 1;
  }
  return 0;
}

Swift::Int sub_100B3B424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[20];

  v9[2] = *(_QWORD *)(v1 + 16);
  v3 = sub_1004B804C(&qword_1013E4980);
  OS_dispatch_queue.sync<A>(execute:)(sub_100B4EA94, v9, v3);
  sub_100B37C90(v9[16]);
  v5 = v4;
  swift_bridgeObjectRelease();
  sub_100AF87F4(v5);
  v7 = v6;
  swift_bridgeObjectRelease();
  return sub_100CDE63C(a1, v7);
}

uint64_t sub_100B3B5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[72];
  __int128 v22[2];
  uint64_t v23;
  _QWORD v24[2];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v24[0] = a1;
  v24[1] = a2;
  swift_unknownObjectRetain(a1);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E87C0);
  v5 = sub_1004B804C(&qword_101406508);
  if (swift_dynamicCast(v22, v24, v4, v5, 6))
  {
    sub_1004DB728(v22, (uint64_t)v25);
    v6 = v26;
    v7 = v27;
    sub_1004BB5A4(v25, v26);
    v8 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v7 + 8))(*(_QWORD *)(v2 + 16), v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
  }
  else
  {
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_1004CB800((uint64_t)v22, &qword_101406510);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v25, 0, 0);
    v9 = (void *)static OS_os_log.dataSync;
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v10, v21);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    ObjectType = swift_getObjectType(a1);
    v13 = v9;
    v14 = _typeName(_:qualified:)(ObjectType, 0);
    v16 = v15;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v17 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v17;
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v16;
    v18 = static os_log_type_t.error.getter(v17);
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v18, "CRLBoardSyncLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 109, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v19);

    _typeName(_:qualified:)(ObjectType, 0);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_100B3B7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  int v42;
  char v43[24];

  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  swift_retain(v14);
  v15 = sub_100AFB244(a1);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) & 0x10;
    if (v17)
      v18 = a2;
    else
      v18 = a1;
    v42 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned);
    if (v14)
    {
      swift_retain(v14);
      v41 = sub_100A870E0(v16);
      (*(void (**)(_QWORD *))(*v16 + 432))(v14);
      (*(void (**)(_QWORD *))(*v16 + 424))(v14);
      sub_1005DAB90(v14[3], v14[4], v14[5], v14[2]);
      swift_release(v14);
      v17 |= v41;
    }
    v41 = v17;
    v19 = *(uint64_t (**)(void))(*v16 + 256);
    v40 = *(id *)(v2 + 16);
    v20 = v19();
    v21 = v16[4];
    v38 = v16[5];
    v39 = v21;
    v22 = v16[2];
    v36 = v16[3];
    v37 = v22;
    v23 = (*(uint64_t (**)(uint64_t))(*v16 + 408))(v20);
    if ((v24 & 1) != 0)
      v25 = v23 + 2;
    else
      v25 = v23;
    (*(void (**)(void))(*v16 + 264))();
    sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
    v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
    v29 = type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
    v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    swift_retain(v16);
    sub_10057939C(v26, v27);
    swift_bridgeObjectRetain(v28);
    v31 = sub_100AF6140((uint64_t)v40, (uint64_t)v13, v36, v39, v38, v37, v25, (uint64_t)v10, (uint64_t)v7, v42, (uint64_t)v16, v41, v26, v27, v28, v30);
    v32 = swift_release(v14);
    swift_release_n(v16, 2, v32);
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v43, 0, 0);
    v33 = (id)static OS_os_log.dataSync;
    v34 = static os_log_type_t.error.getter(v33);
    sub_100A06EBC((uint64_t)v33, &_mh_execute_header, v34, "Failed to convert CRLBoardItemSyncRemoteRecord to item data", 59, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release(v14);

    return 0;
  }
  return v31;
}

uint64_t sub_100B3BB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t inited;
  id v47;
  Class v48;
  uint64_t v49;
  Swift::String v50;
  Class isa;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[144];
  _BYTE v90[12];
  _BYTE v91[16];

  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v75 - v8;
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v87 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101406B10);
  __chkstk_darwin(v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLBoardCRDTData(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  __chkstk_darwin(v17);
  v19 = (char *)&v75 - v18;
  __chkstk_darwin(v20);
  v23 = (char *)&v75 - v22;
  v88 = a2;
  v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  v25 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData);
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8);
  if (v26 >> 60 == 15)
  {
    swift_retain(v24);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v91, 0, 0);
    v29 = (id)static OS_os_log.dataSync;
    v30 = static os_log_type_t.error.getter(v29);
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v30, "Failed to convert CRLBoardSyncRemoteRecord to item data", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_release(v24);
    return 0;
  }
  v82 = v21;
  v83 = v9;
  v84 = v6;
  v27 = *v25;
  sub_10057939C(*v25, v26);
  sub_10057939C(v27, v26);
  v28 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
  swift_retain(a1);
  v86 = v24;
  swift_retain(v24);
  CRDT.init(serializedData:)(v27, v26, v15, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  sub_1004B84E0((uint64_t)v14, (uint64_t)v23, type metadata accessor for CRLBoardCRDTData);
  v81 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  v79 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
  sub_1004B8460((uint64_t)v23, (uint64_t)v19, type metadata accessor for CRLBoardCRDTData);
  v80 = a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier;
  v33 = v87;
  sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier, v87, type metadata accessor for CRLBoardIdentifier);
  v34 = (uint64_t *)(v33 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v35 = *v34;
  v36 = v34[1];
  swift_bridgeObjectRetain(v36);
  sub_1004B84A4(v33, type metadata accessor for CRLBoardIdentifier);
  v37 = type metadata accessor for CRLBoardData(0);
  v38 = swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  *(_QWORD *)(v38 + 16) = 7;
  *(_OWORD *)(v38 + 24) = v81;
  *(_QWORD *)(v38 + 40) = v79;
  sub_1004B84E0((uint64_t)v19, v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  swift_release(a1);
  sub_1004BE2FC(v27, v26);
  v39 = (_QWORD *)(v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *v39 = v35;
  v39[1] = v36;
  sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardCRDTData);
  v40 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  v41 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges;
  v42 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges);
  if ((v42 & 4) == 0)
  {
    if ((v42 & 0x10) == 0)
    {
      v43 = 0;
      if (!*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted))
        goto LABEL_23;
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) & 1) != 0)
  {
    if ((v42 & 0x10) == 0)
    {
      v43 = 0;
      goto LABEL_20;
    }
LABEL_15:
    v43 = 16;
    goto LABEL_19;
  }
  v40 = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  if ((v42 & 0x10) != 0)
  {
    v43 = 20;
LABEL_19:
    if ((*(_BYTE *)(v88 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) & 1) == 0)
    {
LABEL_23:
      LODWORD(v79) = v40;
      v78 = 0;
      goto LABEL_24;
    }
LABEL_20:
    v78 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
    *(_QWORD *)&v81 = v43;
    LODWORD(v79) = v40;
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v90, 0, 0);
    v44 = (void *)static OS_os_log.dataSync;
    v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v45, v89);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v47 = v44;
    v48 = sub_100B4AD90(v80);
    v49 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v50._countAndFlagsBits = UUID.uuidString.getter(v49);
    isa = CKRecordID.init(recordName:zoneID:)(v50, (CKRecordZoneID)v48).super.isa;
    v52 = -[objc_class recordName](isa, "recordName");

    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v53;
    *(_QWORD *)(inited + 40) = v55;
    *(_QWORD *)(inited + 96) = &type metadata for Bool;
    *(_QWORD *)(inited + 104) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 72) = v78;
    v56 = *(_BYTE *)(v88 + v41);
    *(_QWORD *)(inited + 136) = &type metadata for Bool;
    *(_QWORD *)(inited + 144) = &protocol witness table for Bool;
    *(_BYTE *)(inited + 112) = (v56 & 0x10) != 0;
    v58 = static os_log_type_t.default.getter(v57);
    sub_100A06EBC((uint64_t)v47, &_mh_execute_header, v58, "Setting hideFromRecentlyDeleted to true after resolving board record conflict for recordName: %{public}%. hideFromRecentlyDeleted state for remote record:%d local record:%d ", 173, 2, inited);
    swift_setDeallocating(inited);
    v59 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v59);

    v78 = 1;
    v43 = v81;
    goto LABEL_24;
  }
  LODWORD(v79) = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  v78 = 0;
  v43 = 4;
LABEL_24:
  v60 = v86;
  if (v86)
  {
    swift_retain(v86);
    v62 = sub_100AD3F34(v61);
    swift_release(v60);
    v43 |= v62;
  }
  *(_QWORD *)&v81 = v43;
  v63 = *(void **)(v85 + 16);
  sub_1004B8460(v80, v87, type metadata accessor for CRLBoardIdentifier);
  v85 = *(_QWORD *)(v38 + 24);
  v80 = *(_QWORD *)(v38 + 32);
  v77 = *(_QWORD *)(v38 + 40);
  v64 = v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v91, 0, 0);
  sub_1004B8460(v64, (uint64_t)v19, type metadata accessor for CRLBoardCRDTData);
  v76 = v63;
  v65 = sub_1004B804C(&qword_1013E1A80);
  v66 = (uint64_t)v83;
  CRRegister.wrappedValue.getter(v65);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardCRDTData);
  v67 = v82;
  sub_1004B8460(v64, v82, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
  v68 = (uint64_t)v84;
  CRRegister.wrappedValue.getter(v65);
  sub_1004B84A4(v67, type metadata accessor for CRLBoardCRDTData);
  v69 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v70 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  v71 = *(_QWORD *)(v88 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedAssetUUIDs);
  v72 = type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
  v73 = swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
  swift_retain(v38);
  sub_10057939C(v69, v70);
  swift_bridgeObjectRetain(v71);
  v31 = sub_100AF3F94((uint64_t)v76, v87, v85, v80, v77, v66, v68, v79, v78, v38, v81, v69, v70, v71, v73);
  v74 = swift_release(v86);
  swift_release_n(v38, 2, v74);
  return v31;
}

uint64_t sub_100B3C490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t *v34;
  uint64_t v36;
  _BYTE v37[24];
  _BYTE v38[24];
  __int128 v39;
  uint64_t v40;
  _UNKNOWN **v41;

  v3 = v2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v9);
  v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v37[-v13 - 8];
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData);
  swift_retain(v15);
  v16 = sub_100B4C8AC(a1);
  if (v16)
  {
    v17 = v16;
    if (v15)
    {
      v18 = v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
      swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, v38, 0, 0);
      sub_1004B8460(v18, (uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
      v19 = v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
      swift_beginAccess(v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, v37, 0, 0);
      sub_1004B8460(v19, (uint64_t)v11, type metadata accessor for CRLUserBoardMetadataCRDTData);
      v20 = sub_1004B7878((unint64_t *)&qword_101402388, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F39A58);
      swift_retain(v15);
      v21 = CRStruct_5.hasDelta(from:)(v11, v9, v20);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLUserBoardMetadataCRDTData);
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
      v22 = 2;
      if ((v21 & 1) == 0)
        v22 = 0;
      if (*(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) != *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity))
        v22 |= 4uLL;
      v36 = v22;
      sub_100A13790(v15);
      swift_release(v15);
    }
    else
    {
      v36 = 0;
    }
    v26 = *(void **)(v3 + 16);
    sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
    v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8);
    v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    v40 = type metadata accessor for CRLBoardDataStore(0);
    v41 = &off_1012921A8;
    *(_QWORD *)&v39 = v26;
    v30 = type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
    v25 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v31 = OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData;
    *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData) = 0;
    sub_1004DB728(&v39, v25 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext);
    v32 = *(_QWORD *)(v25 + v31);
    *(_QWORD *)(v25 + v31) = v17;
    v33 = v26;
    swift_retain(v17);
    sub_10057939C(v27, v28);
    swift_retain(v25);
    swift_release(v32);
    *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges) = v36;
    swift_release(v25);
    sub_1004B84E0((uint64_t)v8, v25 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    swift_release(v17);
    swift_release(v15);

    v34 = (uint64_t *)(v25 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
    *v34 = v27;
    v34[1] = v28;
    *(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity) = v29;
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, &v39, 0, 0);
    v23 = (id)static OS_os_log.dataSync;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "Failed to convert CRLBoardSyncRemoteRecord to item data", 55, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release(v15);

    return 0;
  }
  return v25;
}

uint64_t sub_100B3C884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t, __n128);
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  unint64_t v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  void *v112;
  unsigned __int8 v113;
  id v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(void);
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  __n128 v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  __n128 v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t);
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  char *v157;
  uint64_t v158;
  void (*v159)(void);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  char *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, uint64_t);
  char *v188;
  char v189[8];
  uint64_t v190;
  uint64_t v191;
  char v192[8];
  char v193[8];
  char v194[8];
  char v195[8];
  char v196[8];
  _OWORD v197[2];
  uint64_t v198;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  __chkstk_darwin(v7);
  v188 = (char *)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1014064B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v156 - v13;
  v15 = sub_1004B804C(&qword_101405628);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_101405EC0);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  v30 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v197, 0, 0);
    v31 = (id)static OS_os_log.dataSync;
    v32 = static os_log_type_t.error.getter(v31);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v32, "_resolveFreehandDrawingBucketRecordConflict() received a partial record, which is unexpected in a conflict", 106, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  v172 = v26;
  v173 = v14;
  v167 = v25;
  v169 = v11;
  v186 = v29;
  v168 = v28;
  v184 = a1;
  v166 = v6;
  v170 = v27;
  v185 = v24;
  v174 = v16;
  v177 = v18;
  v175 = v15;
  v33 = v30[1];
  v176 = *v30;
  v35 = v30[2];
  v34 = v30[3];
  v36 = v30[4];
  v178 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  v37 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
  v38 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
  v180 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  v179 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions + 8);
  v182 = *(_QWORD *)(a2
                   + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                   + 16);
  v39 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                  + 32);
  v181 = *(_QWORD *)(a2
                   + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                   + 24);
  v183 = v39;
  sub_1004BE310(v37, v38);
  v40 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  Capsule<>.init(serializedData:allowedAppFormats:)(v37, v38, 0, v7, v40);
  v158 = v7;
  v161 = v36;
  v162 = v34;
  v163 = v35;
  v164 = v33;
  v165 = v40;
  v171 = 0;
  v55 = sub_1004B804C((uint64_t *)&unk_101406AD0);
  v56 = *(unsigned int *)(v55 + 48);
  v57 = *(unsigned __int16 *)(v55 + 52);
  v160 = v55;
  v58 = (_QWORD *)swift_allocObject(v55, v56, v57);
  *((_BYTE *)v58 + *(_QWORD *)(*v58 + 136)) = 0;
  v58[2] = v178;
  v59 = *(void (**)(void))(v186 + 32);
  v157 = (char *)v58 + *(_QWORD *)(*v58 + 120);
  v60 = v185;
  v159 = v59;
  v59();
  *((_BYTE *)v58 + *(_QWORD *)(*v58 + 136)) = 0;
  v61 = *(_QWORD *)(*v58 + 128);
  v178 = v58;
  v62 = (_QWORD *)((char *)v58 + v61);
  v63 = v179;
  *v62 = v180;
  v62[1] = v63;
  v64 = v181;
  v62[2] = v182;
  v62[3] = v64;
  v65 = v184;
  v66 = *(void **)(v184 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue);
  v62[4] = v183;
  v67 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData
                  + 8);
  if (v67 >> 60 == 15)
  {
    v180 = v62;
    v181 = a2;
    v68 = v66;
    v69 = v165;
  }
  else
  {
    v98 = *(_QWORD *)(a2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData);
    sub_1004B8930(0, &qword_1013FF470, NSKeyedUnarchiver_ptr);
    v99 = sub_1004B8930(0, (unint64_t *)&unk_1014064E0, CKMergeableRecordValue_ptr);
    v100 = v66;
    v101 = v98;
    v68 = v100;
    sub_10057939C(v101, v67);
    v102 = v99;
    v103 = v99;
    v104 = v171;
    v105 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v102, v101, v67, v103);
    v171 = v104;
    v69 = v165;
    if (v104)
    {

      sub_1004BE2FC(v101, v67);
      v106 = (uint64_t)v178;
      swift_setDeallocating(v178);
      (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v106 + *(_QWORD *)(*(_QWORD *)v106 + 120), v60);
      swift_deallocClassInstance(v106, *(unsigned int *)(*(_QWORD *)v106 + 48), *(unsigned __int16 *)(*(_QWORD *)v106 + 52));

      v97 = v171;
      goto LABEL_6;
    }
    v112 = v105;
    if (v105)
    {
      v183 = v101;
      *(_QWORD *)&v197[0] = 0;
      v113 = objc_msgSend(v105, "mergeRecordValue:error:", v68, v197);

      if ((v113 & 1) == 0)
      {
        v134 = *(_QWORD *)&v197[0];
        v135 = *(id *)&v197[0];
        v136 = _convertNSErrorToError(_:)(v134);

        swift_willThrow(v137);
        v138 = v67;
        v97 = v136;
        sub_1004BE2FC(v183, v138);

        v139 = (uint64_t)v178;
        swift_setDeallocating(v178);
        (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v139 + *(_QWORD *)(*(_QWORD *)v139 + 120), v60);
        swift_deallocClassInstance(v139, *(unsigned int *)(*(_QWORD *)v139 + 48), *(unsigned __int16 *)(*(_QWORD *)v139 + 52));
        goto LABEL_6;
      }
      v180 = v62;
      v181 = a2;
      v114 = *(id *)&v197[0];

      sub_1004BE2FC(v183, v67);
      v68 = v112;
    }
    else
    {
      v180 = v62;
      v181 = a2;

      sub_1004BE2FC(v101, v67);
    }
  }
  v179 = (char *)*((_QWORD *)v187 + 2);
  v70 = *(void **)&v179[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
  *(_QWORD *)&v197[0] = *(_QWORD *)(v65 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  v71 = *(_QWORD *)&v197[0];
  v187 = v70;
  v183 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v182 = v72;
  v73 = type metadata accessor for UUID(0);
  v74 = sub_1004B804C(&qword_101405F00);
  v75 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v76 = sub_1004CBA30(&qword_101403070, &qword_101405F00, (uint64_t)&protocol conformance descriptor for Ref<A>);
  v77 = sub_1004CBA30((unint64_t *)&unk_1014064F0, &qword_101405F00, (uint64_t)&protocol conformance descriptor for Ref<A>);
  v78 = v188;
  CRDictionary.init()(v73, v74, &protocol witness table for UUID, v75, v76, v77);
  v79 = v172;
  Capsule<>.init(_:id:)(v78, v183, v182, v158, v69);
  v80 = (_QWORD *)swift_allocObject(v160, *(unsigned int *)(v160 + 48), *(unsigned __int16 *)(v160 + 52));
  *((_BYTE *)v80 + *(_QWORD *)(*v80 + 136)) = 0;
  v80[2] = v71;
  v81 = (char *)v80 + *(_QWORD *)(*v80 + 120);
  ((void (*)(char *, uint64_t, uint64_t))v159)(v81, v79, v60);
  *((_BYTE *)v80 + *(_QWORD *)(*v80 + 136)) = 0;
  v82 = (_QWORD *)((char *)v80 + *(_QWORD *)(*v80 + 128));
  v83 = v164;
  *v82 = v176;
  v82[1] = v83;
  v84 = v162;
  v82[2] = v163;
  v82[3] = v84;
  v82[4] = v161;
  v85 = swift_beginAccess(v81, v195, 0, 0);
  v86 = v186;
  v87 = *(void (**)(char *, char *, uint64_t, __n128))(v186 + 16);
  v88 = v173;
  v87(v173, v81, v60, v85);
  swift_setDeallocating(v80);
  v89 = v60;
  v90 = *(void (**)(char *, uint64_t))(v86 + 8);
  v90((char *)v80 + *(_QWORD *)(*v80 + 120), v60);
  swift_deallocClassInstance(v80, *(unsigned int *)(*v80 + 48), *(unsigned __int16 *)(*v80 + 52));
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v88, 0, 1, v60);
  v91 = sub_100B01190();
  v92 = v187;
  v93 = v177;
  CRCKMergeable.init(crdt:context:)(v88, v92, v89, v91);
  v94 = sub_1004CBA30((unint64_t *)&unk_1014064D0, &qword_101405628, (uint64_t)&protocol conformance descriptor for CRCKMergeable<A>);
  v95 = v175;
  v96 = v171;
  CKMergeable.merge(_:)(v68, v175, v94);
  if (v96)
  {
    (*(void (**)(char *, uint64_t))(v174 + 8))(v93, v95);

    swift_release(v178);
    v97 = v96;
LABEL_6:
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v197, 0, 0);
    v41 = (void *)static OS_os_log.dataSync;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v42, v196);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v97, v192, v189);
    v44 = v190;
    v45 = v191;
    v46 = v41;
    v47 = Error.localizedDescription.getter(v44, v45);
    v49 = v48;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v50 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v50;
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v49;
    v51 = static os_log_type_t.error.getter(v50);
    sub_100A06EBC((uint64_t)v46, &_mh_execute_header, v51, "Failed to resolve freehand conflict with error - %@", 51, 2, inited);
    swift_setDeallocating(inited);
    v52 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v52);

    swift_errorRelease(v97);
    return 0;
  }
  v187 = v90;
  v188 = (char *)v92;
  v107 = (uint64_t)v169;
  CRCKMergeable.crdt.getter(v95);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v107, 1, v89) == 1)
  {
    v108 = v93;
    v109 = v95;
    sub_1004CB800(v107, (uint64_t *)&unk_1014064B0);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v197, 0, 0);
    v110 = (id)static OS_os_log.dataSync;
    v111 = static os_log_type_t.error.getter(v110);
    sub_100A06EBC((uint64_t)v110, &_mh_execute_header, v111, "remoteCKMergeable.crdt is nil, something went wrong.", 52, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_release(v178);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v108, v109);
  }
  else
  {
    v115 = v95;
    v156 = v68;
    v116 = v170;
    v117 = v107;
    v118 = v159;
    ((void (*)(char *, uint64_t, uint64_t))v159)(v170, v117, v89);
    v119 = v167;
    ((void (*)(uint64_t, char *, uint64_t))v87)(v167, v116, v89);
    v120 = (_QWORD *)swift_allocObject(v160, *(unsigned int *)(v160 + 48), *(unsigned __int16 *)(v160 + 52));
    *((_BYTE *)v120 + *(_QWORD *)(*v120 + 136)) = 0;
    v120[2] = v71;
    v121 = (uint64_t)v120 + *(_QWORD *)(*v120 + 120);
    ((void (*)(uint64_t, uint64_t, uint64_t))v118)(v121, v119, v89);
    *((_BYTE *)v120 + *(_QWORD *)(*v120 + 136)) = 0;
    v122 = (_QWORD *)((char *)v120 + *(_QWORD *)(*v120 + 128));
    v123 = v164;
    *v122 = v176;
    v122[1] = v123;
    v124 = v162;
    v122[2] = v163;
    v122[3] = v124;
    v122[4] = v161;
    v186 = sub_100AAAAC8((uint64_t)v178);
    swift_beginAccess(v121, v194, 0, 0);
    sub_100AFC540(v121);
    v125 = v157;
    v126 = swift_beginAccess(v157, v193, 0, 0);
    v127 = v168;
    v87(v168, v125, v89, v126);
    if (qword_1013DCB10 != -1)
      swift_once(&qword_1013DCB10, sub_1005DE88C);
    v128 = type metadata accessor for CRCodableVersion(0);
    v129 = sub_1004F2A1C(v128, (uint64_t)qword_10147EB08);
    v130 = v188;
    v131 = Capsule<>.serializedData(_:version:allowedAppFormats:)(v188, v129, 0, v89, v165);
    v133 = v132;
    v187(v127, v89);
    v140 = sub_100B4B188((uint64_t)v156);
    if (v141 >> 60 != 15)
    {
      v146 = v141;
      v182 = v178[2];
      v183 = v140;
      v147 = (uint64_t)v166;
      sub_1004B8460(v181 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, (uint64_t)v166, type metadata accessor for CRLBoardIdentifier);
      v148 = *(_QWORD *)(v184 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
      v149 = *(_QWORD *)(v184 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8);
      v150 = *((_OWORD *)v180 + 1);
      v197[0] = *(_OWORD *)v180;
      v197[1] = v150;
      v198 = v180[4];
      v151 = type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
      v152 = swift_allocObject(v151, *(unsigned int *)(v151 + 48), *(unsigned __int16 *)(v151 + 52));
      v153 = v179;
      sub_10057939C(v148, v149);
      v154 = v147;
      v155 = v183;
      v53 = sub_100AF7190((uint64_t)v153, v182, v154, v131, v133, v148, v149, v183, v146, (uint64_t)v197, v186, v152);
      sub_1004BBBC8(v131, v133);
      swift_release(v178);
      swift_release(v120);
      sub_1004BE2FC(v155, v146);

      v187(v170, v185);
      (*(void (**)(char *, uint64_t))(v174 + 8))(v177, v175);
      return v53;
    }
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v197, 0, 0);
    v142 = (id)static OS_os_log.dataSync;
    v143 = static os_log_type_t.error.getter(v142);
    sub_100A06EBC((uint64_t)v142, &_mh_execute_header, v143, "Failed to serialize remote mergeable record value.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_setDeallocating(v120);
    v144 = v185;
    v145 = (void (*)(uint64_t, uint64_t))v187;
    v187((char *)v120 + *(_QWORD *)(*v120 + 120), v185);
    swift_deallocClassInstance(v120, *(unsigned int *)(*v120 + 48), *(unsigned __int16 *)(*v120 + 52));
    sub_1004BBBC8(v131, v133);

    swift_release(v178);
    v145((uint64_t)v170, v144);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v177, v115);
  }
  return 0;
}

uint64_t sub_100B3DA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;

  v15 = UUID.uuidString.getter(a1);
  v17 = v2;
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v5 = v15;
  v4 = v17;
  v6 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  v16._countAndFlagsBits = UUID.uuidString.getter(v7);
  v16._object = v8;
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v6 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v11 = *v10;
  v12 = (void *)v10[1];
  swift_bridgeObjectRetain(v16._object);
  v13._countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(v4);
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100B3DB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  __n128 v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char v44[24];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID, v44, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v4, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v10 = sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E1A50);
    v11 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
    v42 = UUID.uuidString.getter(v10);
    v43 = v12;
    swift_bridgeObjectRetain(v12);
    v13._countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14 = v42;
    v15 = v43;
    v16 = (uint64_t *)(v11 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v17 = *v16;
    v18 = (void *)v16[1];
    v42 = v14;
    v43 = v15;
    swift_bridgeObjectRetain(v15);
    v19._countAndFlagsBits = v17;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    return v42;
  }
  else
  {
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v42 = UUID.uuidString.getter(v21);
    v43 = v22;
    swift_bridgeObjectRetain(v22);
    v23._countAndFlagsBits = 95;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v25 = v42;
    v24 = v43;
    v26 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
    v42 = UUID.uuidString.getter(v27);
    v43 = v28;
    swift_bridgeObjectRetain(v28);
    v29._countAndFlagsBits = 58;
    v29._object = (void *)0xE100000000000000;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30 = v42;
    v31 = v43;
    v32 = (uint64_t *)(v26 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v33 = *v32;
    v34 = (void *)v32[1];
    v42 = v30;
    v43 = v31;
    swift_bridgeObjectRetain(v31);
    v35._countAndFlagsBits = v33;
    v35._object = v34;
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36 = v42;
    v37 = v43;
    v42 = v25;
    v43 = v24;
    swift_bridgeObjectRetain(v24);
    v38._countAndFlagsBits = v36;
    v38._object = v37;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v39 = swift_bridgeObjectRelease();
    v20 = v42;
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v39);
  }
  return v20;
}

uint64_t sub_100B3DE04(uint64_t a1)
{
  return sub_100B3DA38(a1);
}

uint64_t sub_100B3DE24()
{
  return sub_100B3DB5C();
}

uint64_t sub_100B3DE44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  uint64_t v10;
  uint64_t v11;

  v2 = *v1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier;
  v10 = UUID.uuidString.getter(a1);
  v11 = v3;
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v11);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100B3DEF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v11;
  uint64_t v12;

  v2 = v1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
  v11 = UUID.uuidString.getter(a1);
  v12 = v3;
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v12);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x7461646174654D5FLL;
  v9._object = (void *)0xE900000000000061;
  String.append(_:)(v9);
  return v11;
}

uint64_t sub_100B3DFC0(uint64_t a1)
{
  return sub_100B3DEF0(a1);
}

uint64_t sub_100B3DFE0()
{
  return sub_100B3E158(&OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
}

uint64_t sub_100B3E008()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v12;

  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 95;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3 = v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier;
  v12._countAndFlagsBits = UUID.uuidString.getter(v4);
  v12._object = v5;
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = *v7;
  v9 = (void *)v7[1];
  swift_bridgeObjectRetain(v12._object);
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(0xE700000000000000);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x5F74656B637562;
}

uint64_t sub_100B3E158(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1 + *a1;
  v10 = UUID.uuidString.getter(a1);
  v11 = v3;
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v11);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100B3E1F8()
{
  return sub_100B3E008();
}

uint64_t sub_100B3E218()
{
  return sub_100B3E158(&OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
}

uint64_t sub_100B3E240()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
  v2 = objc_msgSend(v1, "recordID");
  v3 = objc_msgSend(v2, "recordName");

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = objc_msgSend(v1, "recordID");
  v8 = objc_msgSend(v7, "zoneID");

  v9 = objc_msgSend(v8, "zoneName");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  swift_bridgeObjectRetain(v6);
  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v12);
  return v4;
}

uint64_t sub_100B3E364()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  Swift::String v17;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_1004B804C(&qword_1013E0270);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare), "recordID", v2));
  v6 = objc_msgSend(v5, "zoneID");

  sub_100B38068((uint64_t)v4);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  if ((_DWORD)v8 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E0270);
    return 0;
  }
  else
  {
    v19 = UUID.uuidString.getter(v8);
    v20 = v10;
    swift_bridgeObjectRetain(v10);
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12 = v19;
    v13 = v20;
    v14 = (uint64_t *)&v4[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v15 = *v14;
    v16 = (void *)v14[1];
    v19 = v12;
    v20 = v13;
    swift_bridgeObjectRetain(v13);
    v17._countAndFlagsBits = v15;
    v17._object = v16;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v9 = v19;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
  }
  return v9;
}

uint64_t sub_100B3E4EC()
{
  return sub_100B3E240();
}

uint64_t sub_100B3E50C()
{
  return sub_100B3E364();
}

CKRecordID sub_100B3E52C()
{
  _QWORD *v0;
  Class v1;
  uint64_t v2;
  Swift::String v3;

  v1 = sub_100B4AD90(*v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  v2 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v3._countAndFlagsBits = UUID.uuidString.getter(v2);
  return CKRecordID.init(recordName:zoneID:)(v3, (CKRecordZoneID)v1);
}

CKRecordID sub_100B3E5A4(uint64_t a1)
{
  Class v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  double v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  Swift::String v22;
  _BYTE v24[72];

  v1 = sub_100B4AD90(a1);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = sub_10067AD38();
  v6 = v5;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = -[objc_class ownerName](v1, "ownerName");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v14 & 1) == 0)
    {
      v16 = -[objc_class ownerName](v1, "ownerName", v15);
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      if (v17)
        goto LABEL_12;
      goto LABEL_10;
    }
  }
  v17 = 0;
  v19 = 0xE000000000000000;
LABEL_10:
  if (v19 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_12:
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, 0, 0xE000000000000000, 0);
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 515, "Creating recordIDForCKRecord for public database using non-default ownerName for zone: %{public}@", 97, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2u, 515, (uint64_t)"Creating recordIDForCKRecord for public database using non-default ownerName for zone: %{public}@", 97, 2u);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  v21 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v22._countAndFlagsBits = UUID.uuidString.getter(v21);
  return CKRecordID.init(recordName:zoneID:)(v22, (CKRecordZoneID)v1);
}

BOOL sub_100B3E800()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) != 0;
}

uint64_t sub_100B3E81C()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL4 v2;
  int v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v1)
    return 0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 408))() == 8;
  return v3 & v2;
}

uint64_t sub_100B3E868()
{
  _QWORD *v0;
  uint64_t v1;
  _BOOL4 v2;
  int v3;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v1)
    return 0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 408))() == 8;
  return v3 & v2;
}

void sub_100B3E8B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  uint64_t v28;
  Swift::String v29;
  Class isa;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  BOOL v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(__n128);
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  unint64_t v65;
  objc_class *v66;
  Swift::String v67;
  CKRecordZoneID v68;
  Class v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(__n128);
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, __n128);
  __n128 v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(__n128);
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  uint64_t *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  void (*v139)(char *, char *, uint64_t);
  Swift::String v140;
  char *v141;
  uint64_t v142;
  _QWORD *v143;
  char *v144;
  void (*v145)(char *, uint64_t, uint64_t, __n128);
  id v146;
  NSURL *v147;
  void *v148;
  void *v149;
  id v150;
  void (*v151)(char *, uint64_t);
  Swift::String v152;
  __n128 v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  __n128 v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  void *v171;
  uint64_t v172;
  uint64_t inited;
  unint64_t v174;
  id v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  Class v185;
  int64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t *v189;
  _QWORD *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t *v198;
  uint64_t v199;
  char *v200;
  void (*v201)(char *, uint64_t, uint64_t, __n128);
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD v212[3];
  char v213[8];
  char v214[80];
  _QWORD *v215;
  uint64_t v216;
  char *v217;
  _QWORD *v218;
  void *v219;

  v4 = v3;
  v206 = 0;
  v207 = a2;
  v193 = type metadata accessor for CRLAssetSyncMetadata(0);
  __chkstk_darwin(v193);
  v192 = (char *)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = sub_1004B804C((uint64_t *)&unk_101406470);
  v191 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v190 = (uint64_t *)((char *)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v189 = (uint64_t *)((char *)&v182 - v10);
  __chkstk_darwin(v11);
  v198 = (uint64_t *)((char *)&v182 - v12);
  v13 = sub_1004B804C(&qword_1014053D8);
  __chkstk_darwin(v13);
  v195 = (char *)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v194 = (char *)&v182 - v16;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v17);
  v204 = (char *)&v182 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for UUID(0);
  v199 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v197 = (char *)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v203 = (char *)&v182 - v21;
  v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 16);
  v218 = &type metadata for UInt64;
  v219 = &protocol witness table for UInt64;
  v216 = v23;
  v24 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v216, 0xD000000000000021, 0x8000000100FF82E0, v24);
  v218 = &type metadata for UInt64;
  v219 = &protocol witness table for UInt64;
  v216 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0xD000000000000019, 0x8000000100FF8310, v24);
  v25 = v22[1];
  v218 = &type metadata for UInt64;
  v219 = &protocol witness table for UInt64;
  v216 = v25;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0xD000000000000027, 0x8000000100FF8330, v24);
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue);
  v218 = &type metadata for Int;
  v219 = &protocol witness table for Int;
  v216 = v26;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0x657079546D657449, 0xEA0000000000455FLL, v24);
  v27 = sub_100B4AD90(a3);
  v28 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v29._countAndFlagsBits = UUID.uuidString.getter(v28);
  v202 = v28;
  isa = CKRecordID.init(recordName:zoneID:)(v29, (CKRecordZoneID)v27).super.isa;
  v31 = objc_allocWithZone((Class)CKReference);
  v185 = isa;
  CKRecord.subscript.setter(objc_msgSend(v31, "initWithRecordID:action:", isa, 1), 0x6665526472616F42, 0xEE0065636E657265);
  v32 = *v22;
  v33 = v4;
  v218 = &type metadata for UInt64;
  v219 = &protocol witness table for UInt64;
  v216 = v32;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0xD000000000000012, 0x8000000100FF8360, v24);
  v34 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
  v218 = &type metadata for UInt64;
  v219 = &protocol witness table for UInt64;
  v216 = v34;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0x704F7463656A624FLL, 0xEF455F736E6F6974, v24);
  v35 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  v38 = (v36 & 1) == 0 && v35 > 0;
  v218 = &type metadata for Bool;
  v219 = &protocol witness table for Bool;
  LOBYTE(v216) = v38;
  v196 = v24;
  v209 = a1;
  CKRecordKeyValueSetting.subscript.setter(&v216, 0x6E6F7473626D6F54, 0xEA00000000006465, v24);
  v215 = _swiftEmptyDictionarySingleton;
  v39 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (v39)
  {
    v205 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
    v40 = v209;
    v41 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
    v42 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
    sub_1004BB5A4((_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v41);
    v43 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v42 + 8);
    v44 = swift_retain(v39);
    v45 = (void *)v43(v41, v42, v44);
    v46 = v206;
    v47 = (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)v39 + 456))(v45, 0);
    if (v46)
    {
      swift_errorRelease(v46);
      swift_release(v39);

      v46 = 0;
      v49 = v205;
LABEL_18:
      v77 = *(_QWORD *)(v33 + v49);
      if (v77)
      {
        v78 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
        v79 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
        sub_1004BB5A4((_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v78);
        v80 = v33;
        v81 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v79 + 8);
        v82 = swift_retain(v77);
        v83 = (void *)v81(v78, v79, v82);
        v84 = (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)v77 + 464))(v83, 0);
        v86 = v85;
        swift_release(v77);

        v218 = &type metadata for Data;
        v219 = &protocol witness table for Data;
        v216 = v84;
        v217 = (char *)v86;
        sub_1004BE310(v84, v86);
        CKRecordKeyValueSetting.subscript.setter(&v216, 0x6369666963657053, 0xEC00000061746144, v196);
        v87 = *(_QWORD *)(v80 + v49);
        if (v87)
        {
          v88 = *(uint64_t (**)(__n128))(*(_QWORD *)v87 + 576);
          v89 = swift_retain(*(_QWORD *)(v80 + v49));
          v90 = v88(v89);
          swift_release(v87);
          __chkstk_darwin(v91);
          *(&v182 - 2) = (uint64_t)&v215;
          sub_100B4AF14(v90, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4EC6C);
          sub_1004BBBC8(v84, v86);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1004BBBC8(v84, v86);
        }
      }
      v50 = v198;
      v51 = v207;
      goto LABEL_23;
    }
    v52 = v47;
    v53 = v48;
    swift_release(v39);

    v218 = &type metadata for Data;
    v219 = &protocol witness table for Data;
    v216 = v52;
    v217 = (char *)v53;
    sub_1004BE310(v52, v53);
    CKRecordKeyValueSetting.subscript.setter(&v216, 0x61446E6F6D6D6F43, 0xEA00000000006174, v196);
    v49 = v205;
    v54 = *(_QWORD *)(v33 + v205);
    v206 = v52;
    if (v54)
    {
      v55 = *(void (**)(__n128))(*(_QWORD *)v54 + 264);
      v56 = swift_retain(v54);
      v57 = (uint64_t)v204;
      v55(v56);
      v58 = swift_release(v54);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v199 + 48))(v57, 1, v210, v58) != 1)
      {
        v59 = v203;
        v60 = v210;
        v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v199 + 32))(v203, v57, v210);
        v204 = (char *)UUID.uuidString.getter(v61);
        v63 = v62;
        v64 = objc_msgSend(v40, "recordID");
        v65 = v53;
        v66 = (objc_class *)objc_msgSend(v64, "zoneID");

        v67._countAndFlagsBits = (uint64_t)v204;
        v67._object = v63;
        v68.super.isa = v66;
        v53 = v65;
        v69 = CKRecordID.init(recordName:zoneID:)(v67, v68).super.isa;
        v70 = objc_allocWithZone((Class)CKReference);
        v71 = v60;
        v49 = v205;
        CKRecord.subscript.setter(objc_msgSend(v70, "initWithRecordID:action:", v69, 1), 0x6552746E65726150, 0xEF65636E65726566);

        (*(void (**)(char *, uint64_t))(v199 + 8))(v59, v71);
        v72 = *(_QWORD *)(v33 + v49);
        if (!v72)
        {
LABEL_14:
          sub_1004BBBC8(v206, v53);
          goto LABEL_18;
        }
LABEL_17:
        v73 = *(uint64_t (**)(__n128))(*(_QWORD *)v72 + 568);
        v74 = swift_retain(v72);
        v75 = v73(v74);
        swift_release(v72);
        __chkstk_darwin(v76);
        *(&v182 - 2) = (uint64_t)&v215;
        sub_100B4AF14(v75, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4EC6C);
        sub_1004BBBC8(v206, v53);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      v57 = (uint64_t)v204;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v204, 1, 1, v210);
    }
    sub_1004CB800(v57, (uint64_t *)&unk_1013E1A50);
    v72 = *(_QWORD *)(v33 + v49);
    if (!v72)
      goto LABEL_14;
    goto LABEL_17;
  }
  v50 = v198;
  v46 = v206;
  v51 = v207;
LABEL_23:
  swift_bridgeObjectRetain(v215);
  v93 = sub_1005FFABC(v92);
  swift_bridgeObjectRelease();
  __chkstk_darwin(v94);
  *(&v182 - 2) = v51;
  *(&v182 - 1) = (uint64_t)v93;
  v95 = sub_1004B804C((uint64_t *)&unk_101406480);
  OS_dispatch_queue.sync<A>(execute:)(sub_100B4AEFC, &v182 - 4, v95);
  swift_release(v93);
  if (v46)
  {
    if (qword_1013DD870 != -1)
      goto LABEL_65;
    goto LABEL_25;
  }
  v108 = v215[8];
  v184 = v215 + 8;
  v187 = v215;
  v188 = v216;
  v109 = 1 << *((_BYTE *)v215 + 32);
  v110 = -1;
  if (v109 < 64)
    v110 = ~(-1 << v109);
  v111 = v110 & v108;
  v186 = (unint64_t)(v109 + 63) >> 6;
  v183 = v186 - 1;
  swift_bridgeObjectRetain(v215);
  v112 = 0;
  v113 = v199;
  v114 = (uint64_t)v197;
  v115 = v195;
  if (!v111)
    goto LABEL_31;
LABEL_29:
  v206 = v112;
  v207 = (v111 - 1) & v111;
  v116 = __clz(__rbit64(v111)) | (v112 << 6);
LABEL_30:
  v117 = v187[7];
  v118 = (_QWORD *)(v187[6] + 16 * v116);
  v119 = v118[1];
  *(_QWORD *)v115 = *v118;
  *((_QWORD *)v115 + 1) = v119;
  v120 = v117 + *(_QWORD *)(v113 + 72) * v116;
  v121 = sub_1004B804C(&qword_101406490);
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(&v115[*(int *)(v121 + 48)], v120, v210);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v115, 0, 1, v121);
  swift_bridgeObjectRetain(v119);
  while (1)
  {
    v125 = v194;
    sub_1004C4938((uint64_t)v115, (uint64_t)v194, &qword_1014053D8);
    v126 = sub_1004B804C(&qword_101406490);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 48))(v125, 1, v126) == 1)
    {
      swift_bridgeObjectRelease();

LABEL_62:
      swift_release(v187);
      goto LABEL_63;
    }
    v128 = *(char **)v125;
    v127 = (char *)*((_QWORD *)v125 + 1);
    (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v114, &v125[*(int *)(v126 + 48)], v210);
    v129 = v188;
    if (!*(_QWORD *)(v188 + 16) || (v130 = sub_100842EFC(v114), (v131 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v216, 0, 0);
      v171 = (void *)static OS_os_log.dataSync;
      v172 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v172, &v211);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v174 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v174;
      *(_QWORD *)(inited + 32) = v128;
      *(_QWORD *)(inited + 40) = v127;
      v175 = v171;
      v176 = v197;
      v177 = UUID.uuidString.getter(v175);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v174;
      *(_QWORD *)(inited + 72) = v177;
      *(_QWORD *)(inited + 80) = v178;
      v180 = static os_log_type_t.default.getter(v179);
      sub_100A06EBC((uint64_t)v175, &_mh_execute_header, v180, "Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, inited);
      swift_setDeallocating(inited);
      v181 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v181);

      (*(void (**)(char *, uint64_t))(v199 + 8))(v176, v210);
      goto LABEL_62;
    }
    v205 = 0;
    v132 = v208;
    v133 = (char *)v50 + *(int *)(v208 + 48);
    v134 = v189;
    sub_1004CB7BC(*(_QWORD *)(v129 + 56) + *(_QWORD *)(v191 + 72) * v130, (uint64_t)v189, (uint64_t *)&unk_101406470);
    v135 = (char *)v134 + *(int *)(v132 + 48);
    v204 = v128;
    v136 = *v134;
    *v50 = *v134;
    v137 = type metadata accessor for URL(0);
    v138 = *(_QWORD **)(v137 - 8);
    v139 = (void (*)(char *, char *, uint64_t))v138[4];
    v202 = (uint64_t)v133;
    v139(v133, v135, v137);
    v216 = (uint64_t)v128;
    v217 = v127;
    swift_retain(v136);
    swift_bridgeObjectRetain(v127);
    v140._countAndFlagsBits = 0x7465737341;
    v140._object = (void *)0xE500000000000000;
    String.append(_:)(v140);
    v203 = (char *)v216;
    v141 = v217;
    v142 = v208;
    v143 = v190;
    v144 = (char *)v190 + *(int *)(v208 + 48);
    *v190 = v136;
    v145 = (void (*)(_QWORD, _QWORD, _QWORD))v138[2];
    v200 = v141;
    v201 = (void (*)(char *, uint64_t, uint64_t, __n128))v145;
    v145(v144, v133, v137);
    v146 = objc_allocWithZone((Class)CKAsset);
    URL._bridgeToObjectiveC()(v147);
    v149 = v148;
    v150 = objc_msgSend(v146, "initWithFileURL:", v148);

    v151 = (void (*)(char *, uint64_t))v138[1];
    v151(v144, v137);
    CKRecord.subscript.setter(v150, v203, v200);
    v216 = (uint64_t)v204;
    v217 = v127;
    swift_bridgeObjectRetain(v127);
    v152._countAndFlagsBits = 0x74654D7465737341;
    v152._object = (void *)0xED00006174616461;
    String.append(_:)(v152);
    v153 = swift_bridgeObjectRelease();
    v203 = v217;
    v204 = (char *)v216;
    v154 = v199;
    v155 = (char *)v143 + *(int *)(v142 + 48);
    *v143 = v136;
    v201(v155, v202, v137, v153);
    v156 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v192, v136 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID, v210);
    v158 = *(_QWORD *)(v136 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    v157 = *(_QWORD *)(v136 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain(v157);
    v159 = swift_release(v136);
    v160 = v193;
    v161 = (_QWORD *)(v156 + *(int *)(v193 + 20));
    *v161 = v158;
    v161[1] = v157;
    ((void (*)(char *, uint64_t, __n128))v151)(v155, v137, v159);
    v162 = type metadata accessor for PropertyListEncoder(0);
    swift_allocObject(v162, *(unsigned int *)(v162 + 48), *(unsigned __int16 *)(v162 + 52));
    v164 = PropertyListEncoder.init()(v163);
    dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
    v165 = sub_1004B7878((unint64_t *)&unk_101406498, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC68);
    v46 = v205;
    v167 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v156, v160, v165, v166);
    if (v46)
      goto LABEL_67;
    v169 = v167;
    v170 = v168;
    swift_release(v164);
    sub_1004B84A4(v156, type metadata accessor for CRLAssetSyncMetadata);
    v218 = &type metadata for Data;
    v219 = &protocol witness table for Data;
    v216 = v169;
    v217 = v170;
    CKRecordKeyValueSetting.subscript.setter(&v216, v204, v203, v196);
    v50 = v198;
    sub_1004CB800((uint64_t)v198, (uint64_t *)&unk_101406470);
    v114 = (uint64_t)v197;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v197, v210);
    v113 = v154;
    v115 = v195;
    v112 = v206;
    v111 = v207;
    if (v207)
      goto LABEL_29;
LABEL_31:
    v122 = v112 + 1;
    if (__OFADD__(v112, 1))
      break;
    if (v122 >= v186)
      goto LABEL_41;
    v123 = v184[v122];
    if (v123)
      goto LABEL_34;
    v112 += 2;
    if (v122 + 1 >= v186)
    {
LABEL_57:
      v206 = v122;
    }
    else
    {
      v123 = v184[v112];
      if (v123)
        goto LABEL_37;
      if (v122 + 2 >= v186)
      {
LABEL_41:
        v206 = v112;
        goto LABEL_42;
      }
      v123 = v184[v122 + 2];
      if (v123)
      {
        v122 += 2;
        goto LABEL_34;
      }
      v112 = v122 + 3;
      if (v122 + 3 < v186)
      {
        v123 = v184[v112];
        if (!v123)
        {
          while (1)
          {
            v122 = v112 + 1;
            if (__OFADD__(v112, 1))
              break;
            if (v122 >= v186)
            {
              v122 = v183;
              goto LABEL_57;
            }
            v123 = v184[v122];
            ++v112;
            if (v123)
              goto LABEL_34;
          }
          __break(1u);
LABEL_67:
          swift_unexpectedError(v46, "Freeform/CRLAssetSyncMetadata.swift", 35, 1, 31);
          __break(1u);
          return;
        }
LABEL_37:
        v122 = v112;
LABEL_34:
        v206 = v122;
        v207 = (v123 - 1) & v123;
        v116 = __clz(__rbit64(v123)) + (v122 << 6);
        goto LABEL_30;
      }
      v206 = v122 + 2;
    }
LABEL_42:
    v124 = sub_1004B804C(&qword_101406490);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v115, 1, 1, v124);
    v207 = 0;
  }
  __break(1u);
LABEL_65:
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_25:
  swift_beginAccess(&static OS_os_log.dataSync, &v216, 0, 0);
  v96 = (void *)static OS_os_log.dataSync;
  v97 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v98 = swift_initStackObject(v97, v214);
  *(_OWORD *)(v98 + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v46, v213, v212);
  v99 = v212[1];
  v100 = v212[2];
  v101 = v96;
  v102 = Error.localizedDescription.getter(v99, v100);
  v104 = v103;
  *(_QWORD *)(v98 + 56) = &type metadata for String;
  v105 = sub_1004CFC2C();
  *(_QWORD *)(v98 + 64) = v105;
  *(_QWORD *)(v98 + 32) = v102;
  *(_QWORD *)(v98 + 40) = v104;
  v106 = static os_log_type_t.error.getter(v105);
  sub_100A06EBC((uint64_t)v101, &_mh_execute_header, v106, "Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, v98);

  swift_setDeallocating(v98);
  v107 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v98 + 32, 1, v107);

  swift_errorRelease(v46);
LABEL_63:
  swift_bridgeObjectRelease();
}

Class sub_100B3FA64(uint64_t a1, uint64_t a2)
{
  Swift::String v4;
  Class isa;
  objc_class *v6;
  Swift::String v7;
  Class v8;

  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  isa = sub_100B3E5A4(a2).super.isa;
  sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  v6 = isa;
  v7._countAndFlagsBits = 0xD000000000000011;
  v7._object = (void *)0x8000000100FF82C0;
  v8 = CKRecord.init(recordType:recordID:)(v7, (CKRecordID)v6).super.isa;
  sub_100B3E8B8(v8, a1, a2);

  return v8;
}

Class sub_100B3FB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  Swift::String v9;
  Class v10;
  uint64_t v11;
  Swift::String v12;
  Class isa;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Class v27;
  _BYTE v29[72];
  _QWORD v30[4];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
  if (v5 >> 60 == 15)
    goto LABEL_3;
  v6 = *v4;
  v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_10057939C(v6, v5);
  v25 = sub_100B4DA14();
  v26 = objc_msgSend(objc_allocWithZone((Class)CKRecord), "initWithCoder:", v25);
  sub_1004BE2FC(v6, v5);
  v27 = (Class)v26;

  if (!v27)
  {
LABEL_3:
    v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue);
    v30[0] = 0x6574496472616F42;
    v30[1] = 0xEA00000000005F6DLL;
    v30[3] = v8;
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    v10 = sub_100B4AD90(v2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
    v11 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v12._countAndFlagsBits = UUID.uuidString.getter(v11);
    isa = CKRecordID.init(recordName:zoneID:)(v12, (CKRecordZoneID)v10).super.isa;
    v14._countAndFlagsBits = 0x6574496472616F42;
    v14._object = (void *)0xEA00000000005F6DLL;
    v27 = CKRecord.init(recordType:recordID:)(v14, (CKRecordID)isa).super.isa;
    if ((unint64_t)v4[1] >> 60 != 15)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v30, 0, 0);
      v15 = (void *)static OS_os_log.dataSync;
      v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v16, v29);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v18 = v15;
      v19 = UUID.uuidString.getter(v18);
      v21 = v20;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v22 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v22;
      *(_QWORD *)(inited + 32) = v19;
      *(_QWORD *)(inited + 40) = v21;
      v23 = static os_log_type_t.error.getter(v22);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v23, "Failed to use existing sync data to decode CKRecord for board item with id %@", 77, 2, inited);
      swift_setDeallocating(inited);
      v24 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v24);

    }
  }
  else
  {

  }
  sub_100B3FEF0(v27, a1);
  return v27;
}

void sub_100B3FEF0(id a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  Swift::String v44;
  CKRecordID v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, __n128);
  __n128 v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  void (*v72)(__n128);
  __n128 v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  objc_class *v82;
  Swift::String v83;
  CKRecordZoneID v84;
  Class isa;
  char v86;
  uint64_t v87;
  uint64_t (*v88)(__n128);
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, __n128);
  __n128 v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(__n128);
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  void **v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t inited;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  _QWORD *v161;
  unint64_t i;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  void (*v174)(const char *, char *, uint64_t);
  unint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t *v178;
  char *v179;
  uint64_t *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  Swift::String v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  id v191;
  NSURL *v192;
  void *v193;
  void *v194;
  id v195;
  char *v196;
  id v197;
  id v198;
  Swift::String v199;
  double v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  __n128 v208;
  uint64_t v209;
  uint64_t v210;
  __n128 v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  _QWORD *v226;
  uint64_t v227;
  id v228;
  Swift::String v229;
  __n128 v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __n128 v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  __n128 v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  __n128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  __n128 v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  __n128 v267;
  unint64_t v268;
  unint64_t j;
  unint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  __n128 v281;
  Swift::String v282;
  id v283;
  id v284;
  Swift::String v285;
  NSString v286;
  id v287;
  uint64_t v288;
  _QWORD *v289;
  void **v290;
  _QWORD *v291;
  uint64_t v292;
  int64_t v293;
  uint64_t v294;
  int64_t v295;
  char *v296;
  unint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  char *v301;
  uint64_t *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  void (*v306)(uint64_t, char *, uint64_t);
  char *v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  int64_t v311;
  char *v312;
  uint64_t *v313;
  char *v314;
  void (*v315)(char *, char *, uint64_t);
  char *v316;
  uint64_t v317;
  id v318;
  uint64_t *v319;
  uint64_t v320;
  unint64_t v321;
  __int128 v322;
  uint64_t v323;
  uint64_t v324;
  __int128 v325;
  ValueMetadata *v326;
  void *v327;
  uint64_t v328;
  _QWORD v329[3];
  char v330[8];
  char v331[80];
  _QWORD *v332;
  _QWORD v333[2];

  v3 = v2;
  *(_QWORD *)&v322 = a2;
  v5 = 0;
  v308 = type metadata accessor for CRLAssetSyncMetadata(0);
  __chkstk_darwin(v308);
  v299 = (char *)&v292 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v300 = (uint64_t)&v292 - v8;
  __chkstk_darwin(v9);
  v301 = (char *)&v292 - v10;
  v320 = sub_1004B804C((uint64_t *)&unk_101406470);
  v303 = *(_QWORD *)(v320 - 8);
  __chkstk_darwin(v320);
  v319 = (uint64_t *)((char *)&v292 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v302 = (uint64_t *)((char *)&v292 - v13);
  __chkstk_darwin(v14);
  v313 = (uint64_t *)((char *)&v292 - v15);
  v16 = sub_1004B804C(&qword_1014053D8);
  __chkstk_darwin(v16);
  v305 = (char *)&v292 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v304 = (char *)&v292 - v19;
  v20 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v20);
  v307 = (char *)&v292 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v292 - v23;
  v25 = type metadata accessor for UUID(0);
  v26 = *(_QWORD *)(v25 - 8);
  v323 = v25;
  v324 = v26;
  __chkstk_darwin(v25);
  v296 = (char *)&v292 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v312 = (char *)&v292 - v29;
  *(_QWORD *)&v31 = __chkstk_darwin(v30).n128_u64[0];
  v314 = (char *)&v292 - v32;
  v33 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges;
  v34 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges);
  v318 = a1;
  *((_QWORD *)&v322 + 1) = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges;
  v321 = v34;
  v315 = (void (*)(char *, char *, uint64_t))v24;
  if ((v34 & 0x10) != 0)
  {
    LODWORD(v316) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned);
    LODWORD(v317) = v316 ^ 1;
    if ((v34 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    LODWORD(v317) = 0;
    LODWORD(v316) = 0;
    if ((v34 & 1) != 0)
    {
LABEL_3:
      v311 = 0;
      v35 = objc_msgSend(a1, "encryptedValues", v31);
      ObjectType = swift_getObjectType(v35);
      v37 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue);
      v326 = (ValueMetadata *)&type metadata for Int;
      v327 = &protocol witness table for Int;
      *(_QWORD *)&v325 = v37;
      CKRecordKeyValueSetting.subscript.setter(&v325, 0x657079546D657449, 0xEA0000000000455FLL, ObjectType);
      swift_unknownObjectRelease(v35);
      v38 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      v39 = UUID.uuidString.getter(v38);
      v41 = v40;
      v42 = objc_msgSend(a1, "recordID");
      v43 = objc_msgSend(v42, "zoneID");

      v44._countAndFlagsBits = v39;
      v44._object = v41;
      v45.super.isa = CKRecordID.init(recordName:zoneID:)(v44, (CKRecordZoneID)v43).super.isa;
      CKRecord.subscript.setter(objc_msgSend(objc_allocWithZone((Class)CKReference), "initWithRecordID:action:", v45.super.isa, 1), 0x6665526472616F42, 0xEE0065636E657265);
      v46 = v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions;
      v47 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
      v327 = &protocol witness table for UInt64;
      v326 = (ValueMetadata *)&type metadata for UInt64;
      *(_QWORD *)&v325 = v47;
      v48 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
      CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000012, 0x8000000100FF8360, v48);
      v326 = (ValueMetadata *)&type metadata for UInt64;
      v327 = &protocol witness table for UInt64;
      *(_QWORD *)&v325 = 0x1000000000000;
      CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000019, 0x8000000100FF8310, v48);
      v326 = &type metadata for CRLFeatureFlags;
      v327 = (void *)sub_1004DB6DC();
      LOBYTE(v325) = 23;
      LOBYTE(v39) = isFeatureEnabled(_:)(&v325);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v325);
      if ((v39 & 1) != 0)
      {
        v50 = objc_msgSend(a1, "encryptedValues");
        v51 = swift_getObjectType(v50);
        v52 = *(_QWORD *)(v46 + 8);
        v326 = (ValueMetadata *)&type metadata for UInt64;
        v327 = &protocol witness table for UInt64;
        *(_QWORD *)&v325 = v52;
        CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000027, 0x8000000100FF8330, v51);
        *(_QWORD *)&v49 = swift_unknownObjectRelease(v50).n128_u64[0];
      }
      v53 = objc_msgSend(a1, "encryptedValues", v49);
      v54 = swift_getObjectType(v53);
      v55 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
      v326 = (ValueMetadata *)&type metadata for UInt64;
      v327 = &protocol witness table for UInt64;
      *(_QWORD *)&v325 = v55;
      CKRecordKeyValueSetting.subscript.setter(&v325, 0x704F7463656A624FLL, 0xEF455F736E6F6974, v54);
      swift_unknownObjectRelease(v53);

      v333[0] = _swiftEmptyDictionarySingleton;
      v332 = &_swiftEmptySetSingleton;
      v56 = 1;
      v33 = *((_QWORD *)&v322 + 1);
      v5 = v311;
      goto LABEL_8;
    }
  }
  v56 = (v34 >> 3) & 1;
  v332 = &_swiftEmptySetSingleton;
  v333[0] = _swiftEmptyDictionarySingleton;
  if ((v34 & 4) == 0)
    goto LABEL_12;
LABEL_8:
  v57 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
  v58 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v58)
  {
LABEL_12:
    if ((_DWORD)v56)
      goto LABEL_23;
    goto LABEL_27;
  }
  v59 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
  v60 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
  sub_1004BB5A4((_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v59);
  v61 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v60 + 8);
  v62 = swift_retain(v58);
  v63 = (void *)v61(v59, v60, v62);
  v64 = (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)v58 + 456))(v63, 0);
  if (!v5)
  {
    v309 = v56;
    v66 = v64;
    v67 = v65;
    swift_release(v58);

    a1 = v318;
    v68 = objc_msgSend(v318, "encryptedValues");
    v69 = swift_getObjectType(v68);
    v326 = (ValueMetadata *)&type metadata for Data;
    v327 = &protocol witness table for Data;
    *(_QWORD *)&v325 = v66;
    *((_QWORD *)&v325 + 1) = v67;
    v310 = v66;
    v311 = v67;
    sub_1004BE310(v66, v67);
    CKRecordKeyValueSetting.subscript.setter(&v325, 0x61446E6F6D6D6F43, 0xEA00000000006174, v69);
    v70 = swift_unknownObjectRelease(v68);
    v71 = *(_QWORD *)(v3 + v57);
    if (v71)
    {
      v72 = *(void (**)(__n128))(*(_QWORD *)v71 + 264);
      v73 = swift_retain(*(_QWORD *)(v3 + v57));
      v74 = (uint64_t)v315;
      v72(v73);
      v75 = swift_release(v71);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v324 + 48))(v74, 1, v323, v75) != 1)
      {
        v76 = v324;
        v77 = v314;
        (*(void (**)(char *, uint64_t, uint64_t))(v324 + 32))(v314, v74, v323);
        v315 = (void (*)(char *, char *, uint64_t))sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
        v78 = UUID.uuidString.getter(v315);
        v80 = v79;
        v81 = objc_msgSend(a1, "recordID");
        v82 = (objc_class *)objc_msgSend(v81, "zoneID");

        v83._countAndFlagsBits = v78;
        v83._object = v80;
        v84.super.isa = v82;
        a1 = v318;
        isa = CKRecordID.init(recordName:zoneID:)(v83, v84).super.isa;
        CKRecord.subscript.setter(objc_msgSend(objc_allocWithZone((Class)CKReference), "initWithRecordID:action:", isa, 1), 0x6552746E65726150, 0xEF65636E65726566);

        (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v323);
        goto LABEL_19;
      }
    }
    else
    {
      v74 = (uint64_t)v315;
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v324 + 56))(v315, 1, 1, v323, v70);
    }
    sub_1004CB800(v74, (uint64_t *)&unk_1013E1A50);
LABEL_19:
    v86 = v309;
    v87 = *(_QWORD *)(v3 + v57);
    if (v87)
    {
      v88 = *(uint64_t (**)(__n128))(*(_QWORD *)v87 + 568);
      v89 = swift_retain(*(_QWORD *)(v3 + v57));
      v90 = v88(v89);
      swift_release(v87);
      __chkstk_darwin(v91);
      v288 = v3;
      v289 = v333;
      v290 = (void **)&v332;
      sub_100B4AF14(v90, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4EC64);
      sub_1004BBBC8(v310, v311);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004BBBC8(v310, v311);
    }
    v33 = *((_QWORD *)&v322 + 1);
    if ((v86 & 1) != 0)
      goto LABEL_23;
LABEL_27:
    v101 = v324;
    v102 = v312;
    if (!(_DWORD)v316)
      goto LABEL_35;
    goto LABEL_33;
  }
  swift_errorRelease(v5);
  swift_release(v58);

  v5 = 0;
  a1 = v318;
  v33 = *((_QWORD *)&v322 + 1);
  if ((v56 & 1) == 0)
    goto LABEL_27;
LABEL_23:
  v92 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
  v93 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v93)
  {
    v33 = *((_QWORD *)&v322 + 1);
    goto LABEL_27;
  }
  v94 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
  v95 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
  sub_1004BB5A4((_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v94);
  v96 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v95 + 8);
  v97 = swift_retain(v93);
  v98 = (void *)v96(v94, v95, v97);
  v99 = (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)v93 + 464))(v98, 0);
  if (v5)
  {
    swift_errorRelease(v5);
    swift_release(v93);

    v5 = 0;
  }
  else
  {
    v103 = v99;
    v104 = v100;
    swift_release(v93);

    v105 = objc_msgSend(a1, "encryptedValues");
    v106 = swift_getObjectType(v105);
    v326 = (ValueMetadata *)&type metadata for Data;
    v327 = &protocol witness table for Data;
    *(_QWORD *)&v325 = v103;
    *((_QWORD *)&v325 + 1) = v104;
    sub_1004BE310(v103, v104);
    CKRecordKeyValueSetting.subscript.setter(&v325, 0x6369666963657053, 0xEC00000061746144, v106);
    swift_unknownObjectRelease(v105);
    v107 = *(_QWORD *)(v3 + v92);
    if (v107)
    {
      v108 = *(uint64_t (**)(__n128))(*(_QWORD *)v107 + 576);
      v109 = swift_retain(*(_QWORD *)(v3 + v92));
      v110 = v108(v109);
      swift_release(v107);
      __chkstk_darwin(v111);
      v288 = v3;
      v289 = v333;
      v290 = (void **)&v332;
      sub_100B4AF14(v110, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4B164);
      sub_1004BBBC8(v103, v104);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004BBBC8(v103, v104);
    }
  }
  v101 = v324;
  v102 = v312;
  v33 = *((_QWORD *)&v322 + 1);
  if ((v316 & 1) == 0)
  {
LABEL_35:
    if (!(_DWORD)v317)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_33:
  v112 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v113 & 1) == 0 && v112 > 0)
    goto LABEL_35;
  v326 = (ValueMetadata *)&type metadata for Int;
  v327 = &protocol witness table for Int;
  *(_QWORD *)&v325 = 1;
  v114 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v325, 0x6E6F7473626D6F54, 0xEA00000000006465, v114);
  if ((v317 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v115 = CKRecord.subscript.getter(0x6E6F7473626D6F54);
  swift_unknownObjectRelease(v115);
  if (!v115
    || (v116 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v117 & 1) == 0)&& v116 >= 1)
  {
    v326 = (ValueMetadata *)&type metadata for Int;
    v327 = &protocol witness table for Int;
    *(_QWORD *)&v325 = 0;
    v118 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v325, 0x6E6F7473626D6F54, 0xEA00000000006465, v118);
  }
LABEL_42:
  if ((*(_BYTE *)(v3 + v33) & 0x20) != 0)
  {
    v119 = sub_100B38BCC(0xD000000000000012, 0x8000000100FF8360, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v120 & 1) != 0)
    {
      v121 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
    }
    else
    {
      v121 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
      if (v119 == v121)
        goto LABEL_48;
    }
    v326 = (ValueMetadata *)&type metadata for UInt64;
    v327 = &protocol witness table for UInt64;
    *(_QWORD *)&v325 = v121;
    v122 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000012, 0x8000000100FF8360, v122);
  }
LABEL_48:
  if ((*(_BYTE *)(v3 + v33) & 0x80) != 0)
  {
    v123 = sub_100B396BC(0xD000000000000027, 0x8000000100FF8330, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v124 & 1) != 0
      || v123 != *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 8))
    {
      v326 = &type metadata for CRLFeatureFlags;
      v327 = (void *)sub_1004DB6DC();
      LOBYTE(v325) = 23;
      v125 = isFeatureEnabled(_:)(&v325);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v325);
      if ((v125 & 1) != 0)
      {
        v126 = objc_msgSend(a1, "encryptedValues");
        v127 = swift_getObjectType(v126);
        v128 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 8);
        v326 = (ValueMetadata *)&type metadata for UInt64;
        v327 = &protocol witness table for UInt64;
        *(_QWORD *)&v325 = v128;
        CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000027, 0x8000000100FF8330, v127);
        swift_unknownObjectRelease(v126);
      }
    }
  }
  if ((v321 & 1) != 0 || (v129 = *(_QWORD *)(v3 + v33), (v129 & 0x100) != 0))
  {
    v130 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 16);
    v327 = &protocol witness table for UInt64;
    v326 = (ValueMetadata *)&type metadata for UInt64;
    *(_QWORD *)&v325 = v130;
    v131 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v325, 0xD000000000000021, 0x8000000100FF82E0, v131);
    v129 = *(_QWORD *)(v3 + v33);
  }
  if ((v129 & 0x40) != 0)
  {
    v132 = sub_100B396BC(0x704F7463656A624FLL, 0xEF455F736E6F6974, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v133 & 1) != 0 || v132 != *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions))
    {
      v134 = objc_msgSend(a1, "encryptedValues");
      v135 = swift_getObjectType(v134);
      v136 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
      v326 = (ValueMetadata *)&type metadata for UInt64;
      v327 = &protocol witness table for UInt64;
      *(_QWORD *)&v325 = v136;
      CKRecordKeyValueSetting.subscript.setter(&v325, 0x704F7463656A624FLL, 0xEF455F736E6F6974, v135);
      swift_unknownObjectRelease(v134);
    }
  }
  swift_bridgeObjectRetain(v333[0]);
  v138 = sub_1005FFABC(v137);
  swift_bridgeObjectRelease();
  __chkstk_darwin(v139);
  v290 = v140;
  v291 = v138;
  v141 = sub_1004B804C((uint64_t *)&unk_101406480);
  OS_dispatch_queue.sync<A>(execute:)(sub_100B4EC50, &v288, v141);
  swift_release(v138);
  if (v5)
  {
LABEL_61:
    if (qword_1013DD870 == -1)
    {
LABEL_62:
      swift_beginAccess(&static OS_os_log.dataSync, &v325, 0, 0);
      v142 = (void *)static OS_os_log.dataSync;
      v143 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v143, v331);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      swift_getErrorValue(v5, v330, v329);
      v145 = v329[1];
      v146 = v329[2];
      v147 = v142;
      v148 = Error.localizedDescription.getter(v145, v146);
      v150 = v149;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v151 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v151;
      *(_QWORD *)(inited + 32) = v148;
      *(_QWORD *)(inited + 40) = v150;
      v152 = static os_log_type_t.error.getter(v151);
      sub_100A06EBC((uint64_t)v147, &_mh_execute_header, v152, "Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, inited);
      swift_setDeallocating(inited);
      v153 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v153);

      swift_errorRelease(v5);
LABEL_143:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
LABEL_147:
    swift_once(&qword_1013DD870, sub_100A059E0);
    goto LABEL_62;
  }
  v321 = 0;
  v154 = *(_QWORD *)(v333[0] + 64);
  v294 = v333[0] + 64;
  v155 = v325;
  v156 = 1 << *(_BYTE *)(v333[0] + 32);
  v157 = -1;
  if (v156 < 64)
    v157 = ~(-1 << v156);
  v5 = v157 & v154;
  v295 = (unint64_t)(v156 + 63) >> 6;
  v293 = v295 - 1;
  v297 = v333[0];
  swift_bridgeObjectRetain(v333[0]);
  v158 = 0;
  v159 = v323;
  v298 = v155;
  v161 = v304;
  v160 = v305;
  if (!v5)
    goto LABEL_68;
LABEL_66:
  v310 = (v5 - 1) & v5;
  v311 = v158;
  for (i = __clz(__rbit64(v5)) | (v158 << 6); ; i = __clz(__rbit64(v169)) + (v168 << 6))
  {
    v163 = *(_QWORD *)(v297 + 56);
    v164 = (_QWORD *)(*(_QWORD *)(v297 + 48) + 16 * i);
    v165 = v164[1];
    *(_QWORD *)v160 = *v164;
    *((_QWORD *)v160 + 1) = v165;
    v166 = v163 + *(_QWORD *)(v101 + 72) * i;
    v167 = sub_1004B804C(&qword_101406490);
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(&v160[*(int *)(v167 + 48)], v166, v159);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v160, 0, 1, v167);
    swift_bridgeObjectRetain(v165);
    while (1)
    {
      sub_1004C4938((uint64_t)v160, (uint64_t)v161, &qword_1014053D8);
      v171 = sub_1004B804C(&qword_101406490);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 48))(v161, 1, v171) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release(v297);
        v5 = (unint64_t)v332;
        v263 = v332[7];
        *(_QWORD *)&v322 = v332 + 7;
        v264 = 1 << *((_BYTE *)v332 + 32);
        v265 = -1;
        if (v264 < 64)
          v265 = ~(-1 << v264);
        v266 = v265 & v263;
        *((_QWORD *)&v322 + 1) = (unint64_t)(v264 + 63) >> 6;
        v267 = swift_bridgeObjectRetain(v332);
        v101 = 0;
        if (v266)
          goto LABEL_116;
LABEL_117:
        if (__OFADD__(v101++, 1))
        {
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (v101 >= *((uint64_t *)&v322 + 1))
          goto LABEL_141;
        v271 = *(_QWORD *)(v322 + 8 * v101);
        if (v271)
        {
LABEL_127:
          v266 = (v271 - 1) & v271;
          for (j = __clz(__rbit64(v271)) + (v101 << 6); ; j = v268 | (v101 << 6))
          {
            v273 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * j);
            v274 = *v273;
            v275 = v273[1];
            v276 = v333[0];
            if (*(_QWORD *)(v333[0] + 16))
            {
              swift_bridgeObjectRetain_n(v275, 2);
              v277 = sub_100842E98(v274, v275);
              if ((v278 & 1) != 0)
              {
                v279 = *(_QWORD *)(v276 + 56);
                v280 = v324;
                v102 = v307;
                (*(void (**)(char *, unint64_t, uint64_t))(v324 + 16))(v307, v279 + *(_QWORD *)(v324 + 72) * v277, v159);
                (*(void (**)(const char *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v102, 0, 1, v159);
              }
              else
              {
                v280 = v324;
                v102 = v307;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v324 + 56))(v307, 1, 1, v159);
              }
              v281 = swift_bridgeObjectRelease();
            }
            else
            {
              v280 = v324;
              v102 = v307;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v324 + 56))(v307, 1, 1, v159, v267);
              v281 = swift_bridgeObjectRetain(v275);
            }
            if ((*(unsigned int (**)(const char *, uint64_t, uint64_t, __n128))(v280 + 48))(v102, 1, v159, v281) == 1)
            {
              sub_1004CB800((uint64_t)v102, (uint64_t *)&unk_1013E1A50);
              *(_QWORD *)&v325 = v274;
              *((_QWORD *)&v325 + 1) = v275;
              swift_bridgeObjectRetain(v275);
              v282._countAndFlagsBits = 0x7465737341;
              v282._object = (void *)0xE500000000000000;
              String.append(_:)(v282);
              v283 = v318;
              CKRecord.subscript.setter(0, v325, *((_QWORD *)&v325 + 1));
              v284 = objc_msgSend(v283, "encryptedValues");
              *(_QWORD *)&v325 = v274;
              *((_QWORD *)&v325 + 1) = v275;
              swift_bridgeObjectRetain(v275);
              v285._countAndFlagsBits = 0x74654D7465737341;
              v285._object = (void *)0xED00006174616461;
              String.append(_:)(v285);
              swift_bridgeObjectRelease();
              v286 = String._bridgeToObjectiveC()();
              objc_msgSend(v284, "setObject:forKeyedSubscript:", 0, v286, swift_bridgeObjectRelease().n128_f64[0]);
              v287 = v284;
              v159 = v323;
              swift_unknownObjectRelease(v287);

              if (!v266)
                goto LABEL_117;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_1004CB800((uint64_t)v102, (uint64_t *)&unk_1013E1A50);
              v102 = "Should not have to remove an asset at the same time it's marked for syncing.";
              sub_100757E04(&_mh_execute_header, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 805, "Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(to:store:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2u, 805, (uint64_t)"Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u);
              if (!v266)
                goto LABEL_117;
            }
LABEL_116:
            v268 = __clz(__rbit64(v266));
            v266 &= v266 - 1;
          }
        }
        v272 = v101 + 1;
        if (v101 + 1 >= *((uint64_t *)&v322 + 1))
          goto LABEL_141;
        v271 = *(_QWORD *)(v322 + 8 * v272);
        if (!v271)
        {
          v272 = v101 + 2;
          if (v101 + 2 >= *((uint64_t *)&v322 + 1))
            goto LABEL_141;
          v271 = *(_QWORD *)(v322 + 8 * v272);
          if (!v271)
          {
            v272 = v101 + 3;
            if (v101 + 3 < *((uint64_t *)&v322 + 1))
            {
              v271 = *(_QWORD *)(v322 + 8 * v272);
              if (v271)
                goto LABEL_126;
              while (1)
              {
                v101 = v272 + 1;
                if (__OFADD__(v272, 1))
                  break;
                if (v101 >= *((uint64_t *)&v322 + 1))
                  goto LABEL_141;
                v271 = *(_QWORD *)(v322 + 8 * v101);
                ++v272;
                if (v271)
                  goto LABEL_127;
              }
              __break(1u);
LABEL_149:
              swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_110:
              swift_beginAccess(&static OS_os_log.dataSync, &v325, 0, 0);
              v252 = (void *)static OS_os_log.dataSync;
              v253 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              v254 = swift_initStackObject(v253, &v328);
              *(_OWORD *)(v254 + 16) = xmmword_100EF5A10;
              *(_QWORD *)(v254 + 56) = &type metadata for String;
              v255 = sub_1004CFC2C();
              *(_QWORD *)(v254 + 64) = v255;
              *(_OWORD *)(v254 + 32) = v322;
              v256 = v252;
              v257 = UUID.uuidString.getter(v256);
              *(_QWORD *)(v254 + 96) = &type metadata for String;
              *(_QWORD *)(v254 + 104) = v255;
              *(_QWORD *)(v254 + 72) = v257;
              *(_QWORD *)(v254 + 80) = v258;
              v260 = static os_log_type_t.default.getter(v259);
              sub_100A06EBC((uint64_t)v256, &_mh_execute_header, v260, "Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, v254);
              swift_setDeallocating(v254);
              v261 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(v254 + 32, 2, v261);

              (*(void (**)(const char *, uint64_t))(v101 + 8))(v102, v323);
              v262 = v297;
LABEL_142:
              swift_release(v262);
              goto LABEL_143;
            }
LABEL_141:
            v262 = v5;
            goto LABEL_142;
          }
        }
LABEL_126:
        v101 = v272;
        goto LABEL_127;
      }
      v172 = v161[1];
      *(_QWORD *)&v322 = *v161;
      *((_QWORD *)&v322 + 1) = v172;
      v173 = (char *)v161 + *(int *)(v171 + 48);
      v174 = *(void (**)(const char *, char *, uint64_t))(v101 + 32);
      v174(v102, v173, v159);
      if (!*(_QWORD *)(v155 + 16) || (v175 = sub_100842EFC((uint64_t)v102), (v176 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        if (qword_1013DD870 == -1)
          goto LABEL_110;
        goto LABEL_149;
      }
      v306 = (void (*)(uint64_t, char *, uint64_t))v174;
      v177 = v320;
      v178 = v313;
      v179 = (char *)v313 + *(int *)(v320 + 48);
      v180 = v302;
      sub_1004CB7BC(*(_QWORD *)(v155 + 56) + *(_QWORD *)(v303 + 72) * v175, (uint64_t)v302, (uint64_t *)&unk_101406470);
      v181 = (char *)v180 + *(int *)(v177 + 48);
      v182 = *v180;
      *v178 = *v180;
      v183 = type metadata accessor for URL(0);
      v184 = *(_QWORD *)(v183 - 8);
      (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v179, v181, v183);
      v185 = v322;
      v325 = v322;
      swift_retain(v182);
      swift_bridgeObjectRetain(*((_QWORD *)&v185 + 1));
      v186._countAndFlagsBits = 0x7465737341;
      v186._object = (void *)0xE500000000000000;
      String.append(_:)(v186);
      v187 = *((_QWORD *)&v325 + 1);
      v309 = v325;
      v188 = *(int *)(v177 + 48);
      v189 = v182;
      v190 = (char *)v319 + v188;
      *v319 = v182;
      v315 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
      v316 = v179;
      v315(v190, v179, v183);
      v191 = objc_allocWithZone((Class)CKAsset);
      URL._bridgeToObjectiveC()(v192);
      v194 = v193;
      v195 = objc_msgSend(v191, "initWithFileURL:", v193);

      v196 = *(char **)(v184 + 8);
      v317 = v183;
      v314 = v196;
      ((void (*)(char *, uint64_t))v196)(v190, v183);
      v197 = v195;
      v198 = v318;
      CKRecord.subscript.setter(v197, v309, v187);
      v325 = v185;
      swift_bridgeObjectRetain_n(*((_QWORD *)&v185 + 1), 2);
      v199._countAndFlagsBits = 0x74654D7465737341;
      v199._object = (void *)0xED00006174616461;
      String.append(_:)(v199);
      swift_bridgeObjectRelease();
      sub_100B39450(v325, *((uint64_t *)&v325 + 1), 1, &v325);
      *(_QWORD *)&v200 = swift_bridgeObjectRelease().n128_u64[0];
      v201 = *((_QWORD *)&v325 + 1);
      if (*((_QWORD *)&v325 + 1) >> 60 == 15)
      {
        v159 = v323;
        v101 = v324;
      }
      else
      {
        v202 = v325;
        v203 = type metadata accessor for PropertyListDecoder(0);
        swift_allocObject(v203, *(unsigned int *)(v203 + 48), *(unsigned __int16 *)(v203 + 52));
        v204 = PropertyListDecoder.init()();
        v205 = sub_1004B7878(&qword_1014064A8, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC90);
        v206 = v308;
        v207 = v321;
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v308, v202, v201, v308, v205, v208);
        v209 = v323;
        v210 = v324;
        v321 = v207;
        if (v207)
        {
          swift_release(v204);
          sub_1004BE2FC(v202, v201);
          swift_release(v189);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1004CB800((uint64_t)v313, (uint64_t *)&unk_101406470);
          (*(void (**)(char *, uint64_t))(v210 + 8))(v312, v209);
          swift_release(v297);
          v5 = v321;
          goto LABEL_61;
        }
        v211 = swift_release(v204);
        v212 = v209;
        v213 = v296;
        (*(void (**)(char *, char *, uint64_t, __n128))(v210 + 16))(v296, v312, v212, v211);
        v214 = (char *)v319 + *(int *)(v320 + 48);
        v309 = v189;
        *v319 = v189;
        v215 = v317;
        v216 = ((uint64_t (*)(char *, char *, uint64_t))v315)(v214, v316, v317);
        v217 = v206;
        v218 = URL.pathExtension.getter(v216);
        v220 = v219;
        ((void (*)(char *, uint64_t))v314)(v214, v215);
        v221 = v300;
        v222 = v213;
        v159 = v212;
        v306(v300, v222, v212);
        v223 = *(int *)(v217 + 20);
        v224 = (uint64_t)v301;
        v225 = (uint64_t *)(v221 + v223);
        *v225 = v218;
        v225[1] = v220;
        if ((static UUID.== infix(_:_:)(v224) & 1) == 0)
          goto LABEL_91;
        v226 = (_QWORD *)(v224 + *(int *)(v308 + 20));
        v227 = v226[1];
        if (v227)
        {
          if (*v226 == v218 && v227 == v220)
          {
            sub_1004BE2FC(v202, v201);
            sub_1004B84A4(v300, type metadata accessor for CRLAssetSyncMetadata);
            sub_1004B84A4(v224, type metadata accessor for CRLAssetSyncMetadata);
            v101 = v324;
            v155 = v298;
LABEL_98:
            swift_release(v309);
            swift_bridgeObjectRelease();
            sub_1004CB800((uint64_t)v313, (uint64_t *)&unk_101406470);
            v102 = v312;
            (*(void (**)(char *, uint64_t))(v101 + 8))(v312, v159);
            goto LABEL_95;
          }
          v251 = _stringCompareWithSmolCheck(_:_:expecting:)(*v226, v227, v218, v220, 0);
          sub_1004BE2FC(v202, v201);
          sub_1004B84A4(v300, type metadata accessor for CRLAssetSyncMetadata);
          sub_1004B84A4(v224, type metadata accessor for CRLAssetSyncMetadata);
          v101 = v324;
          v198 = v318;
          v155 = v298;
          if ((v251 & 1) != 0)
            goto LABEL_98;
        }
        else
        {
LABEL_91:
          sub_1004BE2FC(v202, v201);
          sub_1004B84A4(v300, type metadata accessor for CRLAssetSyncMetadata);
          sub_1004B84A4(v224, type metadata accessor for CRLAssetSyncMetadata);
          v101 = v324;
          v198 = v318;
        }
        v189 = v309;
      }
      v228 = objc_msgSend(v198, "encryptedValues", v200);
      v325 = v322;
      swift_bridgeObjectRetain(*((_QWORD *)&v322 + 1));
      v229._countAndFlagsBits = 0x74654D7465737341;
      v229._object = (void *)0xED00006174616461;
      String.append(_:)(v229);
      v230 = swift_bridgeObjectRelease();
      *(_QWORD *)&v322 = *((_QWORD *)&v325 + 1);
      *((_QWORD *)&v322 + 1) = v325;
      v231 = (char *)v319 + *(int *)(v320 + 48);
      *v319 = v189;
      v232 = v317;
      ((void (*)(char *, char *, uint64_t, __n128))v315)(v231, v316, v317, v230);
      v233 = (uint64_t)v299;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v299, v189 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID, v159);
      v234 = v101;
      v235 = *(_QWORD *)(v189 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      v236 = *(_QWORD *)(v189 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain(v236);
      v237 = swift_release(v189);
      v238 = v308;
      v239 = (_QWORD *)(v233 + *(int *)(v308 + 20));
      *v239 = v235;
      v239[1] = v236;
      ((void (*)(char *, uint64_t, __n128))v314)(v231, v232, v237);
      v240 = type metadata accessor for PropertyListEncoder(0);
      swift_allocObject(v240, *(unsigned int *)(v240 + 48), *(unsigned __int16 *)(v240 + 52));
      v242 = PropertyListEncoder.init()(v241);
      dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
      v243 = sub_1004B7878((unint64_t *)&unk_101406498, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC68);
      v244 = v321;
      v246 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v233, v238, v243, v245);
      v321 = v244;
      if (v244)
        goto LABEL_151;
      v248 = v246;
      v249 = v247;
      v250 = swift_getObjectType(v228);
      swift_release(v242);
      sub_1004B84A4(v233, type metadata accessor for CRLAssetSyncMetadata);
      v326 = (ValueMetadata *)&type metadata for Data;
      v327 = &protocol witness table for Data;
      *(_QWORD *)&v325 = v248;
      *((_QWORD *)&v325 + 1) = v249;
      CKRecordKeyValueSetting.subscript.setter(&v325, *((_QWORD *)&v322 + 1), v322, v250);
      swift_unknownObjectRelease(v228);
      sub_1004CB800((uint64_t)v313, (uint64_t *)&unk_101406470);
      v102 = v312;
      v159 = v323;
      (*(void (**)(char *, uint64_t))(v234 + 8))(v312, v323);
      v101 = v234;
      v155 = v298;
LABEL_95:
      v5 = v310;
      v158 = v311;
      v161 = v304;
      v160 = v305;
      if (v310)
        goto LABEL_66;
LABEL_68:
      v168 = v158 + 1;
      if (__OFADD__(v158, 1))
        goto LABEL_146;
      if (v168 >= v295)
      {
LABEL_78:
        v311 = v158;
        goto LABEL_79;
      }
      v169 = *(_QWORD *)(v294 + 8 * v168);
      if (v169)
        goto LABEL_71;
      v158 += 2;
      if (v168 + 1 < v295)
        break;
LABEL_108:
      v311 = v168;
LABEL_79:
      v170 = sub_1004B804C(&qword_101406490);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v160, 1, 1, v170);
      v310 = 0;
    }
    v169 = *(_QWORD *)(v294 + 8 * v158);
    if (v169)
      goto LABEL_74;
    if (v168 + 2 >= v295)
      goto LABEL_78;
    v169 = *(_QWORD *)(v294 + 8 * (v168 + 2));
    if (!v169)
      break;
    v168 += 2;
LABEL_71:
    v310 = (v169 - 1) & v169;
    v311 = v168;
  }
  v158 = v168 + 3;
  if (v168 + 3 >= v295)
  {
    v311 = v168 + 2;
    goto LABEL_79;
  }
  v169 = *(_QWORD *)(v294 + 8 * v158);
  if (v169)
  {
LABEL_74:
    v168 = v158;
    goto LABEL_71;
  }
  while (1)
  {
    v168 = v158 + 1;
    if (__OFADD__(v158, 1))
      break;
    if (v168 >= v295)
    {
      v168 = v293;
      goto LABEL_108;
    }
    v169 = *(_QWORD *)(v294 + 8 * v168);
    ++v158;
    if (v169)
      goto LABEL_71;
  }
  __break(1u);
LABEL_151:
  swift_unexpectedError(v321, "Freeform/CRLAssetSyncMetadata.swift", 35, 1, 31);
  __break(1u);
}

Class sub_100B41E24(uint64_t a1)
{
  return sub_100B3FB6C(a1);
}

void sub_100B41E44(void *a1, uint64_t a2)
{
  sub_100B3FEF0(a1, a2);
}

CKRecordID sub_100B41E64()
{
  _QWORD *v0;
  Class v1;
  Swift::String v2;

  v1 = sub_100B4AD90(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v2._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CKRecordNameZoneWideShare);
  return CKRecordID.init(recordName:zoneID:)(v2, (CKRecordZoneID)v1);
}

uint64_t sub_100B41ECC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100B41F04 + 4 * byte_100F27E20[a1]))(0x6574496472616F42, 0xE90000000000006DLL);
}

uint64_t sub_100B41F04()
{
  return 0x6472616F42;
}

uint64_t sub_100B41F18()
{
  return 0x74654D6472616F42;
}

unint64_t sub_100B41F3C()
{
  return 0xD000000000000015;
}

uint64_t sub_100B41FB4()
{
  return 0x74696B64756F6C63;
}

uint64_t sub_100B41FD8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform34CRLBoardShareSyncLocalChangeRecord_unsyncedChanges);
}

void *sub_100B41FEC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
  v2 = v1;
  return v1;
}

CKRecordID sub_100B42020()
{
  _QWORD *v0;
  Class v1;
  uint64_t v2;
  Swift::String v3;

  v1 = sub_100B4AD90(*v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  v2 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v3._countAndFlagsBits = UUID.uuidString.getter(v2);
  return CKRecordID.init(recordName:zoneID:)(v3, (CKRecordZoneID)v1);
}

BOOL sub_100B4208C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges) != 0;
}

void sub_100B420A8(void *a1, void (*a2)(char *, uint64_t, uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  Swift::String v64;
  Class isa;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  Swift::String v82;
  Class v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  void (*v145)(uint64_t, char *, uint64_t);
  Swift::String v146;
  char *v147;
  uint64_t v148;
  uint64_t *v149;
  char *v150;
  void (*v151)(char *, uint64_t, uint64_t, __n128);
  id v152;
  NSURL *v153;
  void *v154;
  void *v155;
  id v156;
  void (*v157)(char *, uint64_t);
  id v158;
  uint64_t v159;
  Swift::String v160;
  __n128 v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __n128 v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  __n128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t inited;
  unint64_t v185;
  id v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  __n128 v190;
  uint64_t v191;
  uint64_t v192;
  __n128 v193;
  uint64_t v194;
  int64_t v195;
  _QWORD *v196;
  Class v197;
  Class v198;
  int64_t v199;
  char *v200;
  _QWORD *v201;
  char *v202;
  uint64_t *v203;
  uint64_t *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t *v208;
  char *v209;
  void *v210;
  char *v211;
  uint64_t *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  void (*v216)(char *, uint64_t, uint64_t, __n128);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD v227[3];
  uint64_t v228;
  uint64_t v229;
  char v230[24];
  char v231[32];
  char v232[24];
  _QWORD *v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;

  v216 = a2;
  v223 = 0;
  v207 = type metadata accessor for CRLAssetSyncMetadata(0);
  __chkstk_darwin(v207);
  v206 = (char *)&v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_1004B804C((uint64_t *)&unk_101406470);
  v205 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v204 = (uint64_t *)((char *)&v194 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v203 = (uint64_t *)((char *)&v194 - v7);
  __chkstk_darwin(v8);
  v212 = (uint64_t *)((char *)&v194 - v9);
  v10 = sub_1004B804C(&qword_1014053D8);
  __chkstk_darwin(v10);
  v211 = (char *)&v194 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v208 = (uint64_t *)((char *)&v194 - v13);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v14);
  v215 = (char *)&v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v202 = (char *)&v194 - v17;
  v225 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v209 = (char *)&v194 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v214 = (char *)&v194 - v21;
  __chkstk_darwin(v22);
  v200 = (char *)&v194 - v23;
  v219 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v219);
  v217 = (uint64_t)&v194 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v194 - v26;
  v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
  *(_QWORD *)&v236 = &type metadata for UInt64;
  *((_QWORD *)&v236 + 1) = &protocol witness table for UInt64;
  v234 = v29;
  v30 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000021, 0x8000000100FF82E0, v30);
  *(_QWORD *)&v236 = &type metadata for UInt64;
  *((_QWORD *)&v236 + 1) = &protocol witness table for UInt64;
  v234 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000019, 0x8000000100FF8310, v30);
  v31 = v28[1];
  *(_QWORD *)&v236 = &type metadata for UInt64;
  *((_QWORD *)&v236 + 1) = &protocol witness table for UInt64;
  v234 = v31;
  CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000027, 0x8000000100FF8330, v30);
  v32 = *v28;
  *(_QWORD *)&v236 = &type metadata for UInt64;
  *((_QWORD *)&v236 + 1) = &protocol witness table for UInt64;
  v234 = v32;
  v220 = (uint64_t)"onForGoodEnoughFidelity";
  v213 = v30;
  CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000012, 0x8000000100FF8360, v30);
  v33 = v218;
  v233 = _swiftEmptyDictionarySingleton;
  v222 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData;
  v34 = *(uint64_t **)(v218 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  v35 = &OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  v224 = v18;
  v210 = a1;
  if (v34)
  {
    v36 = *(_QWORD *)(v218 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 24);
    v37 = *(_QWORD *)(v218 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 32);
    sub_1004BB5A4((_QWORD *)(v218 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext), v36);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 8);
    v39 = swift_retain(v34);
    v40 = (_QWORD *)v38(v36, v37, v39);
    v41 = (uint64_t)v34 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess((char *)v34 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v232, 0, 0);
    sub_1004B8460(v41, (uint64_t)v27, type metadata accessor for CRLBoardCRDTData);
    if (qword_1013DCB10 == -1)
      goto LABEL_3;
    goto LABEL_66;
  }
  v48 = (uint64_t)v202;
  while (1)
  {
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v56 = v225;
    v55(v48, 1, 1, v225);
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v200, v33 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID, v56);
    sub_1004CB800(v48, (uint64_t *)&unk_1013E1A50);
LABEL_13:
    v58 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v59 = UUID.uuidString.getter(v58);
    v61 = v60;
    v62 = objc_msgSend(a1, "recordID");
    v63 = objc_msgSend(v62, "zoneID");

    v64._countAndFlagsBits = v59;
    v64._object = v61;
    isa = CKRecordID.init(recordName:zoneID:)(v64, (CKRecordZoneID)v63).super.isa;
    v66 = objc_allocWithZone((Class)CKReference);
    v198 = isa;
    CKRecord.subscript.setter(objc_msgSend(v66, "initWithRecordID:action:", isa, 0), 0xD000000000000016, 0x8000000100FF8740);
    v67 = *(_QWORD *)(v33 + v222);
    v68 = v33;
    if (v67)
    {
      v69 = v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v67 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v230, 0, 0);
      v70 = v217;
      sub_1004B8460(v69, v217, type metadata accessor for CRLBoardCRDTData);
      type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
      v71 = sub_1004B804C(&qword_1013E1A80);
      v72 = (uint64_t)v215;
      CRRegister.wrappedValue.getter(v71);
      sub_1004B84A4(v70, type metadata accessor for CRLBoardCRDTData);
      v73 = v225;
      v55(v72, 0, 1, v225);
      v74 = v224;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v72, 1, v73) != 1)
      {
        v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 32))(v214, v72, v73);
        goto LABEL_18;
      }
    }
    else
    {
      v72 = (uint64_t)v215;
      v73 = v225;
      v55((uint64_t)v215, 1, 1, v225);
      v74 = v224;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v214, v68 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v73);
    v75 = sub_1004CB800(v72, (uint64_t *)&unk_1013E1A50);
LABEL_18:
    v76 = v68;
    v77 = UUID.uuidString.getter(v75);
    v79 = v78;
    v80 = objc_msgSend(a1, "recordID");
    v81 = objc_msgSend(v80, "zoneID");

    v82._countAndFlagsBits = v77;
    v82._object = v79;
    v83 = CKRecordID.init(recordName:zoneID:)(v82, (CKRecordZoneID)v81).super.isa;
    v84 = objc_allocWithZone((Class)CKReference);
    v197 = v83;
    CKRecord.subscript.setter(objc_msgSend(v84, "initWithRecordID:action:", v83, 0), 0xD00000000000001FLL, 0x8000000100FF8760);
    if (*(_QWORD *)(v76 + v222))
    {
      v85 = sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
      __chkstk_darwin(v85);
      *(&v194 - 2) = (uint64_t)&v233;
      v86 = v223;
      sub_100B4AF14(v87, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4E3A0);
      v223 = v86;
      swift_bridgeObjectRelease();
    }
    v88 = v211;
    v35 = v212;
    v89 = v213;
    *(_QWORD *)&v236 = &type metadata for Int;
    *((_QWORD *)&v236 + 1) = &protocol witness table for Int;
    v234 = 0;
    CKRecordKeyValueSetting.subscript.setter(&v234, 0x6E6F7473626D6F54, 0xEA00000000006465, v213);
    v90 = sub_100B38BCC(0xD000000000000012, v220 | 0x8000000000000000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v91 & 1) != 0)
    {
      v90 = 0;
      v236 = 0u;
      v235 = 0u;
    }
    else
    {
      *(_QWORD *)&v236 = &type metadata for UInt64;
      *((_QWORD *)&v236 + 1) = &protocol witness table for UInt64;
    }
    v234 = v90;
    CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000012, v220 | 0x8000000000000000, v89);
    *(_QWORD *)&v236 = &type metadata for Int;
    *((_QWORD *)&v236 + 1) = &protocol witness table for Int;
    v234 = 0;
    CKRecordKeyValueSetting.subscript.setter(&v234, 0xD000000000000019, 0x8000000100FF8780, v89);
    swift_bridgeObjectRetain(v233);
    v40 = sub_1005FFABC(v92);
    swift_bridgeObjectRelease();
    __chkstk_darwin(v93);
    *(&v194 - 2) = v94;
    *(&v194 - 1) = (uint64_t)v40;
    v95 = sub_1004B804C((uint64_t *)&unk_101406480);
    v96 = v223;
    OS_dispatch_queue.sync<A>(execute:)(sub_100B4EC50, &v194 - 4, v95);
    v222 = v96;
    if (v96)
      break;
    swift_release(v40);
    v115 = v233[8];
    v196 = v233 + 8;
    v201 = v233;
    v202 = (char *)v234;
    v116 = 1 << *((_BYTE *)v233 + 32);
    v117 = -1;
    if (v116 < 64)
      v117 = ~(-1 << v116);
    v118 = v117 & v115;
    v199 = (unint64_t)(v116 + 63) >> 6;
    v195 = v199 - 1;
    swift_bridgeObjectRetain(v233);
    v119 = 0;
    v34 = &qword_101406490;
    v120 = (uint64_t)v209;
    v27 = v214;
    if (v118)
    {
LABEL_31:
      v219 = v119;
      v220 = (v118 - 1) & v118;
      v121 = __clz(__rbit64(v118)) | (v119 << 6);
      goto LABEL_32;
    }
    while (1)
    {
      v128 = v119 + 1;
      if (__OFADD__(v119, 1))
        break;
      if (v128 >= v199)
        goto LABEL_43;
      v129 = v196[v128];
      if (v129)
        goto LABEL_36;
      v119 += 2;
      if (v128 + 1 >= v199)
      {
LABEL_59:
        v219 = v128;
        goto LABEL_44;
      }
      v129 = v196[v119];
      if (v129)
        goto LABEL_39;
      if (v128 + 2 >= v199)
      {
LABEL_43:
        v219 = v119;
      }
      else
      {
        v129 = v196[v128 + 2];
        if (v129)
        {
          v128 += 2;
          goto LABEL_36;
        }
        v119 = v128 + 3;
        if (v128 + 3 < v199)
        {
          v129 = v196[v119];
          if (!v129)
          {
            while (1)
            {
              v128 = v119 + 1;
              if (__OFADD__(v119, 1))
                break;
              if (v128 >= v199)
              {
                v128 = v195;
                goto LABEL_59;
              }
              v129 = v196[v128];
              ++v119;
              if (v129)
                goto LABEL_36;
            }
            __break(1u);
LABEL_68:
            swift_unexpectedError(v222, "Freeform/CRLAssetSyncMetadata.swift", 35, 1, 31);
            __break(1u);
            return;
          }
LABEL_39:
          v128 = v119;
LABEL_36:
          v219 = v128;
          v220 = (v129 - 1) & v129;
          v121 = __clz(__rbit64(v129)) + (v128 << 6);
LABEL_32:
          v122 = v201[7];
          v123 = (_QWORD *)(v201[6] + 16 * v121);
          v124 = v123[1];
          *(_QWORD *)v88 = *v123;
          *((_QWORD *)v88 + 1) = v124;
          v125 = v224;
          v126 = v122 + *(_QWORD *)(v224 + 72) * v121;
          v127 = sub_1004B804C(&qword_101406490);
          (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(&v88[*(int *)(v127 + 48)], v126, v225);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v88, 0, 1, v127);
          swift_bridgeObjectRetain(v124);
          goto LABEL_45;
        }
        v219 = v128 + 2;
      }
LABEL_44:
      v130 = sub_1004B804C(&qword_101406490);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v88, 1, 1, v130);
      v220 = 0;
LABEL_45:
      v131 = v208;
      sub_1004C4938((uint64_t)v88, (uint64_t)v208, &qword_1014053D8);
      v132 = sub_1004B804C(&qword_101406490);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 48))(v131, 1, v132) == 1)
      {
        swift_release(v201);

        swift_bridgeObjectRelease();
        v110 = *(void (**)(char *, uint64_t))(v224 + 8);
        v111 = v27;
        goto LABEL_27;
      }
      v133 = v131[1];
      v223 = *v131;
      v134 = v225;
      (*(void (**)(uint64_t, char *, uint64_t))(v224 + 32))(v120, (char *)v131 + *(int *)(v132 + 48), v225);
      v135 = v202;
      if (!*((_QWORD *)v202 + 2) || (v136 = sub_100842EFC(v120), (v137 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        if (qword_1013DD870 != -1)
          swift_once(&qword_1013DD870, sub_100A059E0);
        swift_beginAccess(&static OS_os_log.dataSync, &v234, 0, 0);
        v182 = (void *)static OS_os_log.dataSync;
        v183 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v183, &v226);
        *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v185 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v185;
        *(_QWORD *)(inited + 32) = v223;
        *(_QWORD *)(inited + 40) = v133;
        v186 = v182;
        v187 = v209;
        v188 = UUID.uuidString.getter(v186);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v185;
        *(_QWORD *)(inited + 72) = v188;
        *(_QWORD *)(inited + 80) = v189;
        v191 = static os_log_type_t.default.getter(v190);
        sub_100A06EBC((uint64_t)v186, &_mh_execute_header, v191, "Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, inited);
        swift_setDeallocating(inited);
        v192 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 2, v192);

        v110 = *(void (**)(char *, uint64_t))(v224 + 8);
        v110(v187, v134);
        v193 = swift_release(v201);
        ((void (*)(char *, uint64_t, __n128))v110)(v214, v134, v193);
        v113 = v200;
        v114 = v134;
        goto LABEL_63;
      }
      v138 = v221;
      v139 = (uint64_t)v35 + *(int *)(v221 + 48);
      v140 = v203;
      sub_1004CB7BC(*((_QWORD *)v135 + 7) + *(_QWORD *)(v205 + 72) * v136, (uint64_t)v203, (uint64_t *)&unk_101406470);
      v141 = (char *)v140 + *(int *)(v138 + 48);
      v142 = *v140;
      *v35 = *v140;
      v143 = type metadata accessor for URL(0);
      v144 = *(_QWORD **)(v143 - 8);
      v145 = (void (*)(uint64_t, char *, uint64_t))v144[4];
      v217 = v139;
      v145(v139, v141, v143);
      v234 = v223;
      *(_QWORD *)&v235 = v133;
      swift_retain(v142);
      swift_bridgeObjectRetain(v133);
      v146._countAndFlagsBits = 0x7465737341;
      v146._object = (void *)0xE500000000000000;
      String.append(_:)(v146);
      v218 = v234;
      v147 = (char *)v235;
      v148 = *(int *)(v138 + 48);
      v149 = v204;
      v150 = (char *)v204 + v148;
      *v204 = v142;
      v151 = (void (*)(char *, uint64_t, uint64_t, __n128))v144[2];
      v215 = v147;
      v216 = v151;
      ((void (*)(char *, uint64_t, uint64_t))v151)(v150, v139, v143);
      v152 = objc_allocWithZone((Class)CKAsset);
      URL._bridgeToObjectiveC()(v153);
      v155 = v154;
      v156 = objc_msgSend(v152, "initWithFileURL:", v154);

      v157 = (void (*)(char *, uint64_t))v144[1];
      v157(v150, v143);
      v158 = v156;
      v159 = v225;
      CKRecord.subscript.setter(v158, v218, v215);
      v234 = v223;
      *(_QWORD *)&v235 = v133;
      swift_bridgeObjectRetain(v133);
      v160._countAndFlagsBits = 0x74654D7465737341;
      v160._object = (void *)0xED00006174616461;
      String.append(_:)(v160);
      v161 = swift_bridgeObjectRelease();
      v223 = v234;
      v218 = v235;
      v162 = (char *)v149 + *(int *)(v221 + 48);
      *v149 = v142;
      v163 = v143;
      v216(v162, v217, v143, v161);
      v164 = v224;
      v165 = (uint64_t)v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v206, v142 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID, v159);
      v167 = *(_QWORD *)(v142 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      v166 = *(_QWORD *)(v142 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain(v166);
      v168 = swift_release(v142);
      v169 = v207;
      v170 = (_QWORD *)(v165 + *(int *)(v207 + 20));
      *v170 = v167;
      v170[1] = v166;
      ((void (*)(char *, uint64_t, __n128))v157)(v162, v163, v168);
      v171 = type metadata accessor for PropertyListEncoder(0);
      swift_allocObject(v171, *(unsigned int *)(v171 + 48), *(unsigned __int16 *)(v171 + 52));
      v173 = PropertyListEncoder.init()(v172);
      dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
      v40 = type metadata accessor for CRLAssetSyncMetadata;
      v174 = sub_1004B7878((unint64_t *)&unk_101406498, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC68);
      v175 = v222;
      v177 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v165, v169, v174, v176);
      v222 = v175;
      if (v175)
        goto LABEL_68;
      v179 = v177;
      v180 = v178;
      swift_release(v173);
      sub_1004B84A4(v165, type metadata accessor for CRLAssetSyncMetadata);
      *(_QWORD *)&v236 = &type metadata for Data;
      *((_QWORD *)&v236 + 1) = &protocol witness table for Data;
      v234 = v179;
      *(_QWORD *)&v235 = v180;
      CKRecordKeyValueSetting.subscript.setter(&v234, v223, v218, v213);
      v181 = (uint64_t)v212;
      sub_1004CB800((uint64_t)v212, (uint64_t *)&unk_101406470);
      v120 = (uint64_t)v209;
      (*(void (**)(char *, uint64_t))(v164 + 8))(v209, v159);
      v27 = v214;
      v35 = (uint64_t *)v181;
      v88 = v211;
      v34 = &qword_101406490;
      v119 = v219;
      v118 = v220;
      if (v220)
        goto LABEL_31;
    }
    __break(1u);
LABEL_66:
    swift_once(&qword_1013DCB10, sub_1005DE88C);
LABEL_3:
    v42 = type metadata accessor for CRCodableVersion(0);
    v43 = sub_1004F2A1C(v42, (uint64_t)qword_10147EB08);
    v44 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
    v45 = v223;
    v46 = CRDT.serializedData(_:version:)(v40, v43, v219, v44);
    if (v45)
    {
      sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardCRDTData);
      swift_errorRelease(v45);
      swift_release(v34);

    }
    else
    {
      v49 = v46;
      v50 = v47;
      sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardCRDTData);
      swift_release(v34);

      *(_QWORD *)&v236 = &type metadata for Data;
      *((_QWORD *)&v236 + 1) = &protocol witness table for Data;
      v234 = v49;
      *(_QWORD *)&v235 = v50;
      sub_1004BE310(v49, v50);
      CKRecordKeyValueSetting.subscript.setter(&v234, 0x7461446472616F42, 0xE900000000000061, v213);
      sub_1004BBBC8(v49, v50);
    }
    v18 = v224;
    v223 = 0;
    v33 = v218;
    v51 = *(_QWORD *)(v218 + v222);
    v48 = (uint64_t)v202;
    if (v51)
    {
      v52 = v51 + *v35;
      swift_beginAccess(v52, v231, 0, 0);
      v53 = v217;
      sub_1004B8460(v52, v217, type metadata accessor for CRLBoardCRDTData);
      v54 = sub_1004B804C(&qword_1013E1A80);
      CRRegister.wrappedValue.getter(v54);
      sub_1004B84A4(v53, type metadata accessor for CRLBoardCRDTData);
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v56 = v225;
      v55(v48, 0, 1, v225);
      v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v48, 1, v56);
      a1 = v210;
      if (v57 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v200, v48, v56);
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    a1 = v210;
  }
  swift_release(v40);
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v234, 0, 0);
  v97 = (void *)static OS_os_log.dataSync;
  v98 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v99 = swift_initStackObject(v98, &v229);
  *(_OWORD *)(v99 + 16) = xmmword_100EF5E40;
  v100 = v222;
  swift_getErrorValue(v222, &v228, v227);
  v101 = v227[1];
  v102 = v227[2];
  v103 = v97;
  v104 = Error.localizedDescription.getter(v101, v102);
  v106 = v105;
  *(_QWORD *)(v99 + 56) = &type metadata for String;
  v107 = sub_1004CFC2C();
  *(_QWORD *)(v99 + 64) = v107;
  *(_QWORD *)(v99 + 32) = v104;
  *(_QWORD *)(v99 + 40) = v106;
  v108 = static os_log_type_t.error.getter(v107);
  sub_100A06EBC((uint64_t)v103, &_mh_execute_header, v108, "Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, v99);
  swift_setDeallocating(v99);
  v109 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v99 + 32, 1, v109);

  swift_errorRelease(v100);
  v110 = *(void (**)(char *, uint64_t))(v224 + 8);
  v111 = v214;
LABEL_27:
  v112 = v225;
  v110(v111, v225);
  v113 = v200;
  v114 = v112;
LABEL_63:
  v110(v113, v114);
  swift_bridgeObjectRelease();
}

uint64_t sub_100B4346C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - v10;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a3, (uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013E1A50);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v17 = sub_1004F2A1C(v12, (uint64_t)qword_101481278);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v15, v17) & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    swift_bridgeObjectRetain(a2);
    v18.n128_f64[0] = sub_10083EC74((uint64_t)v8, a1, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v18);
}

Class sub_100B43668(void (*a1)(char *, uint64_t, uint64_t, __n128), uint64_t a2)
{
  Class isa;
  objc_class *v4;
  Swift::String v5;
  Class v6;

  isa = sub_100B4E224(a2).super.isa;
  sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  v4 = isa;
  v5._countAndFlagsBits = 0x425F63696C627550;
  v5._object = (void *)0xEC0000006472616FLL;
  v6 = CKRecord.init(recordType:recordID:)(v5, (CKRecordID)v4).super.isa;
  sub_100B420A8(v6, a1);

  return v6;
}

Class sub_100B43708(void (*a1)(char *, uint64_t, __n128))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  Class v8;
  uint64_t v9;
  Swift::String v10;
  Class isa;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  Class v25;
  _BYTE v27[72];
  _BYTE v28[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  if (v5 >> 60 == 15)
    goto LABEL_3;
  v6 = *v4;
  v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_10057939C(v6, v5);
  v23 = sub_100B4DA14();
  v24 = objc_msgSend(objc_allocWithZone((Class)CKRecord), "initWithCoder:", v23);
  sub_1004BE2FC(v6, v5);
  v25 = (Class)v24;

  if (!v25)
  {
LABEL_3:
    sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    v8 = sub_100B4AD90(v2 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
    v9 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v10._countAndFlagsBits = UUID.uuidString.getter(v9);
    isa = CKRecordID.init(recordName:zoneID:)(v10, (CKRecordZoneID)v8).super.isa;
    v12._countAndFlagsBits = 0x6472616F42;
    v12._object = (void *)0xE500000000000000;
    v25 = CKRecord.init(recordType:recordID:)(v12, (CKRecordID)isa).super.isa;
    if ((unint64_t)v4[1] >> 60 != 15)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v28, 0, 0);
      v13 = (void *)static OS_os_log.dataSync;
      v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v14, v27);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v16 = v13;
      v17 = UUID.uuidString.getter(v16);
      v19 = v18;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v20 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v20;
      *(_QWORD *)(inited + 32) = v17;
      *(_QWORD *)(inited + 40) = v19;
      v21 = static os_log_type_t.error.getter(v20);
      sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v21, "Failed to use existing sync data to decode CKRecord for board with id %@", 72, 2, inited);
      swift_setDeallocating(inited);
      v22 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v22);

    }
  }
  else
  {

  }
  sub_100B43A20(v25, a1);
  return v25;
}

void sub_100B43A20(_QWORD *a1, void (*a2)(char *, uint64_t, __n128))
{
  uint64_t v2;
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  id v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, __n128);
  __n128 v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  id v83;
  id v84;
  Swift::String v85;
  CKRecordID v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  id v101;
  Swift::String v102;
  CKRecordID v103;
  unint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t inited;
  id v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  int64_t v145;
  char v146;
  id v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  void **v153;
  uint64_t v154;
  int64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  int64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  char *v175;
  unint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t, char *, uint64_t);
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t *v192;
  char *v193;
  uint64_t *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int64_t v199;
  Swift::String v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  id v205;
  NSURL *v206;
  void *v207;
  void *v208;
  id v209;
  void (*v210)(char *, uint64_t, __n128);
  id v211;
  Swift::String v212;
  double v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int64_t v220;
  __n128 v221;
  int64_t v222;
  __n128 v223;
  void (*v224)(char *, char *, uint64_t, __n128);
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  _QWORD *v237;
  uint64_t v238;
  id v239;
  Swift::String v240;
  __n128 v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int64_t v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  __n128 v253;
  uint64_t v254;
  uint64_t v255;
  int64_t v256;
  __n128 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  __n128 v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  __n128 v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v284;
  int64_t v285;
  uint64_t *v286;
  uint64_t v287;
  uint64_t v288;
  _QWORD *v289;
  unint64_t v290;
  char v291;
  uint64_t v292;
  int64_t v293;
  uint64_t v294;
  __n128 v295;
  Swift::String v296;
  id v297;
  id v298;
  Swift::String v299;
  NSString v300;
  id v301;
  _QWORD v302[2];
  void **v303;
  _QWORD *v304;
  int64_t v305;
  _QWORD *v306;
  int64_t v307;
  char *v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t *v315;
  uint64_t v316;
  char *v317;
  char *v318;
  void (*v319)(uint64_t, char *, uint64_t);
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  uint64_t *v326;
  void (*v327)(char *, uint64_t, __n128);
  void (*v328)(char *, char *, uint64_t);
  char *v329;
  uint64_t v330;
  _QWORD *v331;
  uint64_t v332;
  id v333;
  int64_t v334;
  int64_t v335;
  uint64_t v336;
  int64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  __int128 v343;
  ValueMetadata *v344;
  void *v345;
  uint64_t v346;
  _QWORD v347[3];
  char v348[8];
  char v349[80];
  char *v350;
  _QWORD *v351;

  v3 = v2;
  v327 = (void (*)(char *, uint64_t, __n128))a2;
  v334 = 0;
  v320 = type metadata accessor for CRLAssetSyncMetadata(0);
  __chkstk_darwin(v320);
  v311 = (char *)&v305 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v313 = (uint64_t)&v305 - v7;
  __chkstk_darwin(v8);
  v314 = (char *)&v305 - v9;
  v332 = sub_1004B804C((uint64_t *)&unk_101406470);
  v316 = *(_QWORD *)(v332 - 8);
  __chkstk_darwin(v332);
  v331 = (int64_t *)((char *)&v305 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v315 = (int64_t *)((char *)&v305 - v12);
  __chkstk_darwin(v13);
  v326 = (int64_t *)((char *)&v305 - v14);
  v15 = sub_1004B804C(&qword_1014053D8);
  __chkstk_darwin(v15);
  v318 = (char *)&v305 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v317 = (char *)&v305 - v18;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v19);
  v321 = (char *)&v305 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v310 = (char *)&v305 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v305 - v24;
  v336 = type metadata accessor for UUID(0);
  v26 = *(_QWORD *)(v336 - 8);
  __chkstk_darwin(v336);
  v308 = (char *)&v305 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v325 = (char *)&v305 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v305 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v305 - v34;
  v328 = (void (*)(char *, char *, uint64_t))type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v328);
  v312 = (uint64_t)&v305 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v305 - v39;
  v324 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges;
  v41 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges);
  v337 = v26;
  v333 = a1;
  v335 = v3;
  v322 = v41;
  v329 = v35;
  if ((v41 & 4) == 0)
  {
    if ((v41 & 0x10) == 0)
    {
      LODWORD(v323) = 0;
      LODWORD(v319) = 0;
      v42 = 0;
      if ((v41 & 1) == 0)
        goto LABEL_12;
LABEL_7:
      LODWORD(v309) = v42;
      v43 = v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions;
      v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
      v345 = &protocol witness table for UInt64;
      v344 = (ValueMetadata *)&type metadata for UInt64;
      *(_QWORD *)&v343 = v44;
      v45 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
      CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000012, 0x8000000100FF8360, v45);
      v344 = (ValueMetadata *)&type metadata for UInt64;
      v345 = &protocol witness table for UInt64;
      *(_QWORD *)&v343 = 0x1000000000000;
      CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000019, 0x8000000100FF8310, v45);
      v344 = &type metadata for CRLFeatureFlags;
      v345 = (void *)sub_1004DB6DC();
      LOBYTE(v343) = 23;
      v46 = isFeatureEnabled(_:)(&v343);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v343);
      if ((v46 & 1) != 0)
      {
        v47 = objc_msgSend(a1, "encryptedValues");
        ObjectType = swift_getObjectType(v47);
        v49 = *(_QWORD *)(v43 + 8);
        v345 = &protocol witness table for UInt64;
        v344 = (ValueMetadata *)&type metadata for UInt64;
        *(_QWORD *)&v343 = v49;
        CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000027, 0x8000000100FF8330, ObjectType);
        v38 = swift_unknownObjectRelease(v47);
      }
      v351 = _swiftEmptyDictionarySingleton;
      v350 = (char *)&_swiftEmptySetSingleton;
      v3 = v335;
      goto LABEL_16;
    }
    LODWORD(v319) = 0;
    v42 = 0;
    goto LABEL_11;
  }
  v42 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  LODWORD(v319) = v42 ^ 1;
  if ((v41 & 0x10) != 0)
  {
LABEL_11:
    LODWORD(v323) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
    if ((v41 & 1) != 0)
      goto LABEL_7;
    goto LABEL_12;
  }
  LODWORD(v323) = 0;
  if ((v41 & 1) != 0)
    goto LABEL_7;
LABEL_12:
  v350 = (char *)&_swiftEmptySetSingleton;
  v351 = _swiftEmptyDictionarySingleton;
  if ((v41 & 2) == 0)
  {
    v50 = v324;
    v51 = (uint64_t)v325;
    if (!v42)
      goto LABEL_40;
    goto LABEL_38;
  }
  LODWORD(v309) = v42;
LABEL_16:
  v330 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData;
  v52 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  if (!v52)
  {
    v66 = v337;
LABEL_27:
    v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v66 + 56);
    v76 = v336;
    v75(v25, 1, 1, v336, v38);
    goto LABEL_28;
  }
  v53 = (_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext);
  v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 24);
  v55 = v53[4];
  sub_1004BB5A4(v53, v54);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v55 + 8);
  v57 = swift_retain(v52);
  v58 = (void *)v56(v54, v55, v57);
  v59 = v52 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v52 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v340, 0, 0);
  sub_1004B8460(v59, (uint64_t)v40, type metadata accessor for CRLBoardCRDTData);
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v60 = type metadata accessor for CRCodableVersion(0);
  v61 = sub_1004F2A1C(v60, (uint64_t)qword_10147EB08);
  v62 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
  v63 = v334;
  v64 = CRDT.serializedData(_:version:)(v58, v61, v328, v62);
  if (v63)
  {
    sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLBoardCRDTData);
    swift_errorRelease(v63);
    swift_release(v52);

    v334 = 0;
  }
  else
  {
    v67 = v64;
    v68 = v65;
    v334 = 0;
    sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLBoardCRDTData);
    swift_release(v52);

    v69 = objc_msgSend(v333, "encryptedValues");
    v70 = swift_getObjectType(v69);
    v344 = (ValueMetadata *)&type metadata for Data;
    v345 = &protocol witness table for Data;
    *(_QWORD *)&v343 = v67;
    *((_QWORD *)&v343 + 1) = v68;
    sub_1004BE310(v67, v68);
    CKRecordKeyValueSetting.subscript.setter(&v343, 0x7461446472616F42, 0xE900000000000061, v70);
    sub_1004BBBC8(v67, v68);
    v38 = swift_unknownObjectRelease(v69);
  }
  v66 = v337;
  v3 = v335;
  v71 = *(_QWORD *)(v335 + v330);
  if (!v71)
  {
    a1 = v333;
    goto LABEL_27;
  }
  v72 = v71 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v71 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v339, 0, 0);
  v73 = v312;
  sub_1004B8460(v72, v312, type metadata accessor for CRLBoardCRDTData);
  v74 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v74);
  sub_1004B84A4(v73, type metadata accessor for CRLBoardCRDTData);
  v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v66 + 56);
  v76 = v336;
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v75)(v25, 0, 1, v336);
  v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v25, 1, v76);
  a1 = v333;
  if (v77 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v329, v25, v76);
    goto LABEL_29;
  }
LABEL_28:
  (*(void (**)(char *, int64_t, uint64_t))(v66 + 16))(v329, v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID, v76);
  sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E1A50);
LABEL_29:
  v78 = v3;
  v79 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v80 = UUID.uuidString.getter(v79);
  v82 = v81;
  v83 = objc_msgSend(a1, "recordID");
  v84 = objc_msgSend(v83, "zoneID");

  v85._countAndFlagsBits = v80;
  v85._object = v82;
  v86.super.isa = CKRecordID.init(recordName:zoneID:)(v85, (CKRecordZoneID)v84).super.isa;
  CKRecord.subscript.setter(objc_msgSend(objc_allocWithZone((Class)CKReference), "initWithRecordID:action:", v86.super.isa, 0), 0xD000000000000016, 0x8000000100FF8740);
  v87 = *(_QWORD *)(v78 + v330);
  v88 = v78;
  if (v87)
  {
    v89 = v87 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v87 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v338, 0, 0);
    v90 = v312;
    sub_1004B8460(v89, v312, type metadata accessor for CRLBoardCRDTData);
    type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
    v91 = sub_1004B804C(&qword_1013E1A80);
    v92 = (uint64_t)v310;
    CRRegister.wrappedValue.getter(v91);
    sub_1004B84A4(v90, type metadata accessor for CRLBoardCRDTData);
    v93 = v336;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v75)(v92, 0, 1, v336);
    v94 = v337;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v337 + 48))(v92, 1, v93) != 1)
    {
      v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 32))(v32, v92, v93);
      goto LABEL_34;
    }
  }
  else
  {
    v92 = (uint64_t)v310;
    v93 = v336;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)(v310, 1, 1, v336);
    v94 = v337;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v32, v88 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v93);
  v95 = sub_1004CB800(v92, (uint64_t *)&unk_1013E1A50);
LABEL_34:
  v96 = v88;
  v97 = UUID.uuidString.getter(v95);
  v99 = v98;
  a1 = v333;
  v100 = objc_msgSend(v333, "recordID");
  v101 = objc_msgSend(v100, "zoneID");

  v102._countAndFlagsBits = v97;
  v102._object = v99;
  v103.super.isa = CKRecordID.init(recordName:zoneID:)(v102, (CKRecordZoneID)v101).super.isa;
  CKRecord.subscript.setter(objc_msgSend(objc_allocWithZone((Class)CKReference), "initWithRecordID:action:", v103.super.isa, 0), 0xD00000000000001FLL, 0x8000000100FF8760);
  if (*(_QWORD *)(v96 + v330))
  {
    v104 = sub_1008D5968((uint64_t)_swiftEmptyArrayStorage);
    __chkstk_darwin(v104);
    v105 = v334;
    v302[0] = v335;
    v302[1] = &v351;
    v303 = (void **)&v350;
    sub_100B4AF14(v106, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100B4E3B8);
    v334 = v105;
    swift_bridgeObjectRelease();

    v107 = v336;
    v26 = v337;
    v108 = *(void (**)(char *, uint64_t))(v337 + 8);
    v108(v32, v336);
    v108(v329, v107);
    v3 = v335;
  }
  else
  {
    v3 = v96;

    v109 = v336;
    v26 = v337;
    v110 = *(void (**)(char *, uint64_t))(v337 + 8);
    v110(v32, v336);
    v110(v329, v109);
  }
  v50 = v324;
  v51 = (uint64_t)v325;
  if ((v309 & 1) == 0)
  {
LABEL_40:
    if (!(_DWORD)v319)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_38:
  v111 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v112 & 1) == 0 && v111 > 0)
    goto LABEL_40;
  v344 = (ValueMetadata *)&type metadata for Int;
  v345 = &protocol witness table for Int;
  *(_QWORD *)&v343 = 1;
  v113 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v343, 0x6E6F7473626D6F54, 0xEA00000000006465, v113);
  if ((v319 & 1) == 0)
    goto LABEL_47;
LABEL_43:
  v114 = CKRecord.subscript.getter(0x6E6F7473626D6F54);
  swift_unknownObjectRelease(v114);
  if (!v114
    || (v115 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v116 & 1) == 0)&& v115 >= 1)
  {
    v344 = (ValueMetadata *)&type metadata for Int;
    v345 = &protocol witness table for Int;
    *(_QWORD *)&v343 = 0;
    v117 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v343, 0x6E6F7473626D6F54, 0xEA00000000006465, v117);
  }
LABEL_47:
  if ((*(_BYTE *)(v3 + v50) & 8) != 0)
  {
    v118 = sub_100B38BCC(0xD000000000000012, 0x8000000100FF8360, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v119 & 1) != 0)
    {
      v120 = *(_QWORD *)(v335 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
    }
    else
    {
      v120 = *(_QWORD *)(v335 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
      if (v118 == v120)
        goto LABEL_53;
    }
    v344 = (ValueMetadata *)&type metadata for UInt64;
    v345 = &protocol witness table for UInt64;
    *(_QWORD *)&v343 = v120;
    v121 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000012, 0x8000000100FF8360, v121);
  }
LABEL_53:
  v122 = v335;
  if ((*(_BYTE *)(v335 + v50) & 0x20) != 0)
  {
    v123 = sub_100B396BC(0xD000000000000027, 0x8000000100FF8330, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v124 & 1) != 0
      || v123 != *(_QWORD *)(v122 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 8))
    {
      v344 = &type metadata for CRLFeatureFlags;
      v345 = (void *)sub_1004DB6DC();
      LOBYTE(v343) = 23;
      v125 = isFeatureEnabled(_:)(&v343);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v343);
      if ((v125 & 1) != 0)
      {
        v126 = objc_msgSend(a1, "encryptedValues");
        v127 = swift_getObjectType(v126);
        v128 = *(_QWORD *)(v122 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 8);
        v344 = (ValueMetadata *)&type metadata for UInt64;
        v345 = &protocol witness table for UInt64;
        *(_QWORD *)&v343 = v128;
        CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000027, 0x8000000100FF8330, v127);
        swift_unknownObjectRelease(v126);
      }
    }
  }
  if ((v322 & 1) != 0 || (*(_BYTE *)(v122 + v50) & 0x40) != 0)
  {
    v129 = *(_QWORD *)(v122 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
    v345 = &protocol witness table for UInt64;
    v344 = (ValueMetadata *)&type metadata for UInt64;
    *(_QWORD *)&v343 = v129;
    v130 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000021, 0x8000000100FF82E0, v130);
  }
  if (!(_DWORD)v323)
    goto LABEL_68;
  if (qword_1013DD870 != -1)
    goto LABEL_156;
LABEL_63:
  swift_beginAccess(&static OS_os_log.dataSync, &v342, 0, 0);
  v131 = (void *)static OS_os_log.dataSync;
  v132 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v132, &v341);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v134 = v131;
  v135 = objc_msgSend(a1, "recordID");
  v136 = objc_msgSend(v135, "recordName");

  v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
  v139 = v138;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v137;
  *(_QWORD *)(inited + 40) = v139;
  v141 = static os_log_type_t.default.getter(v140);
  sub_100A06EBC((uint64_t)v134, &_mh_execute_header, v141, "Setting hideFromRecentlyDeleted to true for server record for recordName: %{public}%", 84, 2, inited);
  swift_setDeallocating(inited);
  v142 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v142);

  v143 = sub_100B396BC(0xD000000000000019, 0x8000000100FF8780, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v144 & 1) == 0)
  {
    v51 = (uint64_t)v325;
    v145 = v335;
    goto LABEL_66;
  }
  v143 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8780, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  v51 = (uint64_t)v325;
  v145 = v335;
  if ((v146 & 1) == 0)
  {
LABEL_66:
    if (v143 > 0)
      goto LABEL_68;
  }
  v147 = objc_msgSend(a1, "encryptedValues");
  v148 = swift_getObjectType(v147);
  v149 = *(_BYTE *)(v145 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
  v344 = (ValueMetadata *)&type metadata for Bool;
  v345 = &protocol witness table for Bool;
  LOBYTE(v343) = v149;
  CKRecordKeyValueSetting.subscript.setter(&v343, 0xD000000000000019, 0x8000000100FF8780, v148);
  swift_unknownObjectRelease(v147);
LABEL_68:
  swift_bridgeObjectRetain(v351);
  v151 = sub_1005FFABC(v150);
  swift_bridgeObjectRelease();
  __chkstk_darwin(v152);
  v303 = v153;
  v304 = v151;
  v154 = sub_1004B804C((uint64_t *)&unk_101406480);
  v155 = v334;
  OS_dispatch_queue.sync<A>(execute:)(sub_100B4EC50, v302, v154);
  swift_release(v151);
  v335 = v155;
  if (v155)
    goto LABEL_69;
  v169 = v351[8];
  v306 = v351 + 8;
  v312 = v343;
  v170 = 1 << *((_BYTE *)v351 + 32);
  v171 = -1;
  if (v170 < 64)
    v171 = ~(-1 << v170);
  v172 = v171 & v169;
  v307 = (unint64_t)(v170 + 63) >> 6;
  v305 = v307 - 1;
  v310 = (char *)v351;
  swift_bridgeObjectRetain(v351);
  v173 = 0;
  v174 = (_QWORD *)v336;
  a1 = v317;
  v175 = v318;
  if (v172)
  {
LABEL_74:
    v323 = (v172 - 1) & v172;
    v324 = v173;
    v176 = __clz(__rbit64(v172)) | (v173 << 6);
LABEL_75:
    v177 = *((_QWORD *)v310 + 7);
    v178 = (_QWORD *)(*((_QWORD *)v310 + 6) + 16 * v176);
    v179 = v178[1];
    *(_QWORD *)v175 = *v178;
    *((_QWORD *)v175 + 1) = v179;
    v180 = v177 + *(_QWORD *)(v26 + 72) * v176;
    v181 = sub_1004B804C(&qword_101406490);
    (*(void (**)(char *, uint64_t, _QWORD *))(v26 + 16))(&v175[*(int *)(v181 + 48)], v180, v174);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 56))(v175, 0, 1, v181);
    swift_bridgeObjectRetain(v179);
    goto LABEL_88;
  }
  while (1)
  {
    v182 = v173 + 1;
    if (__OFADD__(v173, 1))
      goto LABEL_153;
    if (v182 >= v307)
      goto LABEL_86;
    v183 = v306[v182];
    if (v183)
      goto LABEL_79;
    v173 += 2;
    if (v182 + 1 >= v307)
    {
LABEL_114:
      v324 = v182;
      goto LABEL_87;
    }
    v183 = v306[v173];
    if (v183)
      goto LABEL_82;
    if (v182 + 2 >= v307)
    {
LABEL_86:
      v324 = v173;
    }
    else
    {
      v183 = v306[v182 + 2];
      if (v183)
      {
        v182 += 2;
        goto LABEL_79;
      }
      v173 = v182 + 3;
      if (v182 + 3 < v307)
      {
        v183 = v306[v173];
        if (!v183)
        {
          while (1)
          {
            v182 = v173 + 1;
            if (__OFADD__(v173, 1))
              break;
            if (v182 >= v307)
            {
              v182 = v305;
              goto LABEL_114;
            }
            v183 = v306[v182];
            ++v173;
            if (v183)
              goto LABEL_79;
          }
          __break(1u);
LABEL_158:
          swift_unexpectedError(v335, "Freeform/CRLAssetSyncMetadata.swift", 35, 1, 31);
          __break(1u);
          return;
        }
LABEL_82:
        v182 = v173;
LABEL_79:
        v323 = (v183 - 1) & v183;
        v324 = v182;
        v176 = __clz(__rbit64(v183)) + (v182 << 6);
        goto LABEL_75;
      }
      v324 = v182 + 2;
    }
LABEL_87:
    v184 = sub_1004B804C(&qword_101406490);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v184 - 8) + 56))(v175, 1, 1, v184);
    v323 = 0;
LABEL_88:
    sub_1004C4938((uint64_t)v175, (uint64_t)a1, &qword_1014053D8);
    v185 = sub_1004B804C(&qword_101406490);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 48))(a1, 1, v185) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release(v310);
      v275 = v350;
      v276 = *((_QWORD *)v350 + 7);
      v332 = (uint64_t)(v350 + 56);
      v277 = 1 << v350[32];
      v278 = -1;
      if (v277 < 64)
        v278 = ~(-1 << v277);
      v279 = v278 & v276;
      v334 = (unint64_t)(v277 + 63) >> 6;
      v280 = swift_bridgeObjectRetain(v350);
      v26 = 0;
      while (v279)
      {
        while (1)
        {
          v281 = __clz(__rbit64(v279));
          v279 &= v279 - 1;
          v282 = v281 | (v26 << 6);
LABEL_135:
          v286 = (uint64_t *)(*((_QWORD *)v275 + 6) + 16 * v282);
          v287 = *v286;
          v288 = v286[1];
          v289 = v351;
          if (v351[2])
          {
            swift_bridgeObjectRetain_n(v288, 2);
            v290 = sub_100842E98(v287, v288);
            if ((v291 & 1) != 0)
            {
              v292 = v289[7];
              v293 = v337;
              v294 = (uint64_t)v321;
              (*(void (**)(char *, unint64_t, _QWORD *))(v337 + 16))(v321, v292 + *(_QWORD *)(v337 + 72) * v290, v174);
              (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v293 + 56))(v294, 0, 1, v174);
            }
            else
            {
              v293 = v337;
              v294 = (uint64_t)v321;
              (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v337 + 56))(v321, 1, 1, v174);
            }
            v295 = swift_bridgeObjectRelease();
          }
          else
          {
            v293 = v337;
            v294 = (uint64_t)v321;
            (*(void (**)(char *, uint64_t, uint64_t, _QWORD *, __n128))(v337 + 56))(v321, 1, 1, v174, v280);
            v295 = swift_bridgeObjectRetain(v288);
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *, __n128))(v293 + 48))(v294, 1, v174, v295) == 1)
            break;
          swift_bridgeObjectRelease();
          sub_1004CB800(v294, (uint64_t *)&unk_1013E1A50);
          a1 = v174;
          sub_100757E04(&_mh_execute_header, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1103, "Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(to:store:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2u, 1103, (uint64_t)"Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u);
          if (!v279)
            goto LABEL_124;
        }
        sub_1004CB800(v294, (uint64_t *)&unk_1013E1A50);
        *(_QWORD *)&v343 = v287;
        *((_QWORD *)&v343 + 1) = v288;
        swift_bridgeObjectRetain(v288);
        v296._countAndFlagsBits = 0x7465737341;
        v296._object = (void *)0xE500000000000000;
        String.append(_:)(v296);
        v297 = v333;
        CKRecord.subscript.setter(0, v343, *((_QWORD *)&v343 + 1));
        v298 = objc_msgSend(v297, "encryptedValues");
        *(_QWORD *)&v343 = v287;
        *((_QWORD *)&v343 + 1) = v288;
        swift_bridgeObjectRetain(v288);
        v299._countAndFlagsBits = 0x74654D7465737341;
        v299._object = (void *)0xED00006174616461;
        String.append(_:)(v299);
        swift_bridgeObjectRelease();
        v300 = String._bridgeToObjectiveC()();
        objc_msgSend(v298, "setObject:forKeyedSubscript:", 0, v300, swift_bridgeObjectRelease().n128_f64[0]);
        v301 = v298;
        v174 = (_QWORD *)v336;
        swift_unknownObjectRelease(v301);

      }
LABEL_124:
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_153:
        __break(1u);
        goto LABEL_154;
      }
      if (v26 >= v334)
        goto LABEL_148;
      v284 = *(_QWORD *)(v332 + 8 * v26);
      if (v284)
      {
LABEL_134:
        v279 = (v284 - 1) & v284;
        v282 = __clz(__rbit64(v284)) + (v26 << 6);
        goto LABEL_135;
      }
      v285 = v26 + 1;
      if (v26 + 1 >= v334)
        goto LABEL_148;
      v284 = *(_QWORD *)(v332 + 8 * v285);
      if (v284)
        goto LABEL_133;
      v285 = v26 + 2;
      if (v26 + 2 >= v334)
        goto LABEL_148;
      v284 = *(_QWORD *)(v332 + 8 * v285);
      if (v284)
        goto LABEL_133;
      v285 = v26 + 3;
      if (v26 + 3 >= v334)
      {
LABEL_148:
        v274 = v275;
        goto LABEL_149;
      }
      v284 = *(_QWORD *)(v332 + 8 * v285);
      if (v284)
      {
LABEL_133:
        v26 = v285;
        goto LABEL_134;
      }
      while (1)
      {
        v26 = v285 + 1;
        if (__OFADD__(v285, 1))
          break;
        if (v26 >= v334)
          goto LABEL_148;
        v284 = *(_QWORD *)(v332 + 8 * v26);
        ++v285;
        if (v284)
          goto LABEL_134;
      }
      __break(1u);
LABEL_156:
      swift_once(&qword_1013DD870, sub_100A059E0);
      goto LABEL_63;
    }
    v186 = a1[1];
    v334 = *a1;
    v187 = *(void (**)(uint64_t, char *, _QWORD *))(v26 + 32);
    v187(v51, (char *)a1 + *(int *)(v185 + 48), v174);
    v188 = v312;
    if (!*(_QWORD *)(v312 + 16) || (v189 = sub_100842EFC(v51), (v190 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v343, 0, 0);
      v264 = (void *)static OS_os_log.dataSync;
      v265 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v266 = swift_initStackObject(v265, &v346);
      *(_OWORD *)(v266 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v266 + 56) = &type metadata for String;
      v267 = sub_1004CFC2C();
      *(_QWORD *)(v266 + 64) = v267;
      *(_QWORD *)(v266 + 32) = v334;
      *(_QWORD *)(v266 + 40) = v186;
      v268 = v264;
      v269 = UUID.uuidString.getter(v268);
      *(_QWORD *)(v266 + 96) = &type metadata for String;
      *(_QWORD *)(v266 + 104) = v267;
      *(_QWORD *)(v266 + 72) = v269;
      *(_QWORD *)(v266 + 80) = v270;
      v272 = static os_log_type_t.default.getter(v271);
      sub_100A06EBC((uint64_t)v268, &_mh_execute_header, v272, "Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, v266);
      swift_setDeallocating(v266);
      v273 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v266 + 32, 2, v273);

      (*(void (**)(uint64_t, _QWORD *))(v26 + 8))(v51, v174);
      v274 = v310;
LABEL_149:
      swift_release(v274);
      goto LABEL_150;
    }
    v319 = (void (*)(uint64_t, char *, uint64_t))v187;
    v191 = v332;
    v192 = v326;
    v193 = (char *)v326 + *(int *)(v332 + 48);
    v194 = v315;
    sub_1004CB7BC(*(_QWORD *)(v188 + 56) + *(_QWORD *)(v316 + 72) * v189, (uint64_t)v315, (uint64_t *)&unk_101406470);
    v195 = (char *)v194 + *(int *)(v191 + 48);
    v196 = *v194;
    *v192 = *v194;
    v197 = type metadata accessor for URL(0);
    v198 = *(_QWORD *)(v197 - 8);
    (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v193, v195, v197);
    v199 = v334;
    *(_QWORD *)&v343 = v334;
    *((_QWORD *)&v343 + 1) = v186;
    swift_retain(v196);
    swift_bridgeObjectRetain(v186);
    v200._countAndFlagsBits = 0x7465737341;
    v200._object = (void *)0xE500000000000000;
    String.append(_:)(v200);
    v201 = *((_QWORD *)&v343 + 1);
    v322 = v343;
    v202 = *(int *)(v191 + 48);
    v203 = v196;
    v204 = (char *)v331 + v202;
    *v331 = v196;
    v328 = *(void (**)(char *, char *, uint64_t))(v198 + 16);
    v329 = v193;
    v328(v204, v193, v197);
    v205 = objc_allocWithZone((Class)CKAsset);
    URL._bridgeToObjectiveC()(v206);
    v208 = v207;
    v209 = objc_msgSend(v205, "initWithFileURL:", v207);

    v210 = *(void (**)(_QWORD, _QWORD))(v198 + 8);
    v330 = v197;
    v327 = (void (*)(char *, uint64_t, __n128))v210;
    v210(v204, v197);
    v211 = v333;
    CKRecord.subscript.setter(v209, v322, v201);
    *(_QWORD *)&v343 = v199;
    *((_QWORD *)&v343 + 1) = v186;
    swift_bridgeObjectRetain_n(v186, 2);
    v212._countAndFlagsBits = 0x74654D7465737341;
    v212._object = (void *)0xED00006174616461;
    String.append(_:)(v212);
    swift_bridgeObjectRelease();
    sub_100B39450(v343, *((uint64_t *)&v343 + 1), 1, &v343);
    *(_QWORD *)&v213 = swift_bridgeObjectRelease().n128_u64[0];
    v214 = *((_QWORD *)&v343 + 1);
    if (*((_QWORD *)&v343 + 1) >> 60 == 15)
    {
      v26 = v337;
LABEL_100:
      v239 = objc_msgSend(v211, "encryptedValues", v213);
      *(_QWORD *)&v343 = v334;
      *((_QWORD *)&v343 + 1) = v186;
      swift_bridgeObjectRetain(v186);
      v240._countAndFlagsBits = 0x74654D7465737341;
      v240._object = (void *)0xED00006174616461;
      String.append(_:)(v240);
      v241 = swift_bridgeObjectRelease();
      v322 = *((_QWORD *)&v343 + 1);
      v334 = v343;
      v242 = (char *)v331 + *(int *)(v332 + 48);
      *v331 = v203;
      v243 = v330;
      ((void (*)(char *, char *, uint64_t, __n128))v328)(v242, v329, v330, v241);
      v244 = (uint64_t)v311;
      v245 = v336;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v311, v203 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID, v336);
      v246 = v26;
      v247 = *(_QWORD *)(v203 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      v248 = *(_QWORD *)(v203 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain(v248);
      v249 = swift_release(v203);
      v250 = v320;
      v251 = (_QWORD *)(v244 + *(int *)(v320 + 20));
      *v251 = v247;
      v251[1] = v248;
      v327(v242, v243, v249);
      v252 = type metadata accessor for PropertyListEncoder(0);
      swift_allocObject(v252, *(unsigned int *)(v252 + 48), *(unsigned __int16 *)(v252 + 52));
      v254 = PropertyListEncoder.init()(v253);
      dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
      v255 = sub_1004B7878((unint64_t *)&unk_101406498, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC68);
      v256 = v335;
      v258 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v244, v250, v255, v257);
      v335 = v256;
      if (v256)
        goto LABEL_158;
      v260 = v258;
      v261 = v259;
      v262 = swift_getObjectType(v239);
      swift_release(v254);
      sub_1004B84A4(v244, type metadata accessor for CRLAssetSyncMetadata);
      v344 = (ValueMetadata *)&type metadata for Data;
      v345 = &protocol witness table for Data;
      *(_QWORD *)&v343 = v260;
      *((_QWORD *)&v343 + 1) = v261;
      CKRecordKeyValueSetting.subscript.setter(&v343, v334, v322, v262);
      swift_unknownObjectRelease(v239);
      sub_1004CB800((uint64_t)v326, (uint64_t *)&unk_101406470);
      v51 = (uint64_t)v325;
      (*(void (**)(char *, uint64_t))(v246 + 8))(v325, v245);
      v174 = (_QWORD *)v245;
      v26 = v246;
      goto LABEL_102;
    }
    v215 = v343;
    v216 = type metadata accessor for PropertyListDecoder(0);
    swift_allocObject(v216, *(unsigned int *)(v216 + 48), *(unsigned __int16 *)(v216 + 52));
    v217 = PropertyListDecoder.init()();
    v218 = sub_1004B7878(&qword_1014064A8, type metadata accessor for CRLAssetSyncMetadata, (uint64_t)&unk_100F1AC90);
    v219 = v320;
    v220 = v335;
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v320, v215, v214, v320, v218, v221);
    v222 = v337;
    v335 = v220;
    if (v220)
      break;
    v309 = v215;
    v223 = swift_release(v217);
    v224 = *(void (**)(char *, char *, uint64_t, __n128))(v222 + 16);
    v225 = v308;
    v226 = v336;
    v224(v308, v325, v336, v223);
    v227 = (char *)v331 + *(int *)(v332 + 48);
    v322 = v203;
    *v331 = v203;
    v228 = v330;
    v229 = ((uint64_t (*)(char *, char *, uint64_t))v328)(v227, v329, v330);
    v230 = URL.pathExtension.getter(v229);
    v232 = v231;
    v233 = v227;
    v234 = (uint64_t)v314;
    ((void (*)(char *, uint64_t))v327)(v233, v228);
    v235 = v313;
    v319(v313, v225, v226);
    v236 = (uint64_t *)(v235 + *(int *)(v219 + 20));
    *v236 = v230;
    v236[1] = v232;
    if ((static UUID.== infix(_:_:)(v234) & 1) == 0
      || (v237 = (_QWORD *)(v234 + *(int *)(v219 + 20)), (v238 = v237[1]) == 0))
    {
      sub_1004BE2FC(v309, v214);
      sub_1004B84A4(v313, type metadata accessor for CRLAssetSyncMetadata);
      sub_1004B84A4(v234, type metadata accessor for CRLAssetSyncMetadata);
      v26 = v337;
      v211 = v333;
      v203 = v322;
      goto LABEL_100;
    }
    if (*v237 == v230 && v238 == v232)
    {
      sub_1004BE2FC(v309, v214);
      sub_1004B84A4(v313, type metadata accessor for CRLAssetSyncMetadata);
      sub_1004B84A4(v234, type metadata accessor for CRLAssetSyncMetadata);
      v26 = v337;
      v203 = v322;
    }
    else
    {
      v263 = _stringCompareWithSmolCheck(_:_:expecting:)(*v237, v238, v230, v232, 0);
      sub_1004BE2FC(v309, v214);
      sub_1004B84A4(v313, type metadata accessor for CRLAssetSyncMetadata);
      sub_1004B84A4(v234, type metadata accessor for CRLAssetSyncMetadata);
      v26 = v337;
      v211 = v333;
      v203 = v322;
      if ((v263 & 1) == 0)
        goto LABEL_100;
    }
    swift_release(v203);
    swift_bridgeObjectRelease();
    sub_1004CB800((uint64_t)v326, (uint64_t *)&unk_101406470);
    v51 = (uint64_t)v325;
    v174 = (_QWORD *)v336;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v325, v336);
LABEL_102:
    v172 = v323;
    v173 = v324;
    a1 = v317;
    v175 = v318;
    if (v323)
      goto LABEL_74;
  }
  swift_release(v217);
  sub_1004BE2FC(v215, v214);
  swift_release(v203);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004CB800((uint64_t)v326, (uint64_t *)&unk_101406470);
  (*(void (**)(char *, uint64_t))(v222 + 8))(v325, v336);
  swift_release(v310);
LABEL_69:
  if (qword_1013DD870 != -1)
LABEL_154:
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, &v343, 0, 0);
  v156 = (void *)static OS_os_log.dataSync;
  v157 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v158 = swift_initStackObject(v157, v349);
  *(_OWORD *)(v158 + 16) = xmmword_100EF5E40;
  v159 = v335;
  swift_getErrorValue(v335, v348, v347);
  v160 = v347[1];
  v161 = v347[2];
  v162 = v156;
  v163 = Error.localizedDescription.getter(v160, v161);
  v165 = v164;
  *(_QWORD *)(v158 + 56) = &type metadata for String;
  v166 = sub_1004CFC2C();
  *(_QWORD *)(v158 + 64) = v166;
  *(_QWORD *)(v158 + 32) = v163;
  *(_QWORD *)(v158 + 40) = v165;
  v167 = static os_log_type_t.error.getter(v166);
  sub_100A06EBC((uint64_t)v162, &_mh_execute_header, v167, "Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, v158);
  swift_setDeallocating(v158);
  v168 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v158 + 32, 1, v168);

  swift_errorRelease(v159);
LABEL_150:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_100B45B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v23 = a4;
  v24 = a7;
  v22[1] = a5;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v22 - v14;
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a3, (uint64_t)v15, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
LABEL_7:
    swift_bridgeObjectRetain(a2);
    sub_100AD8690(&v25, a1, a2);
    swift_bridgeObjectRelease();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v20 = sub_1004F2A1C(v16, (uint64_t)qword_101481278);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v19, v20) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_7;
  }
  if ((sub_10062158C((uint64_t)v19, *(_QWORD *)(v23 + *v24)) & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    swift_bridgeObjectRetain(a2);
    v21.n128_f64[0] = sub_10083EC74((uint64_t)v12, a1, a2);
  }
  (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v21);
}

Class sub_100B45DA8(void (*a1)(char *, uint64_t, __n128))
{
  return sub_100B43708(a1);
}

void sub_100B45DC8(_QWORD *a1, void (*a2)(char *, uint64_t, __n128))
{
  sub_100B43A20(a1, a2);
}

CKRecordID sub_100B45DE8()
{
  uint64_t v0;
  Swift::String v1;
  void *v2;
  Swift::String v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String v14;

  sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v1._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  v1._object = v2;
  v3._countAndFlagsBits = 0x74654D6472616F42;
  v3._object = (void *)0xED00006174616461;
  isa = CKRecordZoneID.init(zoneName:ownerName:)(v3, v1).super.isa;
  v5 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v6 = v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
  v14._countAndFlagsBits = UUID.uuidString.getter(v5);
  v14._object = v7;
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = 58;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v6 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v10 = *v9;
  v11 = (void *)v9[1];
  swift_bridgeObjectRetain(v14._object);
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return CKRecordID.init(recordName:zoneID:)(v14, (CKRecordZoneID)isa);
}

CKRecordID sub_100B45F20()
{
  return sub_100B45DE8();
}

BOOL sub_100B45F40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges) != 0;
}

Class sub_100B45F5C()
{
  return sub_100B4DAD0();
}

void sub_100B45F7C(void *a1)
{
  sub_100B4CB48(a1);
}

CKRecordID sub_100B45F9C()
{
  return sub_100B39360();
}

CKRecordID sub_100B45FBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  Class v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  _BYTE v19[72];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v19);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = sub_10067AD38();
  v6 = v5;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = v7[1];
  if (*v7)
    v9 = 0;
  else
    v9 = v8 == 0xE000000000000000;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v7, v8, 0, 0xE000000000000000, 0) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1202, "Creating recordIDForCKRecord for bucket for public database using non-default ownerName for zone: %{public}@", 108, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2u, 1202, (uint64_t)"Creating recordIDForCKRecord for bucket for public database using non-default ownerName for zone: %{public}@", 108, 2u);
  }
  swift_bridgeObjectRelease();
  v10 = sub_100B4AD90(a1);
  sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v12 = qword_101406330;
  v11 = off_101406338;
  swift_bridgeObjectRetain(off_101406338);
  v13 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v15 = v14;
  swift_bridgeObjectRetain(v11);
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v12;
  v17._object = v11;
  return CKRecordID.init(recordName:zoneID:)(v17, (CKRecordZoneID)v10);
}

BOOL sub_100B461B0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges) != 0;
}

Class sub_100B461CC(uint64_t a1, uint64_t a2)
{
  Class isa;
  objc_class *v4;
  Swift::String v5;
  Class v6;

  isa = sub_100B45FBC(a2).super.isa;
  sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  v4 = isa;
  v5._object = (void *)0x8000000100FAA930;
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  v6 = CKRecord.init(recordType:recordID:)(v5, (CKRecordID)v4).super.isa;
  sub_100B4E3DC((uint64_t)v6, a2);

  return v6;
}

Class sub_100B4626C()
{
  return sub_100B4DEA8();
}

void sub_100B4628C(void *a1)
{
  sub_100B4CEA4(a1);
}

uint64_t sub_100B462AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, "zoneID");
  v3 = objc_msgSend(v1, "recordName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = objc_msgSend(v2, "zoneName");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  swift_bridgeObjectRetain(v6);
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  v13 = v4;
  v12 = v6;
  v14 = objc_msgSend(v2, "ownerName");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  swift_bridgeObjectRetain(v12);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v17);
  return v13;
}

uint64_t sub_100B463E4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E0270);
  *(_QWORD *)&v2 = __chkstk_darwin(v1).n128_u64[0];
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 16), "zoneID", v2);
  sub_100B38068((uint64_t)v4);

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
  if ((_DWORD)v7 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E0270);
    return 0;
  }
  else
  {
    v18 = UUID.uuidString.getter(v7);
    v19 = v9;
    swift_bridgeObjectRetain(v9);
    v10._countAndFlagsBits = 58;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v11 = v18;
    v12 = v19;
    v13 = (uint64_t *)&v4[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v14 = *v13;
    v15 = (void *)v13[1];
    v18 = v11;
    v19 = v12;
    swift_bridgeObjectRetain(v12);
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v8 = v18;
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
  }
  return v8;
}

uint64_t sub_100B46540()
{
  return sub_100B462AC();
}

uint64_t sub_100B46560()
{
  return sub_100B463E4();
}

id sub_100B46580()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_100B4658C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  id v12;
  uint64_t v13;

  v1 = objc_msgSend(v0, "recordID");
  v2 = objc_msgSend(v1, "zoneID");

  v3 = objc_msgSend(v2, "ownerName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_8;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_8:

    return 0;
  }
  v12 = objc_msgSend(v2, "ownerName");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);

  return v13;
}

void sub_100B466B8(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  _BOOL8 v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[6];
  _QWORD v27[2];

  v3 = objc_msgSend(v1, "zoneName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = 0x5F6472616F42;
  v7._object = (void *)0xE600000000000000;
  v8 = String.hasPrefix(_:)(v7);
  if (v8)
  {
    v27[0] = 95;
    v27[1] = 0xE100000000000000;
    __chkstk_darwin(v8);
    v26[2] = v27;
    v9 = sub_100AF31F0(sub_100B46D24, (uint64_t)v26, v4, v6);
    if ((v10 & 1) != 0)
    {
      swift_bridgeObjectRelease(v6);
      v25 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
    }
    else
    {
      v11 = String.index(after:)(v9, v4, v6);
      v12 = sub_100A663B8(v11, v4, v6);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v19 = swift_bridgeObjectRelease(v6);
      v20 = static String._fromSubstring(_:)(v12, v14, v16, v18, v19);
      v22 = v21;
      v23 = swift_bridgeObjectRelease(v18);
      UUID.init(uuidString:)(v20, v22, v23);
      swift_bridgeObjectRelease(v22);
    }
  }
  else
  {
    v24 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
    swift_bridgeObjectRelease(v6);
  }
}

uint64_t sub_100B46868()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t type metadata accessor for CRLBoardSyncLogicProvider()
{
  return objc_opt_self(_TtC8Freeform25CRLBoardSyncLogicProvider);
}

uint64_t sub_100B468B4(uint64_t a1, uint64_t a2)
{
  return sub_100B468EC(a1, a2, 0x7465737341, (void *)0xE500000000000000);
}

uint64_t sub_100B468C8(uint64_t a1, uint64_t a2)
{
  return sub_100B468EC(a1, a2, 0x74654D7465737341, (void *)0xED00006174616461);
}

uint64_t sub_100B468EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t *v4;
  Swift::String v7;
  uint64_t v9;

  v9 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  v7._countAndFlagsBits = a3;
  v7._object = a4;
  String.append(_:)(v7);
  return v9;
}

void sub_100B4693C(char *a1)
{
  sub_10083C710(*a1);
}

void sub_100B46948()
{
  char *v0;

  sub_10083D6F8(0, *v0);
}

void sub_100B46954(uint64_t a1)
{
  char *v1;

  sub_10083D154(a1, *v1);
}

void sub_100B4695C(uint64_t a1)
{
  char *v1;

  sub_10083D6F8(a1, *v1);
}

unint64_t sub_100B46964@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100B4EC04(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100B46990@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100B41ECC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned __int8 *sub_100B469B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int8 *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v7 = sub_100633B04();
  v8 = swift_bridgeObjectRetain(a4);
  v9 = String.init<A>(_:)(&v19, &type metadata for Substring, &protocol witness table for Substring, v7, v8);
  v11 = v9;
  v12 = v10;
  if ((v10 & 0x1000000000000000) == 0)
  {
    if ((v10 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v14 = HIBYTE(v12) & 0xF;
    v19 = v11;
    v20 = v12 & 0xFFFFFFFFFFFFFFLL;
    v13 = (unsigned __int8 *)&v19;
    goto LABEL_7;
  }
  v11 = sub_10096E024(v9, v10);
  v16 = v15;
  swift_bridgeObjectRelease(v12);
  v12 = v16;
  if ((v16 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v11 & 0x1000000000000000) != 0)
  {
    v13 = (unsigned __int8 *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v13 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v11, v12);
  }
LABEL_7:
  v17 = sub_100B46AA8(v13, v14, a5);
  swift_bridgeObjectRelease(v12);
  return v17;
}

unsigned __int8 *sub_100B46AA8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100B46D24(uint64_t *a1)
{
  uint64_t v1;

  return sub_100AF3584(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_100B46D40(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)_StringObject.sharedUTF8.getter(a3, a4);
  }
  result = sub_100B49D10((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100B46E10(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t, __n128);
  int v48;
  void *v49;
  uint64_t v50;
  uint64_t inited;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  void *v63;
  void *v64;
  char **v65;
  id v66;
  char **v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  __n128 v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, char *, uint64_t);
  unint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  __n128 v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  void (*v122)(uint64_t, char *, uint64_t);
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  void (*v131)(uint64_t, char *, uint64_t);
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  void *v137;
  __int128 *v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  void *v168;
  uint64_t v169;
  id v170;
  id v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  _BOOL4 v185;
  id v186;
  id v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  char v192;
  char *v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  char *v198;
  __n128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __n128 v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(char *, char *, uint64_t);
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  __n128 v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  Swift::String v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  __n128 v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  __n128 v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  char isUniquelyReferenced_nonNull_native;
  __n128 v249;
  uint64_t v250;
  void (*v251)(char *, uint64_t);
  uint64_t v252;
  void (*v253)(char *, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _BOOL4 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void (*v263)(uint64_t, char *, uint64_t);
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char *v277;
  uint64_t v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  __int128 v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char v287[72];
  char v288[72];
  __int128 v289[2];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v267 = (uint64_t)&v255 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v266 = (uint64_t)&v255 - v5;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v272 = (uint64_t)&v255 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v271 = (uint64_t)&v255 - v9;
  __chkstk_darwin(v10);
  v274 = (uint64_t)&v255 - v11;
  __chkstk_darwin(v12);
  v276 = (unint64_t)&v255 - v13;
  __chkstk_darwin(v14);
  v275 = (uint64_t)&v255 - v15;
  __chkstk_darwin(v16);
  v278 = (uint64_t)&v255 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v255 - v19;
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD **)(v21 - 8);
  __chkstk_darwin(v21);
  v264 = (char *)&v255 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v268 = (char *)&v255 - v25;
  __chkstk_darwin(v26);
  v270 = (char *)&v255 - v27;
  __chkstk_darwin(v28);
  v269 = (char *)&v255 - v29;
  __chkstk_darwin(v30);
  v277 = (char *)&v255 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v255 - v33;
  *(_QWORD *)&v36 = __chkstk_darwin(v35).n128_u64[0];
  v38 = (char *)&v255 - v37;
  v39 = objc_msgSend(a1, "recordID", v36);
  v40 = objc_msgSend(v39, "recordName");

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  UUID.init(uuidString:)(v41, v43, v44);
  v45 = v21;
  v46 = swift_bridgeObjectRelease();
  v47 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))v22[6];
  v48 = v47(v20, 1, v45, v46);
  v279 = a1;
  if (v48 == 1)
  {
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
    v49 = (void *)static OS_os_log.dataSync;
    v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v50, v288);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v52 = v49;
    v53 = v279;
    v54 = objc_msgSend(v279, "recordID");
    v55 = objc_msgSend(v54, "recordName");

    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v59 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v59;
    *(_QWORD *)(inited + 32) = v56;
    *(_QWORD *)(inited + 40) = v58;
    v60 = static os_log_type_t.error.getter(v59);
    sub_100A06EBC((uint64_t)v52, &_mh_execute_header, v60, "Invalid record id from remote record. Expected a UUID but received %{public}@", 77, 2, inited);

    swift_setDeallocating(inited);
    v61 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v61);

    return 0;
  }
  v62 = (void (*)(uint64_t, char *, uint64_t))v22[4];
  v265 = v38;
  v263 = v62;
  v62((uint64_t)v38, v20, v45);
  v63 = (void *)sub_100B38DD0(0xD000000000000016, 0x8000000100FF8740, (unint64_t *)&unk_101406520, CKReference_ptr);
  v273 = v22;
  if (v63)
  {
    v64 = v63;
    v65 = &selRef_p_didReceiveMemoryWarning_;
    v66 = objc_msgSend(v63, "recordID");
    v67 = &selRef_parentMapOfItemsFrom_;
    v68 = objc_msgSend(v66, "recordName");
    v262 = v45;
    v69 = v68;

    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v45 = v262;
    v73 = v275;
    UUID.init(uuidString:)(v70, v72, v74);
    v75 = swift_bridgeObjectRelease();
    if (v47((char *)v73, 1, v45, v75) == 1)
    {
      sub_1004CB800(v73, (uint64_t *)&unk_1013E1A50);
      v76 = v273;
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
      v77 = (void *)static OS_os_log.dataSync;
      v78 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v79 = swift_initStackObject(v78, &v280);
      *(_OWORD *)(v79 + 16) = xmmword_100EF5E40;
      v80 = v77;
      v81 = objc_msgSend(v64, "recordID");
      v82 = objc_msgSend(v81, "recordName");

      v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
      v85 = v84;

      *(_QWORD *)(v79 + 56) = &type metadata for String;
      v86 = sub_1004CFC2C();
      *(_QWORD *)(v79 + 64) = v86;
      *(_QWORD *)(v79 + 32) = v83;
      *(_QWORD *)(v79 + 40) = v85;
      v87 = static os_log_type_t.error.getter(v86);
      sub_100A06EBC((uint64_t)v80, &_mh_execute_header, v87, "Invalid root container record id from remote record. Expected a UUID but received %{public}@", 92, 2, v79);

      swift_setDeallocating(v79);
      v88 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v79 + 32, 1, v88);

      ((void (*)(char *, uint64_t))v76[1])(v265, v262);
      return 0;
    }

    v92 = v263;
    v263((uint64_t)v34, (char *)v73, v45);
    v91 = v278;
    v92(v278, v34, v45);
    v90 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v273[7];
    v90(v91, 0, 1, v45);
    v89 = v279;
  }
  else
  {
    v89 = a1;
    v90 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v22[7];
    v91 = v278;
    v90(v278, 1, 1, v45);
    v67 = &selRef_parentMapOfItemsFrom_;
    v65 = &selRef_p_didReceiveMemoryWarning_;
  }
  v93 = v276;
  sub_1004CB7BC(v91, v276, (uint64_t *)&unk_1013E1A50);
  if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))v47)(v93, 1, v45) == 1)
  {

    sub_1004CB800(v91, (uint64_t *)&unk_1013E1A50);
    ((void (*)(char *, uint64_t))v273[1])(v265, v45);
    v94 = v93;
LABEL_23:
    sub_1004CB800(v94, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v263((uint64_t)v277, (char *)v93, v45);
  v95 = (void *)sub_100B38DD0(0xD00000000000001FLL, 0x8000000100FF8760, (unint64_t *)&unk_101406520, CKReference_ptr);
  if (v95)
  {
    v96 = v95;
    v97 = objc_msgSend(v95, v65[334]);
    v98 = objc_msgSend(v97, v67[46]);

    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v100 = v45;
    v102 = v101;

    v103 = v271;
    UUID.init(uuidString:)(v99, v102, v104);
    v45 = v100;
    v105 = swift_bridgeObjectRelease();
    if (v47((char *)v103, 1, v100, v105) == 1)
    {
      sub_1004CB800(v103, (uint64_t *)&unk_1013E1A50);
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
      v106 = (void *)static OS_os_log.dataSync;
      v107 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v108 = swift_initStackObject(v107, &v281);
      *(_OWORD *)(v108 + 16) = xmmword_100EF5E40;
      v109 = v106;
      v110 = objc_msgSend(v96, v65[334]);
      v111 = objc_msgSend(v110, v67[46]);

      v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
      v114 = v113;

      *(_QWORD *)(v108 + 56) = &type metadata for String;
      v115 = sub_1004CFC2C();
      *(_QWORD *)(v108 + 64) = v115;
      *(_QWORD *)(v108 + 32) = v112;
      *(_QWORD *)(v108 + 40) = v114;
      v116 = static os_log_type_t.error.getter(v115);
      sub_100A06EBC((uint64_t)v109, &_mh_execute_header, v116, "Invalid alternate root container record id from remote record. Expected a UUID but received %{public}@", 102, 2, v108);

      swift_setDeallocating(v108);
      v117 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v108 + 32, 1, v117);

      v118 = (void (*)(char *, uint64_t))v273[1];
      v118(v277, v100);
      sub_1004CB800(v278, (uint64_t *)&unk_1013E1A50);
      v118(v265, v100);
      return 0;
    }

    v121 = v269;
    v122 = v263;
    v263((uint64_t)v269, (char *)v103, v100);
    v120 = v274;
    v122(v274, v121, v100);
    v119 = 0;
    v91 = v278;
    v89 = v279;
  }
  else
  {
    v119 = 1;
    v120 = v274;
  }
  v90(v120, v119, 1, v45);
  v123 = v272;
  sub_1004CB7BC(v120, v272, (uint64_t *)&unk_1013E1A50);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v47)(v123, 1, v45) == 1)
  {

    sub_1004CB800(v120, (uint64_t *)&unk_1013E1A50);
    v124 = (void (*)(char *, uint64_t))v273[1];
    v124(v277, v45);
    sub_1004CB800(v91, (uint64_t *)&unk_1013E1A50);
    v124(v265, v45);
    v94 = v123;
    goto LABEL_23;
  }
  v127 = v270;
  v262 = v45;
  v263((uint64_t)v270, (char *)v123, v45);
  v128 = sub_100B38BCC(0xD000000000000012, 0x8000000100FF8360, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v129 = (uint64_t)v273;
  if ((v130 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
    v142 = (void *)static OS_os_log.dataSync;
    v143 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v144 = swift_initStackObject(v143, v287);
    *(_OWORD *)(v144 + 16) = xmmword_100EF5E40;
    v145 = v142;
    v146 = objc_msgSend(v89, v65[334]);
    v147 = v89;
    v148 = v146;
    v149 = objc_msgSend(v146, v67[46]);

    v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(v149);
    v152 = v151;

    *(_QWORD *)(v144 + 56) = &type metadata for String;
    v153 = sub_1004CFC2C();
    *(_QWORD *)(v144 + 64) = v153;
    *(_QWORD *)(v144 + 32) = v150;
    v154 = v144 + 32;
    *(_QWORD *)(v144 + 40) = v152;
    v155 = static os_log_type_t.error.getter(v153);
    v156 = "Invalid minRequiredVersion from remote record. Expected a UInt64 but received %{public}@";
    v157 = (uint64_t)v145;
    v158 = 88;
    goto LABEL_41;
  }
  v131 = (void (*)(uint64_t, char *, uint64_t))v128;
  v132 = sub_100B38BCC(0xD000000000000021, 0x8000000100FF82E0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v133 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      goto LABEL_84;
    goto LABEL_37;
  }
  v134 = v132;
  v135 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8310, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v136 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
    v168 = (void *)static OS_os_log.dataSync;
    v169 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v144 = swift_initStackObject(v169, &v285);
    *(_OWORD *)(v144 + 16) = xmmword_100EF5E40;
    v145 = v168;
    v170 = objc_msgSend(v89, v65[334]);
    v147 = v89;
    v171 = v170;
    v172 = objc_msgSend(v170, v67[46]);

    v173 = static String._unconditionallyBridgeFromObjectiveC(_:)(v172);
    v175 = v174;

    *(_QWORD *)(v144 + 56) = &type metadata for String;
    v176 = sub_1004CFC2C();
    *(_QWORD *)(v144 + 64) = v176;
    *(_QWORD *)(v144 + 32) = v173;
    v154 = v144 + 32;
    *(_QWORD *)(v144 + 40) = v175;
    v155 = static os_log_type_t.error.getter(v176);
    v156 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    v157 = (uint64_t)v145;
    v158 = 66;
    goto LABEL_41;
  }
  v260 = v135;
  v137 = v89;
  v138 = &v283;
  sub_100B39450(0x7461446472616F42, 0xE900000000000061, 0, &v283);
  v276 = *((_QWORD *)&v283 + 1);
  v261 = v134;
  if (*((_QWORD *)&v283 + 1) >> 60 == 15)
  {
    v138 = v289;
    sub_100B389CC(0x7461446472616F42, 0xE900000000000061, v289);
    v276 = *((_QWORD *)&v289[0] + 1);
  }
  v275 = *(_QWORD *)v138;
  v139 = sub_100B396BC(0xD000000000000027, 0x8000000100FF8330, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v140 & 1) != 0)
  {
    v180 = sub_100B38BCC(0xD000000000000027, 0x8000000100FF8330, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v181 & 1) != 0)
      v141 = 0x2000400000000;
    else
      v141 = v180;
  }
  else
  {
    v141 = v139;
  }
  v182 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  v185 = (v183 & 1) == 0 && v182 > 0;
  v186 = objc_msgSend(v137, "recordChangeTag");
  if (v186)
  {

    v187 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
    objc_msgSend(v137, "encodeSystemFieldsWithCoder:", v187);
    v188 = objc_msgSend(v187, "encodedData");
    v271 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v188);
    v272 = v189;

  }
  else
  {
    v271 = 0;
    v272 = 0xF000000000000000;
  }
  v190 = sub_100B396BC(0xD000000000000019, 0x8000000100FF8780, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  v263 = v131;
  v259 = v141;
  v258 = v185;
  if ((v191 & 1) != 0
    && (v190 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8780, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v192 & 1) != 0))
  {
    v256 = 0;
    v193 = v265;
  }
  else
  {
    v193 = v265;
    if (v190 < 1)
    {
      v256 = 0;
    }
    else
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v283, 0, 0);
      v194 = (void *)static OS_os_log.dataSync;
      v195 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v196 = swift_initStackObject(v195, &v282);
      *(_OWORD *)(v196 + 16) = xmmword_100EF5E40;
      v197 = v194;
      v198 = v265;
      v200 = UUID.description.getter(v199);
      v202 = v201;
      *(_QWORD *)(v196 + 56) = &type metadata for String;
      *(_QWORD *)(v196 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v196 + 32) = v200;
      *(_QWORD *)(v196 + 40) = v202;
      v204 = static os_log_type_t.default.getter(v203);
      sub_100A06EBC((uint64_t)v197, &_mh_execute_header, v204, "Setting hideFromRecentlyDeleted to true from server record for board id %{public}@", 82, 2, v196);
      swift_setDeallocating(v196);
      v205 = sub_1004B804C(&qword_1013E0190);
      v256 = 1;
      swift_arrayDestroy(v196 + 32, 1, v205);

      v193 = v198;
      v91 = v278;
    }
  }
  v206 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
  v207 = (uint64_t)v268;
  v208 = v262;
  v206(v268, v193, v262);
  v209 = v279;
  v210 = sub_100B4658C();
  v211 = v266;
  sub_10067AFD0(v207, v210, v212, v266);
  sub_1004B8460(v211, v267, type metadata accessor for CRLBoardIdentifier);
  v206((char *)v207, v277, v208);
  v213 = (uint64_t)v264;
  v214 = v208;
  v215 = v209;
  v269 = (char *)v206;
  v206(v264, v270, v214);
  v216 = type metadata accessor for CRLBoardSyncRemoteRecord(0);
  v257 = swift_allocObject(v216, *(unsigned int *)(v216 + 48), *(unsigned __int16 *)(v216 + 52));
  v218 = v275;
  v217 = v276;
  sub_10057939C(v275, v276);
  v220 = v271;
  v219 = v272;
  sub_10057939C(v271, v272);
  v125 = sub_100D9B450(v267, v207, v213, (uint64_t)v263, v259, v261, v258, v256, v218, v217, v220, v219, v260);
  sub_1004BE2FC(v218, v217);
  v221 = swift_retain(v125);
  v267 = CKRecord.allKeys()(v221);
  v67 = *(char ***)(v267 + 16);
  if (!v67)
  {
LABEL_81:
    swift_release(v125);

    sub_1004BE2FC(v271, v272);
    sub_1004BE2FC(v275, v276);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v266, type metadata accessor for CRLBoardIdentifier);
    v251 = *(void (**)(char *, uint64_t))(v129 + 8);
    v252 = v262;
    v251(v270, v262);
    sub_1004CB800(v274, (uint64_t *)&unk_1013E1A50);
    v251(v277, v252);
    sub_1004CB800(v91, (uint64_t *)&unk_1013E1A50);
    v251(v265, v252);
    return v125;
  }
  v264 = (char *)(v125 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_assets);
  v65 = (char **)(v267 + 40);
  while (1)
  {
    v127 = (char *)v129;
    v129 = (uint64_t)*(v65 - 1);
    v222 = *v65;
    swift_bridgeObjectRetain(*v65);
    v223 = CKRecord.subscript.getter(v129);
    if (!v223)
    {
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    v224 = v223;
    v225 = objc_opt_self(CKAsset);
    v89 = (id)swift_dynamicCastObjCClass(v224, v225);
    swift_unknownObjectRelease(v224);
    if (!v89
      || (v226._countAndFlagsBits = 0x7465737341,
          v226._object = (void *)0xE500000000000000,
          !String.hasSuffix(_:)(v226)))
    {
      swift_bridgeObjectRelease();
      v215 = v279;
      goto LABEL_76;
    }
    swift_bridgeObjectRetain(v222);
    v227 = String.count.getter(0x7465737341, 0xE500000000000000);
    if (__OFSUB__(0, v227))
      break;
    v228 = ((unint64_t)v222 >> 56) & 0xF;
    if (((unint64_t)v222 & 0x2000000000000000) == 0)
      v228 = v129;
    v229 = 7;
    if ((((unint64_t)v222 >> 60) & ((v129 & 0x800000000000000) == 0)) != 0)
      v229 = 11;
    v230 = String.index(_:offsetBy:)(v229 | (v228 << 16), -v227, v129, v222);
    swift_bridgeObjectRelease();
    v231 = String.subscript.getter(15, v230, v129, v222);
    v233 = v232;
    v235 = v234;
    v237 = v236;
    v238 = swift_bridgeObjectRelease();
    if (!((v231 ^ v233) >> 14))
    {
      swift_bridgeObjectRelease();
      v91 = v278;
      v215 = v279;
LABEL_76:
      v129 = (uint64_t)v127;
      goto LABEL_77;
    }
    v239 = static String._fromSubstring(_:)(v231, v233, v235, v237, v238);
    v241 = v240;
    swift_bridgeObjectRelease();
    v242 = v279;
    v243 = sub_100B382BC(v239, v241);
    v244 = swift_bridgeObjectRelease();
    if (!v243)
    {
      swift_release(v125);

      sub_1004BE2FC(v271, v272);
      sub_1004BE2FC(v275, v276);
      swift_bridgeObjectRelease();
      sub_1004B84A4(v266, type metadata accessor for CRLBoardIdentifier);
      v253 = (void (*)(char *, uint64_t))*((_QWORD *)v127 + 1);
      v254 = v262;
      v253(v270, v262);
      sub_1004CB800(v274, (uint64_t *)&unk_1013E1A50);
      v253(v277, v254);
      sub_1004CB800(v278, (uint64_t *)&unk_1013E1A50);
      v253(v265, v254);
      swift_release(v125);
      return 0;
    }
    v245 = (uint64_t)v268;
    v246 = v262;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v269)(v268, v243 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, v262, v244);
    v247 = v264;
    swift_beginAccess(v264, v289, 33, 0);
    swift_retain(v243);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v247);
    v284 = *v247;
    *v247 = 0x8000000000000000;
    sub_100828A58(v243, v245, isUniquelyReferenced_nonNull_native);
    *v247 = v284;
    v249 = swift_bridgeObjectRelease();
    v129 = (uint64_t)v127;
    v250 = v246;
    v215 = v279;
    (*((void (**)(uint64_t, uint64_t, __n128))v127 + 1))(v245, v250, v249);
    swift_endAccess(v289);
    swift_release(v243);
    v91 = v278;
LABEL_77:
    v65 += 2;
    v67 = (char **)((char *)v67 - 1);
    if (!v67)
      goto LABEL_81;
  }
  __break(1u);
LABEL_84:
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_37:
  swift_beginAccess(&static OS_os_log.dataSync, v289, 0, 0);
  v159 = (void *)static OS_os_log.dataSync;
  v160 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v144 = swift_initStackObject(v160, &v286);
  *(_OWORD *)(v144 + 16) = xmmword_100EF5E40;
  v145 = v159;
  v161 = objc_msgSend(v89, v65[334]);
  v147 = v89;
  v162 = v161;
  v163 = objc_msgSend(v161, v67[46]);

  v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v163);
  v166 = v165;

  *(_QWORD *)(v144 + 56) = &type metadata for String;
  v167 = sub_1004CFC2C();
  *(_QWORD *)(v144 + 64) = v167;
  *(_QWORD *)(v144 + 32) = v164;
  v154 = v144 + 32;
  *(_QWORD *)(v144 + 40) = v166;
  v155 = static os_log_type_t.error.getter(v167);
  v156 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
  v157 = (uint64_t)v145;
  v158 = 74;
LABEL_41:
  sub_100A06EBC(v157, &_mh_execute_header, v155, v156, v158, 2, v144);
  swift_setDeallocating(v144);
  v177 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v154, 1, v177);

  v178 = *(void (**)(char *, uint64_t))(v129 + 8);
  v179 = v262;
  v178(v127, v262);
  sub_1004CB800(v274, (uint64_t *)&unk_1013E1A50);
  v178(v277, v179);
  sub_1004CB800(v91, (uint64_t *)&unk_1013E1A50);
  v178(v265, v179);
  return 0;
}

uint64_t sub_100B48518(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t, __n128);
  void *v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  CFArrayRef (__cdecl **v54)(CTFontDescriptorRef, CFSetRef);
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  void *v70;
  void *v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  __n128 v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  void *v153;
  void *v154;
  id v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __n128 v162;
  __n128 v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  id v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  __int128 *v192;
  unint64_t v193;
  char *v194;
  id v195;
  id v196;
  id v197;
  unint64_t v198;
  uint64_t v199;
  char v200;
  _BOOL4 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  __n128 v211;
  uint64_t v212;
  unint64_t *v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  Swift::String v220;
  void *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __n128 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  __n128 v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  char isUniquelyReferenced_nonNull_native;
  __n128 v243;
  uint64_t v244;
  void (*v245)(char *, uint64_t);
  uint64_t v246;
  void (*v247)(char *, uint64_t);
  uint64_t v248;
  id v249;
  uint64_t v250;
  _BOOL4 v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  char *v262;
  _QWORD *v263;
  uint64_t v264;
  char *v265;
  unint64_t v266;
  void (*v267)(uint64_t, char *, uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281[72];
  char v282[72];
  __int128 v283[2];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v264 = (uint64_t)&v248 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v268 = (uint64_t)&v248 - v5;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v263 = (uint64_t *)((char *)&v248 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v266 = (unint64_t)&v248 - v9;
  __chkstk_darwin(v10);
  v267 = (void (*)(uint64_t, char *, uint64_t))((char *)&v248 - v11);
  __chkstk_darwin(v12);
  v272 = (char *)&v248 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v248 - v15;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v269 = (uint64_t)&v248 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v265 = (char *)&v248 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v248 - v23;
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v28 = (char *)&v248 - v27;
  v29 = objc_msgSend(a1, "recordID", v26);
  v30 = objc_msgSend(v29, "recordName");

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  UUID.init(uuidString:)(v31, v33, v34);
  v35 = swift_bridgeObjectRelease();
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
  if (v36(v16, 1, v17, v35) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v37 = (void *)static OS_os_log.dataSync;
    v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v38, v282);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v40 = v37;
    v41 = objc_msgSend(a1, "recordID");
    v42 = objc_msgSend(v41, "recordName");

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v46 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v46;
    *(_QWORD *)(inited + 32) = v43;
    *(_QWORD *)(inited + 40) = v45;
    v47 = static os_log_type_t.error.getter(v46);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v47, "Invalid record id from remote record. Expected a UUID but received %{public}@", 77, 2, inited);

    swift_setDeallocating(inited);
    v48 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v48);

    return 0;
  }
  v270 = v18;
  v271 = v17;
  v49 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v262 = v28;
  v49(v28, v16, v17);
  v50 = sub_100B38BCC(0xD000000000000012, 0x8000000100FF8360, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v51 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v93 = (void *)static OS_os_log.dataSync;
    v94 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v95 = swift_initStackObject(v94, v281);
    *(_OWORD *)(v95 + 16) = xmmword_100EF5E40;
    v96 = v93;
    v97 = objc_msgSend(a1, "recordID");
    v98 = objc_msgSend(v97, "recordName");

    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v101 = v100;

    *(_QWORD *)(v95 + 56) = &type metadata for String;
    v102 = sub_1004CFC2C();
    *(_QWORD *)(v95 + 64) = v102;
    *(_QWORD *)(v95 + 32) = v99;
    v103 = v95 + 32;
    *(_QWORD *)(v95 + 40) = v101;
    v104 = static os_log_type_t.error.getter(v102);
    v105 = "Remote record does not have a minRequiredVersion %{public}@";
    v106 = (uint64_t)v96;
    v107 = 59;
    goto LABEL_30;
  }
  v52 = v50;
  v53 = sub_100B38BCC(0xD000000000000021, 0x8000000100FF82E0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v54 = (CFArrayRef (__cdecl **)(CTFontDescriptorRef, CFSetRef))&selRef_parentMapOfItemsFrom_;
  if ((v55 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v108 = (void *)static OS_os_log.dataSync;
    v109 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v95 = swift_initStackObject(v109, &v280);
    *(_OWORD *)(v95 + 16) = xmmword_100EF5E40;
    v96 = v108;
    v110 = objc_msgSend(a1, "recordID");
    v111 = objc_msgSend(v110, "recordName");

    v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
    v114 = v113;

    *(_QWORD *)(v95 + 56) = &type metadata for String;
    v115 = sub_1004CFC2C();
    *(_QWORD *)(v95 + 64) = v115;
    *(_QWORD *)(v95 + 32) = v112;
    v103 = v95 + 32;
    *(_QWORD *)(v95 + 40) = v114;
    v104 = static os_log_type_t.error.getter(v115);
    v105 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
    v106 = (uint64_t)v96;
    v107 = 74;
    goto LABEL_30;
  }
  v56 = v53;
  v57 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8310, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v58 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v116 = (void *)static OS_os_log.dataSync;
    v117 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v95 = swift_initStackObject(v117, &v279);
    *(_OWORD *)(v95 + 16) = xmmword_100EF5E40;
    v96 = v116;
    v118 = objc_msgSend(a1, "recordID");
    v119 = objc_msgSend(v118, "recordName");

    v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v119);
    v122 = v121;

    *(_QWORD *)(v95 + 56) = &type metadata for String;
    v123 = sub_1004CFC2C();
    *(_QWORD *)(v95 + 64) = v123;
    *(_QWORD *)(v95 + 32) = v120;
    v103 = v95 + 32;
    *(_QWORD *)(v95 + 40) = v122;
    v104 = static os_log_type_t.error.getter(v123);
    v105 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    v106 = (uint64_t)v96;
    v107 = 66;
LABEL_30:
    sub_100A06EBC(v106, &_mh_execute_header, v104, v105, v107, 2, v95);
    swift_setDeallocating(v95);
    v124 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v103, 1, v124);

    goto LABEL_31;
  }
  v260 = v57;
  v261 = sub_100B396BC(0xD000000000000027, 0x8000000100FF8330, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v59 & 1) != 0)
  {
    v60 = sub_100B38BCC(0xD000000000000027, 0x8000000100FF8330, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    v61 = 0x2000400000000;
    if ((v62 & 1) == 0)
      v61 = v60;
    v261 = v61;
  }
  v63 = a1;
  v64 = sub_100B396BC(0x704F7463656A624FLL, 0xEF455F736E6F6974, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v65 & 1) != 0)
  {
    v64 = sub_100B38BCC(0x704F7463656A624FLL, 0xEF455F736E6F6974, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v66 & 1) != 0)
    {
      if (qword_1013DD870 != -1)
        goto LABEL_85;
      goto LABEL_36;
    }
  }
  v259 = v64;
  v67 = sub_100B396BC(0x657079546D657449, 0xEA0000000000455FLL, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v68 & 1) != 0)
  {
    v67 = sub_100B38BCC(0x657079546D657449, 0xEA0000000000455FLL, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
    if ((v69 & 1) != 0)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
      v144 = (void *)static OS_os_log.dataSync;
      v145 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v129 = swift_initStackObject(v145, &v277);
      *(_OWORD *)(v129 + 16) = xmmword_100EF5E40;
      v96 = v144;
      v146 = objc_msgSend(a1, "recordID");
      v147 = objc_msgSend(v146, "recordName");

      v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
      v150 = v149;

      *(_QWORD *)(v129 + 56) = &type metadata for String;
      v151 = sub_1004CFC2C();
      *(_QWORD *)(v129 + 64) = v151;
      *(_QWORD *)(v129 + 32) = v148;
      v136 = v129 + 32;
      *(_QWORD *)(v129 + 40) = v150;
      v137 = static os_log_type_t.error.getter(v151);
      v138 = "Remote record does not have an item type %{public}@";
      v139 = (uint64_t)v96;
      v140 = 51;
      goto LABEL_41;
    }
  }
  v257 = v67;
  v70 = (void *)sub_100B38DD0(0x6552746E65726150, 0xEF65636E65726566, (unint64_t *)&unk_101406520, CKReference_ptr);
  if (v70)
  {
    v71 = v70;
    v72 = objc_msgSend(v70, "recordID");
    v73 = objc_msgSend(v72, "recordName");

    v258 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
    v75 = v74;

    v76 = (uint64_t)v267;
    UUID.init(uuidString:)(v258, v75, v77);
    v78 = swift_bridgeObjectRelease();
    v79 = v271;
    if (v36((char *)v76, 1, v271, v78) == 1)
    {
      sub_1004CB800(v76, (uint64_t *)&unk_1013E1A50);
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
      v80 = (void *)static OS_os_log.dataSync;
      v81 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v82 = swift_initStackObject(v81, &v273);
      *(_OWORD *)(v82 + 16) = xmmword_100EF5E40;
      v83 = v80;
      v84 = v71;
      v85 = objc_msgSend(v71, "recordID");
      v86 = objc_msgSend(v85, "recordName");

      v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
      v89 = v88;

      *(_QWORD *)(v82 + 56) = &type metadata for String;
      v90 = sub_1004CFC2C();
      *(_QWORD *)(v82 + 64) = v90;
      *(_QWORD *)(v82 + 32) = v87;
      *(_QWORD *)(v82 + 40) = v89;
      v91 = static os_log_type_t.error.getter(v90);
      sub_100A06EBC((uint64_t)v83, &_mh_execute_header, v91, "Invalid parent record id from remote record. Expected a UUID but received %{public}@", 84, 2, v82);

      swift_setDeallocating(v82);
      v92 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v82 + 32, 1, v92);

      goto LABEL_32;
    }
    v256 = v56;
    v258 = v52;

    v49(v24, (char *)v76, v79);
    v142 = (uint64_t)v272;
    v49(v272, v24, v79);
    v141 = 0;
    v63 = a1;
    v143 = v79;
  }
  else
  {
    v256 = v56;
    v258 = v52;
    v141 = 1;
    v143 = v271;
    v142 = (uint64_t)v272;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v270 + 56))(v142, v141, 1, v143);
  v153 = (void *)sub_100B38DD0(0x6665526472616F42, 0xEE0065636E657265, (unint64_t *)&unk_101406520, CKReference_ptr);
  if (!v153)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v177 = (void *)static OS_os_log.dataSync;
    v178 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v166 = swift_initStackObject(v178, &v276);
    *(_OWORD *)(v166 + 16) = xmmword_100EF5E40;
    v167 = v177;
    v179 = objc_msgSend(v63, "recordID");
    v180 = objc_msgSend(v179, "recordName");

    v181 = static String._unconditionallyBridgeFromObjectiveC(_:)(v180);
    v183 = v182;

    *(_QWORD *)(v166 + 56) = &type metadata for String;
    v184 = sub_1004CFC2C();
    *(_QWORD *)(v166 + 64) = v184;
    *(_QWORD *)(v166 + 32) = v181;
    v175 = v166 + 32;
    *(_QWORD *)(v166 + 40) = v183;
    v185 = static os_log_type_t.error.getter(v184);
    sub_100A06EBC((uint64_t)v167, &_mh_execute_header, v185, "A board item must have a board reference. Expected a board reference on board item %{public}@ but received nil", 110, 2, v166);
    goto LABEL_51;
  }
  v154 = v153;
  v155 = objc_msgSend(v153, "recordID");
  v156 = objc_msgSend(v155, "recordName");

  v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(v156);
  v159 = v158;

  v143 = v271;
  v160 = v157;
  v161 = v266;
  UUID.init(uuidString:)(v160, v159, v162);
  v163 = swift_bridgeObjectRelease();
  if (v36((char *)v161, 1, v143, v163) == 1)
  {
    sub_1004CB800(v161, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
    v164 = (void *)static OS_os_log.dataSync;
    v165 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v166 = swift_initStackObject(v165, &v275);
    *(_OWORD *)(v166 + 16) = xmmword_100EF5E40;
    v167 = v164;
    v168 = objc_msgSend(v154, "recordID");
    v169 = v154;
    v170 = objc_msgSend(v168, "recordName");

    v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v170);
    v173 = v172;

    *(_QWORD *)(v166 + 56) = &type metadata for String;
    v174 = sub_1004CFC2C();
    *(_QWORD *)(v166 + 64) = v174;
    *(_QWORD *)(v166 + 32) = v171;
    v175 = v166 + 32;
    *(_QWORD *)(v166 + 40) = v173;
    v176 = static os_log_type_t.error.getter(v174);
    sub_100A06EBC((uint64_t)v167, &_mh_execute_header, v176, "The board reference has an invalid record name %{public}@", 57, 2, v166);

LABEL_51:
    swift_setDeallocating(v166);
    v186 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v175, 1, v186);

    sub_1004CB800((uint64_t)v272, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v270 + 8))(v262, v143);
    return 0;
  }
  v187 = v161;
  v188 = v265;
  v49(v265, (char *)v187, v143);
  v189 = v269;
  v267 = *(void (**)(uint64_t, char *, uint64_t))(v270 + 16);
  v267(v269, v188, v143);
  v190 = sub_100B4658C();
  sub_10067AFD0(v189, v190, v191, v268);
  v192 = &v274;
  sub_100B39450(0x61446E6F6D6D6F43, 0xEA00000000006174, 0, &v274);
  v193 = *((_QWORD *)&v274 + 1);
  v249 = v154;
  if (*((_QWORD *)&v274 + 1) >> 60 == 15)
  {
    v192 = v283;
    sub_100B389CC(0x61446E6F6D6D6F43, 0xEA00000000006174, v283);
    v193 = *((_QWORD *)&v283[0] + 1);
  }
  v255 = *(_QWORD *)v192;
  sub_100B39450(0x6369666963657053, 0xEC00000061746144, 0, &v274);
  v266 = *((_QWORD *)&v274 + 1);
  v194 = v262;
  if (*((_QWORD *)&v274 + 1) >> 60 == 15)
  {
    sub_100B389CC(0x6369666963657053, 0xEC00000061746144, v283);
    v266 = *((_QWORD *)&v283[0] + 1);
    v254 = *(_QWORD *)&v283[0];
  }
  else
  {
    v254 = v274;
    *(_QWORD *)&v283[0] = v274;
  }
  v195 = objc_msgSend(v63, "recordChangeTag");
  if (v195)
  {

    v196 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
    objc_msgSend(v63, "encodeSystemFieldsWithCoder:", v196);
    v197 = objc_msgSend(v196, "encodedData");
    v252 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v197);
    v253 = v198;

  }
  else
  {
    v252 = 0;
    v253 = 0xF000000000000000;
  }
  v199 = sub_100B38BCC(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  v202 = (v200 & 1) == 0 && v199 > 0;
  v251 = v202;
  v267(v269, v194, v143);
  v203 = (uint64_t)v263;
  sub_1004CB7BC((uint64_t)v272, (uint64_t)v263, (uint64_t *)&unk_1013E1A50);
  v204 = v264;
  sub_1004B8460(v268, v264, type metadata accessor for CRLBoardIdentifier);
  v205 = type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  v250 = swift_allocObject(v205, *(unsigned int *)(v205 + 48), *(unsigned __int16 *)(v205 + 52));
  v206 = v255;
  sub_10057939C(v255, v193);
  v207 = v254;
  v208 = v266;
  sub_10057939C(v254, v266);
  v209 = v252;
  v210 = v253;
  sub_10057939C(v252, v253);
  v125 = sub_100C82048(v269, v258, v261, v256, v259, v257, v203, v204, v251, v206, v193, v207, v208, v209, v210, v260);
  sub_1004BE2FC(v207, v208);
  v261 = v193;
  sub_1004BE2FC(v206, v193);
  v211 = swift_retain(v125);
  v264 = CKRecord.allKeys()(v211);
  v212 = *(_QWORD *)(v264 + 16);
  if (!v212)
  {
LABEL_82:
    swift_release(v125);

    sub_1004BE2FC(v252, v253);
    sub_1004BE2FC(v254, v266);
    sub_1004BE2FC(v255, v261);
    swift_bridgeObjectRelease();
    sub_1004B84A4(v268, type metadata accessor for CRLBoardIdentifier);
    v244 = v271;
    v245 = *(void (**)(char *, uint64_t))(v270 + 8);
    v245(v265, v271);
    sub_1004CB800((uint64_t)v272, (uint64_t *)&unk_1013E1A50);
    v245(v262, v244);
    return v125;
  }
  v263 = (_QWORD *)(v125 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets);
  v213 = (unint64_t *)(v264 + 40);
  v54 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
  while (1)
  {
    v214 = *(v213 - 1);
    v215 = *v213;
    swift_bridgeObjectRetain(*v213);
    v216 = CKRecord.subscript.getter(v214);
    if (!v216
      || (v217 = v216,
          v218 = objc_opt_self(v54[210]),
          v219 = swift_dynamicCastObjCClass(v217, v218),
          swift_unknownObjectRelease(v217),
          !v219)
      || (v220._countAndFlagsBits = 0x7465737341,
          v220._object = (void *)0xE500000000000000,
          !String.hasSuffix(_:)(v220)))
    {
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
    v221 = v63;
    swift_bridgeObjectRetain(v215);
    v222 = String.count.getter(0x7465737341, 0xE500000000000000);
    if (__OFSUB__(0, v222))
      break;
    v223 = HIBYTE(v215) & 0xF;
    if ((v215 & 0x2000000000000000) == 0)
      v223 = v214;
    v224 = 7;
    if (((v215 >> 60) & ((v214 & 0x800000000000000) == 0)) != 0)
      v224 = 11;
    v225 = String.index(_:offsetBy:)(v224 | (v223 << 16), -v222, v214, v215);
    swift_bridgeObjectRelease();
    v226 = String.subscript.getter(15, v225, v214, v215);
    v228 = v227;
    v230 = v229;
    v232 = v231;
    v233 = swift_bridgeObjectRelease();
    if ((v226 ^ v228) >> 14)
    {
      v234 = static String._fromSubstring(_:)(v226, v228, v230, v232, v233);
      v236 = v235;
      swift_bridgeObjectRelease();
      v63 = v221;
      v237 = sub_100B382BC(v234, v236);
      v238 = swift_bridgeObjectRelease();
      if (!v237)
      {
        swift_release(v125);

        sub_1004BE2FC(v252, v253);
        sub_1004BE2FC(v254, v266);
        sub_1004BE2FC(v255, v261);
        swift_bridgeObjectRelease();
        sub_1004B84A4(v268, type metadata accessor for CRLBoardIdentifier);
        v246 = v271;
        v247 = *(void (**)(char *, uint64_t))(v270 + 8);
        v247(v265, v271);
        sub_1004CB800((uint64_t)v272, (uint64_t *)&unk_1013E1A50);
        v247(v262, v246);
        swift_release(v125);
        return 0;
      }
      v239 = v269;
      v240 = v271;
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v267)(v269, v237 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, v271, v238);
      v241 = v263;
      swift_beginAccess(v263, v283, 33, 0);
      swift_retain(v237);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v241);
      *(_QWORD *)&v274 = *v241;
      *v241 = 0x8000000000000000;
      sub_100828A58(v237, v239, isUniquelyReferenced_nonNull_native);
      *v241 = v274;
      v243 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v270 + 8))(v239, v240, v243);
      swift_endAccess(v283);
      swift_release(v237);
      v54 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    }
    else
    {
      swift_bridgeObjectRelease();
      v63 = v221;
      v54 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    }
LABEL_69:
    v213 += 2;
    if (!--v212)
      goto LABEL_82;
  }
  __break(1u);
LABEL_85:
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_36:
  swift_beginAccess(&static OS_os_log.dataSync, v283, 0, 0);
  v127 = (void *)static OS_os_log.dataSync;
  v128 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v129 = swift_initStackObject(v128, &v278);
  *(_OWORD *)(v129 + 16) = xmmword_100EF5E40;
  v96 = v127;
  v130 = objc_msgSend(v63, "recordID");
  v131 = objc_msgSend(v130, (SEL)v54[46]);

  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
  v134 = v133;

  *(_QWORD *)(v129 + 56) = &type metadata for String;
  v135 = sub_1004CFC2C();
  *(_QWORD *)(v129 + 64) = v135;
  *(_QWORD *)(v129 + 32) = v132;
  v136 = v129 + 32;
  *(_QWORD *)(v129 + 40) = v134;
  v137 = static os_log_type_t.error.getter(v135);
  v138 = "Remote record does not have an objectOptions %{public}@";
  v139 = (uint64_t)v96;
  v140 = 55;
LABEL_41:
  sub_100A06EBC(v139, &_mh_execute_header, v137, v138, v140, 2, v129);
  swift_setDeallocating(v129);
  v152 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v136, 1, v152);

LABEL_31:
LABEL_32:
  (*(void (**)(char *, uint64_t))(v270 + 8))(v262, v271);
  return 0;
}

uint64_t sub_100B49D10(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_100BF1410(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = String.UTF8View._foreignDistance(from:to:)(15);
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_100BF1410(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_100BF1410(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = String.UTF8View._foreignDistance(from:to:)(v10);
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_100B4A134(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char v32;
  double v33;
  unsigned __int8 *v34;
  char v35;
  char v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  char v68;
  int v69;
  char v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  NSString v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t inited;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v122;
  int v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  unsigned __int8 *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134[72];
  char v135[72];
  char v136[16];
  char v137[8];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v129 = (uint64_t)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v131 = (uint64_t)&v122 - v5;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for UUID(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v130 = (char *)&v122 - v13;
  v14 = objc_msgSend(a1, "recordID", v12);
  v15 = objc_msgSend(v14, "recordName");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = qword_101406330;
  v20 = off_101406338;
  swift_bridgeObjectRetain(off_101406338);
  v21 = String.count.getter(v19, v20);
  swift_bridgeObjectRelease();
  v22 = sub_100643BFC(v21, v16, v18);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  if (!((v22 ^ v24) >> 14))
  {

    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v29 = sub_100B46D40(v22, v24, v26, v28, 10);
  if ((v30 & 0x100) == 0)
  {
    v31 = v29;
    v32 = v30;

    *(_QWORD *)&v33 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v32 & 1) == 0)
    {
      v128 = (unsigned __int8 *)v31;
      goto LABEL_7;
    }
LABEL_40:
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v137, 0, 0);
    v111 = (void *)static OS_os_log.dataSync;
    v112 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v112, v136);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v44 = v111;
    v114 = objc_msgSend(a1, "recordID");
    v115 = objc_msgSend(v114, "recordName");

    v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
    v118 = v117;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v119 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v119;
    *(_QWORD *)(inited + 32) = v116;
    *(_QWORD *)(inited + 40) = v118;
    v120 = static os_log_type_t.error.getter(v119);
    sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v120, "Invalid bucketIndex from remote record. Expected a UInt64 but received %{public}@", 81, 2, inited);

    swift_setDeallocating(inited);
    v49 = sub_1004B804C(&qword_1013E0190);
    v50 = inited + 32;
    goto LABEL_43;
  }
  v34 = sub_100B469B8(v22, v24, v26, v28, 10);
  v36 = v35;

  *(_QWORD *)&v33 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v36 & 1) != 0)
    goto LABEL_40;
  v128 = v34;
LABEL_7:
  v37 = objc_msgSend(a1, "recordID", v33);
  v38 = objc_msgSend(v37, "zoneID");

  sub_100B466B8((uint64_t)v8);
  v39 = v132;
  v40 = v133;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v8, 1, v133) == 1)
  {
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v137, 0, 0);
    v41 = (void *)static OS_os_log.dataSync;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v43 = swift_initStackObject(v42, v135);
    *(_OWORD *)(v43 + 16) = xmmword_100EF5E40;
    v44 = v41;
    v45 = objc_msgSend(a1, "recordID");
    v46 = objc_msgSend(v45, "zoneID");

    *(_QWORD *)(v43 + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v47 = sub_10056B004(&qword_1013F20B8, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    *(_QWORD *)(v43 + 64) = v47;
    *(_QWORD *)(v43 + 32) = v46;
    v48 = static os_log_type_t.error.getter(v47);
    sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v48, "The board reference has an invalid zone ID %{public}@", 53, 2, v43);

    swift_setDeallocating(v43);
    v49 = sub_1004B804C(&qword_1013E0190);
    v50 = v43 + 32;
LABEL_43:
    swift_arrayDestroy(v50, 1, v49);

    return 0;
  }
  v51 = v130;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v130, v8, v40);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v10, v51, v40);
  v52 = sub_100B4658C();
  sub_10067AFD0((uint64_t)v10, v52, v53, v131);
  v54 = sub_100B38BCC(0xD00000000000001BLL, 0x8000000100FF8990, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v56 = v55;
  v57 = sub_100B38BCC(0xD00000000000001ALL, 0x8000000100FF89B0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v59 = v58;
  v127 = sub_100B38BCC(0xD000000000000021, 0x8000000100FF82E0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  LODWORD(v124) = v60;
  v126 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8310, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v125 = v61;
  v62 = sub_100B396BC(0xD000000000000030, 0x8000000100FF8910, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v63 & 1) != 0)
  {
    v64 = sub_100B38BCC(0xD000000000000030, 0x8000000100FF8910, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    v65 = v66 & 1;
  }
  else
  {
    v64 = v62;
    v65 = 0;
  }
  v67 = sub_100B396BC(0xD00000000000002FLL, 0x8000000100FF88E0, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v68 & 1) != 0)
  {
    v67 = sub_100B38BCC(0xD00000000000002FLL, 0x8000000100FF88E0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    v69 = v70 & 1;
    if ((v56 & 1) != 0)
    {
LABEL_26:
      v54 = 0;
      v124 = 0;
      v72 = 0;
      v73 = 0;
      v127 = 0;
      v71 = 1;
      goto LABEL_27;
    }
  }
  else
  {
    v69 = 0;
    if ((v56 & 1) != 0)
      goto LABEL_26;
  }
  if ((v59 & 1) != 0 || (v124 & 1) != 0)
    goto LABEL_26;
  v124 = v57;
  v71 = 0;
  if (v65)
    v72 = 0x2000400000000;
  else
    v72 = v64;
  if (v69)
    v73 = 0x2000400000000;
  else
    v73 = v67;
LABEL_27:
  v74 = objc_msgSend(a1, "encryptedValues");
  v75 = String._bridgeToObjectiveC()();
  v76 = objc_msgSend(v74, "objectForKeyedSubscript:", v75);

  swift_unknownObjectRelease(v74);
  if (v76)
  {
    v77 = objc_opt_self(CKMergeableRecordValue);
    v78 = swift_dynamicCastObjCClass(v76, v77);
    if (v78)
      goto LABEL_32;
    swift_unknownObjectRelease(v76);
  }
  v79 = sub_100B38DD0(0x6C6261656772654DLL, 0xEF74656B63754265, (unint64_t *)&unk_1014064E0, CKMergeableRecordValue_ptr);
  if (!v79)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v137, 0, 0);
    v99 = (void *)static OS_os_log.dataSync;
    v100 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v101 = swift_initStackObject(v100, v134);
    *(_OWORD *)(v101 + 16) = xmmword_100EF5E40;
    v102 = v99;
    v103 = objc_msgSend(a1, "recordID");
    v104 = objc_msgSend(v103, "recordName");

    v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
    v107 = v106;

    *(_QWORD *)(v101 + 56) = &type metadata for String;
    v108 = sub_1004CFC2C();
    *(_QWORD *)(v101 + 64) = v108;
    *(_QWORD *)(v101 + 32) = v105;
    *(_QWORD *)(v101 + 40) = v107;
    v109 = static os_log_type_t.error.getter(v108);
    sub_100A06EBC((uint64_t)v102, &_mh_execute_header, v109, "Remote record does not have mergeable bucketData %{public}@", 59, 2, v101);
    swift_setDeallocating(v101);
    v110 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v101 + 32, 1, v110);

    sub_1004B84A4(v131, type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v130, v133);
    return 0;
  }
  v78 = v79;
LABEL_32:
  v123 = v71;
  v80 = objc_msgSend(a1, "recordChangeTag");
  v122 = v73;
  v81 = v72;
  v82 = v54;
  if (v80)
  {

    v83 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
    objc_msgSend(a1, "encodeSystemFieldsWithCoder:", v83);
    v84 = objc_msgSend(v83, "encodedData");
    v85 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v84);
    v87 = v86;

  }
  else
  {
    v85 = 0;
    v87 = 0xF000000000000000;
  }
  v88 = v131;
  v89 = v129;
  sub_1004B8460(v131, v129, type metadata accessor for CRLBoardIdentifier);
  v90 = type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
  v91 = swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
  *(_QWORD *)(v91 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue) = v78;
  v92 = v91 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersionForSync;
  *(_QWORD *)v92 = v126;
  *(_BYTE *)(v92 + 8) = v125 & 1;
  v93 = v91 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions;
  v94 = v124;
  *(_QWORD *)v93 = v82;
  *(_QWORD *)(v93 + 8) = v94;
  v95 = v122;
  *(_QWORD *)(v93 + 16) = v81;
  *(_QWORD *)(v93 + 24) = v95;
  *(_QWORD *)(v93 + 32) = v127;
  *(_BYTE *)(v93 + 40) = v123;
  sub_1004B8460(v89, v91 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  v96 = v91 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData;
  *(_OWORD *)v96 = xmmword_100F062D0;
  *(_QWORD *)(v91 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex) = v128;
  v97 = *(_QWORD *)v96;
  v98 = *(_QWORD *)(v96 + 8);
  *(_QWORD *)v96 = v85;
  *(_QWORD *)(v96 + 8) = v87;
  sub_1004BE2FC(v97, v98);
  sub_1004B84A4(v89, type metadata accessor for CRLBoardIdentifier);

  sub_1004B84A4(v88, type metadata accessor for CRLBoardIdentifier);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v130, v133);
  return v91;
}

Class sub_100B4AD90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  void *object;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Class isa;
  uint64_t v20;
  unint64_t v21;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v7 = *v6;
  v8 = (void *)v6[1];
  if (*v6)
    v9 = 0;
  else
    v9 = v8 == (void *)0xE000000000000000;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    v7 = v10;
    v8 = v11;
  }
  else
  {
    swift_bridgeObjectRetain(v8);
  }
  v20 = 0x5F6472616F42;
  v21 = 0xE600000000000000;
  v12._countAndFlagsBits = UUID.uuidString.getter(v10);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14 = v20;
  v15 = (void *)v21;
  sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  v17._countAndFlagsBits = v7;
  v17._object = v8;
  isa = CKRecordZoneID.init(zoneName:ownerName:)(v16, v17).super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return isa;
}

uint64_t sub_100B4AEFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100AD3BF8(*(_QWORD *)(v1 + 24), a1);
}

void sub_100B4AF14(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, __n128))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v27;

  v26 = a2;
  v25 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
  __chkstk_darwin(v25);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v24 = (unint64_t)(v6 + 63) >> 6;
  v27 = a1;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v9);
        if (!v20)
        {
          v9 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v9);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v20 - 1) & v20;
    v11 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v27 + 56);
    v13 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v11);
    v15 = *v13;
    v14 = v13[1];
    v16 = v12 + *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1A50) - 8) + 72) * v11;
    v17 = (uint64_t)v4 + *(int *)(v25 + 48);
    sub_1004CB7BC(v16, v17, (uint64_t *)&unk_1013E1A50);
    *v4 = v15;
    v4[1] = v14;
    v18 = swift_bridgeObjectRetain(v14);
    v26(v15, v14, v17, v18);
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013F13C0);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(v27);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_100B4B164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_100B45B50(a1, a2, a3, v3[2], v3[3], v3[4], &OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
}

uint64_t sub_100B4B188(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __n128 v6;
  id v8;

  v8 = 0;
  v1 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", a1, 1, &v8);
  v2 = v8;
  if (v1)
  {
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);

  }
  else
  {
    v4 = v2;
    v5 = _convertNSErrorToError(_:)(v2);

    swift_willThrow(v6);
    swift_errorRelease(v5);
    return 0;
  }
  return v3;
}

id sub_100B4B268(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char **v39;
  id v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  id v46;
  id v47;
  double *v48;
  unint64_t v49;
  unint64_t v50;
  double *v51;
  id v52;
  uint64_t v53;
  __n128 v54;
  id v55;
  uint64_t v56;
  double v57;
  id v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  char **v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  id v67;
  NSString v68;
  double *v70;
  id v71;
  id v72;
  id v73;
  char v74[112];
  char v75[72];
  char v76[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v76, 0, 0);
  v4 = (void *)static OS_os_log.dataSync;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v75);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v7 = v4;
  v8 = objc_msgSend(a2, "recordID");
  v9 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  *(_QWORD *)(inited + 56) = v9;
  v10 = sub_10056B004((unint64_t *)&qword_1013F2108, &qword_1013E8810, CKRecordID_ptr);
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v8;
  v12 = static os_log_type_t.default.getter(v11);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v12, "Found multiple records of the same ID %@ in fetchedRecords batch; merging.",
    74,
    2,
    inited);
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

  v72 = a2;
  v14 = objc_msgSend(a2, "recordChangeTag");
  if (!v14)
  {
    v14 = objc_msgSend(a1, "recordChangeTag");
    if (!v14)
    {
      v15 = (void *)static OS_os_log.dataSync;
      v16 = swift_initStackObject(v5, v74);
      *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
      v14 = v15;
      v17 = objc_msgSend(a1, "recordID");
      *(_QWORD *)(v16 + 56) = v9;
      *(_QWORD *)(v16 + 64) = v10;
      *(_QWORD *)(v16 + 32) = v17;
      v19 = CKRecord.recordType.getter(v18);
      v21 = v20;
      *(_QWORD *)(v16 + 96) = &type metadata for String;
      v22 = sub_1004CFC2C();
      *(_QWORD *)(v16 + 104) = v22;
      *(_QWORD *)(v16 + 72) = v19;
      *(_QWORD *)(v16 + 80) = v21;
      v23 = static os_log_type_t.error.getter(v22);
      sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v23, "We are attempting to merge a partial record into an existing partial record. This should never happen. Existing recordID: %@, recordType: %@", 140, 2, v16);
      swift_setDeallocating(v16);
      swift_arrayDestroy(v16 + 32, 2, v13);
    }
  }
  v71 = a1;

  v24 = &selRef_imageByApplyingSymbolConfiguration_;
  v25 = v72;
  v26 = objc_msgSend(v72, "encryptedValues");
  v27 = objc_msgSend(v26, "allKeys");
  swift_unknownObjectRelease(v26);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, &type metadata for String);

  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = (_QWORD *)(v28 + 40);
    v70 = _swiftEmptyArrayStorage;
    while (1)
    {
      v32 = *(v30 - 1);
      v31 = *v30;
      v33 = objc_msgSend(v25, v24[318], swift_bridgeObjectRetain(*v30).n128_f64[0]);
      v34 = String._bridgeToObjectiveC()();
      v35 = objc_msgSend(v33, "objectForKeyedSubscript:", v34);
      swift_unknownObjectRelease(v33);

      if (v35)
      {
        v36 = objc_opt_self(CKMergeableRecordValue);
        v37 = swift_dynamicCastObjCClass(v35, v36);
        if (v37)
        {
          v38 = (void *)v37;
          v39 = v24;
          v40 = objc_msgSend(v71, v24[318]);
          v41 = String._bridgeToObjectiveC()();
          v42 = objc_msgSend(v40, "objectForKeyedSubscript:", v41);
          swift_unknownObjectRelease(v40);

          if (v42)
          {
            v43 = objc_opt_self(CKMergeableRecordValue);
            v44 = swift_dynamicCastObjCClass(v42, v43);
            v25 = v72;
            if (v44)
            {
              v73 = 0;
              v45 = objc_msgSend(v38, "mergeRecordValue:error:", v44, &v73);
              v46 = v73;
              if (v45)
              {
                v47 = v73;
                if ((swift_isUniquelyReferenced_nonNull_native(v70) & 1) != 0)
                  v48 = v70;
                else
                  v48 = (double *)sub_100D0EF94(0, *((_QWORD *)v70 + 2) + 1, 1, v70);
                v50 = *((_QWORD *)v48 + 2);
                v49 = *((_QWORD *)v48 + 3);
                if (v50 >= v49 >> 1)
                  v48 = (double *)sub_100D0EF94((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
                *((_QWORD *)v48 + 2) = v50 + 1;
                v70 = v48;
                v51 = &v48[2 * v50];
                *((_QWORD *)v51 + 4) = v32;
                *((_QWORD *)v51 + 5) = v31;
                swift_unknownObjectRelease(v35);
                swift_unknownObjectRelease(v42);
                v24 = v39;
              }
              else
              {
                v52 = v73;
                swift_bridgeObjectRelease();
                v53 = _convertNSErrorToError(_:)(v46);

                swift_willThrow(v54);
                v55 = (id)static OS_os_log.dataSync;
                v56 = static os_log_type_t.error.getter(v55);
                sub_100A06EBC((uint64_t)v55, &_mh_execute_header, v56, "Failed to merge oldCKMergeableRecordValue up with new CKMergeableRecordValue between two CKRecords in the same batch.", 117, 2, (uint64_t)_swiftEmptyArrayStorage);

                swift_unknownObjectRelease(v35);
                swift_unknownObjectRelease(v42);
                swift_errorRelease(v53);
                v24 = v39;
              }
            }
            else
            {
              swift_unknownObjectRelease(v42);
              swift_unknownObjectRelease(v35);
              swift_bridgeObjectRelease();
              v24 = v39;
            }
          }
          else
          {
            swift_unknownObjectRelease(v35);
            swift_bridgeObjectRelease();
            v25 = v72;
            v24 = v39;
          }
          goto LABEL_10;
        }
        swift_unknownObjectRelease(v35);
      }
      swift_bridgeObjectRelease();
LABEL_10:
      v30 += 2;
      if (!--v29)
        goto LABEL_26;
    }
  }
  v70 = _swiftEmptyArrayStorage;
LABEL_26:
  *(_QWORD *)&v57 = swift_bridgeObjectRelease().n128_u64[0];
  if (*((_QWORD *)v70 + 2))
  {
    v58 = objc_msgSend(v25, "recordChangeTag", v57);
    if (v58)
    {
      v59 = v58;
      swift_bridgeObjectRelease();

    }
    else
    {
      v60 = *((_QWORD *)v70 + 2);
      if (v60)
      {
        v61 = v70 + 5;
        v62 = v24;
        do
        {
          v63 = objc_msgSend(v71, v62[318], swift_bridgeObjectRetain(*v61).n128_f64[0]);
          v64 = objc_msgSend(v25, v62[318]);
          v65 = String._bridgeToObjectiveC()();
          v66 = objc_msgSend(v64, "objectForKeyedSubscript:", v65);

          v67 = v64;
          v25 = v72;
          swift_unknownObjectRelease(v67);
          v68 = String._bridgeToObjectiveC()();
          objc_msgSend(v63, "setObject:forKeyedSubscript:", v66, v68, swift_bridgeObjectRelease().n128_f64[0]);
          swift_unknownObjectRelease(v66);
          swift_unknownObjectRelease(v63);

          v61 += 2;
          --v60;
        }
        while (v60);
      }
      swift_bridgeObjectRelease();
      return v71;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v25;
}

uint64_t sub_100B4B97C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t inited;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69[2];

  v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - v12;
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v65 - v16;
  v18 = objc_msgSend(a1, "recordID", v15);
  v19 = objc_msgSend(v18, "recordName");

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  sub_10067B81C(v20, v22, (uint64_t)v4);
  sub_1004B84E0((uint64_t)v4, (uint64_t)v10, type metadata accessor for CRLBoardIdentifierStorage);
  sub_1004B84E0((uint64_t)v10, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
  v23 = objc_msgSend(a1, "recordChangeTag");
  if (v23)
  {

    v24 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
    objc_msgSend(a1, "encodeSystemFieldsWithCoder:", v24);
    v25 = objc_msgSend(v24, "encodedData");
    v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0xF000000000000000;
  }
  v29 = sub_100B38BCC(0xD000000000000021, 0x8000000100FF82E0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v30 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v69, 0, 0);
    v40 = (void *)static OS_os_log.dataSync;
    v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v41, &v68);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v43 = v40;
    v44 = objc_msgSend(a1, "recordID");
    v45 = objc_msgSend(v44, "recordName");

    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v49 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v49;
    *(_QWORD *)(inited + 32) = v46;
    v50 = inited + 32;
    *(_QWORD *)(inited + 40) = v48;
    v51 = static os_log_type_t.error.getter(v49);
    v52 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
    v53 = (uint64_t)v43;
    v54 = 74;
    goto LABEL_13;
  }
  v31 = v29;
  v32 = sub_100B38BCC(0xD000000000000019, 0x8000000100FF8310, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v33 & 1) != 0)
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v69, 0, 0);
    v55 = (void *)static OS_os_log.dataSync;
    v56 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v56, &v67);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v43 = v55;
    v57 = objc_msgSend(a1, "recordID");
    v58 = objc_msgSend(v57, "recordName");

    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = v60;

    *(_QWORD *)(inited + 56) = &type metadata for String;
    v62 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v62;
    *(_QWORD *)(inited + 32) = v59;
    v50 = inited + 32;
    *(_QWORD *)(inited + 40) = v61;
    v51 = static os_log_type_t.error.getter(v62);
    v52 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    v53 = (uint64_t)v43;
    v54 = 66;
LABEL_13:
    sub_100A06EBC(v53, &_mh_execute_header, v51, v52, v54, 2, inited);
    sub_1004BE2FC(v26, v28);
    swift_setDeallocating(inited);
    v63 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v50, 1, v63);

    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  v34 = v32;
  sub_100B39450(0xD000000000000011, 0x8000000100FF88C0, 1, v69);
  v66 = v28;
  v35 = v69[0];
  sub_1004B8460((uint64_t)v17, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  v36 = type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
  v37 = swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  *(_OWORD *)(v37 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData) = v35;
  swift_retain(v37);
  sub_1004BE2FC(0, 0xF000000000000000);
  *(_QWORD *)(v37 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_minRequiredVersionForSync) = v34;
  swift_release(v37);
  sub_1004B84E0((uint64_t)v7, v37 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);

  v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
  v39 = v66;
  *v38 = v26;
  v38[1] = v39;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity) = v31;
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
  return v37;
}

uint64_t sub_100B4C11C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  __n128 v23;
  Swift::String v24;
  Swift::String v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  Swift::String v43;
  Swift::String v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v58[72];
  uint64_t v59;
  unint64_t v60;
  _BYTE v61[72];
  _BYTE v62[32];

  v2 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v2);
  v4 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v58[-v10];
  v12 = objc_opt_self(CKShare);
  v13 = swift_dynamicCastObjCClass(a1, v12);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = a1;
    v16 = objc_msgSend(v14, "recordID");
    v17 = objc_msgSend(v16, "zoneID");

    sub_100B38068((uint64_t)v4);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1004CB800((uint64_t)v4, &qword_1013E0270);
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v62, 0, 0);
      v18 = (void *)static OS_os_log.dataSync;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v58);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v59 = 0x203A65707954;
      v60 = 0xE600000000000000;
      v21 = v15;
      v22 = v18;
      v24._countAndFlagsBits = CKRecord.recordType.getter(v23);
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v25._countAndFlagsBits = 0x203A444920;
      v25._object = (void *)0xE500000000000000;
      String.append(_:)(v25);
      v26 = objc_msgSend(v14, "recordID");
      v27 = objc_msgSend(v26, "recordName");

      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31._countAndFlagsBits = v28;
      v31._object = v30;
      String.append(_:)(v31);

      swift_bridgeObjectRelease();
      v32 = v59;
      v33 = v60;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v34 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v34;
      *(_QWORD *)(inited + 32) = v32;
      *(_QWORD *)(inited + 40) = v33;
      v35 = static os_log_type_t.error.getter(v34);
      sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v35, "Could not extract the board identifier from the CKShare %{public}@", 66, 2, inited);

      swift_setDeallocating(inited);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v36);

      return 0;
    }
    else
    {

      sub_1004B84E0((uint64_t)v4, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84E0((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      v56 = type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
      v37 = swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
      sub_1004B84E0((uint64_t)v8, v37 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v37 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare) = v14;
    }
  }
  else
  {
    if (qword_1013DD870 != -1)
      swift_once(&qword_1013DD870, sub_100A059E0);
    swift_beginAccess(&static OS_os_log.dataSync, v62, 0, 0);
    v38 = (void *)static OS_os_log.dataSync;
    v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v40 = swift_initStackObject(v39, v61);
    *(_OWORD *)(v40 + 16) = xmmword_100EF5E40;
    v59 = 0x203A65707954;
    v60 = 0xE600000000000000;
    v41 = v38;
    v43._countAndFlagsBits = CKRecord.recordType.getter(v42);
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = 0x203A444920;
    v44._object = (void *)0xE500000000000000;
    String.append(_:)(v44);
    v45 = objc_msgSend(a1, "recordID");
    v46 = objc_msgSend(v45, "recordName");

    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    v50._countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    v51 = v59;
    v52 = v60;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    v53 = sub_1004CFC2C();
    *(_QWORD *)(v40 + 64) = v53;
    *(_QWORD *)(v40 + 32) = v51;
    *(_QWORD *)(v40 + 40) = v52;
    v54 = static os_log_type_t.error.getter(v53);
    sub_100A06EBC((uint64_t)v41, &_mh_execute_header, v54, "Invalid record type. Expected CKShare but received a CKRecord %{public}@", 72, 2, v40);

    swift_setDeallocating(v40);
    v55 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v40 + 32, 1, v55);

    return 0;
  }
  return v37;
}

void sub_100B4C648(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = CKRecord.recordType.getter(a1);
  v3 = sub_100B38FCC(v1, v2);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_100B4C698()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v0 - 72, 0, 0);
  v1 = (void *)static OS_os_log.dataSync;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, &v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v1;
  v6 = CKRecord.recordType.getter(v5);
  v8 = sub_100B38FCC(v6, v7);
  swift_bridgeObjectRelease();
  v17 = v8;
  v9 = sub_1004B804C(&qword_1013F32D8);
  v10 = String.init<A>(describing:)(&v17, v9);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v13 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v14, "CRLBoardSyncLogicProvider should not be creating public types: recordType %{public}@.", 85, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  return 0;
}

uint64_t sub_100B4C8AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_101406500);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v22[-v13];
  v15 = 0;
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8);
  if (v16 >> 60 != 15)
  {
    v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData);
    swift_retain(a1);
    sub_10057939C(v17, v16);
    v18 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
    CRDT.init(serializedData:)(v17, v16, v8, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    sub_1004B84E0((uint64_t)v7, (uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
    sub_1004B8460(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLUserBoardMetadataCRDTData);
    v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    swift_release(a1);
    v20 = type metadata accessor for CRLUserBoardMetadataData(0);
    v15 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    sub_1004B84E0((uint64_t)v4, v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v11, v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
    *(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v19;
  }
  return v15;
}

void sub_100B4CB48(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _BYTE v28[24];
  _QWORD v29[3];
  _QWORD *v30;
  void *v31;

  v2 = v1;
  v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges);
  if ((v8 & 1) != 0)
  {
    v30 = &type metadata for UInt64;
    v31 = &protocol witness table for UInt64;
    v29[0] = 0x1000000000000;
    v9 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(v29, 0xD000000000000019, 0x8000000100FF8310, v9);
  }
  else if ((v8 & 2) == 0)
  {
    if ((v8 & 4) == 0)
      return;
LABEL_12:
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    v30 = &type metadata for UInt64;
    v31 = &protocol witness table for UInt64;
    v29[0] = v25;
    v26 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(v29, 0xD000000000000021, 0x8000000100FF82E0, v26);
    return;
  }
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData);
  if (v10)
  {
    v27 = a1;
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext + 24);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext + 32);
    sub_1004BB5A4((_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext), v11);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8);
    v14 = swift_retain(v10);
    v15 = (void *)v13(v11, v12, v14);
    v16 = v10 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
    swift_beginAccess(v10 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, v28, 0, 0);
    sub_1004B8460(v16, (uint64_t)v6, type metadata accessor for CRLUserBoardMetadataCRDTData);
    if (qword_1013DCB10 != -1)
      swift_once(&qword_1013DCB10, sub_1005DE88C);
    v17 = type metadata accessor for CRCodableVersion(0);
    v18 = sub_1004F2A1C(v17, (uint64_t)qword_10147EB08);
    v19 = sub_1004B7878(&qword_1013F00B8, type metadata accessor for CRLUserBoardMetadataCRDTData, (uint64_t)&unk_100F398D0);
    v20 = CRDT.serializedData(_:version:)(v15, v18, v4, v19);
    v22 = v21;
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUserBoardMetadataCRDTData);
    swift_release(v10);

    v23 = objc_msgSend(v27, "encryptedValues");
    ObjectType = swift_getObjectType(v23);
    v30 = &type metadata for Data;
    v31 = &protocol witness table for Data;
    v29[0] = v20;
    v29[1] = v22;
    sub_1004BE310(v20, v22);
    CKRecordKeyValueSetting.subscript.setter(v29, 0xD000000000000011, 0x8000000100FF88C0, ObjectType);
    sub_1004BBBC8(v20, v22);
    swift_unknownObjectRelease(v23);
  }
  if ((v8 & 1) != 0 || (*(_QWORD *)(v2 + v7) & 4) != 0)
    goto LABEL_12;
}

void sub_100B4CEA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  Swift::String v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  char *v80;
  NSString v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  char v96[24];
  __int128 v97;
  __int128 v98;
  void *v99;

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1014064B0);
  __chkstk_darwin(v4);
  v91 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101405628);
  v87 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v92 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101405EC0);
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges);
  v94 = v12 & 1;
  v88 = v6;
  if ((v12 & 1) != 0)
  {
    v13 = objc_msgSend(a1, "encryptedValues", v9);
    ObjectType = swift_getObjectType(v13);
    v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    *((_QWORD *)&v98 + 1) = &type metadata for Int;
    v99 = &protocol witness table for Int;
    *(_QWORD *)&v97 = v15;
    CKRecordKeyValueSetting.subscript.setter(&v97, 0x6E4974656B637542, 0xED0000455F786564, ObjectType);
    swift_unknownObjectRelease(v13);
    v16 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v17 = UUID.uuidString.getter(v16);
    v19 = v18;
    v20 = objc_msgSend(a1, "recordID");
    v21 = objc_msgSend(v20, "zoneID");

    v22._countAndFlagsBits = v17;
    v22._object = v19;
    isa = CKRecordID.init(recordName:zoneID:)(v22, (CKRecordZoneID)v21).super.isa;
    CKRecord.subscript.setter(objc_msgSend(objc_allocWithZone((Class)CKReference), "initWithRecordID:action:", isa, 1), 0x6665526472616F42, 0xEE0065636E657265);
    v99 = &protocol witness table for UInt64;
    *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
    *(_QWORD *)&v97 = 0x1000000000000;
    v24 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v97, 0xD000000000000019, 0x8000000100FF8310, v24);

LABEL_5:
    v93 = a1;
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
    v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
    v29 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 8);
    v86 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 16);
    v30 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 32);
    v85 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 24);
    v84 = v30;
    sub_1004BE310(v26, v27);
    v31 = sub_1004B804C((uint64_t *)&unk_1014148B0);
    v32 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
    Capsule<>.init(serializedData:allowedAppFormats:)(v26, v27, 0, v31, v32);
    v33 = sub_1004B804C((uint64_t *)&unk_101406AD0);
    v34 = (_QWORD *)swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    *((_BYTE *)v34 + *(_QWORD *)(*v34 + 136)) = 0;
    v34[2] = v25;
    v35 = (char *)v34 + *(_QWORD *)(*v34 + 120);
    v36 = v89;
    v37 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v35, v11, v90);
    *((_BYTE *)v34 + *(_QWORD *)(*v34 + 136)) = 0;
    v38 = (_QWORD *)((char *)v34 + *(_QWORD *)(*v34 + 128));
    *v38 = v28;
    v38[1] = v29;
    v39 = v85;
    v38[2] = v86;
    v38[3] = v39;
    v38[4] = v84;
    v40 = swift_beginAccess(v35, v96, 0, 0);
    v41 = v91;
    (*(void (**)(char *, char *, uint64_t, __n128))(v36 + 16))(v91, v35, v37, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v41, 0, 1, v37);
    type metadata accessor for CRContext(0);
    v99 = 0;
    v97 = 0u;
    v98 = 0u;
    v42 = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, &v97);
    sub_1004CB800((uint64_t)&v97, (uint64_t *)&unk_1014064C0);
    v43 = sub_100B01190();
    v44 = v92;
    CRCKMergeable.init(crdt:context:)(v41, v42, v37, v43);
    v45 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData
                    + 8);
    if (v45 >> 60 == 15)
    {
      a1 = v93;
      v47 = v87;
      v46 = v88;
    }
    else
    {
      v48 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData);
      sub_1004B8930(0, &qword_1013FF470, NSKeyedUnarchiver_ptr);
      v49 = sub_1004B8930(0, (unint64_t *)&unk_1014064E0, CKMergeableRecordValue_ptr);
      sub_1004BE310(v48, v45);
      sub_1004BE310(v48, v45);
      v50 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v49, v48, v45, v49);
      v47 = v87;
      v46 = v88;
      v82 = (id)v50;
      sub_1004BE2FC(v48, v45);
      sub_1004BE2FC(v48, v45);
      if (v82)
      {
        v44 = v92;
        a1 = v93;
        goto LABEL_10;
      }
      v44 = v92;
      a1 = v93;
    }
    v82 = objc_msgSend(objc_allocWithZone((Class)CKMergeableRecordValue), "init");
LABEL_10:
    *((_QWORD *)&v98 + 1) = v46;
    v99 = (void *)sub_1004CBA30((unint64_t *)&unk_1014064D0, &qword_101405628, (uint64_t)&protocol conformance descriptor for CRCKMergeable<A>);
    v51 = sub_10050D1B0(&v97);
    (*(void (**)(_QWORD *, char *, uint64_t))(v47 + 16))(v51, v44, v46);
    CKMergeableRecordValue.addDeltasToSave(from:)(&v97);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v97);
    v78 = objc_msgSend(a1, "encryptedValues");
    v79 = v82;
    v80 = v44;
    v81 = String._bridgeToObjectiveC()();
    objc_msgSend(v78, "setObject:forKeyedSubscript:", v79, v81);
    swift_release(v34);
    swift_unknownObjectRelease(v78);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v80, v46);
    goto LABEL_11;
  }
  if ((v12 & 2) != 0)
    goto LABEL_5;
LABEL_11:
  v53 = v94;
  v52 = v95;
  if (!(*(_QWORD *)(v2 + v95) & 4 | v94))
    goto LABEL_17;
  v54 = sub_100B38BCC(0xD00000000000001BLL, 0x8000000100FF8990, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v55 & 1) != 0)
  {
    v56 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
    goto LABEL_16;
  }
  v56 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  if (v54 != v56)
  {
LABEL_16:
    *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
    v99 = &protocol witness table for UInt64;
    *(_QWORD *)&v97 = v56;
    v57 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v97, 0xD00000000000001BLL, 0x8000000100FF8990, v57);
  }
LABEL_17:
  if (!(*(_QWORD *)(v2 + v52) & 8 | v53))
    goto LABEL_23;
  v58 = sub_100B38BCC(0xD00000000000001ALL, 0x8000000100FF89B0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  v59 = v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions;
  if ((v60 & 1) != 0)
  {
    v61 = *(_QWORD *)(v59 + 8);
    goto LABEL_22;
  }
  v61 = *(_QWORD *)(v59 + 8);
  if (v58 != v61)
  {
LABEL_22:
    *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
    v99 = &protocol witness table for UInt64;
    *(_QWORD *)&v97 = v61;
    v62 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    CKRecordKeyValueSetting.subscript.setter(&v97, 0xD00000000000001ALL, 0x8000000100FF89B0, v62);
  }
LABEL_23:
  if (*(_QWORD *)(v2 + v52) & 0x10 | v53)
  {
    v63 = sub_100B396BC(0xD000000000000030, 0x8000000100FF8910, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v64 & 1) != 0
      || v63 != *(_QWORD *)(v2
                          + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                          + 16))
    {
      *((_QWORD *)&v98 + 1) = &type metadata for CRLFeatureFlags;
      v99 = (void *)sub_1004DB6DC();
      LOBYTE(v97) = 23;
      v65 = isFeatureEnabled(_:)(&v97);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v97);
      if ((v65 & 1) != 0)
      {
        v66 = objc_msgSend(a1, "encryptedValues");
        v67 = swift_getObjectType(v66);
        v68 = *(_QWORD *)(v2
                        + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                        + 16);
        *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
        v99 = &protocol witness table for UInt64;
        *(_QWORD *)&v97 = v68;
        CKRecordKeyValueSetting.subscript.setter(&v97, 0xD000000000000030, 0x8000000100FF8910, v67);
        swift_unknownObjectRelease(v66);
      }
    }
  }
  v69 = *(_QWORD *)(v2 + v52);
  if (!(v69 & 0x20 | v53))
  {
LABEL_35:
    if ((v69 & 0x40) == 0)
      return;
    goto LABEL_36;
  }
  v70 = sub_100B396BC(0xD00000000000002FLL, 0x8000000100FF88E0, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v71 & 1) != 0
    || v70 != *(_QWORD *)(v2
                        + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                        + 24))
  {
    *((_QWORD *)&v98 + 1) = &type metadata for CRLFeatureFlags;
    v99 = (void *)sub_1004DB6DC();
    LOBYTE(v97) = 23;
    v72 = isFeatureEnabled(_:)(&v97);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v97);
    if ((v72 & 1) != 0)
    {
      v73 = objc_msgSend(a1, "encryptedValues");
      v74 = swift_getObjectType(v73);
      v75 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                      + 24);
      *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
      v99 = &protocol witness table for UInt64;
      *(_QWORD *)&v97 = v75;
      CKRecordKeyValueSetting.subscript.setter(&v97, 0xD00000000000002FLL, 0x8000000100FF88E0, v74);
      swift_unknownObjectRelease(v73);
    }
  }
  if (!v53)
  {
    v69 = *(_QWORD *)(v2 + v52);
    goto LABEL_35;
  }
LABEL_36:
  v76 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                  + 32);
  *((_QWORD *)&v98 + 1) = &type metadata for UInt64;
  v99 = &protocol witness table for UInt64;
  *(_QWORD *)&v97 = v76;
  v77 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v97, 0xD000000000000021, 0x8000000100FF82E0, v77);
}

id sub_100B4DA14()
{
  void *v0;
  Class isa;
  id v2;
  id v3;
  id v4;
  id v5;
  __n128 v6;
  id v8;

  isa = Data._bridgeToObjectiveC()().super.isa;
  v8 = 0;
  v2 = objc_msgSend(v0, "initForReadingFromData:error:", isa, &v8);

  v3 = v8;
  if (v2)
  {
    v4 = v8;
  }
  else
  {
    v5 = v8;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v6);
  }
  return v2;
}

Class sub_100B4DAD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  void *v7;
  Swift::String v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  Class v20;
  Swift::String v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  Class v34;
  _BYTE v36[72];
  Swift::String v37;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8);
  v3 = v2 >> 60;
  if (v2 >> 60 == 15)
    goto LABEL_3;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
  v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_1004BE310(v4, v2);
  v32 = sub_100B4DA14();
  v33 = objc_msgSend(objc_allocWithZone((Class)CKRecord), "initWithCoder:", v32);
  sub_1004BE2FC(v4, v2);
  v34 = (Class)v33;

  if (!v34)
  {
LABEL_3:
    sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v6._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    v6._object = v7;
    v8._countAndFlagsBits = 0x74654D6472616F42;
    v8._object = (void *)0xED00006174616461;
    isa = CKRecordZoneID.init(zoneName:ownerName:)(v8, v6).super.isa;
    v10 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v11 = v1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
    v37._countAndFlagsBits = UUID.uuidString.getter(v10);
    v37._object = v12;
    swift_bridgeObjectRetain(v12);
    v13._countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    countAndFlagsBits = v37._countAndFlagsBits;
    object = v37._object;
    v16 = (uint64_t *)(v11 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v17 = *v16;
    v18 = (void *)v16[1];
    v37._countAndFlagsBits = countAndFlagsBits;
    v37._object = object;
    swift_bridgeObjectRetain(object);
    v19._countAndFlagsBits = v17;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20 = CKRecordID.init(recordName:zoneID:)(v37, (CKRecordZoneID)isa).super.isa;
    v21._countAndFlagsBits = 0x74654D6472616F42;
    v21._object = (void *)0xED00006174616461;
    v34 = CKRecord.init(recordType:recordID:)(v21, (CKRecordID)v20).super.isa;
    if (v3 <= 0xE)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, &v37, 0, 0);
      v22 = (void *)static OS_os_log.dataSync;
      v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v23, v36);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v25 = v22;
      v26 = UUID.uuidString.getter(v25);
      v28 = v27;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v29 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v29;
      *(_QWORD *)(inited + 32) = v26;
      *(_QWORD *)(inited + 40) = v28;
      v30 = static os_log_type_t.error.getter(v29);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "Failed to use existing sync data to decode CKRecord for board with id %@", 72, 2, inited);
      swift_setDeallocating(inited);
      v31 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v31);

    }
  }
  else
  {

  }
  sub_100B4CB48(v34);
  return v34;
}

Class sub_100B4DEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  Class v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  Class isa;
  Swift::String v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v25;
  id v26;
  Class v27;
  _BYTE v28[72];
  _QWORD v29[3];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8);
  if (v3 >> 60 == 15)
    goto LABEL_3;
  v4 = *v2;
  v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_1004BE310(v4, v3);
  v25 = sub_100B4DA14();
  v26 = objc_msgSend(objc_allocWithZone((Class)CKRecord), "initWithCoder:", v25);
  sub_1004BE2FC(v4, v3);
  v27 = (Class)v26;

  if (!v27)
  {
LABEL_3:
    sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    v6 = v1 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier;
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    v8 = sub_100B4AD90(v6);
    sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    v9 = qword_101406330;
    v10 = off_101406338;
    swift_bridgeObjectRetain(off_101406338);
    v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v13 = v12;
    v29[0] = v9;
    v29[1] = v10;
    swift_bridgeObjectRetain(v10);
    v14._countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = v9;
    v15._object = v10;
    isa = CKRecordID.init(recordName:zoneID:)(v15, (CKRecordZoneID)v8).super.isa;
    v17._object = (void *)0x8000000100FAA8E0;
    v17._countAndFlagsBits = 0xD000000000000015;
    v27 = CKRecord.init(recordType:recordID:)(v17, (CKRecordID)isa).super.isa;
    if ((unint64_t)v2[1] >> 60 != 15)
    {
      if (qword_1013DD870 != -1)
        swift_once(&qword_1013DD870, sub_100A059E0);
      swift_beginAccess(&static OS_os_log.dataSync, v29, 0, 0);
      v18 = (void *)static OS_os_log.dataSync;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v28);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for Int;
      *(_QWORD *)(inited + 64) = &protocol witness table for Int;
      *(_QWORD *)(inited + 32) = v7;
      v21 = v18;
      v22 = static os_log_type_t.error.getter(v21);
      sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v22, "Failed to use existing sync data to decode CKRecord for freehandDrawingBucket with id %@", 88, 2, inited);
      swift_setDeallocating(inited);
      v23 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v23);

    }
  }
  else
  {

  }
  sub_100B4CEA4(v27);
  return v27;
}

CKRecordID sub_100B4E224(uint64_t a1)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  Class v10;
  uint64_t v11;
  Swift::String v12;
  _BYTE v14[72];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v2, v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = sub_10067AD38();
  v6 = v5;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v6;
  v7 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = v7[1];
  if (*v7)
    v9 = 0;
  else
    v9 = v8 == 0xE000000000000000;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v7, v8, 0, 0xE000000000000000, 0) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 868, "Creating recordIDForCKRecord for board for public database using non-default ownerName for zone: %{public}@", 107, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2u, 868, (uint64_t)"Creating recordIDForCKRecord for board for public database using non-default ownerName for zone: %{public}@", 107, 2u);
  }
  swift_bridgeObjectRelease();
  v10 = sub_100B4AD90(a1);
  v11 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v12._countAndFlagsBits = UUID.uuidString.getter(v11);
  return CKRecordID.init(recordName:zoneID:)(v12, (CKRecordZoneID)v10);
}

uint64_t sub_100B4E3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B4346C(a1, a2, a3);
}

void sub_100B4E3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_100B45B50(a1, a2, a3, v3[2], v3[3], v3[4], &OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedAssetUUIDs);
}

void sub_100B4E3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  uint64_t v19;
  Swift::String v20;
  Class isa;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __n128 v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  Class v62;
  char v63[24];
  __int128 v64;
  __int128 v65;
  void *v66;

  v3 = v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1014064B0);
  __chkstk_darwin(v5);
  v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101405628);
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  __chkstk_darwin(v7);
  v59 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101405EC0);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  v13 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                  + 32);
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = v13;
  v14 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD000000000000021, 0x8000000100FF82E0, v14);
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD000000000000019, 0x8000000100FF8310, v14);
  v15 = v12[3];
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = v15;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD00000000000002FLL, 0x8000000100FF88E0, v14);
  v16 = v12[2];
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = v16;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD000000000000030, 0x8000000100FF8910, v14);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  *((_QWORD *)&v65 + 1) = &type metadata for Int;
  v66 = &protocol witness table for Int;
  *(_QWORD *)&v64 = v17;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0x6E4974656B637542, 0xED0000455F786564, v14);
  v18 = sub_100B4AD90(a2);
  v19 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  v20._countAndFlagsBits = UUID.uuidString.getter(v19);
  isa = CKRecordID.init(recordName:zoneID:)(v20, (CKRecordZoneID)v18).super.isa;
  v22 = objc_allocWithZone((Class)CKReference);
  v62 = isa;
  CKRecord.subscript.setter(objc_msgSend(v22, "initWithRecordID:action:", isa, 1), 0x6665526472616F42, 0xEE0065636E657265);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
  v26 = *v12;
  v25 = v12[1];
  v54 = v12[2];
  v55 = v25;
  v53 = v12[3];
  v52 = v12[4];
  sub_1004BE310(v23, v24);
  v27 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  v28 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  Capsule<>.init(serializedData:allowedAppFormats:)(v23, v24, 0, v27, v28);
  v29 = sub_1004B804C((uint64_t *)&unk_101406AD0);
  v30 = (_QWORD *)swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  *((_BYTE *)v30 + *(_QWORD *)(*v30 + 136)) = 0;
  v30[2] = v17;
  v31 = (char *)v30 + *(_QWORD *)(*v30 + 120);
  v32 = v56;
  v33 = v11;
  v34 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v31, v33, v57);
  *((_BYTE *)v30 + *(_QWORD *)(*v30 + 136)) = 0;
  v35 = (_QWORD *)((char *)v30 + *(_QWORD *)(*v30 + 128));
  v36 = v55;
  *v35 = v26;
  v35[1] = v36;
  v37 = v53;
  v35[2] = v54;
  v35[3] = v37;
  v35[4] = v52;
  v38 = swift_beginAccess(v31, v63, 0, 0);
  v39 = v58;
  (*(void (**)(char *, char *, uint64_t, __n128))(v32 + 16))(v58, v31, v34, v38);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v39, 0, 1, v34);
  type metadata accessor for CRContext(0);
  v66 = 0;
  v64 = 0u;
  v65 = 0u;
  v40 = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, &v64);
  sub_1004CB800((uint64_t)&v64, (uint64_t *)&unk_1014064C0);
  v41 = sub_100B01190();
  v42 = v59;
  CRCKMergeable.init(crdt:context:)(v39, v40, v34, v41);
  v43 = objc_msgSend(objc_allocWithZone((Class)CKMergeableRecordValue), "init");
  v44 = v61;
  *((_QWORD *)&v65 + 1) = v61;
  v66 = (void *)sub_1004CBA30((unint64_t *)&unk_1014064D0, &qword_101405628, (uint64_t)&protocol conformance descriptor for CRCKMergeable<A>);
  v45 = sub_10050D1B0(&v64);
  v46 = v60;
  (*(void (**)(_QWORD *, char *, uint64_t))(v60 + 16))(v45, v42, v44);
  CKMergeableRecordValue.addDeltasToSave(from:)(&v64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v64);
  v49 = v43;
  CKRecord.subscript.setter(v43, 0x6C6261656772654DLL, 0xEF74656B63754265);

  v50 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v42, v44, v50);
  v51 = v62;
  v47 = *v12;
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = v47;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD00000000000001BLL, 0x8000000100FF8990, v14);
  v48 = v12[1];
  *((_QWORD *)&v65 + 1) = &type metadata for UInt64;
  v66 = &protocol witness table for UInt64;
  *(_QWORD *)&v64 = v48;
  CKRecordKeyValueSetting.subscript.setter(&v64, 0xD00000000000001ALL, 0x8000000100FF89B0, v14);

}

void sub_100B4EA94(_QWORD *a1@<X8>)
{
  sub_100AC0390(a1);
}

uint64_t sub_100B4EAAC@<X0>(_BYTE *a1@<X8>)
{
  return sub_100AC035C(a1);
}

uint64_t storeEnumTagSinglePayload for CRLCloudRecordType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100B4EB10 + 4 * byte_100F27E3B[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100B4EB44 + 4 * byte_100F27E36[v4]))();
}

uint64_t sub_100B4EB44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B4EB4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B4EB54);
  return result;
}

uint64_t sub_100B4EB60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B4EB68);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100B4EB6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B4EB74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudRecordType()
{
  return &type metadata for CRLCloudRecordType;
}

ValueMetadata *_s18AssetNameRecordKeyVMa()
{
  return &_s18AssetNameRecordKeyVN;
}

ValueMetadata *_s22AssetMetadataRecordKeyVMa()
{
  return &_s22AssetMetadataRecordKeyVN;
}

unint64_t sub_100B4EBC0()
{
  unint64_t result;

  result = qword_101406540;
  if (!qword_101406540)
  {
    result = swift_getWitnessTable(&unk_100F282B0, &type metadata for CRLCloudRecordType);
    atomic_store(result, (unint64_t *)&qword_101406540);
  }
  return result;
}

unint64_t sub_100B4EC04(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265798, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

uint64_t sub_100B4EC50@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B4AEFC(a1);
}

uint64_t sub_100B4EC70()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 1701869940;
}

uint64_t sub_100B4EC94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100B4F2E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B4ECB8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B4F100();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B4ECE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B4F100();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B4ED08()
{
  uint64_t v0;

  sub_1004BBBC8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLSharePlayRealTimeChangeRecord()
{
  return objc_opt_self(_TtC8Freeform32CRLSharePlayRealTimeChangeRecord);
}

uint64_t sub_100B4ED4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  __int128 v17;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101406610);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100B4F100();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys, v11, v9, v10);
  v12 = *(_QWORD *)(v3 + 16);
  LOBYTE(v17) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12);
  if (!v2)
  {
    v17 = *(_OWORD *)(v3 + 24);
    v16 = 1;
    v13 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v16, v5, &type metadata for Data, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t *sub_100B4EE78(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v4 = *v1;
  v16 = sub_1004B804C(&qword_101406600);
  v5 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100B4F100();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys, v10, v8, v9);
  if (v2)
  {
    swift_deallocPartialClassInstance(v1, v4, 40, 7);
  }
  else
  {
    v11 = v5;
    LOBYTE(v17) = 0;
    v12 = v16;
    v1[2] = KeyedDecodingContainer.decode(_:forKey:)(&v17, v16);
    v18 = 1;
    v13 = sub_100587AC0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v18, v12, &type metadata for Data, v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v12);
    *(_OWORD *)(v1 + 3) = v17;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v1;
}

uint64_t *sub_100B4F004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *result;

  v6 = swift_allocObject(v2, 40, 7);
  result = sub_100B4EE78(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_100B4F058(_QWORD *a1)
{
  return sub_100B4ED4C(a1);
}

uint64_t sub_100B4F078(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100B4F0C4(&qword_1013EDC20, (uint64_t)&unk_100F2836C);
  result = sub_100B4F0C4(&qword_1013E76F0, (uint64_t)&unk_100F28344);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100B4F0C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLSharePlayRealTimeChangeRecord();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B4F100()
{
  unint64_t result;

  result = qword_101406608;
  if (!qword_101406608)
  {
    result = swift_getWitnessTable(&unk_100F28474, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406608);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSharePlayRealTimeChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100B4F190 + 4 * byte_100F28305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100B4F1C4 + 4 * byte_100F28300[v4]))();
}

uint64_t sub_100B4F1C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B4F1CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B4F1D4);
  return result;
}

uint64_t sub_100B4F1E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B4F1E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100B4F1EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B4F1F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSharePlayRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_100B4F214()
{
  unint64_t result;

  result = qword_101406618;
  if (!qword_101406618)
  {
    result = swift_getWitnessTable(&unk_100F2844C, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406618);
  }
  return result;
}

unint64_t sub_100B4F25C()
{
  unint64_t result;

  result = qword_101406620;
  if (!qword_101406620)
  {
    result = swift_getWitnessTable(&unk_100F283BC, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406620);
  }
  return result;
}

unint64_t sub_100B4F2A4()
{
  unint64_t result;

  result = qword_101406628;
  if (!qword_101406628)
  {
    result = swift_getWitnessTable(&unk_100F283E4, &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406628);
  }
  return result;
}

uint64_t sub_100B4F2E8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_100B4F3B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *Strong;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker);
  if (v2)
    goto LABEL_4;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v4 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (v4)
  {
    v5 = (void *)sub_100B5A840((unint64_t)v4, *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController));

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v5;

    v2 = 0;
LABEL_4:
    v7 = v2;
    return;
  }
  __break(1u);
}

void *sub_100B4F46C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager);
  v3 = v2;
  if (v2 == (void *)1)
  {
    sub_100B4F4D8(v0);
    v3 = v4;
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v6 = v4;
    sub_1004CB49C(v5);
  }
  sub_1004CB968(v2);
  return v3;
}

void sub_100B4F4D8(uint64_t a1)
{
  char v2;
  void *Strong;
  id v4;
  void *v5;
  id v6;
  _QWORD v7[5];

  v7[3] = &type metadata for CRLFeatureFlags;
  v7[4] = sub_1004DB6DC();
  LOBYTE(v7[0]) = 21;
  v2 = isFeatureEnabled(_:)(v7);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
  if ((v2 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v4 = objc_msgSend(Strong, "freehandDrawingToolkit");

    if (v4)
    {
      v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController);
      objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilTrayPickerManager());
      v6 = v5;
      sub_100DE3BC8(v4, v5);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100B4F5A8()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  ObjectType = swift_getObjectType(v0);
  v2 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 175, "Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 175, (uint64_t)"Should not call tearDown() twice.", 33, 2u);
  }
  *(_BYTE *)(v0 + v2) = 1;
  v3 = (char *)sub_100B4F46C();
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v5 = v6;
  }
  objc_msgSend(v5, "_disableTapInteractionWhenNotVisible");

  v7 = (char *)sub_100B4F46C();
  if (v7)
  {
    v8 = v7;
    v9 = *(id *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v9 = v10;
  }
  objc_msgSend(v9, "set_delegate:", 0);

  v11 = (char *)sub_100B4F46C();
  if (v11)
  {
    v12 = v11;
    v13 = *(id *)&v11[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v13 = v14;
  }
  objc_msgSend(v13, "removeObserver:", v0);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController), "setDelegate:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView), "removeFromSuperview");
  return objc_msgSend((id)swift_getObjCClassFromMetadata(ObjectType, v15), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "updateForToolPickerVisibilityDidChange", 0);
}

id sub_100B4F7BC()
{
  _BYTE *v0;
  objc_super v2;

  if ((v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 194, "Must call tearDown() before CRLiOSPencilTray is deinitialized.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 194, (uint64_t)"Must call tearDown() before CRLiOSPencilTray is deinitialized.", 62, 2u);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilTray();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100B4FA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  id v9;
  id v10;
  id v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  _QWORD v25[5];

  v1 = sub_1004B804C((uint64_t *)&unk_1014068A8);
  __chkstk_darwin(v1);
  v3 = (char *)&v25[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PKHandwritingTool(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController);
  v9 = objc_msgSend(Strong, "mode");

  v10 = objc_msgSend(v9, "pencilModeType");
  if (!v10)
  {
    v10 = (id)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc);
    v11 = objc_msgSend(v10, "pencilMediator");

    if (!v11)
    {
      __break(1u);
LABEL_20:
      type metadata accessor for CRLiOSPencilModeType(0);
      v25[0] = v10;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v23, v25, v23, &type metadata for UInt);
      __break(1u);
      return;
    }
    v10 = objc_msgSend(v11, "pencilModeToBeginFromToolbarItem");
    swift_unknownObjectRelease(v11);
    if (!v10)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerTool()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 516, "Trying to update selected tool when not in a pencil mode.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerTool()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 516, (uint64_t)"Trying to update selected tool when not in a pencil mode.", 57, 2u);
      return;
    }
  }
  if (v10 == (id)1)
  {
    sub_100B4FE90();
    return;
  }
  if (v10 != (id)2)
    goto LABEL_20;
  v12 = (char *)sub_100B4F46C();
  if (v12)
  {
    v13 = v12;
    v14 = *(void **)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    v15 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_scribble], "identifier");
    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v17 = v16;
      v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v15 = v24;
    }
    objc_msgSend(v14, "setSelectedToolItemIdentifier:", v15);

  }
  else
  {
    sub_100B53008((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1014068A8);
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerTool()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 511, "Should not be in handwriting mode if PencilKit does not think we should have the handwriting tool.", 98, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerTool()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 511, (uint64_t)"Should not be in handwriting mode if PencilKit does not think we should have the handwriting tool.", 98, 2u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v18 = (char *)sub_100B4F46C();
      if (v18)
      {
        v19 = v18;
        v20 = *(id *)&v18[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

      }
      else
      {
        sub_100B4F3B8();
        v20 = v21;
      }
      v25[3] = v4;
      v25[4] = &protocol witness table for PKHandwritingTool;
      v22 = sub_10050D1B0(v25);
      (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(v22, v7, v4);
      PKToolPicker.selectedTool.setter(v25);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_100B4FE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *Strong;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, id);
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, id);
  void **v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, id);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, id);
  unsigned int v91;
  char *v92;
  char *v93;
  void *v94;
  id v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, id);
  uint64_t v98;
  unsigned int (*v99)(uint64_t, uint64_t, id);
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, id);
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, id);
  uint64_t v106;
  char *v107;
  void *v108;
  id v109;
  uint64_t v110;
  unsigned int (*v111)(uint64_t, uint64_t, id);
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, id);
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, void *);
  uint64_t v119;
  char *v120;
  void *v121;
  id v122;
  void *v123;
  _QWORD *v124;
  char *v125;
  void *v126;
  id v127;
  void *v128;
  _QWORD *v129;
  void (*v130)(char *, id);
  void *v131;
  _QWORD *v132;
  char *v133;
  id v134;
  void *v135;
  _QWORD *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  id v172;
  char v173;
  char v174;
  id v175;
  void *v176;
  char v177;
  uint64_t v178;

  v1 = sub_1004B804C(&qword_1014068A0);
  v2 = __chkstk_darwin(v1);
  v160 = (uint64_t)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v156 = (uint64_t)&v138 - v4;
  v5 = type metadata accessor for PKEraserTool(0);
  v168 = *(_QWORD *)(v5 - 8);
  v169 = v5;
  __chkstk_darwin(v5);
  v167 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101406888);
  v8 = __chkstk_darwin(v7);
  v166 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v159 = (uint64_t)&v138 - v11;
  v12 = __chkstk_darwin(v10);
  v165 = (uint64_t)&v138 - v13;
  v14 = __chkstk_darwin(v12);
  v158 = (uint64_t)&v138 - v15;
  v16 = __chkstk_darwin(v14);
  v164 = (uint64_t)&v138 - v17;
  v18 = __chkstk_darwin(v16);
  v157 = (uint64_t)&v138 - v19;
  v20 = __chkstk_darwin(v18);
  v163 = (uint64_t)&v138 - v21;
  v22 = __chkstk_darwin(v20);
  v155 = (uint64_t)&v138 - v23;
  v24 = __chkstk_darwin(v22);
  v162 = (uint64_t)&v138 - v25;
  v26 = __chkstk_darwin(v24);
  v154 = (uint64_t)&v138 - v27;
  v28 = __chkstk_darwin(v26);
  v161 = (uint64_t)&v138 - v29;
  v30 = __chkstk_darwin(v28);
  v153 = (uint64_t)&v138 - v31;
  v32 = __chkstk_darwin(v30);
  v150 = (uint64_t)&v138 - v33;
  v34 = __chkstk_darwin(v32);
  v152 = (char *)&v138 - v35;
  v36 = __chkstk_darwin(v34);
  v148 = (uint64_t)&v138 - v37;
  v38 = __chkstk_darwin(v36);
  v151 = (uint64_t)&v138 - v39;
  v40 = __chkstk_darwin(v38);
  v147 = (uint64_t)&v138 - v41;
  __chkstk_darwin(v40);
  v149 = (uint64_t)&v138 - v42;
  v43 = (_QWORD *)type metadata accessor for PKCustomTool(0);
  v170 = *(v43 - 1);
  v171 = v43;
  v44 = __chkstk_darwin(v43);
  v46 = (char *)&v138 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v44);
  v49 = (char *)&v138 - v48;
  v50 = __chkstk_darwin(v47);
  v52 = (char *)&v138 - v51;
  v53 = __chkstk_darwin(v50);
  v55 = (char *)&v138 - v54;
  v56 = __chkstk_darwin(v53);
  v58 = (char *)&v138 - v57;
  v59 = __chkstk_darwin(v56);
  v61 = (char *)&v138 - v60;
  v62 = __chkstk_darwin(v59);
  v64 = (char *)&v138 - v63;
  v65 = __chkstk_darwin(v62);
  v67 = (char *)&v138 - v66;
  __chkstk_darwin(v65);
  v69 = (char *)&v138 - v68;
  v70 = sub_100B4F46C();
  if (v70)
  {
    v171 = v70;
    sub_100DE4720();

  }
  else
  {
    v138 = v69;
    v139 = v67;
    v140 = v64;
    v141 = v61;
    v142 = v58;
    v143 = v55;
    v144 = v52;
    v145 = v49;
    v146 = v46;
    v72 = (uint64_t)v166;
    v71 = v167;
    v73 = v168;
    v74 = (void *)v169;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v76 = objc_msgSend(Strong, "freehandDrawingToolkit");

    if (!v76)
    {
      __break(1u);
LABEL_82:
      type metadata accessor for CRLFreehandDrawingToolType(0);
      v172 = v76;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v137, &v172, v137, &type metadata for UInt);
      __break(1u);
      JUMPOUT(0x100B518F4);
    }
    v77 = objc_msgSend(v76, "currentTool");

    v76 = objc_msgSend(v77, "type");
    v78 = v171;
    switch((unint64_t)v76)
    {
      case 0uLL:
        v79 = v147;
        sub_100B53228(0xD00000000000001BLL, 0x8000000100FFA2C0, v147);
        v80 = v170;
        v81 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v81(v79, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"monolineTool", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 781, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v80 = v170;
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"monolineTool", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 781, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v81(v79, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 529, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v80 = v170;
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 529, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v82 = v149;
        sub_1004C4938(v79, v149, &qword_101406888);
        if (v81(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = (void **)&v170;
        goto LABEL_67;
      case 1uLL:
        v104 = v148;
        sub_100B53228(0xD000000000000016, 0x8000000100FFA2E0, v148);
        v105 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v105(v104, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"penTool", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 787, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"penTool", 7, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 787, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v105(v104, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 533, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 533, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v82 = v151;
        sub_1004C4938(v104, v151, &qword_101406888);
        if (v105(v82, 1, v78) == 1)
          goto LABEL_60;
        v106 = v170;
        v92 = v139;
        (*(void (**)(char *, uint64_t, id))(v170 + 32))(v139, v82, v78);
        v107 = (char *)sub_100B4F46C();
        if (v107)
        {
          v108 = v107;
          v109 = *(id *)&v107[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

        }
        else
        {
          sub_100B4F3B8();
          v109 = v131;
        }
        v175 = v78;
        v176 = &protocol witness table for PKCustomTool;
        v132 = sub_10050D1B0(&v172);
        (*(void (**)(_QWORD *, char *, id))(v106 + 16))(v132, v92, v78);
        PKToolPicker.selectedTool.setter(&v172);

        v130 = *(void (**)(char *, id))(v106 + 8);
        goto LABEL_77;
      case 2uLL:
        v88 = v150;
        sub_100B53228(0xD000000000000019, 0x8000000100FFA300, v150);
        v89 = v170;
        v90 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v90(v88, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"pencilTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 793, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v89 = v170;
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilTool", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 793, (uint64_t)"invalid nil value found", 23, 2u);
        }
        v91 = v90(v88, 1, v78);
        v82 = (uint64_t)v152;
        if (v91 == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 537, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v89 = v170;
          v78 = v171;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 537, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        sub_1004C4938(v88, v82, &qword_101406888);
        if (v90(v82, 1, v78) == 1)
          goto LABEL_60;
        v92 = v140;
        (*(void (**)(char *, uint64_t, id))(v89 + 32))(v140, v82, v78);
        v93 = (char *)sub_100B4F46C();
        if (v93)
        {
          v94 = v93;
          v95 = *(id *)&v93[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

        }
        else
        {
          sub_100B4F3B8();
          v95 = v128;
        }
        v175 = v78;
        v176 = &protocol witness table for PKCustomTool;
        v129 = sub_10050D1B0(&v172);
        (*(void (**)(_QWORD *, char *, id))(v89 + 16))(v129, v92, v78);
        PKToolPicker.selectedTool.setter(&v172);

        v130 = *(void (**)(char *, id))(v89 + 8);
LABEL_77:
        v133 = v92;
        v134 = v78;
        goto LABEL_80;
      case 3uLL:
        v98 = v161;
        sub_100B53228(0xD000000000000019, 0x8000000100FFA320, v161);
        v80 = v170;
        v99 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v99(v98, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"crayonTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 799, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v98 = v161;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crayonTool", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 799, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v99(v98, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 541, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v98 = v161;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 541, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v100 = v98;
        v82 = v153;
        sub_1004C4938(v100, v153, &qword_101406888);
        if (v99(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = (void **)&v173;
        goto LABEL_67;
      case 4uLL:
        v85 = v162;
        sub_100B53228(0xD00000000000001DLL, 0x8000000100FFA360, v162);
        v80 = v170;
        v86 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v86(v85, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"watercolorTool", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 805, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v85 = v162;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"watercolorTool", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 805, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v86(v85, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 545, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v85 = v162;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 545, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v87 = v85;
        v82 = v154;
        sub_1004C4938(v87, v154, &qword_101406888);
        if (v86(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = (void **)&v174;
        goto LABEL_67;
      case 5uLL:
        v110 = v163;
        sub_100B53228(0xD00000000000001ELL, 0x8000000100FFA380, v163);
        v80 = v170;
        v111 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v111(v110, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"fountainPenTool", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 817, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v110 = v163;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fountainPenTool", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 817, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v111(v110, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 549, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v110 = v163;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 549, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v112 = v110;
        v82 = v155;
        sub_1004C4938(v112, v155, &qword_101406888);
        if (v111(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = &v175;
        goto LABEL_67;
      case 6uLL:
        v113 = v164;
        sub_100B53228(0xD000000000000019, 0x8000000100FFA340, v164);
        v80 = v170;
        v114 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v114(v113, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"markerTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 811, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v113 = v164;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"markerTool", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 811, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v114(v113, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 553, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v113 = v164;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 553, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v115 = v113;
        v82 = v157;
        sub_1004C4938(v115, v157, &qword_101406888);
        if (v114(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = &v176;
        goto LABEL_67;
      case 7uLL:
        v101 = v165;
        sub_100B53228(0xD000000000000017, 0x8000000100FFA3A0, v165);
        v80 = v170;
        v102 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v102(v101, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"fillTool", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 823, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v101 = v165;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillTool", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 823, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v102(v101, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 557, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v101 = v165;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 557, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v103 = v101;
        v82 = v158;
        sub_1004C4938(v103, v158, &qword_101406888);
        if (v102(v82, 1, v78) == 1)
          goto LABEL_60;
        v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
        v84 = (void **)&v177;
        goto LABEL_67;
      case 8uLL:
        v117 = v160;
        sub_100B534BC(v160);
        v118 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v73 + 48);
        if (v118(v117, 1, v74) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 561, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v117 = v160;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 561, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v82 = v156;
        sub_1004C4938(v117, v156, &qword_1014068A0);
        if (v118(v82, 1, v74) == 1)
        {
          v116 = &qword_1014068A0;
          goto LABEL_61;
        }
        (*(void (**)(char *, uint64_t, void *))(v73 + 32))(v71, v82, v74);
        v125 = (char *)sub_100B4F46C();
        if (v125)
        {
          v126 = v125;
          v127 = *(id *)&v125[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

        }
        else
        {
          sub_100B4F3B8();
          v127 = v135;
        }
        v175 = v74;
        v176 = &protocol witness table for PKEraserTool;
        v136 = sub_10050D1B0(&v172);
        (*(void (**)(_QWORD *, char *, void *))(v73 + 16))(v136, v71, v74);
        PKToolPicker.selectedTool.setter(&v172);

        v130 = *(void (**)(char *, id))(v73 + 8);
        v133 = v71;
        v134 = v74;
LABEL_80:
        v130(v133, v134);
        break;
      case 9uLL:
        v96 = v72;
        sub_100B53228(0xD000000000000018, 0x8000000100FFA0E0, v72);
        v80 = v170;
        v97 = *(unsigned int (**)(uint64_t, uint64_t, id))(v170 + 48);
        if (v97(v72, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"lassoTool", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 861, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v96 = v72;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lassoTool", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 861, (uint64_t)"invalid nil value found", 23, 2u);
        }
        if (v97(v96, 1, v78) == 1)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 565, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v96 = v72;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 565, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
        v82 = v159;
        sub_1004C4938(v96, v159, &qword_101406888);
        if (v97(v82, 1, v78) == 1)
        {
LABEL_60:
          v116 = &qword_101406888;
LABEL_61:
          sub_1004CB800(v82, v116);
        }
        else
        {
          v83 = *(void (**)(uint64_t, uint64_t, id))(v80 + 32);
          v84 = (void **)&v178;
LABEL_67:
          v119 = (uint64_t)*(v84 - 32);
          v83(v119, v82, v78);
          v120 = (char *)sub_100B4F46C();
          if (v120)
          {
            v121 = v120;
            v122 = *(id *)&v120[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

          }
          else
          {
            sub_100B4F3B8();
            v122 = v123;
          }
          v175 = v78;
          v176 = &protocol witness table for PKCustomTool;
          v124 = sub_10050D1B0(&v172);
          (*(void (**)(_QWORD *, uint64_t, id))(v80 + 16))(v124, v119, v78);
          PKToolPicker.selectedTool.setter(&v172);

          (*(void (**)(uint64_t, id))(v80 + 8))(v119, v78);
        }
        break;
      default:
        goto LABEL_82;
    }
  }
}

void sub_100B5191C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *Strong;
  id v17;
  uint64_t v18;
  _BYTE v20[40];
  __int128 v21[2];
  _QWORD v22[5];

  v1 = v0;
  v2 = type metadata accessor for PKHandwritingTool(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (char *)sub_100B4F46C();
  if (v6)
  {
    v7 = v6;
    v8 = *(id *)&v6[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v8 = v9;
  }
  PKToolPicker.selectedTool.getter(v22);

  v10 = (char *)sub_100B4F46C();
  if (v10
    && (v11 = v10,
        v12 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker], "selectedToolItem"), v13 = objc_opt_self(PKToolPickerScribbleItem), v14 = swift_dynamicCastObjCClass(v12, v13), v11, v12, v14))
  {
    sub_1004E90B0((uint64_t)v22, (uint64_t)v21);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
  }
  else
  {
    sub_1004E90B0((uint64_t)v22, (uint64_t)v21);
    sub_1004DB728(v21, (uint64_t)v20);
    v15 = sub_1004B804C((uint64_t *)&unk_101406890);
    if (!swift_dynamicCast(v5, v20, v15, v2, 6))
    {
      sub_100B51C70();
      v18 = 1;
      goto LABEL_12;
    }
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v17 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (v17)
  {
    objc_msgSend(v17, "updatePencilShadowToScribbleMode");

    v18 = 2;
LABEL_12:
    sub_100B51B04((id)v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v22);
    return;
  }
  __break(1u);
}

void sub_100B51B04(id a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v3 = v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController);
  v5 = objc_msgSend(Strong, "mode");

  v6 = objc_msgSend(v5, "pencilModeType");
  if (v6 != a1)
  {
    if (v6)
    {
      v7 = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate);
      v8 = objc_msgSend(v7, "pencilDocumentModeFor:", a1);
      swift_unknownObjectRelease(v7);
      v11 = (id)swift_unknownObjectUnownedLoadStrong(v3);
      objc_msgSend(v11, "setMode:animated:", v8, 1);

    }
    else
    {
      v9 = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc);
      v10 = objc_msgSend(v9, "pencilMediator");

      if (v10)
      {
        objc_msgSend(v10, "setNextPencilModeType:", a1);
        swift_unknownObjectRelease(v10);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100B51C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  int v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *);
  char *v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void (*v48)(char *);
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  double v68;
  void *v69;
  id v70;
  id v71;
  double v72;
  double v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  char v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  double v108;
  char v109;
  uint64_t v110;
  uint64_t inited;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(_QWORD, _QWORD, _QWORD);
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128[72];
  _BYTE v129[40];
  _QWORD v130[6];

  v119 = type metadata accessor for PKEraserTool.EraserType(0);
  v1 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v116 - v4;
  v6 = sub_1004B804C(&qword_1014068A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PKEraserTool(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v121 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101406888);
  __chkstk_darwin(v12);
  v14 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PKCustomTool(0);
  v122 = *(_QWORD *)(v15 - 8);
  v123 = (void (*)(_QWORD, _QWORD, _QWORD))v15;
  __chkstk_darwin(v15);
  v120 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v124 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (!v124)
  {
    __break(1u);
    goto LABEL_87;
  }
  v18 = (char *)sub_100B4F46C();
  if (!v18)
  {
    v116 = v10;
    v20 = (char *)sub_100B4F46C();
    if (v20)
    {
      v21 = v20;
      v22 = v9;
      v23 = *(id *)&v20[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      v22 = v9;
      sub_100B4F3B8();
      v23 = v25;
    }
    PKToolPicker.selectedTool.getter(v130);

    sub_1004E90B0((uint64_t)v130, (uint64_t)v129);
    v26 = sub_1004B804C((uint64_t *)&unk_101406890);
    v27 = v123;
    v28 = swift_dynamicCast(v14, v129, v26, v123, 6);
    v29 = v122;
    v30 = *(void (**)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v122 + 56);
    if (v28)
    {
      v10 = 0xD000000000000017;
      v30(v14, 0, 1, v27);
      v31 = v120;
      v32 = (*(uint64_t (**)(char *, char *, _QWORD))(v29 + 32))(v120, v14, v27);
      v34 = PKCustomTool.customIdentifier.getter(v32);
      v35 = v33;
      if (v34 == 0xD00000000000001BLL && v33 == 0x8000000100FFA2C0
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100FFA2C0, v34, v33, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 0, swift_bridgeObjectRelease().n128_f64[0]);
LABEL_69:
        v92 = (void *)PKCustomTool.color.getter(v50);
        v93 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithUIColor:", v92);

        v94 = objc_msgSend(v93, "colorWithAlphaComponent:", 1.0);
        objc_msgSend(v124, "setColorForCurrentTool:", v94);

        v96 = PKCustomTool.customIdentifier.getter(v95);
        if (v96 == v10 && v97 == 0x8000000100FFA3A0)
        {
          *(_QWORD *)&v98 = swift_bridgeObjectRelease().n128_u64[0];
        }
        else
        {
          v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v96, v97, 0xD000000000000017, 0x8000000100FFA3A0, 0);
          *(_QWORD *)&v98 = swift_bridgeObjectRelease().n128_u64[0];
          if ((v99 & 1) == 0)
          {
            v104 = objc_msgSend(v124, "currentTool", v98);
            v105 = objc_opt_self(CRLFreehandDrawingToolStroke);
            v106 = swift_dynamicCastObjCClass(v104, v105);
            if (v106)
            {
              v107 = (void *)v106;
              objc_msgSend(v93, "alphaComponent");
              PKCustomTool.weight.getter(objc_msgSend(v107, "setOpacity:"));
              objc_msgSend(v107, "setUnscaledWidth:");

            }
            else
            {

              sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 680, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              v31 = v120;
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 680, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
            }
            goto LABEL_79;
          }
        }
        v100 = objc_msgSend(v124, "currentTool", v98);
        v101 = objc_opt_self(CRLFreehandDrawingToolFillAndLegacyStroke);
        v102 = swift_dynamicCastObjCClass(v100, v101);
        if (v102)
        {
          v103 = (void *)v102;
          objc_msgSend(v93, "alphaComponent");
          objc_msgSend(v103, "setOpacity:");

        }
        else
        {

          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 675, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v31 = v120;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 675, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
LABEL_79:

        (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v29 + 8))(v31, v123);
        goto LABEL_80;
      }
      if (v34 == 0xD000000000000016 && v35 == 0x8000000100FFA2E0
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016, 0x8000000100FFA2E0, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 1, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_69;
      }
      if (v34 == 0xD000000000000019 && v35 == 0x8000000100FFA300
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100FFA300, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 2, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_69;
      }
      if (v34 == 0xD000000000000019 && v35 == 0x8000000100FFA320
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100FFA320, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 3, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_69;
      }
      if (v34 == 0xD000000000000019 && v35 == 0x8000000100FFA340
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x8000000100FFA340, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 6, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_69;
      }
      if (v34 == 0xD00000000000001DLL && v35 == 0x8000000100FFA360
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x8000000100FFA360, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 4, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_69;
      }
      if (v34 == 0xD00000000000001ELL && v35 == 0x8000000100FFA380
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x8000000100FFA380, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 5, swift_bridgeObjectRelease().n128_f64[0]);
LABEL_68:
        v29 = v122;
        v31 = v120;
        goto LABEL_69;
      }
      if (v34 == 0xD000000000000017 && v35 == 0x8000000100FFA3A0
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000100FFA3A0, v34, v35, 0) & 1) != 0)
      {
        v50 = objc_msgSend(v124, "setCurrentToolSelection:", 7, swift_bridgeObjectRelease().n128_f64[0]);
        goto LABEL_68;
      }
      if (v34 == 0xD000000000000018 && v35 == 0x8000000100FFA0E0)
      {
        *(_QWORD *)&v108 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_85:
        objc_msgSend(v124, "setCurrentToolSelection:", 9, v108);
        sub_100B53834();
        sub_100B53FF0();

        (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v122 + 8))(v120, v123);
        goto LABEL_80;
      }
      v109 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x8000000100FFA0E0, v34, v35, 0);
      *(_QWORD *)&v108 = swift_bridgeObjectRelease().n128_u64[0];
      if ((v109 & 1) != 0)
        goto LABEL_85;
LABEL_87:
      v110 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v110, &v125);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v31 = v120;
      v112 = PKCustomTool.customIdentifier.getter(inited);
      v114 = v113;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v112;
      *(_QWORD *)(inited + 40) = v114;
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 668, "Unknown custom tool selection: %@", 33, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 668, (uint64_t)"Unknown custom tool selection: %@", 33, 2u);
      swift_setDeallocating(inited);
      v115 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v115);
      v29 = v122;
      goto LABEL_69;
    }
    v30(v14, 1, 1, v27);
    sub_1004CB800((uint64_t)v14, &qword_101406888);
    sub_1004E90B0((uint64_t)v130, (uint64_t)v129);
    v36 = swift_dynamicCast(v8, v129, v26, v22, 6);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
    if (!v36)
    {
      v37(v8, 1, 1, v22);
      sub_1004CB800((uint64_t)v8, &qword_1014068A0);
      v51 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v52 = swift_initStackObject(v51, v128);
      *(_OWORD *)(v52 + 16) = xmmword_100EF5E40;
      sub_1004E90B0((uint64_t)v130, (uint64_t)v129);
      v53 = String.init<A>(describing:)(v129, v26);
      v55 = v54;
      *(_QWORD *)(v52 + 56) = &type metadata for String;
      *(_QWORD *)(v52 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v52 + 32) = v53;
      *(_QWORD *)(v52 + 40) = v55;
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 732, "Unknown tool selection: %@", 26, 2u, v52);
      sub_1004F5394(v52, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 732, (uint64_t)"Unknown tool selection: %@", 26, 2u);

      swift_setDeallocating(v52);
      v56 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v52 + 32, 1, v56);
LABEL_80:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v130);
      return;
    }
    v37(v8, 0, 1, v22);
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v116 + 32))(v121, v8, v22);
    PKEraserTool.eraserType.getter(v38);
    v39 = *(void (**)(char *))(v1 + 104);
    v40 = v117;
    LODWORD(v122) = enum case for PKEraserTool.EraserType.vector(_:);
    v41 = v119;
    v39(v117);
    v42 = static PKEraserTool.EraserType.== infix(_:_:)(v5, v40);
    v43 = *(void (**)(char *, uint64_t))(v1 + 8);
    v43(v40, v41);
    v44 = ((uint64_t (*)(char *, uint64_t))v43)(v5, v41);
    if ((v42 & 1) != 0)
    {
      v45 = (void *)swift_unknownObjectUnownedLoadStrong(v118);
      v46 = objc_msgSend(v45, "freehandDrawingToolkit");

      if (!v46)
      {
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      v47 = objc_msgSend(v46, "toolkitUIState");

      objc_msgSend(v47, "setEraserToolErasesWholeObjects:", 1);
      v48 = v39;
      v49 = v22;
    }
    else
    {
      PKEraserTool.eraserType.getter(v44);
      ((void (*)(char *, _QWORD, uint64_t))v39)(v40, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v41);
      v57 = static PKEraserTool.EraserType.== infix(_:_:)(v5, v40);
      v43(v40, v41);
      v43(v5, v41);
      v48 = v39;
      v49 = v22;
      if ((v57 & 1) == 0)
      {
LABEL_30:
        v123 = (void (*)(_QWORD, _QWORD, _QWORD))v48;
        objc_msgSend(v124, "setCurrentToolSelection:", 8);
        v60 = objc_msgSend(v124, "currentTool");
        v61 = objc_opt_self(CRLFreehandDrawingToolPixelEraser);
        v62 = swift_dynamicCastObjCClass(v60, v61);
        if (!v62)
        {

          v74 = objc_msgSend(v124, "currentTool");
          v75 = objc_opt_self(CRLFreehandDrawingToolEraser);
          v76 = swift_dynamicCastObjCClass(v74, v75);

          v77 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          if (v76)
          {
            v78 = swift_initStackObject(v77, &v126);
            *(_OWORD *)(v78 + 16) = xmmword_100EF5E40;
            PKEraserTool.eraserType.getter(v78);
            v79 = v40;
            v80 = v119;
            v81 = String.init<A>(describing:)(v5, v119);
            v83 = v82;
            *(_QWORD *)(v78 + 56) = &type metadata for String;
            v84 = sub_1004CFC2C();
            *(_QWORD *)(v78 + 32) = v81;
            *(_QWORD *)(v78 + 64) = v84;
            *(_QWORD *)(v78 + 40) = v83;
            PKEraserTool.eraserType.getter(v84);
            v123(v79, v122, v80);
            v85 = static PKEraserTool.EraserType.== infix(_:_:)(v5, v79);
            v43(v79, v80);
            v43(v5, v80);
            if ((v85 & 1) == 0)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 709, "Unknown eraser tool selection: %@", 33, 2u, v78);
              sub_1004F5394(v78, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 709, (uint64_t)"Unknown eraser tool selection: %@", 33, 2u);
            }

            swift_setDeallocating(v78);
            v86 = *(_QWORD *)(v78 + 16);
            v87 = sub_1004B804C(&qword_1013E0190);
            v88 = v78 + 32;
            v89 = v86;
          }
          else
          {
            v90 = swift_initStackObject(v77, &v127);
            *(_OWORD *)(v90 + 16) = xmmword_100EF5E40;
            v91 = objc_msgSend(v124, "currentTool");
            *(_QWORD *)(v90 + 56) = sub_1004B8930(0, &qword_1014068B8, off_1012298B8);
            *(_QWORD *)(v90 + 64) = sub_1005A15B8((unint64_t *)&qword_1014068C0, &qword_1014068B8, off_1012298B8, (uint64_t)&protocol conformance descriptor for NSObject);
            *(_QWORD *)(v90 + 32) = v91;
            sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 711, "Unexpected tool for erase! %@", 29, 2u, v90);
            sub_1004F5394(v90, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 711, (uint64_t)"Unexpected tool for erase! %@", 29, 2u);

            swift_setDeallocating(v90);
            v87 = sub_1004B804C(&qword_1013E0190);
            v88 = v90 + 32;
            v89 = 1;
          }
          swift_arrayDestroy(v88, v89, v87);
          v67 = v121;
          goto LABEL_43;
        }
        v63 = (void *)v62;
        PKEraserTool.eraserType.getter(v62);
        v64 = v119;
        v123(v40, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v119);
        v65 = static PKEraserTool.EraserType.== infix(_:_:)(v5, v40);
        v43(v40, v64);
        v66 = ((uint64_t (*)(char *, uint64_t))v43)(v5, v64);
        if ((v65 & 1) == 0)
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 704, "Should only use pixel eraser for fixed width bitmap erase", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 704, (uint64_t)"Should only use pixel eraser for fixed width bitmap erase", 57, 2u);
        }
        v67 = v121;
        v68 = PKEraserTool.width.getter(v66);
        v69 = (void *)swift_unknownObjectUnownedLoadStrong(v118);
        v70 = objc_msgSend(v69, "freehandDrawingToolkit");

        if (v70)
        {
          v71 = objc_msgSend(v70, "toolkitUIState");

          sub_100B5D148(v71, v68);
          v73 = v72;

          objc_msgSend(v63, "setScaledWidthForSlicingEraser:", v73);
LABEL_43:
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v130);
          (*(void (**)(char *, uint64_t))(v116 + 8))(v67, v49);
          return;
        }
        __break(1u);
        goto LABEL_89;
      }
      v58 = (void *)swift_unknownObjectUnownedLoadStrong(v118);
      v59 = objc_msgSend(v58, "freehandDrawingToolkit");

      if (!v59)
      {
LABEL_90:
        __break(1u);
        return;
      }
      v47 = objc_msgSend(v59, "toolkitUIState");

      objc_msgSend(v47, "setEraserToolErasesWholeObjects:", 0);
    }

    goto LABEL_30;
  }
  v19 = v18;
  if ((sub_100DE4558() & 1) != 0)
  {
    objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_toolkit], "setCurrentToolSelection:", 9);
  }
  else
  {
    v24 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker], "selectedToolItem");
    sub_100DE4D30(*(void **)&v19[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_toolkit]);

  }
  if ((sub_100DE4558() & 1) != 0)
  {
    sub_100B53834();
    sub_100B53FF0();
  }

}

void sub_100B53008(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _BYTE v21[40];

  v2 = sub_1004B804C((uint64_t *)&unk_1014068A8);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for PKHandwritingTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9(a1, 1, 1, v5);
  v10 = (char *)sub_100B4F46C();
  if (v10)
  {
    v11 = v10;
    v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v12 = v13;
  }
  v14 = PKToolPicker._tools.getter(v13);

  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v20 = a1;
    v16 = v14 + 32;
    while (1)
    {
      sub_1004E90B0(v16, (uint64_t)v21);
      v17 = sub_1004B804C((uint64_t *)&unk_101406890);
      if (swift_dynamicCast(v4, v21, v17, v5, 6))
        break;
      v9((uint64_t)v4, 1, 1, v5);
      sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1014068A8);
      v16 += 40;
      if (!--v15)
        goto LABEL_8;
    }
    v9((uint64_t)v4, 0, 1, v5);
    swift_bridgeObjectRelease(v14);
    v18 = v20;
    sub_1004CB800(v20, (uint64_t *)&unk_1014068A8);
    v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
    v19(v8, v4, v5);
    v19((_BYTE *)v18, v8, v5);
    v9(v18, 0, 1, v5);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(v14);
  }
}

void sub_100B53228(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _BYTE v33[40];

  v30 = a2;
  v32 = a1;
  v4 = sub_1004B804C(&qword_101406888);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PKCustomTool(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v11(a3, 1, 1, v7);
  v12 = (char *)sub_100B4F46C();
  if (v12)
  {
    v13 = v12;
    v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v14 = v15;
  }
  v16 = PKToolPicker._tools.getter(v15);

  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease(v16);
    return;
  }
  v28 = a3;
  v29 = v16;
  for (i = v16 + 32; ; i += 40)
  {
    sub_1004E90B0(i, (uint64_t)v33);
    v19 = sub_1004B804C((uint64_t *)&unk_101406890);
    if ((swift_dynamicCast(v6, v33, v19, v7, 6) & 1) != 0)
      break;
    v11((uint64_t)v6, 1, 1, v7);
    sub_1004CB800((uint64_t)v6, &qword_101406888);
LABEL_7:
    if (!--v17)
    {
      swift_bridgeObjectRelease(v29);
      return;
    }
  }
  v11((uint64_t)v6, 0, 1, v7);
  v20 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
  v21 = v20(v10, v6, v7);
  v22 = PKCustomTool.customIdentifier.getter(v21);
  v24 = v23;
  if (v22 == v32 && v23 == v30)
  {
    swift_bridgeObjectRelease(v29);
    v26 = v30;
    goto LABEL_17;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v32, v30, 0);
  v25 = swift_bridgeObjectRelease(v24);
  if ((v31 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v25);
    goto LABEL_7;
  }
  v26 = v29;
LABEL_17:
  swift_bridgeObjectRelease(v26);
  v27 = v28;
  sub_1004CB800(v28, &qword_101406888);
  v20((char *)v27, v10, v7);
  v11(v27, 0, 1, v7);
}

void sub_100B534BC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v20;
  _BYTE *v21;
  _BYTE v22[40];

  v2 = sub_1004B804C(&qword_1014068A0);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for PKEraserTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9(a1, 1, 1, v5);
  v10 = (char *)sub_100B4F46C();
  if (v10)
  {
    v11 = v10;
    v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v12 = v13;
  }
  v14 = PKToolPicker._tools.getter(v13);

  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v21 = v8;
    v16 = v14 + 32;
    while (1)
    {
      sub_1004E90B0(v16, (uint64_t)v22);
      v17 = sub_1004B804C((uint64_t *)&unk_101406890);
      if (swift_dynamicCast(v4, v22, v17, v5, 6))
        break;
      v9((uint64_t)v4, 1, 1, v5);
      sub_1004CB800((uint64_t)v4, &qword_1014068A0);
      v16 += 40;
      if (!--v15)
        goto LABEL_8;
    }
    v9((uint64_t)v4, 0, 1, v5);
    swift_bridgeObjectRelease(v14);
    sub_1004CB800(a1, &qword_1014068A0);
    v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
    v20 = v21;
    v19(v21, v4, v5);
    v19((_BYTE *)a1, v20, v5);
    v9(a1, 0, 1, v5);
  }
  else
  {
LABEL_8:
    v18 = swift_bridgeObjectRelease(v14);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(a1, 1, v5, v18) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"eraserTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 855, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"eraserTool", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 855, (uint64_t)"invalid nil value found", 23, 2u);
  }
}

id sub_100B5376C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  objc_msgSend(v1, "forFillColorChangeAddTarget:action:", v0, "fillColorChangedFromTrayWithSender:");
  objc_msgSend(v1, "forStrokeColorChangeAddTarget:action:", v0, "strokeColorChangedFromTrayWithSender:");
  objc_msgSend(v1, "forSendBackwardAddTarget:action:", v0, "sendBackwardWithSender:");
  objc_msgSend(v1, "forSendToBackAddTarget:action:", v0, "sendToBackWithSender:");
  objc_msgSend(v1, "forBringForwardAddTarget:action:", v0, "bringForwardWithSender:");
  return objc_msgSend(v1, "forBringToFrontAddTarget:action:", v0, "bringToFrontWithSender:");
}

void sub_100B53834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  char *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  Class isa;
  __n128 v62;
  char *v63;
  _QWORD v64[5];

  v1 = v0;
  v2 = sub_1004B804C(&qword_101406888);
  __chkstk_darwin(v2);
  v4 = (char *)&v64[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PKCustomTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v64[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (char *)sub_100B4F46C();
  if (v9)
  {
    v10 = v9;
    v11 = *(id *)&v9[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v11 = v12;
  }
  v13 = objc_msgSend(v11, "isVisible");

  if (v13)
  {
    v14 = (char *)sub_100B4F46C();
    if (v14)
    {
      v15 = v14;
      v16 = *(id *)&v14[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v16 = v17;
    }
    PKToolPicker.selectedTool.getter(v64);

    v18 = sub_1004B804C((uint64_t *)&unk_101406890);
    v19 = swift_dynamicCast(v4, v64, v18, v5, 6);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if ((v19 & 1) == 0)
    {
      v20(v4, 1, 1, v5);
      sub_1004CB800((uint64_t)v4, &qword_101406888);
      return;
    }
    v20(v4, 0, 1, v5);
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v22 = PKCustomTool.customIdentifier.getter(v21);
    if (v22 == 0xD000000000000018 && v23 == 0x8000000100FFA0E0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0xD000000000000018, 0x8000000100FFA0E0, 0);
      v25 = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_21;
    }
    v26 = (char *)sub_100B4F46C();
    if (v26)
    {
      v27 = v26;
      v28 = *(id *)&v26[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v28 = v29;
    }
    v30 = objc_msgSend(v28, "_lassoToolEditingView");

    if (v30)
    {
      v31 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
      if ((objc_msgSend(v31, "isDescendantOfView:", v30) & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

        return;
      }
      v32 = objc_msgSend(v30, "subviews");
      v33 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

      if ((unint64_t)v34 >> 62)
      {
        if (v34 < 0)
          v43 = v34;
        else
          v43 = v34 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v34);
        v35 = _CocoaArrayWrapper.endIndex.getter(v43);
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v36 = swift_bridgeObjectRelease().n128_u64[0];
      v63 = v8;
      if (v35)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 895, "lassoContainerView should have no subviews if lassoEditingView is not installed.", 80, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 895, (uint64_t)"lassoContainerView should have no subviews if lassoEditingView is not installed.", 80, 2u);
      }
      v37 = objc_msgSend(v30, "subviews", v36, v63);
      v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v33);

      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v44 = v38;
        else
          v44 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v38);
        v39 = _CocoaArrayWrapper.endIndex.getter(v44);
        swift_bridgeObjectRelease();
        if (v39)
          goto LABEL_28;
      }
      else
      {
        v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v39)
        {
LABEL_28:
          if (v39 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v39; ++i)
          {
            if ((v38 & 0xC000000000000001) != 0)
              v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
            else
              v41 = *(id *)(v38 + 8 * i + 32);
            v42 = v41;
            objc_msgSend(v41, "removeFromSuperview");

          }
        }
      }
      objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease().n128_f64[0]);
      objc_msgSend(v30, "addSubview:", v31);
      v45 = (void *)objc_opt_self(NSLayoutConstraint);
      v46 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v47 = swift_allocObject(v46, 64, 7);
      *(_OWORD *)(v47 + 16) = xmmword_100EF7310;
      v48 = objc_msgSend(v31, "leadingAnchor");
      v49 = objc_msgSend(v30, "leadingAnchor");
      v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

      *(_QWORD *)(v47 + 32) = v50;
      v51 = objc_msgSend(v31, "trailingAnchor");
      v52 = objc_msgSend(v30, "trailingAnchor");
      v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

      *(_QWORD *)(v47 + 40) = v53;
      v54 = objc_msgSend(v31, "topAnchor");
      v55 = objc_msgSend(v30, "topAnchor");
      v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

      *(_QWORD *)(v47 + 48) = v56;
      v57 = objc_msgSend(v31, "bottomAnchor");
      v58 = objc_msgSend(v30, "bottomAnchor");
      v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

      *(_QWORD *)(v47 + 56) = v59;
      v64[0] = v47;
      specialized Array._endMutation()(v60);
      sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v63, v5, v62);
      return;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 889, "Should be able to get _lassoToolEditingView from PencilKit.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 889, (uint64_t)"Should be able to get _lassoToolEditingView from PencilKit.", 59, 2u);
LABEL_21:
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
  }
}

double sub_100B53FF0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char *v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *Strong;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  double result;
  void *v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  BOOL v44;
  char *v45;
  void *v46;
  id v47;
  void *v48;
  char *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  char v56;
  id v57;
  _BYTE v58[40];
  uint64_t v59;

  v1 = v0;
  sub_100B549D4();
  if ((v2 & 1) == 0)
  {
    v7 = (char *)sub_100B4F46C();
    if (v7)
    {
      v8 = v7;
      v9 = *(id *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v9 = v30;
    }
    objc_msgSend(v9, "_setLassoToolEditingViewVisible:", 0);

    v31 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround), "superview");
    if (!v31)
      return result;
    v33 = v31;
    v57 = objc_msgSend(v31, "superview");

    if (!v57)
      return result;
    objc_msgSend(v57, "setClipsToBounds:", 1);
LABEL_54:

    return result;
  }
  sub_100B549D4();
  if ((v3 & 1) != 0)
    sub_100B552B0();
  sub_100B54AC8();
  sub_100B57244();
  v4 = (char *)sub_100B4F46C();
  if (v4)
  {
    v5 = v4;
    v6 = *(id *)&v4[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v6 = v10;
  }
  objc_msgSend(v6, "_setLassoToolEditingViewVisible:", 0);

  v11 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround), "superview");
  v12 = objc_msgSend(v11, "superview");

  objc_msgSend(v12, "setClipsToBounds:", 0);
  if ((objc_msgSend((id)objc_opt_self(CRLFeatureFlagsHelper), "isOSFeatureEnabled:", 0) & 1) == 0)
  {
    v28 = (char *)sub_100B4F46C();
    if (v28)
    {
      v29 = v28;
      v57 = *(id *)&v28[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v57 = v48;
    }
    objc_msgSend(v57, "_setLassoToolEditingViewVisible:", 1);
    goto LABEL_54;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v14 = objc_msgSend(Strong, "infosForCurrentSelectionPath");

  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  v16 = sub_1005FEFFC(v15);
  swift_bridgeObjectRelease();
  v17 = (uint64_t)_swiftEmptyArrayStorage;
  v59 = (uint64_t)_swiftEmptyArrayStorage;
  v18 = v16[2];
  if (v18)
  {
    v19 = (uint64_t)(v16 + 4);
    swift_retain(v16);
    do
    {
      sub_1004B8968(v19, (uint64_t)v58);
      v20.isa = AnyHashable._bridgeToObjectiveC()().isa;
      v21 = type metadata accessor for CRLBoardItem(0);
      v22 = swift_dynamicCastClass(v20.isa, v21);
      if (v22)
      {
        v23 = v22;
        v24 = sub_1004B89A4((uint64_t)v58);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v26 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v25 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v26 >= v25 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
        specialized Array._endMutation()(v27);
      }
      else
      {

        sub_1004B89A4((uint64_t)v58);
      }
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_release(v16);
    v17 = v59;
  }
  swift_release(v16);
  if (!((unint64_t)v17 >> 62))
  {
    v34 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_27;
LABEL_67:
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    return result;
  }
  while (2)
  {
    if (v17 < 0)
      v55 = v17;
    else
      v55 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v34 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease();
    if (!v34)
      goto LABEL_67;
LABEL_27:
    v35 = 0;
    v56 = 0;
    v36 = 0;
    v37 = v17 & 0xC000000000000001;
    while (1)
    {
      if (v37)
      {
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v17);
      }
      else
      {
        if (v36 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_62;
        v38 = *(id *)(v17 + 32 + 8 * v36);
      }
      v39 = v38;
      if (__OFADD__(v36, 1))
        goto LABEL_61;
      v40 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
      if (swift_dynamicCastClass(v39, v40))
        break;
      ++v36;
LABEL_46:

      v35 = 1;
      if (v36 == v34)
      {
        *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
        if ((v56 & 1) == 0)
          return result;
LABEL_50:
        v45 = (char *)sub_100B4F46C();
        if (v45)
        {
          v46 = v45;
          v47 = *(id *)&v45[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

        }
        else
        {
          sub_100B4F3B8();
          v47 = v52;
        }
        objc_msgSend(v47, "_setLassoToolEditingViewVisible:", 1);

        v53 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
        objc_msgSend(v53, "setSelectedFillColor:", 0);
        objc_msgSend(v53, "setSelectedStrokeColor:", 0);
        return result;
      }
    }

    if (v36 + 1 != v34)
    {
      v41 = v36 + 5;
      while (1)
      {
        v42 = v41 - 4;
        if (v37)
        {
          v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41 - 4, v17);
        }
        else
        {
          if (v42 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_62;
          v43 = *(id *)(v17 + 8 * v41);
        }
        v39 = v43;
        v44 = __OFADD__(v42, 1);
        v36 = v41 - 3;
        if (v44)
          break;
        if (!swift_dynamicCastClass(v43, v40))
        {
          v56 = 1;
          goto LABEL_46;
        }

        ++v41;
        if (v36 == v34)
          goto LABEL_49;
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      continue;
    }
    break;
  }
LABEL_49:
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
    goto LABEL_50;
  v49 = (char *)sub_100B4F46C();
  if (v49)
  {
    v50 = v49;
    v51 = *(id *)&v49[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v51 = v54;
  }
  objc_msgSend(v51, "_setLassoToolEditingViewVisible:", 1);

  return result;
}

void sub_100B545BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *Strong;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void (*v16)(_BYTE *, uint64_t, __n128);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _BYTE v23[24];

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) = 1;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController);
    objc_msgSend(Strong, "addModeObserver:", v1);

    v7 = v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
    v8 = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v9 = objc_msgSend(v8, "freehandDrawingToolkit");

    if (v9)
    {
      objc_msgSend(v9, "addToolkitObserver:", v1);

      v10 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      v11 = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController);
      NSNotificationCenter.publisher(for:object:)(CFSTR("CRLEditorControllerSelectionPathDidChangeNotification"), v11);

      v12 = swift_allocObject(&unk_1012958F8, 24, 7);
      swift_unknownObjectWeakInit(v12 + 16);
      v13 = sub_1004B7878((unint64_t *)&qword_1013FE290, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
      v14 = Publisher<>.sink(receiveValue:)(sub_100B5DADC, v12, v2, v13);
      v15 = swift_release(v12);
      v16 = *(void (**)(_BYTE *, uint64_t, __n128))(v3 + 8);
      v16(v5, v2, v15);
      v17 = v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions;
      swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions, v23, 33, 0);
      AnyCancellable.store(in:)(v17);
      swift_endAccess(v23);
      swift_release(v14);
      v18 = (void *)swift_unknownObjectUnownedLoadStrong(v7);
      NSNotificationCenter.publisher(for:object:)(CFSTR("CRLInteractiveCanvasControllerDidLayoutNotification"), v18);

      v19 = swift_allocObject(&unk_1012958F8, 24, 7);
      swift_unknownObjectWeakInit(v19 + 16);
      v20 = Publisher<>.sink(receiveValue:)(sub_100B5DAFC, v19, v2, v13);
      v21 = swift_release(v19);
      v16(v5, v2, v21);
      swift_beginAccess(v17, v23, 33, 0);
      AnyCancellable.store(in:)(v17);
      swift_endAccess(v23);

      swift_release(v20);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100B54894(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_100B548E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) = 0;
    v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions);
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions, v6, 1, 0);
    v2 = *v1;
    *v1 = (uint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v2);
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController);
    objc_msgSend(Strong, "removeModeObserver:", v0);

    v4 = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v5 = objc_msgSend(v4, "freehandDrawingToolkit");

    if (v5)
    {
      objc_msgSend(v5, "removeToolkitObserver:", v0);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100B549D4()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController);
  v2 = objc_msgSend(Strong, "mode");

  v3 = objc_msgSend(v2, "pencilModeType");
  if (v3 == (id)1)
  {
    v4 = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v5 = objc_msgSend(v4, "freehandDrawingToolkit");

    if (v5)
    {
      v6 = objc_msgSend(v5, "currentTool");

      objc_msgSend(v6, "type");
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100B54AC8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  char v37;
  Swift::Int v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  id v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  __n128 v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  char v69;
  uint64_t v70;
  id v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  int64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  void *v88;
  _QWORD v89[5];
  _QWORD v90[6];

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v86 = objc_msgSend(Strong, "changeNotifier");

  if (!v86)
    return;
  v2 = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController);
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  v5 = objc_msgSend(v2, "mostSpecificCurrentEditorOfClass:", swift_getObjCClassFromMetadata(v3, v4));

  if (!v5)
  {
LABEL_10:

    return;
  }
  v6 = objc_opt_self(CRLShapeEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (!v7)
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_10;
  }
  v8 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos);
  v10 = objc_msgSend(v7, "boardItems", swift_bridgeObjectRetain(v9).n128_f64[0]);
  v11 = type metadata accessor for CRLBoardItem(0);
  v12 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v11, v12);

  v82 = v13 & 0xC000000000000001;
  v85 = v11;
  v79 = v0;
  v74 = v8;
  v75 = v5;
  v73 = v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    if (v13 < 0)
      v14 = v13;
    else
      v14 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v15 = __CocoaSet.makeIterator()(v14);
    v16 = Set.Iterator.init(_cocoa:)(v89, v15, v11, v12);
    v17 = v89[0];
    v77 = v89[1];
    v19 = v89[2];
    v18 = v89[3];
    v20 = v89[4];
  }
  else
  {
    v21 = -1 << *(_BYTE *)(v13 + 32);
    v77 = v13 + 56;
    v19 = ~v21;
    v22 = -v21;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    else
      v23 = -1;
    v20 = v23 & *(_QWORD *)(v13 + 56);
    swift_bridgeObjectRetain(v13);
    v18 = 0;
    v17 = v13;
  }
  v76 = (unint64_t)(v19 + 64) >> 6;
  v24 = v9 & 0xC000000000000001;
  v25 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v9 < 0)
    v25 = v9;
  v80 = v25;
  v83 = v9 + 56;
  v84 = v13;
  while (1)
  {
    v26 = v18;
    if ((v17 & 0x8000000000000000) == 0)
      break;
    v29 = __CocoaSet.Iterator.next()(v16);
    if (!v29)
      goto LABEL_51;
    v30 = v29;
    v88 = (void *)v29;
    swift_unknownObjectRetain(v29);
    swift_dynamicCast(v90, &v88, (char *)&type metadata for Swift.AnyObject + 8, v85, 7);
    v31 = (id)v90[0];
    swift_unknownObjectRelease(v30);
    if (!v31)
      goto LABEL_51;
LABEL_41:
    if (v24)
    {
      v35 = v31;
      v37 = __CocoaSet.contains(_:)(v36);

      if ((v37 & 1) == 0)
        goto LABEL_18;
    }
    else
    {
      if (!*(_QWORD *)(v9 + 16))
        goto LABEL_18;
      v38 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v9 + 40));
      v39 = -1 << *(_BYTE *)(v9 + 32);
      v40 = v38 & ~v39;
      if (((*(_QWORD *)(v83 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
        goto LABEL_18;
      v41 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v40);
      v42 = static NSObject.== infix(_:_:)(v41, v31);

      if ((v42 & 1) == 0)
      {
        v43 = ~v39;
        while (1)
        {
          v40 = (v40 + 1) & v43;
          if (((*(_QWORD *)(v83 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
            break;
          v44 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v40);
          v45 = static NSObject.== infix(_:_:)(v44, v31);

          if ((v45 & 1) != 0)
            goto LABEL_19;
        }
LABEL_18:
        objc_msgSend(v86, "addObserver:forChangeSource:", v79, v31, v73);
      }
    }
LABEL_19:

  }
  if (v20)
  {
    v27 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v28 = v27 | (v18 << 6);
    goto LABEL_40;
  }
  v32 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_94:
    __break(1u);
    return;
  }
  if (v32 >= v76)
    goto LABEL_51;
  v33 = *(_QWORD *)(v77 + 8 * v32);
  ++v18;
  if (v33)
    goto LABEL_39;
  v18 = v26 + 2;
  if (v26 + 2 >= v76)
    goto LABEL_51;
  v33 = *(_QWORD *)(v77 + 8 * v18);
  if (v33)
    goto LABEL_39;
  v18 = v26 + 3;
  if (v26 + 3 >= v76)
    goto LABEL_51;
  v33 = *(_QWORD *)(v77 + 8 * v18);
  if (v33)
    goto LABEL_39;
  v18 = v26 + 4;
  if (v26 + 4 >= v76)
    goto LABEL_51;
  v33 = *(_QWORD *)(v77 + 8 * v18);
  if (v33)
  {
LABEL_39:
    v20 = (v33 - 1) & v33;
    v28 = __clz(__rbit64(v33)) + (v18 << 6);
LABEL_40:
    v31 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v28);
    if (!v31)
      goto LABEL_51;
    goto LABEL_41;
  }
  v34 = v26 + 5;
  while (v76 != v34)
  {
    v33 = *(_QWORD *)(v77 + 8 * v34++);
    if (v33)
    {
      v18 = v34 - 1;
      goto LABEL_39;
    }
  }
LABEL_51:
  v46 = (_QWORD *)sub_1004D284C(v17);
  if (v24)
  {
    v47 = __CocoaSet.makeIterator()(v80);
    v46 = Set.Iterator.init(_cocoa:)(v90, v47, v85, v73);
    v9 = v90[0];
    v83 = v90[1];
    v48 = v90[2];
    v24 = v90[3];
    v49 = v90[4];
  }
  else
  {
    v50 = -1 << *(_BYTE *)(v9 + 32);
    v48 = ~v50;
    v51 = -v50;
    if (v51 < 64)
      v52 = ~(-1 << v51);
    else
      v52 = -1;
    v49 = v52 & *(_QWORD *)(v9 + 56);
  }
  v78 = (unint64_t)(v48 + 64) >> 6;
  v81 = v84 + 56;
  while (2)
  {
    v53 = v24;
    if (v9 < 0)
    {
      v56 = __CocoaSet.Iterator.next()(v46);
      if (!v56)
        goto LABEL_91;
      v57 = v56;
      v87 = v56;
      swift_unknownObjectRetain(v56);
      swift_dynamicCast(&v88, &v87, (char *)&type metadata for Swift.AnyObject + 8, v85, 7);
      v58 = v88;
      swift_unknownObjectRelease(v57);
      if (!v58)
        goto LABEL_91;
      goto LABEL_81;
    }
    if (v49)
    {
      v54 = __clz(__rbit64(v49));
      v49 &= v49 - 1;
      v55 = v54 | (v24 << 6);
LABEL_80:
      v58 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v55);
      if (!v58)
        goto LABEL_91;
LABEL_81:
      if (v82)
      {
        v62 = v58;
        v64 = __CocoaSet.contains(_:)(v63);

        if ((v64 & 1) != 0)
          goto LABEL_59;
LABEL_58:
        objc_msgSend(v86, "removeObserver:forChangeSource:", v79, v58, v73);
      }
      else
      {
        if (!*(_QWORD *)(v84 + 16))
          goto LABEL_58;
        v65 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v84 + 40));
        v66 = -1 << *(_BYTE *)(v84 + 32);
        v67 = v65 & ~v66;
        if (((*(_QWORD *)(v81 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
          goto LABEL_58;
        v68 = *(id *)(*(_QWORD *)(v84 + 48) + 8 * v67);
        v69 = static NSObject.== infix(_:_:)(v68, v58);

        if ((v69 & 1) == 0)
        {
          v70 = ~v66;
          do
          {
            v67 = (v67 + 1) & v70;
            if (((*(_QWORD *)(v81 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
              goto LABEL_58;
            v71 = *(id *)(*(_QWORD *)(v84 + 48) + 8 * v67);
            v72 = static NSObject.== infix(_:_:)(v71, v58);

          }
          while ((v72 & 1) == 0);
        }
      }
LABEL_59:

      continue;
    }
    break;
  }
  v59 = v24 + 1;
  if (__OFADD__(v24, 1))
    goto LABEL_94;
  if (v59 >= v78)
    goto LABEL_91;
  v60 = *(_QWORD *)(v83 + 8 * v59);
  ++v24;
  if (v60)
    goto LABEL_79;
  v24 = v53 + 2;
  if ((uint64_t)(v53 + 2) >= v78)
    goto LABEL_91;
  v60 = *(_QWORD *)(v83 + 8 * v24);
  if (v60)
    goto LABEL_79;
  v24 = v53 + 3;
  if ((uint64_t)(v53 + 3) >= v78)
    goto LABEL_91;
  v60 = *(_QWORD *)(v83 + 8 * v24);
  if (v60)
    goto LABEL_79;
  v24 = v53 + 4;
  if ((uint64_t)(v53 + 4) >= v78)
    goto LABEL_91;
  v60 = *(_QWORD *)(v83 + 8 * v24);
  if (v60)
  {
LABEL_79:
    v49 = (v60 - 1) & v60;
    v55 = __clz(__rbit64(v60)) + (v24 << 6);
    goto LABEL_80;
  }
  v61 = v53 + 5;
  while (v78 != v61)
  {
    v60 = *(_QWORD *)(v83 + 8 * v61++);
    if (v60)
    {
      v24 = v61 - 1;
      goto LABEL_79;
    }
  }
LABEL_91:
  sub_1004D284C(v9);
  *(_QWORD *)(v79 + v74) = v84;

  swift_unknownObjectRelease(v75);
  swift_bridgeObjectRelease();
}

void sub_100B552B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  void *v28;
  uint32_t *p_align;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  double *v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CGColorSpace *v53;
  uint64_t v54;
  id v55;
  __n128 v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t (*v62)(void);
  _QWORD *v63;
  void *v64;
  void *v65;
  unsigned __int8 v66;
  double v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double *v87;
  char *v88;
  void *v89;
  uint64_t v90;
  _QWORD *v91;
  double *v92;
  void *v93;
  unint64_t v94;
  uint64_t v95;
  id v96;
  char v97[24];
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v1 = v0;
  v2 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v2);
  v88 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController);
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  v7 = objc_msgSend(Strong, "mostSpecificCurrentEditorOfClass:", swift_getObjCClassFromMetadata(v5, v6));

  if (!v7)
    goto LABEL_17;
  v9 = objc_opt_self(CRLShapeEditor);
  v10 = swift_dynamicCastObjCClass(v7, v9);
  if (!v10)
  {
    *(_QWORD *)&v8 = swift_unknownObjectRelease(v7).n128_u64[0];
LABEL_17:
    v26 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
    objc_msgSend(v26, "setSelectedFillColor:", 0, v8);
    objc_msgSend(v26, "setSelectedStrokeColor:", 0);
    return;
  }
  v11 = (void *)v10;
  v12 = type metadata accessor for CRLShapeItem(0);
  v14 = objc_msgSend(v11, "sortedBoardItemsOfClass:", swift_getObjCClassFromMetadata(v12, v13));
  v15 = type metadata accessor for CRLBoardItem(0);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  v17 = (uint64_t)sub_1005B9E38(v16);
  swift_bridgeObjectRelease();
  if (!v17)
  {
    swift_unknownObjectRelease(v7);
    return;
  }
  v98 = (unint64_t)_swiftEmptyArrayStorage;
  v18 = v17 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v17 >> 62)
    goto LABEL_59;
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  if (v19)
  {
    if (v19 < 1)
    {
      __break(1u);
LABEL_70:
      __break(1u);
      return;
    }
    for (i = 0; i != v19; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v23 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      else
        v23 = *(id *)(v17 + 8 * i + 32);
      v24 = v23;
      v25 = (*(uint64_t (**)(void))((swift_isaMask & *v23) + 0x2A0))();
      if ((v25 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
        v21 = *(_QWORD *)(v98 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v24);
        specialized ContiguousArray._endMutation()(v22);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v27 = v98;
    if ((v98 & 0x8000000000000000) != 0)
      goto LABEL_63;
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_63;
  }
  if ((v27 & 0x4000000000000000) == 0)
  {
    v28 = *(void **)(v27 + 16);
    p_align = (_DWORD *)(&stru_101370FE8 + 24);
    if (!v28)
      goto LABEL_64;
    goto LABEL_24;
  }
LABEL_63:
  swift_bridgeObjectRetain(v27);
  v28 = (void *)_CocoaArrayWrapper.endIndex.getter(v72);
  swift_release(v27);
  p_align = &stru_101370FE8.align;
  if (v28)
  {
LABEL_24:
    v75 = v1;
    v76 = v7;
    v30 = 0;
    v7 = 0;
    v94 = v27 & 0xC000000000000001;
    v31 = 4;
    v92 = (double *)v27;
    v93 = v28;
    while (1)
    {
      v17 = v31 - 4;
      v96 = v30;
      if (v94)
      {
        v32 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31 - 4, v27);
        v18 = v31 - 3;
        if (__OFADD__(v17, 1))
          goto LABEL_58;
      }
      else
      {
        v32 = *(id *)(v27 + 8 * v31);
        v18 = v31 - 3;
        if (__OFADD__(v17, 1))
        {
LABEL_58:
          __break(1u);
LABEL_59:
          if (v17 >= 0)
            v71 = v18;
          else
            v71 = v17;
          swift_bridgeObjectRetain(v17);
          v19 = _CocoaArrayWrapper.endIndex.getter(v71);
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      v33 = (double *)v27;
      v95 = v18;
      if (v7)
        goto LABEL_34;
      v89 = 0;
      v91 = v32;
      v35 = *(_QWORD **)((char *)v32 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v36 = *v35;
      v37 = swift_conformsToProtocol2(*v35, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (!v37)
        goto LABEL_70;
      v38 = v37;
      v39 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 16);
      v40 = swift_retain(v35);
      v41 = (uint64_t)v88;
      v39(v36, v38, v40);
      swift_release(v35);
      v42 = sub_1004B804C((uint64_t *)&unk_1014148A0);
      CRRegister.wrappedValue.getter(v42);
      v87 = (double *)v98;
      v90 = v99;
      v43 = v100;
      v44 = v101;
      v85 = v102;
      v45 = v104;
      v84 = v103;
      v46 = v105;
      v83 = v106;
      v48 = v107;
      v47 = v108;
      v1 = v109;
      v49 = v110;
      v86 = v111;
      sub_1008F0238(v41);
      v7 = v89;
      v33 = v92;
      v32 = v91;
      if (!v49)
        goto LABEL_34;
      v77 = sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
      v112 = v43;
      v81 = v43;
      v113 = BYTE4(v43) & 1;
      v82 = v44;
      v114 = v44;
      v50 = v85;
      v51 = v84;
      v115 = v85;
      v116 = v84;
      v117 = v45;
      v118 = v46;
      v79 = v46;
      v52 = v83;
      v119 = v83;
      v120 = v48;
      v78 = v47;
      v121 = v47;
      v122 = v1;
      v123 = v49;
      swift_bridgeObjectRetain(v1);
      swift_bridgeObjectRetain(v49);
      v80 = v45;
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRetain(v48);
      v53 = sub_1006C52C0((uint64_t)&v112);
      v54 = v52;
      if ((v90 & 1) != 0)
      {
        if (qword_1013DD868 != -1)
          swift_once(&qword_1013DD868, sub_100A05844);
        swift_beginAccess(&static OS_os_log.persistence, v97, 0, 0);
        v55 = (id)static OS_os_log.persistence;
        v57 = static os_log_type_t.info.getter(v56);
        sub_100A06EBC((uint64_t)v55, &_mh_execute_header, v57, "Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
      v58 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v53);

      sub_1004C4174((uint64_t)v87, v90, v81, v82, v50, v51, v80, v79, v54, v48, v78, v1, v49, v86);
      v59 = objc_opt_self(CRLColorFill);
      v60 = (void *)swift_dynamicCastObjCClass(v58, v59);
      if (!v60)
        break;
      v61 = objc_msgSend(v60, "color");

      v7 = v61;
      v30 = v96;
      v27 = (unint64_t)v92;
      v32 = v91;
      if (v96)
      {
        v34 = v93;

        if (!v61)
          goto LABEL_27;
        goto LABEL_26;
      }
LABEL_47:
      v62 = *(uint64_t (**)(void))((swift_isaMask & *v32) + 0x420);
      v63 = v32;
      v64 = (void *)v62();
      v65 = v63;

      v34 = v93;
      if (v64)
      {
        v66 = objc_msgSend(v64, "isNullStroke");
        v27 = (unint64_t)v92;
        if ((v66 & 1) == 0)
        {
          v30 = objc_msgSend(v64, "color");

          if (!v7)
            goto LABEL_27;
          goto LABEL_26;
        }

      }
      else
      {
        v27 = (unint64_t)v92;
      }

      if (!v7)
        goto LABEL_27;
LABEL_26:
      if (v30)
      {
        v28 = v7;
        *(_QWORD *)&v67 = swift_release(v27).n128_u64[0];
        v68 = *(void **)(v75 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
        v7 = v76;
LABEL_57:
        p_align = &stru_101370FE8.align;
        v70 = objc_msgSend(v28, "UIColor", v67);
        goto LABEL_65;
      }
LABEL_27:
      ++v31;
      if ((void *)v95 == v34)
      {
        *(_QWORD *)&v67 = swift_release(v27).n128_u64[0];
        v68 = *(void **)(v75 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
        v69 = v7;
        v7 = v76;
        v28 = v69;
        if (!v69)
        {
          v70 = 0;
          p_align = (_DWORD *)(&stru_101370FE8 + 24);
          goto LABEL_65;
        }
        goto LABEL_57;
      }
    }

    v7 = v89;
    v33 = v92;
    v32 = v91;
LABEL_34:
    v30 = v96;
    if (v96)
    {
      v34 = v93;
      v27 = (unint64_t)v33;

      if (!v7)
        goto LABEL_27;
      goto LABEL_26;
    }
    goto LABEL_47;
  }
LABEL_64:
  *(_QWORD *)&v67 = swift_release(v27).n128_u64[0];
  v70 = 0;
  v30 = 0;
  v68 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
LABEL_65:
  objc_msgSend(v68, "setSelectedFillColor:", v70, v67);

  if (v30)
    v73 = objc_msgSend(v30, *((SEL *)p_align + 350));
  else
    v73 = 0;
  objc_msgSend(v68, "setSelectedStrokeColor:", v73);

  swift_unknownObjectRelease(v7);
}

void sub_100B55BA8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView), "selectedFillColor"));
  if (v3)
  {
    v9 = v3;
    swift_unknownObjectRetain(a1);
    v4 = objc_opt_self(CRLiOSPencilTrayColorWell);
    v5 = swift_dynamicCastObjCClass(a1, v4);
    if (v5)
    {
      v6 = (void *)v5;
      v8 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithUIColor:", v9);
      sub_100B55FE0(20, (uint64_t)v8, (int)objc_msgSend(v6, "isUpdatingContinuously"));

      swift_unknownObjectRelease(a1);
      v7 = v8;
    }
    else
    {
      swift_unknownObjectRelease(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1107, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1107, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      v7 = v9;
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1104, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1104, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B55DC4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView), "selectedStrokeColor"));
  if (v3)
  {
    v9 = v3;
    swift_unknownObjectRetain(a1);
    v4 = objc_opt_self(CRLiOSPencilTrayColorWell);
    v5 = swift_dynamicCastObjCClass(a1, v4);
    if (v5)
    {
      v6 = (void *)v5;
      v8 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithUIColor:", v9);
      sub_100B55FE0(15, (uint64_t)v8, (int)objc_msgSend(v6, "isUpdatingContinuously"));

      swift_unknownObjectRelease(a1);
      v7 = v8;
    }
    else
    {
      swift_unknownObjectRelease(a1);
      sub_100757E04(&_mh_execute_header, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1118, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      v7 = v9;
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1115, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B55FE0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t (*v29)(void);
  id v30;
  void *v31;
  void *v32;
  unsigned int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  CGColorSpace *v56;
  uint64_t v57;
  id v58;
  __n128 v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  void *v68;
  char *v69;
  void *v70;
  id v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CKRecordID v86;
  Swift::String v87;
  uint64_t v88;
  char *v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  NSString v96;
  NSString v97;
  id v98;
  uint64_t v99;
  double *v100;
  double *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  char *v106;
  id v107;
  uint64_t v108;
  void (*v109)(__n128);
  char *v110;
  __n128 v111;
  char *v112;
  NSUUID v113;
  _BYTE *v114;
  Class v115;
  char *v116;
  char *v117;
  uint64_t (*v118)(void);
  char *v119;
  void *v120;
  id v121;
  uint64_t v122;
  id v123;
  id v124;
  uint64_t v125;
  void (*v126)(__n128);
  __n128 v127;
  char *v128;
  Class isa;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  _QWORD v163[14];
  uint64_t v164[3];
  id v165;
  int v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v143 = a3;
  v155 = a2;
  v6 = type metadata accessor for UUID(0);
  v157 = *(_QWORD *)(v6 - 8);
  v158 = v6;
  __chkstk_darwin(v6);
  v156 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v8);
  v154 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = v3;
  v142 = v3 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController);
  v11 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  v13 = (uint64_t)objc_msgSend(Strong, "mostSpecificCurrentEditorOfClass:", swift_getObjCClassFromMetadata(v11, v12));

  v14 = _swiftEmptyArrayStorage;
  if (!v13)
    goto LABEL_35;
  v15 = objc_opt_self(CRLShapeEditor);
  v16 = swift_dynamicCastObjCClass(v13, v15);
  if (!v16)
  {
    swift_unknownObjectRelease(v13);
LABEL_35:
    sub_100757E04(&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1146, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v17 = (void *)v16;
  if (a1 != 15 && a1 != 20)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1151, "Unexpected property type in setSelectedShapeProperty(). Ignoring.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1151, (uint64_t)"Unexpected property type in setSelectedShapeProperty(). Ignoring.", 65, 2u);
    swift_unknownObjectRelease(v13);
    return;
  }
  v18 = type metadata accessor for CRLShapeItem(0);
  v20 = (char *)objc_msgSend(v17, "sortedBoardItemsOfClass:", swift_getObjCClassFromMetadata(v18, v19));
  v21 = type metadata accessor for CRLBoardItem(0);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  v164[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v20 = (char *)v22;
    else
      v20 = (char *)(v22 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v20);
    v159 = a1;
    if (v23)
      goto LABEL_7;
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    v159 = a1;
    if (v23)
    {
LABEL_7:
      v131 = v13;
      if (v23 >= 1)
      {
        v24 = 0;
        v160 = v22 & 0xC000000000000001;
        v151 = v22;
        v153 = (char *)v23;
        v132 = v18;
        while (1)
        {
          v161 = v24;
          if (v160)
            v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
          else
            v25 = *(id *)(v22 + 8 * (_QWORD)v24 + 32);
          v26 = v25;
          v27 = (_QWORD *)swift_dynamicCastClass(v25, v18);
          if (v27)
          {
            v28 = v27;
            if (((*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x2A0))() & 1) != 0)
            {
              if (a1 == 15)
              {
                v29 = *(uint64_t (**)(void))((swift_isaMask & *v28) + 0x420);
                v30 = v26;
                v31 = (void *)v29();
                if (!v31)
                {

                  v23 = (uint64_t)v153;
                  goto LABEL_11;
                }
                v32 = v31;
                v33 = objc_msgSend(v31, "isNullStroke");

                v23 = (uint64_t)v153;
                if (v33)
                {

LABEL_31:
                  v22 = v151;
                  goto LABEL_11;
                }
              }
              else
              {
                v35 = *(_QWORD **)((char *)v28 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
                v36 = *v35;
                v37 = swift_conformsToProtocol2(*v35, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                if (!v37)
                  goto LABEL_120;
                v38 = v37;
                v39 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 16);
                v152 = v26;
                v40 = swift_retain(v35);
                v41 = v154;
                v39(v36, v38, v40);
                swift_release(v35);
                v42 = sub_1004B804C((uint64_t *)&unk_1014148A0);
                CRRegister.wrappedValue.getter(v42);
                v43 = v163[0];
                v45 = v163[2];
                v44 = v163[3];
                v46 = v163[5];
                v147 = v163[4];
                v148 = v163[1];
                v47 = v163[8];
                v145 = v163[7];
                v146 = v163[6];
                v48 = v163[10];
                v144 = v163[9];
                v49 = v163[11];
                v149 = (id)v163[13];
                v50 = (uint64_t)v41;
                v51 = v163[12];
                sub_1008F0238(v50);
                if (!v51)
                {
                  v65 = v152;

                  a1 = v159;
                  v18 = v132;
                  v22 = v151;
                  v23 = (uint64_t)v153;
                  goto LABEL_11;
                }
                v141 = v43;
                v133 = sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
                v166 = v45;
                v138 = v45;
                v139 = v46;
                v167 = BYTE4(v45) & 1;
                v140 = v44;
                v168 = v44;
                v53 = v146;
                v52 = v147;
                v169 = v147;
                v170 = v46;
                v54 = v144;
                v55 = v145;
                v171 = v146;
                v172 = v145;
                v136 = v48;
                v137 = v47;
                v173 = v47;
                v174 = v144;
                v175 = v48;
                v176 = v49;
                v177 = v51;
                v135 = v49;
                swift_bridgeObjectRetain(v49);
                v134 = v51;
                swift_bridgeObjectRetain(v51);
                swift_bridgeObjectRetain(v53);
                swift_bridgeObjectRetain(v54);
                v56 = sub_1006C52C0((uint64_t)&v166);
                v57 = v148;
                if ((v148 & 1) != 0)
                {
                  if (qword_1013DD868 != -1)
                    swift_once(&qword_1013DD868, sub_100A05844);
                  swift_beginAccess(&static OS_os_log.persistence, &v162, 0, 0);
                  v58 = (id)static OS_os_log.persistence;
                  v60 = static os_log_type_t.info.getter(v59);
                  sub_100A06EBC((uint64_t)v58, &_mh_execute_header, v60, "Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

                }
                v61 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v56);

                sub_1004C4174(v141, v57, v138, v140, v52, v139, v53, v55, v137, v54, v136, v135, v134, (uint64_t)v149);
                a1 = v159;
                v18 = v132;
                v23 = (uint64_t)v153;
              }
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
              v63 = *(_QWORD *)((v164[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              v62 = *(_QWORD *)((v164[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v63 >= v62 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
              v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v28);
              specialized Array._endMutation()(v64);
              goto LABEL_31;
            }
          }
          else
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1166, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1166, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          }

LABEL_11:
          v24 = v161 + 1;
          if ((char *)v23 == v161 + 1)
          {
            swift_bridgeObjectRelease();
            v18 = v164[0];
            v13 = v131;
            goto LABEL_43;
          }
        }
      }
      __break(1u);
      goto LABEL_79;
    }
  }
  swift_bridgeObjectRelease();
  v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_43:
  swift_bridgeObjectRelease();
  v66 = (char *)((unint64_t)v18 >> 62);
  if (!((unint64_t)v18 >> 62))
  {
    if (*(uint64_t *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
      goto LABEL_45;
LABEL_75:
    v77 = v13;
    goto LABEL_76;
  }
  if (v18 < 0)
    v82 = v18;
  else
    v82 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v83 = v82;
  v66 = (char *)((unint64_t)v18 >> 62);
  v84 = _CocoaArrayWrapper.endIndex.getter(v83);
  swift_bridgeObjectRelease();
  if (v84 <= 0)
    goto LABEL_75;
LABEL_45:
  v67 = v150 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
  v68 = (void *)swift_unknownObjectUnownedLoadStrong(v150 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v69 = (char *)objc_msgSend(v68, "editingCoordinator");

  if (!v69)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1185, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1185, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v77 = v13;
LABEL_76:
    swift_unknownObjectRelease(v77);
    goto LABEL_77;
  }
  v154 = v66;
  v20 = (char *)*(id *)&v69[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController];

  v70 = (void *)swift_unknownObjectUnownedLoadStrong(v67);
  v71 = objc_msgSend(v70, "canvasEditor");

  v152 = v71;
  if (!v71)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1186, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1186, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_unknownObjectRelease(v13);

LABEL_77:
    swift_bridgeObjectRelease();
    return;
  }
  v151 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates;
  v72 = *(_BYTE *)(v150 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates);
  v160 = v18;
  v161 = v20;
  if ((v72 & 1) != 0 || (v143 & 1) == 0)
    goto LABEL_94;
  v14 = (double *)v13;
  sub_1006A9664(0);
  v4 = (uint64_t)&v20[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess(&v20[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas], v164, 0, 0);
  v13 = *(_QWORD *)v4;
  if (*(_QWORD *)v4 >> 62)
  {
LABEL_79:
    if (v13 < 0)
      v85 = v13;
    else
      v85 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v73 = _CocoaArrayWrapper.endIndex.getter(v85);
    if (!v73)
      goto LABEL_83;
    goto LABEL_51;
  }
  v73 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)v4);
  if (!v73)
  {
LABEL_83:
    swift_bridgeObjectRelease();
    v4 = 2;
    v13 = 77;
    v20 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
    sub_100757E04(&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v86, v87);
    v74 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_84;
  }
LABEL_51:
  v74 = v73 - 1;
  if (__OFSUB__(v73, 1))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v74 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v74 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v75 = *(_QWORD *)(v13 + 8 * v74 + 32);
      swift_retain(v75);
      goto LABEL_56;
    }
    __break(1u);
    goto LABEL_88;
  }
LABEL_85:
  v75 = specialized _ArrayBuffer._getElementSlowPath(_:)(v74, v13);
LABEL_56:
  swift_bridgeObjectRelease();
  v76 = *(unsigned __int8 *)(v75 + 16);
  if (v76 == 3)
  {
    swift_release(v75);
    v13 = (uint64_t)v14;
    goto LABEL_93;
  }
  v13 = (uint64_t)v14;
  if (v76 != 2 && v76 != 1)
  {
    v153 = (char *)v75;
    v13 = *(_QWORD *)v4;
    if (!(*(_QWORD *)v4 >> 62))
    {
      v78 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)v4, 2);
      if (v78)
      {
LABEL_65:
        if (v78 < 1)
          goto LABEL_119;
        v79 = 0;
        do
        {
          if ((v13 & 0xC000000000000001) != 0)
          {
            v80 = specialized _ArrayBuffer._getElementSlowPath(_:)(v79, v13);
          }
          else
          {
            v80 = *(_QWORD *)(v13 + 8 * v79 + 32);
            swift_retain(v80);
          }
          ++v79;
          v81 = *(id *)(v80 + 24);
          sub_1006A72F4(v81, 0);
          swift_release(v80);

        }
        while (v78 != v79);
      }
LABEL_92:
      swift_bridgeObjectRelease_n(v13, 2);
      v89 = v153;
      v153[16] = 1;
      swift_release(v89);
      v13 = (uint64_t)v14;
      a1 = v159;
      v18 = v160;
      v20 = v161;
      goto LABEL_93;
    }
LABEL_88:
    if (v13 < 0)
      v88 = v13;
    else
      v88 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v13, 2);
    v78 = _CocoaArrayWrapper.endIndex.getter(v88);
    if (v78)
      goto LABEL_65;
    goto LABEL_92;
  }
  swift_release(v75);
LABEL_93:
  *(_BYTE *)(v150 + v151) = 1;
LABEL_94:
  v90 = (void *)swift_unknownObjectUnownedLoadStrong(v142);
  v91 = v152;
  v92 = objc_msgSend(v90, "selectionPath", swift_unknownObjectRetain(v152).n128_f64[0]);

  v93 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasCommandSelectionBehavior), "initWithCanvasEditor:type:selectionPath:", v91, 2, v92);
  swift_unknownObjectRelease(v91);

  v94 = v93;
  sub_1006A9664(v93);
  v149 = v94;

  v95 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v131 = v13;
  v96 = String._bridgeToObjectiveC()();
  v97 = String._bridgeToObjectiveC()();
  v98 = objc_msgSend(v95, "localizedStringForKey:value:table:", v96, v97, 0);

  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  sub_1006A92B4(v99, v101);
  if (v154)
  {
    if (v18 < 0)
      v103 = v18;
    else
      v103 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v102 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease();
    if (!v102)
    {
LABEL_114:
      swift_bridgeObjectRelease();
      sub_1006A984C(0);
      v130 = v151;
      if (*(_BYTE *)(v150 + v151) == 1 && (v143 & 1) == 0)
      {
        sub_1006A984C(0);
        *(_BYTE *)(v150 + v130) = 0;
      }
      swift_unknownObjectRelease(v152);

      swift_unknownObjectRelease(v131);
      return;
    }
  }
  else
  {
    v102 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v102)
      goto LABEL_114;
  }
  if (v102 >= 1)
  {
    v104 = 0;
    v154 = (char *)(v18 & 0xC000000000000001);
    v153 = (char *)&type metadata for Any + 8;
    do
    {
      if (v154)
        v116 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v104, v18);
      else
        v116 = (char *)*(id *)(v18 + 8 * v104 + 32);
      v117 = v116;
      if (a1 == 15)
      {
        v118 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v116) + 0x420);
        v119 = v116;
        v120 = (void *)v118();

        if (v120
          && (v121 = objc_msgSend(v120, "mutableCopy"),
              v120,
              _bridgeAnyObjectToAny(_:)(v163, v121),
              swift_unknownObjectRelease(v121),
              v122 = sub_1004B804C(&qword_101406880),
              (swift_dynamicCast(&v165, v163, v153, v122, 6) & 1) != 0))
        {
          v123 = v165;
          objc_msgSend(v165, "setColor:", v155);
          v110 = (char *)v123;
        }
        else
        {
          v110 = 0;
        }
        v124 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetStroke(0));
        v125 = *(_QWORD *)&v119[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v126 = *(void (**)(__n128))(*(_QWORD *)v125 + 256);
        v113.super.isa = (Class)v119;
        v127 = swift_retain(v125);
        v128 = v156;
        v126(v127);
        swift_release(v125);
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v157 + 8))(v128, v158);
        v114 = objc_msgSend(v124, "initWithId:stroke:", isa, v110);

        v106 = v110;
        v115 = v113.super.isa;
      }
      else
      {
        v105 = objc_allocWithZone((Class)CRLColorFill);
        v106 = (char *)objc_msgSend(v105, "initWithColor:", v155, v131);
        v107 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetFill(0));
        v108 = *(_QWORD *)&v117[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        v109 = *(void (**)(__n128))(*(_QWORD *)v108 + 256);
        v110 = v117;
        v111 = swift_retain(v108);
        v112 = v156;
        v109(v111);
        swift_release(v108);
        v113.super.isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v157 + 8))(v112, v158);
        v114 = objc_msgSend(v107, "initWithId:fill:", v113.super.isa, v106);
        v115 = (Class)v110;
      }
      ++v104;

      v20 = v161;
      sub_1006A5F54(v114, 0, 0, 4, 0);

      a1 = v159;
      v18 = v160;
    }
    while (v102 != v104);
    goto LABEL_114;
  }
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
}

void sub_100B57244()
{
  uint64_t v0;
  void *Strong;
  unsigned int v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc);
  v2 = objc_msgSend(Strong, "allowUndoRedoOperations");

  if (v2)
  {
    v3 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons;
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons) & 1) == 0)
    {
      sub_100B549D4();
      if ((v4 & 1) != 0)
      {
        *(_BYTE *)(v0 + v3) = 1;
        v5 = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController);
        v6 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
        v8 = objc_msgSend(v5, "mostSpecificCurrentEditorOfClass:", swift_getObjCClassFromMetadata(v6, v7));

        if (v8
          && (v9 = objc_opt_self(CRLShapeEditor),
              v10 = swift_dynamicCastObjCClass(v8, v9),
              swift_unknownObjectRelease(v8),
              v10))
        {
          v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
          v12 = v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
          v13 = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
          v14 = objc_msgSend(v13, "canPerformInteractiveAction:withSender:", "sendBackward:", 0);

          objc_msgSend(v11, "setSendBackwardEnabled:", v14);
          v15 = (void *)swift_unknownObjectUnownedLoadStrong(v12);
          v16 = objc_msgSend(v15, "canPerformInteractiveAction:withSender:", "bringForward:", 0);

          objc_msgSend(v11, "setBringForwardEnabled:", v16);
        }
        else
        {
          v17 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
          objc_msgSend(v17, "setSendBackwardEnabled:", 0);
          objc_msgSend(v17, "setBringForwardEnabled:", 0);
        }
        *(_BYTE *)(v0 + v3) = 0;
      }
    }
  }
}

void sub_100B5743C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  a4();
  swift_unknownObjectRelease(a3);

}

void sub_100B57494()
{
  char *v0;
  void *Strong;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[5];
  uint64_t v8;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc]);
  v2 = objc_msgSend(Strong, "presentedViewController");

  if (v2)
  {
    v3 = swift_allocObject(&unk_101295948, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v7[4] = sub_100B5DABC;
    v8 = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = *(_QWORD *)"";
    v7[2] = sub_1005D2FC0;
    v7[3] = &unk_101295960;
    v4 = _Block_copy(v7);
    v5 = v8;
    v6 = v0;
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v4, swift_release(v5).n128_f64[0]);
    _Block_release(v4);

  }
}

uint64_t type metadata accessor for CRLiOSPencilTray()
{
  return objc_opt_self(_TtC8Freeform16CRLiOSPencilTray);
}

double sub_100B57634()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  char *v4;
  void *v5;
  id v6;
  double v7;
  void *v8;
  double v9;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc);
  v2 = objc_msgSend(Strong, "canvasView");

  v3 = objc_msgSend(v2, "enclosingScrollView");
  if (v3)
  {
    v4 = (char *)sub_100B4F46C();
    if (v4)
    {
      v5 = v4;
      v6 = *(id *)&v4[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v6 = v8;
    }
    objc_msgSend(v6, "frameObscuredInView:", v3);
    v7 = v9;

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"rectangleObscuringCanvasScrollView", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1411, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rectangleObscuringCanvasScrollView", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1411, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return CGRectNull.origin.x;
  }
  return v7;
}

void sub_100B57AC4(void *a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  void *Strong;
  void *v8;
  id v9;

  v3 = (char *)sub_100B4F46C();
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v5 = v6;
  }
  sub_1005892BC((uint64_t)a1, (uint64_t)v5, &_mh_execute_header, (uint64_t)"toolPickerIsRulerActiveDidChange(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1525);

  if ((objc_msgSend(a1, "isVisible") & 1) == 0 && objc_msgSend(a1, "isRulerActive"))
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate);
    objc_msgSend(Strong, "beginDrawingModeIfNeeded");
    swift_unknownObjectRelease(Strong);
  }
  v8 = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v9 = objc_msgSend(v8, "freehandDrawingToolkit");

  if (v9)
  {
    objc_msgSend(v9, "setRulerToolShowing:", objc_msgSend(a1, "isRulerActive"));

  }
  else
  {
    __break(1u);
  }
}

void sub_100B57C6C(uint64_t a1)
{
  char *v1;
  uint64_t ObjectType;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  void *Strong;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  unsigned __int8 v15;

  ObjectType = swift_getObjectType(v1);
  v4 = (char *)sub_100B4F46C();
  if (v4)
  {
    v5 = v4;
    v6 = *(id *)&v4[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v6 = v7;
  }
  sub_1005892BC(a1, (uint64_t)v6, &_mh_execute_header, (uint64_t)"toolPickerVisibilityDidChange(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1544);

  v8 = &v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc]);
  v10 = objc_msgSend(Strong, "delegate");

  if (!v10)
  {
    __break(1u);
    return;
  }
  if ((objc_msgSend(v10, "respondsToSelector:", "pencilKitCanvasViewControllerForCanvasViewController:") & 1) == 0)
  {
    swift_unknownObjectRelease(v10);
    goto LABEL_11;
  }
  v11 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v12 = (char *)objc_msgSend(v10, "pencilKitCanvasViewControllerForCanvasViewController:", v11);
  swift_unknownObjectRelease(v10);

  if (!v12)
    goto LABEL_11;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager];
  if (!v14)
  {

    goto LABEL_11;
  }
  v15 = objc_msgSend(v14, "shouldSuppressToolPickerVisibilityDidChangeUpdate");

  if ((v15 & 1) == 0)
  {
LABEL_11:
    objc_msgSend((id)swift_getObjCClassFromMetadata(ObjectType, v13), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "updateForToolPickerVisibilityDidChange", 0);
    objc_msgSend(v1, "performSelector:withObject:afterDelay:", "updateForToolPickerVisibilityDidChange", 0, 0.0);
  }
}

void sub_100B57E9C()
{
  char *v0;
  void *Strong;
  char *v2;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  CGRect v12;

  objc_msgSend(v0, "rectangleObscuringCanvasScrollView");
  if (!CGRectEqualToRect(v12, *(CGRect *)&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate]))
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate]);
    objc_msgSend(Strong, "didUpdateRectangleObscuringCanvasScrollViewForPencilTray:", v0);
    swift_unknownObjectRelease(Strong);
  }
  v2 = (char *)sub_100B4F46C();
  if (v2)
  {
    v3 = v2;
    v4 = *(id *)&v2[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v4 = v5;
  }
  v6 = objc_msgSend(v4, "isVisible");

  if ((v6 & 1) == 0)
  {
    v7 = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc]);
    v8 = objc_msgSend(v7, "isShowingRadialPalette");

    if ((v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] & 1) == 0 && (v8 & 1) == 0 && !sub_100B58020())
    {
      v9 = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate]);
      v10 = objc_msgSend(v9, "shouldKeepDocumentModeOnVisibilityChangeOfPencilTray:", v0);
      swift_unknownObjectRelease(v9);
      if ((v10 & 1) == 0)
      {
        v11 = (id)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_documentModeController]);
        objc_msgSend(v11, "resetToDefaultModeAnimated:", 1);

      }
    }
  }
}

BOOL sub_100B58020()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  uint64_t v4;
  _BOOL8 v5;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_cvc);
  v2 = objc_msgSend(Strong, "canvasView");

  if (!v2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"shouldKeepDocumentModeForFirstResponder", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1595, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldKeepDocumentModeForFirstResponder", 39, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1595, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v3 = objc_msgSend(v2, "firstResponder");

  if (!v3)
    return 0;
  v4 = objc_opt_self(UIAlertController);
  v5 = swift_dynamicCastObjCClass(v3, v4) != 0;

  return v5;
}

double sub_100B58194(uint64_t a1)
{
  char *v1;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  double result;
  void *Strong;
  CGRect v9;

  v3 = (char *)sub_100B4F46C();
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v5 = v6;
  }
  sub_1005892BC(a1, (uint64_t)v5, &_mh_execute_header, (uint64_t)"toolPickerFramesObscuredDidChange(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1608);

  objc_msgSend(v1, "rectangleObscuringCanvasScrollView");
  if (!CGRectEqualToRect(v9, *(CGRect *)&v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate]))
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_delegate]);
    objc_msgSend(Strong, "didUpdateRectangleObscuringCanvasScrollViewForPencilTray:", v1);
    *(_QWORD *)&result = swift_unknownObjectRelease(Strong).n128_u64[0];
  }
  return result;
}

void sub_100B582F4(uint64_t a1, void *a2)
{
  uint64_t v2;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;

  v5 = (char *)sub_100B4F46C();
  if (v5)
  {
    v6 = v5;
    v7 = *(id *)&v5[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v7 = v8;
  }
  sub_1005892BC(a1, (uint64_t)v7, &_mh_execute_header, (uint64_t)"_toolPicker(_:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1618);

  if (!a2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_toolPicker(_:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1620, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_toolPicker(_:didChange:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1620, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v9 = objc_allocWithZone((Class)CRLColor);
  v10 = a2;
  v16 = objc_msgSend(v9, "initWithUIColor:", v10);
  sub_100B549D4();
  if ((v11 & 1) != 0)
  {
    v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
    v13 = objc_msgSend(v12, "selectedStrokeColor");

    if (v13)
    {
      v14 = 15;
LABEL_11:
      sub_100B55FE0(v14, (uint64_t)v16, 0);
      goto LABEL_12;
    }
    v15 = objc_msgSend(v12, "selectedFillColor");

    if (v15)
    {
      v14 = 20;
      goto LABEL_11;
    }
  }
LABEL_12:

}

id sub_100B58558(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id result;

  v3 = (char *)sub_100B4F46C();
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v5 = v6;
  }
  sub_1005892BC(a1, (uint64_t)v5, &_mh_execute_header, (uint64_t)"_toolPickerCurrentSelectionColor(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1631);

  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  result = objc_msgSend(v7, "selectedStrokeColor");
  if (!result)
    return objc_msgSend(v7, "selectedFillColor");
  return result;
}

void sub_100B58688(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  const char *v9;
  id v10;

  v3 = (char *)sub_100B4F46C();
  if (v3)
  {
    v4 = v3;
    v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v5 = v6;
  }
  sub_1005892BC(a1, (uint64_t)v5, &_mh_execute_header, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1647);

  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  v8 = objc_msgSend(v7, "selectedStrokeColor");

  if (v8)
  {
    v9 = "toggleStrokeColorPickerPresentation";
LABEL_8:
    objc_msgSend(v7, v9);
    return;
  }
  v10 = objc_msgSend(v7, "selectedFillColor");

  if (v10)
  {
    v9 = "toggleFillColorPickerPresentation";
    goto LABEL_8;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1657, "Trying to toggle lasso tool editing view color picker with no colors selected.", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1657, (uint64_t)"Trying to toggle lasso tool editing view color picker with no colors selected.", 78, 2u);
}

void sub_100B58914(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *Strong;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  _BYTE *v25;
  uint64_t v26;
  void **aBlock;
  uint64_t v28;
  double (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)();
  uint64_t v32;
  char v33[24];

  v2 = (_BYTE *)OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors) & 1) == 0)
  {
    if ((unint64_t)a1 >> 62)
      goto LABEL_19;
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v17))
    {
      v25 = v2;
      v26 = v1;
      v5 = 4;
      while (1)
      {
        v1 = v5 - 4;
        v6 = (a1 & 0xC000000000000001) != 0
           ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
           : (char *)*(id *)(a1 + 8 * v5);
        v2 = v6;
        v7 = v5 - 3;
        if (__OFADD__(v1, 1))
          break;
        v8 = *(char **)&v6[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details];
        v9 = &v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
        swift_beginAccess(&v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v33, 0, 0);
        v10 = *(_QWORD *)v9;
        if (*(_QWORD *)(*(_QWORD *)v9 + 16))
        {
          v11 = sub_100843260(15);
          if ((v12 & 1) != 0)
          {
            sub_1004CB7BC(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&aBlock, &qword_1013E0230);
            sub_1004CB800((uint64_t)&aBlock, (uint64_t *)&unk_1013DFC00);
            swift_bridgeObjectRelease();

            goto LABEL_17;
          }
        }
        aBlock = 0;
        v28 = 0;
        v29 = 0;
        v30 = 1;
        v13 = v8;
        sub_1004CB800((uint64_t)&aBlock, (uint64_t *)&unk_1013DFC00);
        v14 = *(_QWORD *)v9;
        if (*(_QWORD *)(*(_QWORD *)v9 + 16))
        {
          v15 = sub_100843260(20);
          if ((v16 & 1) != 0)
          {
            sub_1004CB7BC(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&aBlock, &qword_1013E0230);
            sub_1004CB800((uint64_t)&aBlock, (uint64_t *)&unk_1013DFC00);

            swift_bridgeObjectRelease();
LABEL_17:
            v1 = v26;
            v25[v26] = 1;
            goto LABEL_24;
          }
        }
        aBlock = 0;
        v28 = 0;
        v29 = 0;
        v30 = 1;
        sub_1004CB800((uint64_t)&aBlock, (uint64_t *)&unk_1013DFC00);

        ++v5;
        if (v7 == v4)
        {
          swift_bridgeObjectRelease();
          v1 = v26;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_19:
      if (a1 < 0)
        v17 = a1;
      else
        v17 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
    }
    swift_bridgeObjectRelease();
LABEL_24:
    v18 = v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
    v20 = objc_msgSend(Strong, "canvas");

    objc_msgSend(v20, "i_setLayersInvalidWithoutInvalidatingAnySpecificLayers");
    v21 = (void *)swift_unknownObjectUnownedLoadStrong(v18);
    v22 = objc_msgSend(v21, "canvas");

    v23 = swift_allocObject(&unk_1012958F8, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    v31 = sub_100B590CC;
    v32 = v23;
    aBlock = _NSConcreteStackBlock;
    v28 = *(_QWORD *)"";
    v29 = sub_1005D2FC0;
    v30 = (uint64_t)&unk_101295910;
    v24 = _Block_copy(&aBlock);
    objc_msgSend(v22, "afterLayoutIncludingLayers:performBlock:", 1, v24, swift_release(v32).n128_f64[0]);
    _Block_release(v24);

  }
}

void sub_100B58C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _BYTE *v3;
  uint64_t v4;
  char v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_BYTE *)Strong;
    v4 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors) == 1)
    {
      sub_100B549D4();
      if ((v5 & 1) != 0)
        sub_100B552B0();
    }
    v3[v4] = 0;

  }
}

void sub_100B58E2C()
{
  uint64_t v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  void *Strong;
  id v8;
  unsigned int v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  v1 = (char *)sub_100B4F46C();
  if (v1)
  {
    v2 = v1;
    v3 = *(id *)&v1[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

  }
  else
  {
    sub_100B4F3B8();
    v3 = v4;
  }
  v5 = objc_msgSend(v3, "isRulerActive");

  v6 = v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v8 = objc_msgSend(Strong, "freehandDrawingToolkit");

  if (!v8)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v9 = objc_msgSend(v8, "isRulerToolShowing");

  if (v5 != v9)
  {
    v10 = (char *)sub_100B4F46C();
    if (v10)
    {
      v11 = v10;
      v16 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

    }
    else
    {
      sub_100B4F3B8();
      v16 = v12;
    }
    v13 = (void *)swift_unknownObjectUnownedLoadStrong(v6);
    v14 = objc_msgSend(v13, "freehandDrawingToolkit");

    if (v14)
    {
      v15 = objc_msgSend(v14, "isRulerToolShowing");

      objc_msgSend(v16, "setRulerActive:", v15);
      return;
    }
    goto LABEL_13;
  }
}

ValueMetadata *type metadata accessor for CRLiOSPencilTray.LassoEditingViewClippingWorkaround()
{
  return &type metadata for CRLiOSPencilTray.LassoEditingViewClippingWorkaround;
}

uint64_t sub_100B590A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100B590CC()
{
  uint64_t v0;

  sub_100B58C38(v0);
}

double sub_100B590D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100B590E4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100B590EC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100D166DC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100B59154(v4);
  *a1 = v2;
}

void sub_100B59154(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  float v14;
  float v15;
  float v16;
  float v17;
  int *v18;
  Swift::Int v19;
  Swift::Int v20;
  int *v21;
  int v22;
  Swift::Int v23;
  float *v24;
  float v25;
  Swift::Int v26;
  float *v27;
  float v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  float v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  Swift::Int v98;
  Swift::Int v99;
  uint64_t v100;
  float *__dst;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v82 = 0;
      v83 = *v2;
      v84 = 1;
      while (1)
      {
        v85 = *(float *)(v83 + 4 * v84);
        v86 = v82;
        do
        {
          v87 = v83 + 4 * v86;
          if (v85 >= *(float *)v87)
            break;
          if (!v83)
            goto LABEL_142;
          *(_DWORD *)(v87 + 4) = *(_DWORD *)v87;
          *(float *)(v83 + 4 * v86--) = v85;
        }
        while (v86 != -1);
        ++v84;
        ++v82;
        if (v84 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v98 = v4;
  v99 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_103;
    }
    v97 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Float);
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v99;
    v97 = (_QWORD *)v7;
    __dst = (float *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v95 = v2;
  v96 = *v2 - 4;
  v11 = (char *)_swiftEmptyArrayStorage;
  v100 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(float *)(v10 + 4 * v9);
      v15 = *(float *)(v10 + 4 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_139;
        if (v13 < v9)
        {
          v18 = (int *)(v96 + 4 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_145;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_137;
      if (v9 - v13 < v98)
      {
        v23 = v13 + v98;
        if (__OFADD__(v13, v98))
          goto LABEL_140;
        if (v23 >= v3)
          v23 = v3;
        if (v23 < v13)
          goto LABEL_141;
        if (v9 != v23)
        {
          v24 = (float *)(v96 + 4 * v9);
          do
          {
            v25 = *(float *)(v10 + 4 * v9);
            v26 = v13;
            v27 = v24;
            do
            {
              v28 = *v27;
              if (v25 >= *v27)
                break;
              if (!v10)
                goto LABEL_143;
              *v27 = v25;
              v27[1] = v28;
              --v27;
              ++v26;
            }
            while (v9 != v26);
            ++v9;
            ++v24;
          }
          while (v9 != v23);
          v9 = v23;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100D15FCC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v100;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_100D15FCC((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v100;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
      break;
    v12 = 1;
LABEL_15:
    v3 = v99;
    if (v9 >= v99)
    {
      v8 = v97;
      v2 = v95;
LABEL_103:
      v97 = v8;
      if (v12 < 2)
      {
LABEL_114:
        v81 = v11;
        goto LABEL_115;
      }
      v88 = *v2;
      while (1)
      {
        v89 = v12 - 2;
        if (v12 < 2)
          break;
        if (!v88)
          goto LABEL_146;
        v80 = v11;
        v90 = v11 + 32;
        v91 = *(_QWORD *)&v11[16 * v89 + 32];
        v92 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_100B597E4((float *)(v88 + 4 * v91), (float *)(v88 + 4 * *(_QWORD *)&v90[16 * v12 - 16]), v88 + 4 * v92, __dst);
        if (v1)
          goto LABEL_94;
        if (v92 < v91)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
          v80 = sub_100D1664C((uint64_t)v80);
        if (v89 >= *((_QWORD *)v80 + 2))
          goto LABEL_135;
        v93 = &v80[16 * v89 + 32];
        *(_QWORD *)v93 = v91;
        *((_QWORD *)v93 + 1) = v92;
        v94 = *((_QWORD *)v80 + 2);
        if (v12 > v94)
          goto LABEL_136;
        memmove(&v80[16 * v12 + 16], &v80[16 * v12 + 32], 16 * (v94 - v12));
        v11 = v80;
        *((_QWORD *)v80 + 2) = v94 - 1;
        v12 = v94 - 1;
        if (v94 <= 2)
          goto LABEL_114;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v33 = v12 - 1;
    if (v12 >= 4)
    {
      v38 = &v31[16 * v12];
      v39 = *((_QWORD *)v38 - 8);
      v40 = *((_QWORD *)v38 - 7);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_121;
      v43 = *((_QWORD *)v38 - 6);
      v42 = *((_QWORD *)v38 - 5);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_122;
      v45 = v12 - 2;
      v46 = &v31[16 * v12 - 32];
      v48 = *(_QWORD *)v46;
      v47 = *((_QWORD *)v46 + 1);
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_124;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_127;
      if (v50 >= v41)
      {
        v68 = &v31[16 * v33];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_131;
        v61 = v36 < v71;
        goto LABEL_83;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v62 = *((_QWORD *)v11 + 4);
        v63 = *((_QWORD *)v11 + 5);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_77;
      }
      v35 = *((_QWORD *)v11 + 4);
      v34 = *((_QWORD *)v11 + 5);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_123;
    v45 = v12 - 2;
    v51 = &v31[16 * v12 - 32];
    v53 = *(_QWORD *)v51;
    v52 = *((_QWORD *)v51 + 1);
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_126;
    v57 = &v31[16 * v33];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_129;
    if (__OFADD__(v55, v60))
      goto LABEL_130;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_83:
      if (v61)
        v33 = v45;
      goto LABEL_85;
    }
LABEL_77:
    if ((v56 & 1) != 0)
      goto LABEL_125;
    v64 = &v31[16 * v33];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_128;
    if (v67 < v55)
      goto LABEL_15;
LABEL_85:
    v72 = v33 - 1;
    if (v33 - 1 >= v12)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v10)
      goto LABEL_144;
    v73 = &v31[16 * v72];
    v74 = *(_QWORD *)v73;
    v75 = v31;
    v76 = &v31[16 * v33];
    v77 = *((_QWORD *)v76 + 1);
    sub_100B597E4((float *)(v10 + 4 * *(_QWORD *)v73), (float *)(v10 + 4 * *(_QWORD *)v76), v10 + 4 * v77, __dst);
    if (v1)
      break;
    if (v77 < v74)
      goto LABEL_118;
    if (v33 > *((_QWORD *)v11 + 2))
      goto LABEL_119;
    *(_QWORD *)v73 = v74;
    *(_QWORD *)&v75[16 * v72 + 8] = v77;
    v78 = *((_QWORD *)v11 + 2);
    if (v33 >= v78)
      goto LABEL_120;
    v12 = v78 - 1;
    memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
    v31 = v75;
    *((_QWORD *)v11 + 2) = v78 - 1;
    v10 = v100;
    if (v78 <= 2)
      goto LABEL_15;
  }
  v80 = v11;
LABEL_94:
  v81 = v80;
LABEL_115:
  swift_bridgeObjectRelease(v81);
  v97[2] = 0;
  swift_bridgeObjectRelease(v97);
}

uint64_t sub_100B597E4(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  float *v19;
  float v20;
  uint64_t result;
  float *v22;
  float *v23;
  float *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 2;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 3;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 2;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 4 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        v17 = (float *)(a3 - 4);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 4 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_100D16230((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100B59A50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        _HashTable.occupiedBucket(after:)(a1);
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__CocoaDictionary.Index.age.getter(a1, a2) != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = __CocoaDictionary.Index.key.getter(a1, a2);
  v12 = v6;
  sub_100B5DB48(a1, a2, 1);
  v7 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  swift_unknownObjectRetain(v6);
  swift_dynamicCast(&v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
  v8 = v13;
  swift_unknownObjectRelease(v6);
  sub_100843538((uint64_t)v8);
  v10 = v9;

  if ((v10 & 1) != 0)
  {
    v11 = __CocoaDictionary.Index.dictionary.getter(a1, a2);
    __CocoaDictionary.index(after:)(a1, a2, v11);
    sub_100503494(a1, a2, 1);
    swift_unknownObjectRelease(v11);
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_100B59BEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  char v14;
  id v15;
  uint64_t v16;
  void *v17;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
LABEL_15:
        v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
        return;
      }
      __break(1u);
LABEL_13:
      if (__CocoaDictionary.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v10 = __CocoaDictionary.Index.key.getter(v6, a2);
        v16 = v10;
        v11 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
        swift_unknownObjectRetain(v10);
        swift_dynamicCast(&v17, &v16, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
        v12 = v17;
        swift_unknownObjectRelease(v10);
        v6 = sub_100843538((uint64_t)v12);
        v14 = v13;

        if ((v14 & 1) != 0)
          goto LABEL_15;
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_18;
  }
  if ((a3 & 1) == 0)
  {
LABEL_20:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  v8 = __CocoaDictionary.key(at:)(a1, a2, v7);
  v16 = v8;
  v9 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  swift_unknownObjectRetain(v8);
  swift_dynamicCast(&v17, &v16, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
  swift_unknownObjectRelease(v8);
}

uint64_t sub_100B59DAC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_100B59E5C(unint64_t a1, id a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  void *v30;
  int v31;
  int v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  void (*v39)(uint64_t *, _QWORD);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int *v44;
  char *v45;
  int v46;
  id v47;
  double v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  char v63;
  void *v64;
  id v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  _BOOL8 v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  void *v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109[4];
  uint64_t v110;
  uint64_t v111;
  char v112;
  _QWORD *v113;

  v3 = objc_msgSend(a2, "strokeWeightsToButtonImages");
  if (!v3)
  {
    sub_1008D5C1C((uint64_t)_swiftEmptyArrayStorage);
    return;
  }
  v4 = v3;
  v104 = a1;
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  v6 = sub_1004B8930(0, &qword_1013E1CE0, UIImage_ptr);
  v7 = sub_1005A15B8((unint64_t *)&unk_1014068E0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v99 = v5;
  v103 = v6;
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6, v7);

  v9 = sub_1008D5C1C((uint64_t)_swiftEmptyArrayStorage);
  if (v8)
  {
    v108 = v8 & 0xC000000000000001;
    if ((v8 & 0xC000000000000001) != 0)
    {
      if (v8 >= 0)
        v10 = v8 & 0xFFFFFFFFFFFFFF8;
      else
        v10 = v8;
      v11 = swift_bridgeObjectRetain(v8);
      v12 = __CocoaDictionary.count.getter(v10, v11);
    }
    else
    {
      v12 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRetain(v8);
    }
    v13 = _swiftEmptyArrayStorage;
    if (v12)
    {
      v113 = _swiftEmptyArrayStorage;
      sub_100600804(0, v12 & ~(v12 >> 63), 0);
      if (v108)
      {
        if (v8 >= 0)
          v14 = v8 & 0xFFFFFFFFFFFFFF8;
        else
          v14 = v8;
        v15 = __CocoaDictionary.startIndex.getter(v14);
        v17 = 1;
      }
      else
      {
        v15 = sub_100B59DAC(v8);
        v17 = v18 & 1;
      }
      v110 = v15;
      v111 = v16;
      v112 = v17;
      if (v12 < 0)
        goto LABEL_104;
      v19 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v8 < 0)
        v19 = v8;
      v105 = v19;
      do
      {
        while (1)
        {
          v27 = v110;
          v26 = v111;
          v28 = v112;
          sub_100B59BEC(v110, v111, v112, v8);
          v30 = v29;
          objc_msgSend(v29, "floatValue");
          v32 = v31;

          v33 = v113;
          if ((swift_isUniquelyReferenced_nonNull_native(v113) & 1) == 0)
          {
            sub_100600804(0, v33[2] + 1, 1);
            v33 = v113;
          }
          v35 = v33[2];
          v34 = v33[3];
          if (v35 >= v34 >> 1)
          {
            sub_100600804(v34 > 1, v35 + 1, 1);
            v33 = v113;
          }
          v33[2] = v35 + 1;
          *((_DWORD *)v33 + v35 + 8) = v32;
          if (v108)
            break;
          sub_100B59A50(v27, v26, v28, v8);
          v21 = v20;
          v23 = v22;
          v25 = v24;
          sub_100503494(v27, v26, v28);
          v110 = v21;
          v111 = v23;
          v112 = v25 & 1;
          if (!--v12)
            goto LABEL_32;
        }
        if ((v28 & 1) == 0)
          goto LABEL_105;
        v36 = __CocoaDictionary.Index.handleBitPattern.getter(v27, v26);
        if (v36)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v38 = sub_1004B804C((uint64_t *)&unk_101406900);
        v39 = (void (*)(uint64_t *, _QWORD))Dictionary.Index._asCocoa.modify(v109, v38);
        __CocoaDictionary.formIndex(after:isUnique:)(v40, isUniquelyReferenced_nonNull_native, v105);
        v39(v109, 0);
        --v12;
      }
      while (v12);
LABEL_32:
      sub_100503494(v110, v111, v112);
      v13 = v113;
    }
    v109[0] = (uint64_t)v13;
    swift_bridgeObjectRetain(v13);
    sub_100B590EC(v109);
    swift_bridgeObjectRelease(v13);
    v41 = v109[0];
    v42 = *(char **)(v109[0] + 16);
    v43 = (uint64_t)_swiftEmptyArrayStorage;
    if (v42)
    {
      v109[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v42);
      v106 = v41;
      v44 = (int *)(v41 + 32);
      v45 = v42;
      do
      {
        v46 = *v44++;
        v47 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v48) = v46;
        v49 = objc_msgSend(v47, "initWithFloat:", v48);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v49);
        v50 = *(_QWORD *)(v109[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v50);
        v51 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v49);
        specialized ContiguousArray._endMutation()(v51);
        --v45;
      }
      while (v45);
      v43 = v109[0];
      v41 = v106;
    }
    v52 = v104;
    if (v104 >> 62)
      goto LABEL_99;
    v53 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_39:
    sub_100588D60((uint64_t)v42, v53, &_mh_execute_header, (uint64_t)"strokeWeightsWithPKButtonImages(_:toolConfig:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 580);
    swift_release(v41);
    if (v53 >= (uint64_t)v42)
      v41 = (uint64_t)v42;
    else
      v41 = v53;
    if ((v41 & 0x8000000000000000) == 0)
    {
      if (v41)
      {
        v54 = 0;
        v55 = v43 & 0xC000000000000001;
        v56 = v8 & 0xFFFFFFFFFFFFFF8;
        if (v8 < 0)
          v56 = v8;
        v107 = v56;
        v102 = v43 & 0xFFFFFFFFFFFFFF8;
        v100 = v43 & 0xC000000000000001;
        v101 = v43;
        do
        {
          if (v41 == v54)
          {
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            if (v52 < 0)
              v98 = v52;
            else
              v98 = v52 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v52);
            v53 = _CocoaArrayWrapper.endIndex.getter(v98);
            swift_bridgeObjectRelease(v52);
            goto LABEL_39;
          }
          if (v55)
          {
            swift_bridgeObjectRetain(v8);
            v57 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v43);
          }
          else
          {
            if (v54 >= *(_QWORD *)(v102 + 16))
              goto LABEL_92;
            v58 = *(void **)(v43 + 8 * v54 + 32);
            swift_bridgeObjectRetain(v8);
            v57 = v58;
          }
          v42 = v57;
          if (v108)
          {
            v59 = __CocoaDictionary.lookup(_:)(v57, v107);
            if (!v59)
              goto LABEL_47;
            v60 = v59;
            v110 = v59;
            swift_unknownObjectRetain(v59);
            swift_dynamicCast(v109, &v110, (char *)&type metadata for Swift.AnyObject + 8, v103, 7);
            v61 = (id)v109[0];
            swift_unknownObjectRelease(v60);
          }
          else
          {
            if (!*(_QWORD *)(v8 + 16) || (v52 = v8, v62 = sub_100843538((uint64_t)v57), (v63 & 1) == 0))
            {
LABEL_47:

              swift_bridgeObjectRelease(v8);
              goto LABEL_48;
            }
            v61 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v62);
          }

          swift_bridgeObjectRelease(v8);
          if (v61)
          {
            if ((v104 & 0xC000000000000001) != 0)
            {
              v97 = v61;
              v66 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v104);
            }
            else
            {
              if (v54 >= *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_93;
              v64 = *(void **)(v104 + 8 * v54 + 32);
              v65 = v61;
              v66 = v64;
            }
            v42 = v66;
            if ((v9 & 0xC000000000000001) != 0)
            {
              if (v9 < 0)
                v68 = v9;
              else
                v68 = v9 & 0xFFFFFFFFFFFFFF8;
              v69 = __CocoaDictionary.count.getter(v68, v67);
              if (__OFADD__(v69, 1))
                goto LABEL_94;
              v9 = sub_100897818(v68, v69 + 1);
              v109[0] = v9;
              v52 = v9;
              v70 = sub_100843538((uint64_t)v42);
              v72 = *(_QWORD *)(v9 + 16);
              v73 = (v71 & 1) == 0;
              v74 = __OFADD__(v72, v73);
              v75 = v72 + v73;
              if (v74)
                goto LABEL_95;
              v76 = v71;
              if (*(_QWORD *)(v9 + 24) < v75)
              {
                sub_100816A9C(v75, 1);
                v9 = v109[0];
                v52 = v109[0];
                v70 = sub_100843538((uint64_t)v42);
                if ((v76 & 1) != (v77 & 1))
                  goto LABEL_106;
              }
              if ((v76 & 1) != 0)
              {
                v78 = *(_QWORD *)(v9 + 56);
                v79 = *(void **)(v78 + 8 * v70);
                *(_QWORD *)(v78 + 8 * v70) = v61;
              }
              else
              {
                *(_QWORD *)(v9 + 8 * (v70 >> 6) + 64) |= 1 << v70;
                v88 = 8 * v70;
                *(_QWORD *)(*(_QWORD *)(v9 + 48) + v88) = v42;
                *(_QWORD *)(*(_QWORD *)(v9 + 56) + v88) = v61;
                v89 = *(_QWORD *)(v9 + 16);
                v74 = __OFADD__(v89, 1);
                v90 = v89 + 1;
                if (v74)
                  goto LABEL_97;
                *(_QWORD *)(v9 + 16) = v90;
                v91 = v42;
                v79 = 0;
              }

            }
            else
            {
              v43 = swift_isUniquelyReferenced_nonNull_native(v9);
              v109[0] = v9;
              v52 = v9;
              v81 = sub_100843538((uint64_t)v42);
              v82 = *(_QWORD *)(v9 + 16);
              v83 = (v80 & 1) == 0;
              v84 = v82 + v83;
              if (__OFADD__(v82, v83))
                goto LABEL_96;
              v85 = v80;
              if (*(_QWORD *)(v9 + 24) >= v84)
              {
                if ((v43 & 1) == 0)
                {
                  v52 = (uint64_t)v109;
                  sub_10082D714();
                }
              }
              else
              {
                sub_100816A9C(v84, v43);
                v52 = v109[0];
                v86 = sub_100843538((uint64_t)v42);
                if ((v85 & 1) != (v87 & 1))
                  goto LABEL_106;
                v81 = v86;
              }
              v9 = v109[0];
              if ((v85 & 1) != 0)
              {
                v92 = *(_QWORD *)(v109[0] + 56);
                v93 = *(void **)(v92 + 8 * v81);
                *(_QWORD *)(v92 + 8 * v81) = v61;
              }
              else
              {
                *(_QWORD *)(v109[0] + 8 * (v81 >> 6) + 64) |= 1 << v81;
                *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v81) = v42;
                *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v81) = v61;
                v94 = *(_QWORD *)(v9 + 16);
                v74 = __OFADD__(v94, 1);
                v95 = v94 + 1;
                if (v74)
                  goto LABEL_98;
                *(_QWORD *)(v9 + 16) = v95;
                v96 = v42;
                v93 = 0;
              }

              swift_bridgeObjectRelease(0x8000000000000000);
              v55 = v100;
              v43 = v101;
            }
          }
LABEL_48:
          ++v54;
        }
        while (v41 != v54);
      }
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease_n(v8, 2);
      return;
    }
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v99);
    __break(1u);
    swift_release(v109[0]);
    __break(1u);
  }
}

id sub_100B5A6CC()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v0, "moveToPoint:", 7.0, 129.5);
  objc_msgSend(v0, "addLineToPoint:", 7.0, 20.0);
  objc_msgSend(v0, "addLineToPoint:", 14.5, 14.0);
  objc_msgSend(v0, "addLineToPoint:", 14.5, 7.0);
  objc_msgSend(v0, "addLineToPoint:", 11.5, 7.0);
  objc_msgSend(v0, "addLineToPoint:", 11.5, 0.0);
  objc_msgSend(v0, "addLineToPoint:", 34.5, 0.0);
  objc_msgSend(v0, "addLineToPoint:", 34.5, 7.0);
  objc_msgSend(v0, "addLineToPoint:", 31.5, 7.0);
  objc_msgSend(v0, "addLineToPoint:", 31.5, 14.0);
  objc_msgSend(v0, "addLineToPoint:", 39.0, 20.0);
  objc_msgSend(v0, "addLineToPoint:", 39.0, 129.5);
  objc_msgSend(v0, "closePath");
  return v0;
}

uint64_t sub_100B5A840(unint64_t a1, void *a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint32_t *p_align;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _QWORD *v54;
  void (*v55)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  unsigned int v58;
  char *v59;
  const char *v60;
  uint64_t v61;
  const char *v62;
  const char *v63;
  char v64;
  const char *v65;
  uint64_t v66;
  const char *v67;
  __n128 v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  id v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Class isa;
  double v81;
  double v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  char *v90;
  id v91;
  void *v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  NSString v97;
  double v98;
  id v99;
  id v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  Class v104;
  double v105;
  double v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  NSString v118;
  double v119;
  id v120;
  id v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Class v125;
  double v126;
  double v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  id v134;
  unint64_t v135;
  _QWORD *v136;
  id v137;
  NSString v138;
  NSString v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  NSString v143;
  id v144;
  id v145;
  id v146;
  NSString v147;
  id v148;
  NSString v149;
  id v150;
  NSString v151;
  id v152;
  id v153;
  double v154;
  double v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  char *v161;
  void *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  NSString v166;
  double v167;
  id v168;
  id v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Class v173;
  double v174;
  double v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  id v182;
  char *v183;
  char **v184;
  _QWORD *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  double v190;
  id v191;
  int64_t v192;
  id v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  id v197;
  char *v198;
  NSString v199;
  _QWORD *v200;
  int64_t v201;
  id v202;
  unint64_t v203;
  double v204;
  void (*v205)(int64_t, _QWORD, char **);
  uint32_t *v206;
  void *v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  NSString v212;
  double v213;
  id v214;
  id v215;
  id v216;
  void (*v217)(_QWORD, _QWORD, _QWORD);
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  Class v221;
  double v222;
  double v223;
  id v224;
  id v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  id v230;
  char *v231;
  char *v232;
  void *v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  double v238;
  id v239;
  id v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  Class v244;
  double v245;
  double v246;
  id v247;
  id v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  id v253;
  char *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  double v259;
  id v260;
  id v261;
  id v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  Class v266;
  double v267;
  double v268;
  id v269;
  id v270;
  id v271;
  uint64_t v272;
  uint64_t v273;
  id v274;
  id v275;
  char *v276;
  id v277;
  _QWORD *v278;
  int64_t v279;
  unint64_t v280;
  const char *v281;
  char *v282;
  _QWORD *v283;
  int64_t v284;
  void *v285;
  _QWORD *v286;
  unint64_t v287;
  unint64_t v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  int64_t v295;
  unint64_t v296;
  _QWORD *v297;
  unint64_t v298;
  const char *v299;
  const char *v300;
  _QWORD *v301;
  unint64_t v302;
  unint64_t v303;
  unint64_t v304;
  int64_t v305;
  unint64_t v306;
  _QWORD *v307;
  unint64_t v308;
  int64_t v309;
  _QWORD *v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  int64_t v314;
  unint64_t v315;
  _QWORD *v316;
  unint64_t v317;
  int64_t v318;
  _QWORD *v319;
  unint64_t v320;
  unint64_t v321;
  void *v322;
  _QWORD *v323;
  Class v324;
  NSString v325;
  uint64_t result;
  uint64_t v327;
  uint64_t inited;
  uint64_t v329;
  CKRecordID v330;
  uint64_t v331;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint32_t *v342;
  char *v343;
  char **v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  char *v348;
  char *v349;
  char *v350;
  char *v351;
  id v352;
  const char *v353;
  char *v354;
  char *v355;
  char *v356;
  unint64_t v357;
  unint64_t v358;
  unint64_t v359;
  void *v360;
  const char *v361;
  const char *v362;
  const char *v363;
  uint64_t v364;
  id v365;
  void (*v366)(_QWORD *, char *, uint64_t);
  id v367;
  uint64_t v368;
  char *v369;
  _QWORD *v370;
  char *v371;
  char *v372;
  __int128 v373;
  id (*v374)(uint64_t);
  void *v375;
  id (*v376)();
  uint64_t v377;
  uint64_t v378;
  char v379[80];
  __int128 v380[3];

  v352 = a2;
  v358 = a1;
  v2 = (char **)type metadata accessor for PKEraserTool.EraserType(0);
  v345 = (uint64_t)*(v2 - 1);
  __chkstk_darwin(v2);
  v353 = (char *)&v342 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PKEraserTool(0);
  v346 = *(_QWORD *)(v4 - 8);
  v347 = (void *)v4;
  __chkstk_darwin(v4);
  p_align = (uint32_t *)((char *)&v342 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PKCustomTool(0);
  v355 = *(char **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v342 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v349 = (char *)&v342 - v12;
  v13 = __chkstk_darwin(v11);
  v348 = (char *)&v342 - v14;
  v15 = __chkstk_darwin(v13);
  v351 = (char *)&v342 - v16;
  v17 = __chkstk_darwin(v15);
  v350 = (char *)&v342 - v18;
  v19 = __chkstk_darwin(v17);
  v357 = (unint64_t)&v342 - v20;
  v21 = __chkstk_darwin(v19);
  v356 = (char *)&v342 - v22;
  __chkstk_darwin(v21);
  v354 = (char *)&v342 - v23;
  v368 = sub_1004B804C(&qword_1014068C8);
  __chkstk_darwin(v368);
  v25 = (char *)&v342 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1004B804C((uint64_t *)&unk_1014068D0);
  v27 = __chkstk_darwin(v26);
  v362 = (char *)&v342 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v364 = (uint64_t)&v342 - v30;
  __chkstk_darwin(v29);
  v372 = (char *)&v342 - v31;
  v32 = type metadata accessor for PKLassoTool(0);
  v370 = *(_QWORD **)(v32 - 8);
  v33 = __chkstk_darwin(v32);
  v361 = (char *)&v342 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v342 - v36;
  __chkstk_darwin(v35);
  v369 = (char *)&v342 - v38;
  v39 = objc_msgSend(objc_allocWithZone((Class)PKToolPicker), "init");
  objc_msgSend(v39, "setStateAutosaveName:", 0);
  objc_msgSend(v39, "setColorUserInterfaceStyle:", 1);
  v40 = objc_msgSend(v39, "setShowsDrawingPolicyControls:", 1);
  v365 = v39;
  v41 = PKToolPicker._tools.getter(v40);
  v42 = *(char **)(v41 + 16);
  if (v42)
  {
    v343 = v10;
    v344 = v2;
    v342 = p_align;
    v359 = v41;
    v360 = (void *)v7;
    v43 = v41 + 32;
    swift_bridgeObjectRetain(v41);
    v44 = v43;
    v45 = v42;
    do
    {
      sub_1004E90B0(v44, (uint64_t)&v373);
      sub_1004E90B0((uint64_t)&v373, (uint64_t)v380);
      v46 = sub_1004B804C((uint64_t *)&unk_101406890);
      if ((swift_dynamicCast(v37, v380, v46, v32, 6) & 1) != 0)
        goto LABEL_6;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
      v44 += 40;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease(v359);
    __break(1u);
LABEL_6:
    v367 = v25;
    v47 = v370;
    v363 = (const char *)v370[1];
    ((void (*)(char *, uint64_t))v363)(v37, v32);
    swift_bridgeObjectRelease(v359);
    sub_1004DB728(&v373, (uint64_t)v380);
    sub_1004DB728(v380, (uint64_t)&v373);
    v48 = v369;
    swift_dynamicCast(v369, &v373, v46, v32, 7);
    v375 = (void *)v32;
    v376 = (id (*)())&protocol witness table for PKLassoTool;
    v49 = sub_10050D1B0(&v373);
    v366 = (void (*)(_QWORD *, char *, uint64_t))v47[2];
    v366(v49, v48, v32);
    PKToolPicker.selectedTool.setter(&v373);
    v50 = v364;
    v51 = (uint64_t)v367;
    while (1)
    {
      v371 = v42;
      sub_1004E90B0(v43, (uint64_t)&v373);
      sub_1004E90B0((uint64_t)&v373, (uint64_t)v380);
      v52 = (uint64_t)v372;
      v53 = swift_dynamicCast(v372, v380, v46, v32, 6);
      v54 = v370;
      v55 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v370[7];
      v55(v52, v53 ^ 1u, 1, v32);
      v366((_QWORD *)v50, v369, v32);
      v55(v50, 0, 1, v32);
      v56 = v51 + *(int *)(v368 + 48);
      sub_1004CB7BC(v52, v51, (uint64_t *)&unk_1014068D0);
      sub_1004CB7BC(v50, v56, (uint64_t *)&unk_1014068D0);
      v57 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v54[6];
      if (v57(v51, 1, v32) != 1)
        break;
      sub_1004CB800(v50, (uint64_t *)&unk_1014068D0);
      v58 = v57(v56, 1, v32);
      v59 = v371;
      if (v58 != 1)
        goto LABEL_14;
      sub_1004CB800(v51, (uint64_t *)&unk_1014068D0);
      sub_1004CB800((uint64_t)v372, (uint64_t *)&unk_1014068D0);
LABEL_8:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
      v43 += 40;
      v42 = v59 - 1;
      if (!v42)
      {
        v68 = swift_bridgeObjectRelease(v359);
        ((void (*)(char *, uint64_t, __n128))v363)(v369, v32, v68);
        v69 = objc_msgSend((id)v358, "toolkitUIState");
        static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierWatercolor);
        v71 = v70;
        v72 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v71);
        v372 = (char *)objc_opt_self(PKToolConfiguration);
        v370 = v72;
        v73 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v72);
        v74 = objc_msgSend(v69, "strokeWidthsForFreehandDrawingToolType:", 4);
        v75 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
        v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v75);

        sub_100B59E5C(v76, v73);
        v78 = v77;
        swift_bridgeObjectRelease(v76);
        v79 = sub_1004B8930(0, &qword_1013E1CE0, UIImage_ptr);
        v368 = sub_1005A15B8((unint64_t *)&unk_1014068E0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
        v369 = (char *)v79;
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v73, "setStrokeWeightsToButtonImages:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

        objc_msgSend(v69, "opacityForToolType:", 4);
        v82 = v81;
        v83 = objc_msgSend(v69, "colorForToolType:", 4);
        v84 = objc_msgSend(v83, "colorWithAlphaComponent:", v82);

        v85 = objc_msgSend(v84, "UIColor");
        objc_msgSend(v69, "strokeWidthForToolType:", 4);
        v87 = v86;
        v88 = v73;
        v89 = v85;
        v363 = "com.apple.freeform.marker";
        v90 = v354;
        v91 = v85;
        v7 = 0;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD00000000000001DLL, 0x8000000100FFA360, v88, v91, v87, 0);
        v92 = v360;
        v375 = v360;
        v376 = (id (*)())&protocol witness table for PKCustomTool;
        v93 = sub_10050D1B0(&v373);
        v94 = v355;
        v371 = (char *)*((_QWORD *)v355 + 2);
        ((void (*)(_QWORD *, char *, void *))v371)(v93, v90, v92);
        PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

        v370 = (_QWORD *)*((_QWORD *)v94 + 1);
        ((void (*)(char *, void *))v370)(v90, v92);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
        static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierFountainPen);
        v96 = v95;
        v97 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v98 = swift_bridgeObjectRelease(v96).n128_u64[0];
        v367 = v97;
        v99 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v97, v98);
        v100 = objc_msgSend(v69, "strokeWidthsForFreehandDrawingToolType:", 5);
        v101 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v100, v75);

        sub_100B59E5C(v101, v99);
        v103 = v102;
        swift_bridgeObjectRelease(v101);
        v104 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v99, "setStrokeWeightsToButtonImages:", v104, swift_bridgeObjectRelease(v103).n128_f64[0]);

        objc_msgSend(v69, "opacityForToolType:", 5);
        v106 = v105;
        v107 = objc_msgSend(v69, "colorForToolType:", 5);
        v108 = objc_msgSend(v107, "colorWithAlphaComponent:", v106);

        v109 = objc_msgSend(v108, "UIColor");
        objc_msgSend(v69, "strokeWidthForToolType:", 5);
        v111 = v110;
        v112 = v99;
        v113 = v109;
        v362 = "com.apple.freeform.watercolor";
        v114 = v356;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD00000000000001ELL, 0x8000000100FFA380, v112, v109, v111, 0);
        v375 = v92;
        v376 = (id (*)())&protocol witness table for PKCustomTool;
        v115 = sub_10050D1B0(&v373);
        ((void (*)(_QWORD *, char *, void *))v371)(v115, v114, v92);
        PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

        ((void (*)(char *, void *))v370)(v114, v92);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
        static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierCrayon);
        v117 = v116;
        v118 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v119 = swift_bridgeObjectRelease(v117).n128_u64[0];
        v364 = (uint64_t)v118;
        v120 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v118, v119);
        v121 = objc_msgSend(v69, "strokeWidthsForFreehandDrawingToolType:", 3);
        v122 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v121, v75);

        sub_100B59E5C(v122, v120);
        v124 = v123;
        swift_bridgeObjectRelease(v122);
        v366 = (void (*)(_QWORD *, char *, uint64_t))v75;
        v125 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v120, "setStrokeWeightsToButtonImages:", v125, swift_bridgeObjectRelease(v124).n128_f64[0]);

        objc_msgSend(v69, "opacityForToolType:", 3);
        v127 = v126;
        v128 = objc_msgSend(v69, "colorForToolType:", 3);
        v129 = objc_msgSend(v128, "colorWithAlphaComponent:", v127);

        v130 = objc_msgSend(v129, "UIColor");
        v367 = v69;
        objc_msgSend(v69, "strokeWidthForToolType:", 3);
        v132 = v131;
        v133 = v120;
        v134 = v130;
        v135 = v357;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD000000000000019, 0x8000000100FFA320, v133, v130, v132, 0);
        v375 = v92;
        v376 = (id (*)())&protocol witness table for PKCustomTool;
        v136 = sub_10050D1B0(&v373);
        ((void (*)(_QWORD *, unint64_t, void *))v371)(v136, v135, v92);
        PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

        ((void (*)(unint64_t, void *))v370)(v135, v92);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
        v137 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v138 = String._bridgeToObjectiveC()();
        v139 = String._bridgeToObjectiveC()();
        v140 = objc_msgSend(v137, "localizedStringForKey:value:table:", v138, v139, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
        v142 = v141;

        v143 = String._bridgeToObjectiveC()();
        v10 = (char *)objc_opt_self(UIImage);
        v2 = &selRef_getRulerSnapLineOriginAndTangent_andNormal_;
        v144 = objc_msgSend(v10, "imageNamed:", v143);

        if (v144)
        {
          v361 = "com.apple.freeform.pencil";
          v37 = (char *)v144;
          v145 = sub_100B5A6CC();
          v146 = objc_allocWithZone((Class)PKToolConfiguration);
          v147 = String._bridgeToObjectiveC()();
          v39 = objc_msgSend(v146, "initWithLocalizedName:baseImage:shadowPath:", v147, v37, v145, swift_bridgeObjectRelease(v142).n128_f64[0]);

          p_align = &stru_101370FE8.align;
          if (qword_1013DDE18 == -1)
            goto LABEL_20;
          goto LABEL_51;
        }
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
    }
    v60 = v362;
    sub_1004CB7BC(v51, (uint64_t)v362, (uint64_t *)&unk_1014068D0);
    if (v57(v56, 1, v32) == 1)
    {
      v61 = v364;
      sub_1004CB800(v364, (uint64_t *)&unk_1014068D0);
      v62 = v60;
      v50 = v61;
      ((void (*)(const char *, uint64_t))v363)(v62, v32);
      v59 = v371;
LABEL_14:
      sub_1004CB800(v51, &qword_1014068C8);
      sub_1004CB800((uint64_t)v372, (uint64_t *)&unk_1014068D0);
    }
    else
    {
      v63 = v361;
      ((void (*)(const char *, uint64_t, uint64_t))v370[4])(v361, v56, v32);
      sub_1004B7878(&qword_1014068F8, (uint64_t (*)(uint64_t))&type metadata accessor for PKLassoTool, (uint64_t)&protocol conformance descriptor for PKLassoTool);
      v64 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v63);
      v65 = v363;
      ((void (*)(const char *, uint64_t))v363)(v63, v32);
      v66 = v364;
      sub_1004CB800(v364, (uint64_t *)&unk_1014068D0);
      v67 = v60;
      v50 = v66;
      ((void (*)(const char *, uint64_t))v65)(v67, v32);
      sub_1004CB800(v51, (uint64_t *)&unk_1014068D0);
      sub_1004CB800((uint64_t)v372, (uint64_t *)&unk_1014068D0);
      v59 = v371;
      if ((v64 & 1) != 0)
        goto LABEL_8;
    }
    PKToolPicker._removeTool(_:)(&v373);
    goto LABEL_8;
  }
  __break(1u);
LABEL_51:
  swift_once(&qword_1013DDE18, sub_100C6407C);
LABEL_20:
  v148 = objc_msgSend((id)static CRLColor.pencilTrayYellow, *((SEL *)p_align + 350));
  objc_msgSend(v39, "setSupportsColor:andOpacity:defaultColor:", 1, 1, v148);

  objc_msgSend(v39, "setOpacityLabelVerticalOffset:", 63.0);
  v149 = String._bridgeToObjectiveC()();
  v150 = objc_msgSend(v10, v2[486], v149);

  if (!v150)
    goto LABEL_55;
  objc_msgSend(v39, "setBandMaskImage:", v150);

  v151 = String._bridgeToObjectiveC()();
  v152 = objc_msgSend(v10, v2[486], v151);

  if (!v152)
  {
LABEL_56:
    __break(1u);
    v327 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v327, v379);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v329 = _convertErrorToNSError(_:)(v7);
    swift_errorRelease(v7);
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    *(_QWORD *)(inited + 64) = sub_1005A15B8((unint64_t *)&qword_1014068F0, (unint64_t *)&qword_1013F95B0, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = v329;
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 264, "Unable to initialize custom watercolor tool for tray: %@", 56, 2u, inited);
    sub_100518FC0(inited, (uint64_t)"Unable to initialize custom watercolor tool for tray: %@");
    sub_100519194(inited, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 264, (uint64_t)"Unable to initialize custom watercolor tool for tray: %@", 56, 2u);
LABEL_60:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v330, *(Swift::String *)&v331);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return result;
  }
  objc_msgSend(v39, "setBandContourImage:", v152);

  objc_msgSend(v39, "setBandVerticalOffset:", 28.0);
  v153 = v367;
  objc_msgSend(v367, "opacityForToolType:", 7);
  v155 = v154;
  v156 = objc_msgSend(v153, "colorForToolType:", 7);
  v157 = objc_msgSend(v156, "colorWithAlphaComponent:", v155);

  v158 = objc_msgSend(v157, "UIColor");
  v159 = v39;
  v160 = v158;
  v358 = (unint64_t)"com.apple.freeform.fountainpen";
  v359 = 0xD000000000000017;
  v161 = v350;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD000000000000017, 0x8000000100FFA3A0, v159, v158, 0, 1);
  v162 = v360;
  if (v7)
  {
    v333 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v334 = swift_initStackObject(v333, &v378);
    *(_OWORD *)(v334 + 16) = xmmword_100EF5E40;
    v335 = _convertErrorToNSError(_:)(v7);
    swift_errorRelease(v7);
    *(_QWORD *)(v334 + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    *(_QWORD *)(v334 + 64) = sub_1005A15B8((unint64_t *)&qword_1014068F0, (unint64_t *)&qword_1013F95B0, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v334 + 32) = v335;
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 329, "Unable to initialize custom fill tool for tray: %@", 50, 2u, v334);
    sub_100518FC0(v334, (uint64_t)"Unable to initialize custom fill tool for tray: %@");
    sub_100519194(v334, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 329, (uint64_t)"Unable to initialize custom fill tool for tray: %@", 50, 2u);
    goto LABEL_60;
  }
  v375 = v360;
  v376 = (id (*)())&protocol witness table for PKCustomTool;
  v163 = sub_10050D1B0(&v373);
  ((void (*)(_QWORD *, char *, void *))v371)(v163, v161, v162);
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

  ((void (*)(char *, void *))v370)(v161, v162);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierPencil);
  v165 = v164;
  v166 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v167 = swift_bridgeObjectRelease(v165).n128_u64[0];
  v168 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v166, v167);
  v169 = objc_msgSend(v153, "strokeWidthsForFreehandDrawingToolType:", 2);
  v170 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v169, v366);

  sub_100B59E5C(v170, v168);
  v172 = v171;
  swift_bridgeObjectRelease(v170);
  v173 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v168, "setStrokeWeightsToButtonImages:", v173, swift_bridgeObjectRelease(v172).n128_f64[0]);

  objc_msgSend(v153, "opacityForToolType:", 2);
  v175 = v174;
  v176 = objc_msgSend(v153, "colorForToolType:", 2);
  v177 = objc_msgSend(v176, "colorWithAlphaComponent:", v175);

  v178 = objc_msgSend(v177, "UIColor");
  objc_msgSend(v153, "strokeWidthForToolType:", 2);
  v180 = v179;
  v181 = v168;
  v182 = v178;
  v357 = (unint64_t)"com.apple.freeform.pen";
  v183 = v351;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD000000000000019, 0x8000000100FFA300, v181, v178, v180, 0);
  v184 = v344;
  v355 = 0;
  v375 = v162;
  v376 = (id (*)())&protocol witness table for PKCustomTool;
  v185 = sub_10050D1B0(&v373);
  ((void (*)(_QWORD *, char *, void *))v371)(v185, v183, v162);
  v186 = v365;
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

  ((void (*)(char *, void *))v370)(v183, v162);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierLasso);
  v188 = v187;
  v189 = (char *)String._bridgeToObjectiveC()();
  *(_QWORD *)&v190 = swift_bridgeObjectRelease(v188).n128_u64[0];
  v191 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v189, v190);
  v193 = v352;
  v192 = (int64_t)v353;
  if (v352)
  {
    v194 = swift_allocObject(&unk_101295998, 24, 7);
    *(_QWORD *)(v194 + 16) = v193;
    v376 = sub_100B5DB40;
    v377 = v194;
    *(_QWORD *)&v373 = _NSConcreteStackBlock;
    *((_QWORD *)&v373 + 1) = *(_QWORD *)"";
    v374 = sub_100528418;
    v375 = &unk_1012959B0;
    v195 = _Block_copy(&v373);
    v196 = v377;
    v197 = v193;
    objc_msgSend(v191, "setViewControllerProvider:", v195, swift_release(v196).n128_f64[0]);
    _Block_release(v195);

  }
  v198 = (char *)objc_opt_self(CRLiOSPencilTrayObjCHelper);
  v364 = (uint64_t)"FromTray(sender:)";
  v356 = (char *)0xD000000000000018;
  v199 = String._bridgeToObjectiveC()();
  objc_msgSend(v198, "insertCustomizedLassoToolWithToolIdentifier:withToolConfiguration:inToolPicker:forcingIndexZero:", v199, v191, v186, 1);

  v200 = v367;
  v201 = (int64_t)objc_msgSend(v367, "eraserToolErasesWholeObjects");
  v202 = objc_msgSend(v200, "strokeWidthIndexForToolType:", 8);
  if ((unint64_t)v202 > 4)
  {
    __break(1u);
    goto LABEL_53;
  }
  v354 = v198;
  v204 = *((double *)&off_1012638B8 + (_QWORD)v202 + 4);
  v205 = *(void (**)(int64_t, _QWORD, char **))(v345 + 104);
  v205(v192, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v184);
  v206 = v342;
  PKEraserTool.init(_:width:)(v192, v204);
  v207 = v347;
  v375 = v347;
  v376 = (id (*)())&protocol witness table for PKEraserTool;
  v208 = sub_10050D1B0(&v373);
  v209 = v346;
  (*(void (**)(_QWORD *, uint32_t *, void *))(v346 + 16))(v208, v206, v207);
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  if ((_DWORD)v201)
  {
    v205(v192, enum case for PKEraserTool.EraserType.vector(_:), v184);
    v375 = v207;
    v376 = (id (*)())&protocol witness table for PKEraserTool;
    sub_10050D1B0(&v373);
    PKEraserTool.init(_:)(v192);
    PKToolPicker.selectedTool.setter(&v373);
  }
  (*(void (**)(uint32_t *, void *))(v209 + 8))(v206, v207);
  static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierMarker);
  v211 = v210;
  v212 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v213 = swift_bridgeObjectRelease(v211).n128_u64[0];
  v352 = v212;
  v214 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v212, v213);
  v215 = v367;
  v216 = objc_msgSend(v367, "strokeWidthsForFreehandDrawingToolType:", 6);
  v217 = (void (*)(_QWORD, _QWORD, _QWORD))v366;
  v218 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v216, v366);

  sub_100B59E5C(v218, v214);
  v220 = v219;
  swift_bridgeObjectRelease(v218);
  v221 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "setStrokeWeightsToButtonImages:", v221, swift_bridgeObjectRelease(v220).n128_f64[0]);

  objc_msgSend(v215, "opacityForToolType:", 6);
  v223 = v222;
  v224 = objc_msgSend(v215, "colorForToolType:", 6);
  v225 = objc_msgSend(v224, "colorWithAlphaComponent:", v223);

  v226 = objc_msgSend(v225, "UIColor");
  objc_msgSend(v215, "strokeWidthForToolType:", 6);
  v228 = v227;
  v229 = v214;
  v230 = v226;
  v353 = "com.apple.freeform.crayon";
  v231 = v348;
  v232 = v355;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD000000000000019, 0x8000000100FFA340, v229, v226, v228, 0);
  if (v232)
  {
    v336 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v337 = swift_allocObject(v336, 72, 7);
    *(_OWORD *)(v337 + 16) = xmmword_100EF5E40;
    v338 = _convertErrorToNSError(_:)(v232);
    swift_errorRelease(v232);
    *(_QWORD *)(v337 + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    *(_QWORD *)(v337 + 64) = sub_1005A15B8((unint64_t *)&qword_1014068F0, (unint64_t *)&qword_1013F95B0, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v337 + 32) = v338;
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 397, "Unable to initialize custom marker tool for tray: %@", 52, 2u, v337);
    sub_100518FC0(v337, (uint64_t)"Unable to initialize custom marker tool for tray: %@");
    sub_100519194(v337, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 397, (uint64_t)"Unable to initialize custom marker tool for tray: %@", 52, 2u);
    goto LABEL_60;
  }
  v233 = v360;
  v375 = v360;
  v376 = (id (*)())&protocol witness table for PKCustomTool;
  v234 = sub_10050D1B0(&v373);
  ((void (*)(_QWORD *, char *, void *))v371)(v234, v231, v233);
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

  ((void (*)(char *, void *))v370)(v231, v233);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierMonoline);
  v236 = v235;
  v237 = (char *)String._bridgeToObjectiveC()();
  *(_QWORD *)&v238 = swift_bridgeObjectRelease(v236).n128_u64[0];
  v351 = v237;
  v239 = objc_msgSend(v372, "defaultConfigurationForToolWithIdentifier:", v237, v238);
  v240 = objc_msgSend(v215, "strokeWidthsForFreehandDrawingToolType:", 0);
  v241 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v240, v217);

  sub_100B59E5C(v241, v239);
  v243 = v242;
  swift_bridgeObjectRelease(v241);
  v244 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v239, "setStrokeWeightsToButtonImages:", v244, swift_bridgeObjectRelease(v243).n128_f64[0]);

  objc_msgSend(v215, "opacityForToolType:", 0);
  v246 = v245;
  v247 = objc_msgSend(v215, "colorForToolType:", 0);
  v248 = objc_msgSend(v247, "colorWithAlphaComponent:", v246);

  v249 = objc_msgSend(v248, "UIColor");
  objc_msgSend(v215, "strokeWidthForToolType:", 0);
  v251 = v250;
  v252 = v239;
  v253 = v249;
  v355 = " fixed width bitmap erase";
  v254 = v349;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD00000000000001BLL, 0x8000000100FFA2C0, v252, v249, v251, 0);
  v352 = 0;
  v375 = v233;
  v376 = (id (*)())&protocol witness table for PKCustomTool;
  v255 = sub_10050D1B0(&v373);
  ((void (*)(_QWORD *, char *, void *))v371)(v255, v254, v233);
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

  ((void (*)(char *, void *))v370)(v254, v233);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierPen);
  v257 = v256;
  v258 = (char *)String._bridgeToObjectiveC()();
  *(_QWORD *)&v259 = swift_bridgeObjectRelease(v257).n128_u64[0];
  v260 = v372;
  v372 = v258;
  v261 = objc_msgSend(v260, "defaultConfigurationForToolWithIdentifier:", v258, v259);
  v262 = objc_msgSend(v215, "strokeWidthsForFreehandDrawingToolType:", 1);
  v263 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v262, v217);

  sub_100B59E5C(v263, v261);
  v265 = v264;
  swift_bridgeObjectRelease(v263);
  v266 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v261, "setStrokeWeightsToButtonImages:", v266, swift_bridgeObjectRelease(v265).n128_f64[0]);

  objc_msgSend(v215, "opacityForToolType:", 1);
  v268 = v267;
  v269 = objc_msgSend(v215, "colorForToolType:", 1);
  v270 = objc_msgSend(v269, "colorWithAlphaComponent:", v268);

  v271 = objc_msgSend(v270, "UIColor");
  objc_msgSend(v215, "strokeWidthForToolType:", 1);
  v273 = v272;
  v274 = v261;
  v275 = v271;
  v189 = "com.apple.freeform.monoline";
  v276 = v343;
  v369 = (char *)0xD000000000000016;
  v277 = v352;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)(0xD000000000000016, 0x8000000100FFA2E0, v274, v271, v273, 0);
  if (v277)
  {
    v339 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v340 = swift_allocObject(v339, 72, 7);
    *(_OWORD *)(v340 + 16) = xmmword_100EF5E40;
    v341 = _convertErrorToNSError(_:)(v277);
    swift_errorRelease(v277);
    *(_QWORD *)(v340 + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    *(_QWORD *)(v340 + 64) = sub_1005A15B8((unint64_t *)&qword_1014068F0, (unint64_t *)&qword_1013F95B0, NSError_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v340 + 32) = v341;
    sub_100757E04(&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 437, "Unable to initialize custom pen tool for tray: %@", 49, 2u, v340);
    sub_100518FC0(v340, (uint64_t)"Unable to initialize custom pen tool for tray: %@");
    sub_100519194(v340, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 437, (uint64_t)"Unable to initialize custom pen tool for tray: %@", 49, 2u);
    goto LABEL_60;
  }
  v375 = v233;
  v376 = (id (*)())&protocol witness table for PKCustomTool;
  v278 = sub_10050D1B0(&v373);
  ((void (*)(_QWORD *, char *, void *))v371)(v278, v276, v233);
  PKToolPicker._insertTool(_:atIndex:)(&v373, 0);

  ((void (*)(char *, void *))v370)(v276, v233);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v373);
  v200 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v201 = v200[2];
  v203 = v200[3];
  v279 = v203 >> 1;
  v192 = v201 + 1;
  v184 = (char **)v356;
  if (v203 >> 1 <= v201)
  {
LABEL_53:
    v200 = sub_100D0EF94((_QWORD *)(v203 > 1), v192, 1, v200);
    v203 = v200[3];
    v279 = v203 >> 1;
  }
  v280 = v359;
  v281 = v353;
  v282 = v355;
  v200[2] = v192;
  v283 = &v200[2 * v201];
  v283[4] = v369;
  v283[5] = (unint64_t)v189 | 0x8000000000000000;
  v284 = v201 + 2;
  if (v279 < v284)
    v200 = sub_100D0EF94((_QWORD *)(v203 > 1), v284, 1, v200);
  v285 = v365;
  v200[2] = v284;
  v286 = &v200[2 * v192];
  v286[4] = 0xD00000000000001BLL;
  v286[5] = (unint64_t)v282 | 0x8000000000000000;
  v288 = v200[2];
  v287 = v200[3];
  if (v288 >= v287 >> 1)
    v200 = sub_100D0EF94((_QWORD *)(v287 > 1), v288 + 1, 1, v200);
  v200[2] = v288 + 1;
  v289 = &v200[2 * v288];
  v289[4] = 0xD000000000000019;
  v289[5] = (unint64_t)v281 | 0x8000000000000000;
  v290 = static String._unconditionallyBridgeFromObjectiveC(_:)(PKInkIdentifierEraser);
  v292 = v291;
  v294 = v200[2];
  v293 = v200[3];
  v295 = v293 >> 1;
  v296 = v294 + 1;
  if (v293 >> 1 <= v294)
  {
    v200 = sub_100D0EF94((_QWORD *)(v293 > 1), v294 + 1, 1, v200);
    v293 = v200[3];
    v295 = v293 >> 1;
  }
  v200[2] = v296;
  v297 = &v200[2 * v294];
  v297[4] = v290;
  v297[5] = v292;
  v298 = v294 + 2;
  if (v295 < (uint64_t)(v294 + 2))
    v200 = sub_100D0EF94((_QWORD *)(v293 > 1), v294 + 2, 1, v200);
  v300 = v362;
  v299 = v363;
  v200[2] = v298;
  v301 = &v200[2 * v296];
  v302 = v364 | 0x8000000000000000;
  v301[4] = v184;
  v301[5] = v302;
  v304 = v200[2];
  v303 = v200[3];
  v305 = v303 >> 1;
  v306 = v304 + 1;
  if (v303 >> 1 <= v304)
  {
    v200 = sub_100D0EF94((_QWORD *)(v303 > 1), v304 + 1, 1, v200);
    v303 = v200[3];
    v305 = v303 >> 1;
  }
  v200[2] = v306;
  v307 = &v200[2 * v304];
  v308 = v357 | 0x8000000000000000;
  v307[4] = 0xD000000000000019;
  v307[5] = v308;
  v309 = v304 + 2;
  if (v305 < v309)
    v200 = sub_100D0EF94((_QWORD *)(v303 > 1), v309, 1, v200);
  v200[2] = v309;
  v310 = &v200[2 * v306];
  v311 = v358 | 0x8000000000000000;
  v310[4] = v280;
  v310[5] = v311;
  v313 = v200[2];
  v312 = v200[3];
  v314 = v312 >> 1;
  v315 = v313 + 1;
  if (v312 >> 1 <= v313)
  {
    v200 = sub_100D0EF94((_QWORD *)(v312 > 1), v313 + 1, 1, v200);
    v312 = v200[3];
    v314 = v312 >> 1;
  }
  v200[2] = v315;
  v316 = &v200[2 * v313];
  v317 = (unint64_t)v361 | 0x8000000000000000;
  v316[4] = 0xD000000000000019;
  v316[5] = v317;
  v318 = v313 + 2;
  if (v314 < v318)
    v200 = sub_100D0EF94((_QWORD *)(v312 > 1), v318, 1, v200);
  v200[2] = v318;
  v319 = &v200[2 * v315];
  v319[4] = 0xD00000000000001ELL;
  v319[5] = (unint64_t)v300 | 0x8000000000000000;
  v321 = v200[2];
  v320 = v200[3];
  if (v321 >= v320 >> 1)
    v200 = sub_100D0EF94((_QWORD *)(v320 > 1), v321 + 1, 1, v200);
  v322 = v354;
  v200[2] = v321 + 1;
  v323 = &v200[2 * v321];
  v323[4] = 0xD00000000000001DLL;
  v323[5] = (unint64_t)v299 | 0x8000000000000000;
  v324 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v200);
  v325 = String._bridgeToObjectiveC()();
  objc_msgSend(v322, "resetTools:forSelectedTool:inToolPicker:", v324, v325, v285);

  objc_msgSend(v285, "_setShowsHandwritingTool:", 1);
  objc_msgSend(v285, "_setShowsRuler:", 1);
  objc_msgSend(v285, "_setNumberOfToolsAfterRuler:", 5);

  return (uint64_t)v285;
}

void sub_100B5D148(void *a1, double a2)
{
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;

  v2 = fmin(vabdd_f64(16.4, a2), INFINITY);
  v3 = vabdd_f64(32.4, a2);
  v4 = v3 < v2;
  if (v3 < v2)
    v2 = v3;
  v5 = vabdd_f64(48.4, a2);
  if (v5 < v2)
  {
    v2 = v5;
    v4 = 2;
  }
  v6 = vabdd_f64(64.4, a2);
  if (v6 < v2)
  {
    v4 = 3;
    v2 = v6;
  }
  if (vabdd_f64(80.4, a2) >= v2)
    v7 = v4;
  else
    v7 = 4;
  v8 = objc_msgSend(a1, "strokeWidthsForFreehandDrawingToolType:", 8);
  v9 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v10);
    goto LABEL_13;
  }
  if (v7 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 8 * v7 + 32);
LABEL_13:
    v12 = v11;
    objc_msgSend(v11, "crl_CGFloatValue", swift_bridgeObjectRelease().n128_f64[0]);

    return;
  }
  __break(1u);
}

void sub_100B5D284()
{
  uint64_t v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v2 = objc_msgSend(Strong, "canvasEditor");

  if (v2)
  {
    objc_msgSend(v2, "sendBackward:", 0);
    sub_100B57494();
    swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"sendBackward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1289, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sendBackward(sender:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1289, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B5D3A4()
{
  uint64_t v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v2 = objc_msgSend(Strong, "canvasEditor");

  if (v2)
  {
    objc_msgSend(v2, "sendToBack:", 0);
    sub_100B57494();
    swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"sendToBack(sender:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1298, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sendToBack(sender:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1298, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B5D4C4()
{
  uint64_t v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v2 = objc_msgSend(Strong, "canvasEditor");

  if (v2)
  {
    objc_msgSend(v2, "bringForward:", 0);
    sub_100B57494();
    swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"bringForward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1307, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"bringForward(sender:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1307, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B5D5E4()
{
  uint64_t v0;
  void *Strong;
  id v2;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc);
  v2 = objc_msgSend(Strong, "canvasEditor");

  if (v2)
  {
    objc_msgSend(v2, "bringToFront:", 0);
    sub_100B57494();
    swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"bringToFront(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1316, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"bringToFront(sender:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1316, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B5D704(unsigned __int8 a1)
{
  _BYTE *v1;
  char *v3;
  void *Strong;
  id v5;
  void *v6;
  void *v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  if (v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isInstalled] != 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1441, "Should not try to adjust visibility of a pencil tray which is not installed.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1441, (uint64_t)"Should not try to adjust visibility of a pencil tray which is not installed.", 76, 2u);
    return;
  }
  if (objc_msgSend(v1, "hidden") != (a1 & 1))
  {
    v3 = &v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc];
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc]);
    v5 = objc_msgSend(Strong, "layerHost");

    if (v5)
    {
      if ((objc_msgSend(v5, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v16 = objc_msgSend(v5, "asiOSCVC");
        swift_unknownObjectRelease(v5);
        v6 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
        v17 = objc_msgSend(v6, "textInputResponder");

        if (v17)
        {
          v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] = a1 & 1;
          if ((a1 & 1) != 0)
          {
            sub_100B548E8();
          }
          else
          {
            sub_100B4FA6C();
            sub_100B53FF0();
            sub_100B545BC();
            objc_msgSend(v16, "becomeFirstResponderIfAppropriate");
          }
          v8 = (char *)sub_100B4F46C();
          if (v8)
          {
            v9 = v8;
            v10 = *(id *)&v8[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

          }
          else
          {
            sub_100B4F3B8();
            v10 = v11;
          }
          objc_msgSend(v10, "setVisible:forFirstResponder:", (a1 ^ 1) & 1, v16);

          v12 = (char *)sub_100B4F46C();
          if (v12)
          {
            v13 = v12;
            v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];

          }
          else
          {
            sub_100B4F3B8();
            v14 = v15;
          }
          objc_msgSend(v14, "setVisible:forFirstResponder:", (a1 ^ 1) & 1, v17);

          if ((a1 & 1) == 0)
            sub_100B53834();

          v7 = v17;
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1459, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1459, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
          v7 = v16;
        }

        return;
      }
      swift_unknownObjectRelease(v5);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1454, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1454, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100B5DABC()
{
  sub_100B57244();
}

void sub_100B5DADC(uint64_t a1)
{
  uint64_t v1;

  sub_100B54894(a1, v1, (void (*)(void))sub_100B53FF0);
}

void sub_100B5DAFC(uint64_t a1)
{
  uint64_t v1;

  sub_100B54894(a1, v1, sub_100B57244);
}

uint64_t sub_100B5DB1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100B5DB40()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_100B5DB48(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(result);
  return result;
}

double sub_100B5DB68(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t inited;
  NSString *v5;
  id v6;
  id v7;
  NSString v8;
  Class isa;
  const __CFAttributedString *v10;
  const __CTLine *v11;
  double width;
  _BYTE v14[72];
  CGRect BoundsWithOptions;

  v3 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v3, v14);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_1004BF9E0();
  *(_QWORD *)(inited + 40) = a1;
  v5 = NSFontAttributeName;
  v6 = a1;
  sub_1008D4FE0(inited);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v7 = objc_allocWithZone((Class)NSAttributedString);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v10 = (const __CFAttributedString *)objc_msgSend(v7, "initWithString:attributes:", v8, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v11 = CTLineCreateWithAttributedString(v10);
  BoundsWithOptions = CTLineGetBoundsWithOptions(v11, 0);
  width = BoundsWithOptions.size.width;

  return width;
}

uint64_t sub_100B5DCB4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  id v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, __n128);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a3;
  v62 = type metadata accessor for URL(0);
  v60 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for UTType(0);
  v63 = *(_QWORD *)(v64 - 8);
  *(_QWORD *)&v15 = __chkstk_darwin(v64).n128_u64[0];
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v3, "dataUsingEncoding:", 4, v15);
  if (v18)
  {
    v19 = v18;
    v57 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v58 = v20;

    v21 = static UTType.plainText.getter();
    v22 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v22 = a1 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      v23 = String._bridgeToObjectiveC()();
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v23, "crl_filenameFromDisplayNameWithExtension:", v24);

      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

    }
    else
    {
      v32 = UTType.localizedDescription.getter(v21);
      if (v33)
      {
        v26 = v32;
        v28 = v33;
      }
      else
      {
        v34 = UUID.init()(v32);
        v35 = UUID.uuidString.getter(v34);
        v37 = v36;
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        v38 = sub_100C48F54(5, v35, v37);
        v40 = v39;
        v42 = v41;
        v44 = v43;
        v45 = swift_bridgeObjectRelease();
        v26 = static String._fromSubstring(_:)(v38, v40, v42, v44, v45);
        v28 = v46;
        swift_bridgeObjectRelease();
      }
    }
    v47 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
    v48 = objc_msgSend(v47, "temporaryDirectory");

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v48);
    URL.appendingPathComponent(_:conformingTo:)(v26, v28, v17);
    v49 = swift_bridgeObjectRelease();
    v50 = v60;
    v51 = *(void (**)(char *, uint64_t, __n128))(v60 + 8);
    v52 = v62;
    v51(v7, v62, v49);
    v54 = v57;
    v53 = v58;
    v55 = v61;
    Data.write(to:options:)(v10, 0, v57, v58);
    if (v55)
      ((void (*)(char *, uint64_t))v51)(v10, v52);
    else
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v59, v10, v52);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v64);
    return sub_1004BBBC8(v54, v53);
  }
  else
  {
    v29 = sub_100B5E13C();
    swift_allocError(&_s14FileWriteErrorON, v29, 0, 0);
    return swift_willThrow(v30);
  }
}

unint64_t sub_100B5E13C()
{
  unint64_t result;

  result = qword_101406970;
  if (!qword_101406970)
  {
    result = swift_getWitnessTable(&unk_100F285AC, &_s14FileWriteErrorON);
    atomic_store(result, (unint64_t *)&qword_101406970);
  }
  return result;
}

uint64_t _s14FileWriteErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100B5E1C0 + 4 * asc_100F28528[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100B5E1E0 + 4 * byte_100F2852D[v4]))();
}

_BYTE *sub_100B5E1C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100B5E1E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100B5E1E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100B5E1F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100B5E1F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100B5E200(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14FileWriteErrorOMa()
{
  return &_s14FileWriteErrorON;
}

unint64_t sub_100B5E220()
{
  unint64_t result;

  result = qword_101406978;
  if (!qword_101406978)
  {
    result = swift_getWitnessTable(&unk_100F28584, &_s14FileWriteErrorON);
    atomic_store(result, (unint64_t *)&qword_101406978);
  }
  return result;
}

id sub_100B5E264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  NSURL *v13;
  void *v14;
  uint64_t v16;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  objc_msgSend(v7, "setOriginalURL:", v9);

  v11 = objc_msgSend(v7, "originalURL");
  v12 = v11;
  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
    {
      v12 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v13);
      v12 = v14;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  objc_msgSend(v7, "setURL:", v12);

  return v7;
}

ValueMetadata *type metadata accessor for CRLMoviePresetData()
{
  return &type metadata for CRLMoviePresetData;
}

void sub_100B5E424(_QWORD *a1@<X8>)
{
  *a1 = &off_101263E28;
}

uint64_t sub_100B5E434(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100B5E99C();
  v5 = sub_100B5E9E4();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100B5E478(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B5E9E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B5E4A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B5E9E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B5E4C8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[48];
  char v17;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1014069F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100B5E9E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLMoviePresetData.CodingKeys, &type metadata for CRLMoviePresetData.CodingKeys, v11, v9, v10);
  memcpy(v16, v3, 0x178uLL);
  v17 = 0;
  v12 = sub_1009B0BB8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v16, &v17, v5, &type metadata for CRLMediaPresetData, v12);
  if (!v2)
  {
    v16[0] = v3[47];
    v17 = 1;
    v13 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v14 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v16, &v17, v5, v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100B5E62C(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE v4[384];

  sub_100B5EB98(a1, v4);
  if (!v2)
    memcpy(a2, v4, 0x180uLL);
}

uint64_t sub_100B5E67C(_QWORD *a1)
{
  return sub_100B5E4C8(a1);
}

uint64_t sub_100B5E690(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D0E4();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B5E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10089D12C();
  v7 = sub_100B5EE08();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B5E72C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10089D0E4();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100B5E764(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100B5EB0C();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100B5E7B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100B5EB0C();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100B5E7F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100B5EB0C();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100B5E830()
{
  unint64_t result;

  result = qword_101406980;
  if (!qword_101406980)
  {
    result = swift_getWitnessTable(&unk_100F28664, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_101406980);
  }
  return result;
}

unint64_t sub_100B5E87C()
{
  unint64_t result;

  result = qword_101406988;
  if (!qword_101406988)
  {
    result = swift_getWitnessTable(&unk_100F28734, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_101406988);
  }
  return result;
}

unint64_t sub_100B5E8C4()
{
  unint64_t result;

  result = qword_101406990;
  if (!qword_101406990)
  {
    result = swift_getWitnessTable(&unk_100F2870C, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_101406990);
  }
  return result;
}

unint64_t sub_100B5E90C()
{
  unint64_t result;

  result = qword_101406998;
  if (!qword_101406998)
  {
    result = swift_getWitnessTable(&unk_100F287A4, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406998);
  }
  return result;
}

unint64_t sub_100B5E954()
{
  unint64_t result;

  result = qword_1014069A0;
  if (!qword_1014069A0)
  {
    result = swift_getWitnessTable(&unk_100F288B4, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014069A0);
  }
  return result;
}

unint64_t sub_100B5E99C()
{
  unint64_t result;

  result = qword_1014069A8;
  if (!qword_1014069A8)
  {
    result = swift_getWitnessTable(&unk_100F2887C, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014069A8);
  }
  return result;
}

unint64_t sub_100B5E9E4()
{
  unint64_t result;

  result = qword_1014069B0;
  if (!qword_1014069B0)
  {
    result = swift_getWitnessTable(&unk_100F287DC, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014069B0);
  }
  return result;
}

unint64_t sub_100B5EA2C()
{
  unint64_t result;

  result = qword_1014069B8;
  if (!qword_1014069B8)
  {
    result = swift_getWitnessTable(&unk_100F28854, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014069B8);
  }
  return result;
}

unint64_t sub_100B5EA74()
{
  unint64_t result;

  result = qword_1014069C0;
  if (!qword_1014069C0)
  {
    result = swift_getWitnessTable(&unk_100F2882C, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014069C0);
  }
  return result;
}

unint64_t sub_100B5EABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014069C8;
  if (!qword_1014069C8)
  {
    v1 = sub_1004CB6A4(&qword_1014069D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1014069C8);
  }
  return result;
}

unint64_t sub_100B5EB0C()
{
  unint64_t result;

  result = qword_1014069D8;
  if (!qword_1014069D8)
  {
    result = swift_getWitnessTable(&unk_100F2875C, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_1014069D8);
  }
  return result;
}

unint64_t sub_100B5EB54()
{
  unint64_t result;

  result = qword_1014069E0;
  if (!qword_1014069E0)
  {
    result = swift_getWitnessTable(&unk_100F286AC, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_1014069E0);
  }
  return result;
}

void sub_100B5EB98(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[48];
  _BYTE v19[376];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[376];
  _BYTE v23[376];
  _BYTE v24[376];
  char v25;
  char v26;

  v17 = sub_1004B804C(&qword_1014069E8);
  v5 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100B5E9E4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLMoviePresetData.CodingKeys, &type metadata for CRLMoviePresetData.CodingKeys, v10, v8, v9);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = a2;
    v26 = 0;
    v12 = sub_1009B0844();
    v13 = v17;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLMediaPresetData, &v26, v17, &type metadata for CRLMediaPresetData, v12);
    memcpy(v22, v23, sizeof(v22));
    memcpy(v24, v23, sizeof(v24));
    v14 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v25 = 1;
    sub_1009B0888((uint64_t)v22);
    v15 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v25, v13, v14, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
    v16 = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease();
    memcpy(v18, v22, 0x178uLL);
    v18[47] = v16;
    sub_1009B0AA0((uint64_t)v18);
    swift_bridgeObjectRelease();
    sub_1009B0994((uint64_t)v22);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(v19, v24, sizeof(v19));
    v20 = v16;
    sub_1007848D0((uint64_t)v19);
    memcpy(v11, v18, 0x180uLL);
  }
}

unint64_t sub_100B5EE08()
{
  unint64_t result;

  result = qword_1014069F8;
  if (!qword_1014069F8)
  {
    result = swift_getWitnessTable(&unk_100F288DC, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_1014069F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLMoviePresetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100B5EE98 + 4 * byte_100F28645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100B5EECC + 4 * byte_100F28640[v4]))();
}

uint64_t sub_100B5EECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B5EED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B5EEDCLL);
  return result;
}

uint64_t sub_100B5EEE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B5EEF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100B5EEF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B5EEFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMoviePresetData.CodingKeys()
{
  return &type metadata for CRLMoviePresetData.CodingKeys;
}

unint64_t sub_100B5EF1C()
{
  unint64_t result;

  result = qword_101406A00;
  if (!qword_101406A00)
  {
    result = swift_getWitnessTable(&unk_100F28A00, &type metadata for CRLMoviePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101406A00);
  }
  return result;
}

uint64_t sub_100B5EF60(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 74) = a1;
  return swift_task_switch(sub_100B5EF7C, 0, 0);
}

uint64_t sub_100B5EF7C(__n128 a1)
{
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  if (*(_BYTE *)(v1 + 74))
  {
    if (*(_BYTE *)(v1 + 74) == 1)
    {
      v2 = 0;
    }
    else
    {
      EntityProperty.wrappedValue.getter(a1);
      v2 = *(_BYTE *)(v1 + 72) ^ 1;
    }
  }
  else
  {
    v2 = 1;
  }
  v3 = v2 & 1;
  *(_BYTE *)(v1 + 75) = v2 & 1;
  EntityProperty.wrappedValue.getter(a1);
  if (v3 == *(unsigned __int8 *)(v1 + 73))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(unsigned __int8 *)(v1 + 75));
  v4 = *(_QWORD *)(v1 + 16);
  sub_1004BB5A4(*(_QWORD **)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 24));
  v5 = sub_1004B804C(&qword_1013EF520);
  v6 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v5, v10 + v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  v12 = v11 + v10;
  v13 = type metadata accessor for CRLBoardEntity(0);
  sub_1004E1B3C(v4 + *(int *)(v13 + 40), v12);
  *(_BYTE *)(v12 + *(int *)(v6 + 20)) = v3;
  v14 = sub_100AF83A8(v11);
  *(_QWORD *)(v1 + 32) = v14;
  swift_setDeallocating(v11);
  swift_arrayDestroy(v12, 1, v6);
  swift_deallocClassInstance(v11, 32, 7);
  v15 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 40) = v15;
  *(_QWORD *)(v1 + 48) = static MainActor.shared.getter(v15);
  v16 = (_QWORD *)swift_task_alloc(dword_10140E1EC);
  *(_QWORD *)(v1 + 56) = v16;
  *v16 = v1;
  v16[1] = sub_100B5F134;
  return sub_100CA6AF8(v14);
}

uint64_t sub_100B5F134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100B5F200;
  else
    v6 = sub_100B5F1BC;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100B5F1BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 75));
}

uint64_t sub_100B5F200()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_task_switch(sub_100B5F23C, 0, 0);
}

uint64_t sub_100B5F23C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

ValueMetadata *type metadata accessor for CRLFavoriteBoardIntentPerformer()
{
  return &type metadata for CRLFavoriteBoardIntentPerformer;
}

char *sub_100B5F340(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  char *v16;
  _BYTE v17[32];
  objc_super v18;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath] = 0;
  v3 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  v4 = objc_allocWithZone((Class)CRLNoDefaultImplicitActionLayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");

  v6 = a1[3];
  v7 = sub_1004BB5A4(a1, v6);
  v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
  v9 = (objc_class *)type metadata accessor for CRLOutsideBorderPlatterLayer();
  v18.receiver = v5;
  v18.super_class = v9;
  v10 = objc_msgSendSuper2(&v18, "initWithLayer:", v8);
  swift_unknownObjectRelease(v8);
  v11 = (char *)v10;
  objc_msgSend(v11, "setMasksToBounds:", 0);
  sub_1004CB6E8((uint64_t)a1, (uint64_t)v17);
  if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v12 = v16;
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth];
    v13 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer], "backgroundColor");
    v14 = *(id *)&v11[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer];
    objc_msgSend(v14, "setBackgroundColor:", v13);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(layer:)", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v11;
}

id sub_100B5F5B0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath] = 0;
  v3 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  v4 = objc_allocWithZone((Class)CRLNoDefaultImplicitActionLayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  v6 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v8, "setMasksToBounds:", 0);

  }
  return v7;
}

void sub_100B5F6AC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  char v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  objc_super v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  objc_msgSendSuper2(&v11, "layoutSublayers");
  v2 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer], "superlayer");
  if (!v3)
    goto LABEL_4;
  sub_1004EB280();
  v4 = v0;
  v5 = v3;
  v6 = static NSObject.== infix(_:_:)(v5, v4);

  if ((v6 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 102, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSublayers()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2u, 102, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
LABEL_4:
    objc_msgSend(v1, "addSublayer:", *(_QWORD *)&v1[v2]);
    objc_msgSend(*(id *)&v1[v2], "setZPosition:", -10000.0);
  }
  v7 = *(id *)&v1[v2];
  objc_msgSend(v1, "bounds");
  v13 = CGRectInset(v12, -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth], -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth]);
  objc_msgSend(v7, "setFrame:", v13.origin.x, v13.origin.y, v13.size.width, v13.size.height);

  objc_msgSend(v1, "bounds");
  v8 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath;
  v15 = CGRectInset(v14, -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath], -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath]);
  v9 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v15.origin.x, v15.origin.y, v15.size.width, v15.size.height, *(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius]+ *(double *)&v1[v8]);
  v10 = objc_msgSend(v9, "CGPath");
  objc_msgSend(v1, "setShadowPath:", v10);

}

id sub_100B5F968()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLOutsideBorderPlatterLayer()
{
  return objc_opt_self(_TtC8Freeform28CRLOutsideBorderPlatterLayer);
}

ValueMetadata *type metadata accessor for CRLSerializableObjectOptions()
{
  return &type metadata for CRLSerializableObjectOptions;
}

uint64_t sub_100B5F9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100B5FB14();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100B5FA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100B5FB14();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_100B5FA84()
{
  unint64_t result;

  result = qword_101406A58;
  if (!qword_101406A58)
  {
    result = swift_getWitnessTable(&unk_100F28AD0, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_101406A58);
  }
  return result;
}

unint64_t sub_100B5FACC()
{
  unint64_t result;

  result = qword_101406A60;
  if (!qword_101406A60)
  {
    result = swift_getWitnessTable(&unk_100F28AA0, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_101406A60);
  }
  return result;
}

unint64_t sub_100B5FB14()
{
  unint64_t result;

  result = qword_101406A68;
  if (!qword_101406A68)
  {
    result = swift_getWitnessTable(&unk_100F28AF8, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_101406A68);
  }
  return result;
}

unint64_t sub_100B5FB5C()
{
  unint64_t result;

  result = qword_101406A70;
  if (!qword_101406A70)
  {
    result = swift_getWitnessTable(&unk_100F28B30, &type metadata for CRLSerializableObjectOptions);
    atomic_store(result, (unint64_t *)&qword_101406A70);
  }
  return result;
}

double destroy for CRLSendACopyBoardDataHandler(uint64_t a1)
{
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLSendACopyBoardDataHandler(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  __int128 v11;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v11;
  v6 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v5;
  v7 = v3;
  v8 = v4;
  swift_unknownObjectRetain(v11);
  v9 = v6;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for CRLSendACopyBoardDataHandler(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_unknownObjectRetain(v10);
  swift_unknownObjectRelease(v12);
  *(_QWORD *)(a1 + 24) = v11;
  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

uint64_t assignWithTake for CRLSendACopyBoardDataHandler(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
  *(_OWORD *)(a1 + 16) = a2[1];

  v5 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLSendACopyBoardDataHandler()
{
  return &type metadata for CRLSendACopyBoardDataHandler;
}

uint64_t sub_100B5FD5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v2[32] = a1;
  v2[33] = v1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v2[35] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[36] = v6;
  v2[37] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v2[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 32);
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1014085B8 + dword_1014085B8);
  v9 = (_QWORD *)swift_task_alloc(unk_1014085BC);
  v2[39] = v9;
  *v9 = v2;
  v9[1] = sub_100B5FE34;
  return v11(a1, v8);
}

uint64_t sub_100B5FE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*v2 + 312);
  v4 = *v2;
  *(_QWORD *)(v4 + 320) = a1;
  swift_task_dealloc(v3);
  if (!v1)
    return swift_task_switch(sub_100B5FED4, 0, 0);
  v5 = *(_QWORD *)(v4 + 296);
  v6 = *(_QWORD *)(v4 + 272);
  swift_task_dealloc(*(_QWORD *)(v4 + 304));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100B5FED4()
{
  _QWORD *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;

  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  v1 = v0[40];
  swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 25, 0, 0);
  v2 = (void *)static OS_os_log.crlSendACopy;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[41] = v3;
  inited = swift_initStackObject(v3, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (v1 >> 62)
  {
    v19 = v0[40];
    if (v19 < 0)
      v20 = v0[40];
    else
      v20 = v1 & 0xFFFFFFFFFFFFFF8;
    v21 = v2;
    swift_bridgeObjectRetain(v19);
    v5 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v2;
  }
  v0[31] = v5;
  v7 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v10 = sub_1004CFC2C();
  v0[42] = v10;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v9;
  v11 = UUID.uuidString.getter(v10);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v14, "downloadFromPublicDatabase() Public records fetched: %@ for boardIdentifier: %@", 79, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  v0[43] = v15;
  swift_arrayDestroy(inited + 32, 2, v15);

  v16 = (_QWORD *)swift_task_alloc(dword_101406A94);
  v0[44] = v16;
  *v16 = v0;
  v16[1] = sub_100B600CC;
  v17 = v0[33];
  v16[20] = v0[40];
  v16[21] = v17;
  return swift_task_switch(sub_100B603EC, 0, 0);
}

uint64_t sub_100B600CC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 352);
  *(_QWORD *)(*v3 + 360) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_100B60378;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + 320));
    *(_BYTE *)(v6 + 376) = a2 & 1;
    *(_QWORD *)(v6 + 368) = a1;
    v8 = sub_100B60154;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100B60154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 336);
  v26 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  v22 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v4 = (void *)static OS_os_log.crlSendACopy;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 328), v0 + 128);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 224, 0, 0);
  v24 = v3;
  sub_1004B8460(v8, v3, type metadata accessor for CRLBoardCRDTData);
  v9 = v4;
  swift_retain(v7);
  v10 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v10);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v11 = (uint64_t *)(*(_QWORD *)(v1 + v6) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain(v13);
  sub_10067AFD0(v2, v12, v13, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v2, v21, v23);
  v14 = sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  v18.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v22 + 8))(v2, v23);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v25;
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v17;
  v19 = static os_log_type_t.default.getter(v18);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v19, "Successfully _createBoardFromRecords() board %{public}@", 55, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v26);

  swift_task_dealloc(v21);
  swift_task_dealloc(v2);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 368), *(unsigned __int8 *)(v0 + 376));
}

uint64_t sub_100B60378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 320));
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B603D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  return swift_task_switch(sub_100B603EC, 0, 0);
}

uint64_t sub_100B603EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double *v11;
  _QWORD *v12;
  double *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  double *v26;
  _QWORD *v27;
  __int128 v29;

  v2 = v0[20];
  v1 = v0[21];
  v3 = *(void **)v1;
  v0[22] = *(_QWORD *)v1;
  v4 = *(void **)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(void **)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = v3;
  v9 = v4;
  swift_unknownObjectRetain(v5);
  v10 = v6;
  swift_retain(v7);
  v11 = sub_100B62C84(v2);

  swift_unknownObjectRelease(v5);
  swift_release(v7);
  v12 = v0 + 18;
  v13 = _swiftEmptyArrayStorage;
  v0[18] = _swiftEmptyArrayStorage;
  v14 = *((_QWORD *)v11 + 2);
  if (v14)
  {
    v15 = v11 + 4;
    v16 = type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
    do
    {
      v29 = *(_OWORD *)v15;
      v20 = *v15;
      v21 = swift_dynamicCastClass(*v15, v16);
      v22 = swift_unknownObjectRetain_n(v20, 2);
      if (v21)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v18 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v21);
        specialized Array._endMutation()(v19);
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (double *)sub_100D11118(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v23 = v29;
        v25 = *((_QWORD *)v13 + 2);
        v24 = *((_QWORD *)v13 + 3);
        if (v25 >= v24 >> 1)
        {
          v26 = (double *)sub_100D11118((_QWORD *)(v24 > 1), v25 + 1, 1, v13);
          v23 = v29;
          v13 = v26;
        }
        *((_QWORD *)v13 + 2) = v25 + 1;
        *(_OWORD *)&v13[2 * v25 + 4] = v23;
      }
      swift_unknownObjectRelease(v20);
      v15 += 2;
      --v14;
    }
    while (v14);
  }
  v0[23] = v13;
  swift_bridgeObjectRelease(v11);
  v27 = (_QWORD *)swift_task_alloc(dword_101406AA4);
  v0[24] = v27;
  *v27 = v0;
  v27[1] = sub_100B6061C;
  return sub_100B609F4((uint64_t)v13);
}

uint64_t sub_100B6061C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v3;
  *(_QWORD *)(v4 + 112) = v2;
  *(_BYTE *)(v4 + 104) = a2;
  *(_QWORD *)(v4 + 88) = v3;
  *(_QWORD *)(v4 + 96) = a1;
  v5 = *(_QWORD *)(v4 + 192);
  *(_QWORD *)(v4 + 200) = a1;
  *(_QWORD *)(v4 + 208) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v6 = *(_QWORD *)(v4 + 184);
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 144));
    swift_bridgeObjectRelease(v6);
    v7 = sub_100B609E4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 184));
    v7 = sub_100B606B0;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100B606B0()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  __n128 v20;
  _QWORD *v22;
  uint64_t v23;
  id v24;

  v1 = (uint64_t *)(v0 + 144);
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 120, 0, 0);
  v2 = (void *)static OS_os_log.crlSendACopy;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v5 < 0)
      v23 = *v1;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    v24 = v2;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v2;
  }
  v9 = *(void **)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 152) = v6;
  v10 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v14, "Got %{public}@ buckets to be saved to new board", 47, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  sub_100B61270(v5, v9);
  v16 = *(void **)(v0 + 200);
  swift_bridgeObjectRelease(v5);
  if (v8)
    goto LABEL_9;
  if ((*((_BYTE *)v16 + OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported) & 1) != 0
    || (sub_100B1BA74(), sub_1001E9730() < v17))
  {
    v16 = *(void **)(v0 + 200);
    v18 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v18, 0, 0);
    *v19 = 14;
    swift_willThrow(v20);
LABEL_9:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = (_QWORD *)swift_task_alloc(dword_101406AAC);
  *(_QWORD *)(v0 + 216) = v22;
  *v22 = v0;
  v22[1] = sub_100B6092C;
  return sub_100B647A4(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 176));
}

uint64_t sub_100B6092C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B609AC;
  }
  else
  {
    *(_BYTE *)(v2 + 232) = *(_BYTE *)(v2 + 104);
    v4 = sub_100B60998;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B60998()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200), *(unsigned __int8 *)(v0 + 232));
}

uint64_t sub_100B609AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B609E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B609F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101406B10);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  v2[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[8] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v8);
  v2[10] = swift_task_alloc(v8);
  return swift_task_switch(sub_100B60AC8, 0, 0);
}

void sub_100B60AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  id v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _BYTE *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[9];

  v1 = sub_100A66950(*(_QWORD *)(v0 + 16), (void (*)(_QWORD **__return_ptr, uint64_t *, __n128))sub_100B62C24, 0, (void (*)(_QWORD **__return_ptr, _QWORD *))sub_100B62C34, 0, (void (*)(uint64_t **__return_ptr, _QWORD *, __n128))sub_10079F488, 0);
  v2 = v1;
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v2);
    v56 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v56, 0, 0);
    *v57 = 13;
    swift_willThrow(v58);
LABEL_19:
    v59 = *(_QWORD *)(v0 + 72);
    v61 = *(_QWORD *)(v0 + 40);
    v60 = *(_QWORD *)(v0 + 48);
    v62 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (v1 < 0)
    v53 = v1;
  else
    v53 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v54 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v2);
  if (v54 != 1)
    goto LABEL_18;
  swift_bridgeObjectRetain(v2);
  v55 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v2);
  if (!v55)
    goto LABEL_18;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_6:
    swift_bridgeObjectRelease(v2);
    v79[0] = 0;
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v4 + 32);
    if (v5
      && (v6 = type metadata accessor for CRLBoardSyncRemoteRecord(0), (v7 = swift_dynamicCastClass(v5, v6)) != 0))
    {
      v8 = v7;
      v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData);
      v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8);
      swift_unknownObjectRetain(v5);
      if (v9 >> 60 != 15)
      {
        v14 = *(_QWORD *)(v0 + 56);
        sub_10057939C(v10, v9);
        swift_unknownObjectRetain(v5);
        sub_10057939C(v10, v9);
        v15 = sub_1004B7878((unint64_t *)&unk_101405DC0, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
        swift_retain(v4);
        CRDT.init(serializedData:)(v10, v9, v14, v15);
        v19 = *(_QWORD *)(v0 + 72);
        v74 = v19;
        v76 = *(_QWORD *)(v0 + 80);
        v20 = *(_QWORD *)(v0 + 48);
        v64 = *(_QWORD *)(v0 + 40);
        (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 56))(v20, 0, 1, *(_QWORD *)(v0 + 56));
        sub_1004B84E0(v20, v76, type metadata accessor for CRLBoardCRDTData);
        v73 = *(_OWORD *)(v8 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
        v69 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
        sub_1004B8460(v76, v19, type metadata accessor for CRLBoardCRDTData);
        sub_1004B8460(v8 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier, v64, type metadata accessor for CRLBoardIdentifier);
        v21 = (uint64_t *)(v64 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
        v22 = v21[1];
        v66 = *v21;
        swift_bridgeObjectRetain(v22);
        sub_1004B84A4(v64, type metadata accessor for CRLBoardIdentifier);
        v23 = type metadata accessor for CRLBoardData(0);
        v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
        *(_QWORD *)(v24 + 16) = 7;
        *(_OWORD *)(v24 + 24) = v73;
        *(_QWORD *)(v24 + 40) = v69;
        sub_1004B84E0(v74, v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
        swift_unknownObjectRelease(v5);
        sub_1004BE2FC(v10, v9);
        v25 = (_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        *v25 = v66;
        v25[1] = v22;
        sub_1004B84A4(v76, type metadata accessor for CRLBoardCRDTData);
        v26 = sub_100B63C40(v4, v8);
        v28 = v27;
        v77 = *(_QWORD *)(v0 + 32);
        *(_QWORD *)&v73 = *(_QWORD *)(v0 + 24);
        v29 = *(void **)v73;
        v30 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
        v31 = v24;
        v32 = v29;
        swift_retain(v24);
        swift_retain(v28);
        swift_retain(v26);
        v33 = sub_100B2A698(v32, v24, v28, (uint64_t)v26, 0, 0);
        swift_release(v26);
        swift_release(v28);
        v65 = v31;
        swift_release(v31);

        v34 = v32;
        v35 = v33;
        UUID.init()(v35);
        v36 = type metadata accessor for CRLTransactionContext(0);
        v37 = swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
        v75 = sub_1006AD854((uint64_t)v35, 0, 1, v77, 1, v37);
        v78 = v28;
        v38 = *(_QWORD *)(v73 + 16);
        v39 = *(_QWORD *)(v73 + 40);
        v67 = *(void **)(v73 + 8);
        v70 = *(void **)(v73 + 32);
        v40 = v34;
        swift_retain(v78);
        swift_retain(v26);
        v41 = v35;
        v68 = v67;
        swift_unknownObjectRetain(v38);
        v42 = v70;
        v43 = v26;
        v44 = v42;
        v71 = v39;
        v45 = v39;
        v46 = (uint64_t)v43;
        swift_retain(v45);
        sub_100615E9C(v3, v46, v78, v79, v40, v41, v75);

        v63 = v41;
        swift_unknownObjectRelease(v38);

        swift_release(v71);
        swift_release(v78);
        v47 = swift_release(v46);
        v48 = (*(uint64_t (**)(__n128))(*(_QWORD *)v75 + 720))(v47);
        v50 = *(_QWORD *)(v0 + 72);
        v49 = *(_QWORD *)(v0 + 80);
        v51 = *(_QWORD *)(v0 + 48);
        v72 = *(_QWORD *)(v0 + 40);
        *(_QWORD *)&v73 = *(_QWORD *)(v0 + 32);
        swift_unknownObjectRelease(v5);
        swift_release(v65);
        swift_release(v78);
        swift_release(v46);
        swift_release(v75);
        swift_release(v4);
        swift_release(v3);
        swift_release(v48);
        v52 = v79[0];
        swift_task_dealloc(v49);
        swift_task_dealloc(v50);
        swift_task_dealloc(v51);
        swift_task_dealloc(v72);
        swift_task_dealloc(v73);
        (*(void (**)(char *, uint64_t))(v0 + 8))(v63, v52);
        return;
      }
      swift_retain(v4);
      v16 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v16, 0, 0);
      *v17 = 3;
      swift_willThrow(v18);
      swift_release(v3);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      v11 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v11, 0, 0);
      *v12 = 6;
      v13 = swift_retain(v4);
      swift_willThrow(v13);
      swift_release(v3);
    }
    swift_release(v4);
    goto LABEL_19;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v2 + 32);
    swift_retain(v3);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_100B61270(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t inited;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t KeyPath;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  Class isa;
  id v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  uint64_t v149;
  _BOOL8 v150;
  uint64_t v151;
  char v152;
  unint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  BOOL v158;
  void (*v159)(char *, uint64_t, uint64_t);
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  void (*v166)(char *, uint64_t, uint64_t);
  __n128 v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  _BYTE *v179;
  __n128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  id v204;
  id v205;
  id v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(__n128);
  char *v219;
  __n128 v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __n128 v226;
  uint64_t v227;
  __n128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  __n128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t result;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  _BYTE *v258;
  __n128 v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  char *v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  char *v276;
  id v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  void (*v283)(_QWORD *@<X8>);
  id v284;
  uint64_t v285;
  _QWORD *v286;
  unint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  unint64_t v309;
  __int128 v310;
  uint64_t v311;
  uint64_t v312;
  void (*v313)(char *, uint64_t, uint64_t);
  char *v314;
  uint64_t v315;
  __int128 v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD v331[6];
  char v332[72];
  char v333[40];
  uint64_t v334;

  v284 = a2;
  v3 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v3);
  v293 = (char *)&v262 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v292 = (uint64_t)&v262 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v7);
  v291 = (uint64_t)&v262 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v290 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v290);
  v289 = (uint64_t)&v262 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_101405EA0);
  __chkstk_darwin(v10);
  v299 = (uint64_t)&v262 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v298 = (char *)&v262 - v13;
  v14 = sub_1004B804C(&qword_101403058);
  __chkstk_darwin(v14);
  v297 = (char *)&v262 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v322 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v296 = *(_QWORD *)(v322 - 8);
  __chkstk_darwin(v322);
  *(_QWORD *)&v316 = (char *)&v262 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v334 = type metadata accessor for UUID(0);
  v315 = *(_QWORD *)(v334 - 8);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v315 + 64);
  __chkstk_darwin(v334);
  v288 = (char *)&v262 - ((isUniquelyReferenced_nonNull_native + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v314 = (char *)&v262 - v19;
  __chkstk_darwin(v20);
  v320 = (char *)&v262 - v21;
  v22 = sub_1004B804C((uint64_t *)&unk_101405EB0);
  __chkstk_darwin(v22);
  v305 = (char *)&v262 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v262 - v25;
  v285 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  v273 = *(_QWORD *)(v285 - 8);
  __chkstk_darwin(v285);
  v272 = (char *)&v262 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = sub_1004B804C((uint64_t *)&unk_101406AC0);
  v269 = *(_QWORD *)(v307 - 8);
  __chkstk_darwin(v307);
  v308 = (char *)&v262 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = sub_1004B804C(&qword_101405EC0);
  v323 = *(_QWORD *)(v306 - 8);
  __chkstk_darwin(v306);
  v295 = (char *)&v262 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v271 = (char *)&v262 - v31;
  __chkstk_darwin(v32);
  v270 = (char *)&v262 - v33;
  v34 = sub_1004B804C((uint64_t *)&unk_1014064B0);
  __chkstk_darwin(v34);
  v274 = (char *)&v262 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v276 = (char *)&v262 - v37;
  v279 = sub_1004B804C(&qword_101405628);
  v275 = *(_QWORD *)(v279 - 8);
  __chkstk_darwin(v279);
  v278 = (char *)&v262 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD778 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once(&qword_1013DD778, sub_100A02BF8);
LABEL_2:
    swift_beginAccess(&static OS_os_log.crlSendACopy, v333, 0, 0);
    v39 = (void *)static OS_os_log.crlSendACopy;
    v311 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v311, v332);
    v310 = xmmword_100EF5E40;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v41 = (unint64_t)a1 >> 62;
    v281 = a1;
    if ((unint64_t)a1 >> 62)
    {
      v260 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
      v261 = v39;
      swift_bridgeObjectRetain(a1);
      v42 = _CocoaArrayWrapper.endIndex.getter(v260);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v43 = v39;
    }
    v331[0] = v42;
    v44 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    a1 = v45;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v309 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v309;
    *(_QWORD *)(inited + 32) = v44;
    *(_QWORD *)(inited + 40) = a1;
    v47 = static os_log_type_t.default.getter(v46);
    sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v47, "Adding %{public}@ CRLFreehandDrawingBucketSyncRemoteRecord to board", 67, 2, inited);
    swift_setDeallocating(inited);
    v312 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v312);

    v48 = sub_1008D6F50((uint64_t)_swiftEmptyArrayStorage);
    if (v41)
    {
      if (v281 < 0)
        v181 = v281;
      else
        v181 = v281 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v281);
      v49 = _CocoaArrayWrapper.endIndex.getter(v181);
      if (!v49)
      {
LABEL_64:
        v283 = 0;
LABEL_65:
        swift_bridgeObjectRelease(v281);
        sub_1004B7878((unint64_t *)&qword_101406AE0, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
        v182 = (uint64_t)v284;
        swift_unknownObjectRetain(v284);
        v183 = (uint64_t)v314;
        UUID.init()(v184);
        v185 = type metadata accessor for CRLTransactionContext(0);
        v186 = swift_allocObject(v185, *(unsigned int *)(v185 + 48), *(unsigned __int16 *)(v185 + 52));
        v317 = sub_1006AD854(v182, 0, 1, v183, 1, v186);
        v187 = *(_QWORD *)(v48 + 64);
        v308 = (char *)(v48 + 64);
        v188 = 1 << *(_BYTE *)(v48 + 32);
        v189 = -1;
        if (v188 < 64)
          v189 = ~(-1 << v188);
        v190 = v189 & v187;
        v313 = (void (*)(char *, uint64_t, uint64_t))((unint64_t)(v188 + 63) >> 6);
        swift_bridgeObjectRetain(v48);
        v191 = 0;
        v316 = xmmword_100EF5A10;
        a1 = v304;
        v287 = v48;
        if (v190)
        {
LABEL_68:
          v304 = a1;
          v318 = (v190 - 1) & v190;
          v319 = v191;
          v192 = __clz(__rbit64(v190)) | (v191 << 6);
          goto LABEL_80;
        }
        while (1)
        {
          v54 = __OFADD__(v191, 1);
          v193 = v191 + 1;
          if (v54)
            break;
          if (v193 >= (uint64_t)v313)
            goto LABEL_101;
          v194 = *(_QWORD *)&v308[8 * v193];
          if (!v194)
          {
            v195 = v193 + 1;
            if (v193 + 1 >= (uint64_t)v313)
              goto LABEL_101;
            v194 = *(_QWORD *)&v308[8 * v195];
            if (!v194)
            {
              v195 = v193 + 2;
              if (v193 + 2 >= (uint64_t)v313)
                goto LABEL_101;
              v194 = *(_QWORD *)&v308[8 * v195];
              if (!v194)
              {
                v195 = v193 + 3;
                if (v193 + 3 >= (uint64_t)v313)
                {
LABEL_101:
                  v244 = a1;
                  swift_release(v48);
                  v245 = swift_bridgeObjectRelease(v48);
                  v246 = v317;
                  v247 = (*(uint64_t (**)(__n128))(*(_QWORD *)v317 + 720))(v245);
                  swift_release(v246);
                  if (!v244)
                    swift_release(v247);
                  return sub_1004C1024((uint64_t)v283, 0);
                }
                v194 = *(_QWORD *)&v308[8 * v195];
                if (!v194)
                {
                  while (1)
                  {
                    v193 = v195 + 1;
                    if (__OFADD__(v195, 1))
                      break;
                    if (v193 >= (uint64_t)v313)
                      goto LABEL_101;
                    v194 = *(_QWORD *)&v308[8 * v193];
                    ++v195;
                    if (v194)
                      goto LABEL_79;
                  }
                  __break(1u);
                  goto LABEL_116;
                }
              }
            }
            v193 = v195;
          }
LABEL_79:
          v304 = a1;
          v318 = (v194 - 1) & v194;
          v319 = v193;
          v192 = __clz(__rbit64(v194)) + (v193 << 6);
LABEL_80:
          v196 = 8 * v192;
          v197 = *(_QWORD *)(v48 + 56);
          v198 = *(void **)(*(_QWORD *)(v48 + 48) + v196);
          v199 = *(_QWORD *)(v197 + v196);
          v200 = *(void **)(v282 + 8);
          v201 = *(_QWORD *)(v282 + 16);
          v203 = *(void **)(v282 + 32);
          v202 = *(_QWORD *)(v282 + 40);
          v204 = *(id *)v282;
          v205 = v200;
          swift_unknownObjectRetain(v201);
          v206 = v203;
          swift_retain(v202);
          v207 = v198;
          swift_bridgeObjectRetain(v199);
          v208 = v304;
          v210 = (uint64_t)sub_100B62E34(v209, v204);
          v323 = v208;
          swift_bridgeObjectRelease(v199);
          swift_release(v202);

          swift_unknownObjectRelease(v201);
          v26 = (char *)static OS_os_log.crlSendACopy;
          v211 = swift_initStackObject(v311, &v328);
          *(_OWORD *)(v211 + 16) = v316;
          v321 = (char *)((unint64_t)v210 >> 62);
          if ((unint64_t)v210 >> 62)
          {
            if (v210 < 0)
              v240 = v210;
            else
              v240 = v210 & 0xFFFFFFFFFFFFFF8;
            v241 = v26;
            swift_bridgeObjectRetain(v210);
            v212 = _CocoaArrayWrapper.endIndex.getter(v240);
            swift_bridgeObjectRelease(v210);
          }
          else
          {
            v212 = *(_QWORD *)((v210 & 0xFFFFFFFFFFFFF8) + 0x10);
            v213 = v26;
          }
          v320 = (char *)(v211 + 32);
          v331[0] = v212;
          v214 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v215 = v309;
          *(_QWORD *)(v211 + 56) = &type metadata for String;
          *(_QWORD *)(v211 + 64) = v215;
          *(_QWORD *)(v211 + 32) = v214;
          *(_QWORD *)(v211 + 40) = v216;
          v217 = *(_QWORD *)&v207[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
          v218 = *(void (**)(__n128))(*(_QWORD *)v217 + 256);
          v219 = v207;
          v220 = swift_retain(v217);
          v221 = v314;
          v218(v220);
          v322 = (uint64_t)v219;

          swift_release(v217);
          v223 = UUID.uuidString.getter(v222);
          v225 = v224;
          v226.n128_f64[0] = (*(double (**)(char *, uint64_t))(v315 + 8))(v221, v334);
          *(_QWORD *)(v211 + 96) = &type metadata for String;
          *(_QWORD *)(v211 + 104) = v215;
          *(_QWORD *)(v211 + 72) = v223;
          *(_QWORD *)(v211 + 80) = v225;
          v227 = static os_log_type_t.default.getter(v226);
          sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v227, "Adding %{public}@ freehand drawing items to container: %{public}@", 65, 2, v211);
          swift_setDeallocating(v211);
          swift_arrayDestroy(v320, *(_QWORD *)(v211 + 16), v312);

          if (v321)
          {
            if (v210 < 0)
              v230 = v210;
            else
              v230 = v210 & 0xFFFFFFFFFFFFFF8;
            v231 = type metadata accessor for CRLBoardItem(0);
            swift_bridgeObjectRetain(v210);
            v229 = _bridgeCocoaArray<A>(_:)(v230, v231);
            swift_bridgeObjectRelease(v210);
          }
          else
          {
            v228 = swift_bridgeObjectRetain(v210);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v228);
            type metadata accessor for CRLBoardItem(0);
            v229 = v210;
          }
          swift_bridgeObjectRelease(v210);
          v233 = NSNotFound.getter(v232);
          v234 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
          v235 = swift_initStackObject(v234, &v327);
          *(_OWORD *)(v235 + 16) = v310;
          *(_QWORD *)(v235 + 32) = v233;
          isUniquelyReferenced_nonNull_native = v235 + 32;
          *(_QWORD *)(v235 + 40) = v229;
          v236 = sub_1008E00A0((_QWORD *)v235);
          swift_setDeallocating(v235);
          swift_bridgeObjectRetain(v229);
          v237 = sub_1004B804C((uint64_t *)&unk_101406AF0);
          swift_arrayDestroy(v235 + 32, 1, v237);
          v238 = (void *)v322;
          v239 = v323;
          sub_100745390(v236, v317);
          a1 = v239;
          if (v239)
          {
            v242 = v287;
            swift_release(v287);
            swift_bridgeObjectRelease(v242);

            swift_release(v317);
            swift_bridgeObjectRelease(v229);
            v243 = v236;
            goto LABEL_100;
          }

          swift_bridgeObjectRelease(v229);
          swift_bridgeObjectRelease(v236);
          v48 = v287;
          v190 = v318;
          v191 = v319;
          if (v318)
            goto LABEL_68;
        }
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
    }
    else
    {
      v49 = *(_QWORD *)((v281 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v281);
      if (!v49)
        goto LABEL_64;
    }
    v321 = v26;
    v268 = type metadata accessor for CRContext(0);
    v283 = 0;
    v50 = 0;
    v51 = v281 & 0xC000000000000001;
    v264 = v281 & 0xFFFFFFFFFFFFFF8;
    v263 = v281 + 32;
    v303 = 0x1000000000000;
    v294 = isUniquelyReferenced_nonNull_native + 32;
    isUniquelyReferenced_nonNull_native = (uint64_t)&OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue;
    v302 = 0x2000400000000;
    v26 = v278;
    v52 = v279;
    v265 = v281 & 0xC000000000000001;
    v266 = v49;
LABEL_7:
    if (!v51)
      break;
    v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v281);
    v54 = __OFADD__(v50, 1);
    v55 = v50 + 1;
    if (!v54)
      goto LABEL_13;
LABEL_109:
    __break(1u);
  }
  if (v50 >= *(_QWORD *)(v264 + 16))
  {
LABEL_116:
    __break(1u);
LABEL_117:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a1);
    __break(1u);
  }
  else
  {
    swift_retain(*(_QWORD *)(v263 + 8 * v50));
    v54 = __OFADD__(v50, 1);
    v55 = v50 + 1;
    if (v54)
      goto LABEL_109;
LABEL_13:
    v267 = v55;
    v287 = v48;
    v56 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions);
    v57 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 8);
    v58 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 16);
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v53
                                                          + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions
                                                          + 24);
    v60 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 32);
    v61 = *(_BYTE *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) == 1;
    v62 = v303;
    if (*(_BYTE *)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) == 1)
      v56 = v303;
    v319 = v56;
    if (v61)
      v63 = v303;
    else
      v63 = v57;
    v318 = v63;
    v64 = (void (*)(char *, uint64_t, uint64_t))v302;
    if (v61)
      v65 = v302;
    else
      v65 = v58;
    v317 = v65;
    v66 = v26;
    if (!v61)
      v64 = v59;
    v313 = v64;
    if (!v61)
      v62 = v60;
    v301 = v62;
    v280 = v53;
    v67 = *(void **)(v53 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue);
    v68 = v323;
    v69 = v276;
    v70 = v306;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v323 + 56))(v276, 1, 1, v306);
    memset(v331, 0, 40);
    v71 = v67;
    v72 = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)(0, v331);
    sub_1004CB800((uint64_t)v331, (uint64_t *)&unk_1014064C0);
    v73 = sub_100B01190();
    CRCKMergeable.init(crdt:context:)(v69, v72, v70, v73);
    v74 = sub_1004CBA30((unint64_t *)&unk_1014064D0, &qword_101405628, (uint64_t)&protocol conformance descriptor for CRCKMergeable<A>);
    v277 = v71;
    v75 = v304;
    CKMergeable.merge(_:)(v71, v52, v74);
    if (v75)
    {
      swift_release(v280);

      (*(void (**)(char *, uint64_t))(v275 + 8))(v66, v52);
      swift_bridgeObjectRelease(v287);
      v243 = v281;
LABEL_100:
      swift_bridgeObjectRelease(v243);
    }
    else
    {
      v304 = 0;
      v76 = (uint64_t)v274;
      CRCKMergeable.crdt.getter(v52);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v76, 1, v70) != 1)
      {
        v77 = v70;
        v78 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
        v79 = v270;
        v78(v270, v76, v70);
        v80 = *(_QWORD *)(v280 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
        v81 = v271;
        v78(v271, (uint64_t)v79, v70);
        v82 = sub_1004B804C((uint64_t *)&unk_101406AD0);
        v83 = (_QWORD *)swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
        *((_BYTE *)v83 + *(_QWORD *)(*v83 + 136)) = 0;
        v83[2] = v80;
        v84 = (char *)v83 + *(_QWORD *)(*v83 + 120);
        v78(v84, (uint64_t)v81, v70);
        *((_BYTE *)v83 + *(_QWORD *)(*v83 + 136)) = 1;
        v85 = (_QWORD *)((char *)v83 + *(_QWORD *)(*v83 + 128));
        v86 = v318;
        *v85 = v319;
        v85[1] = v86;
        v87 = (uint64_t)v313;
        v85[2] = v317;
        v85[3] = v87;
        v85[4] = v301;
        swift_beginAccess(v84, &v329, 0, 0);
        v88 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
        v89 = v272;
        v301 = v88;
        Capsule<>.root.getter(v70, v88);
        v90 = v285;
        CRDictionary.makeIterator()(v285);
        v286 = v83;
        v91 = swift_retain(v83);
        (*(void (**)(char *, uint64_t, __n128))(v273 + 8))(v89, v90, v91);
        v92 = v315;
        a1 = v322;
        v300 = v84;
        while (1)
        {
          v103 = v305;
          CRDictionary.Iterator.next()(v307);
          v104 = (uint64_t)v103;
          v105 = (uint64_t)v321;
          sub_1004C4938(v104, (uint64_t)v321, (uint64_t *)&unk_101405EB0);
          v106 = sub_1004B804C(&qword_101405EF8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 48))(v105, 1, v106) == 1)
          {
            v167 = swift_release(v280);
            swift_release_n(v286, 2, v167);

            (*(void (**)(char *, uint64_t))(v269 + 8))(v308, v307);
            v26 = v278;
            v52 = v279;
            (*(void (**)(char *, uint64_t))(v275 + 8))(v278, v279);
            v50 = v267;
            v48 = v287;
            v51 = v265;
            isUniquelyReferenced_nonNull_native = (uint64_t)&OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue;
            if (v267 != v266)
              goto LABEL_7;
            goto LABEL_65;
          }
          v319 = v106;
          v107 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
          v108 = v320;
          v109 = v334;
          v107(v320, v105, v334);
          v110 = v84;
          v111 = v295;
          (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v295, v110, v77);
          v112 = v314;
          v113 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 16))(v314, v108, v109);
          __chkstk_darwin(v113);
          v115 = (uint64_t *)((char *)&v262 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
          *v115 = v109;
          v115[1] = a1;
          v115[2] = sub_1004B7878(&qword_101405F08, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&unk_100F304AC);
          v115[3] = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
          v313 = v107;
          v107((char *)v115 + 32, (uint64_t)v112, v109);
          KeyPath = swift_getKeyPath(&unk_100F28CE8);
          v117 = (uint64_t)v298;
          Capsule<>.subscript.getter(KeyPath, v77, v301);
          v118 = swift_release(KeyPath);
          (*(void (**)(char *, uint64_t, __n128))(v323 + 8))(v111, v77, v118);
          v119 = v299;
          sub_1004CB7BC(v117, v299, (uint64_t *)&unk_101405EA0);
          v120 = sub_1004B804C(&qword_101405F00);
          v121 = *(_QWORD *)(v120 - 8);
          v122 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120);
          v318 = v121;
          if (v122 == 1)
          {
            sub_1004CB800(v117, (uint64_t *)&unk_101405EA0);
            sub_1004CB800(v119, (uint64_t *)&unk_101405EA0);
            v123 = 1;
            v124 = (uint64_t)v297;
            v26 = v300;
          }
          else
          {
            v125 = sub_1004CBA30(&qword_101405F20, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
            v124 = (uint64_t)v297;
            v126 = v300;
            Ref.subscript.getter(v300, v120, v285, v125);
            sub_1004CB800(v117, (uint64_t *)&unk_101405EA0);
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v119, v120);
            v123 = 0;
            v26 = v126;
          }
          v317 = v120;
          v127 = v296;
          v128 = v322;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v296 + 56))(v124, v123, 1, v322);
          v319 = (uint64_t)&v321[*(int *)(v319 + 48)];
          v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v124, 1, v128);
          v92 = v315;
          if (v129 == 1)
          {
            swift_bridgeObjectRelease(v287);
            swift_bridgeObjectRelease(v281);
            sub_1004CB800(v124, &qword_101403058);
            v168 = (void *)static OS_os_log.crlSendACopy;
            v169 = swift_initStackObject(v311, &v326);
            *(_OWORD *)(v169 + 16) = v310;
            v170 = v92;
            v171 = v286;
            v172 = v286[2];
            v173 = v168;
            swift_release(v171);
            v331[0] = v172;
            v174 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v175 = v309;
            *(_QWORD *)(v169 + 56) = &type metadata for String;
            *(_QWORD *)(v169 + 64) = v175;
            *(_QWORD *)(v169 + 32) = v174;
            *(_QWORD *)(v169 + 40) = v176;
            v177 = static os_log_type_t.error.getter(v174);
            sub_100A06EBC((uint64_t)v173, &_mh_execute_header, v177, "Unexpected, bucket %{public}@ is invalid", 40, 2, v169);
            swift_setDeallocating(v169);
            swift_arrayDestroy(v169 + 32, 1, v312);

            v178 = sub_1008A0610();
            swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v178, 0, 0);
            *v179 = 4;
            swift_willThrow(v180);
            swift_release(v280);
            swift_release(v171);

            (*(void (**)(char *, uint64_t))(v170 + 8))(v320, v334);
            (*(void (**)(char *, uint64_t))(v269 + 8))(v308, v307);
            (*(void (**)(char *, uint64_t))(v275 + 8))(v278, v279);
            (*(void (**)(uint64_t, uint64_t))(v318 + 8))(v319, v317);
            return sub_1004C1024((uint64_t)v283, 0);
          }
          v130 = v316;
          sub_1004B84E0(v124, v316, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
          v131 = v289;
          sub_1004CB7BC(v130 + *(int *)(v128 + 20), v289, &qword_1013F5530);
          v132 = v291;
          sub_1004B8460(v130 + *(int *)(v128 + 24), v291, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          v133 = type metadata accessor for CRLFreehandDrawingShapeItemData(0);
          v134 = swift_allocObject(v133, *(unsigned int *)(v133 + 48), *(unsigned __int16 *)(v133 + 52));
          sub_1004B84E0(v132, v134 + *(_QWORD *)(*(_QWORD *)v134 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          *(_QWORD *)(v134 + qword_10140A310) = 0;
          sub_1004C4938(v131, v134 + *(_QWORD *)(*(_QWORD *)v134 + 632), &qword_1013F5530);
          v135 = sub_1005E1000(v303, v302, v303, 2);
          v136 = (uint64_t)v135 + *(_QWORD *)(*v135 + 632);
          swift_beginAccess(v136, &v325, 0, 0);
          sub_1004CB7BC(v136, v131, &qword_1013F5530);
          swift_retain(v135);
          v137 = sub_1004B804C((uint64_t *)&unk_101406B00);
          v138 = (uint64_t)v293;
          CRRegister.wrappedValue.getter(v137);
          v139 = v292;
          sub_1004CB7BC(v138, v292, (uint64_t *)&unk_1013E1A50);
          sub_1004B84A4(v138, type metadata accessor for CRLShapeItemParentAffinity);
          sub_1004CB800(v131, &qword_1013F5530);
          v140 = swift_release(v135);
          v141 = v334;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v92 + 48))(v139, 1, v334, v140) == 1)
            break;
          v313(v288, v139, v141);
          isa = UUID._bridgeToObjectiveC()().super.isa;
          v143 = objc_msgSend(v284, "getBoardItemForUUID:", isa);

          v84 = v26;
          if (!v143)
            goto LABEL_44;
          a1 = type metadata accessor for CRLContainerItem(0);
          v144 = swift_dynamicCastClass(v143, a1);
          if (!v144)
          {

            v92 = v315;
LABEL_44:
            (*(void (**)(char *, uint64_t))(v92 + 8))(v288, v141);
LABEL_29:
            v93 = (void *)static OS_os_log.crlSendACopy;
            v94 = swift_initStackObject(v311, &v324);
            *(_OWORD *)(v94 + 16) = v310;
            v331[0] = v286[2];
            v95 = v93;
            v96 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v97 = v309;
            *(_QWORD *)(v94 + 56) = &type metadata for String;
            *(_QWORD *)(v94 + 64) = v97;
            *(_QWORD *)(v94 + 32) = v96;
            *(_QWORD *)(v94 + 40) = v98;
            v99 = static os_log_type_t.error.getter(v96);
            sub_100A06EBC((uint64_t)v95, &_mh_execute_header, v99, "Unexpectedly missing parent UUID, strokes will not be added as expected for bucket %{public}@", 93, 2, v94);
            swift_setDeallocating(v94);
            swift_arrayDestroy(v94 + 32, 1, v312);
            swift_release(v135);

            sub_1004B84A4(v316, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
            v100 = *(void (**)(char *, uint64_t))(v92 + 8);
            goto LABEL_30;
          }
          v145 = v144;
          swift_retain(v135);
          v313 = (void (*)(char *, uint64_t, uint64_t))v143;
          sub_1004C1024((uint64_t)v283, 0);
          v146 = v287;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v287);
          v331[0] = v146;
          v148 = sub_10084393C(v145);
          v149 = *(_QWORD *)(v146 + 16);
          v150 = (v147 & 1) == 0;
          v151 = v149 + v150;
          if (__OFADD__(v149, v150))
          {
            __break(1u);
            goto LABEL_107;
          }
          v152 = v147;
          if (*(_QWORD *)(v146 + 24) >= v151)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_100830818();
          }
          else
          {
            sub_10081D550(v151, isUniquelyReferenced_nonNull_native);
            v153 = sub_10084393C(v145);
            if ((v152 & 1) != (v154 & 1))
              goto LABEL_117;
            v148 = v153;
          }
          a1 = v331[0];
          swift_bridgeObjectRelease(0x8000000000000000);
          if ((v152 & 1) != 0)
          {
            swift_bridgeObjectRetain(a1);
          }
          else
          {
            *(_QWORD *)(a1 + 8 * (v148 >> 6) + 64) |= 1 << v148;
            v155 = 8 * v148;
            *(_QWORD *)(*(_QWORD *)(a1 + 48) + v155) = v145;
            *(_QWORD *)(*(_QWORD *)(a1 + 56) + v155) = _swiftEmptyArrayStorage;
            v156 = *(_QWORD *)(a1 + 16);
            v157 = v156 + 1;
            v158 = __OFADD__(v156, 1);
            swift_bridgeObjectRetain(a1);
            if (v158)
              goto LABEL_108;
            *(_QWORD *)(a1 + 16) = v157;
            v159 = v313;
          }
          v160 = *(_QWORD *)(a1 + 56);
          v287 = a1;
          swift_bridgeObjectRelease(a1);
          v161 = (_QWORD *)(v160 + 8 * v148);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v162);
          v164 = *(_QWORD *)((*v161 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v163 = *(_QWORD *)((*v161 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v141 = v334;
          v92 = v315;
          v84 = v26;
          if (v164 >= v163 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v163 > 1, v164 + 1, 1);
          v165 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v164, v135);
          specialized Array._endMutation()(v165);
          swift_release(v135);
          v166 = v313;

          v100 = *(void (**)(char *, uint64_t))(v92 + 8);
          v100(v288, v141);
          sub_1004B84A4(v316, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
          v283 = sub_100B62C14;
LABEL_30:
          v101 = v318;
          v102 = v319;
          v100(v320, v141);
          (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v317);
          a1 = v322;
          v77 = v306;
        }
        sub_1004CB800(v139, (uint64_t *)&unk_1013E1A50);
        v84 = v26;
        goto LABEL_29;
      }
      sub_1004CB800(v76, (uint64_t *)&unk_1014064B0);
      v249 = (void *)static OS_os_log.crlSendACopy;
      v250 = swift_initStackObject(v311, &v330);
      *(_OWORD *)(v250 + 16) = v310;
      v251 = v280;
      v331[0] = *(_QWORD *)(v280 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
      v252 = v249;
      v253 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v254 = v309;
      *(_QWORD *)(v250 + 56) = &type metadata for String;
      *(_QWORD *)(v250 + 64) = v254;
      *(_QWORD *)(v250 + 32) = v253;
      *(_QWORD *)(v250 + 40) = v255;
      v256 = static os_log_type_t.error.getter(v253);
      sub_100A06EBC((uint64_t)v252, &_mh_execute_header, v256, "Failed to create bucket for %{public}@", 38, 2, v250);
      swift_setDeallocating(v250);
      swift_arrayDestroy(v250 + 32, 1, v312);
      swift_bridgeObjectRelease(v287);
      swift_bridgeObjectRelease(v281);

      v257 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v257, 0, 0);
      *v258 = 4;
      swift_willThrow(v259);
      swift_release(v251);

      (*(void (**)(char *, uint64_t))(v275 + 8))(v278, v279);
    }
    return sub_1004C1024((uint64_t)v283, 0);
  }
  return result;
}

void sub_100B62C14(_QWORD *a1@<X8>)
{
  *a1 = _swiftEmptyArrayStorage;
}

uint64_t sub_100B62C24@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 v2;

  v2 = *a1;
  *a2 = *a1;
  return swift_unknownObjectRetain(v2);
}

uint64_t sub_100B62C34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  v3 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 8))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

double *sub_100B62C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  double *v7;
  id v8;
  __n128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = _swiftEmptyArrayStorage;
    v6 = 4;
    v20 = v4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
         : *(id *)(a1 + 8 * v6);
      v10 = v8;
      v11 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      sub_1007CAEEC(v9);
      if (v2)
      {
        swift_bridgeObjectRelease(v5);
        swift_bridgeObjectRelease(a1);

        return v5;
      }
      v14 = v12;
      v15 = v13;

      if (v14)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = (double *)sub_100D11118(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v17 = *((_QWORD *)v5 + 2);
        v16 = *((_QWORD *)v5 + 3);
        if (v17 >= v16 >> 1)
          v5 = (double *)sub_100D11118((_QWORD *)(v16 > 1), v17 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v17 + 1;
        v7 = &v5[2 * v17];
        *((_QWORD *)v7 + 4) = v14;
        *((_QWORD *)v7 + 5) = v15;
        v4 = v20;
      }
      ++v6;
      if (v11 == v4)
      {
        swift_bridgeObjectRelease(a1);
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

double *sub_100B62E34(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  objc_super v18;
  unint64_t v19;

  v19 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v8 = i - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_13;
LABEL_9:
      v9 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem(0));
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
      *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v7;
      v10 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
      v18.receiver = v9;
      v18.super_class = v10;
      v11 = a2;
      v12 = objc_msgSendSuper2(&v18, "init");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v13 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v14 >= v13 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
      v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized Array._endMutation()(v15);
      if (v8 == v4)
      {
        swift_bridgeObjectRelease(a1);
        return (double *)v19;
      }
    }
    v7 = *(_QWORD *)(a1 + 8 * i);
    swift_retain(v7);
    v8 = i - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void sub_100B63018(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, void *a5, char *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  __n128 v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _BYTE *v47;
  __n128 v48;
  unint64_t v49;
  _BYTE *v50;
  __n128 v51;
  unint64_t v52;
  BOOL v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  char v57;
  void *v58;
  id v59;
  unsigned int v60;
  id v61;
  unsigned int v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void);
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _BYTE *v79;
  __n128 v80;
  __n128 v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  char v84;
  id v85;
  unsigned int v86;
  uint64_t v87;
  id v88;
  char v89;
  char v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(void);
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(__n128);
  char *v114;
  __n128 v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  void *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t inited;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  Class isa;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  char *v148;
  __n128 v149;
  void (*v150)(char *, uint64_t);
  unint64_t v151;
  _BYTE *v152;
  __n128 v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  void *v164;
  char *v165;
  _BYTE *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD v171[3];
  char v172[48];
  char v173[48];
  char v174[24];
  char v175[32];
  uint64_t v176;

  v162 = a7;
  v163 = a6;
  v164 = a5;
  v166 = a4;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v10);
  v12 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v165 = (char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v167 = (char *)&v155 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v155 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v155 - v24;
  v26 = *(_QWORD *)(a1 + 32);
  if (!v26)
    goto LABEL_7;
  v27 = type metadata accessor for CRLBoardSyncRemoteRecord(0);
  if (swift_dynamicCastClass(v26, v27))
    return;
  v28 = type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  v29 = swift_dynamicCastClass(v26, v28);
  if (!v29)
  {
LABEL_7:
    v40 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v40, 0, 0);
    *v41 = 8;
    swift_willThrow(v42);
    return;
  }
  v156 = v29;
  v30 = (void (*)(char *, uint64_t))(v29 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id);
  v31 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v32 = v25;
  v159 = v30;
  v161 = v25;
  v33 = v168;
  v155 = v31;
  ((void (*)(char *))v31)(v32);
  v34 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 632);
  swift_beginAccess(v34, v175, 0, 0);
  sub_1004CB7BC(v34, (uint64_t)v15, (uint64_t *)&unk_1013F02C0);
  v160 = v26;
  swift_unknownObjectRetain(v26);
  v158 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v158);
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013F02C0);
  v157 = sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  LOBYTE(v34) = dispatch thunk of static Equatable.== infix(_:_:)(v161, v22);
  v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  v36 = v22;
  v37 = v33;
  v38 = v161;
  v35(v36, v37);
  v35(v38, v37);
  if ((v34 & 1) != 0
    || (v39 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 632),
        swift_beginAccess(v39, v174, 0, 0),
        sub_1004CB7BC(v39, (uint64_t)v15, (uint64_t *)&unk_1013F02C0),
        CRRegister.wrappedValue.getter(v158),
        sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013F02C0),
        LOBYTE(v39) = dispatch thunk of static Equatable.== infix(_:_:)(v159, v38),
        v35(v38, v37),
        (v39 & 1) != 0))
  {
    swift_unknownObjectRelease(v160);
    return;
  }
  v43 = sub_100AFB244(v156);
  v44 = v160;
  if (!v43)
  {
    v49 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v49, 0, 0);
    *v50 = 5;
    swift_willThrow(v51);
    swift_unknownObjectRelease(v44);
    return;
  }
  v45 = v43;
  (*(void (**)(void))(*v43 + 264))();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v37) == 1)
  {
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    v46 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v46, 0, 0);
    *v47 = 11;
    swift_willThrow(v48);
    swift_unknownObjectRelease(v44);
    swift_release(v45);
    return;
  }
  v159 = v35;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v167, v12, v37);
  v52 = v45[3];
  v53 = sub_1001E9730() >= v52;
  v54 = v45;
  if (v53)
  {
    v82 = *(uint64_t (**)(void))(*v45 + 408);
    v83 = v82();
    if ((v84 & 1) == 0
      || v83 != 3
      || (v85 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults"),
          v86 = objc_msgSend(v85, "BOOLForKey:", CFSTR("CRLImageItemsAreUnsupportedWhenDownloadingSendACopyUserDefault")), v85, !v86))
    {
      v87 = v37;
      v88 = sub_10089D640((uint64_t)v54, v164);
      v82();
      v90 = v89;
      v91 = v165;
      v92 = v167;
      v155(v165, v167, v37);
      if ((v90 & 1) == 0)
      {
        swift_unknownObjectRelease(v160);
        swift_release(v54);

        v93 = v159;
        v159(v91, v37);
        v93(v92, v37);
        *v166 = 1;
        return;
      }
      v164 = v88;
      v166 = v54;
      v109 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
      v110 = v163;
      v111 = *(char **)&v163[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
      v112 = *(_QWORD *)&v111[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v113 = *(void (**)(__n128))(*(_QWORD *)v112 + 256);
      v114 = v111;
      v115 = swift_retain(v112);
      v113(v115);

      swift_release(v112);
      LOBYTE(v112) = static UUID.== infix(_:_:)(v91);
      v116 = v87;
      v117 = v159;
      v159(v38, v116);
      if ((v112 & 1) != 0)
      {
        v118 = *(void **)&v110[v109];
        v119 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v120 = swift_allocObject(v119, 40, 7);
        *(_OWORD *)(v120 + 16) = xmmword_100EEF400;
        v121 = v164;
        *(_QWORD *)(v120 + 32) = v164;
        v171[0] = v120;
        specialized Array._endMutation()(v120);
        v122 = v171[0];
        v123 = v118;
        v124 = v121;
        v125 = NSNotFound.getter(v124);
        v126 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
        inited = swift_initStackObject(v126, v172);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 32) = v125;
        *(_QWORD *)(inited + 40) = v122;
        v128 = sub_1008E00A0((_QWORD *)inited);
        swift_setDeallocating(inited);
        swift_bridgeObjectRetain(v122);
        v129 = sub_1004B804C((uint64_t *)&unk_101406AF0);
        swift_arrayDestroy(inited + 32, 1, v129);
        v130 = v128;
        v131 = v162;
        goto LABEL_34;
      }
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v124 = objc_msgSend(v110, "getBoardItemForUUID:", isa);

      v133 = v160;
      v134 = v166;
      if (v124)
      {
        v135 = type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass(v124, v135))
        {
          v136 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v137 = swift_allocObject(v136, 40, 7);
          *(_OWORD *)(v137 + 16) = xmmword_100EEF400;
          v138 = v164;
          *(_QWORD *)(v137 + 32) = v164;
          v171[0] = v137;
          specialized Array._endMutation()(v137);
          v122 = v171[0];
          v123 = v138;
          v139 = NSNotFound.getter(v123);
          v140 = sub_1004B804C((uint64_t *)&unk_1013F02B0);
          v141 = swift_initStackObject(v140, v173);
          *(_OWORD *)(v141 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v141 + 32) = v139;
          *(_QWORD *)(v141 + 40) = v122;
          v128 = sub_1008E00A0((_QWORD *)v141);
          swift_setDeallocating(v141);
          swift_bridgeObjectRetain(v122);
          v142 = sub_1004B804C((uint64_t *)&unk_101406AF0);
          swift_arrayDestroy(v141 + 32, 1, v142);
          v130 = v128;
          v131 = v162;
LABEL_34:
          v143 = v176;
          sub_100745390(v130, v131);
          if (v143)
          {
            swift_unknownObjectRelease(v160);
            swift_release(v166);

            swift_bridgeObjectRelease(v122);
            v144 = swift_bridgeObjectRelease(v128);
            v145 = v168;
            v146 = v159;
            ((void (*)(char *, uint64_t, __n128))v159)(v165, v168, v144);
            v146(v167, v145);
          }
          else
          {
            v148 = v167;
            v147 = v168;
            swift_unknownObjectRelease(v160);
            swift_release(v166);

            swift_bridgeObjectRelease(v122);
            v149 = swift_bridgeObjectRelease(v128);
            v150 = v159;
            ((void (*)(char *, uint64_t, __n128))v159)(v165, v147, v149);
            v150(v148, v147);
          }
          return;
        }

        v91 = v165;
      }
      v151 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v151, 0, 0);
      *v152 = 10;
      swift_willThrow(v153);
      swift_unknownObjectRelease(v133);
      swift_release(v134);

      v154 = v168;
      v117(v91, v168);
      v117(v167, v154);
      return;
    }
  }
  *v166 = 1;
  v55 = v54;
  if ((v54[16] & 1) != 0)
    goto LABEL_18;
  v56 = (*(uint64_t (**)(void))(*(_QWORD *)v54 + 408))();
  if ((v57 & 1) == 0)
    goto LABEL_26;
  if (v56 == 3
    && (v58 = (void *)objc_opt_self(NSUserDefaults),
        v59 = objc_msgSend(v58, "standardUserDefaults"),
        v60 = objc_msgSend(v59, "BOOLForKey:", CFSTR("CRLImageItemsAreUnsupportedWhenDownloadingSendACopyUserDefault")), v59, v60)&& (v61 = objc_msgSend(v58, "standardUserDefaults"), v62 = objc_msgSend(v61, "BOOLForKey:", CFSTR("CRLUnsupportedBoardItemsPropagatesToBoardUserDefault")), v61, v62))
  {
LABEL_18:
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v171, 0, 0);
    v63 = (void *)static OS_os_log.crlSendACopy;
    v64 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v65 = swift_initStackObject(v64, &v169);
    *(_OWORD *)(v65 + 16) = xmmword_100EF5E40;
    v66 = *(uint64_t (**)(void))(*(_QWORD *)v55 + 256);
    v67 = v63;
    v68 = v66();
    v69 = UUID.uuidString.getter(v68);
    v71 = v70;
    v72 = v38;
    v73 = (void (*)(char *, uint64_t, __n128))v159;
    v159(v72, v37);
    *(_QWORD *)(v65 + 56) = &type metadata for String;
    *(_QWORD *)(v65 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v65 + 32) = v69;
    *(_QWORD *)(v65 + 40) = v71;
    v75 = static os_log_type_t.default.getter(v74);
    sub_100A06EBC((uint64_t)v67, &_mh_execute_header, v75, "Unsupported board item is causing entire board to be unsupported: %{public}@", 76, 2, v65);
    swift_setDeallocating(v65);
    v76 = *(_QWORD *)(v65 + 16);
    v77 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v65 + 32, v76, v77);

    v78 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v78, 0, 0);
    *v79 = 14;
    swift_willThrow(v80);
    swift_unknownObjectRelease(v160);
    v81 = swift_release(v55);
    v73(v167, v37, v81);
  }
  else
  {
LABEL_26:
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v171, 0, 0);
    v94 = (void *)static OS_os_log.crlSendACopy;
    v95 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v96 = swift_initStackObject(v95, &v170);
    *(_OWORD *)(v96 + 16) = xmmword_100EF5E40;
    v97 = *(uint64_t (**)(void))(*(_QWORD *)v55 + 256);
    v98 = v94;
    v99 = v97();
    v100 = UUID.uuidString.getter(v99);
    v102 = v101;
    v103 = v38;
    v104 = v159;
    v159(v103, v37);
    *(_QWORD *)(v96 + 56) = &type metadata for String;
    *(_QWORD *)(v96 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v96 + 32) = v100;
    *(_QWORD *)(v96 + 40) = v102;
    v106 = static os_log_type_t.default.getter(v105);
    sub_100A06EBC((uint64_t)v98, &_mh_execute_header, v106, "Skipping item as unsupported: %{public}@", 40, 2, v96);
    swift_setDeallocating(v96);
    v107 = *(_QWORD *)(v96 + 16);
    v108 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v96 + 32, v107, v108);
    swift_unknownObjectRelease(v160);
    swift_release(v55);

    v104(v167, v37);
  }
}

char *sub_100B63C40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  void (*v42)(void (*)(void), uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char v79;
  __n128 v80;
  unint64_t v81;
  _BYTE *v82;
  __n128 v83;
  char *v84;
  id v85;
  __n128 v86;
  uint64_t v87;
  unint64_t v88;
  _BYTE *v89;
  __n128 v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  _BYTE *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _BYTE *v100;
  __n128 v101;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  void (*v115)(void);
  unint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t, uint64_t);
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132[24];
  char v133[8];
  void (*v134)(void);
  uint64_t v135;

  v110 = a2;
  v3 = type metadata accessor for UUID(0);
  v109 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLContainerItemCRDTData(0);
  v127 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v108 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v103 - v9;
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  v129 = *(_QWORD *)(v11 - 8);
  v130 = v11;
  __chkstk_darwin(v11);
  v107 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v103 - v14;
  v16 = sub_1004B804C(&qword_101406B18);
  __chkstk_darwin(v16);
  v111 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v115 = (void (*)(void))((char *)&v103 - v19);
  __chkstk_darwin(v20);
  v22 = (void (*)(void))((char *)&v103 - v21);
  v23 = sub_1004B804C((uint64_t *)&unk_101406B20);
  __chkstk_darwin(v23);
  v114 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v113 = (char *)&v103 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v103 - v28;
  swift_beginAccess(a1 + 48, v133, 0, 0);
  v31 = &v135;
  v116 = *(_QWORD *)(a1 + 48);
  v30 = v116;
  if (!(v116 >> 62))
  {
    v32 = *(char **)((v116 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v116);
    if (v32)
      goto LABEL_3;
LABEL_51:
    swift_bridgeObjectRelease(v30);
    v5 = 0;
LABEL_52:
    v99 = sub_1008A0610();
    swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v99, 0, 0);
    *v100 = 5;
    swift_willThrow(v101);
    swift_release(v32);
    v84 = v5;
LABEL_53:
    swift_release(v84);
    return v5;
  }
LABEL_47:
  v96 = *(v31 - 32);
  if (v30 < 0)
    v97 = v96;
  else
    v97 = v30 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v116);
  v98 = _CocoaArrayWrapper.endIndex.getter(v97);
  v30 = v116;
  v32 = (char *)v98;
  if (!v98)
    goto LABEL_51;
LABEL_3:
  v104 = v32;
  v131 = v6;
  v105 = v5;
  v106 = v3;
  v32 = 0;
  v5 = 0;
  v112 = v30 & 0xC000000000000001;
  v33 = 4;
  v134 = v22;
  v125 = v15;
  v126 = v29;
  v124 = v10;
  do
  {
    v3 = v33 - 4;
    v123 = v33;
    if (v112)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33 - 4, v30);
      v15 = (char *)(v3 + 1);
      if (__OFADD__(v3, 1))
        goto LABEL_46;
    }
    else
    {
      v6 = *(_QWORD *)(v30 + 8 * v33);
      swift_retain(v6);
      v15 = (char *)(v3 + 1);
      if (__OFADD__(v3, 1))
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    if (v5 && v32)
    {
      swift_bridgeObjectRelease(v116);
      if (qword_1013DD778 != -1)
        swift_once(&qword_1013DD778, sub_100A02BF8);
      swift_beginAccess(&static OS_os_log.crlSendACopy, v132, 0, 0);
      v85 = (id)static OS_os_log.crlSendACopy;
      v87 = static os_log_type_t.default.getter(v86);
      sub_100A06EBC((uint64_t)v85, &_mh_execute_header, v87, "Unexpected child found, the rootContainers are populated. Exiting loop early.", 77, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release(v6);

      return v5;
    }
    v34 = v5;
    v5 = v32;
    v35 = *(_QWORD *)(v6 + 32);
    if (!v35
      || (v36 = type metadata accessor for CRLBoardItemSyncRemoteRecord(0),
          (v37 = swift_dynamicCastClass(v35, v36)) == 0))
    {
      swift_bridgeObjectRelease(v116);
      v81 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v81, 0, 0);
      *v82 = 8;
      swift_willThrow(v83);
      swift_release(v6);
      swift_release(v5);
      v84 = v34;
      goto LABEL_53;
    }
    v38 = v37;
    v118 = v15;
    v121 = v5;
    v122 = v6;
    v120 = v34;
    swift_unknownObjectRetain(v35);
    v39 = sub_100AFB244(v38);
    if (!v39)
    {
      swift_bridgeObjectRelease(v116);
      v88 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v88, 0, 0);
      *v89 = 5;
      swift_willThrow(v90);
      swift_release(v122);
      swift_unknownObjectRelease(v35);
      swift_release(v121);
      v84 = v120;
      goto LABEL_53;
    }
    v40 = v39;
    v119 = v35;
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v41(v29, 1, 1, v130);
    v42 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v127 + 56);
    v43 = (uint64_t)v134;
    v44 = v131;
    v42(v134, 1, 1, v131);
    v45 = (uint64_t *)(v38 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData);
    v46 = *(_QWORD *)(v38 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8);
    if (v46 >> 60 == 15)
    {
      v47 = v128;
    }
    else
    {
      v117 = v41;
      v48 = *v45;
      sub_1004BE310(*v45, v46);
      v49 = sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
      v50 = v128;
      CRDT.init(serializedData:)(v48, v46, v44, v49);
      if (v50)
      {
        swift_errorRelease(v50);
        v51 = 1;
      }
      else
      {
        v51 = 0;
      }
      v52 = (uint64_t)v134;
      sub_1004CB800((uint64_t)v134, &qword_101406B18);
      v53 = (uint64_t)v115;
      v42(v115, v51, 1, v131);
      v43 = v52;
      sub_1004C4938(v53, v52, &qword_101406B18);
      v47 = 0;
      v41 = v117;
    }
    v54 = (uint64_t *)(v38 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData);
    v55 = *(_QWORD *)(v38 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8);
    v5 = v126;
    v56 = v130;
    if (v55 >> 60 == 15)
    {
      v57 = (uint64_t)v114;
    }
    else
    {
      v58 = *v54;
      sub_1004BE310(*v54, v55);
      v59 = sub_1004CBA30((unint64_t *)&qword_1013F7470, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD44C);
      CRDT.init(serializedData:)(v58, v55, v56, v59);
      if (v47)
      {
        swift_errorRelease(v47);
        v60 = 1;
      }
      else
      {
        v60 = 0;
      }
      v57 = (uint64_t)v114;
      sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_101406B20);
      v61 = (uint64_t)v113;
      v41(v113, v60, 1, v56);
      sub_1004C4938(v61, (uint64_t)v5, (uint64_t *)&unk_101406B20);
      v47 = 0;
      v43 = (uint64_t)v134;
    }
    sub_1004CB7BC((uint64_t)v5, v57, (uint64_t *)&unk_101406B20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v57, 1, v56) == 1)
    {
      swift_bridgeObjectRelease(v116);
      v91 = (uint64_t *)&unk_101406B20;
      v92 = v57;
LABEL_42:
      sub_1004CB800(v92, v91);
      v93 = sub_1008A0610();
      swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v93, 0, 0);
      *v94 = 5;
      swift_willThrow(v95);
      swift_release(v122);
      swift_unknownObjectRelease(v119);
      swift_release(v40);
      swift_release(v120);
      swift_release(v121);
      sub_1004CB800(v43, &qword_101406B18);
      sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_101406B20);
      return v5;
    }
    v62 = v57;
    v63 = (uint64_t)v125;
    sub_1004C4938(v62, (uint64_t)v125, (uint64_t *)&unk_1013F02C0);
    v64 = v111;
    sub_1004CB7BC(v43, v111, &qword_101406B18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v64, 1, v131) == 1)
    {
      sub_1004CB800(v63, (uint64_t *)&unk_1013F02C0);
      swift_bridgeObjectRelease(v116);
      v91 = &qword_101406B18;
      v92 = v64;
      goto LABEL_42;
    }
    v128 = v47;
    v65 = v64;
    v66 = (uint64_t)v124;
    sub_1004B84E0(v65, (uint64_t)v124, type metadata accessor for CRLContainerItemCRDTData);
    v67 = v107;
    sub_1004CB7BC(v63, v107, (uint64_t *)&unk_1013F02C0);
    v10 = (char *)&unk_1013F02C0;
    v68 = v108;
    sub_1004B8460(v66, v108, type metadata accessor for CRLContainerItemCRDTData);
    v69 = v40[4];
    v117 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v40[5];
    v71 = v40[2];
    v70 = v40[3];
    v72 = type metadata accessor for CRLContainerItemData(0);
    v73 = swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
    sub_1004B84E0(v68, v73 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
    sub_1004C4938(v67, v73 + *(_QWORD *)(*(_QWORD *)v73 + 632), (uint64_t *)&unk_1013F02C0);
    v74 = (char *)sub_1005E1000(v70, v69, (uint64_t)v117, v71);
    v22 = *(void (**)(void))(*v40 + 256);
    v75 = v105;
    v22();
    LOBYTE(v73) = static UUID.== infix(_:_:)(v75);
    v76 = *(uint64_t (**)(char *, uint64_t))(v109 + 8);
    v77 = v106;
    v78 = v76(v75, v106);
    if ((v73 & 1) != 0)
    {
      swift_release(v122);
      swift_unknownObjectRelease(v119);
      swift_release(v40);
      swift_release(v120);
      sub_1004B84A4((uint64_t)v124, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004CB800((uint64_t)v125, (uint64_t *)&unk_1013F02C0);
      sub_1004CB800((uint64_t)v134, &qword_101406B18);
      v29 = v126;
      sub_1004CB800((uint64_t)v126, (uint64_t *)&unk_101406B20);
      v5 = v74;
      v32 = v121;
    }
    else
    {
      ((void (*)(uint64_t))v22)(v78);
      v79 = static UUID.== infix(_:_:)(v75);
      swift_release(v122);
      swift_unknownObjectRelease(v119);
      v80 = swift_release(v40);
      ((void (*)(char *, uint64_t, __n128))v76)(v75, v77, v80);
      sub_1004B84A4((uint64_t)v124, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004CB800((uint64_t)v125, (uint64_t *)&unk_1013F02C0);
      sub_1004CB800((uint64_t)v134, &qword_101406B18);
      v29 = v126;
      sub_1004CB800((uint64_t)v126, (uint64_t *)&unk_101406B20);
      if ((v79 & 1) != 0)
      {
        swift_release(v121);
        v32 = v74;
      }
      else
      {
        swift_release(v74);
        v32 = v121;
      }
      v5 = v120;
    }
    v33 = v123 + 1;
    v30 = v116;
  }
  while (v118 != v104);
  swift_bridgeObjectRelease(v116);
  if (!v5 || !v32)
    goto LABEL_52;
  return v5;
}

uint64_t sub_100B647A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1004B804C(&qword_1013FFA70);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[6] = swift_task_alloc(v4);
  v2[7] = swift_task_alloc(v4);
  v5 = type metadata accessor for URL(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v7);
  v2[11] = swift_task_alloc(v7);
  v2[12] = swift_task_alloc(v7);
  v2[13] = swift_task_alloc(v7);
  return swift_task_switch(sub_100B64888, 0, 0);
}

uint64_t sub_100B64888()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  BOOL v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  CFArrayRef (__cdecl **v29)(CTFontDescriptorRef, CFSetRef);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  void (*v53)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  char *v72;
  id v73;
  char *v74;
  id v75;
  void *v76;
  uint64_t v77;
  os_unfair_lock_s *v78;
  id v79;
  _QWORD *v80;
  int64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  double *v86;
  void *v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;

  v1 = *(_QWORD *)(v0 + 16);
  if ((unint64_t)v1 >> 62)
    goto LABEL_48;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  if (!v2)
  {
LABEL_52:
    v46 = _swiftEmptyArrayStorage;
    goto LABEL_53;
  }
  while (1)
  {
    v4 = 0;
    v89 = (_QWORD *)v0;
    v90 = *(_QWORD *)(v0 + 72);
    v85 = v1 & 0xC000000000000001;
    v82 = v3 + 32;
    v83 = v1 & 0xFFFFFFFFFFFFFF8;
    v86 = _swiftEmptyArrayStorage;
    v1 = (uint64_t)&CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    v84 = v2;
LABEL_5:
    if (v85)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v89[2]);
      v6 = __OFADD__(v4, 1);
      v7 = v4 + 1;
      if (!v6)
        break;
      goto LABEL_46;
    }
    if (v4 >= *(_QWORD *)(v83 + 16))
      goto LABEL_47;
    v5 = *(id *)(v82 + 8 * v4);
    v6 = __OFADD__(v4, 1);
    v7 = v4 + 1;
    if (!v6)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    if (v1 < 0)
      v47 = v1;
    else
      v47 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v47);
    v3 = *(_QWORD *)(v0 + 16);
    if (!v2)
      goto LABEL_52;
  }
  v87 = v5;
  v88 = v7;
  v8 = objc_msgSend(v5, "values", v82);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0510);
  v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String, v9, &protocol witness table for String);

  v0 = 0;
  v91 = v10 + 64;
  v11 = -1 << *(_BYTE *)(v10 + 32);
  if (-v11 < 64)
    v12 = ~(-1 << -(char)v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v10 + 64);
  v92 = (unint64_t)(63 - v11) >> 6;
LABEL_15:
  v14 = v89;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v0 << 6);
LABEL_34:
    v21 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v17);
    v22 = objc_opt_self(*(_QWORD *)(v1 + 1680));
    v23 = swift_dynamicCastObjCClass(v21, v22);
    if (v23)
    {
      v24 = (void *)v23;
      swift_unknownObjectRetain_n(v21, 2);
      v25 = objc_msgSend(v24, "fileURL");
      if (v25)
      {
        v26 = v25;
        v27 = v10;
        v28 = v14[12];
        v29 = (CFArrayRef (__cdecl **)(CTFontDescriptorRef, CFSetRef))v1;
        v30 = v14[7];
        v31 = v14[8];
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32);
        v33 = v28;
        v10 = v27;
        v32(v30, v33, v31);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v30, 0, 1, v31);
        v14 = v89;
        v34 = v30;
        v1 = (uint64_t)v29;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v34, 1, v31) != 1)
        {
          v35 = v89[13];
          v36 = v89[11];
          v37 = v89[8];
          v32(v35, v89[7], v37);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v36, v35, v37);
          v38 = (unint64_t)v86;
          if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
            v38 = sub_100D0FAC8(0, *((_QWORD *)v86 + 2) + 1, 1, (unint64_t)v86);
          v40 = *(_QWORD *)(v38 + 16);
          v39 = *(_QWORD *)(v38 + 24);
          v41 = v40 + 1;
          if (v40 >= v39 >> 1)
          {
            v45 = sub_100D0FAC8(v39 > 1, v40 + 1, 1, v38);
            v41 = v40 + 1;
            v86 = (double *)v45;
          }
          else
          {
            v86 = (double *)v38;
          }
          v42 = v89[13];
          v43 = v89[11];
          v44 = v89[8];
          *((_QWORD *)v86 + 2) = v41;
          v32((uint64_t)v86+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v40, v43, v44);
          swift_unknownObjectRelease_n(v21, 2);
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v42, v44);
          v1 = (uint64_t)v29;
          v10 = v27;
          goto LABEL_15;
        }
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v90 + 56))(v14[7], 1, 1, v14[8]);
      }
      v15 = v14[7];
      swift_unknownObjectRelease_n(v21, 2);
      sub_1004CB800(v15, &qword_1013E04D0);
    }
  }
  v18 = v0 + 1;
  if (__OFADD__(v0, 1))
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v18 >= v92)
    goto LABEL_4;
  v19 = *(_QWORD *)(v91 + 8 * v18);
  ++v0;
  if (v19)
    goto LABEL_33;
  v0 = v18 + 1;
  if (v18 + 1 >= v92)
    goto LABEL_4;
  v19 = *(_QWORD *)(v91 + 8 * v0);
  if (v19)
    goto LABEL_33;
  v0 = v18 + 2;
  if (v18 + 2 >= v92)
    goto LABEL_4;
  v19 = *(_QWORD *)(v91 + 8 * v0);
  if (v19)
  {
LABEL_33:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v0 << 6);
    goto LABEL_34;
  }
  v20 = v18 + 3;
  if (v20 < v92)
  {
    v19 = *(_QWORD *)(v91 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v0 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_45;
        if (v0 >= v92)
          goto LABEL_4;
        v19 = *(_QWORD *)(v91 + 8 * v0);
        ++v20;
        if (v19)
          goto LABEL_33;
      }
    }
    v0 = v20;
    goto LABEL_33;
  }
LABEL_4:
  swift_release(v10);

  v4 = v88;
  if (v88 != v84)
    goto LABEL_5;
  v0 = (int64_t)v89;
  v3 = v89[2];
  v46 = v86;
LABEL_53:
  *(_QWORD *)(v0 + 112) = v46;
  v48 = swift_bridgeObjectRelease(v3);
  v49 = *((_QWORD *)v46 + 2);
  *(_QWORD *)(v0 + 120) = v49;
  v50 = *(_QWORD *)(v0 + 72);
  if (!v49)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v50 + 56))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 64), v48);
    goto LABEL_58;
  }
  v51 = *(_DWORD *)(v50 + 80);
  *(_DWORD *)(v0 + 208) = v51;
  v52 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock;
  *(_QWORD *)(v0 + 136) = v52;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v50 + 72);
  v53 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v50 + 16);
  *(_QWORD *)(v0 + 152) = v53;
  *(_QWORD *)(v0 + 160) = 0;
  v54 = *(_QWORD *)(v0 + 64);
  v55 = *(_QWORD *)(v0 + 48);
  v53(v55, *(_QWORD *)(v0 + 112) + ((v51 + 32) & ~(unint64_t)v51), v54, v48);
  v56 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56);
  *(_QWORD *)(v0 + 168) = v56;
  v56(v55, 0, 1, v54);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v55, 1, v54) == 1)
  {
LABEL_58:
    v63 = *(_QWORD *)(v0 + 104);
    v65 = *(_QWORD *)(v0 + 88);
    v64 = *(_QWORD *)(v0 + 96);
    v66 = *(_QWORD *)(v0 + 80);
    v68 = *(_QWORD *)(v0 + 48);
    v67 = *(_QWORD *)(v0 + 56);
    v69 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v57 = *(_QWORD *)(v0 + 128);
  v58 = *(_QWORD *)(v0 + 136);
  v59 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
  v60 = *(_QWORD *)(v59 + v57);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v60 + 16));
  v61 = *(void **)(v59 + v58);
  if (v61)
  {
    v62 = *(id *)(v59 + v58);
  }
  else
  {
    v71 = *(_QWORD *)(v0 + 136);
    v72 = *(char **)(v0 + 24);
    v73 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v74 = v72;
    v75 = sub_100C7EE84((uint64_t)v74);

    v76 = *(void **)&v72[v71];
    *(_QWORD *)&v72[v71] = v75;
    v62 = v75;

    v61 = 0;
  }
  *(_QWORD *)(v0 + 176) = v62;
  v77 = *(_QWORD *)(v0 + 80);
  v78 = *(os_unfair_lock_s **)(v60 + 16);
  v79 = v61;
  os_unfair_lock_unlock(v78);
  v80 = (_QWORD *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 184) = v80;
  v80[2] = v62;
  v80[3] = v77;
  v80[4] = 0;
  v80[5] = 0;
  v81 = (int64_t *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 192) = v81;
  *v81 = v0;
  v81[1] = (int64_t)sub_100B64F74;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 40), 0, 0, 0xD00000000000001CLL, 0x8000000100FEA560, sub_1009F2BF0, v80, *(_QWORD *)(v0 + 32));
}

uint64_t sub_100B64F74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100B652AC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 184));
    v4 = sub_100B64FE0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100B64FE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  id v41;
  _QWORD *v42;
  _QWORD *v43;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 160) + 1;
  v9 = *(_QWORD *)(v7 + *(int *)(v6 + 48) + 8);
  v10 = v7 + *(int *)(v6 + 64);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v7, v11);
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v10, v5);
  swift_bridgeObjectRelease(v9);

  v12(v3, v5);
  if (v8 == v2)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 64));
LABEL_4:
    v19 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 152);
  v14 = *(_QWORD *)(v0 + 160) + 1;
  *(_QWORD *)(v0 + 160) = v14;
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 48);
  v13(v17, *(_QWORD *)(v0 + 112)+ ((*(unsigned __int8 *)(v0 + 208) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 208))+ *(_QWORD *)(v0 + 144) * v14, v15);
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56);
  *(_QWORD *)(v0 + 168) = v18;
  v18(v17, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) == 1)
    goto LABEL_4;
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
  v30 = *(_QWORD *)(v29 + v27);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v30 + 16));
  v31 = *(void **)(v29 + v28);
  if (v31)
  {
    v32 = *(id *)(v29 + v28);
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 136);
    v34 = *(char **)(v0 + 24);
    v35 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v36 = v34;
    v37 = sub_100C7EE84((uint64_t)v36);

    v38 = *(void **)&v34[v33];
    *(_QWORD *)&v34[v33] = v37;
    v32 = v37;

    v31 = 0;
  }
  *(_QWORD *)(v0 + 176) = v32;
  v39 = *(_QWORD *)(v0 + 80);
  v40 = *(os_unfair_lock_s **)(v30 + 16);
  v41 = v31;
  os_unfair_lock_unlock(v40);
  v42 = (_QWORD *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 184) = v42;
  v42[2] = v32;
  v42[3] = v39;
  v42[4] = 0;
  v42[5] = 0;
  v43 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 192) = v43;
  *v43 = v0;
  v43[1] = sub_100B64F74;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 40), 0, 0, 0xD00000000000001CLL, 0x8000000100FEA560, sub_1009F2BF0, v42, *(_QWORD *)(v0 + 32));
}

uint64_t sub_100B652AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B65370(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
}

uint64_t sub_100B6537C(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
}

uint64_t sub_100B65388(uint64_t a1)
{
  return sub_100B2D6AC(a1, (uint64_t)&protocol conformance descriptor for Ref<A>);
}

uint64_t sub_100B65394(uint64_t a1)
{
  return sub_100B2D6AC(a1, (uint64_t)&protocol conformance descriptor for Ref<A>);
}

unint64_t sub_100B653A8(_QWORD *a1)
{
  return ((*(_QWORD *)(*(_QWORD *)(*a1 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_100B653D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + a1 - 32) - 8) + 8))();
}

__n128 sub_100B653E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + a1 - 32) - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  v6 = (*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = a1 + v6;
  v8 = a2 + v6;
  result = *(__n128 *)(v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

__n128 sub_100B6544C(__n128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  __n128 result;

  v4 = *(_QWORD *)(a1->n128_u64[0] - 8);
  v5 = *(_QWORD *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  result = a1[1];
  *v6 = *a1;
  v6[1] = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSendACopyBoardDataHandlerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_100B654FC + 4 * byte_100F28C85[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_100B65530 + 4 * byte_100F28C80[v4]))();
}

uint64_t sub_100B65530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B65538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100B65540);
  return result;
}

uint64_t sub_100B6554C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100B65554);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_100B65558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100B65560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSendACopyBoardDataHandlerError()
{
  return &type metadata for CRLSendACopyBoardDataHandlerError;
}

unint64_t sub_100B65580()
{
  unint64_t result;

  result = qword_101406B38;
  if (!qword_101406B38)
  {
    result = swift_getWitnessTable(&unk_100F28DA4, &type metadata for CRLSendACopyBoardDataHandlerError);
    atomic_store(result, (unint64_t *)&qword_101406B38);
  }
  return result;
}

uint64_t sub_100B655C4(void *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t result;
  _BYTE *v7;
  _BYTE v8[24];

  result = (uint64_t)objc_msgSend(a1, "respondsToSelector:", "shouldSuppressMiniFormatter");
  if ((result & 1) != 0)
  {
    result = (uint64_t)objc_msgSend(a1, "shouldSuppressMiniFormatter");
    if ((_DWORD)result)
    {
      v7 = (_BYTE *)(a3 + 16);
      result = swift_beginAccess(v7, v8, 1, 0);
      *v7 = 1;
      *a2 = 1;
    }
  }
  return result;
}

id sub_100B65674()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  id v9;

  v1 = objc_msgSend(v0, "editorController");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = type metadata accessor for CRLWPEditor(0);
  v5 = v3;
  if (v3)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3, v4);
  else
    ObjCClassFromMetadata = 0;
  v7 = objc_msgSend(v2, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v8 = swift_dynamicCastClass(v7, v5);
  if (!v8)
  {

    swift_unknownObjectRelease(v7);
    return 0;
  }
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(v0, "repForInfo:", *(_QWORD *)(v8
                                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)));
  swift_unknownObjectRelease(v7);

  return v9;
}

NSNotificationName sub_100B65750()
{
  qword_101480C20 = (uint64_t)UIContentSizeCategoryDidChangeNotification;
  return UIContentSizeCategoryDidChangeNotification;
}

void sub_100B65768()
{
  qword_101480C28 = 0;
}

void sub_100B65774()
{
  qword_101480C30 = 0x4030000000000000;
}

void sub_100B65784()
{
  qword_101480C38 = 0x4024000000000000;
}

CALayerCornerCurve sub_100B65794()
{
  qword_101480C40 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

void sub_100B657AC()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "userInterfaceLayoutDirection");

  v2 = 10;
  if (v1 == (id)1)
    v2 = 5;
  qword_101480C48 = v2;
}

double sub_100B65814()
{
  double v0;
  double result;

  if (qword_1013DDC68 != -1)
    swift_once(&qword_1013DDC68, sub_100B65C8C);
  v0 = *(double *)&qword_101480CF8;
  if (qword_1013DDBF8 != -1)
    swift_once(&qword_1013DDBF8, sub_100B65A78);
  result = (v0 + *(double *)&qword_101480C88 + *(double *)&qword_101480C88) * 0.5;
  *(double *)&qword_101480C50 = result;
  return result;
}

CALayerCornerCurve sub_100B658A4()
{
  qword_101480C58 = (uint64_t)kCACornerCurveCircular;
  return kCACornerCurveCircular;
}

id sub_100B658BC(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_101480C60);
}

id sub_100B658D0(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_tertiarySystemBackgroundColor, &qword_101480C68);
}

id sub_100B658E4(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_systemBackgroundColor, &qword_101480C70);
}

double sub_100B658F8()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double result;

  if (qword_1013DDC60 != -1)
    swift_once(&qword_1013DDC60, sub_100B65C7C);
  v0 = *(double *)&qword_101480CF0;
  if (qword_1013DDCC8 != -1)
    swift_once(&qword_1013DDCC8, sub_100B65D98);
  v1 = *(double *)&qword_101480D58;
  if (qword_1013DDC70 != -1)
    swift_once(&qword_1013DDC70, sub_100B65C9C);
  v2 = *(double *)&qword_101480D00;
  if (qword_1013DDC78 != -1)
    swift_once(&qword_1013DDC78, sub_100B65CA8);
  v3 = *(double *)&qword_101480D08;
  if (qword_1013DDBF0 != -1)
    swift_once(&qword_1013DDBF0, sub_100B65A6C);
  v4 = *(double *)&qword_101480C80;
  if (qword_1013DDC10 != -1)
    swift_once(&qword_1013DDC10, sub_100B65AB0);
  result = v0 + v0 + v1 + v2 + v2 + v3 + v3 + v4 + v4 - *(double *)&qword_101480CA0;
  *(double *)&qword_101480C78 = result;
  return result;
}

void sub_100B65A6C()
{
  qword_101480C80 = 0;
}

void sub_100B65A78()
{
  qword_101480C88 = 0x4018000000000000;
}

id sub_100B65A88(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_101480C90);
}

id sub_100B65A9C(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_separatorColor, &qword_101480C98);
}

void sub_100B65AB0()
{
  qword_101480CA0 = 0x3FF0000000000000;
}

void sub_100B65AC0()
{
  qword_101480CA8 = 0x3FF0000000000000;
}

void sub_100B65AD0()
{
  qword_101480CB0 = 0;
}

double sub_100B65ADC()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double result;

  if (qword_1013DDBF8 != -1)
    swift_once(&qword_1013DDBF8, sub_100B65A78);
  v0 = *(double *)&qword_101480C88;
  if (qword_1013DDC88 != -1)
    swift_once(&qword_1013DDC88, sub_100B65D04);
  v1 = *(double *)&qword_101480D18;
  if (qword_1013DDC68 != -1)
    swift_once(&qword_1013DDC68, sub_100B65C8C);
  v2 = *(double *)&qword_101480CF8;
  if (qword_1013DDC80 != -1)
    swift_once(&qword_1013DDC80, sub_100B65CB4);
  v3 = *(double *)&qword_101480D10;
  if (qword_1013DDC18 != -1)
    swift_once(&qword_1013DDC18, sub_100B65AC0);
  result = v0 + v1 + v2 + (v3 - *(double *)&qword_101480CA8) * 0.5;
  *(double *)&qword_101480CB8 = result;
  return result;
}

id sub_100B65C0C(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_systemBackgroundColor, &qword_101480CC0);
}

void sub_100B65C20()
{
  qword_101480CC8 = 0x4046000000000000;
}

UIFontTextStyle sub_100B65C30()
{
  qword_101480CD0 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100B65C48()
{
  qword_101480CD8 = 0x4034000000000000;
}

UIFontWeight sub_100B65C58()
{
  UIFontWeight result;

  result = UIFontWeightLight;
  qword_101480CE0 = *(_QWORD *)&UIFontWeightLight;
  return result;
}

void sub_100B65C70(uint64_t a1)
{
  sub_100B65E94(a1, &qword_101480CE8);
}

void sub_100B65C7C()
{
  qword_101480CF0 = 0x4046000000000000;
}

void sub_100B65C8C()
{
  qword_101480CF8 = 0x4041000000000000;
}

void sub_100B65C9C()
{
  qword_101480D00 = 0;
}

void sub_100B65CA8()
{
  qword_101480D08 = 0;
}

double sub_100B65CB4()
{
  double result;

  if (qword_1013DDC18 != -1)
    swift_once(&qword_1013DDC18, sub_100B65AC0);
  result = *(double *)&qword_101480CA8 + 20.0;
  *(double *)&qword_101480D10 = *(double *)&qword_101480CA8 + 20.0;
  return result;
}

void sub_100B65D04()
{
  qword_101480D18 = 0;
}

UIFontTextStyle sub_100B65D10()
{
  qword_101480D20 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100B65D28()
{
  qword_101480D28 = 0x4031000000000000;
}

UIFontWeight sub_100B65D38()
{
  UIFontWeight result;

  result = UIFontWeightMedium;
  qword_101480D30 = *(_QWORD *)&UIFontWeightMedium;
  return result;
}

void sub_100B65D50(uint64_t a1)
{
  sub_100B65E94(a1, &qword_101480D38);
}

id sub_100B65D5C(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_101480D40);
}

id sub_100B65D70(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_labelColor, &qword_101480D48);
}

id sub_100B65D84(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_101480D50);
}

void sub_100B65D98()
{
  qword_101480D58 = 0x4046000000000000;
}

void sub_100B65DA8()
{
  qword_101480D60 = 0x4041000000000000;
}

UIFontTextStyle sub_100B65DB8()
{
  qword_101480D68 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100B65DD0()
{
  qword_101480D70 = 0x4031000000000000;
}

UIFontWeight sub_100B65DE0()
{
  UIFontWeight result;

  result = UIFontWeightMedium;
  qword_101480D78 = *(_QWORD *)&UIFontWeightMedium;
  return result;
}

void sub_100B65DF8(uint64_t a1)
{
  sub_100B65E94(a1, &qword_101480D80);
}

id sub_100B65E04(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_labelColor, &qword_101480D88);
}

void sub_100B65E18(uint64_t a1)
{
  sub_100B65E94(a1, &qword_101480D90);
}

id sub_100B65E24(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_separatorColor, &qword_101480D98);
}

void sub_100B65E38()
{
  qword_101480DA0 = 0x4018000000000000;
}

void sub_100B65E48()
{
  qword_101480DA8 = 0;
}

void sub_100B65E54()
{
  qword_101480DB0 = 0x4024000000000000;
}

void sub_100B65E64()
{
  qword_101480DB8 = 0x403E000000000000;
}

double sub_100B65E74()
{
  double result;

  result = 0.0;
  xmmword_101480DC0 = xmmword_100F28E10;
  return result;
}

void sub_100B65E88(uint64_t a1)
{
  sub_100B65E94(a1, &qword_101480DD0);
}

void sub_100B65E94(uint64_t a1, _QWORD *a2)
{
  NSString v3;
  id v4;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v3);

  if (v4)
    *a2 = v4;
  else
    __break(1u);
}

id sub_100B65F14(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_blackColor, &qword_101480DD8);
}

void sub_100B65F28()
{
  qword_101480DE0 = 0x4008000000000000;
}

void sub_100B65F38()
{
  qword_101480DE8 = 0x4024000000000000;
}

id sub_100B6601C()
{
  char *v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  NSString v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  objc_msgSend(v0, "updateViewConstraints", sub_100B668A8());
  sub_100B6A308();
  sub_100B6B204(0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityLabel:", v6, swift_bridgeObjectRelease().n128_f64[0]);

  return objc_msgSend(v1, "setAccessibilityContainerType:", 4);
}

void sub_100B6620C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  objc_msgSendSuper2(&v11, "viewDidAppear:", a1 & 1);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    v3 = objc_msgSend(v1, "view");
    if (v3)
    {
      v4 = v3;
      v5 = sub_1004B8930(0, &qword_101406CC8, UITransitionView_ptr);
      v7 = objc_msgSend(v4, "crlaxViewAncestorOfType:", swift_getObjCClassFromMetadata(v5, v6));

      if (v7)
      {
        v8 = objc_opt_self(UITransitionView);
        v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
        if (v9)
          objc_msgSend(v9, "setAccessibilityViewIsModal:", 0);

      }
      v10 = objc_msgSend(v1, "view");
      CRLAccessibilityPostLayoutChangedNotification(v10);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100B66360(char a1, SEL *a2)
{
  char *v2;
  char *Strong;
  char *v6;
  id v7;
  objc_super v8;
  unsigned __int8 v9[40];

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  objc_msgSendSuper2(&v8, *a2, a1 & 1);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController]);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "traitCollection");
    sub_1005221A4(v7, (int)objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v9);
    sub_100522548(v9, 0);
    sub_1004DB520((uint64_t)v9);

  }
}

void sub_100B664C8()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v14;
  id v15;
  void *v16;
  id v17;
  id v18;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v2 = v1;
  objc_msgSend(v1, "frame");
  v4 = v3;
  v6 = v5;

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "superview");

  if (!v9
    || ((objc_msgSend(v9, "frame"), v11 = v10, v13 = v12, v9, v4 == v11) ? (v14 = v6 == v13) : (v14 = 0),
        !v14))
  {
    v18 = objc_msgSend(v0, "view");
    if (v18)
    {
      v15 = objc_msgSend(v0, "view");
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "superview");

        if (v17)
        {
          objc_msgSend(v17, "frame");

        }
        objc_msgSend(v18, "frame");
        objc_msgSend(v18, "setFrame:");

        return;
      }
LABEL_17:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
}

id sub_100B66678()
{
  void *v0;
  objc_super v2;

  sub_100B66D60();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_100B668A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t Strong;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  _BYTE v33[24];
  __int128 aBlock;
  __int128 v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  char v38[24];

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState)
                   + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_objectDidChange);
    *(_QWORD *)&aBlock = v4;
    v5 = swift_allocObject(&unk_101296288, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = swift_allocObject(&unk_1012962D8, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_100B75CEC;
    *(_QWORD *)(v6 + 24) = v5;
    v8 = type metadata accessor for ObservableObjectPublisher(0, v7);
    swift_retain(v4);
    v9 = Publisher<>.sink(receiveValue:)(sub_10078E48C, v6, v8, &protocol witness table for ObservableObjectPublisher);
    swift_release(v6);
    swift_release(aBlock);
    v10 = *(_QWORD *)(v1 + v3);
    *(_QWORD *)(v1 + v3) = v9;
    swift_release(v10);
  }
  if (qword_1013DDB90 != -1)
    swift_once(&qword_1013DDB90, sub_100B65750);
  v11 = (void *)qword_101480C20;
  if (qword_101480C20)
  {
    v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers, v38, 0, 0);
    v13 = *v12;
    if (*(_QWORD *)(*v12 + 16))
    {
      v14 = v11;
      v15 = swift_bridgeObjectRetain(v13);
      v16 = sub_100842FAC(v14, v15);
      if ((v17 & 1) != 0)
      {
        sub_1004CB6E8(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v35 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v35 + 1))
      {

        sub_1004CB800((uint64_t)&aBlock, &qword_1013E0230);
        goto LABEL_14;
      }
    }
    else
    {
      aBlock = 0u;
      v35 = 0u;
      v18 = v11;
    }
    sub_1004CB800((uint64_t)&aBlock, &qword_1013E0230);
    v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v20 = swift_allocObject(&unk_101296288, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16);
    v36 = sub_100B75CE4;
    v37 = v20;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
    *(_QWORD *)&v35 = sub_100568280;
    *((_QWORD *)&v35 + 1) = &unk_1012962A0;
    v21 = _Block_copy(&aBlock);
    v22 = v37;
    v23 = v11;
    v24 = objc_msgSend(v19, "addObserverForName:object:queue:usingBlock:", v23, 0, 0, v21, swift_release(v22).n128_f64[0]);
    _Block_release(v21);

    *((_QWORD *)&v35 + 1) = swift_getObjectType(v24);
    *(_QWORD *)&aBlock = v24;
    swift_beginAccess(v12, v33, 33, 0);
    v25 = v23;
    sub_10083EF50((uint64_t)&aBlock, v25);
    swift_endAccess(v33);

  }
LABEL_14:
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController);
  if (Strong)
  {
    v27 = (void *)Strong;
    v28 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

    objc_msgSend(v28, "addDecorator:", v1);
  }
  v29 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v30 + 32) = type metadata accessor for UITraitVerticalSizeClass(0);
  *(_QWORD *)(v30 + 40) = &protocol witness table for UITraitVerticalSizeClass;
  *(_QWORD *)(v30 + 48) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v30 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  v31 = UIViewController.registerForTraitChanges<A>(_:handler:)(v30, sub_100B75AB0, 0, ObjectType);
  swift_unknownObjectRelease(v31);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100B66C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100B6B204(1);

  }
}

void sub_100B66CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100B664C8();

  }
  swift_beginAccess(v2, &v7, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = (void *)v5;
    sub_100B6A308();

  }
}

void sub_100B66D60()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  char v34[32];

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers);
  swift_beginAccess(v1, v34, 1, 0);
  v25 = v1;
  v2 = *v1;
  v27 = *v1 + 64;
  v3 = 1 << *(_BYTE *)(*v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(*v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n(v2, 2);
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      return;
    }
    if (v19 >= v6)
      goto LABEL_25;
    v20 = *(_QWORD *)(v27 + 8 * v19);
    ++v7;
    if (!v20)
    {
      v7 = v19 + 1;
      if (v19 + 1 >= v6)
        goto LABEL_25;
      v20 = *(_QWORD *)(v27 + 8 * v7);
      if (!v20)
      {
        v7 = v19 + 2;
        if (v19 + 2 >= v6)
          goto LABEL_25;
        v20 = *(_QWORD *)(v27 + 8 * v7);
        if (!v20)
        {
          v7 = v19 + 3;
          if (v19 + 3 >= v6)
            goto LABEL_25;
          v20 = *(_QWORD *)(v27 + 8 * v7);
          if (!v20)
          {
            v7 = v19 + 4;
            if (v19 + 4 >= v6)
              goto LABEL_25;
            v20 = *(_QWORD *)(v27 + 8 * v7);
            if (!v20)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v20 - 1) & v20;
    v9 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_5:
    v10 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v9);
    sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v9, (uint64_t)v32 + 8);
    *(_QWORD *)&v32[0] = v10;
    v30[0] = v32[0];
    v30[1] = v32[1];
    v31 = v33;
    v11 = (void *)objc_opt_self(NSNotificationCenter);
    v12 = v10;
    v13 = objc_msgSend(v11, "defaultCenter");
    sub_1004CB6E8((uint64_t)v30 + 8, (uint64_t)v28);
    v14 = v29;
    v15 = sub_1004BB5A4(v28, v29);
    v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v14);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v28);
    v17 = *(void **)&v30[0];
    sub_1004CB6E8((uint64_t)v30 + 8, (uint64_t)v28);
    v18 = v17;
    objc_msgSend(v13, "removeObserver:name:object:", v16, v18, 0);

    swift_unknownObjectRelease(v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v28);
    sub_1004CB800((uint64_t)v30, &qword_101406CC0);
  }
  v21 = v19 + 5;
  if (v21 < v6)
  {
    v20 = *(_QWORD *)(v27 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v7 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_30;
        if (v7 >= v6)
          goto LABEL_25;
        v20 = *(_QWORD *)(v27 + 8 * v7);
        ++v21;
        if (v20)
          goto LABEL_24;
      }
    }
    v7 = v21;
    goto LABEL_24;
  }
LABEL_25:
  swift_release(v2);
  swift_bridgeObjectRelease();
  *v25 = sub_1008D5E4C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  v22 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver;
  v23 = *(_QWORD *)(v26
                  + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver);
  if (v23)
  {
    swift_retain(*(_QWORD *)(v26
                           + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver));
    AnyCancellable.cancel()();
    swift_release(v23);
    v24 = *(_QWORD *)(v26 + v22);
  }
  else
  {
    v24 = 0;
  }
  *(_QWORD *)(v26 + v22) = 0;
  swift_release(v24);
}

id sub_100B67084()
{
  return sub_100B6709C(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView);
}

id sub_100B67090()
{
  return sub_100B6709C(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView);
}

id sub_100B6709C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  objc_super v12;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = (objc_class *)type metadata accessor for CRLScenesNavigatorViewController.PlatformView();
    v6 = (char *)objc_allocWithZone(v5);
    v7 = swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtCC8Freeform32CRLScenesNavigatorViewController12PlatformView_owningViewController]);
    swift_unknownObjectWeakAssign(v7, v1);
    v12.receiver = v6;
    v12.super_class = v5;
    v8 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v9 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v8;
    v4 = v8;

    v3 = 0;
  }
  v10 = v3;
  return v4;
}

id sub_100B67148()
{
  return sub_100B67340(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton, (uint64_t *)&selRef_grabberButtonPressedWithSender_);
}

void sub_100B6715C()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) & 1) == 0)
  {
    KeyPath = swift_getKeyPath(byte_100F28F80);
    v3 = swift_getKeyPath(byte_100F28FA8);
    v4 = v1;
    static Published.subscript.getter(&v5, v4, KeyPath, v3);

    swift_release(KeyPath);
    swift_release(v3);
    sub_100711550((v5 & 1) == 0);

  }
}

id sub_100B67218()
{
  return sub_100B67340(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton, (uint64_t *)&selRef_previousSceneButtonPressed);
}

id sub_100B67280()
{
  return sub_100B67340(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton, (uint64_t *)&selRef_nextSceneButtonPressedWithSender_);
}

id sub_100B6732C()
{
  return sub_100B67340(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton, (uint64_t *)&selRef_popoverButtonPressedWithSender_);
}

id sub_100B67340(uint64_t *a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;

  v3 = *a1;
  v4 = *(void **)&v2[*a1];
  if (v4)
  {
    v5 = *(id *)&v2[*a1];
  }
  else
  {
    v7 = type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton();
    v8 = *a2;
    v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7, v9));
    v11 = v2;
    v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v12, "addTarget:action:forControlEvents:", v11, v8, 64);

    objc_msgSend(v12, "setPointerInteractionEnabled:", 1);
    v13 = *(void **)&v2[v3];
    *(_QWORD *)&v2[v3] = v12;
    v5 = v12;

    v4 = 0;
  }
  v14 = v4;
  return v5;
}

void sub_100B6741C()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  id v9;

  if ((*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
                 + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) & 1) == 0)
  {
    v1 = objc_msgSend(v0, "presentedViewController");
    if (!v1)
      goto LABEL_6;
    v9 = v1;
    v2 = type metadata accessor for CRLScenesViewController_i();
    v3 = (void *)swift_dynamicCastClass(v9, v2);
    if (!v3 || (objc_msgSend(v3, "isBeingDismissed") & 1) != 0)
    {

LABEL_6:
      Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate]);
      if (Strong)
      {
        v5 = Strong;
        sub_100C40E34();
        swift_unknownObjectRelease(v5);
      }
      return;
    }
    v6 = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate]);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
      sub_100C2F590(v8 ^ 1, 0, 0);
      swift_unknownObjectRelease(v7);
    }

  }
}

uint64_t sub_100B67544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons);
  }
  else
  {
    v4 = v0;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v6 + 32) = sub_100B67218();
    v7 = sub_100B67280();
    *(_QWORD *)(v6 + 40) = v7;
    specialized Array._endMutation()(v7);
    v3 = v6;
    *(_QWORD *)(v4 + v1) = v6;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

void sub_100B675F4()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;

  v1 = sub_100B67090();
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v2 = sub_100B67090();
  objc_msgSend(v2, "setHidden:", 1);

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v3;
  v5 = sub_100B67090();
  objc_msgSend(v4, "addSubview:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = v7;
  objc_msgSend(v7, "addSubview:", v6);

  v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "addSubview:", v9);
  v10 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "addSubview:", v10);
  v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView];
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v11);
  v12 = sub_100B67218();
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v13 = sub_100B67218();
  objc_msgSend(v10, "addSubview:", v13);

  v14 = sub_100B67280();
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v15 = sub_100B67280();
  objc_msgSend(v10, "addSubview:", v15);

  v16 = sub_100B6732C();
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v17 = sub_100B6732C();
  objc_msgSend(v10, "addSubview:", v17);

  v18 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView];
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v18);
  v19 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView];
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "addSubview:", v19);
  v20 = sub_100B67148();
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v21 = sub_100B67148();
  objc_msgSend(v10, "addSubview:", v21);

  v22 = sub_100B67084();
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v23 = sub_100B67084();
  objc_msgSend(v23, "setHidden:", 1);

  v24 = objc_msgSend(v0, "view");
  if (v24)
  {
    v25 = v24;
    v26 = sub_100B67084();
    objc_msgSend(v25, "addSubview:", v26);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100B67914()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView), "widthAnchor");
    if (qword_1013DDC38 != -1)
      swift_once(&qword_1013DDC38, sub_100B65C20);
    v5 = *(double *)&qword_101480CC8;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
    KeyPath = swift_getKeyPath(byte_100F28F80);
    v8 = swift_getKeyPath(byte_100F28FA8);
    v9 = v6;
    static Published.subscript.getter(&v15, v9, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    v10 = 0.0;
    if (v15 == 1)
    {
      if (qword_1013DDBE8 != -1)
        swift_once(&qword_1013DDBE8, sub_100B658F8);
      v10 = *(double *)&qword_101480C78;
    }
    v11 = objc_msgSend(v4, "constraintEqualToConstant:", v5 + v10);

    v12 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

uint64_t sub_100B67A94()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints, sub_100B67AA8);
}

uint64_t sub_100B67AA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  id v34;
  id v35;
  id v36;
  uint64_t *v37;
  id v38;
  id v39;
  id v40;
  uint64_t *v41;
  id v42;
  id v43;
  id v44;
  uint64_t *v45;
  id v46;
  id v47;
  id v48;
  uint64_t *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t *v64;
  id v65;
  id v66;
  id v67;
  uint64_t *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  char **v78;
  uint64_t *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t *v91;
  char **v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t *v97;
  id v98;
  id v99;
  id v100;
  uint64_t *v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t *v111;
  id v112;
  id v113;
  id v114;
  id v115;
  uint64_t *v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t *v124;
  id v125;
  id v126;
  id v127;
  uint64_t *v128;
  id v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  uint64_t v140;
  id v142;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 288, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100F28E20;
  v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView);
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView);
  v7 = objc_msgSend(v6, "topAnchor");
  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v4, "leadingAnchor");
  v10 = objc_msgSend(v6, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = objc_msgSend(v4, "trailingAnchor");
  v13 = objc_msgSend(v6, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v3 + 48) = v14;
  v15 = objc_msgSend(v4, "bottomAnchor");
  v16 = objc_msgSend(v6, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v3 + 56) = v17;
  v18 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v6, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v3 + 64) = v21;
  v22 = objc_msgSend(v18, "leadingAnchor");
  v23 = objc_msgSend(v6, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v3 + 72) = v24;
  v25 = objc_msgSend(v18, "trailingAnchor");
  v26 = objc_msgSend(v6, "trailingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v3 + 80) = v27;
  v28 = objc_msgSend(v18, "bottomAnchor");
  v29 = objc_msgSend(v6, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v3 + 88) = v30;
  v142 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView);
  v31 = objc_msgSend(v142, "widthAnchor");
  v32 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_1013DDC18 != -1)
      swift_once(&qword_1013DDC18, sub_100B65AC0);
    v33 = &qword_101480CA8;
  }
  else
  {
    if (qword_1013DDC10 != -1)
      swift_once(&qword_1013DDC10, sub_100B65AB0);
    v33 = &qword_101480CA0;
  }
  v34 = objc_msgSend(v31, "constraintEqualToConstant:", *(double *)v33);

  *(_QWORD *)(v3 + 96) = v34;
  v35 = objc_msgSend(v142, "topAnchor");
  v36 = objc_msgSend(v18, "topAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v37 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v37 = &qword_101480C80;
  }
  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, *(double *)v37);

  *(_QWORD *)(v3 + 104) = v38;
  v39 = objc_msgSend(v142, "leadingAnchor");
  v40 = objc_msgSend(v18, "leadingAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDC28 != -1)
      swift_once(&qword_1013DDC28, sub_100B65ADC);
    v41 = &qword_101480CB8;
  }
  else
  {
    if (qword_1013DDC20 != -1)
      swift_once(&qword_1013DDC20, sub_100B65AD0);
    v41 = &qword_101480CB0;
  }
  v42 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, *(double *)v41);

  *(_QWORD *)(v3 + 112) = v42;
  v43 = objc_msgSend(v142, "bottomAnchor");
  v44 = objc_msgSend(v18, "bottomAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v45 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v45 = &qword_101480C80;
  }
  v46 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, -*(double *)v45);

  *(_QWORD *)(v3 + 120) = v46;
  v47 = sub_100B67218();
  v48 = objc_msgSend(v47, "widthAnchor");

  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDC68 != -1)
      swift_once(&qword_1013DDC68, sub_100B65C8C);
    v49 = &qword_101480CF8;
  }
  else
  {
    if (qword_1013DDC60 != -1)
      swift_once(&qword_1013DDC60, sub_100B65C7C);
    v49 = &qword_101480CF0;
  }
  v50 = objc_msgSend(v48, "constraintEqualToConstant:", *(double *)v49);

  *(_QWORD *)(v3 + 128) = v50;
  v51 = sub_100B67218();
  v52 = objc_msgSend(v51, "heightAnchor");

  v53 = sub_100B67218();
  v54 = objc_msgSend(v53, "widthAnchor");

  v55 = objc_msgSend(v52, "constraintEqualToAnchor:", v54);
  *(_QWORD *)(v3 + 136) = v55;
  v56 = sub_100B67218();
  v57 = objc_msgSend(v56, "topAnchor");

  v58 = objc_msgSend(v18, "topAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v59 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v59 = &qword_101480C80;
  }
  v60 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, *(double *)v59);

  *(_QWORD *)(v3 + 144) = v60;
  v61 = sub_100B67218();
  v62 = objc_msgSend(v61, "bottomAnchor");

  v63 = objc_msgSend(v18, "bottomAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v64 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v64 = &qword_101480C80;
  }
  v65 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, -*(double *)v64);

  *(_QWORD *)(v3 + 152) = v65;
  v66 = sub_100B6732C();
  v67 = objc_msgSend(v66, "widthAnchor");

  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDCD0 != -1)
      swift_once(&qword_1013DDCD0, sub_100B65DA8);
    v68 = &qword_101480D60;
  }
  else
  {
    if (qword_1013DDCC8 != -1)
      swift_once(&qword_1013DDCC8, sub_100B65D98);
    v68 = &qword_101480D58;
  }
  v69 = objc_msgSend(v67, "constraintEqualToConstant:", *(double *)v68);

  *(_QWORD *)(v3 + 160) = v69;
  v70 = sub_100B6732C();
  v71 = objc_msgSend(v70, "heightAnchor");

  v72 = sub_100B6732C();
  v73 = objc_msgSend(v72, "widthAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
  *(_QWORD *)(v3 + 168) = v74;
  v75 = sub_100B6732C();
  v76 = objc_msgSend(v75, "topAnchor");

  v77 = objc_msgSend(v18, "topAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    v78 = &selRef_computeAlignmentFrameInRoot_;
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v79 = &qword_101480C88;
  }
  else
  {
    v78 = &selRef_computeAlignmentFrameInRoot_;
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v79 = &qword_101480C80;
  }
  v80 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v77, *(double *)v79);

  *(_QWORD *)(v3 + 176) = v80;
  v81 = sub_100B6732C();
  v82 = objc_msgSend(v81, "leadingAnchor");

  v83 = sub_100B67218();
  v84 = objc_msgSend(v83, "trailingAnchor");

  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDC80 != -1)
      swift_once(&qword_1013DDC80, sub_100B65CB4);
    v85 = &qword_101480D10;
  }
  else
  {
    if (qword_1013DDC70 != -1)
      swift_once(&qword_1013DDC70, sub_100B65C9C);
    v85 = &qword_101480D00;
  }
  v86 = objc_msgSend(v82, "constraintEqualToAnchor:constant:", v84, *(double *)v85);

  *(_QWORD *)(v3 + 184) = v86;
  v87 = sub_100B6732C();
  v88 = objc_msgSend(v87, "trailingAnchor");

  v89 = sub_100B67280();
  v90 = objc_msgSend(v89, "leadingAnchor");

  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDC80 != -1)
      swift_once(&qword_1013DDC80, sub_100B65CB4);
    v91 = &qword_101480D10;
    v92 = &selRef_startAnimation;
  }
  else
  {
    v92 = &selRef_startAnimation;
    if (qword_1013DDC70 != -1)
      swift_once(&qword_1013DDC70, sub_100B65C9C);
    v91 = &qword_101480D00;
  }
  v93 = objc_msgSend(v88, "constraintEqualToAnchor:constant:", v90, -*(double *)v91);

  *(_QWORD *)(v3 + 192) = v93;
  v94 = sub_100B6732C();
  v95 = objc_msgSend(v94, "bottomAnchor");

  v96 = objc_msgSend(v18, "bottomAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v97 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v97 = &qword_101480C80;
  }
  v98 = objc_msgSend(v95, "constraintEqualToAnchor:constant:", v96, -*(double *)v97);

  *(_QWORD *)(v3 + 200) = v98;
  v99 = sub_100B67280();
  v100 = objc_msgSend(v99, "widthAnchor");

  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDC68 != -1)
      swift_once(&qword_1013DDC68, sub_100B65C8C);
    v101 = &qword_101480CF8;
  }
  else
  {
    if (qword_1013DDC60 != -1)
      swift_once(&qword_1013DDC60, sub_100B65C7C);
    v101 = &qword_101480CF0;
  }
  v102 = objc_msgSend(v100, "constraintEqualToConstant:", *(double *)v101);

  *(_QWORD *)(v3 + 208) = v102;
  v103 = sub_100B67280();
  v104 = objc_msgSend(v103, "heightAnchor");

  v105 = sub_100B67280();
  v106 = objc_msgSend(v105, "widthAnchor");

  v107 = objc_msgSend(v104, v78[62], v106);
  *(_QWORD *)(v3 + 216) = v107;
  v108 = sub_100B67280();
  v109 = objc_msgSend(v108, v92[445]);

  v110 = objc_msgSend(v18, v92[445]);
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v111 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v111 = &qword_101480C80;
  }
  v112 = objc_msgSend(v109, "constraintEqualToAnchor:constant:", v110, *(double *)v111);

  *(_QWORD *)(v3 + 224) = v112;
  v113 = sub_100B67280();
  v114 = objc_msgSend(v113, "bottomAnchor");

  v115 = objc_msgSend(v18, "bottomAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v116 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v116 = &qword_101480C80;
  }
  v117 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, -*(double *)v116);

  *(_QWORD *)(v3 + 232) = v117;
  v118 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView);
  v119 = objc_msgSend(v118, "widthAnchor");
  v120 = objc_msgSend(v142, "widthAnchor");
  v121 = objc_msgSend(v119, v78[62], v120);

  *(_QWORD *)(v3 + 240) = v121;
  v122 = objc_msgSend(v118, v92[445]);
  v123 = objc_msgSend(v18, v92[445]);
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v124 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v124 = &qword_101480C80;
  }
  v125 = objc_msgSend(v122, "constraintEqualToAnchor:constant:", v123, *(double *)v124);

  *(_QWORD *)(v3 + 248) = v125;
  v126 = objc_msgSend(v118, "bottomAnchor");
  v127 = objc_msgSend(v18, "bottomAnchor");
  if (*(_BYTE *)(a1 + v32) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v128 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v128 = &qword_101480C80;
  }
  v129 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v127, -*(double *)v128);

  *(_QWORD *)(v3 + 256) = v129;
  v130 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView);
  v131 = objc_msgSend(v130, v92[445]);
  v132 = objc_msgSend(v18, v92[445]);
  v133 = objc_msgSend(v131, v78[62], v132);

  *(_QWORD *)(v3 + 264) = v133;
  v134 = objc_msgSend(v130, "leadingAnchor");
  v135 = objc_msgSend(v18, "leadingAnchor");
  v136 = objc_msgSend(v134, v78[62], v135);

  *(_QWORD *)(v3 + 272) = v136;
  v137 = objc_msgSend(v130, "bottomAnchor");
  v138 = objc_msgSend(v18, "bottomAnchor");
  v139 = objc_msgSend(v137, v78[62], v138);

  *(_QWORD *)(v3 + 280) = v139;
  specialized Array._endMutation()(v140);
  return v3;
}

uint64_t sub_100B68F2C()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints, sub_100B68F40);
}

uint64_t sub_100B68F40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  double v26;
  uint64_t *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 96, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5FF0;
  v4 = sub_100B67148();
  v5 = objc_msgSend(v4, "widthAnchor");

  if (qword_1013DDC38 != -1)
    swift_once(&qword_1013DDC38, sub_100B65C20);
  v6 = objc_msgSend(v5, "constraintEqualToConstant:", *(double *)&qword_101480CC8);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = sub_100B67148();
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = sub_100B67148();
  v13 = objc_msgSend(v12, "trailingAnchor");

  v14 = objc_msgSend(v9, "trailingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v3 + 48) = v15;
  v16 = sub_100B67148();
  v17 = objc_msgSend(v16, "bottomAnchor");

  v18 = objc_msgSend(v9, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v3 + 56) = v19;
  v20 = sub_100B67280();
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = sub_100B67148();
  v23 = objc_msgSend(v22, "leadingAnchor");

  v24 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v25 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v25 = &qword_101480C80;
  }
  v26 = *(double *)v25;
  if (*(_BYTE *)(a1 + v24) == 1)
  {
    if (qword_1013DDC88 != -1)
      swift_once(&qword_1013DDC88, sub_100B65D04);
    v27 = &qword_101480D18;
  }
  else
  {
    if (qword_1013DDC78 != -1)
      swift_once(&qword_1013DDC78, sub_100B65CA8);
    v27 = &qword_101480D08;
  }
  v28 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v23, -(v26 + *(double *)v27));

  *(_QWORD *)(v3 + 64) = v28;
  v29 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView), "trailingAnchor");
  v30 = sub_100B67148();
  v31 = objc_msgSend(v30, "leadingAnchor");

  if (*(_BYTE *)(a1 + v24) == 1)
  {
    if (qword_1013DDC28 != -1)
      swift_once(&qword_1013DDC28, sub_100B65ADC);
    v32 = &qword_101480CB8;
  }
  else
  {
    if (qword_1013DDC20 != -1)
      swift_once(&qword_1013DDC20, sub_100B65AD0);
    v32 = &qword_101480CB0;
  }
  v33 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, -*(double *)v32);

  *(_QWORD *)(v3 + 72) = v33;
  v34 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView), "trailingAnchor");
  v35 = sub_100B67148();
  v36 = objc_msgSend(v35, "leadingAnchor");

  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
  *(_QWORD *)(v3 + 80) = v37;
  v38 = sub_100B67914();
  *(_QWORD *)(v3 + 88) = v38;
  specialized Array._endMutation()(v38);
  return v3;
}

uint64_t sub_100B69430()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints, sub_100B69444);
}

uint64_t sub_100B69444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  double v10;
  uint64_t *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t *v16;
  double v17;
  uint64_t *v18;
  id v19;
  id v20;
  id v21;
  uint64_t *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF7310;
  v4 = sub_100B67218();
  v5 = objc_msgSend(v4, "leadingAnchor");

  v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  v7 = objc_msgSend(v6, "leadingAnchor");
  v8 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v9 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v9 = &qword_101480C80;
  }
  v10 = *(double *)v9;
  if (*(_BYTE *)(a1 + v8) == 1)
  {
    if (qword_1013DDC88 != -1)
      swift_once(&qword_1013DDC88, sub_100B65D04);
    v11 = &qword_101480D18;
  }
  else
  {
    if (qword_1013DDC78 != -1)
      swift_once(&qword_1013DDC78, sub_100B65CA8);
    v11 = &qword_101480D08;
  }
  v12 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, v10 + *(double *)v11);

  *(_QWORD *)(v3 + 32) = v12;
  v13 = sub_100B67280();
  v14 = objc_msgSend(v13, "trailingAnchor");

  v15 = objc_msgSend(v6, "trailingAnchor");
  if (*(_BYTE *)(a1 + v8) == 1)
  {
    if (qword_1013DDBF8 != -1)
      swift_once(&qword_1013DDBF8, sub_100B65A78);
    v16 = &qword_101480C88;
  }
  else
  {
    if (qword_1013DDBF0 != -1)
      swift_once(&qword_1013DDBF0, sub_100B65A6C);
    v16 = &qword_101480C80;
  }
  v17 = *(double *)v16;
  if (*(_BYTE *)(a1 + v8) == 1)
  {
    if (qword_1013DDC88 != -1)
      swift_once(&qword_1013DDC88, sub_100B65D04);
    v18 = &qword_101480D18;
  }
  else
  {
    if (qword_1013DDC78 != -1)
      swift_once(&qword_1013DDC78, sub_100B65CA8);
    v18 = &qword_101480D08;
  }
  v19 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, -(v17 + *(double *)v18));

  *(_QWORD *)(v3 + 40) = v19;
  v20 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView), "trailingAnchor");
  v21 = objc_msgSend(v6, "trailingAnchor");
  if (*(_BYTE *)(a1 + v8) == 1)
  {
    if (qword_1013DDC28 != -1)
      swift_once(&qword_1013DDC28, sub_100B65ADC);
    v22 = &qword_101480CB8;
  }
  else
  {
    if (qword_1013DDC20 != -1)
      swift_once(&qword_1013DDC20, sub_100B65AD0);
    v22 = &qword_101480CB0;
  }
  v23 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -*(double *)v22);

  *(_QWORD *)(v3 + 48) = v23;
  v24 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView), "trailingAnchor");
  v25 = objc_msgSend(v6, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v3 + 56) = v26;
  specialized Array._endMutation()(v27);
  return v3;
}

uint64_t sub_100B698BC()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints, (uint64_t (*)(uint64_t))sub_100B698D0);
}

id sub_100B698D0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5560;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  v6 = objc_msgSend(result, "centerXAnchor");

  v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  v8 = objc_msgSend(v7, "centerXAnchor");
  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v3 + 32) = v9;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = objc_msgSend(result, "safeAreaLayoutGuide");

  v12 = objc_msgSend(v11, "bottomAnchor");
  v13 = objc_msgSend(v7, "bottomAnchor");
  if (qword_1013DDB98 != -1)
    swift_once(&qword_1013DDB98, sub_100B65768);
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, *(double *)&qword_101480C28);

  *(_QWORD *)(v3 + 40) = v14;
  specialized Array._endMutation()(v15);
  return (id)v3;
}

uint64_t sub_100B69AA4()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints, (uint64_t (*)(uint64_t))sub_100B69AB8);
}

id sub_100B69AB8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5560;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  v6 = objc_msgSend(result, "safeAreaLayoutGuide");

  v7 = objc_msgSend(v6, "trailingAnchor");
  v8 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  v9 = objc_msgSend(v8, "trailingAnchor");
  v10 = objc_msgSend(v7, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v3 + 32) = v10;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v11 = result;
  v12 = objc_msgSend(result, "safeAreaLayoutGuide");

  v13 = objc_msgSend(v12, "bottomAnchor");
  v14 = objc_msgSend(v8, "bottomAnchor");
  if (qword_1013DDBA0 != -1)
    swift_once(&qword_1013DDBA0, sub_100B65774);
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, *(double *)&qword_101480C30);

  *(_QWORD *)(v3 + 40) = v15;
  specialized Array._endMutation()(v16);
  return (id)v3;
}

uint64_t sub_100B69CA8()
{
  return sub_100B69CBC(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints, (uint64_t (*)(uint64_t))sub_100B69D1C);
}

uint64_t sub_100B69CBC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    v6 = *(_QWORD *)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v6);
    v4 = 0;
  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

id sub_100B69D1C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF7310;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  v6 = objc_msgSend(result, "widthAnchor");

  v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  v8 = objc_msgSend(v7, "widthAnchor");
  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v3 + 32) = v9;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v10 = result;
  v11 = objc_msgSend(result, "heightAnchor");

  v12 = objc_msgSend(v7, "heightAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v3 + 40) = v13;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = result;
  v15 = objc_msgSend(result, "trailingAnchor");

  v16 = objc_msgSend(v7, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v3 + 48) = v17;
  result = objc_msgSend(a1, "view");
  if (result)
  {
    v18 = result;
    v19 = objc_msgSend(result, "bottomAnchor");

    v20 = objc_msgSend(v7, "bottomAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(v3 + 56) = v21;
    specialized Array._endMutation()(v22);
    return (id)v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_100B69F94()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  Class isa;
  Class v29;
  objc_class *v30;
  char v31;
  objc_super v32;
  double *v33;
  unint64_t v34;

  v1 = v0;
  v33 = _swiftEmptyArrayStorage;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = sub_100B67A94();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v12 = v2;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v4)
      goto LABEL_17;
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (!v4)
      goto LABEL_17;
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v7 = *(id *)(v3 + 8 * i + 32);
    v8 = v7;
    if ((objc_msgSend(v7, "isActive") & 1) == 0)
    {
      v9 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v10 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v11 >= v10 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
      v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
      specialized Array._endMutation()(v6);
    }

  }
LABEL_17:
  swift_bridgeObjectRelease_n(v3, 2);
  v13 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if ((v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle] & 1) != 0)
  {
    v14 = sub_100B69430();
    sub_10061EAE0(v14);
    v15 = sub_100B68F2C();
  }
  else
  {
    v16 = sub_100B68F2C();
    sub_10061EAE0(v16);
    v15 = sub_100B69430();
  }
  sub_10061EAE0(v15);
  if (v1[v13] == 1)
  {
    v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState];
    KeyPath = swift_getKeyPath(byte_100F29010);
    v19 = swift_getKeyPath(asc_100F29038);
    v20 = v17;
    static Published.subscript.getter(&v31, v20, KeyPath, v19);

    swift_release(KeyPath);
    swift_release(v19);
    if (v31 == 1)
    {
      v21 = sub_100B69AA4();
      sub_10061EAE0(v21);
      v22 = sub_100B698BC();
    }
    else
    {
      v26 = sub_100B698BC();
      sub_10061EAE0(v26);
      v22 = sub_100B69AA4();
    }
    sub_10061EAE0(v22);
    v25 = sub_100B69CA8();
  }
  else
  {
    v23 = sub_100B69CA8();
    sub_10061EAE0(v23);
    v24 = sub_100B698BC();
    sub_10061EAE0(v24);
    v25 = sub_100B69AA4();
  }
  sub_10061EAE0(v25);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "deactivateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  swift_bridgeObjectRetain(v34);
  v29 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", v29, swift_bridgeObjectRelease().n128_f64[0]);

  v30 = (objc_class *)type metadata accessor for CRLScenesNavigatorViewController();
  v32.receiver = v1;
  v32.super_class = v30;
  objc_msgSendSuper2(&v32, "updateViewConstraints");
  swift_bridgeObjectRelease();
}

void sub_100B6A308()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t *v18;
  id v19;
  void *v20;
  uint64_t *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t *v32;
  void *v33;
  uint64_t *v34;
  id v35;
  void *v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  id v42;
  NSString v43;
  NSString v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  UIFontWeight v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  NSString v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  UIFontWeight v59;
  uint64_t *v60;
  id v61;
  id v62;
  NSString v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  UIFontWeight v73;
  uint64_t *v74;
  void *v75;
  uint64_t v76;
  id v77;
  uint64_t *v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  NSString v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  UIFontWeight v88;
  uint64_t *v89;
  void *v90;
  uint64_t v91;
  id v92;
  uint64_t *v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  NSString v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_117;
  }
  v3 = v2;
  objc_msgSend(v2, "setClipsToBounds:", 0);

  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
LABEL_117:
    __break(1u);
    return;
  }
  v5 = v4;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v7);

  v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  objc_msgSend(v8, "setClipsToBounds:", 0);
  v9 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  LODWORD(v7) = v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle];
  v10 = objc_msgSend(v8, "layer");
  v11 = v10;
  if ((_DWORD)v7 == 1)
  {
    objc_msgSend(v10, "crl_applyDefaultCanvasOverlayUIShadowSettings");
LABEL_7:

    goto LABEL_8;
  }
  if (v10)
  {
    v12 = objc_msgSend(v6, "clearColor");
    v13 = objc_msgSend(v12, "CGColor");

    objc_msgSend(v11, "setShadowColor:", v13);
    v11 = v13;
    goto LABEL_7;
  }
LABEL_8:
  v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView];
  objc_msgSend(v14, "setClipsToBounds:", 1);
  v15 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  v16 = objc_msgSend(v14, "layer");
  if (v16)
  {
    v17 = v16;
    if (v1[v9] == 1)
    {
      if (qword_1013DDBC0 != -1)
        swift_once(&qword_1013DDBC0, sub_100B65814);
      v18 = &qword_101480C50;
    }
    else
    {
      if (qword_1013DDBA8 != -1)
        swift_once(&qword_1013DDBA8, sub_100B65784);
      v18 = &qword_101480C38;
    }
    objc_msgSend(v17, "setCornerRadius:", *(double *)v18);

  }
  v19 = objc_msgSend(v14, "layer");
  if (v19)
  {
    v20 = v19;
    if (v1[v9] == 1)
    {
      if (qword_1013DDBC8 != -1)
        swift_once(&qword_1013DDBC8, sub_100B658A4);
      v21 = &qword_101480C58;
    }
    else
    {
      if (qword_1013DDBB0 != -1)
        swift_once(&qword_1013DDBB0, sub_100B65794);
      v21 = &qword_101480C40;
    }
    v22 = (id)*v21;
    objc_msgSend(v20, "setCornerCurve:", v22);

  }
  v23 = objc_msgSend(v14, "layer");
  if (v23)
  {
    v24 = v23;
    if ((v1[v9] & 1) != 0)
    {
      v25 = 15;
    }
    else
    {
      if (qword_1013DDBB8 != -1)
        swift_once(&qword_1013DDBB8, sub_100B657AC);
      v25 = qword_101480C48;
    }
    objc_msgSend(v24, "setMaskedCorners:", v25);

  }
  v26 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  if (qword_1013DDC30 != -1)
    swift_once(&qword_1013DDC30, sub_100B65C0C);
  objc_msgSend(v26, "setBackgroundColor:", qword_101480CC0);
  v27 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView];
  if (v1[v9] == 1)
  {
    if (qword_1013DDBE0 != -1)
      swift_once(&qword_1013DDBE0, sub_100B658E4);
    v28 = &qword_101480C70;
  }
  else
  {
    v29 = objc_msgSend(v1, "traitCollection");
    v30 = objc_msgSend(v29, "userInterfaceStyle");

    if (v30 == (id)2)
    {
      if (qword_1013DDBD8 != -1)
        swift_once(&qword_1013DDBD8, sub_100B658D0);
      v28 = &qword_101480C68;
    }
    else
    {
      if (qword_1013DDBD0 != -1)
        swift_once(&qword_1013DDBD0, sub_100B658BC);
      v28 = &qword_101480C60;
    }
  }
  objc_msgSend(v27, "setBackgroundColor:", *v28);
  v31 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView];
  if (v1[v9] == 1)
  {
    if (qword_1013DDC08 != -1)
      swift_once(&qword_1013DDC08, sub_100B65A9C);
    v32 = &qword_101480C98;
  }
  else
  {
    if (qword_1013DDC00 != -1)
      swift_once(&qword_1013DDC00, sub_100B65A88);
    v32 = &qword_101480C90;
  }
  objc_msgSend(v31, "setBackgroundColor:", *v32);
  v33 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView];
  if (v1[v9] == 1)
  {
    if (qword_1013DDC08 != -1)
      swift_once(&qword_1013DDC08, sub_100B65A9C);
    v34 = &qword_101480C98;
  }
  else
  {
    if (qword_1013DDC00 != -1)
      swift_once(&qword_1013DDC00, sub_100B65A88);
    v34 = &qword_101480C90;
  }
  objc_msgSend(v33, "setBackgroundColor:", *v34);
  v35 = sub_100B67148();
  objc_msgSend(v35, "setHidden:", v1[v9]);

  v36 = (void *)objc_opt_self(NSBundle);
  v37 = objc_msgSend(v36, "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v101 = v41;

  v42 = objc_msgSend(v36, "mainBundle");
  v43 = String._bridgeToObjectiveC()();
  v44 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, v44, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v46 = sub_100B67148();
  if (qword_1013DDC40 != -1)
    swift_once(&qword_1013DDC40, sub_100B65C30);
  v103 = v9;
  v47 = qword_101480CD0;
  if (qword_1013DDC48 != -1)
    swift_once(&qword_1013DDC48, sub_100B65C48);
  v48 = qword_101480CD8;
  if (qword_1013DDC50 != -1)
    swift_once(&qword_1013DDC50, sub_100B65C58);
  v49 = *(double *)&qword_101480CE0;
  if (qword_1013DDC58 != -1)
    swift_once(&qword_1013DDC58, sub_100B65C70);
  v50 = (void *)qword_101480CE8;
  sub_100B6B8E4();
  v52 = v51;
  v53 = (void *)objc_opt_self(UIImage);
  v54 = String._bridgeToObjectiveC()();
  v102 = v53;
  v55 = objc_msgSend(v53, "imageNamed:", v54);

  sub_1007CA770(v55, v47, v48, 0, v50, 0, 0, v49);
  swift_bridgeObjectRelease();

  v56 = sub_100B6732C();
  if (qword_1013DDCD8 != -1)
    swift_once(&qword_1013DDCD8, sub_100B65DB8);
  v57 = qword_101480D68;
  if (qword_1013DDCE0 != -1)
    swift_once(&qword_1013DDCE0, sub_100B65DD0);
  v58 = qword_101480D70;
  if (qword_1013DDCE8 != -1)
    swift_once(&qword_1013DDCE8, sub_100B65DE0);
  v59 = *(double *)&qword_101480D78;
  if (v1[v103] == 1)
  {
    if (qword_1013DDCF8 != -1)
      swift_once(&qword_1013DDCF8, sub_100B65E04);
    v60 = &qword_101480D88;
  }
  else
  {
    if (qword_1013DDCF0 != -1)
      swift_once(&qword_1013DDCF0, sub_100B65DF8);
    v60 = &qword_101480D80;
  }
  v61 = (id)*v60;
  v62 = objc_msgSend(v36, "mainBundle", v52);
  v63 = String._bridgeToObjectiveC()();
  v64 = String._bridgeToObjectiveC()();
  v65 = objc_msgSend(v62, "localizedStringForKey:value:table:", v63, v64, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v67 = v66;

  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v102, "systemImageNamed:", v68);

  v100 = v67;
  sub_1007CA770(v69, v57, v58, 0, v61, 0, 0, v59);

  swift_bridgeObjectRelease();
  v70 = sub_100B67218();
  if (qword_1013DDC90 != -1)
    swift_once(&qword_1013DDC90, sub_100B65D10);
  v71 = qword_101480D20;
  if (qword_1013DDC98 != -1)
    swift_once(&qword_1013DDC98, sub_100B65D28);
  v72 = qword_101480D28;
  if (qword_1013DDCA0 != -1)
    swift_once(&qword_1013DDCA0, sub_100B65D38);
  v73 = *(double *)&qword_101480D30;
  if (v1[v103] == 1)
  {
    if (qword_1013DDCB8 != -1)
      swift_once(&qword_1013DDCB8, sub_100B65D70);
    v74 = &qword_101480D48;
  }
  else
  {
    if (qword_1013DDCA8 != -1)
      swift_once(&qword_1013DDCA8, sub_100B65D50);
    v74 = &qword_101480D38;
  }
  v75 = (void *)*v74;
  if (v1[v103] == 1)
  {
    v76 = qword_1013DDCC0;
    v77 = v75;
    if (v76 != -1)
      swift_once(&qword_1013DDCC0, sub_100B65D84);
    v78 = &qword_101480D50;
  }
  else
  {
    v79 = qword_1013DDCB0;
    v80 = v75;
    if (v79 != -1)
      swift_once(&qword_1013DDCB0, sub_100B65D5C);
    v78 = &qword_101480D40;
  }
  v81 = (id)*v78;
  v82 = (id)*v78;
  v83 = String._bridgeToObjectiveC()();
  v84 = objc_msgSend(v102, "systemImageNamed:", v83, v100);

  sub_1007CA770(v84, v71, v72, 0, v75, v81, 0, v73);
  swift_bridgeObjectRelease();

  v85 = sub_100B67280();
  v86 = qword_101480D20;
  v87 = qword_101480D28;
  v88 = *(double *)&qword_101480D30;
  if (v1[v103] == 1)
  {
    if (qword_1013DDCB8 != -1)
      swift_once(&qword_1013DDCB8, sub_100B65D70);
    v89 = &qword_101480D48;
  }
  else
  {
    if (qword_1013DDCA8 != -1)
      swift_once(&qword_1013DDCA8, sub_100B65D50);
    v89 = &qword_101480D38;
  }
  v90 = (void *)*v89;
  if (v1[v103] == 1)
  {
    v91 = qword_1013DDCC0;
    v92 = v90;
    if (v91 != -1)
      swift_once(&qword_1013DDCC0, sub_100B65D84);
    v93 = &qword_101480D50;
  }
  else
  {
    v94 = qword_1013DDCB0;
    v95 = v90;
    if (v94 != -1)
      swift_once(&qword_1013DDCB0, sub_100B65D5C);
    v93 = &qword_101480D40;
  }
  v96 = (id)*v93;
  v97 = (id)*v93;
  v98 = String._bridgeToObjectiveC()();
  v99 = objc_msgSend(v102, "systemImageNamed:", v98, v101);

  sub_1007CA770(v99, v86, v87, 0, v90, v96, 0, v88);
  swift_bridgeObjectRelease();

  sub_100B6B7B4();
}

void sub_100B6B204(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t Strong;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  double *v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  char v22;
  id v23;
  uint64_t v24;
  double *v25;
  double v26;
  double *v27;
  double v28;
  void *v29;
  uint64_t v30;
  void *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v2 = v1;
  LOBYTE(v3) = a1;
  v4 = (void *)objc_opt_self(CRLAccessibility);
  LOBYTE(v5) = objc_msgSend(v4, "isReduceMotionEnabled");
  v45 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState;
  v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState];
  KeyPath = swift_getKeyPath(byte_100F28F80);
  v8 = swift_getKeyPath(byte_100F28FA8);
  v9 = v6;
  static Published.subscript.getter(aBlock, v9, KeyPath, v8);

  swift_release(KeyPath);
  swift_release(v8);
  if ((aBlock[0] & 1) == 0
    && (v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle] & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate]);
    if (Strong)
    {
      v11 = Strong;
      sub_100C2F590(objc_msgSend(v4, "isReduceMotionEnabled") ^ 1, 0, 0);
      swift_unknownObjectRelease(v11);
    }
  }
  v12 = sub_100B67914();
  objc_msgSend(v12, "constant");
  v14 = v13;

  if (qword_1013DDC38 != -1)
    swift_once(&qword_1013DDC38, sub_100B65C20);
  v15 = (double *)&xmmword_101480000;
  v16 = *(double *)&qword_101480CC8;
  v17 = *(void **)&v2[v45];
  v18 = swift_getKeyPath(byte_100F28F80);
  v19 = swift_getKeyPath(byte_100F28FA8);
  v20 = v17;
  static Published.subscript.getter(aBlock, v20, v18, v19);

  swift_release(v18);
  swift_release(v19);
  v21 = 0.0;
  if (LOBYTE(aBlock[0]) != 1)
    goto LABEL_10;
  if (qword_1013DDBE8 != -1)
    goto LABEL_36;
  while (1)
  {
    v21 = *(double *)&qword_101480C78;
LABEL_10:
    if (v14 != v16 + v21)
    {
      v22 = v5 | ~(_BYTE)v3;
      v23 = sub_100B67914();
      v14 = v15[409];
      v15 = *(double **)&v2[v45];
      v5 = swift_getKeyPath(byte_100F28F80);
      v24 = swift_getKeyPath(byte_100F28FA8);
      if ((v22 & 1) != 0)
      {
        v25 = v15;
        static Published.subscript.getter(aBlock, v25, v5, v24);

        swift_release(v5);
        swift_release(v24);
        v26 = 0.0;
        if (LOBYTE(aBlock[0]) == 1)
        {
          if (qword_1013DDBE8 != -1)
            swift_once(&qword_1013DDBE8, sub_100B658F8);
          v26 = *(double *)&qword_101480C78;
        }
        objc_msgSend(v23, "setConstant:", v14 + v26);

      }
      else
      {
        v27 = v15;
        static Published.subscript.getter(aBlock, v27, v5, v24);

        swift_release(v5);
        swift_release(v24);
        v28 = 0.0;
        if (LOBYTE(aBlock[0]) == 1)
        {
          if (qword_1013DDBE8 != -1)
            swift_once(&qword_1013DDBE8, sub_100B658F8);
          v28 = *(double *)&qword_101480C78;
        }
        objc_msgSend(v23, "setConstant:", v14 + v28);

        v29 = (void *)objc_opt_self(UIView);
        v30 = swift_allocObject(&unk_101296238, 24, 7);
        *(_QWORD *)(v30 + 16) = v2;
        aBlock[4] = sub_100B75CA0;
        v47 = v30;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_101296250;
        v31 = _Block_copy(aBlock);
        v5 = v47;
        v32 = v2;
        swift_release(v5);
        objc_msgSend(v29, "animateWithDuration:animations:", v31, 0.3);
        _Block_release(v31);
      }
    }
    v33 = v2;
    v34 = sub_100B67544();
    v35 = v34;
    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v44 = v34;
      else
        v44 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v34);
      v3 = _CocoaArrayWrapper.endIndex.getter(v44);
      if (!v3)
        goto LABEL_34;
    }
    else
    {
      v3 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v34);
      if (!v3)
        goto LABEL_34;
    }
    if (v3 >= 1)
      break;
    __break(1u);
LABEL_36:
    swift_once(&qword_1013DDBE8, sub_100B658F8);
  }
  v36 = 0;
  do
  {
    if ((v35 & 0xC000000000000001) != 0)
      v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v35);
    else
      v37 = *(id *)(v35 + 8 * v36 + 32);
    v38 = v37;
    ++v36;
    v39 = *(void **)&v33[v45];
    v40 = swift_getKeyPath(byte_100F28FC8);
    v41 = swift_getKeyPath(byte_100F28FF0);
    v42 = v39;
    static Published.subscript.getter(aBlock, v42, v40, v41);

    swift_release(v40);
    *(_QWORD *)&v43 = swift_release(v41).n128_u64[0];
    objc_msgSend(v38, "setEnabled:", LOBYTE(aBlock[0]), v43);

  }
  while (v3 != v36);
LABEL_34:
  swift_bridgeObjectRelease_n(v35, 2);
  sub_100B6A308();
  sub_100B6B7B4();
}

void sub_100B6B720(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "superview");

    v4 = objc_msgSend(v3, "superview");
    objc_msgSend(v4, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

void sub_100B6B7B4()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  char v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  KeyPath = swift_getKeyPath(byte_100F28F80);
  v3 = swift_getKeyPath(byte_100F28FA8);
  v4 = v1;
  static Published.subscript.getter(&v12, v4, KeyPath, v3);

  swift_release(KeyPath);
  swift_release(v3);
  if ((v12 & 1) != 0)
    v5 = 0;
  else
    v5 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) ^ 1;
  v6 = sub_100B67218();
  v7 = v5 & 1;
  objc_msgSend(v6, "setAccessibilityElementsHidden:", v7);

  v8 = sub_100B6732C();
  objc_msgSend(v8, "setAccessibilityElementsHidden:", v7);

  v9 = sub_100B67280();
  objc_msgSend(v9, "setAccessibilityElementsHidden:", v7);

  v10 = sub_100B67148();
  sub_100B6B8E4();
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityLabel:", v11, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t sub_100B6B8E4()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  KeyPath = swift_getKeyPath(&unk_100F28F80);
  v3 = swift_getKeyPath(&unk_100F28FA8);
  v4 = v1;
  static Published.subscript.getter(&v11, v4, KeyPath, v3);

  swift_release(KeyPath);
  swift_release(v3);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  return v9;
}

uint64_t sub_100B6BA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v5 + 316) = a5;
  *(_QWORD *)(v5 + 15272) = a4;
  v6 = type metadata accessor for CRLSpringLayerAnimation(0);
  *(_QWORD *)(v5 + 15280) = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 15288) = swift_task_alloc(v7);
  *(_QWORD *)(v5 + 15296) = swift_task_alloc(v7);
  *(_QWORD *)(v5 + 15304) = swift_task_alloc(v7);
  *(_QWORD *)(v5 + 15312) = swift_task_alloc(v7);
  *(_QWORD *)(v5 + 15320) = swift_task_alloc(v7);
  v8 = type metadata accessor for CRLBasicLayerAnimation(0);
  *(_QWORD *)(v5 + 15328) = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 15336) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15344) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15352) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15360) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15368) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15376) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15384) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 15392) = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 15400) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100B6BB68, v11, v12);
}

id sub_100B6BB68()
{
  uint64_t v0;
  uint64_t v1;
  char *Strong;
  char *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  CGFloat MinX;
  double v10;
  CGFloat Width;
  CGFloat Height;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  id result;
  void *v55;
  void *v56;
  double v57;
  CGFloat v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  id v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  _QWORD *v114;
  _QWORD *v115;
  _OWORD *v116;
  id v117;
  void *v118;
  _QWORD *v119;
  uint64_t v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  id v129;
  void *v130;
  uint64_t v131;
  id *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void *v136;
  id v137;
  char *v138;
  char *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  id v143;
  double v144;
  double v145;
  double v146;
  double v147;
  id v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  double *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  Swift::String v162;
  uint64_t v163;
  uint64_t v164;
  double *v165;
  char v166;
  uint64_t v167;
  char v168;
  id v169;
  void *v170;
  double *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  double *v179;
  char v180;
  uint64_t v181;
  char v182;
  id v183;
  void *v184;
  double *v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  double *v193;
  char v194;
  uint64_t v195;
  char v196;
  id v197;
  void *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  void *v202;
  id v203;
  char *v204;
  id v205;
  double v206;
  double v207;
  double v208;
  double v209;
  id v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  double *v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  Swift::String v224;
  double *v225;
  char v226;
  uint64_t v227;
  char v228;
  id v229;
  void *v230;
  double *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  double *v239;
  char v240;
  uint64_t v241;
  char v242;
  id v243;
  void *v244;
  double *v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  double *v253;
  char v254;
  uint64_t v255;
  char v256;
  id v257;
  void *v258;
  double *v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  double *v269;
  double v270;
  uint64_t v271;
  uint64_t v272;
  double v273;
  uint64_t v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  double v280;
  double v281;
  double v282;
  double v283;
  id v284;
  _QWORD *v285;
  uint64_t v286;
  id v287;
  id v288;
  uint64_t v289;
  char *v290;
  id v291;
  double v292;
  double v293;
  double v294;
  double v295;
  id v296;
  _QWORD *v297;
  uint64_t v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int *v306;
  uint64_t v307;
  id v308;
  uint64_t v309;
  uint64_t v310;
  _QWORD *v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  __int128 *v315;
  char v316;
  id v317;
  void *v318;
  double *v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  double *v327;
  char v328;
  uint64_t v329;
  char v330;
  id v331;
  void *v332;
  double *v333;
  unint64_t v334;
  unint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  double *v341;
  char v342;
  uint64_t v343;
  char v344;
  id v345;
  void *v346;
  double *v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  double *v355;
  char v356;
  uint64_t v357;
  __int128 *v358;
  char v359;
  id v360;
  void *v361;
  double *v362;
  unint64_t v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  double *v370;
  char v371;
  uint64_t v372;
  __int128 *v373;
  char v374;
  id v375;
  void *v376;
  double *v377;
  unint64_t v378;
  unint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  double *v385;
  char v386;
  uint64_t v387;
  __int128 *v388;
  char v389;
  id v390;
  void *v391;
  double *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  double *v400;
  char v401;
  uint64_t v402;
  __int128 *v403;
  char v404;
  id v405;
  void *v406;
  double *v407;
  unint64_t v408;
  unint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  double *v415;
  double v416;
  uint64_t v417;
  uint64_t v418;
  double v419;
  uint64_t v420;
  uint64_t v421;
  char v422;
  uint64_t v423;
  id v424;
  void *v425;
  uint64_t v426;
  char *v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  id v434;
  uint64_t v435;
  char *v436;
  id v437;
  double v438;
  double v439;
  double v440;
  double v441;
  id v442;
  _QWORD *v443;
  uint64_t v444;
  uint64_t v445;
  double *v446;
  unint64_t v447;
  unint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  unint64_t v455;
  Swift::String v456;
  double *v457;
  char v458;
  uint64_t v459;
  id v460;
  uint64_t v461;
  char *v462;
  id v463;
  uint64_t v464;
  char *v465;
  id v466;
  double v467;
  double v468;
  double v469;
  double v470;
  id v471;
  _QWORD *v472;
  uint64_t v473;
  uint64_t v474;
  double *v475;
  unint64_t v476;
  unint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  unint64_t v484;
  Swift::String v485;
  uint64_t *v486;
  double *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  id v492;
  uint64_t v493;
  char *v494;
  _QWORD *v495;
  uint64_t v496;
  id v497;
  uint64_t v498;
  char *v499;
  id v500;
  double v501;
  double v502;
  double v503;
  double v504;
  id v505;
  _QWORD *v506;
  uint64_t v507;
  double v508;
  uint64_t v509;
  uint64_t v510;
  double v511;
  double v512;
  uint64_t v513;
  uint64_t v514;
  double v515;
  double v516;
  uint64_t v517;
  uint64_t v518;
  double v519;
  double v520;
  uint64_t v521;
  double v522;
  id v523;
  id v524;
  uint64_t v525;
  char *v526;
  id v527;
  double v528;
  double v529;
  double v530;
  double v531;
  id v532;
  _QWORD *v533;
  uint64_t v534;
  id v535;
  id v536;
  uint64_t v537;
  char *v538;
  id v539;
  double v540;
  double v541;
  double v542;
  double v543;
  id v544;
  _QWORD *v545;
  uint64_t v546;
  id v547;
  id v548;
  uint64_t v549;
  char *v550;
  id v551;
  double v552;
  double v553;
  double v554;
  double v555;
  id v556;
  id v557;
  _QWORD *v558;
  uint64_t v559;
  double v560;
  uint64_t v561;
  uint64_t v562;
  double v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  id v570;
  uint64_t v571;
  char *v572;
  id v573;
  double v574;
  double v575;
  double v576;
  double v577;
  id v578;
  _QWORD *v579;
  uint64_t v580;
  id v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  id v588;
  uint64_t v589;
  char *v590;
  id v591;
  double v592;
  double v593;
  double v594;
  double v595;
  id v596;
  _QWORD *v597;
  uint64_t v598;
  id v599;
  id v600;
  uint64_t v601;
  char *v602;
  id v603;
  double v604;
  double v605;
  double v606;
  double v607;
  id v608;
  _QWORD *v609;
  uint64_t v610;
  id v611;
  id v612;
  uint64_t v613;
  char *v614;
  id v615;
  double v616;
  double v617;
  double v618;
  double v619;
  id v620;
  _QWORD *v621;
  uint64_t v622;
  id v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  id v628;
  uint64_t v629;
  char *v630;
  _QWORD *v631;
  uint64_t v632;
  id v633;
  id v634;
  uint64_t v635;
  char *v636;
  id v637;
  double v638;
  double v639;
  double v640;
  double v641;
  id v642;
  _QWORD *v643;
  uint64_t v644;
  double v645;
  uint64_t v646;
  uint64_t v647;
  double v648;
  double v649;
  uint64_t v650;
  uint64_t v651;
  double v652;
  uint64_t v653;
  _UNKNOWN **v654;
  ValueMetadata *v655;
  void *v656;
  uint64_t v657;
  double *v658;
  id v659;
  uint64_t v660;
  uint64_t v661;
  const void *v662;
  double *v663;
  uint64_t *v664;
  _QWORD *v665;
  const void *v666;
  uint64_t *v667;
  _QWORD *v668;
  const void *v669;
  uint64_t *v670;
  _QWORD *v671;
  const void *v672;
  uint64_t *v673;
  _QWORD *v674;
  const void *v675;
  uint64_t *v676;
  _QWORD *v677;
  const void *v678;
  uint64_t v679;
  uint64_t *v680;
  _QWORD *v681;
  const void *v682;
  _QWORD *v683;
  const void *v684;
  uint64_t *v685;
  _QWORD *v686;
  const void *v687;
  uint64_t *v688;
  _QWORD *v689;
  const void *v690;
  uint64_t *v691;
  _QWORD *v692;
  void *v693;
  void *v694;
  const void *v695;
  uint64_t *v696;
  _QWORD *v697;
  _QWORD *v698;
  void *v699;
  uint64_t v700;
  void *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  __int128 *v708;
  void *v709;
  uint64_t v710;
  uint64_t *v711;
  const void *v712;
  _QWORD *v713;
  __int128 *v714;
  void *v715;
  __int128 *v716;
  _QWORD *v717;
  _OWORD *__src;
  uint64_t v719;
  _OWORD *v720;
  _QWORD *v721;
  uint64_t v722;
  const void *v723;
  uint64_t v724;
  _QWORD *v725;
  __int128 *v726;
  __int128 *v727;
  __int128 *v728;
  _QWORD *v729;
  __int128 *v730;
  __int128 *v731;
  _QWORD *v732;
  __int128 *v733;
  __int128 *v734;
  uint64_t v735;
  const void *v736;
  _QWORD *v737;
  uint64_t *v738;
  _QWORD *v739;
  const void *v740;
  uint64_t *v741;
  _QWORD *v742;
  const void *v743;
  _QWORD *v744;
  double v745;
  double v746;
  double v747;
  double v748;
  double *v749;
  uint64_t v750;
  _QWORD *v751;
  __int128 *v752;
  uint64_t *v753;
  _QWORD *v754;
  __int128 *v755;
  _QWORD *v756;
  __int128 *v757;
  __int128 *v758;
  uint64_t v759;
  _QWORD *v760;
  __int128 *v761;
  __int128 *v762;
  __int128 *v763;
  _QWORD *v764;
  __int128 *v765;
  _QWORD *v766;
  __int128 *v767;
  __int128 *v768;
  uint64_t v769;
  _QWORD *v770;
  __int128 *v771;
  __int128 *v772;
  _QWORD *v773;
  double v774;
  double v775;
  double v776;
  double v777;
  void *v778;
  _QWORD *v779;
  __int128 *v780;
  void *v781;
  __int128 *v782;
  _OWORD *v783;
  _QWORD *v784;
  uint64_t v785;
  id v786;
  const void *v787;
  char *v788;
  uint64_t *v789;
  uint64_t *v790;
  _BYTE *v791;
  _QWORD *v792;
  int v793;
  __int128 *v794;
  uint64_t v795;
  id v796;
  id v797;
  id v798;
  uint64_t v799;
  uint64_t v800;
  __int128 *v801;
  uint64_t v802;
  id v803;
  id v804;
  id v805;
  _QWORD *v806;
  double *v807;
  uint64_t v808;
  __int128 *v809;
  _QWORD *v810;
  __int128 *v811;
  id v812;
  char *v813;
  void *v814;
  char v815;
  uint64_t v816;
  uint64_t v817;
  id v818;
  id v819;
  uint64_t v820;
  _QWORD *v821;
  void *v822;
  __int128 *v823;
  int *v824;
  unint64_t v825;
  _QWORD *v826;
  void *__dst;
  _QWORD *__dsta;
  __int128 *v829;
  uint64_t v830;
  unint64_t v831;
  char v832;
  id v833;
  uint64_t v834;
  _OWORD *v835;
  id v836;
  _QWORD *v837;
  id v838;
  id v839;
  uint64_t v840;
  uint64_t v841;
  id v842;
  uint64_t v843;
  const void *v844;
  void *v845;
  id v846;
  uint64_t v847;
  uint64_t v848;
  _BYTE *v849;
  void (*v850)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  int *v855;
  void *v856;
  uint64_t v857;
  CGFloat v858;
  _QWORD *v859;
  char v860;
  id *v861;
  _QWORD *v862;
  uint64_t v863;
  id *v864;
  uint64_t v865;
  CGFloat v866;
  unint64_t v867;
  id *v868;
  uint64_t v869;
  id *v870;
  CGFloat v871;
  char v872;
  id v873;
  unint64_t v874;
  CGFloat v875;
  id v876;
  id v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  double v881;
  id v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  double v886;
  void *v887;
  uint64_t v888;
  uint64_t v889;
  unint64_t v890;
  double v891;
  uint64_t v892;
  __int128 *v893;
  id *v894;
  uint64_t v895;
  double v896;
  uint64_t v897;
  uint64_t *v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  void *v902;
  id v903;
  uint64_t v904;
  double *v905;
  double *v906;
  unint64_t v907;
  unint64_t v908;
  CGRect v909;
  CGRect v910;
  CGRect v911;
  CGRect v912;

  v1 = *(_QWORD *)(v0 + 15272);
  swift_release(*(_QWORD *)(v0 + 15400));
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController);
  if (!Strong)
    goto LABEL_9;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");
  if (!v4)
  {

LABEL_9:
    v98 = *(_QWORD *)(*(_QWORD *)(v0 + 15272)
                    + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
LABEL_12:
    *(_BYTE *)(v98 + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 0;
LABEL_13:
    v100 = *(_QWORD *)(v0 + 15384);
    v101 = *(_QWORD *)(v0 + 15376);
    v102 = *(_QWORD *)(v0 + 15368);
    v103 = *(_QWORD *)(v0 + 15360);
    v104 = *(_QWORD *)(v0 + 15352);
    v105 = *(_QWORD *)(v0 + 15344);
    v106 = *(_QWORD *)(v0 + 15336);
    v107 = *(_QWORD *)(v0 + 15320);
    v108 = *(_QWORD *)(v0 + 15312);
    v888 = *(_QWORD *)(v0 + 15304);
    v892 = *(_QWORD *)(v0 + 15296);
    v897 = *(_QWORD *)(v0 + 15288);
    swift_task_dealloc(*(_QWORD *)(v0 + 15392));
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v104);
    swift_task_dealloc(v105);
    swift_task_dealloc(v106);
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v888);
    swift_task_dealloc(v892);
    swift_task_dealloc(v897);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = v4;
  v6 = *(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper];
  objc_msgSend(v6, "safeAreaInsets");
  v8 = v7;
  objc_msgSend(v6, "frame");
  MinX = CGRectGetMinX(v909);
  objc_msgSend(v6, "frame");
  v10 = v8 + CGRectGetMinY(v910);
  objc_msgSend(v6, "frame");
  Width = CGRectGetWidth(v911);
  objc_msgSend(v6, "frame");
  Height = CGRectGetHeight(v912);
  *(CGFloat *)(v0 + 15168) = MinX;
  *(double *)(v0 + 15176) = v10;
  *(CGFloat *)(v0 + 15184) = Width;
  *(CGFloat *)(v0 + 15192) = Height - v8;
  *(_BYTE *)(v0 + 15200) = 0;
  v13 = sub_1008657DC(v0 + 15168);
  if (!v13)
  {
LABEL_11:
    v99 = *(_QWORD *)(v0 + 15272);

    v98 = *(_QWORD *)(v99 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = sub_1008657DC(v0 + 15168);
  if (!v15)
  {

    goto LABEL_11;
  }
  v16 = v15;
  v701 = v5;
  v17 = *(void **)(v0 + 15272);
  v18 = sub_100B67084();
  v19 = objc_msgSend(v18, "layer");

  v778 = v6;
  objc_msgSend(v19, "addSublayer:", v14);

  v20 = sub_100B67090();
  v21 = objc_msgSend(v20, "layer");

  objc_msgSend(v21, "addSublayer:", v16);
  objc_msgSend(v6, "bounds");
  v891 = v23;
  v896 = v22;
  v24 = sub_100B6732C();
  objc_msgSend(v24, "bounds");
  v881 = v26;
  v886 = v25;

  v27 = sub_100B6732C();
  objc_msgSend(v27, "bounds");
  v871 = v29;
  v875 = v28;

  v30 = sub_100B6732C();
  objc_msgSend(v30, "bounds");
  v32 = v31;
  v34 = v33;
  v866 = v35;
  v858 = v36;

  objc_msgSend(v6, "frame");
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = objc_msgSend(v17, "view");
  objc_msgSend(v6, "convertRect:toView:", v45, v38, v40, v42, v44);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;

  result = objc_msgSend(v17, "view");
  if (result)
  {
    v55 = result;
    v56 = *(void **)(v0 + 15272);
    v57 = sub_100062E10(v896, v891, v886, v881);
    v59 = sub_1000616BC(v875, v871, v57, v58, v32, v34, v866, v858);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    objc_msgSend(v55, "layoutIfNeeded");

    v66 = sub_100061400(v47, v49, v51, v53);
    v777 = v47;
    v776 = v49;
    v775 = v51;
    v774 = v53;
    sub_100062F48(v47, v49, v51, v53, v66, v67, 0.9);
    v69 = v68;
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = sub_100B6732C();
    v77 = objc_msgSend(v56, "view");
    objc_msgSend(v76, "convertRect:toView:", v77, v59, v61, v63, v65);
    v79 = v78;
    v81 = v80;
    v83 = v82;
    v85 = v84;

    v86 = sub_100061400(v79, v81, v83, v85);
    sub_100062F48(v79, v81, v83, v85, v86, v87, 0.5);
    v704 = v88;
    v705 = v89;
    v706 = v90;
    v707 = v91;
    v92 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v93 = swift_allocObject(v92, 48, 7);
    *(_OWORD *)(v93 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v93 + 32) = sub_100B67084();
    v94 = sub_100B67090();
    *(_QWORD *)(v93 + 40) = v94;
    specialized Array._endMutation()(v94);
    v95 = swift_allocObject(v92, 48, 7);
    *(_OWORD *)(v95 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v95 + 32) = v14;
    *(_QWORD *)(v95 + 40) = v16;
    v907 = v95;
    specialized Array._endMutation()(v95);
    v831 = v907;
    v96 = (void *)objc_opt_self(CATransaction);
    v876 = v14;
    v882 = v16;
    objc_msgSend(v96, "begin");
    v887 = v96;
    objc_msgSend(v96, "setDisableActions:", 1);
    swift_bridgeObjectRetain(v93);
    v904 = v0;
    v825 = v93 & 0xC000000000000001;
    v699 = v3;
    v817 = v93;
    v799 = v93 + 32;
    v748 = v79;
    v747 = v81;
    v746 = v83;
    v745 = v85;
    if ((v93 & 0xC000000000000001) != 0)
      v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v93);
    else
      v97 = *(id *)(v93 + 32);
    v109 = v97;
    objc_msgSend(v97, "setClipsToBounds:", 0);
    v110 = objc_msgSend(v109, "layer");
    if (v110)
    {
      v111 = v110;
      objc_msgSend(v110, "setAnchorPoint:", 0.5, 0.5);
      objc_msgSend(v111, "setFrame:", v777, v776, v775, v774);
      if (qword_1013DDD30 != -1)
        swift_once(&qword_1013DDD30, sub_100B65E74);
      objc_msgSend(v111, "setShadowOffset:", xmmword_101480DC0);

    }
    if (v825)
      v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v93);
    else
      v112 = *(id *)(v93 + 40);
    v113 = v112;
    v849 = (_BYTE *)(v0 + 8776);
    v791 = (_BYTE *)(v0 + 4552);
    v679 = v0 + 4296;
    v789 = (uint64_t *)(v0 + 4560);
    v787 = (const void *)(v0 + 4824);
    v675 = (const void *)(v0 + 5088);
    v691 = (uint64_t *)(v0 + 5352);
    v676 = (uint64_t *)(v0 + 5616);
    v844 = (const void *)(v0 + 5880);
    v672 = (const void *)(v0 + 6144);
    v673 = (uint64_t *)(v0 + 6408);
    v669 = (const void *)(v0 + 6672);
    v670 = (uint64_t *)(v0 + 6936);
    v666 = (const void *)(v0 + 7200);
    v667 = (uint64_t *)(v0 + 7464);
    v662 = (const void *)(v0 + 7728);
    v738 = (uint64_t *)(v0 + 7992);
    v736 = (const void *)(v0 + 8256);
    v664 = (uint64_t *)(v0 + 8520);
    v898 = (uint64_t *)(v0 + 8784);
    v741 = (uint64_t *)(v0 + 9048);
    v740 = (const void *)(v0 + 9312);
    v690 = (const void *)(v0 + 9576);
    v753 = (uint64_t *)(v0 + 9840);
    v743 = (const void *)(v0 + 10104);
    v712 = (const void *)(v0 + 10368);
    v711 = (uint64_t *)(v0 + 10632);
    v696 = (uint64_t *)(v0 + 10896);
    v695 = (const void *)(v0 + 11160);
    v723 = (const void *)(v0 + 11424);
    v722 = v0 + 11688;
    v724 = v0 + 11952;
    v703 = v0 + 12152;
    v733 = (__int128 *)(v0 + 12328);
    v734 = (__int128 *)(v0 + 12368);
    v730 = (__int128 *)(v0 + 12408);
    v731 = (__int128 *)(v0 + 12448);
    v726 = (__int128 *)(v0 + 12488);
    v727 = (__int128 *)(v0 + 12528);
    v752 = (__int128 *)(v0 + 12568);
    v758 = (__int128 *)(v0 + 12608);
    v714 = (__int128 *)(v0 + 12648);
    v728 = (__int128 *)(v0 + 12688);
    v755 = (__int128 *)(v0 + 12728);
    v763 = (__int128 *)(v0 + 12768);
    v114 = (_QWORD *)(v0 + 12808);
    v757 = (__int128 *)(v0 + 12848);
    v859 = (_QWORD *)(v0 + 12888);
    v762 = (__int128 *)(v0 + 12928);
    v821 = (_QWORD *)(v0 + 12968);
    v708 = (__int128 *)(v0 + 13008);
    v716 = (__int128 *)(v0 + 13048);
    v761 = (__int128 *)(v0 + 13088);
    v744 = (_QWORD *)(v0 + 13128);
    v717 = (_QWORD *)(v0 + 13168);
    v742 = (_QWORD *)(v0 + 13208);
    v710 = v0 + 13248;
    v739 = (_QWORD *)(v0 + 13288);
    v806 = (_QWORD *)(v0 + 13328);
    v737 = (_QWORD *)(v0 + 13368);
    v768 = (__int128 *)(v0 + 13408);
    v665 = (_QWORD *)(v0 + 13448);
    v765 = (__int128 *)(v0 + 13488);
    v772 = (__int128 *)(v0 + 13528);
    v668 = (_QWORD *)(v0 + 13568);
    v767 = (__int128 *)(v0 + 13608);
    v782 = (__int128 *)(v0 + 13648);
    v671 = (_QWORD *)(v0 + 13688);
    v771 = (__int128 *)(v0 + 13728);
    v792 = (_QWORD *)(v0 + 13768);
    v674 = (_QWORD *)(v0 + 13808);
    v785 = v0 + 13848;
    v784 = (_QWORD *)(v0 + 13888);
    v677 = (_QWORD *)(v0 + 13928);
    v801 = (__int128 *)(v0 + 13968);
    v780 = (__int128 *)(v0 + 14008);
    v681 = (_QWORD *)(v0 + 14048);
    v811 = (__int128 *)(v0 + 14088);
    v794 = (__int128 *)(v0 + 14128);
    v683 = (_QWORD *)(v0 + 14168);
    v829 = (__int128 *)(v0 + 14208);
    v809 = (__int128 *)(v0 + 14248);
    v686 = (_QWORD *)(v0 + 14288);
    v779 = (_QWORD *)(v0 + 14328);
    v841 = v0 + 14368;
    v689 = (_QWORD *)(v0 + 14408);
    v115 = (_QWORD *)(v0 + 14448);
    v893 = (__int128 *)(v0 + 14488);
    v692 = (_QWORD *)(v0 + 14528);
    v823 = (__int128 *)(v0 + 14568);
    v719 = v0 + 14608;
    v697 = (_QWORD *)(v0 + 14648);
    v698 = (_QWORD *)(v0 + 14688);
    v713 = (_QWORD *)(v0 + 14728);
    v725 = (_QWORD *)(v0 + 14768);
    v729 = (_QWORD *)(v0 + 14808);
    v732 = (_QWORD *)(v0 + 14848);
    v751 = (_QWORD *)(v0 + 14888);
    v754 = (_QWORD *)(v0 + 14928);
    v756 = (_QWORD *)(v0 + 14968);
    v760 = (_QWORD *)(v0 + 15008);
    v764 = (_QWORD *)(v0 + 15048);
    v766 = (_QWORD *)(v0 + 15088);
    v770 = (_QWORD *)(v0 + 15128);
    v769 = v0 + 15208;
    v759 = v0 + 15224;
    v700 = v0 + 15240;
    v702 = v0 + 15256;
    v715 = (void *)(v0 + 16);
    v720 = (_OWORD *)(v0 + 320);
    v709 = (void *)(v0 + 624);
    __src = (_OWORD *)(v0 + 928);
    v116 = (_OWORD *)(v0 + 1232);
    v781 = (void *)(v904 + 1536);
    __dst = (void *)(v904 + 1840);
    v835 = (_OWORD *)(v904 + 2144);
    v687 = (const void *)(v904 + 2448);
    v688 = (uint64_t *)(v904 + 2712);
    v684 = (const void *)(v904 + 2976);
    v685 = (uint64_t *)(v904 + 3240);
    v682 = (const void *)(v904 + 3504);
    v678 = (const void *)(v904 + 4032);
    objc_msgSend(v112, "setClipsToBounds:", 0);
    v117 = objc_msgSend(v113, "layer");
    if (v117)
    {
      v118 = v117;
      objc_msgSend(v117, "setAnchorPoint:", 0.5, 0.5);
      objc_msgSend(v118, "setFrame:", v777, v776, v775, v774);
      if (qword_1013DDD30 != -1)
        swift_once(&qword_1013DDD30, sub_100B65E74);
      objc_msgSend(v118, "setShadowOffset:", xmmword_101480DC0);

    }
    v783 = v116;
    v721 = v114;
    v119 = (_QWORD *)v904;
    v680 = (uint64_t *)(v904 + 3768);

    swift_bridgeObjectRelease();
    v852 = *(_QWORD *)(v904 + 15384);
    v120 = *(_QWORD *)(v904 + 15368);
    v855 = *(int **)(v904 + 15328);
    v121 = v876;
    objc_msgSend(v121, "setMasksToBounds:", 1, swift_bridgeObjectRetain(v907).n128_f64[0]);
    objc_msgSend(v121, "setCornerCurve:", kCACornerCurveContinuous);
    objc_msgSend(v121, "setAllowsEdgeAntialiasing:", 1);
    v694 = v121;

    v122 = v882;
    objc_msgSend(v122, "setMasksToBounds:", 1);
    objc_msgSend(v122, "setCornerCurve:", kCACornerCurveContinuous);
    objc_msgSend(v122, "setAllowsEdgeAntialiasing:", 1);
    v693 = v122;

    objc_msgSend(v887, "commit", swift_bridgeObjectRelease().n128_f64[0]);
    v123 = sub_1004B804C((uint64_t *)&unk_1013F0470);
    v124 = swift_allocObject(v123, 72, 7);
    *(_OWORD *)(v124 + 16) = xmmword_100EF5E40;
    v663 = (double *)v124;
    v661 = v124 + 32;
    v125 = swift_allocObject(v123, 152, 7);
    *(_OWORD *)(v125 + 16) = xmmword_100EF5550;
    v749 = (double *)v125;
    v660 = v125 + 32;
    v750 = v123;
    v126 = swift_allocObject(v123, 312, 7);
    *(_OWORD *)(v126 + 16) = xmmword_100EF7D10;
    v773 = (_QWORD *)v126;
    v735 = v126 + 32;
    v906 = _swiftEmptyArrayStorage;
    v867 = v831 & 0xC000000000000001;
    v813 = (char *)(v831 + 32);
    v857 = v120;
    v856 = (void *)(v120 + 24);
    swift_bridgeObjectRetain(v831);
    v127 = 0;
    v128 = 0;
    v837 = v115;
    do
    {
      v872 = v127;
      if (v867)
        v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v128, v831);
      else
        v129 = *(id *)&v813[8 * v128];
      v130 = v129;
      if (qword_1013DDD20 != -1)
        swift_once(&qword_1013DDD20, sub_100B65E54);
      v131 = qword_101480DB0;
      v119[1098] = 0;
      v119[1099] = v131;
      v849[264] = 14;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v132 = (id *)v119[1924];
      v133 = v119[1923];
      v134 = *(_QWORD *)(v904 + 15376);
      v135 = *(char **)(v904 + 15368);
      v883 = v133;
      v889 = *(_QWORD *)(v904 + 15328);
      v136 = (void *)qword_10147FD68;
      sub_10057E090(v898, (uint64_t)v844);
      v877 = v136;
      v137 = v130;
      UUID.init()(v137);
      v138 = &v135[v855[6]];
      swift_unknownObjectWeakInit(v138);
      v139 = &v135[v855[7]];
      v140 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v141 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 56);
      v141(v139, 1, 1, v140);
      v851 = v140;
      v850 = v141;
      v141(&v135[v855[8]], 1, 1, v140);
      swift_unknownObjectWeakAssign(v138, v137);

      sub_1004E9198(v844, v856);
      *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
      *(_QWORD *)v135 = v877;
      *(_QWORD *)(v857 + 288) = 0;
      *(_DWORD *)(v857 + 296) = 131586;
      sub_10057DE88((uint64_t)v135, v134);
      sub_1004EA730(v898);
      sub_1004B8460(v134, v883, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v852 + 16) = 0x3FCC28F5C28F5C29;
      v142 = v134;
      v119 = (_QWORD *)v904;
      sub_1004B84A4(v142, type metadata accessor for CRLBasicLayerAnimation);
      v143 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v144) = 1036831949;
      LODWORD(v145) = 0.25;
      LODWORD(v146) = 0.25;
      LODWORD(v147) = 1.0;
      v148 = objc_msgSend(v143, "initWithControlPoints::::", v145, v144, v146, v147);
      sub_1004B8460(v883, (uint64_t)v132, type metadata accessor for CRLBasicLayerAnimation);

      *v132 = v148;
      sub_1004B84A4(v883, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 14512) = v889;
      *(_QWORD *)(v904 + 14520) = &off_10126D348;
      v149 = sub_10050D1B0(v893);
      sub_1004B8460((uint64_t)v132, (uint64_t)v149, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 14472) = &type metadata for CRLBasicLayerAnimation.Def;
      v890 = sub_1004EB138();
      *(_QWORD *)(v904 + 14480) = v890;
      v150 = swift_allocObject(&unk_101296198, 316, 7);
      *(_QWORD *)(v904 + 14448) = v150;
      sub_1004E91D4((uint64_t)v149, v150 + 16);
      *(_BYTE *)(sub_1004CB9AC((uint64_t)v837, *(_QWORD *)(v904 + 14472)) + 297) = 0;
      sub_1004E90B0((uint64_t)v837, v841);
      v884 = sub_1004B804C((uint64_t *)&unk_1013F0480);
      if (!swift_dynamicCast(v835, v841, v884, &type metadata for CRLBasicLayerAnimation.Def, 6))
      {
        v160 = *(_QWORD *)(v904 + 15328);
        *v835 = 0u;
        *(_OWORD *)(v904 + 2160) = 0u;
        *(_OWORD *)(v904 + 2176) = 0u;
        *(_OWORD *)(v904 + 2192) = 0u;
        *(_OWORD *)(v904 + 2208) = 0u;
        *(_OWORD *)(v904 + 2224) = 0u;
        *(_OWORD *)(v904 + 2240) = 0u;
        *(_OWORD *)(v904 + 2256) = 0u;
        *(_OWORD *)(v904 + 2272) = 0u;
        *(_OWORD *)(v904 + 2288) = 0u;
        *(_OWORD *)(v904 + 2304) = 0u;
        *(_OWORD *)(v904 + 2320) = 0u;
        *(_OWORD *)(v904 + 2336) = 0u;
        *(_OWORD *)(v904 + 2352) = 0u;
        *(_OWORD *)(v904 + 2368) = 0u;
        *(_OWORD *)(v904 + 2384) = 0u;
        *(_OWORD *)(v904 + 2400) = 0u;
        *(_OWORD *)(v904 + 2416) = 0u;
        *(_OWORD *)(v904 + 2428) = 0u;
        sub_1004CB800((uint64_t)v835, (uint64_t *)&unk_101406CB0);
        v907 = 0;
        v908 = 0xE000000000000000;
        _StringGuts.grow(_:)(69);
        v161 = v908;
        *(_QWORD *)(v904 + 15208) = v907;
        *(_QWORD *)(v904 + 15216) = v161;
        v162._object = (void *)0x8000000100FB4580;
        v162._countAndFlagsBits = 0xD000000000000043;
        String.append(_:)(v162);
        _print_unlocked<A, B>(_:_:)(v149, v769, v160, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v163 = *(_QWORD *)(v904 + 15208);
        v164 = *(_QWORD *)(v904 + 15216);
        return (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v163, v164, "Freeform/CRLBasicLayerAnimation.swift", 37, 2, 52, 0);
      }
      v151 = *(_QWORD *)(v904 + 15392);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v837);
      memcpy(__dst, v835, 0x12CuLL);
      sub_10057DE54((uint64_t)__dst, (uint64_t)v149);
      sub_1004B84A4(v151, type metadata accessor for CRLBasicLayerAnimation);

      if (*(_QWORD *)(v904 + 14512))
      {
        sub_1004DB728(v893, (uint64_t)v823);
        sub_1004DB728(v823, (uint64_t)v859);
        v152 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v152 = (double *)sub_100D0FAB4(0, *((_QWORD *)v152 + 2) + 1, 1, v152);
          v906 = v152;
        }
        v154 = *((_QWORD *)v152 + 2);
        v153 = *((_QWORD *)v152 + 3);
        if (v154 >= v153 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v153 > 1), v154 + 1, 1, v152);
        v155 = *(_QWORD *)(v904 + 12912);
        v156 = *(_QWORD *)(v904 + 12920);
        v157 = sub_1004CB9AC((uint64_t)v859, v155);
        v158 = *(_QWORD *)(v155 - 8);
        v159 = swift_task_alloc((*(_QWORD *)(v158 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16))(v159, v157, v155);
        sub_1005C46A8(v154, v159, (uint64_t *)&v906, v155, v156);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v859);
        swift_task_dealloc(v159);
      }
      else
      {
        sub_1004CB800((uint64_t)v893, (uint64_t *)&unk_1013F0490);
      }
      v127 = 1;
      v128 = 1;
    }
    while ((v872 & 1) == 0);
    swift_bridgeObjectRelease();
    v165 = v906;
    v773[7] = &type metadata for CRLLayerAnimationGroup;
    v773[8] = &off_101271D70;
    v773[4] = v165;
    v773[5] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v166 = 0;
    v167 = 0;
    do
    {
      v168 = v166;
      if (v825)
        v169 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v167, v817);
      else
        v169 = *(id *)(v799 + 8 * v167);
      v170 = v169;
      v907 = (unint64_t)v169;
      sub_100B71B98((void **)&v907, v829, v777, v776, v775, v774, v69, v71, v73, v75);

      if (*(_QWORD *)(v904 + 14232))
      {
        sub_1004DB728(v829, (uint64_t)v809);
        sub_1004DB728(v809, (uint64_t)v821);
        v171 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v171 = (double *)sub_100D0FAB4(0, *((_QWORD *)v171 + 2) + 1, 1, v171);
          v906 = v171;
        }
        v173 = *((_QWORD *)v171 + 2);
        v172 = *((_QWORD *)v171 + 3);
        if (v173 >= v172 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v172 > 1), v173 + 1, 1, v171);
        v174 = *(_QWORD *)(v904 + 12992);
        v175 = *(_QWORD *)(v904 + 13000);
        v176 = sub_1004CB9AC((uint64_t)v821, v174);
        v177 = *(_QWORD *)(v174 - 8);
        v178 = swift_task_alloc((*(_QWORD *)(v177 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 16))(v178, v176, v174);
        sub_1005C46A8(v173, v178, (uint64_t *)&v906, v174, v175);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v821);
        swift_task_dealloc(v178);
      }
      else
      {
        sub_1004CB800((uint64_t)v829, (uint64_t *)&unk_1013F0490);
      }
      v166 = 1;
      v167 = 1;
    }
    while ((v168 & 1) == 0);
    swift_bridgeObjectRelease();
    v179 = v906;
    v773[12] = &type metadata for CRLLayerAnimationGroup;
    v773[13] = &off_101271D70;
    v773[9] = v179;
    v773[10] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v831);
    v180 = 0;
    v181 = 0;
    do
    {
      v182 = v180;
      if (v867)
        v183 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v181, v831);
      else
        v183 = *(id *)&v813[8 * v181];
      v184 = v183;
      v907 = (unint64_t)v183;
      sub_100B72060((void **)&v907, v811);

      if (*(_QWORD *)(v904 + 14112))
      {
        sub_1004DB728(v811, (uint64_t)v794);
        sub_1004DB728(v794, (uint64_t)v806);
        v185 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v185 = (double *)sub_100D0FAB4(0, *((_QWORD *)v185 + 2) + 1, 1, v185);
          v906 = v185;
        }
        v187 = *((_QWORD *)v185 + 2);
        v186 = *((_QWORD *)v185 + 3);
        if (v187 >= v186 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v186 > 1), v187 + 1, 1, v185);
        v188 = *(_QWORD *)(v904 + 13352);
        v189 = *(_QWORD *)(v904 + 13360);
        v190 = sub_1004CB9AC((uint64_t)v806, v188);
        v191 = *(_QWORD *)(v188 - 8);
        v192 = swift_task_alloc((*(_QWORD *)(v191 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 16))(v192, v190, v188);
        sub_1005C46A8(v187, v192, (uint64_t *)&v906, v188, v189);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v806);
        swift_task_dealloc(v192);
      }
      else
      {
        sub_1004CB800((uint64_t)v811, (uint64_t *)&unk_1013F0490);
      }
      v180 = 1;
      v181 = 1;
    }
    while ((v182 & 1) == 0);
    swift_bridgeObjectRelease();
    v193 = v906;
    v773[17] = &type metadata for CRLLayerAnimationGroup;
    v773[18] = &off_101271D70;
    v773[14] = v193;
    v773[15] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v831);
    v194 = 0;
    v195 = 0;
    do
    {
      v860 = v194;
      if (v867)
        v197 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v195, v831);
      else
        v197 = *(id *)&v813[8 * v195];
      v198 = v197;
      if (qword_1013DDD10 != -1)
        swift_once(&qword_1013DDD10, sub_100B65E38);
      v878 = *(_QWORD *)(v904 + 15384);
      v199 = *(_QWORD *)(v904 + 15376);
      v200 = *(char **)(v904 + 15368);
      v894 = *(id **)(v904 + 15360);
      v899 = *(_QWORD *)(v904 + 15328);
      v201 = qword_101480DA0;
      *(_QWORD *)(v904 + 4560) = 0;
      *(_QWORD *)(v904 + 4568) = v201;
      v791[264] = 16;
      v202 = (void *)qword_10147FD68;
      sub_10057E090(v789, (uint64_t)v787);
      v873 = v202;
      v203 = v198;
      UUID.init()(v203);
      v204 = &v200[v855[6]];
      swift_unknownObjectWeakInit(v204);
      v850(&v200[v855[7]], 1, 1, v851);
      v850(&v200[v855[8]], 1, 1, v851);
      swift_unknownObjectWeakAssign(v204, v203);
      v845 = v203;

      sub_1004E9198(v787, v856);
      *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
      *(_QWORD *)v200 = v873;
      *(_QWORD *)(v857 + 288) = 0;
      *(_DWORD *)(v857 + 296) = 131586;
      sub_10057DE88((uint64_t)v200, v199);
      sub_1004EA730(v789);
      sub_1004B8460(v199, v878, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v852 + 16) = 0x3FCC28F5C28F5C29;
      sub_1004B84A4(v199, type metadata accessor for CRLBasicLayerAnimation);
      v205 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v206) = 1036831949;
      LODWORD(v207) = 0.25;
      LODWORD(v208) = 0.25;
      LODWORD(v209) = 1.0;
      v210 = objc_msgSend(v205, "initWithControlPoints::::", v207, v206, v208, v209);
      sub_1004B8460(v878, (uint64_t)v894, type metadata accessor for CRLBasicLayerAnimation);

      *v894 = v210;
      sub_1004B84A4(v878, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 13992) = v899;
      *(_QWORD *)(v904 + 14000) = &off_10126D348;
      v211 = sub_10050D1B0(v801);
      sub_1004B8460((uint64_t)v894, (uint64_t)v211, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 13912) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)(v904 + 13920) = v890;
      v212 = swift_allocObject(&unk_101296198, 316, 7);
      *(_QWORD *)(v904 + 13888) = v212;
      sub_1004E91D4((uint64_t)v211, v212 + 16);
      *(_BYTE *)(sub_1004CB9AC((uint64_t)v784, *(_QWORD *)(v904 + 13912)) + 297) = 0;
      sub_1004E90B0((uint64_t)v784, v785);
      if (!swift_dynamicCast(v783, v785, v884, &type metadata for CRLBasicLayerAnimation.Def, 6))
      {
        v222 = *(_QWORD *)(v904 + 15328);
        *v783 = 0u;
        v783[1] = 0u;
        v783[2] = 0u;
        v783[3] = 0u;
        v783[4] = 0u;
        v783[5] = 0u;
        v783[6] = 0u;
        v783[7] = 0u;
        v783[8] = 0u;
        v783[9] = 0u;
        v783[10] = 0u;
        v783[11] = 0u;
        v783[12] = 0u;
        v783[13] = 0u;
        v783[14] = 0u;
        v783[15] = 0u;
        v783[16] = 0u;
        v783[17] = 0u;
        *(_OWORD *)((char *)v783 + 284) = 0u;
        sub_1004CB800((uint64_t)v783, (uint64_t *)&unk_101406CB0);
        v907 = 0;
        v908 = 0xE000000000000000;
        _StringGuts.grow(_:)(69);
        v223 = v908;
        *(_QWORD *)(v904 + 15224) = v907;
        *(_QWORD *)(v904 + 15232) = v223;
        v224._object = (void *)0x8000000100FB4580;
        v224._countAndFlagsBits = 0xD000000000000043;
        String.append(_:)(v224);
        _print_unlocked<A, B>(_:_:)(v211, v759, v222, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v163 = *(_QWORD *)(v904 + 15224);
        v164 = *(_QWORD *)(v904 + 15232);
        return (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v163, v164, "Freeform/CRLBasicLayerAnimation.swift", 37, 2, 52, 0);
      }
      v213 = *(_QWORD *)(v904 + 15360);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v784);
      memcpy(v781, v783, 0x12CuLL);
      sub_10057DE54((uint64_t)v781, (uint64_t)v211);
      sub_1004B84A4(v213, type metadata accessor for CRLBasicLayerAnimation);

      if (*(_QWORD *)(v904 + 13992))
      {
        sub_1004DB728(v801, (uint64_t)v780);
        sub_1004DB728(v780, (uint64_t)v792);
        v214 = v906;
        v196 = v860;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v214 = (double *)sub_100D0FAB4(0, *((_QWORD *)v214 + 2) + 1, 1, v214);
          v906 = v214;
        }
        v216 = *((_QWORD *)v214 + 2);
        v215 = *((_QWORD *)v214 + 3);
        if (v216 >= v215 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v215 > 1), v216 + 1, 1, v214);
        v217 = *(_QWORD *)(v904 + 13792);
        v218 = *(_QWORD *)(v904 + 13800);
        v219 = sub_1004CB9AC((uint64_t)v792, v217);
        v220 = *(_QWORD *)(v217 - 8);
        v221 = swift_task_alloc((*(_QWORD *)(v220 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 16))(v221, v219, v217);
        sub_1005C46A8(v216, v221, (uint64_t *)&v906, v217, v218);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v792);
        swift_task_dealloc(v221);
      }
      else
      {
        sub_1004CB800((uint64_t)v801, (uint64_t *)&unk_1013F0490);
        v196 = v860;
      }
      v194 = 1;
      v195 = 1;
    }
    while ((v196 & 1) == 0);
    swift_bridgeObjectRelease();
    v225 = v906;
    v773[22] = &type metadata for CRLLayerAnimationGroup;
    v773[23] = &off_101271D70;
    v773[19] = v225;
    v773[20] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v226 = 0;
    v227 = 0;
    do
    {
      v228 = v226;
      if (v825)
        v229 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v227, v817);
      else
        v229 = *(id *)(v799 + 8 * v227);
      v230 = v229;
      v907 = (unint64_t)v229;
      sub_100B723D8((void **)&v907, v782);

      if (*(_QWORD *)(v904 + 13672))
      {
        sub_1004DB728(v782, (uint64_t)v771);
        sub_1004DB728(v771, (uint64_t)v779);
        v231 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v231 = (double *)sub_100D0FAB4(0, *((_QWORD *)v231 + 2) + 1, 1, v231);
          v906 = v231;
        }
        v233 = *((_QWORD *)v231 + 2);
        v232 = *((_QWORD *)v231 + 3);
        if (v233 >= v232 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v232 > 1), v233 + 1, 1, v231);
        v234 = *(_QWORD *)(v904 + 14352);
        v235 = *(_QWORD *)(v904 + 14360);
        v236 = sub_1004CB9AC((uint64_t)v779, v234);
        v237 = *(_QWORD *)(v234 - 8);
        v238 = swift_task_alloc((*(_QWORD *)(v237 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v238, v236, v234);
        sub_1005C46A8(v233, v238, (uint64_t *)&v906, v234, v235);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v779);
        swift_task_dealloc(v238);
      }
      else
      {
        sub_1004CB800((uint64_t)v782, (uint64_t *)&unk_1013F0490);
      }
      v226 = 1;
      v227 = 1;
    }
    while ((v228 & 1) == 0);
    swift_bridgeObjectRelease();
    v239 = v906;
    v773[27] = &type metadata for CRLLayerAnimationGroup;
    v773[28] = &off_101271D70;
    v773[24] = v239;
    v773[25] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v240 = 0;
    v241 = 0;
    do
    {
      v242 = v240;
      if (v825)
        v243 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v241, v817);
      else
        v243 = *(id *)(v799 + 8 * v241);
      v244 = v243;
      v907 = (unint64_t)v243;
      sub_100B72838((void **)&v907, v772);

      if (*(_QWORD *)(v904 + 13552))
      {
        sub_1004DB728(v772, (uint64_t)v767);
        sub_1004DB728(v767, (uint64_t)v770);
        v245 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v245 = (double *)sub_100D0FAB4(0, *((_QWORD *)v245 + 2) + 1, 1, v245);
          v906 = v245;
        }
        v247 = *((_QWORD *)v245 + 2);
        v246 = *((_QWORD *)v245 + 3);
        if (v247 >= v246 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v246 > 1), v247 + 1, 1, v245);
        v248 = *(_QWORD *)(v904 + 15152);
        v249 = *(_QWORD *)(v904 + 15160);
        v250 = sub_1004CB9AC((uint64_t)v770, v248);
        v251 = *(_QWORD *)(v248 - 8);
        v252 = swift_task_alloc((*(_QWORD *)(v251 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v251 + 16))(v252, v250, v248);
        sub_1005C46A8(v247, v252, (uint64_t *)&v906, v248, v249);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v770);
        swift_task_dealloc(v252);
      }
      else
      {
        sub_1004CB800((uint64_t)v772, (uint64_t *)&unk_1013F0490);
      }
      v240 = 1;
      v241 = 1;
    }
    while ((v242 & 1) == 0);
    swift_bridgeObjectRelease();
    v253 = v906;
    v773[32] = &type metadata for CRLLayerAnimationGroup;
    v773[33] = &off_101271D70;
    v773[29] = v253;
    v773[30] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v254 = 0;
    v255 = 0;
    do
    {
      v256 = v254;
      if (v825)
        v257 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v255, v817);
      else
        v257 = *(id *)(v799 + 8 * v255);
      v258 = v257;
      v907 = (unint64_t)v257;
      sub_100B72C20((void **)&v907, v768);

      if (*(_QWORD *)(v904 + 13432))
      {
        sub_1004DB728(v768, (uint64_t)v765);
        sub_1004DB728(v765, (uint64_t)v766);
        v259 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v259 = (double *)sub_100D0FAB4(0, *((_QWORD *)v259 + 2) + 1, 1, v259);
          v906 = v259;
        }
        v261 = *((_QWORD *)v259 + 2);
        v260 = *((_QWORD *)v259 + 3);
        if (v261 >= v260 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v260 > 1), v261 + 1, 1, v259);
        v262 = *(_QWORD *)(v904 + 15112);
        v263 = *(_QWORD *)(v904 + 15120);
        v264 = sub_1004CB9AC((uint64_t)v766, v262);
        v265 = *(_QWORD *)(v262 - 8);
        v266 = swift_task_alloc((*(_QWORD *)(v265 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 16))(v266, v264, v262);
        sub_1005C46A8(v261, v266, (uint64_t *)&v906, v262, v263);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v766);
        swift_task_dealloc(v266);
      }
      else
      {
        sub_1004CB800((uint64_t)v768, (uint64_t *)&unk_1013F0490);
      }
      v254 = 1;
      v255 = 1;
    }
    while ((v256 & 1) == 0);
    v861 = *(id **)(v904 + 15384);
    v895 = *(_QWORD *)(v904 + 15376);
    v267 = *(char **)(v904 + 15368);
    v268 = *(_QWORD *)(v904 + 15352);
    v879 = *(_QWORD *)(v904 + 15328);
    swift_bridgeObjectRelease();
    v269 = v906;
    v773[37] = &type metadata for CRLLayerAnimationGroup;
    v773[38] = &off_101271D70;
    v773[34] = v269;
    v773[35] = 0;
    v270 = sub_10060CD0C((uint64_t)v773, 0.0);
    v272 = v271;
    v273 = v270;
    swift_setDeallocating(v773);
    v274 = v773[2];
    v830 = sub_1004B804C((uint64_t *)&unk_1013F0490);
    swift_arrayDestroy(v735, v274, v830);
    swift_deallocClassInstance(v773, 32, 7);
    *((_QWORD *)v749 + 7) = &type metadata for CRLLayerAnimationGroup;
    *((_QWORD *)v749 + 8) = &off_101271D70;
    *((_QWORD *)v749 + 4) = v272;
    v749[5] = v273;
    v900 = swift_allocObject(v750, 432, 7);
    *(_OWORD *)(v900 + 16) = xmmword_100F07C80;
    v838 = sub_100B67084();
    *(_QWORD *)(v904 + 7992) = 0x3F80000000000000;
    v791[3696] = 6;
    v842 = (id)qword_10147FD68;
    v275 = objc_msgSend(v838, "layer");
    v276 = sub_10057E090(v738, (uint64_t)v736);
    UUID.init()(v276);
    v277 = v268 + v855[6];
    swift_unknownObjectWeakInit(v277);
    v850((char *)(v268 + v855[7]), 1, 1, v851);
    v850((char *)(v268 + v855[8]), 1, 1, v851);
    swift_unknownObjectWeakAssign(v277, v275);

    sub_1004E9198(v736, (void *)(v268 + 24));
    *(_OWORD *)(v268 + 8) = xmmword_100EF6400;
    *(_QWORD *)v268 = v842;
    *(_QWORD *)(v268 + 288) = 0;
    *(_DWORD *)(v268 + 296) = 131586;
    sub_1004EA730(v738);
    sub_1004B8460(v268, (uint64_t)v267, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13392) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13400) = v890;
    v278 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13368) = v278;
    sub_1004E91D4((uint64_t)v267, v278 + 16);
    *(_QWORD *)(sub_1004CB9AC((uint64_t)v737, *(_QWORD *)(v904 + 13392)) + 8) = 0x3FA999999999999ALL;
    sub_10057CE2C(v737);
    sub_1004B84A4(v268, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B8460((uint64_t)v267, v895, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FA47AE147AE147BLL;
    sub_1004B84A4((uint64_t)v267, type metadata accessor for CRLBasicLayerAnimation);
    v279 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v280) = 0.25;
    LODWORD(v281) = 0.25;
    LODWORD(v282) = 1.0;
    LODWORD(v283) = 1036831949;
    v284 = objc_msgSend(v279, "initWithControlPoints::::", v280, v283, v281, v282);
    sub_1004B8460(v895, (uint64_t)v861, type metadata accessor for CRLBasicLayerAnimation);

    *v861 = v284;
    sub_1004B84A4(v895, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v900 + 56) = v879;
    *(_QWORD *)(v900 + 64) = &off_10126D348;
    v285 = sub_10050D1B0((_QWORD *)(v900 + 32));
    sub_1004B8460((uint64_t)v861, (uint64_t)v285, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13312) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13320) = v890;
    v286 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13288) = v286;
    sub_1004E91D4((uint64_t)v285, v286 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v739, *(_QWORD *)(v904 + 13312)) + 297) = 0;
    sub_10057CE2C(v739);
    sub_1004B84A4((uint64_t)v861, type metadata accessor for CRLBasicLayerAnimation);
    v287 = sub_100B6732C();
    *(_QWORD *)(v904 + 9048) = 1065353216;
    v849[528] = 6;
    v839 = (id)qword_10147FD68;
    v288 = objc_msgSend(v287, "layer");
    v289 = sub_10057E090(v741, (uint64_t)v740);
    UUID.init()(v289);
    v290 = &v267[v855[6]];
    swift_unknownObjectWeakInit(v290);
    v850(&v267[v855[7]], 1, 1, v851);
    v850(&v267[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v290, v288);

    sub_1004E9198(v740, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v267 = v839;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v741);
    sub_1004B8460((uint64_t)v267, v895, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FA47AE147AE147BLL;
    sub_1004B84A4((uint64_t)v267, type metadata accessor for CRLBasicLayerAnimation);
    v291 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v292) = 0.25;
    LODWORD(v293) = 0.25;
    LODWORD(v294) = 1.0;
    LODWORD(v295) = 1036831949;
    v296 = objc_msgSend(v291, "initWithControlPoints::::", v292, v295, v293, v294);
    sub_1004B8460(v895, (uint64_t)v861, type metadata accessor for CRLBasicLayerAnimation);

    *v861 = v296;
    sub_1004B84A4(v895, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v900 + 96) = v879;
    *(_QWORD *)(v900 + 104) = &off_10126D348;
    v297 = sub_10050D1B0((_QWORD *)(v900 + 72));
    sub_1004B8460((uint64_t)v861, (uint64_t)v297, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13232) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13240) = v890;
    v298 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13208) = v298;
    sub_1004E91D4((uint64_t)v297, v298 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v742, *(_QWORD *)(v904 + 13232)) + 297) = 0;
    sub_10057CE2C(v742);
    sub_1004B84A4((uint64_t)v861, type metadata accessor for CRLBasicLayerAnimation);
    v299 = sub_100B6732C();
    *(_OWORD *)(v904 + 9840) = xmmword_100EED070;
    *(_OWORD *)(v904 + 9856) = 0u;
    v849[1096] = 1;
    *(_QWORD *)(v904 + 9880) = 0;
    v849[1112] = 2;
    v849[1320] = 58;
    if (qword_1013DD410 != -1)
      swift_once(&qword_1013DD410, sub_1008D3D08);
    v300 = qword_10147FD70;
    if (qword_1013DD418 != -1)
      swift_once(&qword_1013DD418, sub_1008D3D18);
    v301 = qword_10147FD78;
    if (qword_1013DD420 != -1)
      swift_once(&qword_1013DD420, sub_1008D3D24);
    v302 = qword_10147FD80;
    if (qword_1013DD428 != -1)
      swift_once(&qword_1013DD428, sub_1008D3D34);
    v880 = *(_QWORD *)(v904 + 15320);
    v862 = *(_QWORD **)(v904 + 15312);
    v303 = *(_QWORD *)(v904 + 15304);
    v304 = *(_QWORD *)(v904 + 15296);
    v305 = *(_QWORD *)(v904 + 15288);
    v306 = *(int **)(v904 + 15280);
    v307 = qword_10147FD88;
    v308 = objc_msgSend(v299, "layer");
    v309 = sub_10057E090(v753, (uint64_t)v743);
    UUID.init()(v309);
    v310 = v305 + v306[6];
    swift_unknownObjectWeakInit(v310);
    v850((char *)(v305 + v306[7]), 1, 1, v851);
    v850((char *)(v305 + v306[8]), 1, 1, v851);
    swift_unknownObjectWeakAssign(v310, v308);

    v822 = (void *)(v305 + 40);
    sub_1004E9198(v743, (void *)(v305 + 40));

    *(_QWORD *)(v305 + 32) = 0;
    *(_QWORD *)v305 = v300;
    *(_QWORD *)(v305 + 8) = v301;
    *(_QWORD *)(v305 + 16) = v302;
    *(_QWORD *)(v305 + 24) = v307;
    *(_QWORD *)(v305 + 304) = 0;
    *(_DWORD *)(v305 + 312) = 131586;
    sub_1004EA730(v753);
    sub_1004B8460(v305, v304, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v304 + 16) = 0x3FF0000000000000;
    __dsta = (_QWORD *)v305;
    sub_1004B84A4(v305, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v304, v303, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v303 + 24) = 0x406F400000000000;
    v840 = v304;
    sub_1004B84A4(v304, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v303, (uint64_t)v862, type metadata accessor for CRLSpringLayerAnimation);
    *v862 = 0x4040000000000000;
    v843 = v303;
    sub_1004B84A4(v303, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460((uint64_t)v862, v880, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v880 + 8) = 0x3FF0000000000000;
    sub_1004B84A4((uint64_t)v862, type metadata accessor for CRLSpringLayerAnimation);
    v824 = v306;
    *(_QWORD *)(v900 + 136) = v306;
    *(_QWORD *)(v900 + 144) = &off_1012A12B8;
    v311 = sub_10050D1B0((_QWORD *)(v900 + 112));
    sub_1004B8460(v880, (uint64_t)v311, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v904 + 13152) = &type metadata for CRLSpringLayerAnimation.Def;
    v874 = sub_100553914();
    *(_QWORD *)(v904 + 13160) = v874;
    v312 = swift_allocObject(&unk_1012961C0, 332, 7);
    *(_QWORD *)(v904 + 13128) = v312;
    sub_100720EB4((uint64_t)v311, v312 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v744, *(_QWORD *)(v904 + 13152)) + 313) = 0;
    sub_100D26E34(v744);
    sub_1004B84A4(v880, type metadata accessor for CRLSpringLayerAnimation);
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v313 = 0;
    v314 = 0;
    v315 = v762;
    do
    {
      v316 = v313;
      if (v825)
        v317 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v314, v817);
      else
        v317 = *(id *)(v799 + 8 * v314);
      v318 = v317;
      v907 = (unint64_t)v317;
      sub_100B73034((void **)&v907, v315, v69, v71, v73, v75, v748, v747, v746, v745);

      if (*(_QWORD *)(v904 + 12952))
      {
        sub_1004DB728(v315, (uint64_t)v761);
        sub_1004DB728(v761, (uint64_t)v764);
        v319 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v319 = (double *)sub_100D0FAB4(0, *((_QWORD *)v319 + 2) + 1, 1, v319);
          v906 = v319;
        }
        v321 = *((_QWORD *)v319 + 2);
        v320 = *((_QWORD *)v319 + 3);
        if (v321 >= v320 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v320 > 1), v321 + 1, 1, v319);
        v322 = *(_QWORD *)(v904 + 15072);
        v323 = *(_QWORD *)(v904 + 15080);
        v324 = sub_1004CB9AC((uint64_t)v764, v322);
        v325 = *(_QWORD *)(v322 - 8);
        v326 = swift_task_alloc((*(_QWORD *)(v325 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v325 + 16))(v326, v324, v322);
        sub_1005C46A8(v321, v326, (uint64_t *)&v906, v322, v323);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v764);
        swift_task_dealloc(v326);
        v315 = v762;
      }
      else
      {
        sub_1004CB800((uint64_t)v315, (uint64_t *)&unk_1013F0490);
      }
      v313 = 1;
      v314 = 1;
    }
    while ((v316 & 1) == 0);
    swift_bridgeObjectRelease();
    v327 = v906;
    *(_QWORD *)(v900 + 176) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 184) = &off_101271D70;
    *(_QWORD *)(v900 + 152) = v327;
    *(_QWORD *)(v900 + 160) = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v831);
    v328 = 0;
    v329 = 0;
    do
    {
      v330 = v328;
      if (v867)
        v331 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v329, v831);
      else
        v331 = *(id *)&v813[8 * v329];
      v332 = v331;
      v907 = (unint64_t)v331;
      sub_100B734FC((void **)&v907, v763);

      if (*(_QWORD *)(v904 + 12792))
      {
        sub_1004DB728(v763, (uint64_t)v757);
        sub_1004DB728(v757, (uint64_t)v760);
        v333 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v333 = (double *)sub_100D0FAB4(0, *((_QWORD *)v333 + 2) + 1, 1, v333);
          v906 = v333;
        }
        v335 = *((_QWORD *)v333 + 2);
        v334 = *((_QWORD *)v333 + 3);
        if (v335 >= v334 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v334 > 1), v335 + 1, 1, v333);
        v336 = *(_QWORD *)(v904 + 15032);
        v337 = *(_QWORD *)(v904 + 15040);
        v338 = sub_1004CB9AC((uint64_t)v760, v336);
        v339 = *(_QWORD *)(v336 - 8);
        v340 = swift_task_alloc((*(_QWORD *)(v339 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v339 + 16))(v340, v338, v336);
        sub_1005C46A8(v335, v340, (uint64_t *)&v906, v336, v337);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v760);
        swift_task_dealloc(v340);
      }
      else
      {
        sub_1004CB800((uint64_t)v763, (uint64_t *)&unk_1013F0490);
      }
      v328 = 1;
      v329 = 1;
    }
    while ((v330 & 1) == 0);
    swift_bridgeObjectRelease();
    v341 = v906;
    *(_QWORD *)(v900 + 216) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 224) = &off_101271D70;
    *(_QWORD *)(v900 + 192) = v341;
    *(_QWORD *)(v900 + 200) = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v831);
    v342 = 0;
    v343 = 0;
    do
    {
      v344 = v342;
      if (v867)
        v345 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v343, v831);
      else
        v345 = *(id *)&v813[8 * v343];
      v346 = v345;
      v907 = (unint64_t)v345;
      sub_100B7392C((void **)&v907, v758);

      if (*(_QWORD *)(v904 + 12632))
      {
        sub_1004DB728(v758, (uint64_t)v755);
        sub_1004DB728(v755, (uint64_t)v756);
        v347 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v347 = (double *)sub_100D0FAB4(0, *((_QWORD *)v347 + 2) + 1, 1, v347);
          v906 = v347;
        }
        v349 = *((_QWORD *)v347 + 2);
        v348 = *((_QWORD *)v347 + 3);
        if (v349 >= v348 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v348 > 1), v349 + 1, 1, v347);
        v350 = *(_QWORD *)(v904 + 14992);
        v351 = *(_QWORD *)(v904 + 15000);
        v352 = sub_1004CB9AC((uint64_t)v756, v350);
        v353 = *(_QWORD *)(v350 - 8);
        v354 = swift_task_alloc((*(_QWORD *)(v353 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v353 + 16))(v354, v352, v350);
        sub_1005C46A8(v349, v354, (uint64_t *)&v906, v350, v351);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v756);
        swift_task_dealloc(v354);
      }
      else
      {
        sub_1004CB800((uint64_t)v758, (uint64_t *)&unk_1013F0490);
      }
      v342 = 1;
      v343 = 1;
    }
    while ((v344 & 1) == 0);
    swift_bridgeObjectRelease();
    v355 = v906;
    *(_QWORD *)(v900 + 256) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 264) = &off_101271D70;
    *(_QWORD *)(v900 + 232) = v355;
    *(_QWORD *)(v900 + 240) = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v831);
    v356 = 0;
    v357 = 0;
    v358 = (__int128 *)(v904 + 12288);
    do
    {
      v359 = v356;
      if (v867)
        v360 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v357, v831);
      else
        v360 = *(id *)&v813[8 * v357];
      v361 = v360;
      v907 = (unint64_t)v360;
      sub_100B73D84((void **)&v907, v358);

      if (*(_QWORD *)(v904 + 12312))
      {
        sub_1004DB728(v358, (uint64_t)v752);
        sub_1004DB728(v752, (uint64_t)v754);
        v362 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v362 = (double *)sub_100D0FAB4(0, *((_QWORD *)v362 + 2) + 1, 1, v362);
          v906 = v362;
        }
        v364 = *((_QWORD *)v362 + 2);
        v363 = *((_QWORD *)v362 + 3);
        if (v364 >= v363 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v363 > 1), v364 + 1, 1, v362);
        v365 = *(_QWORD *)(v904 + 14952);
        v366 = *(_QWORD *)(v904 + 14960);
        v367 = sub_1004CB9AC((uint64_t)v754, v365);
        v368 = *(_QWORD *)(v365 - 8);
        v369 = swift_task_alloc((*(_QWORD *)(v368 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v368 + 16))(v369, v367, v365);
        sub_1005C46A8(v364, v369, (uint64_t *)&v906, v365, v366);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v754);
        swift_task_dealloc(v369);
        v358 = (__int128 *)(v904 + 12288);
      }
      else
      {
        sub_1004CB800((uint64_t)v358, (uint64_t *)&unk_1013F0490);
      }
      v356 = 1;
      v357 = 1;
    }
    while ((v359 & 1) == 0);
    swift_bridgeObjectRelease_n(v831, 2);
    v370 = v906;
    *(_QWORD *)(v900 + 296) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 304) = &off_101271D70;
    *(_QWORD *)(v900 + 272) = v370;
    *(_QWORD *)(v900 + 280) = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v371 = 0;
    v372 = 0;
    v373 = v734;
    do
    {
      v374 = v371;
      if (v825)
        v375 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v372, v817);
      else
        v375 = *(id *)(v799 + 8 * v372);
      v376 = v375;
      v907 = (unint64_t)v375;
      sub_100B741B4((void **)&v907, v373);

      if (*(_QWORD *)(v904 + 12392))
      {
        sub_1004DB728(v373, (uint64_t)v733);
        sub_1004DB728(v733, (uint64_t)v751);
        v377 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v377 = (double *)sub_100D0FAB4(0, *((_QWORD *)v377 + 2) + 1, 1, v377);
          v906 = v377;
        }
        v379 = *((_QWORD *)v377 + 2);
        v378 = *((_QWORD *)v377 + 3);
        if (v379 >= v378 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v378 > 1), v379 + 1, 1, v377);
        v380 = *(_QWORD *)(v904 + 14912);
        v381 = *(_QWORD *)(v904 + 14920);
        v382 = sub_1004CB9AC((uint64_t)v751, v380);
        v383 = *(_QWORD *)(v380 - 8);
        v384 = swift_task_alloc((*(_QWORD *)(v383 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v383 + 16))(v384, v382, v380);
        sub_1005C46A8(v379, v384, (uint64_t *)&v906, v380, v381);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v751);
        swift_task_dealloc(v384);
        v373 = v734;
      }
      else
      {
        sub_1004CB800((uint64_t)v373, (uint64_t *)&unk_1013F0490);
      }
      v371 = 1;
      v372 = 1;
    }
    while ((v374 & 1) == 0);
    swift_bridgeObjectRelease();
    v385 = v906;
    *(_QWORD *)(v900 + 336) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 344) = &off_101271D70;
    *(_QWORD *)(v900 + 312) = v385;
    *(_QWORD *)(v900 + 320) = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v386 = 0;
    v387 = 0;
    v388 = v731;
    do
    {
      v389 = v386;
      if (v825)
        v390 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v387, v817);
      else
        v390 = *(id *)(v799 + 8 * v387);
      v391 = v390;
      v907 = (unint64_t)v390;
      sub_100B7461C((void **)&v907, v388);

      if (*(_QWORD *)(v904 + 12472))
      {
        sub_1004DB728(v388, (uint64_t)v730);
        sub_1004DB728(v730, (uint64_t)v732);
        v392 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v392 = (double *)sub_100D0FAB4(0, *((_QWORD *)v392 + 2) + 1, 1, v392);
          v906 = v392;
        }
        v394 = *((_QWORD *)v392 + 2);
        v393 = *((_QWORD *)v392 + 3);
        if (v394 >= v393 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v393 > 1), v394 + 1, 1, v392);
        v395 = *(_QWORD *)(v904 + 14872);
        v396 = *(_QWORD *)(v904 + 14880);
        v397 = sub_1004CB9AC((uint64_t)v732, v395);
        v398 = *(_QWORD *)(v395 - 8);
        v399 = swift_task_alloc((*(_QWORD *)(v398 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v398 + 16))(v399, v397, v395);
        sub_1005C46A8(v394, v399, (uint64_t *)&v906, v395, v396);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v732);
        swift_task_dealloc(v399);
        v388 = v731;
      }
      else
      {
        sub_1004CB800((uint64_t)v388, (uint64_t *)&unk_1013F0490);
      }
      v386 = 1;
      v387 = 1;
    }
    while ((v389 & 1) == 0);
    swift_bridgeObjectRelease();
    v400 = v906;
    *(_QWORD *)(v900 + 376) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 384) = &off_101271D70;
    *(_QWORD *)(v900 + 352) = v400;
    *(_QWORD *)(v900 + 360) = 0;
    v905 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v401 = 0;
    v402 = 0;
    v403 = v727;
    do
    {
      v404 = v401;
      if (v825)
        v405 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v402, v817);
      else
        v405 = *(id *)(v799 + 8 * v402);
      v406 = v405;
      v907 = (unint64_t)v405;
      sub_100B74A00((void **)&v907, v403);

      if (*(_QWORD *)(v904 + 12552))
      {
        sub_1004DB728(v403, (uint64_t)v726);
        sub_1004DB728(v726, (uint64_t)v729);
        v407 = v905;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v407 = (double *)sub_100D0FAB4(0, *((_QWORD *)v407 + 2) + 1, 1, v407);
          v905 = v407;
        }
        v409 = *((_QWORD *)v407 + 2);
        v408 = *((_QWORD *)v407 + 3);
        if (v409 >= v408 >> 1)
          v905 = (double *)sub_100D0FAB4((_QWORD *)(v408 > 1), v409 + 1, 1, v407);
        v410 = *(_QWORD *)(v904 + 14832);
        v411 = *(_QWORD *)(v904 + 14840);
        v412 = sub_1004CB9AC((uint64_t)v729, v410);
        v413 = *(_QWORD *)(v410 - 8);
        v414 = swift_task_alloc((*(_QWORD *)(v413 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v413 + 16))(v414, v412, v410);
        sub_1005C46A8(v409, v414, (uint64_t *)&v905, v410, v411);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v729);
        swift_task_dealloc(v414);
        v403 = v727;
      }
      else
      {
        sub_1004CB800((uint64_t)v403, (uint64_t *)&unk_1013F0490);
      }
      v401 = 1;
      v402 = 1;
    }
    while ((v404 & 1) == 0);
    swift_bridgeObjectRelease();
    v415 = v905;
    *(_QWORD *)(v900 + 416) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v900 + 424) = &off_101271D70;
    *(_QWORD *)(v900 + 392) = v415;
    *(_QWORD *)(v900 + 400) = 0;
    v416 = sub_10060CD0C(v900, 0.0);
    v418 = v417;
    v419 = v416;
    swift_setDeallocating(v900);
    swift_arrayDestroy(v900 + 32, *(_QWORD *)(v900 + 16), v830);
    swift_deallocClassInstance(v900, 32, 7);
    *((_QWORD *)v749 + 12) = &type metadata for CRLLayerAnimationGroup;
    *((_QWORD *)v749 + 13) = &off_101271D70;
    *((_QWORD *)v749 + 9) = v418;
    v749[10] = v419;
    v420 = swift_allocObject(v750, 72, 7);
    *(_OWORD *)(v420 + 16) = xmmword_100EF5E40;
    v807 = (double *)v420;
    v802 = v420 + 32;
    v421 = swift_allocObject(v750, 192, 7);
    *(_OWORD *)(v421 + 16) = xmmword_100EF5E30;
    v810 = (_QWORD *)v421;
    v795 = v421 + 32;
    v906 = _swiftEmptyArrayStorage;
    sub_100B75C08(v703);
    *(double *)(v904 + 11952) = v748;
    *(double *)(v904 + 11960) = v747;
    *(double *)(v904 + 11968) = v746;
    *(double *)(v904 + 11976) = v745;
    *(_QWORD *)(v904 + 11984) = v704;
    *(_QWORD *)(v904 + 11992) = v705;
    *(_QWORD *)(v904 + 12000) = v706;
    *(_QWORD *)(v904 + 12008) = v707;
    sub_10056B6C4(v703, v904 + 12016);
    swift_bridgeObjectRetain(v817);
    v422 = 0;
    v423 = 0;
    do
    {
      v832 = v422;
      if (v825)
        v424 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v423, v817);
      else
        v424 = *(id *)(v799 + 8 * v423);
      v425 = v424;
      v863 = *(_QWORD *)(v904 + 15384);
      v426 = *(_QWORD *)(v904 + 15376);
      v427 = *(char **)(v904 + 15368);
      v868 = *(id **)(v904 + 15344);
      v901 = *(_QWORD *)(v904 + 15328);
      v428 = *(_OWORD *)(v724 + 176);
      *(_OWORD *)(v722 + 160) = *(_OWORD *)(v724 + 160);
      *(_OWORD *)(v722 + 176) = v428;
      *(_BYTE *)(v722 + 192) = *(_BYTE *)(v724 + 192);
      v429 = *(_OWORD *)(v724 + 112);
      *(_OWORD *)(v722 + 96) = *(_OWORD *)(v724 + 96);
      *(_OWORD *)(v722 + 112) = v429;
      v430 = *(_OWORD *)(v724 + 144);
      *(_OWORD *)(v722 + 128) = *(_OWORD *)(v724 + 128);
      *(_OWORD *)(v722 + 144) = v430;
      v431 = *(_OWORD *)(v724 + 48);
      *(_OWORD *)(v722 + 32) = *(_OWORD *)(v724 + 32);
      *(_OWORD *)(v722 + 48) = v431;
      v432 = *(_OWORD *)(v724 + 80);
      *(_OWORD *)(v722 + 64) = *(_OWORD *)(v724 + 64);
      *(_OWORD *)(v722 + 80) = v432;
      v433 = *(_OWORD *)(v724 + 16);
      *(_OWORD *)v722 = *(_OWORD *)v724;
      *(_OWORD *)(v722 + 16) = v433;
      v849[3168] = 60;
      v846 = (id)qword_10147FD68;
      v814 = v425;
      v434 = objc_msgSend(v425, "layer");
      v435 = sub_10057E090((uint64_t *)v722, (uint64_t)v723);
      UUID.init()(v435);
      v436 = &v427[v855[6]];
      swift_unknownObjectWeakInit(v436);
      v850(&v427[v855[7]], 1, 1, v851);
      v850(&v427[v855[8]], 1, 1, v851);
      swift_unknownObjectWeakAssign(v436, v434);

      sub_1004E9198(v723, v856);
      *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
      *(_QWORD *)v427 = v846;
      *(_QWORD *)(v857 + 288) = 0;
      *(_DWORD *)(v857 + 296) = 131586;
      sub_10057DE88((uint64_t)v427, v426);
      sub_1004EA730((_QWORD *)v722);
      sub_1004B8460(v426, v863, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v852 + 16) = 0x3FB999999999999ALL;
      sub_1004B84A4(v426, type metadata accessor for CRLBasicLayerAnimation);
      v437 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v438) = 1036831949;
      LODWORD(v439) = 0.25;
      LODWORD(v440) = 0.25;
      LODWORD(v441) = 1.0;
      v442 = objc_msgSend(v437, "initWithControlPoints::::", v439, v438, v440, v441);
      sub_1004B8460(v863, (uint64_t)v868, type metadata accessor for CRLBasicLayerAnimation);

      *v868 = v442;
      sub_1004B84A4(v863, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 12712) = v901;
      *(_QWORD *)(v904 + 12720) = &off_10126D348;
      v443 = sub_10050D1B0(v728);
      sub_1004B8460((uint64_t)v868, (uint64_t)v443, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 12832) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)(v904 + 12840) = v890;
      v444 = swift_allocObject(&unk_101296198, 316, 7);
      *(_QWORD *)(v904 + 12808) = v444;
      sub_1004E91D4((uint64_t)v443, v444 + 16);
      *(_BYTE *)(sub_1004CB9AC((uint64_t)v721, *(_QWORD *)(v904 + 12832)) + 297) = 0;
      sub_1004E90B0((uint64_t)v721, v719);
      if (!swift_dynamicCast(v720, v719, v884, &type metadata for CRLBasicLayerAnimation.Def, 6))
      {
        v454 = *(_QWORD *)(v904 + 15328);
        *v720 = 0u;
        v720[1] = 0u;
        v720[2] = 0u;
        v720[3] = 0u;
        v720[4] = 0u;
        v720[5] = 0u;
        v720[6] = 0u;
        v720[7] = 0u;
        v720[8] = 0u;
        v720[9] = 0u;
        v720[10] = 0u;
        v720[11] = 0u;
        v720[12] = 0u;
        v720[13] = 0u;
        v720[14] = 0u;
        v720[15] = 0u;
        v720[16] = 0u;
        v720[17] = 0u;
        *(_OWORD *)((char *)v720 + 284) = 0u;
        sub_1004CB800((uint64_t)v720, (uint64_t *)&unk_101406CB0);
        v907 = 0;
        v908 = 0xE000000000000000;
        _StringGuts.grow(_:)(69);
        v455 = v908;
        *(_QWORD *)(v904 + 15256) = v907;
        *(_QWORD *)(v904 + 15264) = v455;
        v456._object = (void *)0x8000000100FB4580;
        v456._countAndFlagsBits = 0xD000000000000043;
        String.append(_:)(v456);
        _print_unlocked<A, B>(_:_:)(v443, v702, v454, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v163 = *(_QWORD *)(v904 + 15256);
        v164 = *(_QWORD *)(v904 + 15264);
        return (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v163, v164, "Freeform/CRLBasicLayerAnimation.swift", 37, 2, 52, 0);
      }
      v445 = *(_QWORD *)(v904 + 15344);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v721);
      memcpy(v715, v720, 0x12CuLL);
      sub_10057DE54((uint64_t)v715, (uint64_t)v443);
      sub_1004B84A4(v445, type metadata accessor for CRLBasicLayerAnimation);

      if (*(_QWORD *)(v904 + 12712))
      {
        sub_1004DB728(v728, (uint64_t)v714);
        sub_1004DB728(v714, (uint64_t)v725);
        v446 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v446 = (double *)sub_100D0FAB4(0, *((_QWORD *)v446 + 2) + 1, 1, v446);
          v906 = v446;
        }
        v448 = *((_QWORD *)v446 + 2);
        v447 = *((_QWORD *)v446 + 3);
        if (v448 >= v447 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v447 > 1), v448 + 1, 1, v446);
        v449 = *(_QWORD *)(v904 + 14792);
        v450 = *(_QWORD *)(v904 + 14800);
        v451 = sub_1004CB9AC((uint64_t)v725, v449);
        v452 = *(_QWORD *)(v449 - 8);
        v453 = swift_task_alloc((*(_QWORD *)(v452 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v452 + 16))(v453, v451, v449);
        sub_1005C46A8(v448, v453, (uint64_t *)&v906, v449, v450);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v725);
        swift_task_dealloc(v453);
      }
      else
      {
        sub_1004CB800((uint64_t)v728, (uint64_t *)&unk_1013F0490);
      }
      v422 = 1;
      v423 = 1;
    }
    while ((v832 & 1) == 0);
    swift_bridgeObjectRelease();
    v457 = v906;
    v810[7] = &type metadata for CRLLayerAnimationGroup;
    v810[8] = &off_101271D70;
    v810[4] = v457;
    v810[5] = 0;
    v906 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v817);
    v458 = 0;
    v459 = 0;
    do
    {
      v815 = v458;
      if (v825)
        v460 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v459, v817);
      else
        v460 = *(id *)(v799 + 8 * v459);
      v902 = v460;
      v847 = *(_QWORD *)(v904 + 15384);
      v461 = *(_QWORD *)(v904 + 15376);
      v462 = *(char **)(v904 + 15368);
      v864 = *(id **)(v904 + 15336);
      v869 = *(_QWORD *)(v904 + 15328);
      *(_QWORD *)(v904 + 10632) = 1065353216;
      v849[2112] = 6;
      v833 = (id)qword_10147FD68;
      v463 = objc_msgSend(v902, "layer");
      v464 = sub_10057E090(v711, (uint64_t)v712);
      UUID.init()(v464);
      v465 = &v462[v855[6]];
      swift_unknownObjectWeakInit(v465);
      v850(&v462[v855[7]], 1, 1, v851);
      v850(&v462[v855[8]], 1, 1, v851);
      swift_unknownObjectWeakAssign(v465, v463);

      sub_1004E9198(v712, v856);
      *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
      *(_QWORD *)v462 = v833;
      *(_QWORD *)(v857 + 288) = 0;
      *(_DWORD *)(v857 + 296) = 131586;
      sub_10057DE88((uint64_t)v462, v461);
      sub_1004EA730(v711);
      sub_1004B8460(v461, v847, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v852 + 16) = 0x3FB999999999999ALL;
      sub_1004B84A4(v461, type metadata accessor for CRLBasicLayerAnimation);
      v466 = objc_allocWithZone((Class)CAMediaTimingFunction);
      LODWORD(v467) = 1036831949;
      LODWORD(v468) = 0.25;
      LODWORD(v469) = 0.25;
      LODWORD(v470) = 1.0;
      v471 = objc_msgSend(v466, "initWithControlPoints::::", v468, v467, v469, v470);
      sub_1004B8460(v847, (uint64_t)v864, type metadata accessor for CRLBasicLayerAnimation);

      *v864 = v471;
      sub_1004B84A4(v847, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 13072) = v869;
      *(_QWORD *)(v904 + 13080) = &off_10126D348;
      v472 = sub_10050D1B0(v716);
      sub_1004B8460((uint64_t)v864, (uint64_t)v472, type metadata accessor for CRLBasicLayerAnimation);
      *(_QWORD *)(v904 + 13192) = &type metadata for CRLBasicLayerAnimation.Def;
      *(_QWORD *)(v904 + 13200) = v890;
      v473 = swift_allocObject(&unk_101296198, 316, 7);
      *(_QWORD *)(v904 + 13168) = v473;
      sub_1004E91D4((uint64_t)v472, v473 + 16);
      *(_BYTE *)(sub_1004CB9AC((uint64_t)v717, *(_QWORD *)(v904 + 13192)) + 297) = 0;
      sub_1004E90B0((uint64_t)v717, v710);
      if (!swift_dynamicCast(__src, v710, v884, &type metadata for CRLBasicLayerAnimation.Def, 6))
      {
        v483 = *(_QWORD *)(v904 + 15328);
        *__src = 0u;
        __src[1] = 0u;
        __src[2] = 0u;
        __src[3] = 0u;
        __src[4] = 0u;
        __src[5] = 0u;
        __src[6] = 0u;
        __src[7] = 0u;
        __src[8] = 0u;
        __src[9] = 0u;
        __src[10] = 0u;
        __src[11] = 0u;
        __src[12] = 0u;
        __src[13] = 0u;
        __src[14] = 0u;
        __src[15] = 0u;
        __src[16] = 0u;
        __src[17] = 0u;
        *(_OWORD *)((char *)__src + 284) = 0u;
        sub_1004CB800((uint64_t)__src, (uint64_t *)&unk_101406CB0);
        v907 = 0;
        v908 = 0xE000000000000000;
        _StringGuts.grow(_:)(69);
        v484 = v908;
        *(_QWORD *)(v904 + 15240) = v907;
        *(_QWORD *)(v904 + 15248) = v484;
        v485._object = (void *)0x8000000100FB4580;
        v485._countAndFlagsBits = 0xD000000000000043;
        String.append(_:)(v485);
        _print_unlocked<A, B>(_:_:)(v472, v700, v483, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v163 = *(_QWORD *)(v904 + 15240);
        v164 = *(_QWORD *)(v904 + 15248);
        return (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v163, v164, "Freeform/CRLBasicLayerAnimation.swift", 37, 2, 52, 0);
      }
      v474 = *(_QWORD *)(v904 + 15336);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v717);
      memcpy(v709, __src, 0x12CuLL);
      sub_10057DE54((uint64_t)v709, (uint64_t)v472);
      sub_1004B84A4(v474, type metadata accessor for CRLBasicLayerAnimation);

      if (*(_QWORD *)(v904 + 13072))
      {
        sub_1004DB728(v716, (uint64_t)v708);
        sub_1004DB728(v708, (uint64_t)v713);
        v475 = v906;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v475 = (double *)sub_100D0FAB4(0, *((_QWORD *)v475 + 2) + 1, 1, v475);
          v906 = v475;
        }
        v477 = *((_QWORD *)v475 + 2);
        v476 = *((_QWORD *)v475 + 3);
        if (v477 >= v476 >> 1)
          v906 = (double *)sub_100D0FAB4((_QWORD *)(v476 > 1), v477 + 1, 1, v475);
        v478 = *(_QWORD *)(v904 + 14752);
        v479 = *(_QWORD *)(v904 + 14760);
        v480 = sub_1004CB9AC((uint64_t)v713, v478);
        v481 = *(_QWORD *)(v478 - 8);
        v482 = swift_task_alloc((*(_QWORD *)(v481 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v481 + 16))(v482, v480, v478);
        sub_1005C46A8(v477, v482, (uint64_t *)&v906, v478, v479);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v713);
        swift_task_dealloc(v482);
      }
      else
      {
        sub_1004CB800((uint64_t)v716, (uint64_t *)&unk_1013F0490);
      }
      v458 = 1;
      v459 = 1;
    }
    while ((v815 & 1) == 0);
    v870 = *(id **)(v904 + 15384);
    v865 = *(_QWORD *)(v904 + 15376);
    v788 = *(char **)(v904 + 15368);
    v885 = *(_QWORD *)(v904 + 15328);
    v800 = *(_QWORD *)(v904 + 15320);
    v826 = *(_QWORD **)(v904 + 15312);
    v816 = *(_QWORD *)(v904 + 15304);
    v834 = *(_QWORD *)(v904 + 15296);
    v486 = *(uint64_t **)(v904 + 15288);
    v848 = *(_QWORD *)(v904 + 15280);
    v793 = *(unsigned __int8 *)(v904 + 316);
    swift_bridgeObjectRelease_n(v817, 2);
    v487 = v906;
    v810[12] = &type metadata for CRLLayerAnimationGroup;
    v810[13] = &off_101271D70;
    v810[9] = v487;
    v810[10] = 0;
    v818 = sub_100B6732C();
    *(_QWORD *)(v904 + 8520) = 0x3FE0000000000000;
    *(_QWORD *)(v904 + 8528) = 0x3FF0000000000000;
    *(_OWORD *)(v904 + 8536) = 0u;
    v791[4000] = 1;
    *(_QWORD *)(v904 + 8560) = 0;
    v791[4016] = 2;
    *v849 = 58;
    v488 = qword_10147FD70;
    v489 = qword_10147FD78;
    v490 = qword_10147FD80;
    v491 = qword_10147FD88;
    v492 = objc_msgSend(v818, "layer");
    v493 = sub_10057E090(v664, (uint64_t)v662);
    UUID.init()(v493);
    v494 = (char *)v486 + v824[6];
    swift_unknownObjectWeakInit(v494);
    v850((char *)v486 + v824[7], 1, 1, v851);
    v850((char *)v486 + v824[8], 1, 1, v851);
    swift_unknownObjectWeakAssign(v494, v492);

    sub_1004E9198(v662, v822);
    __dsta[4] = 0;
    v790 = v486;
    *v486 = v488;
    __dsta[1] = v489;
    __dsta[2] = v490;
    __dsta[3] = v491;
    __dsta[38] = 0;
    *((_DWORD *)__dsta + 78) = 131586;
    sub_1004EA730(v664);
    sub_1004B8460((uint64_t)v486, v834, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v304 + 16) = 0x3FF0000000000000;
    sub_1004B84A4((uint64_t)v486, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v834, v816, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v843 + 24) = 0x406F400000000000;
    sub_1004B84A4(v834, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v816, (uint64_t)v826, type metadata accessor for CRLSpringLayerAnimation);
    *v826 = 0x4040000000000000;
    sub_1004B84A4(v816, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460((uint64_t)v826, v800, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v880 + 8) = 0x3FF0000000000000;
    sub_1004B84A4((uint64_t)v826, type metadata accessor for CRLSpringLayerAnimation);
    v810[17] = v848;
    v810[18] = &off_1012A12B8;
    v495 = sub_10050D1B0(v810 + 14);
    sub_1004B8460(v800, (uint64_t)v495, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v904 + 13472) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)(v904 + 13480) = v874;
    v496 = swift_allocObject(&unk_1012961C0, 332, 7);
    *(_QWORD *)(v904 + 13448) = v496;
    sub_100720EB4((uint64_t)v495, v496 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v665, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
    sub_100D26E34(v665);
    sub_1004B84A4(v800, type metadata accessor for CRLSpringLayerAnimation);
    v786 = sub_100B6732C();
    *(_QWORD *)(v904 + 7464) = 0x3F80000000000000;
    v791[3168] = 6;
    v819 = (id)qword_10147FD68;
    v497 = objc_msgSend(v786, "layer");
    v498 = sub_10057E090(v667, (uint64_t)v666);
    UUID.init()(v498);
    v499 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v499);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v499, v497);

    sub_1004E9198(v666, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v819;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v667);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3F9EB851EB851EB8;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v500 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v501) = 0.25;
    LODWORD(v502) = 0.25;
    LODWORD(v503) = 1.0;
    LODWORD(v504) = 1036831949;
    v505 = objc_msgSend(v500, "initWithControlPoints::::", v501, v504, v502, v503);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v505;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    v810[22] = v885;
    v810[23] = &off_10126D348;
    v506 = sub_10050D1B0(v810 + 19);
    sub_1004B8460((uint64_t)v870, (uint64_t)v506, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13592) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13600) = v890;
    v507 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13568) = v507;
    sub_1004E91D4((uint64_t)v506, v507 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v668, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v668);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v508 = sub_10060CD0C((uint64_t)v810, 0.97);
    v510 = v509;
    v511 = v508;
    swift_setDeallocating(v810);
    swift_arrayDestroy(v795, v810[2], v830);
    swift_deallocClassInstance(v810, 32, 7);
    *((_QWORD *)v807 + 7) = &type metadata for CRLLayerAnimationGroup;
    *((_QWORD *)v807 + 8) = &off_101271D70;
    *((_QWORD *)v807 + 4) = v510;
    v807[5] = v511;
    v512 = sub_10060CD0C((uint64_t)v807, 0.0);
    v514 = v513;
    v515 = v512;
    swift_setDeallocating(v807);
    swift_arrayDestroy(v802, *((_QWORD *)v807 + 2), v830);
    swift_deallocClassInstance(v807, 32, 7);
    *((_QWORD *)v749 + 17) = &type metadata for CRLLayerAnimationGroup;
    *((_QWORD *)v749 + 18) = &off_101271D70;
    *((_QWORD *)v749 + 14) = v514;
    v749[15] = v515;
    v516 = sub_10060CD0C((uint64_t)v749, 0.0);
    v518 = v517;
    v519 = v516;
    swift_setDeallocating(v749);
    swift_arrayDestroy(v660, *((_QWORD *)v749 + 2), v830);
    swift_deallocClassInstance(v749, 32, 7);
    *((_QWORD *)v663 + 7) = &type metadata for CRLLayerAnimationSequence;
    *((_QWORD *)v663 + 8) = &off_101276628;
    *((_QWORD *)v663 + 4) = v518;
    v663[5] = v519;
    v520 = sub_10060CD0C((uint64_t)v663, 0.0);
    v808 = v521;
    v522 = v520;
    swift_setDeallocating(v663);
    swift_arrayDestroy(v661, *((_QWORD *)v663 + 2), v830);
    swift_deallocClassInstance(v663, 32, 7);
    v820 = swift_allocObject(v750, 112, 7);
    *(_OWORD *)(v820 + 16) = xmmword_100EF5A10;
    v853 = swift_allocObject(v750, 152, 7);
    *(_OWORD *)(v853 + 16) = xmmword_100EF5550;
    v523 = sub_100B67084();
    *(_QWORD *)(v904 + 6936) = 0x3F80000000000000;
    v791[2640] = 6;
    v803 = (id)qword_10147FD68;
    v524 = objc_msgSend(v523, "layer");
    v525 = sub_10057E090(v670, (uint64_t)v669);
    UUID.init()(v525);
    v526 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v526);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v526, v524);

    sub_1004E9198(v669, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v803;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v670);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FC999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v527 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v528) = 0.25;
    LODWORD(v529) = 0.25;
    LODWORD(v530) = 1.0;
    LODWORD(v531) = 1036831949;
    v532 = objc_msgSend(v527, "initWithControlPoints::::", v528, v531, v529, v530);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v532;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v853 + 56) = v885;
    *(_QWORD *)(v853 + 64) = &off_10126D348;
    v533 = sub_10050D1B0((_QWORD *)(v853 + 32));
    sub_1004B8460((uint64_t)v870, (uint64_t)v533, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13712) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13720) = v890;
    v534 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13688) = v534;
    sub_1004E91D4((uint64_t)v533, v534 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v671, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v671);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v535 = sub_100B67090();
    *(_QWORD *)(v904 + 6408) = 0x3F80000000000000;
    v791[2112] = 6;
    v812 = (id)qword_10147FD68;
    v536 = objc_msgSend(v535, "layer");
    v537 = sub_10057E090(v673, (uint64_t)v672);
    UUID.init()(v537);
    v538 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v538);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v538, v536);

    sub_1004E9198(v672, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v812;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v673);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FC999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v539 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v540) = 0.25;
    LODWORD(v541) = 0.25;
    LODWORD(v542) = 1.0;
    LODWORD(v543) = 1036831949;
    v544 = objc_msgSend(v539, "initWithControlPoints::::", v540, v543, v541, v542);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v544;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v853 + 96) = v885;
    *(_QWORD *)(v853 + 104) = &off_10126D348;
    v545 = sub_10050D1B0((_QWORD *)(v853 + 72));
    sub_1004B8460((uint64_t)v870, (uint64_t)v545, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13832) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13840) = v890;
    v546 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13808) = v546;
    sub_1004E91D4((uint64_t)v545, v546 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v674, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v674);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v547 = sub_100B6732C();
    *(_QWORD *)(v904 + 5616) = 1065353216;
    v791[1320] = 6;
    v804 = (id)qword_10147FD68;
    v548 = objc_msgSend(v547, "layer");
    v549 = sub_10057E090(v676, (uint64_t)v675);
    UUID.init()(v549);
    v550 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v550);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v550, v548);

    sub_1004E9198(v675, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v804;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v676);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FC999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v551 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v552) = 0.25;
    LODWORD(v553) = 0.25;
    LODWORD(v554) = 1.0;
    LODWORD(v555) = 1036831949;
    v556 = objc_msgSend(v551, "initWithControlPoints::::", v552, v555, v553, v554);
    v557 = sub_1008FC994();

    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    *v870 = v557;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v853 + 136) = v885;
    *(_QWORD *)(v853 + 144) = &off_10126D348;
    v558 = sub_10050D1B0((_QWORD *)(v853 + 112));
    sub_1004B8460((uint64_t)v870, (uint64_t)v558, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 13952) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 13960) = v890;
    v559 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 13928) = v559;
    sub_1004E91D4((uint64_t)v558, v559 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v677, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v677);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v560 = sub_10060CD0C(v853, 0.0);
    v562 = v561;
    v563 = v560;
    swift_setDeallocating(v853);
    swift_arrayDestroy(v853 + 32, *(_QWORD *)(v853 + 16), v830);
    swift_deallocClassInstance(v853, 32, 7);
    *(_QWORD *)(v820 + 56) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v820 + 64) = &off_101271D70;
    *(_QWORD *)(v820 + 32) = v562;
    *(double *)(v820 + 40) = v563;
    v854 = swift_allocObject(v750, 272, 7);
    *(_OWORD *)(v854 + 16) = xmmword_100EFD140;
    v796 = sub_100B67084();
    v564 = *(_OWORD *)(v724 + 176);
    *(_OWORD *)(v679 + 160) = *(_OWORD *)(v724 + 160);
    *(_OWORD *)(v679 + 176) = v564;
    *(_BYTE *)(v679 + 192) = *(_BYTE *)(v724 + 192);
    v565 = *(_OWORD *)(v724 + 112);
    *(_OWORD *)(v679 + 96) = *(_OWORD *)(v724 + 96);
    *(_OWORD *)(v679 + 112) = v565;
    v566 = *(_OWORD *)(v724 + 144);
    *(_OWORD *)(v679 + 128) = *(_OWORD *)(v724 + 128);
    *(_OWORD *)(v679 + 144) = v566;
    v567 = *(_OWORD *)(v724 + 48);
    *(_OWORD *)(v679 + 32) = *(_OWORD *)(v724 + 32);
    *(_OWORD *)(v679 + 48) = v567;
    v568 = *(_OWORD *)(v724 + 80);
    *(_OWORD *)(v679 + 64) = *(_OWORD *)(v724 + 64);
    *(_OWORD *)(v679 + 80) = v568;
    v569 = *(_OWORD *)(v724 + 16);
    *(_OWORD *)v679 = *(_OWORD *)v724;
    *(_OWORD *)(v679 + 16) = v569;
    *v791 = 60;
    v805 = (id)qword_10147FD68;
    v570 = objc_msgSend(v796, "layer");
    v571 = sub_10057E090((uint64_t *)v679, (uint64_t)v678);
    UUID.init()(v571);
    v572 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v572);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v572, v570);

    sub_1004E9198(v678, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v805;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730((_QWORD *)v679);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FB999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v573 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v574) = 0.25;
    LODWORD(v575) = 0.25;
    LODWORD(v576) = 1.0;
    LODWORD(v577) = 1036831949;
    v578 = objc_msgSend(v573, "initWithControlPoints::::", v574, v577, v575, v576);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v578;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v854 + 56) = v885;
    *(_QWORD *)(v854 + 64) = &off_10126D348;
    v579 = sub_10050D1B0((_QWORD *)(v854 + 32));
    sub_1004B8460((uint64_t)v870, (uint64_t)v579, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 14072) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 14080) = v890;
    v580 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 14048) = v580;
    sub_1004E91D4((uint64_t)v579, v580 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v681, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v681);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v581 = sub_100B67090();
    v582 = *(_OWORD *)(v724 + 176);
    *(_OWORD *)(v904 + 3928) = *(_OWORD *)(v724 + 160);
    *(_OWORD *)(v904 + 3944) = v582;
    *(_BYTE *)(v904 + 3960) = *(_BYTE *)(v724 + 192);
    v583 = *(_OWORD *)(v724 + 112);
    *(_OWORD *)(v904 + 3864) = *(_OWORD *)(v724 + 96);
    *(_OWORD *)(v904 + 3880) = v583;
    v584 = *(_OWORD *)(v724 + 144);
    *(_OWORD *)(v904 + 3896) = *(_OWORD *)(v724 + 128);
    *(_OWORD *)(v904 + 3912) = v584;
    v585 = *(_OWORD *)(v724 + 48);
    *(_OWORD *)(v904 + 3800) = *(_OWORD *)(v724 + 32);
    *(_OWORD *)(v904 + 3816) = v585;
    v586 = *(_OWORD *)(v724 + 80);
    *(_OWORD *)(v904 + 3832) = *(_OWORD *)(v724 + 64);
    *(_OWORD *)(v904 + 3848) = v586;
    v587 = *(_OWORD *)(v724 + 16);
    *(_OWORD *)v680 = *(_OWORD *)v724;
    *(_OWORD *)(v904 + 3784) = v587;
    *(_BYTE *)(v904 + 4024) = 60;
    v797 = (id)qword_10147FD68;
    v588 = objc_msgSend(v581, "layer");
    v589 = sub_10057E090(v680, (uint64_t)v682);
    UUID.init()(v589);
    v590 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v590);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v590, v588);

    sub_1004E9198(v682, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v797;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v680);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FB999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v591 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v592) = 0.25;
    LODWORD(v593) = 0.25;
    LODWORD(v594) = 1.0;
    LODWORD(v595) = 1036831949;
    v596 = objc_msgSend(v591, "initWithControlPoints::::", v592, v595, v593, v594);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v596;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v854 + 96) = v885;
    *(_QWORD *)(v854 + 104) = &off_10126D348;
    v597 = sub_10050D1B0((_QWORD *)(v854 + 72));
    sub_1004B8460((uint64_t)v870, (uint64_t)v597, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 14192) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 14200) = v890;
    v598 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 14168) = v598;
    sub_1004E91D4((uint64_t)v597, v598 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v683, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v683);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v599 = sub_100B67084();
    *(_QWORD *)(v904 + 3240) = 1065353216;
    *(_BYTE *)(v904 + 3496) = 6;
    v798 = (id)qword_10147FD68;
    v600 = objc_msgSend(v599, "layer");
    v601 = sub_10057E090(v685, (uint64_t)v684);
    UUID.init()(v601);
    v602 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v602);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v602, v600);

    sub_1004E9198(v684, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v798;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v685);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FB999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v603 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v604) = 0.25;
    LODWORD(v605) = 0.25;
    LODWORD(v606) = 1.0;
    LODWORD(v607) = 1036831949;
    v608 = objc_msgSend(v603, "initWithControlPoints::::", v604, v607, v605, v606);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v608;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v854 + 136) = v885;
    *(_QWORD *)(v854 + 144) = &off_10126D348;
    v609 = sub_10050D1B0((_QWORD *)(v854 + 112));
    sub_1004B8460((uint64_t)v870, (uint64_t)v609, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 14312) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 14320) = v890;
    v610 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 14288) = v610;
    sub_1004E91D4((uint64_t)v609, v610 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v686, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v686);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v611 = sub_100B67090();
    *(_QWORD *)(v904 + 2712) = 1065353216;
    *(_BYTE *)(v904 + 2968) = 6;
    v836 = (id)qword_10147FD68;
    v612 = objc_msgSend(v611, "layer");
    v613 = sub_10057E090(v688, (uint64_t)v687);
    UUID.init()(v613);
    v614 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v614);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v614, v612);

    sub_1004E9198(v687, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v836;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v688);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3FB999999999999ALL;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v615 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v616) = 0.25;
    LODWORD(v617) = 0.25;
    LODWORD(v618) = 1.0;
    LODWORD(v619) = 1036831949;
    v620 = objc_msgSend(v615, "initWithControlPoints::::", v616, v619, v617, v618);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v620;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v854 + 176) = v885;
    *(_QWORD *)(v854 + 184) = &off_10126D348;
    v621 = sub_10050D1B0((_QWORD *)(v854 + 152));
    sub_1004B8460((uint64_t)v870, (uint64_t)v621, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 14432) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 14440) = v890;
    v622 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 14408) = v622;
    sub_1004E91D4((uint64_t)v621, v622 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v689, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v689);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v623 = sub_100B6732C();
    *(_QWORD *)(v904 + 5352) = 0x3FE0000000000000;
    *(_QWORD *)(v904 + 5360) = 0x3FF0000000000000;
    *(_QWORD *)(v904 + 5368) = 0;
    *(_QWORD *)(v904 + 5376) = 0;
    v791[832] = 1;
    *(_QWORD *)(v904 + 5392) = 0;
    v791[848] = 2;
    v791[1056] = 58;
    v624 = qword_10147FD70;
    v625 = qword_10147FD78;
    v626 = qword_10147FD80;
    v627 = qword_10147FD88;
    v628 = objc_msgSend(v623, "layer");
    v629 = sub_10057E090(v691, (uint64_t)v690);
    UUID.init()(v629);
    v630 = (char *)v790 + v824[6];
    swift_unknownObjectWeakInit(v630);
    v850((char *)v790 + v824[7], 1, 1, v851);
    v850((char *)v790 + v824[8], 1, 1, v851);
    swift_unknownObjectWeakAssign(v630, v628);

    sub_1004E9198(v690, v822);
    __dsta[4] = 0;
    *v790 = v624;
    __dsta[1] = v625;
    __dsta[2] = v626;
    __dsta[3] = v627;
    __dsta[38] = 0;
    *((_DWORD *)__dsta + 78) = 131586;
    sub_1004EA730(v691);
    sub_1004B8460((uint64_t)v790, v834, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v840 + 16) = 0x3FF0000000000000;
    sub_1004B84A4((uint64_t)v790, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v834, v816, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v843 + 24) = 0x406F400000000000;
    sub_1004B84A4(v834, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(v816, (uint64_t)v826, type metadata accessor for CRLSpringLayerAnimation);
    *v826 = 0x4040000000000000;
    sub_1004B84A4(v816, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460((uint64_t)v826, v800, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v880 + 8) = 0x3FF0000000000000;
    sub_1004B84A4((uint64_t)v826, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v854 + 216) = v848;
    *(_QWORD *)(v854 + 224) = &off_1012A12B8;
    v631 = sub_10050D1B0((_QWORD *)(v854 + 192));
    sub_1004B8460(v800, (uint64_t)v631, type metadata accessor for CRLSpringLayerAnimation);
    *(_QWORD *)(v904 + 14552) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)(v904 + 14560) = v874;
    v632 = swift_allocObject(&unk_1012961C0, 332, 7);
    *(_QWORD *)(v904 + 14528) = v632;
    sub_100720EB4((uint64_t)v631, v632 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v692, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
    sub_100D26E34(v692);
    sub_1004B84A4(v800, type metadata accessor for CRLSpringLayerAnimation);
    v633 = sub_100B6732C();
    *(_DWORD *)(v904 + 10896) = 0;
    *(_DWORD *)(v904 + 10900) = 1065353216;
    v849[2376] = 6;
    v903 = (id)qword_10147FD68;
    v634 = objc_msgSend(v633, "layer");
    v635 = sub_10057E090(v696, (uint64_t)v695);
    UUID.init()(v635);
    v636 = &v788[v855[6]];
    swift_unknownObjectWeakInit(v636);
    v850(&v788[v855[7]], 1, 1, v851);
    v850(&v788[v855[8]], 1, 1, v851);
    swift_unknownObjectWeakAssign(v636, v634);

    sub_1004E9198(v695, v856);
    *(_OWORD *)(v857 + 8) = xmmword_100EF6400;
    *(_QWORD *)v788 = v903;
    *(_QWORD *)(v857 + 288) = 0;
    *(_DWORD *)(v857 + 296) = 131586;
    sub_1004EA730(v696);
    sub_1004B8460((uint64_t)v788, v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v895 + 16) = 0x3F9EB851EB851EB8;
    sub_1004B84A4((uint64_t)v788, type metadata accessor for CRLBasicLayerAnimation);
    v637 = objc_allocWithZone((Class)CAMediaTimingFunction);
    LODWORD(v638) = 0.25;
    LODWORD(v639) = 0.25;
    LODWORD(v640) = 1.0;
    LODWORD(v641) = 1036831949;
    v642 = objc_msgSend(v637, "initWithControlPoints::::", v638, v641, v639, v640);
    sub_1004B8460(v865, (uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);

    *v870 = v642;
    sub_1004B84A4(v865, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v854 + 256) = v885;
    *(_QWORD *)(v854 + 264) = &off_10126D348;
    v643 = sub_10050D1B0((_QWORD *)(v854 + 232));
    sub_1004B8460((uint64_t)v870, (uint64_t)v643, type metadata accessor for CRLBasicLayerAnimation);
    *(_QWORD *)(v904 + 14672) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)(v904 + 14680) = v890;
    v644 = swift_allocObject(&unk_101296198, 316, 7);
    *(_QWORD *)(v904 + 14648) = v644;
    sub_1004E91D4((uint64_t)v643, v644 + 16);
    *(_BYTE *)(sub_1004CB9AC((uint64_t)v697, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
    sub_10057CE2C(v697);
    sub_1004B84A4((uint64_t)v870, type metadata accessor for CRLBasicLayerAnimation);
    v645 = sub_10060CD0C(v854, 1.97);
    v647 = v646;
    v648 = v645;
    swift_setDeallocating(v854);
    swift_arrayDestroy(v854 + 32, *(_QWORD *)(v854 + 16), v830);
    v0 = v904;
    swift_deallocClassInstance(v854, 32, 7);
    *(_QWORD *)(v820 + 96) = &type metadata for CRLLayerAnimationGroup;
    *(_QWORD *)(v820 + 104) = &off_101271D70;
    *(_QWORD *)(v820 + 72) = v647;
    *(double *)(v820 + 80) = v648;
    v649 = sub_10060CD0C(v820, 0.0);
    v651 = v650;
    v652 = v649;
    swift_setDeallocating(v820);
    swift_arrayDestroy(v820 + 32, *(_QWORD *)(v820 + 16), v830);
    swift_deallocClassInstance(v820, 32, 7);
    if (v793)
      v653 = v651;
    else
      v653 = v808;
    if (v793)
    {
      v654 = &off_101276628;
    }
    else
    {
      v652 = v522;
      v654 = &off_101271D70;
    }
    if (v793)
      v655 = &type metadata for CRLLayerAnimationSequence;
    else
      v655 = &type metadata for CRLLayerAnimationGroup;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v904 + 14712) = v655;
    *(_QWORD *)(v904 + 14720) = v654;
    *(_QWORD *)(v904 + 14688) = v653;
    v656 = *(void **)(v904 + 15272);
    *(double *)(v904 + 14696) = v652;
    sub_1004BB5A4(v698, (uint64_t)v655);
    v657 = swift_allocObject(&unk_1012961E8, 24, 7);
    *(_QWORD *)(v657 + 16) = v656;
    v658 = (double *)swift_allocObject(&unk_101296210, 56, 7);
    *((_QWORD *)v658 + 2) = v656;
    v658[3] = v777;
    v658[4] = v776;
    v658[5] = v775;
    v658[6] = v774;
    v659 = v656;
    sub_100D0C8CC(0, 1, 1, (uint64_t)sub_100B75C4C, v657, (uint64_t)sub_100B75C78, (uint64_t)v658, (uint64_t)v655, (uint64_t)v654);

    swift_release(v658);
    swift_release(v657);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v698);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100B71B98@<X0>(void **a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE v53[264];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  char v67;
  _BYTE v68[136];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[8];
  char v74;

  v51 = a2;
  v19 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v48 - v23;
  __chkstk_darwin(v25);
  v49 = (uint64_t)&v48 - v26;
  __chkstk_darwin(v27);
  v50 = (uint64_t *)((char *)&v48 - v28);
  __chkstk_darwin(v29);
  v52 = (uint64_t)&v48 - v30;
  v31 = *a1;
  sub_100B75C08((uint64_t)v68);
  *(double *)&v69 = a3;
  *((double *)&v69 + 1) = a4;
  *(double *)&v70 = a5;
  *((double *)&v70 + 1) = a6;
  *(double *)&v71 = a7;
  *((double *)&v71 + 1) = a8;
  *(double *)&v72 = a9;
  *((double *)&v72 + 1) = a10;
  sub_10056B6C4((uint64_t)v68, (uint64_t)v73);
  v64 = v73[6];
  v65 = v73[7];
  v66 = v74;
  v60 = v73[2];
  v61 = v73[3];
  v62 = v73[4];
  v63 = v73[5];
  v56 = v71;
  v57 = v72;
  v58 = v73[0];
  v59 = v73[1];
  v54 = v69;
  v55 = v70;
  v67 = 60;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v32 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v33 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v34 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v35 = qword_10147FD88;
  v36 = objc_msgSend(v31, "layer");
  v37 = sub_10057E090((uint64_t *)&v54, (uint64_t)v53);
  UUID.init()(v37);
  v38 = &v21[v19[6]];
  swift_unknownObjectWeakInit(v38);
  v39 = &v21[v19[7]];
  v40 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v41(v39, 1, 1, v40);
  v41(&v21[v19[8]], 1, 1, v40);
  swift_unknownObjectWeakAssign(v38, v36);

  sub_1004E9198(v53, v21 + 40);
  *((_QWORD *)v21 + 4) = 0;
  *(_QWORD *)v21 = v32;
  *((_QWORD *)v21 + 1) = v33;
  *((_QWORD *)v21 + 2) = v34;
  *((_QWORD *)v21 + 3) = v35;
  *((_QWORD *)v21 + 38) = 0;
  *((_DWORD *)v21 + 78) = 131586;
  sub_1004EA730(&v54);
  sub_1004B8460((uint64_t)v21, (uint64_t)v24, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v24 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLSpringLayerAnimation);
  v42 = v49;
  sub_1004B8460((uint64_t)v24, v49, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v42 + 24) = 0x407C200000000000;
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLSpringLayerAnimation);
  v43 = v50;
  sub_1004B8460(v42, (uint64_t)v50, type metadata accessor for CRLSpringLayerAnimation);
  *v43 = 0x4043000000000000;
  sub_1004B84A4(v42, type metadata accessor for CRLSpringLayerAnimation);
  v44 = v52;
  sub_1004B8460((uint64_t)v43, v52, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v44 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v43, type metadata accessor for CRLSpringLayerAnimation);
  v45 = v51;
  v51[3] = v19;
  v45[4] = &off_1012A12B8;
  v46 = sub_10050D1B0(v45);
  sub_1004B8460(v44, (uint64_t)v46, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)&v55 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
  *(_QWORD *)&v56 = sub_100553914();
  *(_QWORD *)&v54 = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v46, v54 + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)&v54, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(&v54);
  return sub_1004B84A4(v44, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B72060@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  _QWORD *v33;
  id *v34;
  _BYTE v35[264];
  uint64_t v36[32];
  char v37;

  v33 = a2;
  v3 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (uint64_t)&v32 - v7;
  __chkstk_darwin(v8);
  v34 = (id *)((char *)&v32 - v9);
  v10 = *a1;
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v12 = objc_msgSend(v11, "CGColor");

  if (qword_1013DDD00 != -1)
    swift_once(&qword_1013DDD00, sub_100B65E18);
  v13 = objc_msgSend((id)qword_101480D90, "CGColor");
  v36[0] = (uint64_t)v12;
  v36[1] = (uint64_t)v13;
  v37 = 18;
  if (qword_1013DD408 != -1)
    swift_once(&qword_1013DD408, sub_1008D3CF4);
  v14 = (void *)qword_10147FD68;
  sub_10057E090(v36, (uint64_t)v35);
  v15 = v14;
  v16 = v10;
  UUID.init()(v16);
  v17 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v17);
  v18 = &v5[v3[7]];
  v19 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(&v5[v3[8]], 1, 1, v19);
  swift_unknownObjectWeakAssign(v17, v16);

  sub_1004E9198(v35, v5 + 24);
  *(_OWORD *)(v5 + 8) = xmmword_100EF6400;
  *(_QWORD *)v5 = v15;
  *((_QWORD *)v5 + 36) = 0;
  *((_DWORD *)v5 + 74) = 131586;
  sub_1004EA730(v36);
  v21 = v32;
  sub_1004B8460((uint64_t)v5, v32, type metadata accessor for CRLBasicLayerAnimation);
  *(_QWORD *)(v21 + 16) = 0x3FCC28F5C28F5C29;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBasicLayerAnimation);
  v22 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v23) = 1036831949;
  LODWORD(v24) = 0.25;
  LODWORD(v25) = 0.25;
  LODWORD(v26) = 1.0;
  v27 = objc_msgSend(v22, "initWithControlPoints::::", v24, v23, v25, v26);
  v28 = v34;
  sub_1004B8460(v21, (uint64_t)v34, type metadata accessor for CRLBasicLayerAnimation);

  *v28 = v27;
  sub_1004B84A4(v21, type metadata accessor for CRLBasicLayerAnimation);
  v29 = v33;
  v33[3] = v3;
  v29[4] = &off_10126D348;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460((uint64_t)v28, (uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
  v36[3] = (uint64_t)&type metadata for CRLBasicLayerAnimation.Def;
  v36[4] = sub_1004EB138();
  v36[0] = swift_allocObject(&unk_101296198, 316, 7);
  sub_1004E91D4((uint64_t)v30, v36[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v36, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
  sub_10057CE2C(v36);
  return sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBasicLayerAnimation);
}

uint64_t sub_100B723D8@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _BYTE v40[264];
  uint64_t v41[32];
  char v42;

  v38 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  __chkstk_darwin(v9);
  v36 = (uint64_t)&v35 - v10;
  __chkstk_darwin(v11);
  v37 = (uint64_t *)((char *)&v35 - v12);
  __chkstk_darwin(v13);
  v39 = (uint64_t)&v35 - v14;
  v15 = *a1;
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v17 = objc_msgSend(v16, "CGColor");

  if (qword_1013DDD38 != -1)
    swift_once(&qword_1013DDD38, sub_100B65E88);
  v18 = objc_msgSend((id)qword_101480DD0, "CGColor");
  v41[0] = (uint64_t)v17;
  v41[1] = (uint64_t)v18;
  v42 = 28;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v19 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v20 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v21 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v22 = qword_10147FD88;
  v23 = objc_msgSend(v15, "layer");
  v24 = sub_10057E090(v41, (uint64_t)v40);
  UUID.init()(v24);
  v25 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v25);
  v26 = &v5[v3[7]];
  v27 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v28(&v5[v3[8]], 1, 1, v27);
  swift_unknownObjectWeakAssign(v25, v23);

  sub_1004E9198(v40, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v19;
  *((_QWORD *)v5 + 1) = v20;
  *((_QWORD *)v5 + 2) = v21;
  *((_QWORD *)v5 + 3) = v22;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v41);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v36;
  sub_1004B8460((uint64_t)v8, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v29 + 24) = 0x407C200000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v30 = v37;
  sub_1004B8460(v29, (uint64_t)v37, type metadata accessor for CRLSpringLayerAnimation);
  *v30 = 0x4043000000000000;
  sub_1004B84A4(v29, type metadata accessor for CRLSpringLayerAnimation);
  v31 = v39;
  sub_1004B8460((uint64_t)v30, v39, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v31 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v32 = v38;
  v38[3] = v3;
  v32[4] = &off_1012A12B8;
  v33 = sub_10050D1B0(v32);
  sub_1004B8460(v31, (uint64_t)v33, type metadata accessor for CRLSpringLayerAnimation);
  v41[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v41[4] = sub_100553914();
  v41[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v33, v41[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v41, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v41);
  return sub_1004B84A4(v31, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B72838@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[264];
  uint64_t v38[32];
  char v39;

  v35 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v32 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v14;
  v15 = *a1;
  v38[0] = 0x3F00000000000000;
  v39 = 22;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v16 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v17 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v18 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v19 = qword_10147FD88;
  v20 = objc_msgSend(v15, "layer");
  v21 = sub_10057E090(v38, (uint64_t)v37);
  UUID.init()(v21);
  v22 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v22);
  v23 = &v5[v3[7]];
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(&v5[v3[8]], 1, 1, v24);
  swift_unknownObjectWeakAssign(v22, v20);

  sub_1004E9198(v37, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v17;
  *((_QWORD *)v5 + 2) = v18;
  *((_QWORD *)v5 + 3) = v19;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v38);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v26 = v33;
  sub_1004B8460((uint64_t)v8, v33, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v26 + 24) = 0x407C200000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460(v26, (uint64_t)v34, type metadata accessor for CRLSpringLayerAnimation);
  *v27 = 0x4043000000000000;
  sub_1004B84A4(v26, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v36;
  sub_1004B8460((uint64_t)v27, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v35;
  v35[3] = v3;
  v29[4] = &off_1012A12B8;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460(v28, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v38[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v38[4] = sub_100553914();
  v38[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v30, v38[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v38, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v38);
  return sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B72C20@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[264];
  uint64_t v38[32];
  char v39;

  v35 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v32 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v14;
  v15 = *a1;
  if (qword_1013DDD48 != -1)
    swift_once(&qword_1013DDD48, sub_100B65F28);
  v38[0] = 0;
  v38[1] = qword_101480DE0;
  v39 = 24;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v16 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v17 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v18 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v19 = qword_10147FD88;
  v20 = objc_msgSend(v15, "layer");
  v21 = sub_10057E090(v38, (uint64_t)v37);
  UUID.init()(v21);
  v22 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v22);
  v23 = &v5[v3[7]];
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(&v5[v3[8]], 1, 1, v24);
  swift_unknownObjectWeakAssign(v22, v20);

  sub_1004E9198(v37, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v17;
  *((_QWORD *)v5 + 2) = v18;
  *((_QWORD *)v5 + 3) = v19;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v38);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v26 = v33;
  sub_1004B8460((uint64_t)v8, v33, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v26 + 24) = 0x407C200000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460(v26, (uint64_t)v34, type metadata accessor for CRLSpringLayerAnimation);
  *v27 = 0x4043000000000000;
  sub_1004B84A4(v26, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v36;
  sub_1004B8460((uint64_t)v27, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v35;
  v35[3] = v3;
  v29[4] = &off_1012A12B8;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460(v28, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v38[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v38[4] = sub_100553914();
  v38[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v30, v38[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v38, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v38);
  return sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B73034@<X0>(void **a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE v53[264];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  char v67;
  _BYTE v68[136];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[8];
  char v74;

  v51 = a2;
  v19 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v48 - v23;
  __chkstk_darwin(v25);
  v49 = (uint64_t)&v48 - v26;
  __chkstk_darwin(v27);
  v50 = (uint64_t *)((char *)&v48 - v28);
  __chkstk_darwin(v29);
  v52 = (uint64_t)&v48 - v30;
  v31 = *a1;
  sub_100B75C08((uint64_t)v68);
  *(double *)&v69 = a3;
  *((double *)&v69 + 1) = a4;
  *(double *)&v70 = a5;
  *((double *)&v70 + 1) = a6;
  *(double *)&v71 = a7;
  *((double *)&v71 + 1) = a8;
  *(double *)&v72 = a9;
  *((double *)&v72 + 1) = a10;
  sub_10056B6C4((uint64_t)v68, (uint64_t)v73);
  v64 = v73[6];
  v65 = v73[7];
  v66 = v74;
  v60 = v73[2];
  v61 = v73[3];
  v62 = v73[4];
  v63 = v73[5];
  v56 = v71;
  v57 = v72;
  v58 = v73[0];
  v59 = v73[1];
  v54 = v69;
  v55 = v70;
  v67 = 60;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v32 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v33 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v34 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v35 = qword_10147FD88;
  v36 = objc_msgSend(v31, "layer");
  v37 = sub_10057E090((uint64_t *)&v54, (uint64_t)v53);
  UUID.init()(v37);
  v38 = &v21[v19[6]];
  swift_unknownObjectWeakInit(v38);
  v39 = &v21[v19[7]];
  v40 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v41(v39, 1, 1, v40);
  v41(&v21[v19[8]], 1, 1, v40);
  swift_unknownObjectWeakAssign(v38, v36);

  sub_1004E9198(v53, v21 + 40);
  *((_QWORD *)v21 + 4) = 0;
  *(_QWORD *)v21 = v32;
  *((_QWORD *)v21 + 1) = v33;
  *((_QWORD *)v21 + 2) = v34;
  *((_QWORD *)v21 + 3) = v35;
  *((_QWORD *)v21 + 38) = 0;
  *((_DWORD *)v21 + 78) = 131586;
  sub_1004EA730(&v54);
  sub_1004B8460((uint64_t)v21, (uint64_t)v24, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v24 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLSpringLayerAnimation);
  v42 = v49;
  sub_1004B8460((uint64_t)v24, v49, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v42 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLSpringLayerAnimation);
  v43 = v50;
  sub_1004B8460(v42, (uint64_t)v50, type metadata accessor for CRLSpringLayerAnimation);
  *v43 = 0x4040000000000000;
  sub_1004B84A4(v42, type metadata accessor for CRLSpringLayerAnimation);
  v44 = v52;
  sub_1004B8460((uint64_t)v43, v52, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v44 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v43, type metadata accessor for CRLSpringLayerAnimation);
  v45 = v51;
  v51[3] = v19;
  v45[4] = &off_1012A12B8;
  v46 = sub_10050D1B0(v45);
  sub_1004B8460(v44, (uint64_t)v46, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)&v55 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
  *(_QWORD *)&v56 = sub_100553914();
  *(_QWORD *)&v54 = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v46, v54 + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)&v54, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(&v54);
  return sub_1004B84A4(v44, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B734FC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[264];
  uint64_t v38[32];
  char v39;

  v35 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v32 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v14;
  v15 = *a1;
  if (qword_1013DDD20 != -1)
    swift_once(&qword_1013DDD20, sub_100B65E54);
  v16 = qword_101480DB0;
  if (qword_1013DDD28 != -1)
    swift_once(&qword_1013DDD28, sub_100B65E64);
  v38[0] = v16;
  v38[1] = qword_101480DB8;
  v39 = 14;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v17 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v18 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v19 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v20 = qword_10147FD88;
  sub_10057E090(v38, (uint64_t)v37);
  v21 = v15;
  UUID.init()(v21);
  v22 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v22);
  v23 = &v5[v3[7]];
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(&v5[v3[8]], 1, 1, v24);
  swift_unknownObjectWeakAssign(v22, v21);

  sub_1004E9198(v37, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v19;
  *((_QWORD *)v5 + 3) = v20;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v38);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v26 = v33;
  sub_1004B8460((uint64_t)v8, v33, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v26 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460(v26, (uint64_t)v34, type metadata accessor for CRLSpringLayerAnimation);
  *v27 = 0x4040000000000000;
  sub_1004B84A4(v26, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v36;
  sub_1004B8460((uint64_t)v27, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v35;
  v35[3] = v3;
  v29[4] = &off_1012A12B8;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460(v28, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v38[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v38[4] = sub_100553914();
  v38[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v30, v38[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v38, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v38);
  return sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B7392C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE v38[264];
  uint64_t v39[32];
  char v40;

  v36 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v9);
  v34 = (uint64_t)&v33 - v10;
  __chkstk_darwin(v11);
  v35 = (uint64_t *)((char *)&v33 - v12);
  __chkstk_darwin(v13);
  v37 = (uint64_t)&v33 - v14;
  v15 = *a1;
  if (qword_1013DDD00 != -1)
    swift_once(&qword_1013DDD00, sub_100B65E18);
  v16 = objc_msgSend((id)qword_101480D90, "CGColor");
  if (qword_1013DDD08 != -1)
    swift_once(&qword_1013DDD08, sub_100B65E24);
  v17 = objc_msgSend((id)qword_101480D98, "CGColor");
  v39[0] = (uint64_t)v16;
  v39[1] = (uint64_t)v17;
  v40 = 18;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v18 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v19 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v20 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v21 = qword_10147FD88;
  sub_10057E090(v39, (uint64_t)v38);
  v22 = v15;
  UUID.init()(v22);
  v23 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v23);
  v24 = &v5[v3[7]];
  v25 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  v26(&v5[v3[8]], 1, 1, v25);
  swift_unknownObjectWeakAssign(v23, v22);

  sub_1004E9198(v38, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v18;
  *((_QWORD *)v5 + 1) = v19;
  *((_QWORD *)v5 + 2) = v20;
  *((_QWORD *)v5 + 3) = v21;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v39);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460((uint64_t)v8, v34, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v27 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v35;
  sub_1004B8460(v27, (uint64_t)v35, type metadata accessor for CRLSpringLayerAnimation);
  *v28 = 0x4040000000000000;
  sub_1004B84A4(v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v37;
  sub_1004B8460((uint64_t)v28, v37, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v29 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLSpringLayerAnimation);
  v30 = v36;
  v36[3] = v3;
  v30[4] = &off_1012A12B8;
  v31 = sub_10050D1B0(v30);
  sub_1004B8460(v29, (uint64_t)v31, type metadata accessor for CRLSpringLayerAnimation);
  v39[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v39[4] = sub_100553914();
  v39[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v31, v39[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v39, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v39);
  return sub_1004B84A4(v29, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B73D84@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[264];
  uint64_t v38[32];
  char v39;

  v35 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v32 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v14;
  v15 = *a1;
  if (qword_1013DDD10 != -1)
    swift_once(&qword_1013DDD10, sub_100B65E38);
  v16 = qword_101480DA0;
  if (qword_1013DDD18 != -1)
    swift_once(&qword_1013DDD18, sub_100B65E48);
  v38[0] = v16;
  v38[1] = qword_101480DA8;
  v39 = 16;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v17 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v18 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v19 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v20 = qword_10147FD88;
  sub_10057E090(v38, (uint64_t)v37);
  v21 = v15;
  UUID.init()(v21);
  v22 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v22);
  v23 = &v5[v3[7]];
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(&v5[v3[8]], 1, 1, v24);
  swift_unknownObjectWeakAssign(v22, v21);

  sub_1004E9198(v37, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v19;
  *((_QWORD *)v5 + 3) = v20;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v38);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v26 = v33;
  sub_1004B8460((uint64_t)v8, v33, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v26 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460(v26, (uint64_t)v34, type metadata accessor for CRLSpringLayerAnimation);
  *v27 = 0x4040000000000000;
  sub_1004B84A4(v26, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v36;
  sub_1004B8460((uint64_t)v27, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v35;
  v35[3] = v3;
  v29[4] = &off_1012A12B8;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460(v28, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v38[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v38[4] = sub_100553914();
  v38[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v30, v38[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v38, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v38);
  return sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B741B4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _BYTE v39[264];
  uint64_t v40[32];
  char v41;

  v37 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - v7;
  __chkstk_darwin(v9);
  v35 = (uint64_t)&v34 - v10;
  __chkstk_darwin(v11);
  v36 = (uint64_t *)((char *)&v34 - v12);
  __chkstk_darwin(v13);
  v38 = (uint64_t)&v34 - v14;
  v15 = *a1;
  if (qword_1013DDD38 != -1)
    swift_once(&qword_1013DDD38, sub_100B65E88);
  v16 = objc_msgSend((id)qword_101480DD0, "CGColor");
  if (qword_1013DDD40 != -1)
    swift_once(&qword_1013DDD40, sub_100B65F14);
  v17 = objc_msgSend((id)qword_101480DD8, "CGColor");
  v40[0] = (uint64_t)v16;
  v40[1] = (uint64_t)v17;
  v41 = 28;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v18 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v19 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v20 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v21 = qword_10147FD88;
  v22 = objc_msgSend(v15, "layer");
  v23 = sub_10057E090(v40, (uint64_t)v39);
  UUID.init()(v23);
  v24 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v24);
  v25 = &v5[v3[7]];
  v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  v27(&v5[v3[8]], 1, 1, v26);
  swift_unknownObjectWeakAssign(v24, v22);

  sub_1004E9198(v39, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v18;
  *((_QWORD *)v5 + 1) = v19;
  *((_QWORD *)v5 + 2) = v20;
  *((_QWORD *)v5 + 3) = v21;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v40);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v35;
  sub_1004B8460((uint64_t)v8, v35, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v36;
  sub_1004B8460(v28, (uint64_t)v36, type metadata accessor for CRLSpringLayerAnimation);
  *v29 = 0x4040000000000000;
  sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
  v30 = v38;
  sub_1004B8460((uint64_t)v29, v38, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v30 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLSpringLayerAnimation);
  v31 = v37;
  v37[3] = v3;
  v31[4] = &off_1012A12B8;
  v32 = sub_10050D1B0(v31);
  sub_1004B8460(v30, (uint64_t)v32, type metadata accessor for CRLSpringLayerAnimation);
  v40[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v40[4] = sub_100553914();
  v40[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v32, v40[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v40, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v40);
  return sub_1004B84A4(v30, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B7461C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[264];
  uint64_t v38[32];
  char v39;

  v35 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  __chkstk_darwin(v9);
  v33 = (uint64_t)&v32 - v10;
  __chkstk_darwin(v11);
  v34 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v13);
  v36 = (uint64_t)&v32 - v14;
  v15 = *a1;
  v38[0] = 0x3F0000003F000000;
  v39 = 22;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v16 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v17 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v18 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v19 = qword_10147FD88;
  v20 = objc_msgSend(v15, "layer");
  v21 = sub_10057E090(v38, (uint64_t)v37);
  UUID.init()(v21);
  v22 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v22);
  v23 = &v5[v3[7]];
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  v25(&v5[v3[8]], 1, 1, v24);
  swift_unknownObjectWeakAssign(v22, v20);

  sub_1004E9198(v37, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v17;
  *((_QWORD *)v5 + 2) = v18;
  *((_QWORD *)v5 + 3) = v19;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v38);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v26 = v33;
  sub_1004B8460((uint64_t)v8, v33, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v26 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460(v26, (uint64_t)v34, type metadata accessor for CRLSpringLayerAnimation);
  *v27 = 0x4040000000000000;
  sub_1004B84A4(v26, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v36;
  sub_1004B8460((uint64_t)v27, v36, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v28 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v35;
  v35[3] = v3;
  v29[4] = &off_1012A12B8;
  v30 = sub_10050D1B0(v29);
  sub_1004B8460(v28, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v38[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v38[4] = sub_100553914();
  v38[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v30, v38[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v38, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v38);
  return sub_1004B84A4(v28, type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100B74A00@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE v38[264];
  uint64_t v39[32];
  char v40;

  v36 = a2;
  v3 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v9);
  v34 = (uint64_t)&v33 - v10;
  __chkstk_darwin(v11);
  v35 = (uint64_t *)((char *)&v33 - v12);
  __chkstk_darwin(v13);
  v37 = (uint64_t)&v33 - v14;
  v15 = *a1;
  if (qword_1013DDD48 != -1)
    swift_once(&qword_1013DDD48, sub_100B65F28);
  v16 = qword_101480DE0;
  if (qword_1013DDD50 != -1)
    swift_once(&qword_1013DDD50, sub_100B65F38);
  v39[0] = v16;
  v39[1] = qword_101480DE8;
  v40 = 24;
  if (qword_1013DD410 != -1)
    swift_once(&qword_1013DD410, sub_1008D3D08);
  v17 = qword_10147FD70;
  if (qword_1013DD418 != -1)
    swift_once(&qword_1013DD418, sub_1008D3D18);
  v18 = qword_10147FD78;
  if (qword_1013DD420 != -1)
    swift_once(&qword_1013DD420, sub_1008D3D24);
  v19 = qword_10147FD80;
  if (qword_1013DD428 != -1)
    swift_once(&qword_1013DD428, sub_1008D3D34);
  v20 = qword_10147FD88;
  v21 = objc_msgSend(v15, "layer");
  v22 = sub_10057E090(v39, (uint64_t)v38);
  UUID.init()(v22);
  v23 = &v5[v3[6]];
  swift_unknownObjectWeakInit(v23);
  v24 = &v5[v3[7]];
  v25 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  v26(&v5[v3[8]], 1, 1, v25);
  swift_unknownObjectWeakAssign(v23, v21);

  sub_1004E9198(v38, v5 + 40);
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v19;
  *((_QWORD *)v5 + 3) = v20;
  *((_QWORD *)v5 + 38) = 0;
  *((_DWORD *)v5 + 78) = 131586;
  sub_1004EA730(v39);
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  *((_QWORD *)v8 + 2) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLSpringLayerAnimation);
  v27 = v34;
  sub_1004B8460((uint64_t)v8, v34, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v27 + 24) = 0x4075E00000000000;
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpringLayerAnimation);
  v28 = v35;
  sub_1004B8460(v27, (uint64_t)v35, type metadata accessor for CRLSpringLayerAnimation);
  *v28 = 0x4040000000000000;
  sub_1004B84A4(v27, type metadata accessor for CRLSpringLayerAnimation);
  v29 = v37;
  sub_1004B8460((uint64_t)v28, v37, type metadata accessor for CRLSpringLayerAnimation);
  *(_QWORD *)(v29 + 8) = 0x3FF0000000000000;
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLSpringLayerAnimation);
  v30 = v36;
  v36[3] = v3;
  v30[4] = &off_1012A12B8;
  v31 = sub_10050D1B0(v30);
  sub_1004B8460(v29, (uint64_t)v31, type metadata accessor for CRLSpringLayerAnimation);
  v39[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  v39[4] = sub_100553914();
  v39[0] = swift_allocObject(&unk_1012961C0, 332, 7);
  sub_100720EB4((uint64_t)v31, v39[0] + 16);
  *(_BYTE *)(sub_1004CB9AC((uint64_t)v39, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100D26E34(v39);
  return sub_1004B84A4(v29, type metadata accessor for CRLSpringLayerAnimation);
}

id sub_100B74E40()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  double v8;

  v0 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v0, "begin");
  objc_msgSend(v0, "setDisableActions:", 1);
  v1 = sub_100B67084();
  objc_msgSend(v1, "setHidden:", 0);

  v2 = sub_100B67090();
  objc_msgSend(v2, "setHidden:", 0);

  v3 = sub_100B67084();
  v4 = objc_msgSend(v3, "layer");

  if (v4)
  {
    LODWORD(v5) = 0;
    objc_msgSend(v4, "setOpacity:", v5);

  }
  v6 = sub_100B67090();
  v7 = objc_msgSend(v6, "layer");

  if (v7)
  {
    LODWORD(v8) = 0;
    objc_msgSend(v7, "setOpacity:", v8);

  }
  return objc_msgSend(v0, "commit");
}

void sub_100B74F54(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t j;
  id v34;
  void *v35;
  uint64_t v36;

  v10 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v10, "begin");
  objc_msgSend(v10, "setDisableActions:", 1);
  v11 = sub_100B67084();
  objc_msgSend(v11, "setHidden:", 1);

  v12 = sub_100B67090();
  objc_msgSend(v12, "setHidden:", 1);

  v13 = sub_100B67084();
  v14 = objc_msgSend(v13, "layer");

  objc_msgSend(v14, "setFrame:", a2, a3, a4, a5);
  v15 = sub_100B67090();
  v16 = objc_msgSend(v15, "layer");

  objc_msgSend(v16, "setFrame:", a2, a3, a4, a5);
  v17 = sub_100B67084();
  v18 = objc_msgSend(v17, "layer");

  if (v18)
  {
    v19 = objc_msgSend(v18, "sublayers");

    if (v19)
    {
      v20 = sub_1004B8930(0, (unint64_t *)&qword_1013E7790, CALayer_ptr);
      v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

      if ((unint64_t)v21 >> 62)
      {
        if (v21 < 0)
          v26 = v21;
        else
          v26 = v21 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v21);
        v22 = _CocoaArrayWrapper.endIndex.getter(v26);
        if (v22)
          goto LABEL_5;
      }
      else
      {
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v21);
        if (v22)
        {
LABEL_5:
          if (v22 < 1)
          {
            __break(1u);
            goto LABEL_33;
          }
          for (i = 0; i != v22; ++i)
          {
            if ((v21 & 0xC000000000000001) != 0)
              v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
            else
              v24 = *(id *)(v21 + 8 * i + 32);
            v25 = v24;
            objc_msgSend(v24, "removeFromSuperlayer");

          }
        }
      }
      swift_bridgeObjectRelease_n(v21, 2);
    }
  }
  v27 = sub_100B67090();
  v28 = objc_msgSend(v27, "layer");

  if (!v28)
    goto LABEL_31;
  v29 = objc_msgSend(v28, "sublayers");

  if (!v29)
    goto LABEL_31;
  v30 = sub_1004B8930(0, (unint64_t *)&qword_1013E7790, CALayer_ptr);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  if (!((unint64_t)v31 >> 62))
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v31);
    if (v32)
      goto LABEL_20;
LABEL_30:
    swift_bridgeObjectRelease_n(v31, 2);
LABEL_31:
    objc_msgSend(v10, "commit");
    *(_BYTE *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState)
             + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 0;
    return;
  }
  if (v31 < 0)
    v36 = v31;
  else
    v36 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v32 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (!v32)
    goto LABEL_30;
LABEL_20:
  if (v32 >= 1)
  {
    for (j = 0; j != v32; ++j)
    {
      if ((v31 & 0xC000000000000001) != 0)
        v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v31);
      else
        v34 = *(id *)(v31 + 8 * j + 32);
      v35 = v34;
      objc_msgSend(v34, "removeFromSuperlayer");

    }
    goto LABEL_30;
  }
LABEL_33:
  __break(1u);
}

id sub_100B75438(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  char *v8;
  id v9;
  char v10;
  uint64_t Strong;
  void *v12;
  void *v13;
  id v14;
  id v15;
  objc_super v17;

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController.PlatformView();
  v7 = objc_msgSendSuper2(&v17, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtCC8Freeform32CRLScenesNavigatorViewController12PlatformView_owningViewController]);
      if (Strong)
      {
        v12 = (void *)Strong;
        v13 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController);

        if (v13)
        {
          v14 = objc_msgSend(v13, "parentViewController");

          if (v14)
          {
            v15 = objc_msgSend(v14, "view");

            if (v15)
            {
              v7 = objc_msgSend(v15, "hitTest:withEvent:", a1, a2, a3);

            }
          }
        }
      }
    }
  }
  return v7;
}

id sub_100B75640(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLScenesNavigatorViewController.PlatformView);
}

id sub_100B75728()
{
  return sub_1004DFAE4(0, type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton);
}

void sub_100B75774()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState);
  KeyPath = swift_getKeyPath(&unk_100F28F38);
  v4 = swift_getKeyPath(&unk_100F28F60);
  v5 = v2;
  static Published.subscript.getter(&v10, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  v6 = v10;

  if (v6)
  {
    v7 = *(void **)(v0 + v1);
    v8 = swift_getKeyPath(&unk_100F28F38);
    v9 = swift_getKeyPath(&unk_100F28F60);
    v10 = 0;
    static Published.subscript.setter(&v10, v7, v8, v9);
  }
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController()
{
  return objc_opt_self(_TtC8Freeform32CRLScenesNavigatorViewController);
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController.PlatformView()
{
  return objc_opt_self(_TtCC8Freeform32CRLScenesNavigatorViewController12PlatformView);
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton()
{
  return objc_opt_self(_TtCC8Freeform32CRLScenesNavigatorViewControllerP33_05C0AAD711D75A114ED1933B2A36B55D36NoIntrinsicContentSizePlatformButton);
}

void sub_100B7590C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F29010);
  v5 = swift_getKeyPath(&unk_100F29038);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_100B75988(char *a1)
{
  sub_1007115A0(*a1);
}

uint64_t sub_100B759AC()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

void sub_100B75AB0(void *a1)
{
  id v2;
  id v3;

  sub_100B664C8();
  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsUpdateConstraints");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B75B0C()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

double sub_100B75C08(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

uint64_t sub_100B75C28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100B75C4C()
{
  return sub_100B74E40();
}

uint64_t sub_100B75C54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_100B75C78()
{
  uint64_t v0;

  sub_100B74F54(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

void sub_100B75CA0()
{
  uint64_t v0;

  sub_100B6B720(*(void **)(v0 + 16));
}

double sub_100B75CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100B75CB8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100B75CC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100B75CE4(uint64_t a1)
{
  uint64_t v1;

  sub_100B66CE4(a1, v1);
}

void sub_100B75CEC()
{
  uint64_t v0;

  sub_100B66C90(v0);
}

uint64_t sub_100B75CF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100B75D1C(char *a1)
{
  sub_1007115A0(*a1);
}

void sub_100B75D40()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = &v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_boardViewController]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView] = 0;
  v2 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView;
  v3 = type metadata accessor for CRLShadowView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3, v4)), "init");
  v5 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLScenesNavigatorViewController.swift", 47, 2, 204, 0);
  __break(1u);
}

id sub_100B760F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardSelection();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLBoardSelection()
{
  return objc_opt_self(_TtC8Freeform17CRLBoardSelection);
}

double *sub_100B76144()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  double *result;
  double *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double *v24;
  double v25;
  double *v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v51 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101407258);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  v56 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v55 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (uint64_t)&v47 - v10;
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v57 = (uint64_t)&v47 - v17;
  result = (double *)objc_msgSend(v1, "collectionView", v16);
  if (result)
  {
    v19 = result;
    v20 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v20)
    {
      v21 = type metadata accessor for IndexPath(0);
      v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

      v23 = v1;
      v24 = (double *)sub_100BB19EC(v22, (uint64_t)v23);
      swift_bridgeObjectRelease(v22);

      v25 = v24[2];
      if (v25 != 0.0)
        goto LABEL_4;
    }
    else
    {
      v24 = _swiftEmptyArrayStorage;
      v25 = _swiftEmptyArrayStorage[2];
      if (v25 != 0.0)
      {
LABEL_4:
        v26 = v24;
        v27 = (uint64_t)v24
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        v54 = *(_QWORD *)(v12 + 72);
        v48 = v26;
        swift_bridgeObjectRetain(v26);
        v28 = _swiftEmptyArrayStorage;
        v49 = v11;
        do
        {
          v29 = v57;
          sub_1004B8460(v27, v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_1004B8460(v29, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v14, v11) == 2)
          {
            v30 = &v14[*(int *)(v7 + 48)];
            v31 = *(_QWORD *)v30;
            v52 = *((_QWORD *)v30 + 1);
            v53 = v31;
            v32 = (uint64_t)v14;
            v33 = v25;
            v34 = v28;
            v35 = v14;
            v36 = v51;
            sub_1004B84E0(v32, v51, type metadata accessor for CRLBoardIdentifier);
            v37 = v7;
            v38 = &v6[*(int *)(v7 + 48)];
            v39 = v36;
            v14 = v35;
            v28 = v34;
            v25 = v33;
            sub_1004B84E0(v39, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
            v40 = 0;
            v41 = v52;
            *(_QWORD *)v38 = v53;
            *((_QWORD *)v38 + 1) = v41;
            v7 = v37;
            v11 = v49;
          }
          else
          {
            sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
            v40 = 1;
          }
          v42 = v56;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v6, v40, 1, v7);
          sub_1004B84A4(v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v6, 1, v7) == 1)
          {
            sub_1004CB800((uint64_t)v6, &qword_101407258);
          }
          else
          {
            v43 = v50;
            sub_1004C4938((uint64_t)v6, v50, (uint64_t *)&unk_1013EA630);
            sub_1004C4938(v43, v55, (uint64_t *)&unk_1013EA630);
            if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
              v28 = (double *)sub_100D10FB8(0, *((_QWORD *)v28 + 2) + 1, 1, (unint64_t)v28);
            v45 = *((_QWORD *)v28 + 2);
            v44 = *((_QWORD *)v28 + 3);
            v46 = (uint64_t)v28;
            if (v45 >= v44 >> 1)
              v46 = sub_100D10FB8(v44 > 1, v45 + 1, 1, (unint64_t)v28);
            *(_QWORD *)(v46 + 16) = v45 + 1;
            v28 = (double *)v46;
            sub_1004C4938(v55, v46+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v45, (uint64_t *)&unk_1013EA630);
          }
          v27 += v54;
          --*(_QWORD *)&v25;
        }
        while (v25 != 0.0);
        swift_bridgeObjectRelease_n(v48, 2);
        return v28;
      }
    }
    swift_bridgeObjectRelease(v24);
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

double sub_100B765A0@<D0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  id v45;
  void (*v46)(uint64_t *, void *, int);
  void *rawValue;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void (*v59)(uint64_t *);
  _QWORD *v60;
  id v61;
  void (*v62)(uint64_t *, void *, int);
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __n128 v69;
  uint64_t v70;
  __n128 v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t i;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  unsigned __int8 v86;
  void *v87;
  id v88;
  uint64_t v89;
  char *v90;
  void *v91;
  uint64_t v92;
  Swift::OpaquePointer v93;
  id v94;
  NSString v95;
  NSString v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  char *v104;
  uint64_t v105;
  double result;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BOOL4 v121;
  int v122;
  int v123;
  _QWORD *v124;
  uint64_t v125;
  int v126;
  char *v127;
  uint64_t v128;
  id v129;
  Swift::OpaquePointer v130;
  void *v131;
  uint64_t v132;
  char v133;
  _QWORD *v134;

  v125 = a5;
  v126 = a4;
  v122 = a3;
  v120 = a6;
  v114 = type metadata accessor for Date(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1004B804C(&qword_1013FA370);
  __chkstk_darwin(v117);
  v118 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013FA378);
  v11 = __chkstk_darwin(v10);
  v116 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v124 = (uint64_t *)((char *)&v108 - v14);
  __chkstk_darwin(v13);
  v16 = (char *)&v108 - v15;
  v17 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v108 - v22;
  v128 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v119 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v25 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = a1;
  v123 = a2;
  v121 = a2 != 0;
  v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v27 = sub_100B0000C();
  v28 = sub_1004B7878((unint64_t *)&qword_101407360, type metadata accessor for CRLBoardLibraryViewModel.Item, (uint64_t)&unk_100F2A520);
  v29 = swift_bridgeObjectRetain(a1);
  v127 = v25;
  v110 = v26;
  NSDiffableDataSourceSnapshot.init()(&type metadata for CRLBoardLibraryFolderViewModel.GroupSection, v26, v27, v28, v29);
  sub_1004CB7BC(v125, (uint64_t)v16, &qword_1013FA378);
  v30 = *(_QWORD *)(v18 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v30)(v16, 1, v17) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_1013FA378);
  }
  else
  {
    sub_1004B84E0((uint64_t)v16, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v31 = sub_1004B804C(&qword_1013E1790);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 5, 5, v31);
    sub_100BD0ED4((uint64_t)v23, (uint64_t)v21);
    v33 = v32;
    sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v33 & 1) != 0)
    {
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1012655F8);
      sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      LODWORD(v34) = 1;
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  LODWORD(v34) = 0;
LABEL_7:
  v35 = v134;
  v36 = v129;
  swift_bridgeObjectRetain(v35);
  v38 = sub_100BB2AF0(v37, (uint64_t)v36);
  swift_bridgeObjectRelease(v35);
  v129 = v36;

  v111 = v38[2];
  if (!v111)
  {
    v44 = v123;
    goto LABEL_24;
  }
  v109 = v21;
  v115 = v34;
  v39 = sub_1004B804C(&qword_1013E1790);
  v40 = (uint64_t)v124;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v124, 4, 5, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v40, 0, 1, v17);
  v41 = v118;
  v42 = v118 + *(int *)(v117 + 48);
  sub_1004CB7BC(v125, v118, &qword_1013FA378);
  sub_1004CB7BC(v40, v42, &qword_1013FA378);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v30)(v41, 1, v17) != 1)
  {
    v34 = v116;
    sub_1004CB7BC(v41, v116, &qword_1013FA378);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v30)(v42, 1, v17) != 1)
    {
      v101 = (uint64_t)v109;
      sub_1004B84E0(v42, (uint64_t)v109, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100BD0ED4(v34, v101);
      v103 = v102;
      sub_1004B84A4(v34, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1004B84A4(v101, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1004CB800(v41, &qword_1013FA378);
      sub_1004CB800((uint64_t)v124, &qword_1013FA378);
      LOBYTE(v34) = v115;
      if ((v103 & 1) != 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    sub_1004B84A4(v34, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    LOBYTE(v34) = v115;
LABEL_14:
    sub_1004CB800(v41, &qword_1013FA370);
    sub_1004CB800((uint64_t)v124, &qword_1013FA378);
LABEL_15:
    sub_100757E04(&_mh_execute_header, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 288, "Board invitation items should only appear in the Shared folder.", 63, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2u, 288, (uint64_t)"Board invitation items should only appear in the Shared folder.", 63, 2u);
    goto LABEL_16;
  }
  v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(v42, 1, v17);
  LOBYTE(v34) = v115;
  if (v43 != 1)
    goto LABEL_14;
  sub_1004CB800(v41, &qword_1013FA378);
  sub_1004CB800((uint64_t)v124, &qword_1013FA378);
LABEL_16:
  v44 = v123;
  if ((_BYTE)v123)
  {
    v130._rawValue = v38;
    if (v123 == 1)
    {
      v45 = v129;
      swift_bridgeObjectRetain(v38);
      v46 = sub_100BB476C;
    }
    else
    {
      v45 = v129;
      swift_bridgeObjectRetain(v38);
      v46 = sub_100BB62D4;
    }
    sub_100BB7924(&v130, v45, v126 & 1, (void (*)(_QWORD *, id, _QWORD))v46);

  }
  else
  {
    v130._rawValue = v38;
    swift_bridgeObjectRetain(v38);
    sub_100BA27F8(&v130, v126 & 1);
  }
  rawValue = v130._rawValue;
  v48 = v127;
  v30 = v128;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1012656B8);
  v130._rawValue = 0;
  v131 = 0;
  v132 = 0;
  v133 = -2;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(rawValue, &v130, v30);
  swift_bridgeObjectRelease(rawValue);
  swift_bridgeObjectRetain(v38);
  sub_100BAD21C((unint64_t *)&v134, (uint64_t)v38);
  v50 = v134[2];
  if (v50 < v49)
    goto LABEL_78;
  sub_100CFF064(v49, v50);
LABEL_24:
  v51 = v122 & v121;
  swift_bridgeObjectRelease(v38);
  if (!v51)
  {
    v60 = v134;
    if (v44)
    {
      v130._rawValue = v134;
      swift_bridgeObjectRetain_n(v134, 2);
      v61 = v129;
      if (v44 == 1)
        v62 = sub_100BB476C;
      else
        v62 = sub_100BB62D4;
      sub_100BB7924(&v130, v61, v126 & 1, (void (*)(_QWORD *, id, _QWORD))v62);
      swift_bridgeObjectRelease(v60);

      v91 = v130._rawValue;
      if ((v34 & 1) != 0)
        goto LABEL_74;
    }
    else
    {
      v130._rawValue = v134;
      swift_bridgeObjectRetain_n(v134, 2);
      sub_100BA27F8(&v130, v126 & 1);
      swift_bridgeObjectRelease(v60);
      v91 = v130._rawValue;
      if ((v34 & 1) != 0)
      {
LABEL_74:
        v130._rawValue = 0;
        v131 = 0;
        v132 = 0;
        v133 = -2;
        v104 = v127;
        v105 = v128;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v91, &v130, v128);
        swift_bridgeObjectRelease(v91);
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101265638);
        (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v120, v104, v105);
        goto LABEL_75;
      }
    }
    v92 = sub_1004B804C(&qword_1013E7878);
    v93._rawValue = (void *)swift_allocObject(v92, 64, 7);
    *((_OWORD *)v93._rawValue + 1) = xmmword_100EF5E40;
    if (v111)
    {
      v94 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v95 = String._bridgeToObjectiveC()();
      v96 = String._bridgeToObjectiveC()();
      v97 = objc_msgSend(v94, "localizedStringForKey:value:table:", v95, v96, 0);

      v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
      v100 = v99;

    }
    else
    {
      v98 = 0;
      v100 = 0;
    }
    *((_QWORD *)v93._rawValue + 4) = v98;
    *((_QWORD *)v93._rawValue + 5) = v100;
    *((_QWORD *)v93._rawValue + 6) = 0;
    *((_BYTE *)v93._rawValue + 56) = 0;
    NSDiffableDataSourceSnapshot.appendSections(_:)(v93);
    swift_bridgeObjectRelease(v93._rawValue);
    goto LABEL_74;
  }
  v52 = v134;
  if (v44 != 2)
  {
    v63 = v129;
    swift_bridgeObjectRetain(v52);
    v65 = sub_100BB1D64(v64, (uint64_t)v63);
    swift_bridgeObjectRelease(v52);

    if (v65[2] != v52[2])
    {
      v30 = (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)";
      sub_100757E04(&_mh_execute_header, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 336, "Mismatched dates! Most likely, this is caused by one or more of the folder items being something other than a board. Items may appear in the wrong section.", 155, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2u, 336, (uint64_t)"Mismatched dates! Most likely, this is caused by one or more of the folder items being something other than a board. Items may appear in the wrong section.", 155, 2u);
    }
    swift_bridgeObjectRetain(v52);
    v67 = sub_100BACAE8(v66, (uint64_t)v65);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v52);
    v68 = sub_1005215D0(v67);
    v69 = swift_release(v67);
    v70 = (uint64_t)v112;
    static Date.now.getter(v69);
    v57 = sub_1009E8C48((uint64_t)v68, v70);
    v71 = swift_bridgeObjectRelease(v68);
    (*(void (**)(uint64_t, uint64_t, __n128))(v113 + 8))(v70, v114, v71);
    if ((v126 & 1) == 0)
      goto LABEL_30;
    goto LABEL_37;
  }
  swift_bridgeObjectRetain(v134);
  v53 = (void *)sub_1008D7D28((uint64_t)_swiftEmptyArrayStorage);
  v130._rawValue = v53;
  v54 = v52[2];
  if (v54)
  {
    v55 = *(_QWORD *)(v110 - 8);
    v56 = (uint64_t)v52 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
    v30 = *(_QWORD *)(v55 + 72);
    swift_bridgeObjectRetain(v52);
    do
    {
      sub_100B780A0((unint64_t *)&v130, v56, (uint64_t)v129);
      v56 += v30;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease_n(v52, 2);
    v57 = v130._rawValue;
    if ((v126 & 1) == 0)
      goto LABEL_30;
LABEL_37:
    swift_bridgeObjectRetain_n(v57, 2);
    v72 = sub_100600274((uint64_t)v57);
    swift_bridgeObjectRelease(v57);
    v130._rawValue = v72;
    v59 = sub_100BA57B8;
    goto LABEL_38;
  }
  v57 = v53;
  swift_bridgeObjectRelease(v52);
  if ((v126 & 1) != 0)
    goto LABEL_37;
LABEL_30:
  swift_bridgeObjectRetain_n(v57, 2);
  v58 = sub_100600274((uint64_t)v57);
  swift_bridgeObjectRelease(v57);
  v130._rawValue = v58;
  v59 = sub_100BA38EC;
LABEL_38:
  sub_100BA2888((uint64_t *)&v130, (uint64_t (*)(_QWORD *))v59);
  swift_bridgeObjectRelease(v57);
  rawValue = v130._rawValue;
  v48 = v127;
  NSDiffableDataSourceSnapshot.appendSections(_:)(v130);
  swift_bridgeObjectRelease(rawValue);
  v73 = 0;
  v74 = v57[8];
  v124 = v57 + 8;
  v75 = 1 << *((_BYTE *)v57 + 32);
  v76 = -1;
  if (v75 < 64)
    v76 = ~(-1 << v75);
  v77 = v76 & v74;
  v125 = (unint64_t)(v75 + 63) >> 6;
  if ((v76 & v74) == 0)
    goto LABEL_42;
LABEL_41:
  v78 = __clz(__rbit64(v77));
  v77 &= v77 - 1;
  for (i = v78 | (v73 << 6); ; i = __clz(__rbit64(v81)) + (v73 << 6))
  {
    v83 = v57[6] + 32 * i;
    rawValue = *(void **)v83;
    v84 = *(void **)(v83 + 8);
    v85 = *(_QWORD *)(v83 + 16);
    v86 = *(_BYTE *)(v83 + 24);
    v87 = *(void **)(v57[7] + 8 * i);
    v130._rawValue = v87;
    swift_bridgeObjectRetain_n(v87, 2);
    v88 = v129;
    sub_1004DD884(rawValue, v84, v85, v86);
    sub_100BB7924(&v130, v88, v126 & 1, (void (*)(_QWORD *, id, _QWORD))sub_100BB476C);
    swift_bridgeObjectRelease(v87);

    v30 = (uint64_t)v130._rawValue;
    v130._rawValue = rawValue;
    v131 = v84;
    v132 = v85;
    v133 = v86;
    sub_1004DD884(rawValue, v84, v85, v86);
    v48 = v127;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v30, &v130, v128);
    swift_release(v30);
    sub_1004DD8B8(rawValue, v84, v85, v86);
    sub_1004DD8B8(rawValue, v84, v85, v86);
    if (v77)
      goto LABEL_41;
LABEL_42:
    if (__OFADD__(v73++, 1))
    {
      __break(1u);
      goto LABEL_77;
    }
    if (v73 >= v125)
      goto LABEL_61;
    v81 = v124[v73];
    if (!v81)
      break;
LABEL_54:
    v77 = (v81 - 1) & v81;
  }
  v82 = v73 + 1;
  if (v73 + 1 >= v125)
    goto LABEL_61;
  v81 = v124[v82];
  if (v81)
    goto LABEL_53;
  v82 = v73 + 2;
  if (v73 + 2 >= v125)
    goto LABEL_61;
  v81 = v124[v82];
  if (v81)
    goto LABEL_53;
  v82 = v73 + 3;
  if (v73 + 3 >= v125)
    goto LABEL_61;
  v81 = v124[v82];
  if (v81)
  {
LABEL_53:
    v73 = v82;
    goto LABEL_54;
  }
  v82 = v73 + 4;
  if (v73 + 4 < v125)
  {
    v81 = v124[v82];
    if (!v81)
    {
      while (1)
      {
        v73 = v82 + 1;
        if (__OFADD__(v82, 1))
          break;
        if (v73 >= v125)
          goto LABEL_61;
        v81 = v124[v73];
        ++v82;
        if (v81)
          goto LABEL_54;
      }
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);

      while (1)
      {
        swift_release(v130._rawValue);
        __break(1u);
        v107 = v130._rawValue;
        swift_bridgeObjectRelease(v48);
        swift_bridgeObjectRelease(v107);
        __break(1u);
        swift_release(rawValue);
        __break(1u);

      }
    }
    goto LABEL_53;
  }
LABEL_61:
  swift_release(v57);
  v90 = v127;
  v89 = v128;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101265678);
  (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v120, v90, v89);
  v60 = v134;
LABEL_75:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v60).n128_u64[0];
  return result;
}

uint64_t sub_100B773E4(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(char *, char *, uint64_t);
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  int v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  void (*v64)(_QWORD, _QWORD, _QWORD, _QWORD);

  v55 = a4;
  v63 = a3;
  v59 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v6 = __chkstk_darwin(v59);
  v57 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v54 - v8;
  v10 = sub_1004B804C(&qword_1013E04F0);
  v11 = __chkstk_darwin(v10);
  v56 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - v13;
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  v61 = v16;
  v17 = __chkstk_darwin(v15);
  v54 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v58 = (char *)&v54 - v19;
  v20 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v54 - v24;
  v26 = type metadata accessor for CRLBoardIdentifier(0);
  v27 = __chkstk_darwin(v26);
  v62 = (uint64_t)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v30 = (char *)&v54 - v29;
  sub_1004B8460(a1, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v25, v20) != 2)
  {
    v34 = (uint64_t)v25;
LABEL_7:
    sub_1004B84A4(v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v35 = 0;
    return v35 & 1;
  }
  v31 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v25[*(int *)(v31 + 48) + 8]);
  sub_1004B84E0((uint64_t)v25, (uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(a2, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v23, v20) != 2)
  {
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
    v34 = (uint64_t)v23;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v23[*(int *)(v31 + 48) + 8]);
  v32 = v62;
  sub_1004B84E0((uint64_t)v23, v62, type metadata accessor for CRLBoardIdentifier);
  v33 = v64;
  sub_100C9F8F8((uint64_t)v30, (uint64_t)v9);
  if (v33)
  {
    swift_errorRelease(v33);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v14, 1, 1, v60);
LABEL_9:
    sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
    v41 = (uint64_t)v14;
LABEL_10:
    sub_1004CB800(v41, &qword_1013E04F0);
    v35 = 0;
    return v35 & 1;
  }
  v36 = v60;
  v37 = (_QWORD *)v61;
  v38 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v38(v14, &v9[*(int *)(v59 + 24)], v60);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata);
  v39 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7];
  v39(v14, 0, 1, v36);
  v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v37[6];
  if (v40(v14, 1, v36) == 1)
    goto LABEL_9;
  v64 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v39;
  v43 = (void (*)(char *, char *, uint64_t))v37[4];
  v43(v58, v14, v36);
  v44 = v57;
  sub_100C9F8F8(v32, v57);
  v63 = v43;
  v45 = v56;
  v38(v56, (char *)(v44 + *(int *)(v59 + 24)), v36);
  sub_1004B84A4(v44, type metadata accessor for CRLBoardViewModelMetadata);
  v64(v45, 0, 1, v36);
  if (v40(v45, 1, v36) == 1)
  {
    v46 = v62;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v36);
    sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
    v41 = (uint64_t)v45;
    goto LABEL_10;
  }
  v47 = v54;
  v63(v54, v45, v36);
  v48 = v61;
  v49 = v62;
  v50 = v58;
  if ((v55 & 1) != 0)
  {
    v51 = v58;
    v52 = v47;
  }
  else
  {
    v51 = v47;
    v52 = v58;
  }
  v35 = static Date.< infix(_:_:)(v51, v52);
  v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v47, v36);
  v53(v50, v36);
  sub_1004B84A4(v49, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
  return v35 & 1;
}

uint64_t sub_100B77948(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  char v39;
  uint64_t result;
  _BYTE *v41;
  uint64_t v42;
  unsigned int (*v43)(_BYTE *, uint64_t, uint64_t);
  uint64_t v44;
  id v45;
  uint64_t v46;
  _BYTE *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  char v59;
  uint64_t v60;
  _BYTE v61[12];
  int v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v62 = a4;
  v68 = a3;
  v70 = a2;
  v5 = sub_1004B804C(&qword_1013F5478);
  v6 = __chkstk_darwin(v5);
  v64 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v63 = &v61[-v8];
  v9 = sub_1004B804C(&qword_1013E4690);
  v10 = __chkstk_darwin(v9);
  v65 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v13 = &v61[-v12];
  v69 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v14 = *(_QWORD *)(v69 - 8);
  v15 = __chkstk_darwin(v69);
  v67 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v66 = &v61[-v17];
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v19 = __chkstk_darwin(v18);
  v21 = &v61[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v23 = &v61[-v22];
  v24 = type metadata accessor for CRLBoardIdentifier(0);
  v25 = __chkstk_darwin(v24);
  v27 = &v61[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  v29 = &v61[-v28];
  sub_1004B8460(a1, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v23, v18) != 2)
  {
    v34 = (uint64_t)v23;
LABEL_7:
    sub_1004B84A4(v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v39 = 0;
    return v39 & 1;
  }
  v30 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v23[*(int *)(v30 + 48) + 8]);
  sub_1004B84E0((uint64_t)v23, (uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(v70, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v21, v18) != 2)
  {
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    v34 = (uint64_t)v21;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v21[*(int *)(v30 + 48) + 8]);
  v31 = (uint64_t)v21;
  v32 = (uint64_t)v27;
  sub_1004B84E0(v31, (uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
  v33 = v75;
  sub_100C9F8F8((uint64_t)v29, (uint64_t)v13);
  if (v33)
  {
    swift_errorRelease(v33);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v13, 1, 1, v69);
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    sub_1004CB800((uint64_t)v13, &qword_1013E4690);
    v39 = 0;
    return v39 & 1;
  }
  v35 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v36 = v69;
  v35(v13, 0, 1, v69);
  v37 = v66;
  sub_1004B84E0((uint64_t)v13, (uint64_t)v66, type metadata accessor for CRLBoardViewModelMetadata);
  v38 = v65;
  sub_100C9F8F8(v32, (uint64_t)v65);
  v35(v38, 0, 1, v36);
  sub_1004B84E0((uint64_t)v38, (uint64_t)v67, type metadata accessor for CRLBoardViewModelMetadata);
  v41 = v63;
  sub_1004CB7BC((uint64_t)&v37[*(int *)(v36 + 28)], (uint64_t)v63, &qword_1013F5478);
  v42 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v43 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48);
  if (v43(v41, 1, v42) == 1)
  {
    sub_1004CB800((uint64_t)v41, &qword_1013F5478);
    v75 = 0;
    v44 = 0;
  }
  else
  {
    if (*(_QWORD *)v41)
    {
      v45 = *(id *)v41;
      v75 = sub_10063B4E0();
      v44 = v46;

    }
    else
    {
      v44 = *((_QWORD *)v41 + 2);
      v75 = *((_QWORD *)v41 + 1);
      swift_bridgeObjectRetain(v44);
    }
    sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  }
  v47 = v64;
  sub_1004CB7BC((uint64_t)&v67[*(int *)(v69 + 28)], (uint64_t)v64, &qword_1013F5478);
  if (v43(v47, 1, v42) == 1)
  {
    sub_1004CB800((uint64_t)v47, &qword_1013F5478);
    if (v44)
    {
      swift_bridgeObjectRelease(v44);
LABEL_35:
      sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLBoardViewModelMetadata);
      sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
      v39 = 1;
      return v39 & 1;
    }
LABEL_29:
    v56 = *(int *)(v69 + 24);
    v57 = &v37[v56];
    v58 = &v67[v56];
    if ((v62 & 1) != 0)
      v59 = static Date.< infix(_:_:)(v57, v58);
    else
      v59 = static Date.> infix(_:_:)(v57, v58);
    v39 = v59;
    sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    return v39 & 1;
  }
  if (*(_QWORD *)v47)
  {
    v48 = *(id *)v47;
    v49 = sub_10063B4E0();
    v51 = v50;

  }
  else
  {
    v49 = *((_QWORD *)v47 + 1);
    v51 = *((_QWORD *)v47 + 2);
    swift_bridgeObjectRetain(v51);
  }
  sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  if (!v44)
  {
    swift_bridgeObjectRelease(v51);
LABEL_31:
    sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLBoardViewModelMetadata);
    sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    v39 = 0;
    return v39 & 1;
  }
  if ((v62 & 1) != 0)
  {
    v73 = v75;
    v74 = v44;
    v71 = v49;
    v72 = v51;
    v52 = sub_1004D292C();
    v53 = StringProtocol.localizedStandardCompare<A>(_:)(&v71, &type metadata for String, &type metadata for String, v52, v52);
    swift_bridgeObjectRelease(v44);
    v54 = v51;
  }
  else
  {
    v73 = v49;
    v74 = v51;
    v71 = v75;
    v72 = v44;
    v55 = sub_1004D292C();
    v53 = StringProtocol.localizedStandardCompare<A>(_:)(&v71, &type metadata for String, &type metadata for String, v55, v55);
    swift_bridgeObjectRelease(v51);
    v54 = v44;
  }
  swift_bridgeObjectRelease(v54);
  switch(v53)
  {
    case 1:
      goto LABEL_31;
    case 0:
      goto LABEL_29;
    case -1:
      goto LABEL_35;
  }
  type metadata accessor for ComparisonResult(0);
  v73 = v53;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v60, &v73, v60, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_100B780A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t *v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  _QWORD *v38;
  id v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  unint64_t v50;

  v46 = a3;
  v48 = a1;
  v5 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v5);
  v7 = (id *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v45 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v49 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a2;
  sub_1004B8460(a2, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v15, v11) != 2)
    return sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v19 = sub_1004B804C((uint64_t *)&unk_1013EA630);
  swift_bridgeObjectRelease(*(_QWORD *)&v15[*(int *)(v19 + 48) + 8]);
  sub_1004B84E0((uint64_t)v15, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
  sub_100C9F8F8((uint64_t)v18, (uint64_t)v10);
  v20 = v3;
  if (v3)
  {
    swift_errorRelease(v3);
    v21 = 0;
    v20 = 0;
    v22 = v48;
  }
  else
  {
    sub_1004CB7BC((uint64_t)&v10[*(int *)(v8 + 28)], (uint64_t)v7, &qword_1013F5478);
    v24 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v7, 1, v24) == 1)
    {
      sub_1004CB800((uint64_t)v7, &qword_1013F5478);
      v21 = 0;
    }
    else
    {
      v21 = *v7;
      v25 = *v7;
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    v22 = v48;
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardViewModelMetadata);
  }
  sub_1004B8460(v47, v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v26 = v21;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
  v50 = *v22;
  v28 = v50;
  *v22 = 0x8000000000000000;
  v30 = sub_100843E70((uint64_t)v21, 0, 0, 128);
  v31 = *(_QWORD *)(v28 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_22:
    v28 = sub_100D0FAA0(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
    *(_QWORD *)(v20 + 8 * v30) = v28;
    goto LABEL_18;
  }
  v34 = v29;
  if (*(_QWORD *)(v28 + 24) >= v33)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1008333B4();
      v28 = v50;
    }
  }
  else
  {
    sub_100821930(v33, isUniquelyReferenced_nonNull_native);
    v28 = v50;
    v35 = sub_100843E70((uint64_t)v21, 0, 0, 128);
    if ((v34 & 1) != (v36 & 1))
    {
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
      __break(1u);
      return result;
    }
    v30 = v35;
  }
  v48 = 0;
  v37 = *v22;
  *v22 = v28;
  swift_bridgeObjectRelease(v37);
  v38 = (_QWORD *)*v22;
  swift_bridgeObjectRetain(*v22);
  if ((v34 & 1) == 0)
  {
    sub_10082BD04(v30, (uint64_t)v21, 0, 0, 128, (uint64_t)_swiftEmptyArrayStorage, v38);
    v39 = v26;
  }
  v20 = v38[7];
  swift_bridgeObjectRelease(v38);
  v28 = *(_QWORD *)(v20 + 8 * v30);
  v40 = swift_isUniquelyReferenced_nonNull_native(v28);
  *(_QWORD *)(v20 + 8 * v30) = v28;
  if ((v40 & 1) == 0)
    goto LABEL_22;
LABEL_18:
  v42 = *(_QWORD *)(v28 + 16);
  v41 = *(_QWORD *)(v28 + 24);
  if (v42 >= v41 >> 1)
  {
    v28 = sub_100D0FAA0(v41 > 1, v42 + 1, 1, v28);
    *(_QWORD *)(v20 + 8 * v30) = v28;
  }
  v43 = v49;
  *(_QWORD *)(v28 + 16) = v42 + 1;
  sub_1004B84E0(v43, v28+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v42, type metadata accessor for CRLBoardLibraryViewModel.Item);

  return sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100B78510(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  char *v26;
  char v27[16];
  uint64_t v28;
  _QWORD *v29;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
  v28 = a1;
  swift_bridgeObjectRetain(v8);
  sub_1007C2808(1, (uint64_t (*)(id))sub_1005A1254, (uint64_t)v27, v8);
  v10 = v9;
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (!v10)
    return 0;
  v12 = objc_msgSend(v10, "children", v11);
  v13 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if (!((unint64_t)v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(v14);
    v18 = _swiftEmptyArrayStorage;
LABEL_19:
    v24 = v2;
    v22 = sub_100BB2ED4((uint64_t)v18, (uint64_t)v24);

    swift_bridgeObjectRelease(v18);
    return (uint64_t)v22;
  }
  if (v14 < 0)
    v23 = v14;
  else
    v23 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v15 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v14);
  if (!v15)
    goto LABEL_18;
LABEL_4:
  v29 = _swiftEmptyArrayStorage;
  result = sub_1006008AC(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v25 = v10;
    v26 = v2;
    v17 = 0;
    v18 = v29;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
        sub_1004B8460(v19 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_unknownObjectRelease(v19);
      }
      else
      {
        sub_1004B8460(*(_QWORD *)(v14 + 8 * v17 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v29 = v18;
      v21 = v18[2];
      v20 = v18[3];
      if (v21 >= v20 >> 1)
      {
        sub_1006008AC(v20 > 1, v21 + 1, 1);
        v18 = v29;
      }
      ++v17;
      v18[2] = v21 + 1;
      sub_1004B84E0((uint64_t)v7, (uint64_t)v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    while (v15 != v17);
    swift_bridgeObjectRelease(v14);
    v10 = v25;
    v2 = v26;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

id sub_100B787A8()
{
  return sub_100B800E4(&OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource, (uint64_t (*)(void))sub_100B787BC);
}

id sub_100B787BC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  NSString *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  uint64_t v61;
  __n128 v62;
  char *v63;
  char *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = sub_1004B804C(&qword_101407390);
  v2 = *(_QWORD *)(v1 - 8);
  v70 = v1;
  v71 = v2;
  v3 = __chkstk_darwin(v1);
  v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v63 - v5;
  v68 = sub_1004B804C(&qword_101407398);
  v7 = *(_QWORD *)(v68 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v68);
  __chkstk_darwin(v9);
  v11 = (char *)&v63 - v10;
  v12 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v0);
  v13 = _s8GridItemCMa(0);
  v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100BBA780, v12, v13, v14);
  v15 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v0);
  v16 = _s11iOSListItemCMa(0);
  v69 = v6;
  UICollectionView.CellRegistration.init(handler:)(sub_100BBA7A0, v15, v16, v14);
  result = objc_msgSend(v0, "collectionView");
  v65 = result;
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v18 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v0);
  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v63 = v11;
  v20 = v68;
  v19((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v68);
  v64 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v70;
  v22 = v71;
  v23 = v66;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v66, v69, v70);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = *(unsigned __int8 *)(v22 + 80);
  v27 = (v8 + v26 + v25) & ~v26;
  v28 = swift_allocObject(&unk_101296AB8, v27 + v67, v24 | v26 | 7);
  *(_QWORD *)(v28 + 16) = v18;
  v67 = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v28 + v25, v64, v20);
  v29 = v23;
  v30 = v0;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v28 + v27, v29, v21);
  v31 = objc_allocWithZone((Class)sub_1004B804C(&qword_1014073A0));
  v32 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v65, sub_100BBA884, v28);
  result = objc_msgSend(v30, "collectionView");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v33 = result;
  v34 = _s13SectionHeaderCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v34, v35);
  v72 = v34;
  v37 = UICollectionElementKindSectionHeader;
  v38 = sub_1004B804C(&qword_1014073A8);
  String.init<A>(describing:)(&v72, v38);
  v40 = v39;
  v41 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v37, v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

  result = objc_msgSend(v30, "collectionView");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v42 = result;
  v43 = _s13GridSeparatorCMa();
  v45 = swift_getObjCClassFromMetadata(v43, v44);
  v46 = String._bridgeToObjectiveC()();
  v72 = v43;
  v47 = sub_1004B804C(&qword_1014073B0);
  String.init<A>(describing:)(&v72, v47);
  v49 = v48;
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v45, v46, v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  result = objc_msgSend(v30, "collectionView");
  v51 = v71;
  if (result)
  {
    v52 = result;
    v53 = _s18iCloudStatusFooterCMa();
    v55 = swift_getObjCClassFromMetadata(v53, v54);
    v56 = String._bridgeToObjectiveC()();
    v72 = v53;
    v57 = sub_1004B804C(&qword_1014073B8);
    String.init<A>(describing:)(&v72, v57);
    v59 = v58;
    v60 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v55, v56, v60, swift_bridgeObjectRelease(v59).n128_f64[0]);

    v61 = swift_allocObject(&unk_101296568, 24, 7);
    swift_unknownObjectWeakInit(v61 + 16, v30);
    v62 = swift_retain(v61);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_100BBA910, v61, v62);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v69, v70);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v68);
    swift_release(v61);
    return (id)v32;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100B78CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver) = a1;
  swift_unknownObjectRetain(a1);
  if (v4)
  {
    *(_QWORD *)&v5 = swift_unknownObjectRetain(a1).n128_u64[0];
    if ((objc_msgSend(v6, "isEqual:", v3, v5) & 1) == 0)
    {
      if (!v3)
        return swift_unknownObjectRelease_n(a1, 2);
      sub_100757E04(&_mh_execute_header, (uint64_t)"renameDeleteObserver", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 74, "Created a new renameDeleteObserver before the old one was torn down", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"renameDeleteObserver", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 74, (uint64_t)"Created a new renameDeleteObserver before the old one was torn down", 67, 2u);
    }
    swift_unknownObjectRelease(v3);
    return swift_unknownObjectRelease_n(a1, 2);
  }
  swift_unknownObjectRelease(v3);
  return swift_unknownObjectRelease(a1);
}

void sub_100B78E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  objc_class *v9;
  unint64_t v10;
  uint64_t v11;
  objc_class *v12;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
  v8 = v6 == a1 && v7 == a2;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a1, a2, 0) & 1) == 0)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete) = 0;
    sub_100B78EE8();
    sub_1006BA6B4();
    sub_100B7E16C(0);
    v9 = sub_100B8013C();
    v12 = v9;
    v10 = v5[1];
    v11 = *v5 & 0xFFFFFFFFFFFFLL;
    if ((v10 & 0x2000000000000000) != 0)
      v11 = HIBYTE(v10) & 0xF;
    -[objc_class setEnabled:](v9, "setEnabled:", v11 == 0);

  }
}

double sub_100B78EE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double result;
  uint64_t v17;
  _QWORD *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v8 = (void *)static OS_dispatch_queue.main.getter();
  v9 = swift_allocObject(&unk_1012964F0, 24, 7);
  *(_QWORD *)(v9 + 16) = v0;
  aBlock[4] = sub_100BB2AE8;
  v20 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101296508;
  v10 = _Block_copy(aBlock);
  v11 = v0;
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v15 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

void sub_100B790E0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  Class isa;
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[176];

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCAB8 != -1)
    swift_once(&qword_1013DCAB8, sub_100583F20);
  v3 = qword_10147EA28;
  v4 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v4, v13);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v11 = 0x63726165534C5243;
  v12 = 0xEF676E6972745368;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = v6;
  v11 = 0xD000000000000011;
  v12 = 0x8000000100FD9E90;
  swift_bridgeObjectRetain(v6);
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  v8 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete);
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = v8;
  v9 = sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, 0, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

}

void sub_100B792A4()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int v9;
  _QWORD *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  int v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  id v29;
  void *v30;
  Class isa;
  _BYTE *v32;
  id v33;
  id v34;
  unint64_t v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v0, "isViewLoaded"))
    return;
  v9 = objc_msgSend(v0, "isEditing");
  v10 = _swiftEmptyArrayStorage;
  v11 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v12 = objc_msgSend(v1, "collectionView");
    if (!v12)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v13 = v12;
    v14 = objc_msgSend(v12, "indexPathsForSelectedItems");

    if (v14)
    {
      v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v2);

    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
    }
  }
  v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout;
  v16 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  v40 = v5;
  if (v16 == 1)
  {
    v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout];
    if (!v17)
      goto LABEL_14;
    v10 = v17;
    v18 = objc_msgSend(v1, "collectionView");
    if (v18)
    {
LABEL_13:
      v20 = v18;
      objc_msgSend(v18, "setCollectionViewLayout:animated:", v10, 0, v40);

      goto LABEL_15;
    }
    __break(1u);
  }
  v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout];
  if (v19)
  {
    v10 = v19;
    v18 = objc_msgSend(v1, "collectionView");
    if (!v18)
    {
LABEL_32:
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
LABEL_14:
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateToSelectedLayoutStyle()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 133, "Unable to set collection view layout.", 37, 2u, (uint64_t)v10);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToSelectedLayoutStyle()", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 133, (uint64_t)"Unable to set collection view layout.", 37, 2u);
LABEL_15:
  v21 = objc_msgSend(v1, "collectionView", v40);
  if (!v21)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v22 = v21;
  objc_msgSend(v21, "reloadData");

  v23 = sub_100B800D0();
  v43 = v1;
  sub_100BB79F0(v23, v1[v15]);

  v24 = v11[2];
  v41 = v11;
  if (v24)
  {
    v25 = (char *)v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v42 = *(_QWORD *)(v3 + 72);
    v26 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v27 = v40;
    while (1)
    {
      v26(v8, v25, v2);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v28(v8, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v27, v8, v2);
      v29 = objc_msgSend(v43, "collectionView");
      if (!v29)
      {
        __break(1u);
        goto LABEL_30;
      }
      v30 = v29;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v30, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
      v25 += v42;
      if (!--v24)
        goto LABEL_23;
    }
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_23:
    v28(v8, 1, 1, v2);
  }
  swift_bridgeObjectRelease(v41);
  v32 = v43;
  v33 = sub_100B7FDBC();

  if (v33)
    sub_100B7FA54();
  if (v32[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] == 1)
  {
    v34 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v35 = sub_100DA9FF0();
    v36 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v35);
    sub_100BCB498();
    v38 = v37;
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "setObject:forKey:", v36, v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  }
}

void sub_100B7976C(_BOOL8 a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  unint64_t v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _BYTE v34[112];

  v4 = v3;
  v6 = (_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  v8 = (v7 != a1) | *(unsigned __int8 *)(v3
                                       + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions
                                       + 1) ^ a2;
  if (!((v7 != a1) | (*(unsigned __int8 *)(v3
                                          + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions
                                          + 1) ^ a2) & 1)
    && ((*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) ^ a3) & 1) == 0)
  {
    return;
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions))
    v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2);
  else
    v9 = 0;
  *v6 = a1;
  v6[1] = a2 & 1;
  v6[2] = a3 & 1;
  v10 = a1 & a3;
  if (v10 == 1)
  {
    if (!(v8 & 1 | ((v9 & 1) == 0)))
      goto LABEL_20;
  }
  else if (((v8 | v9) & 1) == 0)
  {
LABEL_20:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v24, v34);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v26 = sub_1009E353C();
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v29;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    sub_100BCAD68();
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v29;
    *(_QWORD *)(inited + 72) = v30;
    *(_QWORD *)(inited + 80) = v31;
    sub_100757E04(&_mh_execute_header, (uint64_t)"persistedSortOptions", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 180, "Tried to apply \"%@\" sort option, but it's disallowed in the \"%@\" folder.", 72, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"persistedSortOptions", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 180, (uint64_t)"Tried to apply \"%@\" sort option, but it's disallowed in the \"%@\" folder.", 72, 2u);
    swift_setDeallocating(inited);
    v32 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v32);
    return;
  }
  sub_100BCD968();
  v12 = v11;
  v13 = sub_100C9DFEC(a1, v11);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_20;
  if (v10 != v9)
  {
    v14 = sub_100B79B6C();
    v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout;
    v16 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout) = v14;
    v17 = v14;

    if (!*(_QWORD *)(v4 + v15))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"listLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 221, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"listLayout", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 221, (uint64_t)"invalid nil value found", 23, 2u);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLiOSFolderGridViewController.swift", 45, 2, 221, 0);
      __break(1u);
      return;
    }
    if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) & 1) == 0)
      sub_100B792A4();

  }
  sub_100B7E16C(1);
  v18 = sub_100B7FDBC();

  if (v18)
    sub_100B7FA54();
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
  {
    v33 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v19 = sub_100DA9FF0();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    sub_100BCB498();
    v22 = v21;
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "setObject:forKey:", isa, v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  }
}

char *sub_100B79B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);

  v6 = sub_100B787A8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v7);

  v9 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v2, v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  swift_unknownObjectRetain(v10);
  swift_bridgeObjectRetain(v9);
  v12 = sub_100BB2AF0(v11, v10);
  swift_unknownObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  v13 = v12[2];
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v9);
  v14 = swift_allocObject(&unk_101296568, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  v15 = objc_allocWithZone((Class)type metadata accessor for CRLCollectionViewCompositionalLayout());
  v16 = (char *)sub_1005B861C(1, v13 != 0, (uint64_t)sub_100BBA578, v14, 0);
  if (qword_1013DDD60 != -1)
    swift_once(&qword_1013DDD60, sub_100B9E798);
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = qword_101406D08;
  return v16;
}

uint64_t sub_100B79D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  v5 = sub_1004B804C(&qword_1013E1790);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v3, 4, 5, v5);
  sub_100BD0ED4(v4, (uint64_t)v3);
  v8 = v7;
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v8 & 1) != 0
    || (v6(v3, 3, 5, v5),
        sub_100BD0ED4(v4, (uint64_t)v3),
        v10 = v9,
        sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder),
        (v10 & 1) != 0))
  {
    v11 = 0;
  }
  else
  {
    v6(v3, 5, 5, v5);
    sub_100BD0ED4(v4, (uint64_t)v3);
    v13 = v12;
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v11 = v13 ^ 1;
  }
  return v11 & 1;
}

